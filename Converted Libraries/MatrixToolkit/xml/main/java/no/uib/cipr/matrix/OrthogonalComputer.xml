<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix">
        <class name="OrthogonalComputer" line="23">
            <javadoc line="23">
                Base class for the orthogonal matrix decompositions (QR, RQ, LQ, and QL)                
            </javadoc>
            <declaration name="Q" type="DenseMatrix" line="28"/>
            <javadoc line="28">
                The orthogonal matrix                
            </javadoc>
            <declaration name="L" type="LowerTriangDenseMatrix" line="33"/>
            <javadoc line="33">
                Lower triangular factor. May not be present                
            </javadoc>
            <declaration name="R" type="UpperTriangDenseMatrix" line="38"/>
            <javadoc line="38">
                Upper triangular factor. May not be present                
            </javadoc>
            <declaration name="m" type="int" line="43"/>
            <javadoc line="43">
                Factorisation sizes                
            </javadoc>
            <declaration name="work" type="double[]" line="48"/>
            <javadoc line="48">
                Work arrays                
            </javadoc>
            <declaration name="tau" type="double[]" line="53"/>
            <javadoc line="53">
                Scales for the reflectors                
            </javadoc>
            <javadoc line="58">
                Constructor for OrthogonalComputer                
                <param>
                    mNumber of rows                    
                </param>
                <param>
                    nNumber of columns                    
                </param>
                <param>
                    upperTrue for storing an upper triangular factor, false for a lower
                      triangular factor                    
                </param>
            </javadoc>
            <method name="OrthogonalComputer" type="constructor" line="69">
                <params>
                    <param name="m" type="int"/>
                    <param name="n" type="int"/>
                    <param name="upper" type="boolean"/>
                </params>
                <scope line="77"/>
                <scope line="80"/>
            </method>
            <method name="factor" type="OrthogonalComputer" line="86"/>
            <javadoc line="86">
                Computes an orthogonal decomposition                
                <param>
                    AMatrix to decompose. Overwritten on exit. Pass a copy to avoid
                      this                    
                </param>
                <return>
                    The current decomposition                    
                </return>
            </javadoc>
            <javadoc line="96">
                Returns the orthogonal part of the factorization                
            </javadoc>
            <method name="getQ" type="DenseMatrix" line="99"/>
        </class>
    </source>