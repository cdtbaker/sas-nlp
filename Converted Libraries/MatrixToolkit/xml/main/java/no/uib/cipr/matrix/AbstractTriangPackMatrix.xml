<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix">
        <import package="com.github.fommil.netlib.BLAS"/>
        <import package="com.github.fommil.netlib.LAPACK"/>
        <import package="org.netlib.util.intW"/>
        <import package="java.util.Iterator"/>
        <class name="AbstractTriangPackMatrix" line="6">
            <extends class="AbstractPackMatrix"/>
            <javadoc line="6">
                Partial implementation of a triangular, packed matrix                
            </javadoc>
            <declaration name="uplo" type="UpLo" line="10"/>
            <javadoc line="10">
                Upper or lower triangular                
            </javadoc>
            <declaration name="diag" type="Diag" line="14"/>
            <javadoc line="14">
                If the matrix is unit diagonal or not unit                
            </javadoc>
            <javadoc line="18">
                Constructor for AbstractTriangPackMatrix                
            </javadoc>
            <method name="AbstractTriangPackMatrix" type="constructor" line="21">
                <params>
                    <param name="n" type="int"/>
                    <param name="uplo" type="UpLo"/>
                    <param name="diag" type="Diag"/>
                </params>
            </method>
            <javadoc line="26">
                Constructor for AbstractTriangPackMatrix                
            </javadoc>
            <method name="AbstractTriangPackMatrix" type="constructor" line="29">
                <params>
                    <param name="A" type="Matrix"/>
                    <param name="uplo" type="UpLo"/>
                    <param name="diag" type="Diag"/>
                </params>
            </method>
            <javadoc line="32">
                Constructor for AbstractTriangPackMatrix                
            </javadoc>
            <method name="AbstractTriangPackMatrix" type="constructor" line="35">
                <params>
                    <param name="A" type="Matrix"/>
                    <param name="deep" type="boolean"/>
                    <param name="uplo" type="UpLo"/>
                    <param name="diag" type="Diag"/>
                </params>
            </method>
            <method name="mult" type="Vector" line="40">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="x" type="Vector"/>
                    <param name="y" type="Vector"/>
                </params>
                <declaration name="yd" type="double[]" line="43"/>
            </method>
            <method name="transMult" type="Vector" line="48">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="x" type="Vector"/>
                    <param name="y" type="Vector"/>
                </params>
                <declaration name="yd" type="double[]" line="51"/>
            </method>
            <method name="solve" type="Matrix" line="56">
                <params>
                    <param name="B" type="Matrix"/>
                    <param name="X" type="Matrix"/>
                </params>
            </method>
            <method name="solve" type="Vector" line="59">
                <params>
                    <param name="b" type="Vector"/>
                    <param name="x" type="Vector"/>
                </params>
                <declaration name="B" type="DenseMatrix" line="60"/>
            </method>
            <method name="transSolve" type="Matrix" line="64">
                <params>
                    <param name="B" type="Matrix"/>
                    <param name="X" type="Matrix"/>
                </params>
            </method>
            <method name="transSolve" type="Vector" line="67">
                <params>
                    <param name="b" type="Vector"/>
                    <param name="x" type="Vector"/>
                </params>
                <declaration name="B" type="DenseMatrix" line="68"/>
            </method>
            <method name="solve" type="Matrix" line="72">
                <params>
                    <param name="B" type="Matrix"/>
                    <param name="X" type="Matrix"/>
                    <param name="trans" type="Transpose"/>
                </params>
                <declaration name="Xd" type="double[]" line="75"/>
                <declaration name="info" type="intW" line="77"/>
            </method>
            <method name="iterator" type="Iterator<MatrixEntry>" line="83"/>
            <class name="TriangPackMatrixIterator" line="86">
                <extends class="RefMatrixIterator"/>
                <method name="next" type="MatrixEntry" line="87">
                    <scope line="90"/>
                    <scope line="94">
                        <scope line="96"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>