<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix">
        <class name="LowerSPDDenseMatrix" line="2">
            <extends class="LowerSymmDenseMatrix"/>
            <javadoc line="2">
                Lower symmetrical positive definite dense matrix. Same layout as{@link no.uib.cipr.matrix.LowerSymmDenseMatrix LowerSymmDenseMatrix}. This
                  class does not enforce the SPD property, but serves as a tag so that more
                  efficient algorithms can be used in the solvers.                
            </javadoc>
            <javadoc line="8">
                Constructor for LowerSPDDenseMatrix                
                <param>
                    nSize of the matrix. Since the matrix must be square, this
                      equals both the number of rows and columns                    
                </param>
            </javadoc>
            <method name="LowerSPDDenseMatrix" type="constructor" line="13">
                <params>
                    <param name="n" type="int"/>
                </params>
            </method>
            <javadoc line="16">
                Constructor for LowerSPDDenseMatrix                
                <param>
                    AMatrix to copy. It must be a square matrix, and only the lower
                      triangular part is copied                    
                </param>
            </javadoc>
            <method name="LowerSPDDenseMatrix" type="constructor" line="21">
                <params>
                    <param name="A" type="Matrix"/>
                </params>
            </method>
            <javadoc line="24">
                Constructor for LowerSPDDenseMatrix                
                <param>
                    AMatrix to copy. It must be a square matrix, and only the lower
                      triangular part is copied                    
                </param>
                <param>
                    deepFalse for a shallow copy, else it'll be a deep copy. For
                      shallow copies, <code>A</code> must be a dense matrix                    
                </param>
            </javadoc>
            <method name="LowerSPDDenseMatrix" type="constructor" line="31">
                <params>
                    <param name="A" type="Matrix"/>
                    <param name="deep" type="boolean"/>
                </params>
            </method>
            <method name="copy" type="LowerSPDDenseMatrix" line="34"/>
            <method name="solve" type="Matrix" line="37">
                <params>
                    <param name="B" type="Matrix"/>
                    <param name="X" type="Matrix"/>
                </params>
            </method>
        </class>
    </source>