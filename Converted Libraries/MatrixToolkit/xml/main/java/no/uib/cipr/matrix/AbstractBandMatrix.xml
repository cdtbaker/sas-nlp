<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix">
        <import package="java.util.Arrays"/>
        <import package="java.util.Iterator"/>
        <class name="AbstractBandMatrix" line="4">
            <extends class="AbstractMatrix"/>
            <javadoc line="4">
                Partial implementation of a banded matrix                
            </javadoc>
            <declaration name="data" type="double[]" line="8"/>
            <javadoc line="8">
                Matrix data                
            </javadoc>
            <declaration name="kl" type="int" line="12"/>
            <javadoc line="12">
                Number of upper and lower diagonals                
            </javadoc>
            <declaration name="n" type="int" line="16"/>
            <javadoc line="16">
                Size of the matrix. It is always square                
            </javadoc>
            <javadoc line="20">
                Constructor for AbstractBandMatrix                
                <param>
                    nSize of the matrix. Since the matrix must be square, this
                      equals both the number of rows and columns                    
                </param>
                <param>
                    klNumber of diagonals below the main diagonal                    
                </param>
                <param>
                    kuNumber of diagonals above the main diagonal                    
                </param>
            </javadoc>
            <method name="AbstractBandMatrix" type="constructor" line="27">
                <params>
                    <param name="n" type="int"/>
                    <param name="kl" type="int"/>
                    <param name="ku" type="int"/>
                </params>
            </method>
            <javadoc line="35">
                Constructor for AbstractBandMatrix                
                <param>
                    AMatrix to copy from                    
                </param>
                <param>
                    klNumber of diagonals below the main diagonal                    
                </param>
                <param>
                    kuNumber of diagonals above the main diagonal                    
                </param>
            </javadoc>
            <method name="AbstractBandMatrix" type="constructor" line="41">
                <params>
                    <param name="A" type="Matrix"/>
                    <param name="kl" type="int"/>
                    <param name="ku" type="int"/>
                </params>
            </method>
            <javadoc line="44">
                Constructor for AbstractBandMatrix                
                <param>
                    AMatrix to copy from                    
                </param>
                <param>
                    klNumber of diagonals below the main diagonal                    
                </param>
                <param>
                    kuNumber of diagonals above the main diagonal                    
                </param>
                <param>
                    deepTrue if a deep copy is made. For a shallow copy,
                      <code>A</code> must be a banded matrix                    
                </param>
            </javadoc>
            <method name="AbstractBandMatrix" type="constructor" line="52">
                <params>
                    <param name="A" type="Matrix"/>
                    <param name="kl" type="int"/>
                    <param name="ku" type="int"/>
                    <param name="deep" type="boolean"/>
                </params>
                <scope line="59"/>
            </method>
            <javadoc line="65">
                Returns the matrix contents                
            </javadoc>
            <method name="getData" type="double[]" line="68"/>
            <method name="add" type="void" line="71">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="75">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="get" type="double" line="79">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <javadoc line="83">
                Returns the number of lower diagonals                
            </javadoc>
            <method name="numSubDiagonals" type="int" line="86"/>
            <javadoc line="89">
                Returns the number of upper diagonals                
            </javadoc>
            <method name="numSuperDiagonals" type="int" line="92"/>
            <javadoc line="95">
                Returns true if the given indices are within the band                
            </javadoc>
            <method name="inBand" type="boolean" line="98">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <javadoc line="101">
                Checks that the indices are within the band                
            </javadoc>
            <method name="checkBand" type="void" line="104">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <javadoc line="107">
                Checks the row and column indices, and returns the linear data index                
            </javadoc>
            <method name="getIndex" type="int" line="110">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <javadoc line="114">
                Set this matrix equal to the given matrix                
            </javadoc>
            <method name="copy" type="void" line="117">
                <params>
                    <param name="A" type="Matrix"/>
                </params>
            </method>
            <method name="set" type="Matrix" line="120">
                <params>
                    <param name="B" type="Matrix"/>
                </params>
                <declaration name="Bb" type="AbstractBandMatrix" line="123"/>
                <declaration name="Bd" type="double[]" line="126"/>
            </method>
            <method name="zero" type="Matrix" line="131"/>
            <method name="iterator" type="Iterator<MatrixEntry>" line="135"/>
            <class name="BandMatrixIterator" line="138">
                <extends class="RefMatrixIterator"/>
                <javadoc line="138">
                    Iterator over a band matrix                    
                </javadoc>
                <declaration name="lkl" type="int" line="142"/>
                <javadoc line="142">
                    Matrix bandwidths. Cannot be taken directly from the matrix since
                      that breaks iterating over symmetrical matrices                    
                </javadoc>
                <method name="BandMatrixIterator" type="constructor" line="147">
                    <params>
                        <param name="lkl" type="int"/>
                        <param name="lku" type="int"/>
                    </params>
                </method>
                <method name="BandMatrixIterator" type="constructor" line="151"/>
                <method name="next" type="MatrixEntry" line="154">
                    <scope line="157"/>
                </method>
            </class>
        </class>
    </source>