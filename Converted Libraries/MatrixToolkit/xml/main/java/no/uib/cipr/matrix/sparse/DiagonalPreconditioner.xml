<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix.sparse">
        <import package="no.uib.cipr.matrix.DenseVector"/>
        <import package="no.uib.cipr.matrix.Matrix"/>
        <import package="no.uib.cipr.matrix.Vector"/>
        <class name="DiagonalPreconditioner" line="5">
            <implements interface="Preconditioner"/>
            <javadoc line="5">
                Diagonal preconditioner. Uses the inverse of the diagonal as preconditioner                
            </javadoc>
            <declaration name="invdiag" type="double[]" line="9"/>
            <javadoc line="9">
                This contains the inverse of the diagonal                
            </javadoc>
            <javadoc line="13">
                Constructor for DiagonalPreconditioner                
                <param>
                    nProblem size (number of rows)                    
                </param>
            </javadoc>
            <method name="DiagonalPreconditioner" type="constructor" line="17">
                <params>
                    <param name="n" type="int"/>
                </params>
            </method>
            <method name="apply" type="Vector" line="20">
                <params>
                    <param name="b" type="Vector"/>
                    <param name="x" type="Vector"/>
                </params>
                <declaration name="xd" type="double[]" line="22"/>
                <declaration name="bd" type="double[]" line="23"/>
            </method>
            <method name="transApply" type="Vector" line="27">
                <params>
                    <param name="b" type="Vector"/>
                    <param name="x" type="Vector"/>
                </params>
            </method>
            <method name="setMatrix" type="void" line="30">
                <params>
                    <param name="A" type="Matrix"/>
                </params>
                <scope line="32"/>
            </method>
        </class>
    </source>