<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix">
        <class name="LowerTriangPackMatrix" line="2">
            <extends class="AbstractTriangPackMatrix"/>
            <javadoc line="2">
                Lower triangular packed matrix. In contrast with{@link no.uib.cipr.matrix.LowerTriangDenseMatrix LowerTriangDenseMatrix},
                  this matrix exploits the sparsity by only storing about half the matrix. As
                  such, the triangular matrix
                  &lt;p&gt;
                  &lt;table border=&quot;1&quot;&gt;
                  &lt;tr&gt;
                  &lt;td&gt;a&lt;sub&gt;11&lt;/sub&gt;&lt;/td&gt;
                  &lt;td&gt;&amp;nbsp;&lt;/td&gt;
                  &lt;td&gt;&amp;nbsp;&lt;/td&gt;
                  &lt;td&gt;&amp;nbsp;&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;a&lt;sub&gt;21&lt;/sub&gt;&lt;/td&gt;
                  &lt;td&gt;a&lt;sub&gt;22&lt;/sub&gt;&lt;/td&gt;
                  &lt;td&gt;&amp;nbsp;&lt;/td&gt;
                  &lt;td&gt;&amp;nbsp;&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;a&lt;sub&gt;31&lt;/sub&gt;&lt;/td&gt;
                  &lt;td&gt;a&lt;sub&gt;32&lt;/sub&gt;&lt;/td&gt;
                  &lt;td&gt;a&lt;sub&gt;33&lt;/sub&gt;&lt;/td&gt;
                  &lt;td&gt;&amp;nbsp;&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;a&lt;sub&gt;41&lt;/sub&gt;&lt;/td&gt;
                  &lt;td&gt;a&lt;sub&gt;42&lt;/sub&gt;&lt;/td&gt;
                  &lt;td&gt;a&lt;sub&gt;43&lt;/sub&gt;&lt;/td&gt;
                  &lt;td&gt;a&lt;sub&gt;44&lt;/sub&gt;&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;/table&gt;
                  &lt;/p&gt;
                  &lt;p&gt;
                  is packed as follows:
                  &lt;/p&gt;
                  &lt;p&gt;
                  &lt;table border=&quot;1&quot;&gt;
                  &lt;tr&gt;
                  &lt;td&gt;a&lt;sub&gt;11&lt;/sub&gt;&lt;/td&gt;
                  &lt;td&gt;a&lt;sub&gt;21&lt;/sub&gt;&lt;/td&gt;
                  &lt;td&gt;a&lt;sub&gt;31&lt;/sub&gt;&lt;/td&gt;
                  &lt;td&gt;a&lt;sub&gt;41&lt;/sub&gt;&lt;/td&gt;
                  &lt;td&gt;a&lt;sub&gt;22&lt;/sub&gt;&lt;/td&gt;
                  &lt;td&gt;a&lt;sub&gt;32&lt;/sub&gt;&lt;/td&gt;
                  &lt;td&gt;a&lt;sub&gt;42&lt;/sub&gt;&lt;/td&gt;
                  &lt;td&gt;a&lt;sub&gt;33&lt;/sub&gt;&lt;/td&gt;
                  &lt;td&gt;a&lt;sub&gt;43&lt;/sub&gt;&lt;/td&gt;
                  &lt;td&gt;a&lt;sub&gt;44&lt;/sub&gt;&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;/table&gt;
                  &lt;/p&gt;                
            </javadoc>
            <javadoc line="55">
                Constructor for LowerTriangPackMatrix                
                <param>
                    nSize of the matrix. Since the matrix must be square, this
                      equals both the number of rows and columns                    
                </param>
            </javadoc>
            <method name="LowerTriangPackMatrix" type="constructor" line="60">
                <params>
                    <param name="n" type="int"/>
                </params>
            </method>
            <javadoc line="63">
                Constructor for LowerTriangPackMatrix                
                <param>
                    nSize of the matrix. Since the matrix must be square, this
                      equals both the number of rows and columns                    
                </param>
            </javadoc>
            <method name="LowerTriangPackMatrix" type="constructor" line="68">
                <params>
                    <param name="n" type="int"/>
                    <param name="diag" type="Diag"/>
                </params>
            </method>
            <javadoc line="71">
                Constructor for LowerTriangPackMatrix                
                <param>
                    AMatrix to copy contents from. Only the entries of the relevant
                      part are copied                    
                </param>
            </javadoc>
            <method name="LowerTriangPackMatrix" type="constructor" line="76">
                <params>
                    <param name="A" type="Matrix"/>
                </params>
            </method>
            <javadoc line="79">
                Constructor for LowerTriangPackMatrix                
                <param>
                    AMatrix to copy contents from. Only the entries of the relevant
                      part are copied                    
                </param>
                <param>
                    deepTrue if the copy is deep, else false (giving a shallow copy).
                      For shallow copies, <code>A</code> must be a packed matrix                    
                </param>
            </javadoc>
            <method name="LowerTriangPackMatrix" type="constructor" line="86">
                <params>
                    <param name="A" type="Matrix"/>
                    <param name="deep" type="boolean"/>
                </params>
            </method>
            <javadoc line="89">
                Constructor for LowerTriangPackMatrix                
                <param>
                    AMatrix to copy contents from. Only the entries of the relevant
                      part are copied                    
                </param>
                <param>
                    deepTrue if the copy is deep, else false (giving a shallow copy).
                      For shallow copies, <code>A</code> must be a packed matrix                    
                </param>
            </javadoc>
            <method name="LowerTriangPackMatrix" type="constructor" line="96">
                <params>
                    <param name="A" type="Matrix"/>
                    <param name="deep" type="boolean"/>
                    <param name="diag" type="Diag"/>
                </params>
            </method>
            <method name="add" type="void" line="99">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="103">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="get" type="double" line="107">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <javadoc line="111">
                Checks the row and column indices, and returns the linear data index                
            </javadoc>
            <method name="getIndex" type="int" line="114">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="copy" type="void" line="118">
                <params>
                    <param name="A" type="Matrix"/>
                </params>
            </method>
            <method name="copy" type="LowerTriangPackMatrix" line="121"/>
        </class>
    </source>