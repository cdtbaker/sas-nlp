<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix">
        <import package="com.github.fommil.netlib.LAPACK"/>
        <import package="org.netlib.util.intW"/>
        <class name="SymmBandEVD" line="27">
            <extends class="SymmEVD"/>
            <javadoc line="27">
                Computes eigenvalues of symmetrical, banded matrices                
            </javadoc>
            <declaration name="work" type="double[]" line="32"/>
            <javadoc line="32">
                Double work array                
            </javadoc>
            <declaration name="iwork" type="int[]" line="37"/>
            <javadoc line="37">
                Integer work array                
            </javadoc>
            <declaration name="uplo" type="UpLo" line="42"/>
            <javadoc line="42">
                Upper or lower part stored                
            </javadoc>
            <javadoc line="47">
                Sets up an eigenvalue decomposition for symmetrical, banded matrices.
                  Computes all eigenvalues and eigenvectors                
                <param>
                    nSize of the matrix                    
                </param>
                <param>
                    upperTrue if the upper part of the matrix is stored, and false if
                      the lower part of the matrix is stored instead                    
                </param>
            </javadoc>
            <method name="SymmBandEVD" type="constructor" line="57">
                <params>
                    <param name="n" type="int"/>
                    <param name="upper" type="boolean"/>
                </params>
            </method>
            <javadoc line="61">
                Sets up an eigenvalue decomposition for symmetrical, banded matrices                
                <param>
                    nSize of the matrix                    
                </param>
                <param>
                    upperTrue if the upper part of the matrix is stored, and false if
                      the lower part of the matrix is stored instead                    
                </param>
                <param>
                    vectorsTrue to compute the eigenvectors, false for just the
                      eigenvalues                    
                </param>
            </javadoc>
            <method name="SymmBandEVD" type="constructor" line="73">
                <params>
                    <param name="n" type="int"/>
                    <param name="upper" type="boolean"/>
                    <param name="vectors" type="boolean"/>
                </params>
                <comment line="78">
                    Find the needed workspace                    
                </comment>
                <comment line="85">
                    Allocate workspace                    
                </comment>
                <declaration name="worksize" type="double[]" line="79"/>
                <declaration name="iworksize" type="int[]" line="80"/>
                <declaration name="info" type="intW" line="81"/>
                <declaration name="lwork" type="int" line="86"/>
                <scope line="87">
                    <scope line="88"/>
                    <scope line="91"/>
                </scope>
                <scope line="95"/>
            </method>
            <javadoc line="106">
                Convenience method for computing the full eigenvalue decomposition of the
                  given matrix                
                <param>
                    AMatrix to factorize. The upper triangular part is extracted,
                      and the matrix is not modified                    
                </param>
                <param>
                    kdNumber of diagonals to extract                    
                </param>
                <return>
                    Newly allocated decomposition                    
                </return>
                <throws>
                    NotConvergedException                    
                </throws>
            </javadoc>
            <method name="factorize" type="SymmBandEVD" line="119">
                <params>
                    <param name="A" type="Matrix"/>
                    <param name="kd" type="int"/>
                </params>
            </method>
            <javadoc line="124">
                Computes the eigenvalue decomposition of the given matrix                
                <param>
                    AMatrix to factorize. Overwritten on return                    
                </param>
                <return>
                    The current eigenvalue decomposition                    
                </return>
                <throws>
                    NotConvergedException                    
                </throws>
            </javadoc>
            <method name="factor" type="SymmBandEVD" line="133">
                <params>
                    <param name="A" type="LowerSymmBandMatrix"/>
                </params>
            </method>
            <javadoc line="141">
                Computes the eigenvalue decomposition of the given matrix                
                <param>
                    AMatrix to factorize. Overwritten on return                    
                </param>
                <return>
                    The current eigenvalue decomposition                    
                </return>
                <throws>
                    NotConvergedException                    
                </throws>
            </javadoc>
            <method name="factor" type="SymmBandEVD" line="150">
                <params>
                    <param name="A" type="UpperSymmBandMatrix"/>
                </params>
            </method>
            <method name="factor" type="SymmBandEVD" line="159">
                <params>
                    <param name="A" type="Matrix"/>
                    <param name="data" type="double[]"/>
                    <param name="kd" type="int"/>
                </params>
                <declaration name="info" type="intW" line="163"/>
            </method>
        </class>
    </source>