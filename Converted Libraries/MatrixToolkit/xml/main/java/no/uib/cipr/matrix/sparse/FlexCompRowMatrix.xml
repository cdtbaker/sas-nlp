<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix.sparse">
        <import package="java.util.Arrays"/>
        <import package="java.util.Iterator"/>
        <import package="no.uib.cipr.matrix.AbstractMatrix"/>
        <import package="no.uib.cipr.matrix.DenseVector"/>
        <import package="no.uib.cipr.matrix.Matrix"/>
        <import package="no.uib.cipr.matrix.MatrixEntry"/>
        <import package="no.uib.cipr.matrix.Vector"/>
        <import package="no.uib.cipr.matrix.VectorEntry"/>
        <import package="no.uib.cipr.matrix.sparse.SuperIterator.SuperIteratorEntry"/>
        <class name="FlexCompRowMatrix" line="34">
            <extends class="AbstractMatrix"/>
            <javadoc line="34">
                Matrix stored row-wise into sparse vectors                
            </javadoc>
            <declaration name="rowD" type="SparseVector[]" line="39"/>
            <javadoc line="39">
                Matrix data                
            </javadoc>
            <javadoc line="44">
                Constructor for FlexCompRowMatrix                
                <param>
                    numRowsNumber of rows                    
                </param>
                <param>
                    numColumnsNumber of column                    
                </param>
            </javadoc>
            <method name="FlexCompRowMatrix" type="constructor" line="52">
                <params>
                    <param name="numRows" type="int"/>
                    <param name="numColumns" type="int"/>
                </params>
            </method>
            <javadoc line="60">
                Constructor for FlexCompRowMatrix                
                <param>
                    AMatrix to copy contents from                    
                </param>
                <param>
                    deepTrue for a deep copy, false for a reference copy. A reference
                      copy can only be made of an <code>FlexCompRowMatrix</code>                    
                </param>
            </javadoc>
            <method name="FlexCompRowMatrix" type="constructor" line="69">
                <params>
                    <param name="A" type="Matrix"/>
                    <param name="deep" type="boolean"/>
                </params>
                <scope line="73"/>
                <scope line="77">
                    <declaration name="Ar" type="FlexCompRowMatrix" line="78"/>
                </scope>
            </method>
            <javadoc line="84">
                Constructor for FlexCompRowMatrix                
                <param>
                    AMatrix to copy contents from. The copy will be deep                    
                </param>
            </javadoc>
            <method name="FlexCompRowMatrix" type="constructor" line="90">
                <params>
                    <param name="A" type="Matrix"/>
                </params>
            </method>
            <javadoc line="94">
                Returns the given row                
            </javadoc>
            <method name="getRow" type="SparseVector" line="97">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <javadoc line="101">
                Sets the given row equal the passed vector                
            </javadoc>
            <method name="setRow" type="void" line="104">
                <params>
                    <param name="i" type="int"/>
                    <param name="x" type="SparseVector"/>
                </params>
            </method>
            <method name="multAdd" type="Vector" line="112">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="x" type="Vector"/>
                    <param name="y" type="Vector"/>
                </params>
            </method>
            <method name="transMultAdd" type="Vector" line="122">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="x" type="Vector"/>
                    <param name="y" type="Vector"/>
                </params>
                <comment line="131">
                    y = 1/alpha * y                    
                </comment>
                <comment line="134">
                    y = A&apos;x + y                    
                </comment>
                <comment line="144">
                    y = alpha*y = alpha * A&apos;x + y                    
                </comment>
                <declaration name="xd" type="double[]" line="128"/>
                <scope line="135">
                    <declaration name="v" type="SparseVector" line="136"/>
                    <declaration name="index" type="int[]" line="137"/>
                    <declaration name="data" type="double[]" line="138"/>
                    <declaration name="length" type="int" line="139"/>
                </scope>
            </method>
            <method name="add" type="void" line="149">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="set" type="void" line="154">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="get" type="double" line="159">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="iterator" type="Iterator<MatrixEntry>" line="164"/>
            <method name="copy" type="Matrix" line="169"/>
            <method name="zero" type="FlexCompRowMatrix" line="174"/>
            <method name="set" type="Matrix" line="181">
                <params>
                    <param name="B" type="Matrix"/>
                </params>
                <declaration name="Bc" type="FlexCompRowMatrix" line="187"/>
            </method>
            <javadoc line="195">
                Tries to store the matrix as compactly as possible                
            </javadoc>
            <method name="compact" type="void" line="198"/>
            <class name="RowMatrixIterator" line="203">
                <implements interface="Iterator">
                    <type_params>
                        <type_param name="MatrixEntry"/>
                    </type_params>
                </implements>
                <javadoc line="203">
                    Iterator over a matrix stored vectorwise by rows                    
                </javadoc>
                <declaration name="iterator" type="SuperIterator&lt;SparseVector,VectorEntry&gt;" line="208"/>
                <javadoc line="208">
                    Iterates over each row vector                    
                </javadoc>
                <declaration name="entry" type="RowMatrixEntry" line="214"/>
                <javadoc line="214">
                    Entry returned                    
                </javadoc>
                <method name="hasNext" type="boolean" line="219"/>
                <method name="next" type="MatrixEntry" line="223">
                    <declaration name="se" type="SuperIteratorEntry&lt;VectorEntry&gt;" line="224"/>
                </method>
                <method name="remove" type="void" line="229"/>
            </class>
            <class name="RowMatrixEntry" line="235">
                <implements interface="MatrixEntry"/>
                <javadoc line="235">
                    Entry of a matrix stored vectorwise by rows                    
                </javadoc>
                <declaration name="row" type="int" line="240"/>
                <declaration name="entry" type="VectorEntry" line="242"/>
                <method name="update" type="void" line="244">
                    <params>
                        <param name="row" type="int"/>
                        <param name="entry" type="VectorEntry"/>
                    </params>
                </method>
                <method name="row" type="int" line="249"/>
                <method name="column" type="int" line="253"/>
                <method name="get" type="double" line="257"/>
                <method name="set" type="void" line="261">
                    <params>
                        <param name="value" type="double"/>
                    </params>
                </method>
            </class>
        </class>
    </source>