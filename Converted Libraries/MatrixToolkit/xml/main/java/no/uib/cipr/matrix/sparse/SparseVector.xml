<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix.sparse">
        <import package="java.util.Iterator"/>
        <import package="no.uib.cipr.matrix.AbstractVector"/>
        <import package="no.uib.cipr.matrix.DenseVector"/>
        <import package="no.uib.cipr.matrix.Matrices"/>
        <import package="no.uib.cipr.matrix.Vector"/>
        <import package="no.uib.cipr.matrix.VectorEntry"/>
        <class name="SparseVector" line="8">
            <extends class="AbstractVector"/>
            <implements interface="ISparseVector"/>
            <javadoc line="8">
                Sparse vector                
            </javadoc>
            <declaration name="data" type="double[]" line="12"/>
            <javadoc line="12">
                Data                
            </javadoc>
            <declaration name="index" type="int[]" line="16"/>
            <javadoc line="16">
                Indices to data                
            </javadoc>
            <declaration name="used" type="int" line="20"/>
            <javadoc line="20">
                How much has been used                
            </javadoc>
            <javadoc line="24">
                Constructor for SparseVector.                
                <param>
                    sizeSize of the vector                    
                </param>
                <param>
                    nzInitial number of non-zeros                    
                </param>
            </javadoc>
            <method name="SparseVector" type="constructor" line="29">
                <params>
                    <param name="size" type="int"/>
                    <param name="nz" type="int"/>
                </params>
            </method>
            <javadoc line="34">
                Constructor for SparseVector, and copies the contents from the supplied
                  vector.                
                <param>
                    xVector to copy from                    
                </param>
                <param>
                    deepTrue if a deep copy is to be made. If the copy is shallow,
                      <code>x</code> must be a <code>SparseVector</code>                    
                </param>
            </javadoc>
            <method name="SparseVector" type="constructor" line="41">
                <params>
                    <param name="x" type="Vector"/>
                    <param name="deep" type="boolean"/>
                </params>
                <scope line="43">
                    <declaration name="nz" type="int" line="44"/>
                </scope>
                <scope line="49">
                    <declaration name="xs" type="SparseVector" line="50"/>
                </scope>
            </method>
            <javadoc line="56">
                Constructor for SparseVector, and copies the contents from the supplied
                  vector. Zero initial pre-allocation                
                <param>
                    xVector to copy from. A deep copy is made                    
                </param>
            </javadoc>
            <method name="SparseVector" type="constructor" line="61">
                <params>
                    <param name="x" type="Vector"/>
                </params>
            </method>
            <javadoc line="64">
                Constructor for SparseVector. Zero initial pre-allocation                
                <param>
                    sizeSize of the vector                    
                </param>
            </javadoc>
            <method name="SparseVector" type="constructor" line="68">
                <params>
                    <param name="size" type="int"/>
                </params>
            </method>
            <javadoc line="71">
                Constructor for SparseVector                
                <param>
                    sizeSize of the vector                    
                </param>
                <param>
                    indexIndices of the vector                    
                </param>
                <param>
                    dataEntries of the vector                    
                </param>
                <param>
                    deepTrue for a deep copy. For shallow copies, the given indices
                      will be used internally                    
                </param>
            </javadoc>
            <method name="SparseVector" type="constructor" line="79">
                <params>
                    <param name="size" type="int"/>
                    <param name="index" type="int[]"/>
                    <param name="data" type="double[]"/>
                    <param name="deep" type="boolean"/>
                </params>
                <scope line="82"/>
                <scope line="87"/>
            </method>
            <javadoc line="93">
                Constructor for SparseVector                
                <param>
                    sizeSize of the vector                    
                </param>
                <param>
                    indexThe vector indices are copies from this array                    
                </param>
                <param>
                    dataThe vector entries are copies from this array                    
                </param>
            </javadoc>
            <method name="SparseVector" type="constructor" line="99">
                <params>
                    <param name="size" type="int"/>
                    <param name="index" type="int[]"/>
                    <param name="data" type="double[]"/>
                </params>
            </method>
            <method name="set" type="void" line="102">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="double"/>
                </params>
                <declaration name="i" type="int" line="104"/>
            </method>
            <method name="add" type="void" line="107">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="double"/>
                </params>
                <declaration name="i" type="int" line="109"/>
            </method>
            <method name="get" type="double" line="112">
                <params>
                    <param name="index" type="int"/>
                </params>
                <declaration name="in" type="int" line="114"/>
            </method>
            <javadoc line="118">
                Tries to find the index. If it is not found, a reallocation is done, and
                  a new index is returned.                
            </javadoc>
            <method name="getIndex" type="int" line="122">
                <params>
                    <param name="ind" type="int"/>
                </params>
                <declaration name="i" type="int" line="123"/>
                <declaration name="newIndex" type="int[]" line="125"/>
                <declaration name="newData" type="double[]" line="126"/>
                <scope line="127">
                    <declaration name="newLength" type="int" line="128"/>
                </scope>
            </method>
            <method name="copy" type="SparseVector" line="142"/>
            <method name="zero" type="SparseVector" line="145"/>
            <method name="scale" type="SparseVector" line="150">
                <params>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <method name="dot" type="double" line="156">
                <params>
                    <param name="y" type="Vector"/>
                </params>
                <declaration name="yd" type="double[]" line="159"/>
                <declaration name="ret" type="double" line="160"/>
            </method>
            <method name="norm1" type="double" line="164">
                <declaration name="sum" type="double" line="165"/>
            </method>
            <method name="norm2" type="double" line="169">
                <declaration name="norm" type="double" line="170"/>
            </method>
            <method name="norm2_robust" type="double" line="174">
                <declaration name="scale" type="double" line="175"/>
                <scope line="176">
                    <scope line="177">
                        <declaration name="absxi" type="double" line="178"/>
                        <scope line="179"/>
                    </scope>
                </scope>
            </method>
            <method name="normInf" type="double" line="188">
                <declaration name="max" type="double" line="189"/>
            </method>
            <javadoc line="193">
                Returns the internal data                
            </javadoc>
            <method name="getData" type="double[]" line="196"/>
            <javadoc line="199">
                Returns the indices                
            </javadoc>
            <method name="getIndex" type="int[]" line="202">
                <declaration name="indices" type="int[]" line="204"/>
                <scope line="205"/>
            </method>
            <javadoc line="210">
                Number of entries used in the sparse structure                
            </javadoc>
            <method name="getUsed" type="int" line="213"/>
            <javadoc line="216">
                Compacts the vector                
            </javadoc>
            <method name="compact" type="void" line="219">
                <declaration name="nz" type="int" line="220"/>
                <scope line="221">
                    <declaration name="newIndex" type="int[]" line="222"/>
                    <declaration name="newData" type="double[]" line="223"/>
                    <scope line="224"/>
                </scope>
            </method>
            <method name="iterator" type="Iterator<VectorEntry>" line="234"/>
            <method name="set" type="Vector" line="237">
                <params>
                    <param name="y" type="Vector"/>
                </params>
                <declaration name="yc" type="SparseVector" line="240"/>
                <scope line="241"/>
            </method>
            <class name="SparseVectorIterator" line="250">
                <implements interface="Iterator">
                    <type_params>
                        <type_param name="VectorEntry"/>
                    </type_params>
                </implements>
                <javadoc line="250">
                    Iterator over a sparse vector                    
                </javadoc>
                <declaration name="cursor" type="int" line="254"/>
                <declaration name="entry" type="SparseVectorEntry" line="255"/>
                <method name="hasNext" type="boolean" line="256"/>
                <method name="next" type="VectorEntry" line="259"/>
                <method name="remove" type="void" line="264"/>
            </class>
            <class name="SparseVectorEntry" line="268">
                <implements interface="VectorEntry"/>
                <javadoc line="268">
                    Entry of a sparse vector                    
                </javadoc>
                <declaration name="cursor" type="int" line="272"/>
                <method name="update" type="void" line="273">
                    <params>
                        <param name="cursor" type="int"/>
                    </params>
                </method>
                <method name="index" type="int" line="276"/>
                <method name="get" type="double" line="279"/>
                <method name="set" type="void" line="282">
                    <params>
                        <param name="value" type="double"/>
                    </params>
                </method>
            </class>
        </class>
    </source>