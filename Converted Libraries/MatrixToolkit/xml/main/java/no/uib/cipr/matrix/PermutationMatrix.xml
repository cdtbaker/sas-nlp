<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix">
        <import package="com.github.fommil.netlib.LAPACK"/>
        <import package="java.util.BitSet"/>
        <class name="PermutationMatrix" line="7">
            <extends class="AbstractMatrix"/>
            <comment line="49">
                the instantaneous permutations to perform (zero-indexed)                
            </comment>
            <comment line="50">
                http://en.wikipedia.org/wiki/Permutation_matrix                
            </comment>
            <comment line="55">
                permutations - instantaneous (zero-indexed)                
            </comment>
            <comment line="56">
                pivots - sequential (fortran-indexed)                
            </comment>
            <javadoc line="7">
                Matrix that represents a permutation of another matrix&apos;s
                  rows / columns.
                  &lt;p&gt;
                  NOTE: the transpose of a permutation matrix is its inverse.                
                <author>
                    Sam Halliday                    
                </author>
            </javadoc>
            <javadoc line="17">
                The sequential row permutations to perform, e.g. (2, 3, 3) means:
                  permute row 1 with row 2, then permute row 2 with row 3,
                  then permute row 3 with row 3 (i.e. do nothing).
                  &lt;p&gt;
                  Using this factory will ensure that LAPACK optimisations are
                  available for multiplication operations.                
                <param>
                    pivots using fortran (1-indexed) notation.                    
                </param>
            </javadoc>
            <method name="fromPartialPivots" type="PermutationMatrix" line="27">
                <params>
                    <param name="pivots" type="int"/>
                </params>
                <declaration name="permutations" type="int[]" line="28"/>
                <scope line="29"/>
                <scope line="33">
                    <declaration name="j" type="int" line="34"/>
                    <declaration name="tmp" type="int" line="36"/>
                </scope>
            </method>
            <declaration name="permutations" type="int[]" line="44"/>
            <declaration name="transposed" type="boolean" line="46"/>
            <method name="PermutationMatrix" type="constructor" line="50">
                <params>
                    <param name="permutations" type="int"/>
                </params>
            </method>
            <method name="PermutationMatrix" type="constructor" line="56">
                <params>
                    <param name="permutations" type="int"/>
                    <param name="pivots" type="int"/>
                </params>
                <declaration name="bitset" type="BitSet" line="59"/>
                <scope line="60"/>
            </method>
            <method name="get" type="double" line="69">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="transpose" type="Matrix" line="76"/>
            <method name="mult" type="Matrix" line="82">
                <params>
                    <param name="B" type="Matrix"/>
                    <param name="C" type="Matrix"/>
                </params>
            </method>
            <method name="mult" type="Matrix" line="87">
                <params>
                    <param name="B" type="Matrix"/>
                    <param name="C" type="DenseMatrix"/>
                </params>
            </method>
            <method name="transAmult" type="Matrix" line="97">
                <params>
                    <param name="B" type="Matrix"/>
                    <param name="C" type="Matrix"/>
                </params>
            </method>
            <method name="transAmult" type="Matrix" line="102">
                <params>
                    <param name="B" type="Matrix"/>
                    <param name="C" type="DenseMatrix"/>
                </params>
            </method>
        </class>
    </source>