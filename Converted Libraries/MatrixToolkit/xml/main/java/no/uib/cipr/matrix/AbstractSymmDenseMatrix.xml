<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix">
        <import package="com.github.fommil.netlib.BLAS"/>
        <import package="com.github.fommil.netlib.LAPACK"/>
        <import package="org.netlib.util.intW"/>
        <class name="AbstractSymmDenseMatrix" line="5">
            <extends class="AbstractDenseMatrix"/>
            <javadoc line="5">
                Partial implementation of a symmetrical, dense matrix                
            </javadoc>
            <declaration name="uplo" type="UpLo" line="9"/>
            <javadoc line="9">
                Upper or lower part stored?                
            </javadoc>
            <javadoc line="13">
                Constructor for AbstractSymmDenseMatrix                
            </javadoc>
            <method name="AbstractSymmDenseMatrix" type="constructor" line="16">
                <params>
                    <param name="n" type="int"/>
                    <param name="uplo" type="UpLo"/>
                </params>
            </method>
            <javadoc line="20">
                Constructor for AbstractSymmDenseMatrix                
            </javadoc>
            <method name="AbstractSymmDenseMatrix" type="constructor" line="23">
                <params>
                    <param name="A" type="Matrix"/>
                    <param name="uplo" type="UpLo"/>
                </params>
            </method>
            <javadoc line="26">
                Constructor for AbstractSymmDenseMatrix                
            </javadoc>
            <method name="AbstractSymmDenseMatrix" type="constructor" line="29">
                <params>
                    <param name="A" type="Matrix"/>
                    <param name="deep" type="boolean"/>
                    <param name="uplo" type="UpLo"/>
                </params>
            </method>
            <method name="multAdd" type="Matrix" line="34">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="B" type="Matrix"/>
                    <param name="C" type="Matrix"/>
                </params>
                <declaration name="Bd" type="double[]" line="37"/>
            </method>
            <method name="transAmultAdd" type="Matrix" line="41">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="B" type="Matrix"/>
                    <param name="C" type="Matrix"/>
                </params>
            </method>
            <method name="rank1" type="Matrix" line="44">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="x" type="Vector"/>
                    <param name="y" type="Vector"/>
                </params>
                <declaration name="xd" type="double[]" line="48"/>
            </method>
            <method name="rank2" type="Matrix" line="52">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="x" type="Vector"/>
                    <param name="y" type="Vector"/>
                </params>
                <declaration name="xd" type="double[]" line="55"/>
            </method>
            <method name="multAdd" type="Vector" line="59">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="x" type="Vector"/>
                    <param name="y" type="Vector"/>
                </params>
                <declaration name="xd" type="double[]" line="62"/>
            </method>
            <method name="transMultAdd" type="Vector" line="66">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="x" type="Vector"/>
                    <param name="y" type="Vector"/>
                </params>
            </method>
            <method name="rank1" type="Matrix" line="69">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="C" type="Matrix"/>
                </params>
                <declaration name="Cd" type="double[]" line="72"/>
            </method>
            <method name="transRank1" type="Matrix" line="76">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="C" type="Matrix"/>
                </params>
                <declaration name="Cd" type="double[]" line="79"/>
            </method>
            <method name="rank2" type="Matrix" line="83">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="B" type="Matrix"/>
                    <param name="C" type="Matrix"/>
                </params>
                <declaration name="Bd" type="double[]" line="86"/>
            </method>
            <method name="transRank2" type="Matrix" line="90">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="B" type="Matrix"/>
                    <param name="C" type="Matrix"/>
                </params>
                <declaration name="Bd" type="double[]" line="93"/>
            </method>
            <method name="solve" type="Matrix" line="97">
                <params>
                    <param name="B" type="Matrix"/>
                    <param name="X" type="Matrix"/>
                </params>
                <declaration name="Xd" type="double[]" line="100"/>
                <declaration name="newData" type="double[]" line="102"/>
                <declaration name="ipiv" type="int[]" line="103"/>
                <declaration name="work" type="double[]" line="104"/>
                <declaration name="info" type="intW" line="105"/>
                <declaration name="lwork" type="int" line="107"/>
            </method>
            <method name="solve" type="Vector" line="117">
                <params>
                    <param name="b" type="Vector"/>
                    <param name="x" type="Vector"/>
                </params>
                <declaration name="B" type="DenseMatrix" line="118"/>
            </method>
            <method name="transSolve" type="Matrix" line="122">
                <params>
                    <param name="B" type="Matrix"/>
                    <param name="X" type="Matrix"/>
                </params>
            </method>
            <method name="transSolve" type="Vector" line="125">
                <params>
                    <param name="b" type="Vector"/>
                    <param name="x" type="Vector"/>
                </params>
            </method>
            <method name="SPDsolve" type="Matrix" line="128">
                <params>
                    <param name="B" type="Matrix"/>
                    <param name="X" type="Matrix"/>
                </params>
                <declaration name="Xd" type="double[]" line="131"/>
                <declaration name="info" type="intW" line="133"/>
            </method>
            <method name="transpose" type="Matrix" line="139"/>
        </class>
    </source>