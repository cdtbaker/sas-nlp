<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix.sparse">
        <import package="java.util.Arrays"/>
        <import package="no.uib.cipr.matrix.DenseVector"/>
        <import package="no.uib.cipr.matrix.Matrix"/>
        <import package="no.uib.cipr.matrix.Vector"/>
        <class name="ICC" line="29">
            <implements interface="Preconditioner"/>
            <javadoc line="29">
                Incomplete Cholesky preconditioner without fill-in using a compressed row
                  matrix as internal storage                
            </javadoc>
            <declaration name="R" type="CompRowMatrix" line="35"/>
            <javadoc line="35">
                Factorisation matrix                
            </javadoc>
            <declaration name="Rt" type="Matrix" line="40"/>
            <javadoc line="40">
                Triangular view onto R for solution purposes                
            </javadoc>
            <declaration name="y" type="Vector" line="45"/>
            <javadoc line="45">
                Temporary vector for solving the factorised system                
            </javadoc>
            <javadoc line="50">
                Sets up the ICC preconditioner                
                <param>
                    RMatrix to use internally. For best performance, its non-zero
                      pattern must conform to that of the system matrix                    
                </param>
            </javadoc>
            <method name="ICC" type="constructor" line="57">
                <params>
                    <param name="R" type="CompRowMatrix"/>
                </params>
                <declaration name="n" type="int" line="63"/>
            </method>
            <method name="apply" type="Vector" line="67">
                <params>
                    <param name="b" type="Vector"/>
                    <param name="x" type="Vector"/>
                </params>
                <comment line="68">
                    R&apos;y = b, y = R&apos;\b                    
                </comment>
                <comment line="71">
                    Rx = R&apos;\b = y                    
                </comment>
            </method>
            <method name="transApply" type="Vector" line="75">
                <params>
                    <param name="b" type="Vector"/>
                    <param name="x" type="Vector"/>
                </params>
            </method>
            <method name="setMatrix" type="void" line="79">
                <params>
                    <param name="A" type="Matrix"/>
                </params>
            </method>
            <method name="factor" type="void" line="85">
                <comment line="88">
                    Internal CRS matrix storage                    
                </comment>
                <comment line="93">
                    Temporary storage of a dense row                    
                </comment>
                <comment line="96">
                    Find the indices to the diagonal entries                    
                </comment>
                <comment line="99">
                    Go down along the main diagonal                    
                </comment>
                <comment line="102">
                    Expand current row to dense storage                    
                </comment>
                <comment line="109">
                    Get the current diagonal entry                    
                </comment>
                <comment line="116">
                    Elimination factor                    
                </comment>
                <comment line="122">
                    Traverse the sparse row i, reducing on row k                    
                </comment>
                <comment line="127">
                    Store the row back into the factorisation matrix                    
                </comment>
                <declaration name="n" type="int" line="86"/>
                <declaration name="colind" type="int[]" line="89"/>
                <declaration name="rowptr" type="int[]" line="90"/>
                <declaration name="data" type="double[]" line="91"/>
                <declaration name="Rk" type="double[]" line="94"/>
                <declaration name="diagind" type="int[]" line="97"/>
                <scope line="100">
                    <scope line="107">
                        <declaration name="Rii" type="double" line="110"/>
                        <declaration name="Rki" type="double" line="117"/>
                    </scope>
                    <declaration name="sqRkk" type="double" line="132"/>
                </scope>
            </method>
            <method name="findDiagonalIndices" type="int[]" line="141">
                <params>
                    <param name="m" type="int"/>
                    <param name="colind" type="int[]"/>
                    <param name="rowptr" type="int[]"/>
                </params>
                <declaration name="diagind" type="int[]" line="142"/>
                <scope line="144"/>
            </method>
        </class>
    </source>