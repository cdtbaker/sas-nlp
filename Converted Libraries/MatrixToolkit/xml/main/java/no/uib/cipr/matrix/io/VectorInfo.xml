<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix.io">
        <class name="VectorInfo" line="23">
            <javadoc line="23">
                Contains information on a vector in a variant of the &lt;a
                  href=&quot;http://math.nist.gov/MatrixMarket&quot;&gt;Matrix Market&lt;/a&gt; exchange format                
            </javadoc>
            <javadoc line="29">
                What kind of numbers are stored                
            </javadoc>
            <javadoc line="33">
                Real numbers                
            </javadoc>
            <javadoc line="38">
                Integers                
            </javadoc>
            <javadoc line="43">
                Complex numbers                
            </javadoc>
            <javadoc line="48">
                Pattern matrix. No numbers stored                
            </javadoc>
            <declaration name="sparse" type="boolean" line="54"/>
            <javadoc line="54">
                True if the vector is sparse, else false                
            </javadoc>
            <declaration name="field" type="VectorField" line="59"/>
            <javadoc line="59">
                Type of data stored                
            </javadoc>
            <javadoc line="64">
                Creates a specific type                
                <param>
                    sparseTrue for sparse vectors, else false                    
                </param>
                <param>
                    fieldType of data stored                    
                </param>
            </javadoc>
            <method name="VectorInfo" type="constructor" line="72">
                <params>
                    <param name="sparse" type="boolean"/>
                    <param name="field" type="VectorField"/>
                </params>
            </method>
            <javadoc line="79">
                Validates the representation                
            </javadoc>
            <method name="validate" type="void" line="82"/>
            <javadoc line="88">
                Returns &lt;code&gt;true&lt;/code&gt; if the vector is in coordinate format, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isSparse" type="boolean" line="92"/>
            <javadoc line="96">
                Returns &lt;code&gt;true&lt;/code&gt; if the vector is in coordinate format, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isCoordinate" type="boolean" line="100"/>
            <javadoc line="104">
                Returns &lt;code&gt;true&lt;/code&gt; if the vector is in array format, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isDense" type="boolean" line="108"/>
            <javadoc line="112">
                Returns &lt;code&gt;true&lt;/code&gt; if the vector is in array format, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isArray" type="boolean" line="116"/>
            <javadoc line="120">
                Returns &lt;code&gt;true&lt;/code&gt; if the vector stores real numbers, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isReal" type="boolean" line="124"/>
            <javadoc line="128">
                Returns &lt;code&gt;true&lt;/code&gt; if the vector stores integers, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isInteger" type="boolean" line="132"/>
            <javadoc line="136">
                Returns &lt;code&gt;true&lt;/code&gt; if the vector stores complex numbers, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isComplex" type="boolean" line="140"/>
            <javadoc line="144">
                Returns &lt;code&gt;true&lt;/code&gt; if the vector does not store any numbers,
                  else &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isPattern" type="boolean" line="148"/>
            <javadoc line="152">
                Returns a string representation of the specifier. Can be used to provide
                  a header for writing to a file. It is a two-line output, which can look
                  like this:
                  &lt;pre&gt;
                  %%MatrixMarket vector coordinate real
                  &lt;/pre&gt;                
            </javadoc>
            <method name="toString" type="String" line="162">
                <comment line="181">
                    This should never happen                    
                </comment>
                <declaration name="buf" type="StringBuilder" line="163"/>
            </method>
        </class>
    </source>