<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix.io">
        <import package="java.io.OutputStream"/>
        <import package="java.io.PrintWriter"/>
        <import package="java.io.Writer"/>
        <import package="java.util.Locale"/>
        <class name="MatrixVectorWriter" line="6">
            <extends class="PrintWriter"/>
            <javadoc line="6">
                Writes matrices and vectors                
            </javadoc>
            <javadoc line="10">
                Constructor for MatrixVectorWriter                
                <param>
                    out                    
                </param>
            </javadoc>
            <method name="MatrixVectorWriter" type="constructor" line="14">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
            </method>
            <javadoc line="17">
                Constructor for MatrixVectorWriter                
                <param>
                    out                    
                </param>
                <param>
                    autoFlush                    
                </param>
            </javadoc>
            <method name="MatrixVectorWriter" type="constructor" line="22">
                <params>
                    <param name="out" type="OutputStream"/>
                    <param name="autoFlush" type="boolean"/>
                </params>
            </method>
            <javadoc line="25">
                Constructor for MatrixVectorWriter                
                <param>
                    out                    
                </param>
            </javadoc>
            <method name="MatrixVectorWriter" type="constructor" line="29">
                <params>
                    <param name="out" type="Writer"/>
                </params>
            </method>
            <javadoc line="32">
                Constructor for MatrixVectorWriter                
                <param>
                    out                    
                </param>
                <param>
                    autoFlush                    
                </param>
            </javadoc>
            <method name="MatrixVectorWriter" type="constructor" line="37">
                <params>
                    <param name="out" type="Writer"/>
                    <param name="autoFlush" type="boolean"/>
                </params>
            </method>
            <javadoc line="40">
                Shifts the indices. Useful for converting between 0- and 1-based
                  indicing.                
                <param>
                    numAdded to every index                    
                </param>
                <param>
                    indicesIndices to shift                    
                </param>
            </javadoc>
            <method name="add" type="void" line="46">
                <params>
                    <param name="num" type="int"/>
                    <param name="indices" type="int[]"/>
                </params>
            </method>
            <javadoc line="49">
                Prints the matrix info                
            </javadoc>
            <method name="printMatrixInfo" type="void" line="52">
                <params>
                    <param name="info" type="MatrixInfo"/>
                </params>
            </method>
            <javadoc line="55">
                Prints the vector info                
            </javadoc>
            <method name="printVectorInfo" type="void" line="58">
                <params>
                    <param name="info" type="VectorInfo"/>
                </params>
            </method>
            <javadoc line="61">
                Prints the matrix size                
            </javadoc>
            <method name="printMatrixSize" type="void" line="64">
                <params>
                    <param name="size" type="MatrixSize"/>
                    <param name="info" type="MatrixInfo"/>
                </params>
            </method>
            <javadoc line="69">
                Prints the matrix size. Assumes coordinate format                
            </javadoc>
            <method name="printMatrixSize" type="void" line="72">
                <params>
                    <param name="size" type="MatrixSize"/>
                </params>
            </method>
            <javadoc line="75">
                Prints the vector size                
            </javadoc>
            <method name="printVectorSize" type="void" line="78">
                <params>
                    <param name="size" type="VectorSize"/>
                    <param name="info" type="VectorInfo"/>
                </params>
            </method>
            <javadoc line="83">
                Prints the vector size. Assumes coordinate format                
            </javadoc>
            <method name="printVectorSize" type="void" line="86">
                <params>
                    <param name="size" type="VectorSize"/>
                </params>
            </method>
            <javadoc line="89">
                Prints an array to the underlying stream. One entry per line.                
            </javadoc>
            <method name="printArray" type="void" line="92">
                <params>
                    <param name="data" type="float[]"/>
                </params>
            </method>
            <javadoc line="95">
                Prints an array to the underlying stream. One entry per line.                
            </javadoc>
            <method name="printArray" type="void" line="98">
                <params>
                    <param name="data" type="double[]"/>
                </params>
            </method>
            <javadoc line="101">
                Prints an array to the underlying stream. One entry per line. The first
                  array specifies the real entries, and the second is the imaginary entries                
            </javadoc>
            <method name="printArray" type="void" line="105">
                <params>
                    <param name="dataR" type="float[]"/>
                    <param name="dataI" type="float[]"/>
                </params>
                <declaration name="size" type="int" line="106"/>
            </method>
            <javadoc line="110">
                Prints an array to the underlying stream. One entry per line. The first
                  array specifies the real entries, and the second is the imaginary entries                
            </javadoc>
            <method name="printArray" type="void" line="114">
                <params>
                    <param name="dataR" type="double[]"/>
                    <param name="dataI" type="double[]"/>
                </params>
                <declaration name="size" type="int" line="115"/>
            </method>
            <javadoc line="119">
                Prints an array to the underlying stream. One entry per line.                
            </javadoc>
            <method name="printArray" type="void" line="122">
                <params>
                    <param name="data" type="int[]"/>
                </params>
            </method>
            <javadoc line="125">
                Prints an array to the underlying stream. One entry per line.                
            </javadoc>
            <method name="printArray" type="void" line="128">
                <params>
                    <param name="data" type="long[]"/>
                </params>
            </method>
            <javadoc line="131">
                Prints the coordinate format to the underlying stream. One index and
                  entry on each line. The offset is added to the index, typically, this can
                  transform from a 0-based indicing to a 1-based.                
            </javadoc>
            <method name="printCoordinate" type="void" line="136">
                <params>
                    <param name="index" type="int[]"/>
                    <param name="data" type="float[]"/>
                    <param name="offset" type="int"/>
                </params>
                <declaration name="size" type="int" line="137"/>
            </method>
            <javadoc line="141">
                Prints the coordinate format to the underlying stream. One index and
                  entry on each line. The offset is added to the index, typically, this can
                  transform from a 0-based indicing to a 1-based.                
            </javadoc>
            <method name="printCoordinate" type="void" line="146">
                <params>
                    <param name="index" type="int[]"/>
                    <param name="data" type="double[]"/>
                    <param name="offset" type="int"/>
                </params>
                <declaration name="size" type="int" line="147"/>
            </method>
            <javadoc line="151">
                Prints the coordinate format to the underlying stream. One index and
                  entry on each line. The offset is added to the index, typically, this can
                  transform from a 0-based indicing to a 1-based.                
            </javadoc>
            <method name="printCoordinate" type="void" line="156">
                <params>
                    <param name="index" type="int[]"/>
                    <param name="data" type="int[]"/>
                    <param name="offset" type="int"/>
                </params>
                <declaration name="size" type="int" line="157"/>
            </method>
            <javadoc line="161">
                Prints the coordinate format to the underlying stream. One index and
                  entry on each line. The offset is added to the index, typically, this can
                  transform from a 0-based indicing to a 1-based.                
            </javadoc>
            <method name="printCoordinate" type="void" line="166">
                <params>
                    <param name="index" type="int[]"/>
                    <param name="data" type="long[]"/>
                    <param name="offset" type="int"/>
                </params>
                <declaration name="size" type="int" line="167"/>
            </method>
            <javadoc line="171">
                Prints the coordinate format to the underlying stream. One index pair and
                  entry on each line. The offset is added to each index, typically, this
                  can transform from a 0-based indicing to a 1-based.                
            </javadoc>
            <method name="printCoordinate" type="void" line="176">
                <params>
                    <param name="row" type="int[]"/>
                    <param name="column" type="int[]"/>
                    <param name="data" type="float[]"/>
                    <param name="offset" type="int"/>
                </params>
                <declaration name="size" type="int" line="177"/>
            </method>
            <javadoc line="181">
                Prints the coordinate format to the underlying stream. One index pair and
                  entry on each line. The offset is added to each index, typically, this
                  can transform from a 0-based indicing to a 1-based.                
            </javadoc>
            <method name="printCoordinate" type="void" line="186">
                <params>
                    <param name="row" type="int[]"/>
                    <param name="column" type="int[]"/>
                    <param name="data" type="double[]"/>
                    <param name="offset" type="int"/>
                </params>
                <declaration name="size" type="int" line="187"/>
            </method>
            <javadoc line="191">
                Prints the coordinate format to the underlying stream. One index and
                  entry on each line. The offset is added to each index, typically, this
                  can transform from a 0-based indicing to a 1-based. The first float array
                  specifies the real entries, and the second is the imaginary entries                
            </javadoc>
            <method name="printCoordinate" type="void" line="197">
                <params>
                    <param name="index" type="int[]"/>
                    <param name="dataR" type="float[]"/>
                    <param name="dataI" type="float[]"/>
                    <param name="offset" type="int"/>
                </params>
                <declaration name="size" type="int" line="198"/>
            </method>
            <javadoc line="202">
                Prints the coordinate format to the underlying stream. One index and
                  entry on each line. The offset is added to each index, typically, this
                  can transform from a 0-based indicing to a 1-based. The first double
                  array specifies the real entries, and the second is the imaginary entries                
            </javadoc>
            <method name="printCoordinate" type="void" line="208">
                <params>
                    <param name="index" type="int[]"/>
                    <param name="dataR" type="double[]"/>
                    <param name="dataI" type="double[]"/>
                    <param name="offset" type="int"/>
                </params>
                <declaration name="size" type="int" line="209"/>
            </method>
            <javadoc line="213">
                Prints the coordinate format to the underlying stream. One index pair and
                  entry on each line. The offset is added to each index, typically, this
                  can transform from a 0-based indicing to a 1-based. The first float array
                  specifies the real entries, and the second is the imaginary entries                
            </javadoc>
            <method name="printCoordinate" type="void" line="219">
                <params>
                    <param name="row" type="int[]"/>
                    <param name="column" type="int[]"/>
                    <param name="dataR" type="float[]"/>
                    <param name="dataI" type="float[]"/>
                    <param name="offset" type="int"/>
                </params>
                <declaration name="size" type="int" line="220"/>
            </method>
            <javadoc line="224">
                Prints the coordinate format to the underlying stream. One index pair and
                  entry on each line. The offset is added to each index, typically, this
                  can transform from a 0-based indicing to a 1-based. The first double
                  array specifies the real entries, and the second is the imaginary entries                
            </javadoc>
            <method name="printCoordinate" type="void" line="230">
                <params>
                    <param name="row" type="int[]"/>
                    <param name="column" type="int[]"/>
                    <param name="dataR" type="double[]"/>
                    <param name="dataI" type="double[]"/>
                    <param name="offset" type="int"/>
                </params>
                <declaration name="size" type="int" line="231"/>
            </method>
            <javadoc line="235">
                Prints the coordinate format to the underlying stream. One index pair and
                  entry on each line. The offset is added to each index, typically, this
                  can transform from a 0-based indicing to a 1-based.                
            </javadoc>
            <method name="printCoordinate" type="void" line="240">
                <params>
                    <param name="row" type="int[]"/>
                    <param name="column" type="int[]"/>
                    <param name="data" type="int[]"/>
                    <param name="offset" type="int"/>
                </params>
                <declaration name="size" type="int" line="241"/>
            </method>
            <javadoc line="245">
                Prints the coordinate format to the underlying stream. One index pair and
                  entry on each line. The offset is added to each index, typically, this
                  can transform from a 0-based indicing to a 1-based.                
            </javadoc>
            <method name="printCoordinate" type="void" line="250">
                <params>
                    <param name="row" type="int[]"/>
                    <param name="column" type="int[]"/>
                    <param name="data" type="long[]"/>
                    <param name="offset" type="int"/>
                </params>
                <declaration name="size" type="int" line="251"/>
            </method>
            <javadoc line="255">
                Prints the coordinates to the underlying stream. One index pair on each
                  line. The offset is added to each index, typically, this can transform
                  from a 0-based indicing to a 1-based.                
            </javadoc>
            <method name="printPattern" type="void" line="260">
                <params>
                    <param name="row" type="int[]"/>
                    <param name="column" type="int[]"/>
                    <param name="offset" type="int"/>
                </params>
                <declaration name="size" type="int" line="261"/>
            </method>
            <javadoc line="265">
                Prints the coordinates to the underlying stream. One index on each line.
                  The offset is added to each index, typically, this can transform from a
                  0-based indicing to a 1-based.                
            </javadoc>
            <method name="printPattern" type="void" line="270">
                <params>
                    <param name="index" type="int[]"/>
                    <param name="offset" type="int"/>
                </params>
                <declaration name="size" type="int" line="271"/>
            </method>
            <javadoc line="274">
                Prints the coordinate format to the underlying stream. One index pair and
                  entry on each line                
            </javadoc>
            <method name="printCoordinate" type="void" line="278">
                <params>
                    <param name="row" type="int[]"/>
                    <param name="column" type="int[]"/>
                    <param name="data" type="float[]"/>
                </params>
            </method>
            <javadoc line="281">
                Prints the coordinate format to the underlying stream. One index pair and
                  entry on each line                
            </javadoc>
            <method name="printCoordinate" type="void" line="285">
                <params>
                    <param name="row" type="int[]"/>
                    <param name="column" type="int[]"/>
                    <param name="data" type="double[]"/>
                </params>
            </method>
            <javadoc line="288">
                Prints the coordinate format to the underlying stream. One index pair and
                  entry on each line. The first double array specifies the real entries,
                  and the second is the imaginary entries                
            </javadoc>
            <method name="printCoordinate" type="void" line="293">
                <params>
                    <param name="row" type="int[]"/>
                    <param name="column" type="int[]"/>
                    <param name="dataR" type="float[]"/>
                    <param name="dataI" type="float[]"/>
                </params>
            </method>
            <javadoc line="296">
                Prints the coordinate format to the underlying stream. One index pair and
                  entry on each line. The first double array specifies the real entries,
                  and the second is the imaginary entries                
            </javadoc>
            <method name="printCoordinate" type="void" line="301">
                <params>
                    <param name="row" type="int[]"/>
                    <param name="column" type="int[]"/>
                    <param name="dataR" type="double[]"/>
                    <param name="dataI" type="double[]"/>
                </params>
            </method>
            <javadoc line="304">
                Prints the coordinate format to the underlying stream. One index pair and
                  entry on each line                
            </javadoc>
            <method name="printCoordinate" type="void" line="308">
                <params>
                    <param name="row" type="int[]"/>
                    <param name="column" type="int[]"/>
                    <param name="data" type="int[]"/>
                </params>
            </method>
            <javadoc line="311">
                Prints the coordinate format to the underlying stream. One index pair and
                  entry on each line                
            </javadoc>
            <method name="printCoordinate" type="void" line="315">
                <params>
                    <param name="row" type="int[]"/>
                    <param name="column" type="int[]"/>
                    <param name="data" type="long[]"/>
                </params>
            </method>
            <javadoc line="318">
                Prints the coordinates to the underlying stream. One index pair on each
                  line                
            </javadoc>
            <method name="printPattern" type="void" line="322">
                <params>
                    <param name="row" type="int[]"/>
                    <param name="column" type="int[]"/>
                </params>
            </method>
            <javadoc line="325">
                Prints the coordinate format to the underlying stream. One index and
                  entry on each line                
            </javadoc>
            <method name="printCoordinate" type="void" line="329">
                <params>
                    <param name="index" type="int[]"/>
                    <param name="data" type="float[]"/>
                </params>
            </method>
            <javadoc line="332">
                Prints the coordinate format to the underlying stream. One index and
                  entry on each line                
            </javadoc>
            <method name="printCoordinate" type="void" line="336">
                <params>
                    <param name="index" type="int[]"/>
                    <param name="data" type="double[]"/>
                </params>
            </method>
            <javadoc line="339">
                Prints the coordinate format to the underlying stream. One index and
                  entry on each line. The first double array specifies the real entries,
                  and the second is the imaginary entries                
            </javadoc>
            <method name="printCoordinate" type="void" line="344">
                <params>
                    <param name="index" type="int[]"/>
                    <param name="dataR" type="float[]"/>
                    <param name="dataI" type="float[]"/>
                </params>
            </method>
            <javadoc line="347">
                Prints the coordinate format to the underlying stream. One index and
                  entry on each line. The first double array specifies the real entries,
                  and the second is the imaginary entries                
            </javadoc>
            <method name="printCoordinate" type="void" line="352">
                <params>
                    <param name="index" type="int[]"/>
                    <param name="dataR" type="double[]"/>
                    <param name="dataI" type="double[]"/>
                </params>
            </method>
            <javadoc line="355">
                Prints the coordinate format to the underlying stream. One index and
                  entry on each line                
            </javadoc>
            <method name="printCoordinate" type="void" line="359">
                <params>
                    <param name="index" type="int[]"/>
                    <param name="data" type="int[]"/>
                </params>
            </method>
            <javadoc line="362">
                Prints the coordinate format to the underlying stream. One index and
                  entry on each line                
            </javadoc>
            <method name="printCoordinate" type="void" line="366">
                <params>
                    <param name="index" type="int[]"/>
                    <param name="data" type="long[]"/>
                </params>
            </method>
            <javadoc line="369">
                Prints the coordinates to the underlying stream. One index on each line                
            </javadoc>
            <method name="printPattern" type="void" line="372">
                <params>
                    <param name="index" type="int[]"/>
                </params>
            </method>
            <javadoc line="375">
                Prints all the comments. Prepends a &apos;%&apos; and appends a newline to every
                  comment                
            </javadoc>
            <method name="printComments" type="void" line="379">
                <params>
                    <param name="comments" type="String[]"/>
                </params>
            </method>
        </class>
    </source>