<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix">
        <import package="java.io.Serializable"/>
        <import package="java.util.Formatter"/>
        <import package="java.util.Iterator"/>
        <class name="AbstractVector" line="27">
            <implements interface="Vector"/>
            <implements interface="Serializable"/>
            <javadoc line="27">
                Partial implementation of &lt;code&gt;Vector&lt;/code&gt;. The following methods throw
                  &lt;code&gt;UnsupportedOperationException&lt;/code&gt;, and should be overridden by a
                  subclass:
                  &lt;ul&gt;
                  &lt;li&gt;&lt;code&gt;get(int)&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code&gt;set(int,double)&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;p&gt;
                  For the rest of the methods, simple default implementations using a vector
                  iterator has been provided. There are some kernel operations which the
                  simpler operations forward to, and they are:
                  &lt;ul&gt;
                  &lt;li&gt; &lt;code&gt;add(double,Vector)&lt;/code&gt; and &lt;code&gt;set(double,Vector)&lt;/code&gt;.
                  &lt;/li&gt;
                  &lt;li&gt; &lt;code&gt;scale(double)&lt;/code&gt;.&lt;/li&gt;
                  &lt;li&gt;&lt;code&gt;dot(Vector)&lt;/code&gt; and all the norms. &lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;p&gt;
                  Finally, a default iterator is provided by this class, which works by calling
                  the &lt;code&gt;get&lt;/code&gt; function. A tailored replacement should be used by
                  subclasses.
                  &lt;/ul&gt;                
            </javadoc>
            <declaration name="size" type="int" line="54"/>
            <javadoc line="54">
                Size of the vector                
            </javadoc>
            <javadoc line="59">
                Constructor for AbstractVector.                
                <param>
                    sizeSize of the vector                    
                </param>
            </javadoc>
            <method name="AbstractVector" type="constructor" line="65">
                <params>
                    <param name="size" type="int"/>
                </params>
            </method>
            <javadoc line="71">
                Constructor for AbstractVector, same size as x                
                <param>
                    xVector to get the size from                    
                </param>
            </javadoc>
            <method name="AbstractVector" type="constructor" line="77">
                <params>
                    <param name="x" type="Vector"/>
                </params>
            </method>
            <method name="size" type="int" line="81"/>
            <method name="set" type="void" line="85">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="add" type="void" line="89">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="get" type="double" line="93">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="copy" type="Vector" line="97"/>
            <javadoc line="101">
                Checks the index                
            </javadoc>
            <method name="check" type="void" line="104">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="zero" type="Vector" line="113"/>
            <method name="scale" type="Vector" line="119">
                <params>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <method name="set" type="Vector" line="131">
                <params>
                    <param name="y" type="Vector"/>
                </params>
            </method>
            <method name="set" type="Vector" line="135">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="y" type="Vector"/>
                </params>
            </method>
            <method name="add" type="Vector" line="148">
                <params>
                    <param name="y" type="Vector"/>
                </params>
            </method>
            <method name="add" type="Vector" line="152">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="y" type="Vector"/>
                </params>
            </method>
            <method name="dot" type="double" line="164">
                <params>
                    <param name="y" type="Vector"/>
                </params>
                <declaration name="ret" type="double" line="167"/>
            </method>
            <javadoc line="173">
                Checks for conformant sizes                
            </javadoc>
            <method name="checkSize" type="void" line="176">
                <params>
                    <param name="y" type="Vector"/>
                </params>
            </method>
            <method name="norm" type="double" line="182">
                <params>
                    <param name="type" type="Norm"/>
                </params>
                <comment line="190">
                    Infinity                    
                </comment>
            </method>
            <method name="norm1" type="double" line="194">
                <declaration name="sum" type="double" line="195"/>
            </method>
            <method name="norm2" type="double" line="201">
                <declaration name="norm" type="double" line="202"/>
            </method>
            <method name="norm2_robust" type="double" line="208">
                <declaration name="scale" type="double" line="209"/>
                <scope line="210">
                    <declaration name="xval" type="double" line="211"/>
                    <scope line="212">
                        <declaration name="absxi" type="double" line="213"/>
                        <scope line="214"/>
                    </scope>
                </scope>
            </method>
            <method name="normInf" type="double" line="224">
                <declaration name="max" type="double" line="225"/>
            </method>
            <method name="iterator" type="Iterator<VectorEntry>" line="231"/>
            <method name="toString" type="String" line="236">
                <comment line="237">
                    Output into coordinate format. Indices start from 1 instead of 0                    
                </comment>
                <declaration name="out" type="Formatter" line="238"/>
                <declaration name="i" type="int" line="242"/>
                <scope line="243">
                    <scope line="246"/>
                </scope>
            </method>
            <class name="RefVectorIterator" line="255">
                <implements interface="Iterator">
                    <type_params>
                        <type_param name="VectorEntry"/>
                    </type_params>
                </implements>
                <javadoc line="255">
                    Iterator over a general vector                    
                </javadoc>
                <declaration name="index" type="int" line="260"/>
                <declaration name="entry" type="RefVectorEntry" line="262"/>
                <method name="hasNext" type="boolean" line="264"/>
                <method name="next" type="VectorEntry" line="268"/>
                <method name="remove" type="void" line="276"/>
            </class>
            <class name="RefVectorEntry" line="282">
                <implements interface="VectorEntry"/>
                <javadoc line="282">
                    Vector entry backed by the vector. May be reused for higher performance                    
                </javadoc>
                <declaration name="index" type="int" line="287"/>
                <javadoc line="289">
                    Updates the entry                    
                </javadoc>
                <method name="update" type="void" line="292">
                    <params>
                        <param name="index" type="int"/>
                    </params>
                </method>
                <method name="index" type="int" line="296"/>
                <method name="get" type="double" line="300"/>
                <method name="set" type="void" line="304">
                    <params>
                        <param name="value" type="double"/>
                    </params>
                </method>
            </class>
        </class>
    </source>