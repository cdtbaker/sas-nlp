<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix.io">
        <class name="MatrixInfo" line="2">
            <javadoc line="2">
                Contains information on a matrix in the &lt;a
                  href=&quot;http://math.nist.gov/MatrixMarket&quot;&gt;Matrix Market&lt;/a&gt; exchange format.
                  Supports all valid matrices.                
            </javadoc>
            <declaration name="MatrixField" type="enum" line="8"/>
            <javadoc line="8">
                What kind of numbers are stored                
            </javadoc>
            <scope line="11"/>
            <declaration name="MatrixSymmetry" type="enum" line="24"/>
            <javadoc line="24">
                Symmetry structure of the matrix, if any                
            </javadoc>
            <scope line="27"/>
            <declaration name="sparse" type="boolean" line="40"/>
            <javadoc line="40">
                True if the matrix is sparse, else false                
            </javadoc>
            <declaration name="field" type="MatrixField" line="44"/>
            <javadoc line="44">
                Type of data stored                
            </javadoc>
            <declaration name="symmetry" type="MatrixSymmetry" line="48"/>
            <javadoc line="48">
                Matrix symmetry                
            </javadoc>
            <javadoc line="52">
                Creates a specific type                
                <param>
                    sparseTrue for sparse matrices, else false                    
                </param>
                <param>
                    fieldType of data stored                    
                </param>
                <param>
                    symmetryMatrix symmetry                    
                </param>
            </javadoc>
            <method name="MatrixInfo" type="constructor" line="58">
                <params>
                    <param name="sparse" type="boolean"/>
                    <param name="field" type="MatrixField"/>
                    <param name="symmetry" type="MatrixSymmetry"/>
                </params>
            </method>
            <javadoc line="64">
                Validates the representation                
            </javadoc>
            <method name="validate" type="void" line="67"/>
            <javadoc line="73">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix is in coordinate format, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isSparse" type="boolean" line="77"/>
            <javadoc line="80">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix is in coordinate format, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isCoordinate" type="boolean" line="84"/>
            <javadoc line="87">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix is in array format, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isDense" type="boolean" line="91"/>
            <javadoc line="94">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix is in array format, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isArray" type="boolean" line="98"/>
            <javadoc line="101">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix stores real numbers, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isReal" type="boolean" line="105"/>
            <javadoc line="108">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix stores integers, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isInteger" type="boolean" line="112"/>
            <javadoc line="115">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix stores complex numbers, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isComplex" type="boolean" line="119"/>
            <javadoc line="122">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix does not store any numbers,
                  else &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isPattern" type="boolean" line="126"/>
            <javadoc line="129">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix form is general, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isGeneral" type="boolean" line="133"/>
            <javadoc line="136">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix is symmetrical, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isSymmetric" type="boolean" line="140"/>
            <javadoc line="143">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix is skew-symmetrical, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isSkewSymmetric" type="boolean" line="147"/>
            <javadoc line="150">
                Returns &lt;code&gt;true&lt;/code&gt; if the matrix is Hermitian, else
                  &lt;code&gt;false&lt;/code&gt;                
            </javadoc>
            <method name="isHermitian" type="boolean" line="154"/>
            <javadoc line="157">
                Returns a string representation of the specifier. Can be used to provide
                  a header for writing to a file. It is a two-line output, which can look
                  like this:
                  &lt;pre&gt;
                  %%MatrixMarket matrix coordinate real general
                  &lt;/pre&gt;                
            </javadoc>
            <method name="toString" type="String" line="165">
                <declaration name="buf" type="StringBuilder" line="166"/>
            </method>
        </class>
    </source>