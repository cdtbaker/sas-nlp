<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix.sparse">
        <import package="no.uib.cipr.matrix.Matrix"/>
        <import package="no.uib.cipr.matrix.Vector"/>
        <class name="AbstractIterativeSolver" line="4">
            <implements interface="IterativeSolver"/>
            <javadoc line="4">
                Partial implementation of an iterative solver                
            </javadoc>
            <declaration name="M" type="Preconditioner" line="8"/>
            <javadoc line="8">
                Preconditioner to use                
            </javadoc>
            <declaration name="iter" type="IterationMonitor" line="12"/>
            <javadoc line="12">
                Iteration monitor                
            </javadoc>
            <javadoc line="16">
                Constructor for AbstractIterativeSolver. Does not use preconditioning,
                  and uses the default linear iteration object.                
            </javadoc>
            <method name="AbstractIterativeSolver" type="constructor" line="20"/>
            <method name="setPreconditioner" type="void" line="24">
                <params>
                    <param name="M" type="Preconditioner"/>
                </params>
            </method>
            <method name="getPreconditioner" type="Preconditioner" line="27"/>
            <method name="getIterationMonitor" type="IterationMonitor" line="30"/>
            <method name="setIterationMonitor" type="void" line="33">
                <params>
                    <param name="iter" type="IterationMonitor"/>
                </params>
            </method>
            <javadoc line="36">
                Checks sizes of input data for {@link #solve(Matrix,Vector,Vector)}.
                  Throws an exception if the sizes does not match.                
            </javadoc>
            <method name="checkSizes" type="void" line="40">
                <params>
                    <param name="A" type="Matrix"/>
                    <param name="b" type="Vector"/>
                    <param name="x" type="Vector"/>
                </params>
            </method>
            <class name="IdentityPreconditioner" line="45">
                <implements interface="Preconditioner"/>
                <javadoc line="45">
                    Identity preconditioner which does nothing                    
                </javadoc>
                <method name="apply" type="Vector" line="49">
                    <params>
                        <param name="b" type="Vector"/>
                        <param name="x" type="Vector"/>
                    </params>
                </method>
                <method name="transApply" type="Vector" line="52">
                    <params>
                        <param name="b" type="Vector"/>
                        <param name="x" type="Vector"/>
                    </params>
                </method>
                <method name="setMatrix" type="void" line="55">
                    <params>
                        <param name="A" type="Matrix"/>
                    </params>
                </method>
            </class>
        </class>
    </source>