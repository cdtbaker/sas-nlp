<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix.sparse">
        <import package="no.uib.cipr.matrix.DenseMatrix"/>
        <import package="no.uib.cipr.matrix.DenseVector"/>
        <import package="no.uib.cipr.matrix.GivensRotation"/>
        <import package="no.uib.cipr.matrix.Matrix"/>
        <import package="no.uib.cipr.matrix.UpperTriangDenseMatrix"/>
        <import package="no.uib.cipr.matrix.Vector"/>
        <import package="no.uib.cipr.matrix.Vector.Norm"/>
        <class name="GMRES" line="9">
            <extends class="AbstractIterativeSolver"/>
            <javadoc line="9">
                GMRES solver. GMRES solves the unsymmetric linear system &lt;code&gt;Ax = b&lt;/code&gt;
                  using the Generalized Minimum Residual method. The GMRES iteration is
                  restarted after a given number of iterations. By default it is restarted
                  after 30 iterations.                
                <author>
                    Templates                    
                </author>
            </javadoc>
            <declaration name="restart" type="int" line="17"/>
            <javadoc line="17">
                After this many iterations, the GMRES will be restarted.                
            </javadoc>
            <declaration name="w" type="Vector" line="21"/>
            <javadoc line="21">
                Vectors for use in the iterative solution process                
            </javadoc>
            <declaration name="v" type="Vector[]" line="25"/>
            <javadoc line="25">
                Vectors spanning the subspace                
            </javadoc>
            <declaration name="s" type="DenseVector" line="29"/>
            <javadoc line="29">
                Restart vector                
            </javadoc>
            <declaration name="H" type="DenseMatrix" line="33"/>
            <javadoc line="33">
                Hessenberg matrix                
            </javadoc>
            <declaration name="rotation" type="GivensRotation[]" line="37"/>
            <javadoc line="37">
                Givens rotations for the QR factorization                
            </javadoc>
            <javadoc line="41">
                Constructor for GMRES. Uses the given vector as template for creating
                  scratch vectors. Typically, the solution or the right hand side vector
                  can be passed, and the template is not modified. The iteration is
                  restarted every 30 iterations                
                <param>
                    templateVector to use as template for the work vectors needed in the
                      solution process                    
                </param>
            </javadoc>
            <method name="GMRES" type="constructor" line="49">
                <params>
                    <param name="template" type="Vector"/>
                </params>
            </method>
            <javadoc line="52">
                Constructor for GMRES. Uses the given vector as template for creating
                  scratch vectors. Typically, the solution or the right hand side vector
                  can be passed, and the template is not modified                
                <param>
                    templateVector to use as template for the work vectors needed in the
                      solution process                    
                </param>
                <param>
                    restartGMRES iteration is restarted after this number of iterations                    
                </param>
            </javadoc>
            <method name="GMRES" type="constructor" line="60">
                <params>
                    <param name="template" type="Vector"/>
                    <param name="restart" type="int"/>
                </params>
            </method>
            <javadoc line="66">
                Sets the restart parameter                
                <param>
                    restartGMRES iteration is restarted after this number of iterations                    
                </param>
            </javadoc>
            <method name="setRestart" type="void" line="70">
                <params>
                    <param name="restart" type="int"/>
                </params>
            </method>
            <method name="solve" type="Vector" line="79">
                <params>
                    <param name="A" type="Matrix"/>
                    <param name="b" type="Vector"/>
                    <param name="x" type="Vector"/>
                </params>
                <declaration name="normr" type="double" line="83"/>
                <scope line="85">
                    <declaration name="i" type="int" line="88"/>
                    <scope line="89">
                        <scope line="92"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>