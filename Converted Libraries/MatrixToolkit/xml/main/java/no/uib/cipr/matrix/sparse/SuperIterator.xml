<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix.sparse">
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <class name="SuperIterator" line="4">
            <type_params>
                <type_param name="T"/>
                <type_param name="E"/>
            </type_params>
            <implements interface="Iterator">
                <type_params>
                    <type_param name="SuperIterator.SuperIteratorEntry"/>
                </type_params>
            </implements>
            <javadoc line="4">
                An iterator over an array of iterable objects                
            </javadoc>
            <declaration name="iterable" type="List&lt;T&gt;" line="8"/>
            <declaration name="current" type="Iterator&lt;E&gt;" line="9"/>
            <javadoc line="9">
                Two iterators. We need the &quot;next&quot; iterator so that hasNext works properly
                  from one iterable to the next. Using a single iterator won&apos;t do                
            </javadoc>
            <declaration name="currentIndex" type="int" line="14"/>
            <declaration name="entry" type="SuperIteratorEntry&lt;E&gt;" line="15"/>
            <javadoc line="15">
                Recyled entry returned from next()                
            </javadoc>
            <javadoc line="19">
                Constructor for SuperIterator                
                <param>
                    iterableIterable objects to iterate over                    
                </param>
            </javadoc>
            <method name="SuperIterator" type="constructor" line="23">
                <params>
                    <param name="iterable" type="List<T>"/>
                </params>
                <scope line="26"/>
                <scope line="30"/>
            </method>
            <method name="moveNext" type="void" line="38"/>
            <method name="moveCurrent" type="void" line="41"/>
            <method name="hasNext" type="boolean" line="44"/>
            <method name="next" type="SuperIteratorEntry<E>" line="47"/>
            <method name="remove" type="void" line="54"/>
            <class name="DummyIterator" line="57">
                <implements interface="Iterator">
                    <type_params>
                        <type_param name="E"/>
                    </type_params>
                </implements>
                <javadoc line="57">
                    Dummy iterator, for degenerate cases                    
                </javadoc>
                <method name="hasNext" type="boolean" line="61"/>
                <method name="next" type="E" line="64"/>
                <method name="remove" type="void" line="67"/>
            </class>
            <class name="SuperIteratorEntry" line="71">
                <type_params>
                    <type_param name="F"/>
                </type_params>
                <javadoc line="71">
                    Entry returned from this superiterator                    
                </javadoc>
                <declaration name="i" type="int" line="75"/>
                <javadoc line="75">
                    Index of the iterator which returned this                    
                </javadoc>
                <declaration name="o" type="F" line="79"/>
                <javadoc line="79">
                    Object returned                    
                </javadoc>
                <method name="update" type="void" line="83">
                    <params>
                        <param name="i" type="int"/>
                        <param name="o" type="F"/>
                    </params>
                </method>
                <method name="index" type="int" line="87"/>
                <method name="get" type="F" line="90"/>
            </class>
        </class>
    </source>