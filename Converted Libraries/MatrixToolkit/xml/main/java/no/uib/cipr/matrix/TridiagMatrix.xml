<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix">
        <import package="java.util.Arrays"/>
        <import package="java.util.Iterator"/>
        <import package="com.github.fommil.netlib.LAPACK"/>
        <import package="org.netlib.util.intW"/>
        <class name="TridiagMatrix" line="6">
            <extends class="AbstractMatrix"/>
            <javadoc line="6">
                Tridiagonal matrix. Stored in three arrays, one of length &lt;code&gt;n&lt;/code&gt;
                  for the diagonal, two of length &lt;code&gt;n-1&lt;/code&gt; for the superdiagonal and
                  subdiagonal entries.                
            </javadoc>
            <declaration name="diag" type="double[]" line="12"/>
            <javadoc line="12">
                Diagonal, super-diagonal and sub-diagonal                
            </javadoc>
            <declaration name="n" type="int" line="16"/>
            <javadoc line="16">
                Size of the matrix                
            </javadoc>
            <javadoc line="20">
                Constructor for TridiagMatrix                
                <param>
                    nSize of the matrix. Since the matrix must be square, this
                      equals both the number of rows and columns                    
                </param>
            </javadoc>
            <method name="TridiagMatrix" type="constructor" line="25">
                <params>
                    <param name="n" type="int"/>
                </params>
            </method>
            <javadoc line="33">
                Constructor for TridiagMatrix                
                <param>
                    AMatrix to copy from. Only the tridiagonal part is copied                    
                </param>
            </javadoc>
            <method name="TridiagMatrix" type="constructor" line="37">
                <params>
                    <param name="A" type="Matrix"/>
                </params>
            </method>
            <javadoc line="40">
                Constructor for TridiagMatrix                
                <param>
                    AMatrix to copy from. Only the tridiagonal part is copied                    
                </param>
                <param>
                    deepTrue for a deep copy, else it's shallow. For shallow copies,
                      <code>A</code> must be a <code>TridiagMatrix</code>                    
                </param>
            </javadoc>
            <method name="TridiagMatrix" type="constructor" line="46">
                <params>
                    <param name="A" type="Matrix"/>
                    <param name="deep" type="boolean"/>
                </params>
                <scope line="51"/>
                <scope line="57">
                    <declaration name="B" type="TridiagMatrix" line="58"/>
                </scope>
            </method>
            <javadoc line="64">
                Returns the diagonal entries. Length equal &lt;code&gt;n&lt;/code&gt;                
            </javadoc>
            <method name="getDiagonal" type="double[]" line="67"/>
            <javadoc line="70">
                Returns the sub diagonal entries. Length equal &lt;code&gt;n-1&lt;/code&gt;                
            </javadoc>
            <method name="getSubDiagonal" type="double[]" line="73"/>
            <javadoc line="76">
                Returns the super diagonal entries. Length equal &lt;code&gt;n-1&lt;/code&gt;                
            </javadoc>
            <method name="getSuperDiagonal" type="double[]" line="79"/>
            <method name="add" type="void" line="82">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="get" type="double" line="89">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <method name="set" type="void" line="96">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="copy" type="TridiagMatrix" line="103"/>
            <method name="zero" type="TridiagMatrix" line="106"/>
            <method name="solve" type="Matrix" line="112">
                <params>
                    <param name="B" type="Matrix"/>
                    <param name="X" type="Matrix"/>
                </params>
                <declaration name="Xd" type="double[]" line="115"/>
                <declaration name="info" type="intW" line="117"/>
            </method>
            <method name="solve" type="Vector" line="123">
                <params>
                    <param name="b" type="Vector"/>
                    <param name="x" type="Vector"/>
                </params>
                <declaration name="B" type="DenseMatrix" line="124"/>
            </method>
            <method name="transpose" type="Matrix" line="128">
                <declaration name="otherDiag" type="double[]" line="129"/>
            </method>
            <method name="iterator" type="Iterator<MatrixEntry>" line="134"/>
            <class name="TridiagMatrixIterator" line="137">
                <extends class="RefMatrixIterator"/>
                <javadoc line="137">
                    Iterator over a tridiagonal matrix                    
                </javadoc>
                <declaration name="band" type="double[]" line="141"/>
                <javadoc line="141">
                    Current band, starting with the main diagonal                    
                </javadoc>
                <declaration name="bandIndex" type="int" line="145"/>
                <javadoc line="145">
                    Band index                    
                </javadoc>
                <declaration name="whichBand" type="int" line="149"/>
                <javadoc line="149">
                    Which band in use (0 for main, 1 for sub, 2 for super)                    
                </javadoc>
                <method name="hasNext" type="boolean" line="153"/>
                <method name="next" type="MatrixEntry" line="156">
                    <scope line="159"/>
                </method>
            </class>
        </class>
    </source>