<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix">
        <import package="java.io.IOException"/>
        <import package="java.io.Serializable"/>
        <import package="java.util.Arrays"/>
        <import package="no.uib.cipr.matrix.io.MatrixVectorReader"/>
        <import package="no.uib.cipr.matrix.io.VectorInfo"/>
        <import package="no.uib.cipr.matrix.io.VectorSize"/>
        <import package="no.uib.cipr.matrix.io.VectorInfo.VectorField"/>
        <class name="DenseVector" line="9">
            <extends class="AbstractVector"/>
            <implements interface="Serializable"/>
            <javadoc line="9">
                Dense vector. Stored by a &lt;code&gt;double[]&lt;/code&gt; array of the same length as
                  the vector itself.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="14"/>
            <javadoc line="14">
                just the private data                
            </javadoc>
            <declaration name="data" type="double[]" line="18"/>
            <javadoc line="18">
                Vector data                
            </javadoc>
            <javadoc line="22">
                Constructor for DenseVector                
                <param>
                    rReader to get vector from                    
                </param>
            </javadoc>
            <method name="DenseVector" type="constructor" line="26">
                <params>
                    <param name="r" type="MatrixVectorReader"/>
                </params>
                <declaration name="info" type="VectorInfo" line="28"/>
                <declaration name="size" type="VectorSize" line="31"/>
                <scope line="36">
                    <declaration name="nz" type="int" line="37"/>
                    <declaration name="index" type="int[]" line="38"/>
                    <declaration name="entry" type="double[]" line="39"/>
                </scope>
            </method>
            <javadoc line="46">
                Constructor for DenseVector                
                <param>
                    sizeSize of the vector                    
                </param>
            </javadoc>
            <method name="DenseVector" type="constructor" line="50">
                <params>
                    <param name="size" type="int"/>
                </params>
            </method>
            <javadoc line="54">
                Constructor for DenseVector                
                <param>
                    xCopies contents from this vector. A deep copy is made                    
                </param>
            </javadoc>
            <method name="DenseVector" type="constructor" line="58">
                <params>
                    <param name="x" type="Vector"/>
                </params>
            </method>
            <javadoc line="61">
                Constructor for DenseVector                
                <param>
                    xCopies contents from this vector                    
                </param>
                <param>
                    deepTrue for a deep copy. For a shallow copy, <code>x</code>
                      must be a <code>DenseVector</code>                    
                </param>
            </javadoc>
            <method name="DenseVector" type="constructor" line="67">
                <params>
                    <param name="x" type="Vector"/>
                    <param name="deep" type="boolean"/>
                </params>
                <scope line="69"/>
            </method>
            <javadoc line="75">
                Constructor for DenseVector                
                <param>
                    xCopies contents from this array                    
                </param>
                <param>
                    deepTrue for a deep copy. For a shallow copy, <code>x</code> is
                      aliased with the internal storage                    
                </param>
            </javadoc>
            <method name="DenseVector" type="constructor" line="81">
                <params>
                    <param name="x" type="double[]"/>
                    <param name="deep" type="boolean"/>
                </params>
            </method>
            <javadoc line="86">
                Constructor for DenseVector                
                <param>
                    xCopies contents from this array in a deep copy                    
                </param>
            </javadoc>
            <method name="DenseVector" type="constructor" line="90">
                <params>
                    <param name="x" type="double[]"/>
                </params>
            </method>
            <method name="set" type="void" line="93">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="add" type="void" line="97">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="get" type="double" line="101">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="copy" type="DenseVector" line="105"/>
            <method name="zero" type="DenseVector" line="108"/>
            <method name="scale" type="DenseVector" line="112">
                <params>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <method name="set" type="Vector" line="116">
                <params>
                    <param name="y" type="Vector"/>
                </params>
                <declaration name="yd" type="double[]" line="119"/>
            </method>
            <method name="set" type="Vector" line="123">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="y" type="Vector"/>
                </params>
                <declaration name="yd" type="double[]" line="127"/>
            </method>
            <method name="add" type="Vector" line="131">
                <params>
                    <param name="y" type="Vector"/>
                </params>
                <declaration name="yd" type="double[]" line="134"/>
            </method>
            <method name="add" type="Vector" line="138">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="y" type="Vector"/>
                </params>
                <declaration name="yd" type="double[]" line="142"/>
            </method>
            <method name="dot" type="double" line="146">
                <params>
                    <param name="y" type="Vector"/>
                </params>
                <declaration name="yd" type="double[]" line="149"/>
                <declaration name="dot" type="double" line="150"/>
            </method>
            <method name="norm1" type="double" line="154">
                <declaration name="sum" type="double" line="155"/>
            </method>
            <method name="norm2" type="double" line="159">
                <declaration name="norm" type="double" line="160"/>
            </method>
            <method name="norm2_robust" type="double" line="164">
                <declaration name="scale" type="double" line="165"/>
                <scope line="166">
                    <declaration name="absxi" type="double" line="167"/>
                    <scope line="168"/>
                </scope>
            </method>
            <method name="normInf" type="double" line="176">
                <declaration name="max" type="double" line="177"/>
            </method>
            <javadoc line="181">
                Returns the internal vector contents. The array indices correspond to the
                  vector indices                
            </javadoc>
            <method name="getData" type="double[]" line="185"/>
        </class>
    </source>