<?xml version="1.0" encoding="UTF-8"?>
    <source package="no.uib.cipr.matrix">
        <import package="junit.framework.TestCase"/>
        <class name="MatrixTestAbstract" line="3">
            <extends class="TestCase"/>
            <javadoc line="3">
                Tests a matrix                
            </javadoc>
            <declaration name="A" type="Matrix" line="7"/>
            <javadoc line="7">
                Matrix to test                
            </javadoc>
            <declaration name="Ad" type="double[][]" line="11"/>
            <javadoc line="11">
                Jagged array version of A                
            </javadoc>
            <declaration name="Bdense" type="Matrix" line="15"/>
            <javadoc line="15">
                Matrix of the same size as A, dense and non-dense                
            </javadoc>
            <declaration name="Bd" type="double[][]" line="19"/>
            <javadoc line="19">
                Contents of B                
            </javadoc>
            <declaration name="xR" type="Vector" line="23"/>
            <javadoc line="23">
                Non-dense vectors with size equal the number of rows in A                
            </javadoc>
            <declaration name="xC" type="Vector" line="27"/>
            <javadoc line="27">
                Non-dense vectors with size equal the number of columns in A                
            </javadoc>
            <declaration name="xDenseR" type="Vector" line="31"/>
            <javadoc line="31">
                Dense vectors with size equal the number of rows in A                
            </javadoc>
            <declaration name="xDenseC" type="Vector" line="35"/>
            <javadoc line="35">
                Dense vectors with size equal the number of columns in A                
            </javadoc>
            <declaration name="xdR" type="double[]" line="39"/>
            <javadoc line="39">
                Contents of the vectors                
            </javadoc>
            <declaration name="tol" type="double" line="43"/>
            <javadoc line="43">
                Tolerance for floating-point comparisons                
            </javadoc>
            <declaration name="max" type="int" line="47"/>
            <javadoc line="47">
                Maximum matrix size, to avoid too slow tests                
            </javadoc>
            <javadoc line="51">
                Constructor for MatrixTestAbstract                
            </javadoc>
            <method name="MatrixTestAbstract" type="constructor" line="54">
                <params>
                    <param name="arg0" type="String"/>
                </params>
            </method>
            <method name="setUp" type="void" line="57"/>
            <method name="createPrimary" type="void" line="61"/>
            <method name="tearDown" type="void" line="62"/>
            <javadoc line="68">
                Called after setUp() to create additional datastructures                
            </javadoc>
            <method name="createAuxillerary" type="void" line="71"/>
            <method name="testMatrixRank2Dense" type="void" line="88">
                <scope line="89">
                    <declaration name="n" type="int" line="90"/>
                    <declaration name="B" type="Matrix" line="91"/>
                    <declaration name="Bd" type="double[][]" line="92"/>
                    <declaration name="alpha" type="double" line="93"/>
                </scope>
            </method>
            <method name="testMatrixRank2" type="void" line="101">
                <scope line="102">
                    <declaration name="n" type="int" line="103"/>
                    <declaration name="B" type="Matrix" line="104"/>
                    <declaration name="Bd" type="double[][]" line="105"/>
                    <declaration name="alpha" type="double" line="106"/>
                </scope>
            </method>
            <method name="testMatrixTransRank2Dense" type="void" line="114">
                <scope line="115">
                    <declaration name="n" type="int" line="116"/>
                    <declaration name="B" type="Matrix" line="117"/>
                    <declaration name="Bd" type="double[][]" line="118"/>
                    <declaration name="alpha" type="double" line="119"/>
                </scope>
            </method>
            <method name="testMatrixTransRank2" type="void" line="127">
                <scope line="128">
                    <declaration name="n" type="int" line="129"/>
                    <declaration name="B" type="Matrix" line="130"/>
                    <declaration name="Bd" type="double[][]" line="131"/>
                    <declaration name="alpha" type="double" line="132"/>
                </scope>
            </method>
            <method name="testMatrixRank1Dense" type="void" line="140">
                <scope line="141">
                    <declaration name="C" type="Matrix" line="142"/>
                    <declaration name="Cd" type="double[][]" line="143"/>
                    <declaration name="alpha" type="double" line="144"/>
                </scope>
            </method>
            <method name="testMatrixRank1" type="void" line="151">
                <scope line="152">
                    <declaration name="C" type="Matrix" line="153"/>
                    <declaration name="Cd" type="double[][]" line="154"/>
                    <declaration name="alpha" type="double" line="155"/>
                </scope>
            </method>
            <method name="testMatrixTransRank1Dense" type="void" line="162">
                <scope line="163">
                    <declaration name="C" type="Matrix" line="164"/>
                    <declaration name="Cd" type="double[][]" line="165"/>
                    <declaration name="alpha" type="double" line="166"/>
                </scope>
            </method>
            <method name="testMatrixTransRank1" type="void" line="173">
                <scope line="174">
                    <declaration name="C" type="Matrix" line="175"/>
                    <declaration name="Cd" type="double[][]" line="176"/>
                    <declaration name="alpha" type="double" line="177"/>
                </scope>
            </method>
            <method name="testMatrixMultDense" type="void" line="184">
                <declaration name="m" type="int" line="185"/>
                <declaration name="B" type="Matrix" line="186"/>
                <declaration name="Bd" type="double[][]" line="187"/>
                <declaration name="alpha" type="double" line="188"/>
            </method>
            <method name="testMatrixMult" type="void" line="195">
                <declaration name="m" type="int" line="196"/>
                <declaration name="B" type="Matrix" line="197"/>
                <declaration name="Bd" type="double[][]" line="198"/>
                <declaration name="alpha" type="double" line="199"/>
            </method>
            <method name="testMatrixTransAmultDense" type="void" line="206">
                <declaration name="m" type="int" line="207"/>
                <declaration name="B" type="Matrix" line="208"/>
                <declaration name="Bd" type="double[][]" line="209"/>
                <declaration name="alpha" type="double" line="210"/>
            </method>
            <method name="testMatrixTransAmult" type="void" line="217">
                <declaration name="m" type="int" line="218"/>
                <declaration name="B" type="Matrix" line="219"/>
                <declaration name="Bd" type="double[][]" line="220"/>
                <declaration name="alpha" type="double" line="221"/>
            </method>
            <method name="testMatrixTransABmultDense" type="void" line="228">
                <declaration name="m" type="int" line="229"/>
                <declaration name="B" type="Matrix" line="230"/>
                <declaration name="Bd" type="double[][]" line="231"/>
                <declaration name="alpha" type="double" line="232"/>
            </method>
            <method name="testMatrixTransABmult" type="void" line="239">
                <declaration name="m" type="int" line="240"/>
                <declaration name="B" type="Matrix" line="241"/>
                <declaration name="Bd" type="double[][]" line="242"/>
                <declaration name="alpha" type="double" line="243"/>
            </method>
            <method name="testMatrixTransBmultDense" type="void" line="250">
                <declaration name="m" type="int" line="251"/>
                <declaration name="B" type="Matrix" line="252"/>
                <declaration name="Bd" type="double[][]" line="253"/>
                <declaration name="alpha" type="double" line="254"/>
            </method>
            <method name="testMatrixTransBmult" type="void" line="261">
                <declaration name="m" type="int" line="262"/>
                <declaration name="B" type="Matrix" line="263"/>
                <declaration name="Bd" type="double[][]" line="264"/>
                <declaration name="alpha" type="double" line="265"/>
            </method>
            <method name="testMatrixMultAddDense" type="void" line="272">
                <declaration name="m" type="int" line="273"/>
                <declaration name="B" type="Matrix" line="274"/>
                <declaration name="Bd" type="double[][]" line="275"/>
                <declaration name="alpha" type="double" line="276"/>
            </method>
            <method name="testMatrixMultAdd" type="void" line="283">
                <declaration name="m" type="int" line="284"/>
                <declaration name="B" type="Matrix" line="285"/>
                <declaration name="Bd" type="double[][]" line="286"/>
                <declaration name="alpha" type="double" line="287"/>
            </method>
            <method name="testMatrixTransAmultAddDense" type="void" line="294">
                <declaration name="m" type="int" line="295"/>
                <declaration name="B" type="Matrix" line="296"/>
                <declaration name="Bd" type="double[][]" line="297"/>
                <declaration name="alpha" type="double" line="298"/>
            </method>
            <method name="testMatrixTransAmultAdd" type="void" line="305">
                <declaration name="m" type="int" line="306"/>
                <declaration name="B" type="Matrix" line="307"/>
                <declaration name="Bd" type="double[][]" line="308"/>
                <declaration name="alpha" type="double" line="309"/>
            </method>
            <method name="testMatrixTransABmultAddDense" type="void" line="316">
                <declaration name="m" type="int" line="317"/>
                <declaration name="B" type="Matrix" line="318"/>
                <declaration name="Bd" type="double[][]" line="319"/>
                <declaration name="alpha" type="double" line="320"/>
            </method>
            <method name="testMatrixTransABmultAdd" type="void" line="327">
                <declaration name="m" type="int" line="328"/>
                <declaration name="B" type="Matrix" line="329"/>
                <declaration name="Bd" type="double[][]" line="330"/>
                <declaration name="alpha" type="double" line="331"/>
            </method>
            <method name="testMatrixTransBmultAddDense" type="void" line="338">
                <declaration name="m" type="int" line="339"/>
                <declaration name="B" type="Matrix" line="340"/>
                <declaration name="Bd" type="double[][]" line="341"/>
                <declaration name="alpha" type="double" line="342"/>
            </method>
            <method name="testMatrixTransBmultAdd" type="void" line="349">
                <declaration name="m" type="int" line="350"/>
                <declaration name="B" type="Matrix" line="351"/>
                <declaration name="Bd" type="double[][]" line="352"/>
                <declaration name="alpha" type="double" line="353"/>
            </method>
            <method name="rank2" type="double[][]" line="360">
                <params>
                    <param name="Ad" type="double[][]"/>
                    <param name="alpha" type="double"/>
                    <param name="Bd" type="double[][]"/>
                    <param name="Cd" type="double[][]"/>
                </params>
            </method>
            <method name="transRank2" type="double[][]" line="363">
                <params>
                    <param name="Ad" type="double[][]"/>
                    <param name="alpha" type="double"/>
                    <param name="Bd" type="double[][]"/>
                    <param name="Cd" type="double[][]"/>
                </params>
            </method>
            <method name="rank1" type="double[][]" line="366">
                <params>
                    <param name="Ad" type="double[][]"/>
                    <param name="alpha" type="double"/>
                    <param name="Cd" type="double[][]"/>
                </params>
            </method>
            <method name="transRank1" type="double[][]" line="369">
                <params>
                    <param name="Ad" type="double[][]"/>
                    <param name="alpha" type="double"/>
                    <param name="Cd" type="double[][]"/>
                </params>
            </method>
            <method name="testVectorRank2Dense" type="void" line="372">
                <scope line="373">
                    <declaration name="alpha" type="double" line="374"/>
                </scope>
            </method>
            <method name="testVectorRank2" type="void" line="378">
                <scope line="379">
                    <declaration name="alpha" type="double" line="380"/>
                </scope>
            </method>
            <method name="testVectorRank1Dense" type="void" line="384">
                <scope line="385">
                    <declaration name="alpha" type="double" line="386"/>
                </scope>
            </method>
            <method name="testVectorRank1" type="void" line="390">
                <scope line="391">
                    <declaration name="alpha" type="double" line="392"/>
                </scope>
            </method>
            <method name="rank2" type="double[][]" line="396">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="xd" type="double[]"/>
                    <param name="yd" type="double[]"/>
                </params>
            </method>
            <method name="rank1" type="double[][]" line="401">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="xd" type="double[]"/>
                    <param name="yd" type="double[]"/>
                </params>
            </method>
            <method name="testVectorTransMultAddDense" type="void" line="405">
                <declaration name="alpha" type="double" line="406"/>
            </method>
            <method name="testVectorTransMultAdd" type="void" line="412">
                <declaration name="alpha" type="double" line="413"/>
            </method>
            <method name="transMultAdd" type="double[]" line="419">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="xd" type="double[]"/>
                    <param name="yd" type="double[]"/>
                </params>
                <declaration name="rows" type="int" line="420"/>
                <scope line="422">
                    <declaration name="dot" type="double" line="423"/>
                </scope>
            </method>
            <method name="testVectorMultDense" type="void" line="429">
                <declaration name="alpha" type="double" line="430"/>
            </method>
            <method name="testVectorMult" type="void" line="436">
                <declaration name="alpha" type="double" line="437"/>
            </method>
            <method name="mult" type="double[]" line="443">
                <params>
                    <param name="alpha" type="double"/>
                    <param name="xd" type="double[]"/>
                    <param name="yd" type="double[]"/>
                </params>
                <scope line="444">
                    <declaration name="dot" type="double" line="445"/>
                </scope>
            </method>
            <method name="testVectorMultAddDense" type="void" line="451">
                <declaration name="alpha" type="double" line="452"/>
            </method>
            <method name="testVectorMultAdd" type="void" line="458">
                <declaration name="alpha" type="double" line="459"/>
            </method>
            <method name="multAdd" type="double[]" line="465">
                <params>
                    <param name="Ad" type="double[][]"/>
                    <param name="alpha" type="double"/>
                    <param name="xd" type="double[]"/>
                    <param name="yd" type="double[]"/>
                </params>
                <scope line="466">
                    <declaration name="dot" type="double" line="467"/>
                </scope>
            </method>
            <method name="mult" type="double[][]" line="473">
                <params>
                    <param name="Ad" type="double[][]"/>
                    <param name="alpha" type="double"/>
                    <param name="Bd" type="double[][]"/>
                    <param name="Cd" type="double[][]"/>
                </params>
                <declaration name="m" type="int" line="474"/>
            </method>
            <method name="transAmult" type="double[][]" line="480">
                <params>
                    <param name="Ad" type="double[][]"/>
                    <param name="alpha" type="double"/>
                    <param name="Bd" type="double[][]"/>
                    <param name="Cd" type="double[][]"/>
                </params>
                <declaration name="m" type="int" line="481"/>
                <scope line="483">
                    <declaration name="temp" type="double" line="484"/>
                </scope>
            </method>
            <method name="transBmult" type="double[][]" line="490">
                <params>
                    <param name="Ad" type="double[][]"/>
                    <param name="alpha" type="double"/>
                    <param name="Bd" type="double[][]"/>
                    <param name="Cd" type="double[][]"/>
                </params>
                <declaration name="m" type="int" line="491"/>
                <scope line="494"/>
            </method>
            <method name="transABmult" type="double[][]" line="499">
                <params>
                    <param name="Ad" type="double[][]"/>
                    <param name="alpha" type="double"/>
                    <param name="Bd" type="double[][]"/>
                    <param name="Cd" type="double[][]"/>
                </params>
                <declaration name="m" type="int" line="500"/>
                <scope line="502">
                    <declaration name="temp" type="double" line="503"/>
                </scope>
            </method>
            <method name="multAdd" type="double[][]" line="509">
                <params>
                    <param name="Ad" type="double[][]"/>
                    <param name="alpha" type="double"/>
                    <param name="Bd" type="double[][]"/>
                    <param name="Cd" type="double[][]"/>
                </params>
                <declaration name="m" type="int" line="510"/>
            </method>
            <method name="transAmultAdd" type="double[][]" line="515">
                <params>
                    <param name="Ad" type="double[][]"/>
                    <param name="alpha" type="double"/>
                    <param name="Bd" type="double[][]"/>
                    <param name="Cd" type="double[][]"/>
                </params>
                <declaration name="m" type="int" line="516"/>
                <scope line="518">
                    <declaration name="temp" type="double" line="519"/>
                </scope>
            </method>
            <method name="transBmultAdd" type="double[][]" line="525">
                <params>
                    <param name="Ad" type="double[][]"/>
                    <param name="alpha" type="double"/>
                    <param name="Bd" type="double[][]"/>
                    <param name="Cd" type="double[][]"/>
                </params>
                <declaration name="m" type="int" line="526"/>
            </method>
            <method name="transABmultAdd" type="double[][]" line="531">
                <params>
                    <param name="Ad" type="double[][]"/>
                    <param name="alpha" type="double"/>
                    <param name="Bd" type="double[][]"/>
                    <param name="Cd" type="double[][]"/>
                </params>
                <declaration name="m" type="int" line="532"/>
                <scope line="534">
                    <declaration name="temp" type="double" line="535"/>
                </scope>
            </method>
            <javadoc line="541">
                Tests &lt;code&gt;A = A + alphaB&lt;/code&gt;                
            </javadoc>
            <method name="testRandomMatrixAdd" type="void" line="544">
                <declaration name="alpha" type="double" line="545"/>
            </method>
            <javadoc line="551">
                Tests &lt;code&gt;A = A + B&lt;/code&gt;                
            </javadoc>
            <method name="testMatrixAdd" type="void" line="554"/>
            <javadoc line="560">
                Tests &lt;code&gt;A = A + 1B&lt;/code&gt;                
            </javadoc>
            <method name="testOneMatrixAdd" type="void" line="563"/>
            <javadoc line="569">
                Tests &lt;code&gt;A = A + 0B&lt;/code&gt;                
            </javadoc>
            <method name="testZeroMatrixAdd" type="void" line="572"/>
            <javadoc line="578">
                Tests &lt;code&gt;A = alphaB&lt;/code&gt;                
            </javadoc>
            <method name="testRandomMatrixSet" type="void" line="581">
                <declaration name="alpha" type="double" line="582"/>
            </method>
            <javadoc line="588">
                Tests &lt;code&gt;A = B&lt;/code&gt;                
            </javadoc>
            <method name="testMatrixSet" type="void" line="591"/>
            <javadoc line="597">
                Tests &lt;code&gt;A = 1B&lt;/code&gt;                
            </javadoc>
            <method name="testOneMatrixSet" type="void" line="600"/>
            <javadoc line="606">
                Tests &lt;code&gt;A = 0B&lt;/code&gt;                
            </javadoc>
            <method name="testZeroMatrixSet" type="void" line="609"/>
            <javadoc line="615">
                Checks transpose                
            </javadoc>
            <method name="testTranspose" type="void" line="618">
                <declaration name="At" type="Matrix" line="619"/>
            </method>
            <method name="set" type="void" line="622">
                <params>
                    <param name="A" type="double[][]"/>
                    <param name="alpha" type="double"/>
                    <param name="B" type="double[][]"/>
                </params>
            </method>
            <method name="add" type="void" line="625">
                <params>
                    <param name="A" type="double[][]"/>
                    <param name="alpha" type="double"/>
                    <param name="B" type="double[][]"/>
                </params>
            </method>
            <method name="transpose" type="double[][]" line="628">
                <declaration name="Adt" type="double[][]" line="630"/>
            </method>
            <javadoc line="634">
                Test of direct matrix solver                
            </javadoc>
            <method name="testMatrixSolve" type="void" line="637">
                <scope line="638">
                    <scope line="639">
                        <declaration name="B" type="Matrix" line="640"/>
                        <declaration name="X" type="Matrix" line="641"/>
                        <declaration name="Y" type="Matrix" line="643"/>
                    </scope>
                    <scope line="648"/>
                    <scope line="651"/>
                </scope>
            </method>
            <javadoc line="656">
                Test of direct transpose matrix solver                
            </javadoc>
            <method name="testTransMatrixSolve" type="void" line="659">
                <scope line="660">
                    <scope line="661">
                        <declaration name="B" type="Matrix" line="662"/>
                        <declaration name="X" type="Matrix" line="663"/>
                        <declaration name="Y" type="Matrix" line="665"/>
                    </scope>
                    <scope line="670"/>
                    <scope line="673"/>
                </scope>
            </method>
            <javadoc line="678">
                Test of direct vector solver                
            </javadoc>
            <method name="testVectorSolve" type="void" line="681">
                <scope line="682">
                    <scope line="683">
                        <declaration name="b" type="Vector" line="684"/>
                        <declaration name="x" type="Vector" line="685"/>
                        <declaration name="y" type="Vector" line="687"/>
                    </scope>
                    <scope line="692"/>
                    <scope line="695"/>
                </scope>
            </method>
            <javadoc line="700">
                Test of direct transpose vector solver                
            </javadoc>
            <method name="testTransVectorSolve" type="void" line="703">
                <scope line="704">
                    <scope line="705">
                        <declaration name="b" type="Vector" line="706"/>
                        <declaration name="x" type="Vector" line="707"/>
                        <declaration name="y" type="Vector" line="709"/>
                    </scope>
                    <scope line="714"/>
                    <scope line="717"/>
                </scope>
            </method>
            <javadoc line="722">
                Test additions using iterators                
            </javadoc>
            <method name="testAdd" type="void" line="725">
                <declaration name="alpha" type="double" line="726"/>
                <scope line="727"/>
            </method>
            <javadoc line="733">
                Checks that copy is deep, not reference                
            </javadoc>
            <method name="testCopy" type="void" line="736">
                <declaration name="Ac" type="Matrix" line="737"/>
            </method>
            <javadoc line="741">
                Test iterator get                
            </javadoc>
            <method name="testIterator" type="void" line="744">
                <declaration name="Ac" type="double[][]" line="745"/>
            </method>
            <javadoc line="749">
                Test iterator set                
            </javadoc>
            <method name="testIteratorSet" type="void" line="752">
                <declaration name="alpha" type="double" line="753"/>
            </method>
            <javadoc line="757">
                Test iterator read and write                
            </javadoc>
            <method name="testIteratorSetGet" type="void" line="760">
                <declaration name="alpha" type="double" line="761"/>
                <declaration name="Ac" type="double[][]" line="762"/>
                <scope line="763"/>
            </method>
            <javadoc line="771">
                Checks zero()                
            </javadoc>
            <method name="testZero" type="void" line="774"/>
            <method name="zero" type="double[][]" line="777"/>
            <javadoc line="781">
                Cardinality computation                
            </javadoc>
            <method name="testCardinality" type="void" line="784"/>
            <method name="cardinality" type="int" line="787">
                <declaration name="nz" type="int" line="788"/>
            </method>
            <javadoc line="792">
                Checks in-place transpose for square matrices                
            </javadoc>
            <method name="testTransposeInplace" type="void" line="795"/>
            <javadoc line="798">
                Scaling with an arbitrary scalar                
            </javadoc>
            <method name="testScale" type="void" line="801">
                <declaration name="alpha" type="double" line="802"/>
            </method>
            <javadoc line="807">
                Scaling by zero                
            </javadoc>
            <method name="testZeroScale" type="void" line="810"/>
            <javadoc line="815">
                Scaling by one                
            </javadoc>
            <method name="testOneScale" type="void" line="818"/>
            <method name="scale" type="double[][]" line="823">
                <params>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="827">
                Checks the 1 norm                
            </javadoc>
            <method name="testOneNorm" type="void" line="830"/>
            <javadoc line="834">
                Checks the Frobenius norm                
            </javadoc>
            <method name="testFrobeniusNorm" type="void" line="837"/>
            <javadoc line="841">
                Checks the infinity norm                
            </javadoc>
            <method name="testInfinityNorm" type="void" line="844"/>
            <method name="norm1" type="double" line="848">
                <params>
                    <param name="A" type="double[][]"/>
                </params>
                <declaration name="max" type="double" line="849"/>
                <scope line="850">
                    <declaration name="rowsum" type="double" line="851"/>
                </scope>
            </method>
            <method name="normF" type="double" line="857">
                <params>
                    <param name="A" type="double[][]"/>
                </params>
                <declaration name="norm" type="double" line="858"/>
            </method>
            <method name="normInf" type="double" line="862">
                <params>
                    <param name="A" type="double[][]"/>
                </params>
                <declaration name="columnSum" type="double[]" line="864"/>
                <declaration name="max" type="double" line="866"/>
            </method>
            <javadoc line="870">
                Checks for equality between the matrix and the array                
            </javadoc>
            <method name="assertEquals" type="void" line="873">
                <params>
                    <param name="Ad" type="double[][]"/>
                    <param name="A" type="Matrix"/>
                </params>
                <scope line="877"/>
            </method>
            <javadoc line="882">
                Checks for equality between two arrays                
            </javadoc>
            <method name="assertEquals" type="void" line="885">
                <params>
                    <param name="Ad" type="double[][]"/>
                    <param name="Ac" type="double[][]"/>
                </params>
                <scope line="887"/>
            </method>
            <method name="assertEquals" type="void" line="892">
                <params>
                    <param name="xd" type="double[]"/>
                    <param name="x" type="Vector"/>
                </params>
            </method>
            <method name="assertEquals" type="void" line="896">
                <params>
                    <param name="xd" type="double[]"/>
                    <param name="yd" type="double[]"/>
                </params>
            </method>
            <method name="assertEquals" type="void" line="899">
                <params>
                    <param name="expected" type="Matrix"/>
                    <param name="test" type="Matrix"/>
                </params>
                <scope line="902">
                    <scope line="903"/>
                </scope>
            </method>
            <method name="assertEquals" type="void" line="908">
                <params>
                    <param name="expected" type="Vector"/>
                    <param name="test" type="Vector"/>
                </params>
                <scope line="910"/>
            </method>
            <method name="assertEqualsOrOpposite" type="void" line="914">
                <params>
                    <param name="expected" type="Vector"/>
                    <param name="test" type="Vector"/>
                </params>
                <scope line="916">
                    <declaration name="a" type="double" line="917"/>
                    <declaration name="b" type="double" line="918"/>
                </scope>
            </method>
        </class>
    </source>