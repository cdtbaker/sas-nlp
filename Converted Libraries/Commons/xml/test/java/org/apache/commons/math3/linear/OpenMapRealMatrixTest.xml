<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="org.apache.commons.math3.exception.NumberIsTooLargeException"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="OpenMapRealMatrixTest" line="23">
            <method name="testMath679" type="void" line="26"/>
            <method name="testMath870" type="void" line="31">
                <comment line="33">
                    Caveat: This implementation assumes that, for any {@code x},
                     the equality {@code x * 0d == 0d} holds. But it is is not true for
                     {@code NaN}. Moreover, zero entries will lose their sign.
                     Some operations (that involve {@code NaN} and/or infinities) may
                     thus give incorrect results.                    
                </comment>
                <comment line="45">
                    NaNs and infinities have disappeared, this is a limitation of our implementation                    
                </comment>
                <declaration name="a" type="OpenMapRealMatrix" line="37"/>
                <declaration name="x" type="OpenMapRealMatrix" line="38"/>
                <declaration name="b" type="OpenMapRealMatrix" line="41"/>
                <scope line="42">
                    <scope line="43"/>
                </scope>
            </method>
        </class>
    </source>