<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.function">
        <import package="org.apache.commons.math3.analysis.UnivariateFunction"/>
        <import package="org.apache.commons.math3.analysis.FunctionUtils"/>
        <import package="org.apache.commons.math3.analysis.differentiation.DerivativeStructure"/>
        <import package="org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.random.Well1024a"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="LogitTest" line="34">
            <javadoc line="34">
                Test for class {@link Logit}.                
            </javadoc>
            <declaration name="EPS" type="double" line="38"/>
            <method name="testPreconditions1" type="void" line="41">
                <declaration name="lo" type="double" line="42"/>
                <declaration name="hi" type="double" line="43"/>
                <declaration name="f" type="UnivariateFunction" line="44"/>
            </method>
            <method name="testPreconditions2" type="void" line="50">
                <declaration name="lo" type="double" line="51"/>
                <declaration name="hi" type="double" line="52"/>
                <declaration name="f" type="UnivariateFunction" line="53"/>
            </method>
            <method name="testSomeValues" type="void" line="59">
                <declaration name="lo" type="double" line="60"/>
                <declaration name="hi" type="double" line="61"/>
                <declaration name="f" type="UnivariateFunction" line="62"/>
            </method>
            <method name="testDerivative" type="void" line="70">
                <declaration name="lo" type="double" line="71"/>
                <declaration name="hi" type="double" line="72"/>
                <declaration name="f" type="Logit" line="73"/>
                <declaration name="f15" type="DerivativeStructure" line="74"/>
            </method>
            <method name="testDerivativeLargeArguments" type="void" line="80">
                <comment line="90">
                    expected                    
                </comment>
                <declaration name="f" type="Logit" line="81"/>
                <scope line="85">
                    <scope line="86"/>
                    <scope line="89"/>
                    <scope line="91"/>
                </scope>
            </method>
            <method name="testDerivativesHighOrder" type="void" line="98">
                <declaration name="l" type="DerivativeStructure" line="99"/>
            </method>
            <method name="testParametricUsage1" type="void" line="109">
                <declaration name="g" type="Logit.Parametric" line="110"/>
            </method>
            <method name="testParametricUsage2" type="void" line="115">
                <declaration name="g" type="Logit.Parametric" line="116"/>
            </method>
            <method name="testParametricUsage3" type="void" line="121">
                <declaration name="g" type="Logit.Parametric" line="122"/>
            </method>
            <method name="testParametricUsage4" type="void" line="127">
                <declaration name="g" type="Logit.Parametric" line="128"/>
            </method>
            <method name="testParametricUsage5" type="void" line="133">
                <declaration name="g" type="Logit.Parametric" line="134"/>
            </method>
            <method name="testParametricUsage6" type="void" line="139">
                <declaration name="g" type="Logit.Parametric" line="140"/>
            </method>
            <method name="testParametricValue" type="void" line="145">
                <declaration name="lo" type="double" line="146"/>
                <declaration name="hi" type="double" line="147"/>
                <declaration name="f" type="Logit" line="148"/>
                <declaration name="g" type="Logit.Parametric" line="150"/>
            </method>
            <method name="testValueWithInverseFunction" type="void" line="157">
                <declaration name="lo" type="double" line="158"/>
                <declaration name="hi" type="double" line="159"/>
                <declaration name="f" type="Logit" line="160"/>
                <declaration name="g" type="Sigmoid" line="161"/>
                <declaration name="random" type="RandomGenerator" line="162"/>
                <declaration name="id" type="UnivariateDifferentiableFunction" line="163"/>
                <scope line="166">
                    <declaration name="x" type="double" line="167"/>
                </scope>
            </method>
            <method name="testDerivativesWithInverseFunction" type="void" line="176">
                <comment line="197">
                    each function evaluates correctly near boundaries,                    
                </comment>
                <comment line="198">
                    but combination leads to NaN as some intermediate point is infinite                    
                </comment>
                <declaration name="epsilon" type="double[]" line="177"/>
                <declaration name="lo" type="double" line="178"/>
                <declaration name="hi" type="double" line="179"/>
                <declaration name="f" type="Logit" line="180"/>
                <declaration name="g" type="Sigmoid" line="181"/>
                <declaration name="random" type="RandomGenerator" line="182"/>
                <declaration name="id" type="UnivariateDifferentiableFunction" line="183"/>
                <scope line="185">
                    <declaration name="max" type="double" line="186"/>
                    <scope line="187">
                        <declaration name="x" type="double" line="188"/>
                        <declaration name="dsX" type="DerivativeStructure" line="189"/>
                    </scope>
                    <declaration name="dsLo" type="DerivativeStructure" line="199"/>
                    <scope line="200"/>
                    <scope line="203"/>
                    <scope line="206"/>
                    <declaration name="dsHi" type="DerivativeStructure" line="211"/>
                    <scope line="212"/>
                    <scope line="215"/>
                    <scope line="218"/>
                </scope>
            </method>
        </class>
    </source>