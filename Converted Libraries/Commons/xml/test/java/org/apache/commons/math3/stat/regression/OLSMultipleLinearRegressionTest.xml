<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.regression">
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor"/>
        <import package="org.apache.commons.math3.linear.MatrixUtils"/>
        <import package="org.apache.commons.math3.linear.RealMatrix"/>
        <import package="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
        <import package="org.apache.commons.math3.linear.RealVector"/>
        <import package="org.apache.commons.math3.stat.StatUtils"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Before"/>
        <import package="org.junit.Test"/>
        <class name="OLSMultipleLinearRegressionTest" line="12">
            <extends class="MultipleLinearRegressionAbstractTest"/>
            <declaration name="y" type="double[]" line="13"/>
            <declaration name="x" type="double[][]" line="14"/>
            <method name="setUp" type="void" line="15"/>
            <method name="createRegression" type="OLSMultipleLinearRegression" line="26">
                <declaration name="regression" type="OLSMultipleLinearRegression" line="27"/>
            </method>
            <method name="getNumberOfRegressors" type="int" line="31"/>
            <method name="getSampleSize" type="int" line="34"/>
            <method name="cannotAddSampleDataWithSizeMismatch" type="void" line="37">
                <declaration name="y" type="double[]" line="38"/>
                <declaration name="x" type="double[][]" line="39"/>
            </method>
            <method name="testPerfectFit" type="void" line="43">
                <declaration name="betaHat" type="double[]" line="44"/>
                <declaration name="residuals" type="double[]" line="46"/>
                <declaration name="errors" type="RealMatrix" line="48"/>
                <declaration name="s" type="double[]" line="49"/>
                <declaration name="referenceVariance" type="RealMatrix" line="50"/>
                <anonymous_class line="51">
                    <method name="visit" type="double" line="52">
                        <params>
                            <param name="row" type="int"/>
                            <param name="column" type="int"/>
                            <param name="value" type="double"/>
                        </params>
                        <scope line="53"/>
                        <declaration name="x" type="double" line="56"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="64">
                Test Longley dataset against certified values provided by NIST.
                  Data Source: J. Longley (1967) &quot;An Appraisal of Least Squares
                  Programs for the Electronic Computer from the Point of View of the User&quot;
                  Journal of the American Statistical Association, vol. 62. September,
                  pp. 819-841.
                  Certified values (and data) are from NIST:
                  http://www.itl.nist.gov/div898/strd/lls/data/LINKS/DATA/Longley.dat                
            </javadoc>
            <method name="testLongly" type="void" line="73">
                <declaration name="design" type="double[]" line="74"/>
                <declaration name="nobs" type="int" line="75"/>
                <declaration name="nvars" type="int" line="76"/>
                <declaration name="model" type="OLSMultipleLinearRegression" line="77"/>
                <declaration name="betaHat" type="double[]" line="79"/>
                <declaration name="residuals" type="double[]" line="81"/>
                <declaration name="errors" type="double[]" line="83"/>
            </method>
            <javadoc line="101">
                Test R Swiss fertility dataset against R.
                  Data Source: R datasets package                
            </javadoc>
            <method name="testSwissFertility" type="void" line="105">
                <declaration name="design" type="double[]" line="106"/>
                <declaration name="nobs" type="int" line="107"/>
                <declaration name="nvars" type="int" line="108"/>
                <declaration name="model" type="OLSMultipleLinearRegression" line="109"/>
                <declaration name="betaHat" type="double[]" line="111"/>
                <declaration name="residuals" type="double[]" line="113"/>
                <declaration name="errors" type="double[]" line="115"/>
            </method>
            <javadoc line="134">
                Test hat matrix computation                
            </javadoc>
            <method name="testHat" type="void" line="137">
                <declaration name="design" type="double[]" line="138"/>
                <declaration name="nobs" type="int" line="139"/>
                <declaration name="nvars" type="int" line="140"/>
                <declaration name="model" type="OLSMultipleLinearRegression" line="141"/>
                <declaration name="hat" type="RealMatrix" line="143"/>
                <declaration name="referenceData" type="double[]" line="144"/>
                <declaration name="k" type="int" line="145"/>
                <scope line="146">
                    <scope line="147"/>
                </scope>
                <declaration name="residuals" type="double[]" line="153"/>
                <declaration name="I" type="RealMatrix" line="154"/>
                <declaration name="hatResiduals" type="double[]" line="155"/>
            </method>
            <javadoc line="158">
                test calculateYVariance                
            </javadoc>
            <method name="testYVariance" type="void" line="161">
                <declaration name="model" type="OLSMultipleLinearRegression" line="162"/>
            </method>
            <javadoc line="166">
                Verifies that calculateYVariance and calculateResidualVariance return consistent
                  values with direct variance computation from Y, residuals, respectively.                
            </javadoc>
            <method name="checkVarianceConsistency" type="void" line="170">
                <params>
                    <param name="model" type="OLSMultipleLinearRegression"/>
                </params>
                <declaration name="residuals" type="double[]" line="172"/>
                <declaration name="X" type="RealMatrix" line="173"/>
            </method>
            <javadoc line="176">
                Verifies that setting X and Y separately has the same effect as newSample(X,Y).                
            </javadoc>
            <method name="testNewSample2" type="void" line="179">
                <declaration name="y" type="double[]" line="180"/>
                <declaration name="x" type="double[][]" line="181"/>
                <declaration name="regression" type="OLSMultipleLinearRegression" line="182"/>
                <declaration name="combinedX" type="RealMatrix" line="184"/>
                <declaration name="combinedY" type="RealVector" line="185"/>
            </method>
            <method name="testNewSampleDataYNull" type="void" line="199"/>
            <method name="testNewSampleDataXNull" type="void" line="202"/>
            <method name="testWampler1" type="void" line="205">
                <declaration name="data" type="double[]" line="206"/>
                <declaration name="model" type="OLSMultipleLinearRegression" line="207"/>
                <declaration name="nvars" type="int" line="208"/>
                <declaration name="nobs" type="int" line="209"/>
                <declaration name="tmp" type="double[]" line="210"/>
                <declaration name="off" type="int" line="211"/>
                <declaration name="off2" type="int" line="212"/>
                <scope line="213"/>
                <declaration name="betaHat" type="double[]" line="224"/>
                <declaration name="se" type="double[]" line="226"/>
            </method>
            <method name="testWampler2" type="void" line="233">
                <declaration name="data" type="double[]" line="234"/>
                <declaration name="model" type="OLSMultipleLinearRegression" line="235"/>
                <declaration name="nvars" type="int" line="236"/>
                <declaration name="nobs" type="int" line="237"/>
                <declaration name="tmp" type="double[]" line="238"/>
                <declaration name="off" type="int" line="239"/>
                <declaration name="off2" type="int" line="240"/>
                <scope line="241"/>
                <declaration name="betaHat" type="double[]" line="252"/>
                <declaration name="se" type="double[]" line="254"/>
            </method>
            <method name="testWampler3" type="void" line="261">
                <declaration name="data" type="double[]" line="262"/>
                <declaration name="model" type="OLSMultipleLinearRegression" line="263"/>
                <declaration name="nvars" type="int" line="264"/>
                <declaration name="nobs" type="int" line="265"/>
                <declaration name="tmp" type="double[]" line="266"/>
                <declaration name="off" type="int" line="267"/>
                <declaration name="off2" type="int" line="268"/>
                <scope line="269"/>
                <declaration name="betaHat" type="double[]" line="280"/>
                <declaration name="se" type="double[]" line="282"/>
            </method>
            <method name="testWampler4" type="void" line="289">
                <declaration name="data" type="double[]" line="290"/>
                <declaration name="model" type="OLSMultipleLinearRegression" line="291"/>
                <declaration name="nvars" type="int" line="292"/>
                <declaration name="nobs" type="int" line="293"/>
                <declaration name="tmp" type="double[]" line="294"/>
                <declaration name="off" type="int" line="295"/>
                <declaration name="off2" type="int" line="296"/>
                <scope line="297"/>
                <declaration name="betaHat" type="double[]" line="308"/>
                <declaration name="se" type="double[]" line="310"/>
            </method>
        </class>
    </source>