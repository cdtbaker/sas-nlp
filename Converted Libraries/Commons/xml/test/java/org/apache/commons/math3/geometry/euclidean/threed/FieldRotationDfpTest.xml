<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.euclidean.threed">
        <import package="org.apache.commons.math3.dfp.Dfp"/>
        <import package="org.apache.commons.math3.dfp.DfpField"/>
        <import package="org.apache.commons.math3.exception.MathArithmeticException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.random.UnitSphereRandomVectorGenerator"/>
        <import package="org.apache.commons.math3.random.Well1024a"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="FieldRotationDfpTest" line="12">
            <method name="testIdentity" type="void" line="13">
                <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="14"/>
            </method>
            <method name="testAxisAngle" type="void" line="30">
                <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="31"/>
                <declaration name="s" type="double" line="35"/>
                <scope line="38"/>
                <scope line="42"/>
            </method>
            <method name="testRevert" type="void" line="52">
                <declaration name="a" type="double" line="53"/>
                <declaration name="b" type="double" line="54"/>
                <declaration name="c" type="double" line="55"/>
                <declaration name="d" type="double" line="56"/>
                <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="57"/>
                <declaration name="reverted" type="FieldRotation&lt;Dfp&gt;" line="58"/>
                <declaration name="rrT" type="FieldRotation&lt;Dfp&gt;" line="59"/>
                <declaration name="rTr" type="FieldRotation&lt;Dfp&gt;" line="61"/>
            </method>
            <method name="testVectorOnePair" type="void" line="66">
                <declaration name="u" type="FieldVector3D&lt;Dfp&gt;" line="67"/>
                <declaration name="v" type="FieldVector3D&lt;Dfp&gt;" line="68"/>
                <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="69"/>
                <scope line="72"/>
                <scope line="76"/>
            </method>
            <method name="testVectorTwoPairs" type="void" line="79">
                <declaration name="u1" type="FieldVector3D&lt;Dfp&gt;" line="80"/>
                <declaration name="u2" type="FieldVector3D&lt;Dfp&gt;" line="81"/>
                <declaration name="v1" type="FieldVector3D&lt;Dfp&gt;" line="82"/>
                <declaration name="v2" type="FieldVector3D&lt;Dfp&gt;" line="83"/>
                <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="84"/>
                <declaration name="axis" type="FieldVector3D&lt;Dfp&gt;" line="88"/>
                <scope line="89"/>
                <scope line="92"/>
                <declaration name="sqrt" type="double" line="96"/>
                <scope line="102"/>
                <scope line="106"/>
            </method>
            <method name="testMatrix" type="void" line="109">
                <scope line="110"/>
                <scope line="114"/>
                <scope line="116"/>
                <scope line="120"/>
                <scope line="122"/>
                <scope line="126"/>
                <declaration name="m1" type="double[][]" line="132"/>
                <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="133"/>
                <declaration name="m2" type="double[][]" line="137"/>
                <declaration name="m3" type="Dfp[][]" line="139"/>
                <declaration name="d00" type="double" line="140"/>
                <declaration name="d01" type="double" line="141"/>
                <declaration name="d02" type="double" line="142"/>
                <declaration name="d10" type="double" line="143"/>
                <declaration name="d11" type="double" line="144"/>
                <declaration name="d12" type="double" line="145"/>
                <declaration name="d20" type="double" line="146"/>
                <declaration name="d21" type="double" line="147"/>
                <declaration name="d22" type="double" line="148"/>
                <scope line="167">
                    <scope line="168">
                        <declaration name="m3tm3" type="double" line="169"/>
                        <scope line="170"/>
                        <scope line="173"/>
                    </scope>
                </scope>
                <declaration name="m4" type="double[][]" line="181"/>
                <scope line="184">
                    <declaration name="m5" type="double[][]" line="185"/>
                </scope>
                <scope line="189"/>
            </method>
            <method name="testAngles" type="void" line="192">
                <declaration name="field" type="DfpField" line="193"/>
                <declaration name="CardanOrders" type="RotationOrder[]" line="194"/>
                <scope line="195">
                    <scope line="196">
                        <scope line="197">
                            <scope line="198">
                                <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="199"/>
                                <declaration name="angles" type="Dfp[]" line="200"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <declaration name="EulerOrders" type="RotationOrder[]" line="208"/>
                <scope line="209">
                    <scope line="210">
                        <scope line="211">
                            <scope line="212">
                                <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="213"/>
                                <declaration name="angles" type="Dfp[]" line="214"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testSingularities" type="void" line="223">
                <declaration name="field" type="DfpField" line="224"/>
                <declaration name="CardanOrders" type="RotationOrder[]" line="225"/>
                <declaration name="singularCardanAngle" type="double[]" line="226"/>
                <scope line="227">
                    <scope line="228">
                        <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="229"/>
                        <scope line="230"/>
                        <scope line="234"/>
                    </scope>
                </scope>
                <declaration name="EulerOrders" type="RotationOrder[]" line="238"/>
                <declaration name="singularEulerAngle" type="double[]" line="239"/>
                <scope line="240">
                    <scope line="241">
                        <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="242"/>
                        <scope line="243"/>
                        <scope line="247"/>
                    </scope>
                </scope>
            </method>
            <method name="testQuaternion" type="void" line="252">
                <declaration name="r1" type="FieldRotation&lt;Dfp&gt;" line="253"/>
                <declaration name="n" type="double" line="254"/>
                <declaration name="r2" type="FieldRotation&lt;Dfp&gt;" line="255"/>
                <scope line="256">
                    <scope line="257">
                        <scope line="258">
                            <declaration name="u" type="FieldVector3D&lt;Dfp&gt;" line="259"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testCompose" type="void" line="267">
                <declaration name="r1" type="FieldRotation&lt;Dfp&gt;" line="268"/>
                <declaration name="r2" type="FieldRotation&lt;Dfp&gt;" line="269"/>
                <declaration name="r3" type="FieldRotation&lt;Dfp&gt;" line="270"/>
                <declaration name="r3Double" type="FieldRotation&lt;Dfp&gt;" line="271"/>
                <scope line="272">
                    <scope line="273">
                        <scope line="274">
                            <declaration name="u" type="FieldVector3D&lt;Dfp&gt;" line="275"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testComposeInverse" type="void" line="282">
                <declaration name="r1" type="FieldRotation&lt;Dfp&gt;" line="283"/>
                <declaration name="r2" type="FieldRotation&lt;Dfp&gt;" line="284"/>
                <declaration name="r3" type="FieldRotation&lt;Dfp&gt;" line="285"/>
                <declaration name="r3Double" type="FieldRotation&lt;Dfp&gt;" line="286"/>
                <scope line="287">
                    <scope line="288">
                        <scope line="289">
                            <declaration name="u" type="FieldVector3D&lt;Dfp&gt;" line="290"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testDoubleVectors" type="void" line="297">
                <declaration name="random" type="Well1024a" line="298"/>
                <declaration name="g" type="UnitSphereRandomVectorGenerator" line="299"/>
                <scope line="300">
                    <declaration name="unit" type="double[]" line="301"/>
                    <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="302"/>
                    <scope line="303">
                        <scope line="304">
                            <scope line="305">
                                <declaration name="uds" type="FieldVector3D&lt;Dfp&gt;" line="306"/>
                                <declaration name="ruds" type="FieldVector3D&lt;Dfp&gt;" line="307"/>
                                <declaration name="rIuds" type="FieldVector3D&lt;Dfp&gt;" line="308"/>
                                <declaration name="u" type="Vector3D" line="309"/>
                                <declaration name="ru" type="FieldVector3D&lt;Dfp&gt;" line="310"/>
                                <declaration name="rIu" type="FieldVector3D&lt;Dfp&gt;" line="311"/>
                                <declaration name="ruArray" type="Dfp[]" line="312"/>
                                <declaration name="rIuArray" type="Dfp[]" line="314"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testDoubleRotations" type="void" line="325">
                <declaration name="field" type="DfpField" line="326"/>
                <declaration name="random" type="Well1024a" line="327"/>
                <declaration name="g" type="UnitSphereRandomVectorGenerator" line="328"/>
                <scope line="329">
                    <declaration name="unit1" type="double[]" line="330"/>
                    <declaration name="r1" type="Rotation" line="331"/>
                    <declaration name="r1Prime" type="FieldRotation&lt;Dfp&gt;" line="332"/>
                    <declaration name="unit2" type="double[]" line="333"/>
                    <declaration name="r2" type="FieldRotation&lt;Dfp&gt;" line="334"/>
                    <declaration name="rA" type="FieldRotation&lt;Dfp&gt;" line="335"/>
                    <declaration name="rB" type="FieldRotation&lt;Dfp&gt;" line="336"/>
                    <declaration name="rC" type="FieldRotation&lt;Dfp&gt;" line="337"/>
                    <declaration name="rD" type="FieldRotation&lt;Dfp&gt;" line="338"/>
                    <scope line="339">
                        <scope line="340">
                            <scope line="341">
                                <declaration name="uds" type="FieldVector3D&lt;Dfp&gt;" line="342"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testArray" type="void" line="354">
                <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="355"/>
                <scope line="356">
                    <scope line="357">
                        <scope line="358">
                            <declaration name="u" type="FieldVector3D&lt;Dfp&gt;" line="359"/>
                            <declaration name="v" type="FieldVector3D&lt;Dfp&gt;" line="360"/>
                            <declaration name="out" type="Dfp[]" line="361"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testApplyInverseTo" type="void" line="374">
                <declaration name="in" type="Dfp[]" line="375"/>
                <declaration name="out" type="Dfp[]" line="376"/>
                <declaration name="rebuilt" type="Dfp[]" line="377"/>
                <declaration name="r" type="FieldRotation&lt;Dfp&gt;" line="378"/>
                <scope line="379">
                    <scope line="380">
                        <declaration name="u" type="FieldVector3D&lt;Dfp&gt;" line="381"/>
                    </scope>
                </scope>
                <scope line="396">
                    <scope line="397">
                        <declaration name="u" type="FieldVector3D&lt;Dfp&gt;" line="398"/>
                    </scope>
                </scope>
                <scope line="404">
                    <scope line="405">
                        <declaration name="u" type="FieldVector3D&lt;Dfp&gt;" line="406"/>
                    </scope>
                </scope>
            </method>
            <method name="testIssue639" type="void" line="412">
                <declaration name="u1" type="FieldVector3D&lt;Dfp&gt;" line="413"/>
                <declaration name="u2" type="FieldVector3D&lt;Dfp&gt;" line="414"/>
                <declaration name="rot" type="FieldRotation&lt;Dfp&gt;" line="415"/>
            </method>
            <method name="testIssue801" type="void" line="421">
                <declaration name="u1" type="FieldVector3D&lt;Dfp&gt;" line="422"/>
                <declaration name="u2" type="FieldVector3D&lt;Dfp&gt;" line="423"/>
                <declaration name="v1" type="FieldVector3D&lt;Dfp&gt;" line="424"/>
                <declaration name="v2" type="FieldVector3D&lt;Dfp&gt;" line="425"/>
                <declaration name="quat" type="FieldRotation&lt;Dfp&gt;" line="426"/>
                <declaration name="q2" type="double" line="427"/>
            </method>
            <method name="checkAngle" type="void" line="432">
                <params>
                    <param name="a1" type="Dfp"/>
                    <param name="a2" type="double"/>
                </params>
            </method>
            <method name="checkRotationDS" type="void" line="435">
                <params>
                    <param name="r" type="FieldRotation<Dfp>"/>
                    <param name="q0" type="double"/>
                    <param name="q1" type="double"/>
                    <param name="q2" type="double"/>
                    <param name="q3" type="double"/>
                </params>
                <declaration name="rPrime" type="FieldRotation&lt;Dfp&gt;" line="436"/>
            </method>
            <method name="createRotation" type="FieldRotation<Dfp>" line="439">
                <params>
                    <param name="q0" type="double"/>
                    <param name="q1" type="double"/>
                    <param name="q2" type="double"/>
                    <param name="q3" type="double"/>
                    <param name="needsNormalization" type="boolean"/>
                </params>
                <declaration name="field" type="DfpField" line="440"/>
            </method>
            <method name="createRotation" type="FieldRotation<Dfp>" line="443">
                <params>
                    <param name="m" type="double[][]"/>
                    <param name="threshold" type="double"/>
                </params>
                <declaration name="field" type="DfpField" line="444"/>
                <declaration name="mds" type="Dfp[][]" line="445"/>
                <scope line="446">
                    <scope line="447"/>
                </scope>
            </method>
            <method name="createVector" type="FieldVector3D<Dfp>" line="453">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="z" type="double"/>
                </params>
                <declaration name="field" type="DfpField" line="454"/>
            </method>
            <method name="createAxis" type="FieldVector3D<Dfp>" line="457">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="z" type="double"/>
                </params>
                <declaration name="field" type="DfpField" line="458"/>
            </method>
            <method name="createAngle" type="Dfp" line="461">
                <params>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <method name="checkVector" type="void" line="464">
                <params>
                    <param name="u" type="FieldVector3D<Dfp>"/>
                    <param name="v" type="FieldVector3D<Dfp>"/>
                </params>
            </method>
        </class>
    </source>