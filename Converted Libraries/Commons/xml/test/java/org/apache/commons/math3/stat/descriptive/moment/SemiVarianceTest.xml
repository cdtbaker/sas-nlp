<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.descriptive.moment">
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.stat.StatUtils"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="SemiVarianceTest" line="7">
            <method name="testInsufficientData" type="void" line="8">
                <declaration name="nothing" type="double[]" line="9"/>
                <declaration name="sv" type="SemiVariance" line="10"/>
                <scope line="11"/>
                <scope line="15"/>
                <scope line="17"/>
                <scope line="22"/>
            </method>
            <method name="testSingleDown" type="void" line="27">
                <declaration name="sv" type="SemiVariance" line="28"/>
                <declaration name="values" type="double[]" line="29"/>
                <declaration name="singletest" type="double" line="30"/>
            </method>
            <method name="testSingleUp" type="void" line="33">
                <declaration name="sv" type="SemiVariance" line="34"/>
                <declaration name="values" type="double[]" line="35"/>
                <declaration name="singletest" type="double" line="36"/>
            </method>
            <method name="testSample" type="void" line="39">
                <declaration name="values" type="double[]" line="40"/>
                <declaration name="length" type="int" line="41"/>
                <declaration name="mean" type="double" line="42"/>
                <declaration name="sv" type="SemiVariance" line="43"/>
                <declaration name="downsideSemiVariance" type="double" line="44"/>
                <declaration name="upsideSemiVariance" type="double" line="47"/>
            </method>
            <method name="testPopulation" type="void" line="51">
                <declaration name="values" type="double[]" line="52"/>
                <declaration name="sv" type="SemiVariance" line="53"/>
                <declaration name="singletest" type="double" line="54"/>
            </method>
            <method name="testNonMeanCutoffs" type="void" line="60">
                <declaration name="values" type="double[]" line="61"/>
                <declaration name="sv" type="SemiVariance" line="62"/>
                <declaration name="singletest" type="double" line="63"/>
            </method>
            <javadoc line="68">
                Check that the lower + upper semivariance against the mean sum to the
                  variance.                
            </javadoc>
            <method name="testVarianceDecompMeanCutoff" type="void" line="72">
                <declaration name="values" type="double[]" line="73"/>
                <declaration name="variance" type="double" line="74"/>
                <declaration name="sv" type="SemiVariance" line="75"/>
                <declaration name="lower" type="double" line="77"/>
                <declaration name="upper" type="double" line="79"/>
            </method>
            <javadoc line="82">
                Check that upper and lower semivariances against a cutoff sum to the sum
                  of squared deviations of the full set of values against the cutoff
                  divided by df = length - 1 (assuming bias-corrected).                
            </javadoc>
            <method name="testVarianceDecompNonMeanCutoff" type="void" line="87">
                <declaration name="values" type="double[]" line="88"/>
                <declaration name="target" type="double" line="89"/>
                <declaration name="totalSumOfSquares" type="double" line="90"/>
                <declaration name="sv" type="SemiVariance" line="91"/>
                <declaration name="lower" type="double" line="93"/>
                <declaration name="upper" type="double" line="95"/>
            </method>
            <method name="testNoVariance" type="void" line="98">
                <declaration name="values" type="double[]" line="99"/>
                <declaration name="sv" type="SemiVariance" line="100"/>
            </method>
        </class>
    </source>