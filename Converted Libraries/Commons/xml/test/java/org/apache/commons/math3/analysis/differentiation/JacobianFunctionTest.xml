<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.differentiation">
        <import package="org.junit.Assert"/>
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Test"/>
        <class name="JacobianFunctionTest" line="6">
            <javadoc line="6">
                Test for class {@link JacobianFunction}.                
            </javadoc>
            <method name="testSphere" type="void" line="10">
                <declaration name="f" type="SphereMapping" line="11"/>
                <declaration name="j" type="JacobianFunction" line="12"/>
                <scope line="13">
                    <scope line="14">
                        <declaration name="point" type="double[]" line="15"/>
                        <declaration name="referenceJacobian" type="double[][]" line="16"/>
                        <declaration name="testJacobian" type="double[][]" line="17"/>
                        <scope line="19"/>
                    </scope>
                </scope>
            </method>
            <class name="SphereMapping" line="25">
                <implements interface="MultivariateDifferentiableVectorFunction"/>
                <declaration name="radius" type="double" line="26"/>
                <method name="SphereMapping" type="constructor" line="27">
                    <params>
                        <param name="radius" type="double"/>
                    </params>
                </method>
                <method name="value" type="double[]" line="30">
                    <params>
                        <param name="point" type="double[]"/>
                    </params>
                    <declaration name="cLat" type="double" line="31"/>
                    <declaration name="sLat" type="double" line="32"/>
                    <declaration name="cLon" type="double" line="33"/>
                    <declaration name="sLon" type="double" line="34"/>
                </method>
                <method name="value" type="DerivativeStructure[]" line="37">
                    <params>
                        <param name="point" type="DerivativeStructure[]"/>
                    </params>
                    <declaration name="cLat" type="DerivativeStructure" line="38"/>
                    <declaration name="sLat" type="DerivativeStructure" line="39"/>
                    <declaration name="cLon" type="DerivativeStructure" line="40"/>
                    <declaration name="sLon" type="DerivativeStructure" line="41"/>
                </method>
                <method name="jacobian" type="double[][]" line="44">
                    <params>
                        <param name="point" type="double[]"/>
                    </params>
                    <declaration name="cLat" type="double" line="45"/>
                    <declaration name="sLat" type="double" line="46"/>
                    <declaration name="cLon" type="double" line="47"/>
                    <declaration name="sLon" type="double" line="48"/>
                </method>
            </class>
        </class>
    </source>