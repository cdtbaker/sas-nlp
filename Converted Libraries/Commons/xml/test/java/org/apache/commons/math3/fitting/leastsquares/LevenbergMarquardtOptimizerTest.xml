<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.fitting.leastsquares">
        <import package="org.apache.commons.math3.analysis.MultivariateMatrixFunction"/>
        <import package="org.apache.commons.math3.analysis.MultivariateVectorFunction"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.TooManyEvaluationsException"/>
        <import package="org.apache.commons.math3.fitting.leastsquares.LeastSquaresOptimizer.Optimum"/>
        <import package="org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem.Evaluation"/>
        <import package="org.apache.commons.math3.geometry.euclidean.twod.Vector2D"/>
        <import package="org.apache.commons.math3.linear.DiagonalMatrix"/>
        <import package="org.apache.commons.math3.linear.RealMatrix"/>
        <import package="org.apache.commons.math3.linear.RealVector"/>
        <import package="org.apache.commons.math3.linear.SingularMatrixException"/>
        <import package="org.apache.commons.math3.optim.ConvergenceChecker"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.Precision"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="org.hamcrest.CoreMatchers.is"/>
        <class name="LevenbergMarquardtOptimizerTest" line="42">
            <extends class="AbstractLeastSquaresOptimizerAbstractTest"/>
            <comment line="293">
                TODO delete or use                
            </comment>
            <javadoc line="42">
                &lt;p&gt;Some of the unit tests are re-implementations of the MINPACK &lt;a
                  href=&quot;http://www.netlib.org/minpack/ex/file17&quot;&gt;file17&lt;/a&gt; and &lt;a
                  href=&quot;http://www.netlib.org/minpack/ex/file22&quot;&gt;file22&lt;/a&gt; test files.
                  The redistribution policy for MINPACK is available &lt;a
                  href=&quot;http://www.netlib.org/minpack/disclaimer&quot;&gt;here&lt;/a&gt;.                
                <version>
                    $Id: LevenbergMarquardtOptimizerTest.java 1573308 2014-03-02 14:02:50Z luc $                    
                </version>
            </javadoc>
            <method name="builder" type="LeastSquaresBuilder" line="54">
                <params>
                    <param name="problem" type="BevingtonProblem"/>
                </params>
            </method>
            <method name="builder" type="LeastSquaresBuilder" line="59">
                <params>
                    <param name="problem" type="CircleProblem"/>
                </params>
            </method>
            <method name="getMaxIterations" type="int" line="67"/>
            <method name="getOptimizer" type="LeastSquaresOptimizer" line="72"/>
            <method name="testNonInvertible" type="void" line="78">
                <comment line="81">
                    Overrides the method from parent class, since the default singularity
                     threshold (1e-14) does not trigger the expected exception.                    
                </comment>
                <comment line="94">
                    TODO check that it is a bad fit? Why the extra conditions?                    
                </comment>
                <comment line="101">
                    expected                    
                </comment>
                <scope line="79">
                    <declaration name="problem" type="LinearProblem" line="84"/>
                    <declaration name="optimum" type="Optimum" line="90"/>
                </scope>
                <scope line="99"/>
            </method>
            <method name="testControlParameters" type="void" line="105">
                <comment line="120">
                    wardev I changed true =&gt; false
                    TODO why should this fail? It uses 15 evaluations.                    
                </comment>
                <declaration name="circle" type="CircleVectorial" line="106"/>
            </method>
            <method name="checkEstimate" type="void" line="128">
                <params>
                    <param name="circle" type="CircleVectorial"/>
                    <param name="initialStepBoundFactor" type="double"/>
                    <param name="maxCostEval" type="int"/>
                    <param name="costRelativeTolerance" type="double"/>
                    <param name="parRelativeTolerance" type="double"/>
                    <param name="orthoTolerance" type="double"/>
                    <param name="shouldFail" type="boolean"/>
                </params>
                <comment line="147">
                    TODO check it got the right answer                    
                </comment>
                <scope line="129">
                    <declaration name="optimizer" type="LevenbergMarquardtOptimizer" line="130"/>
                    <declaration name="problem" type="LeastSquaresProblem" line="137"/>
                </scope>
                <scope line="148"/>
                <scope line="150"/>
            </method>
            <javadoc line="155">
                Non-linear test case: fitting of decay curve (from Chapter 8 of
                  Bevington&apos;s textbook, &quot;Data reduction and analysis for the physical sciences&quot;).
                  XXX The expected (&quot;reference&quot;) values may not be accurate and the tolerance too
                  relaxed for this test to be currently really useful (the issue is under
                  investigation).                
            </javadoc>
            <method name="testBevington" type="void" line="163">
                <comment line="166">
                    column 1 = times                    
                </comment>
                <comment line="173">
                    column 2 = measured counts                    
                </comment>
                <comment line="217">
                    Check that the computed solution is within the reference error range.                    
                </comment>
                <comment line="223">
                    Check that each entry of the computed covariance matrix is within 10%
                     of the reference matrix entry.                    
                </comment>
                <declaration name="dataPoints" type="double[][]" line="164"/>
                <declaration name="start" type="double[]" line="180"/>
                <declaration name="problem" type="BevingtonProblem" line="182"/>
                <declaration name="len" type="int" line="184"/>
                <declaration name="weights" type="double[]" line="185"/>
                <scope line="186"/>
                <declaration name="optimum" type="Optimum" line="193"/>
                <declaration name="solution" type="RealVector" line="202"/>
                <declaration name="expectedSolution" type="double[]" line="203"/>
                <declaration name="covarMatrix" type="RealMatrix" line="205"/>
                <declaration name="expectedCovarMatrix" type="double[][]" line="206"/>
                <declaration name="numParams" type="int" line="214"/>
                <scope line="217">
                    <declaration name="error" type="double" line="218"/>
                </scope>
                <scope line="224">
                    <scope line="225"/>
                </scope>
            </method>
            <method name="testCircleFitting2" type="void" line="235">
                <comment line="242">
                    The test is extremely sensitive to the seed.                    
                </comment>
                <comment line="255">
                    First guess for the center&apos;s coordinates and radius.                    
                </comment>
                <comment line="263">
                    Retrieve errors estimation.                    
                </comment>
                <comment line="266">
                    Check that the parameters are found within the assumed error bars.                    
                </comment>
                <declaration name="xCenter" type="double" line="236"/>
                <declaration name="yCenter" type="double" line="237"/>
                <declaration name="xSigma" type="double" line="238"/>
                <declaration name="ySigma" type="double" line="239"/>
                <declaration name="radius" type="double" line="240"/>
                <declaration name="seed" type="long" line="242"/>
                <declaration name="factory" type="RandomCirclePointGenerator" line="243"/>
                <declaration name="circle" type="CircleProblem" line="247"/>
                <declaration name="numPoints" type="int" line="249"/>
                <scope line="250"/>
                <declaration name="init" type="double[]" line="255"/>
                <declaration name="optimum" type="Optimum" line="257"/>
                <declaration name="paramFound" type="double[]" line="260"/>
                <declaration name="asymptoticStandardErrorFound" type="double[]" line="263"/>
            </method>
            <method name="testEvaluationCount" type="void" line="272">
                <comment line="274">
                    setup                    
                </comment>
                <comment line="284">
                    action                    
                </comment>
                <comment line="287">
                    verify
                    check iterations and evaluations are not switched.                    
                </comment>
                <anonymous_class line="276">
                    <method name="converged" type="boolean" line="277">
                        <params>
                            <param name="iteration" type="int"/>
                            <param name="previous" type="Evaluation"/>
                            <param name="current" type="Evaluation"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="lsp" type="LeastSquaresProblem" line="274"/>
                <declaration name="optimum" type="Optimum" line="284"/>
            </method>
            <class name="QuadraticProblem" line="293">
                <declaration name="x" type="List&amp;lt;Double&amp;gt;" line="294"/>
                <declaration name="y" type="List&amp;lt;Double&amp;gt;" line="295"/>
                <method name="QuadraticProblem" type="constructor" line="297"/>
                <method name="addPoint" type="void" line="302">
                    <params>
                        <param name="x" type="double"/>
                        <param name="y" type="double"/>
                    </params>
                </method>
                <method name="getModelFunction" type="MultivariateVectorFunction" line="307">
                    <anonymous_class line="308">
                        <method name="value" type="double[]" line="309">
                            <params>
                                <param name="variables" type="double[]"/>
                            </params>
                            <declaration name="values" type="double[]" line="310"/>
                            <scope line="311"/>
                        </method>
                    </anonymous_class>
                </method>
                <method name="getModelFunctionJacobian" type="MultivariateMatrixFunction" line="319">
                    <anonymous_class line="320">
                        <method name="value" type="double[][]" line="321">
                            <params>
                                <param name="params" type="double[]"/>
                            </params>
                            <declaration name="jacobian" type="double[][]" line="322"/>
                            <scope line="323"/>
                        </method>
                    </anonymous_class>
                </method>
            </class>
            <class name="BevingtonProblem" line="334">
                <declaration name="time" type="List&amp;lt;Double&amp;gt;" line="335"/>
                <declaration name="count" type="List&amp;lt;Double&amp;gt;" line="336"/>
                <method name="BevingtonProblem" type="constructor" line="338"/>
                <method name="addPoint" type="void" line="343">
                    <params>
                        <param name="t" type="double"/>
                        <param name="c" type="double"/>
                    </params>
                </method>
                <method name="getModelFunction" type="MultivariateVectorFunction" line="348">
                    <anonymous_class line="349">
                        <method name="value" type="double[]" line="350">
                            <params>
                                <param name="params" type="double[]"/>
                            </params>
                            <declaration name="values" type="double[]" line="351"/>
                            <scope line="352">
                                <declaration name="t" type="double" line="353"/>
                            </scope>
                        </method>
                    </anonymous_class>
                </method>
                <method name="getModelFunctionJacobian" type="MultivariateMatrixFunction" line="363">
                    <anonymous_class line="364">
                        <method name="value" type="double[][]" line="365">
                            <params>
                                <param name="params" type="double[]"/>
                            </params>
                            <declaration name="jacobian" type="double[][]" line="366"/>
                            <scope line="368">
                                <declaration name="t" type="double" line="369"/>
                                <declaration name="p3" type="double" line="372"/>
                                <declaration name="p4" type="double" line="373"/>
                                <declaration name="tOp3" type="double" line="374"/>
                                <declaration name="tOp4" type="double" line="375"/>
                            </scope>
                        </method>
                    </anonymous_class>
                </method>
            </class>
        </class>
    </source>