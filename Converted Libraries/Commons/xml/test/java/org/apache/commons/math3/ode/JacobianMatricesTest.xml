<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.ode">
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MaxCountExceededException"/>
        <import package="org.apache.commons.math3.exception.NoBracketingException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.ode.JacobianMatrices.MismatchedEquations"/>
        <import package="org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator"/>
        <import package="org.apache.commons.math3.stat.descriptive.SummaryStatistics"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="JacobianMatricesTest" line="12">
            <method name="testLowAccuracyExternalDifferentiation" type="void" line="13">
                <declaration name="integ" type="FirstOrderIntegrator" line="14"/>
                <declaration name="hP" type="double" line="15"/>
                <declaration name="residualsP0" type="SummaryStatistics" line="16"/>
                <declaration name="residualsP1" type="SummaryStatistics" line="17"/>
                <scope line="18">
                    <declaration name="brusselator" type="Brusselator" line="19"/>
                    <declaration name="y" type="double[]" line="20"/>
                    <declaration name="yP" type="double[]" line="22"/>
                </scope>
            </method>
            <method name="testHighAccuracyExternalDifferentiation" type="void" line="32">
                <declaration name="integ" type="FirstOrderIntegrator" line="33"/>
                <declaration name="hP" type="double" line="34"/>
                <declaration name="residualsP0" type="SummaryStatistics" line="35"/>
                <declaration name="residualsP1" type="SummaryStatistics" line="36"/>
                <scope line="37">
                    <declaration name="brusselator" type="ParamBrusselator" line="38"/>
                    <declaration name="y" type="double[]" line="39"/>
                    <declaration name="yP" type="double[]" line="41"/>
                </scope>
            </method>
            <method name="testInternalDifferentiation" type="void" line="56">
                <declaration name="integ" type="AbstractIntegrator" line="57"/>
                <declaration name="hP" type="double" line="58"/>
                <declaration name="hY" type="double" line="59"/>
                <declaration name="residualsP0" type="SummaryStatistics" line="60"/>
                <declaration name="residualsP1" type="SummaryStatistics" line="61"/>
                <scope line="62">
                    <declaration name="brusselator" type="ParamBrusselator" line="63"/>
                    <declaration name="z" type="double[]" line="65"/>
                    <declaration name="dZdZ0" type="double[][]" line="66"/>
                    <declaration name="dZdP" type="double[]" line="67"/>
                    <declaration name="jacob" type="JacobianMatrices" line="68"/>
                    <declaration name="efode" type="ExpandableStatefulODE" line="72"/>
                </scope>
            </method>
            <method name="testAnalyticalDifferentiation" type="void" line="88">
                <declaration name="integ" type="AbstractIntegrator" line="89"/>
                <declaration name="residualsP0" type="SummaryStatistics" line="90"/>
                <declaration name="residualsP1" type="SummaryStatistics" line="91"/>
                <scope line="92">
                    <declaration name="brusselator" type="Brusselator" line="93"/>
                    <declaration name="z" type="double[]" line="94"/>
                    <declaration name="dZdZ0" type="double[][]" line="95"/>
                    <declaration name="dZdP" type="double[]" line="96"/>
                    <declaration name="jacob" type="JacobianMatrices" line="97"/>
                    <declaration name="efode" type="ExpandableStatefulODE" line="100"/>
                </scope>
            </method>
            <method name="testFinalResult" type="void" line="116">
                <declaration name="integ" type="AbstractIntegrator" line="117"/>
                <declaration name="y" type="double[]" line="118"/>
                <declaration name="circle" type="Circle" line="119"/>
                <declaration name="jacob" type="JacobianMatrices" line="120"/>
                <declaration name="efode" type="ExpandableStatefulODE" line="126"/>
                <declaration name="t" type="double" line="131"/>
                <scope line="134"/>
                <declaration name="dydy0" type="double[][]" line="137"/>
                <scope line="139">
                    <scope line="140"/>
                </scope>
                <declaration name="dydcx" type="double[]" line="144"/>
                <scope line="146"/>
                <declaration name="dydcy" type="double[]" line="149"/>
                <scope line="151"/>
                <declaration name="dydom" type="double[]" line="154"/>
                <scope line="156"/>
            </method>
            <method name="testParameterizable" type="void" line="160">
                <declaration name="integ" type="AbstractIntegrator" line="161"/>
                <declaration name="y" type="double[]" line="162"/>
                <declaration name="pcircle" type="ParameterizedCircle" line="163"/>
                <declaration name="hP" type="double" line="164"/>
                <declaration name="hY" type="double" line="165"/>
                <declaration name="jacob" type="JacobianMatrices" line="166"/>
                <declaration name="efode" type="ExpandableStatefulODE" line="175"/>
                <declaration name="t" type="double" line="180"/>
                <scope line="183"/>
                <declaration name="dydy0" type="double[][]" line="186"/>
                <scope line="188">
                    <scope line="189"/>
                </scope>
                <declaration name="dydp0" type="double[]" line="193"/>
                <scope line="195"/>
                <declaration name="dydp1" type="double[]" line="198"/>
                <scope line="200"/>
            </method>
            <class name="Brusselator" line="204">
                <extends class="AbstractParameterizable"/>
                <implements interface="MainStateJacobianProvider"/>
                <implements interface="ParameterJacobianProvider"/>
                <declaration name="B" type="String" line="205"/>
                <declaration name="b" type="double" line="206"/>
                <method name="Brusselator" type="constructor" line="207">
                    <params>
                        <param name="b" type="double"/>
                    </params>
                </method>
                <method name="getDimension" type="int" line="211"/>
                <method name="computeDerivatives" type="void" line="214">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                        <param name="yDot" type="double[]"/>
                    </params>
                    <declaration name="prod" type="double" line="215"/>
                </method>
                <method name="computeMainStateJacobian" type="void" line="219">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                        <param name="yDot" type="double[]"/>
                        <param name="dFdY" type="double[][]"/>
                    </params>
                    <declaration name="p" type="double" line="220"/>
                    <declaration name="y02" type="double" line="221"/>
                </method>
                <method name="computeParameterJacobian" type="void" line="227">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                        <param name="yDot" type="double[]"/>
                        <param name="paramName" type="String"/>
                        <param name="dFdP" type="double[]"/>
                    </params>
                    <scope line="228"/>
                    <scope line="232"/>
                </method>
                <method name="dYdP0" type="double" line="237"/>
                <method name="dYdP1" type="double" line="240"/>
            </class>
            <class name="ParamBrusselator" line="244">
                <extends class="AbstractParameterizable"/>
                <implements interface="FirstOrderDifferentialEquations"/>
                <implements interface="ParameterizedODE"/>
                <declaration name="B" type="String" line="245"/>
                <declaration name="b" type="double" line="246"/>
                <method name="ParamBrusselator" type="constructor" line="247">
                    <params>
                        <param name="b" type="double"/>
                    </params>
                </method>
                <method name="getDimension" type="int" line="251"/>
                <javadoc line="254">
                    {@inheritDoc}                    
                </javadoc>
                <method name="getParameter" type="double" line="257">
                    <params>
                        <param name="name" type="String"/>
                    </params>
                </method>
                <javadoc line="261">
                    {@inheritDoc}                    
                </javadoc>
                <method name="setParameter" type="void" line="264">
                    <params>
                        <param name="name" type="String"/>
                        <param name="value" type="double"/>
                    </params>
                </method>
                <method name="computeDerivatives" type="void" line="268">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                        <param name="yDot" type="double[]"/>
                    </params>
                    <declaration name="prod" type="double" line="269"/>
                </method>
                <method name="dYdP0" type="double" line="273"/>
                <method name="dYdP1" type="double" line="276"/>
            </class>
            <class name="Circle" line="280">
                <extends class="AbstractParameterizable"/>
                <implements interface="MainStateJacobianProvider"/>
                <implements interface="ParameterJacobianProvider"/>
                <javadoc line="280">
                    ODE representing a point moving on a circle with provided center and angular rate.                    
                </javadoc>
                <declaration name="CX" type="String" line="284"/>
                <declaration name="CY" type="String" line="285"/>
                <declaration name="OMEGA" type="String" line="286"/>
                <declaration name="y0" type="double[]" line="287"/>
                <declaration name="cx" type="double" line="288"/>
                <declaration name="cy" type="double" line="289"/>
                <declaration name="omega" type="double" line="290"/>
                <method name="Circle" type="constructor" line="291">
                    <params>
                        <param name="y0" type="double[]"/>
                        <param name="cx" type="double"/>
                        <param name="cy" type="double"/>
                        <param name="omega" type="double"/>
                    </params>
                </method>
                <method name="getDimension" type="int" line="298"/>
                <method name="computeDerivatives" type="void" line="301">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                        <param name="yDot" type="double[]"/>
                    </params>
                </method>
                <method name="computeMainStateJacobian" type="void" line="305">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                        <param name="yDot" type="double[]"/>
                        <param name="dFdY" type="double[][]"/>
                    </params>
                </method>
                <method name="computeParameterJacobian" type="void" line="311">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                        <param name="yDot" type="double[]"/>
                        <param name="paramName" type="String"/>
                        <param name="dFdP" type="double[]"/>
                    </params>
                    <scope line="313"/>
                    <scope line="317"/>
                    <scope line="321"/>
                </method>
                <method name="exactY" type="double[]" line="326">
                    <params>
                        <param name="t" type="double"/>
                    </params>
                    <declaration name="cos" type="double" line="327"/>
                    <declaration name="sin" type="double" line="328"/>
                    <declaration name="dx0" type="double" line="329"/>
                    <declaration name="dy0" type="double" line="330"/>
                </method>
                <method name="exactDyDy0" type="double[][]" line="333">
                    <params>
                        <param name="t" type="double"/>
                    </params>
                    <declaration name="cos" type="double" line="334"/>
                    <declaration name="sin" type="double" line="335"/>
                </method>
                <method name="exactDyDcx" type="double[]" line="338">
                    <params>
                        <param name="t" type="double"/>
                    </params>
                    <declaration name="cos" type="double" line="339"/>
                    <declaration name="sin" type="double" line="340"/>
                </method>
                <method name="exactDyDcy" type="double[]" line="343">
                    <params>
                        <param name="t" type="double"/>
                    </params>
                    <declaration name="cos" type="double" line="344"/>
                    <declaration name="sin" type="double" line="345"/>
                </method>
                <method name="exactDyDom" type="double[]" line="348">
                    <params>
                        <param name="t" type="double"/>
                    </params>
                    <declaration name="cos" type="double" line="349"/>
                    <declaration name="sin" type="double" line="350"/>
                    <declaration name="dx0" type="double" line="351"/>
                    <declaration name="dy0" type="double" line="352"/>
                </method>
            </class>
            <class name="ParameterizedCircle" line="356">
                <extends class="AbstractParameterizable"/>
                <implements interface="FirstOrderDifferentialEquations"/>
                <implements interface="ParameterizedODE"/>
                <javadoc line="356">
                    ODE representing a point moving on a circle with provided center and angular rate.                    
                </javadoc>
                <declaration name="CX" type="String" line="360"/>
                <declaration name="CY" type="String" line="361"/>
                <declaration name="OMEGA" type="String" line="362"/>
                <declaration name="y0" type="double[]" line="363"/>
                <declaration name="cx" type="double" line="364"/>
                <declaration name="cy" type="double" line="365"/>
                <declaration name="omega" type="double" line="366"/>
                <method name="ParameterizedCircle" type="constructor" line="367">
                    <params>
                        <param name="y0" type="double[]"/>
                        <param name="cx" type="double"/>
                        <param name="cy" type="double"/>
                        <param name="omega" type="double"/>
                    </params>
                </method>
                <method name="getDimension" type="int" line="374"/>
                <method name="computeDerivatives" type="void" line="377">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                        <param name="yDot" type="double[]"/>
                    </params>
                </method>
                <method name="getParameter" type="double" line="381">
                    <params>
                        <param name="name" type="String"/>
                    </params>
                    <scope line="382"/>
                    <scope line="385"/>
                    <scope line="388"/>
                    <scope line="391"/>
                </method>
                <method name="setParameter" type="void" line="395">
                    <params>
                        <param name="name" type="String"/>
                        <param name="value" type="double"/>
                    </params>
                    <scope line="396"/>
                    <scope line="399"/>
                    <scope line="402"/>
                    <scope line="405"/>
                </method>
                <method name="exactY" type="double[]" line="409">
                    <params>
                        <param name="t" type="double"/>
                    </params>
                    <declaration name="cos" type="double" line="410"/>
                    <declaration name="sin" type="double" line="411"/>
                    <declaration name="dx0" type="double" line="412"/>
                    <declaration name="dy0" type="double" line="413"/>
                </method>
                <method name="exactDyDy0" type="double[][]" line="416">
                    <params>
                        <param name="t" type="double"/>
                    </params>
                    <declaration name="cos" type="double" line="417"/>
                    <declaration name="sin" type="double" line="418"/>
                </method>
                <method name="exactDyDcx" type="double[]" line="421">
                    <params>
                        <param name="t" type="double"/>
                    </params>
                    <declaration name="cos" type="double" line="422"/>
                    <declaration name="sin" type="double" line="423"/>
                </method>
                <method name="exactDyDcy" type="double[]" line="426">
                    <params>
                        <param name="t" type="double"/>
                    </params>
                    <declaration name="cos" type="double" line="427"/>
                    <declaration name="sin" type="double" line="428"/>
                </method>
                <method name="exactDyDom" type="double[]" line="431">
                    <params>
                        <param name="t" type="double"/>
                    </params>
                    <declaration name="cos" type="double" line="432"/>
                    <declaration name="sin" type="double" line="433"/>
                    <declaration name="dx0" type="double" line="434"/>
                    <declaration name="dy0" type="double" line="435"/>
                </method>
            </class>
        </class>
    </source>