<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.transform">
        <import package="java.util.Arrays"/>
        <import package="java.util.Collection"/>
        <import package="org.apache.commons.math3.analysis.UnivariateFunction"/>
        <import package="org.apache.commons.math3.analysis.function.Sin"/>
        <import package="org.apache.commons.math3.analysis.function.Sinc"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalStateException"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <import package="org.junit.runner.RunWith"/>
        <import package="org.junit.runners.Parameterized"/>
        <import package="org.junit.runners.Parameterized.Parameters"/>
        <class name="FastSineTransformerTest" line="34">
            <extends class="RealTransformerAbstractTest"/>
            <comment line="184">
                Additional tests.                
            </comment>
            <comment line="204">
                Additional (legacy) tests.                
            </comment>
            <javadoc line="34">
                Test case for fast sine transformer.
                  &lt;p&gt;
                  FST algorithm is exact, the small tolerance number is used only
                  to account for round-off errors.                
                <version>
                    $Id: FastSineTransformerTest.java 1504702 2013-07-18 22:41:19Z sebb $                    
                </version>
            </javadoc>
            <declaration name="normalization" type="DstNormalization" line="45"/>
            <declaration name="invalidDataSize" type="int[]" line="47"/>
            <declaration name="relativeTolerance" type="double[]" line="49"/>
            <declaration name="validDataSize" type="int[]" line="51"/>
            <method name="FastSineTransformerTest" type="constructor" line="53">
                <params>
                    <param name="normalization" type="DstNormalization"/>
                </params>
            </method>
            <javadoc line="66">
                Returns an array containing {@code true, false} in order to check both
                  standard and orthogonal DSTs.                
                <return>
                    an array of parameters for this parameterized test                    
                </return>
            </javadoc>
            <method name="data" type="Collection&lt;Object[]&gt;" line="73">
                <declaration name="normalization" type="DstNormalization[]" line="74"/>
                <declaration name="data" type="Object[][]" line="75"/>
                <scope line="76"/>
            </method>
            <javadoc line="82">
                {@inheritDoc}Overriding the default implementation allows to ensure that the first
                  element of the data set is zero.                
            </javadoc>
            <method name="createRealData" type="double[]" line="89">
                <params>
                    <param name="n" type="int"/>
                </params>
                <declaration name="data" type="double[]" line="90"/>
            </method>
            <method name="createRealTransformer" type="RealTransformer" line="96"/>
            <method name="getInvalidDataSize" type="int" line="101">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="getNumberOfInvalidDataSizes" type="int" line="106"/>
            <method name="getNumberOfValidDataSizes" type="int" line="111"/>
            <method name="getRelativeTolerance" type="double" line="116">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="getValidDataSize" type="int" line="121">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="getValidFunction" type="UnivariateFunction" line="126"/>
            <method name="getValidLowerBound" type="double" line="131"/>
            <method name="getValidUpperBound" type="double" line="136"/>
            <method name="transform" type="double[]" line="141">
                <params>
                    <param name="x" type="double[]"/>
                    <param name="type" type="TransformType"/>
                </params>
                <comment line="174">
                    Should never occur. This clause is a safeguard in case other
                     types are used to TransformType (which should not be done).                    
                </comment>
                <declaration name="n" type="int" line="142"/>
                <declaration name="y" type="double[]" line="143"/>
                <declaration name="sin" type="double[]" line="144"/>
                <scope line="145"/>
                <scope line="148">
                    <declaration name="yj" type="double" line="149"/>
                    <scope line="150"/>
                </scope>
                <declaration name="s" type="double" line="155"/>
                <scope line="156">
                    <scope line="157"/>
                    <scope line="159"/>
                    <scope line="161"/>
                </scope>
                <scope line="164">
                    <scope line="165"/>
                    <scope line="167"/>
                    <scope line="169"/>
                </scope>
                <scope line="172"/>
            </method>
            <method name="testTransformRealFirstElementNotZero" type="void" line="187">
                <comment line="199">
                    Expected: do nothing                    
                </comment>
                <declaration name="type" type="TransformType[]" line="188"/>
                <declaration name="data" type="double[]" line="189"/>
                <declaration name="transformer" type="RealTransformer" line="192"/>
                <scope line="193">
                    <scope line="194"/>
                    <scope line="197"/>
                </scope>
            </method>
            <javadoc line="207">
                Test of transformer for the ad hoc data.                
            </javadoc>
            <method name="testAdHocData" type="void" line="211">
                <declaration name="transformer" type="FastSineTransformer" line="212"/>
                <declaration name="result" type="double" line="214"/>
                <declaration name="x" type="double" line="216"/>
                <declaration name="y" type="double" line="217"/>
                <scope line="222"/>
                <scope line="227"/>
                <scope line="235"/>
                <scope line="240"/>
            </method>
            <javadoc line="245">
                Test of transformer for the sine function.                
            </javadoc>
            <method name="testSinFunction" type="void" line="249">
                <declaration name="f" type="UnivariateFunction" line="250"/>
                <declaration name="transformer" type="FastSineTransformer" line="251"/>
                <declaration name="min" type="double" line="253"/>
                <declaration name="N" type="int" line="253"/>
                <scope line="258"/>
                <scope line="265"/>
            </method>
            <javadoc line="270">
                Test of parameters for the transformer.                
            </javadoc>
            <method name="testParameters" type="void" line="274">
                <comment line="281">
                    bad interval                    
                </comment>
                <comment line="285">
                    expected                    
                </comment>
                <comment line="288">
                    bad samples number                    
                </comment>
                <comment line="292">
                    expected                    
                </comment>
                <comment line="295">
                    bad samples number                    
                </comment>
                <comment line="299">
                    expected                    
                </comment>
                <declaration name="f" type="UnivariateFunction" line="275"/>
                <declaration name="transformer" type="FastSineTransformer" line="276"/>
                <scope line="279"/>
                <scope line="283"/>
                <scope line="286"/>
                <scope line="290"/>
                <scope line="293"/>
                <scope line="297"/>
            </method>
        </class>
    </source>