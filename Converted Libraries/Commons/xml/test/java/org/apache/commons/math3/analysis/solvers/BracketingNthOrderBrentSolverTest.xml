<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.solvers">
        <import package="org.apache.commons.math3.analysis.QuinticFunction"/>
        <import package="org.apache.commons.math3.analysis.UnivariateFunction"/>
        <import package="org.apache.commons.math3.analysis.differentiation.DerivativeStructure"/>
        <import package="org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.exception.TooManyEvaluationsException"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="BracketingNthOrderBrentSolverTest" line="10">
            <extends class="BaseSecantSolverAbstractTest"/>
            <javadoc line="10">
                Test case for {@link BracketingNthOrderBrentSolver bracketing n&lt;sup&gt;th&lt;/sup&gt; order Brent} solver.                
                <version>
                    $Id: BracketingNthOrderBrentSolverTest.java 1383441 2012-09-11 14:56:39Z luc $                    
                </version>
            </javadoc>
            <javadoc line="15">
                {@inheritDoc}                
            </javadoc>
            <method name="getSolver" type="UnivariateSolver" line="18"/>
            <javadoc line="21">
                {@inheritDoc}                
            </javadoc>
            <method name="getQuinticEvalCounts" type="int[]" line="24"/>
            <method name="testInsufficientOrder1" type="void" line="27"/>
            <method name="testInsufficientOrder2" type="void" line="30"/>
            <method name="testInsufficientOrder3" type="void" line="33"/>
            <method name="testConstructorsOK" type="void" line="36"/>
            <method name="testConvergenceOnFunctionAccuracy" type="void" line="41">
                <declaration name="solver" type="BracketingNthOrderBrentSolver" line="42"/>
                <declaration name="f" type="QuinticFunction" line="43"/>
                <declaration name="result" type="double" line="44"/>
            </method>
            <method name="testIssue716" type="void" line="53">
                <declaration name="solver" type="BracketingNthOrderBrentSolver" line="54"/>
                <anonymous_class line="55">
                    <method name="value" type="double" line="56">
                        <params>
                            <param name="x" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="sharpTurn" type="UnivariateFunction" line="55"/>
                <declaration name="result" type="double" line="61"/>
            </method>
            <method name="testFasterThanNewton" type="void" line="66">
                <anonymous_class line="67">
                    <method name="value" type="DerivativeStructure" line="68">
                        <params>
                            <param name="x" type="DerivativeStructure"/>
                        </params>
                    </method>
                </anonymous_class>
                <anonymous_class line="73">
                    <method name="value" type="DerivativeStructure" line="74">
                        <params>
                            <param name="x" type="DerivativeStructure"/>
                        </params>
                    </method>
                </anonymous_class>
                <anonymous_class line="79">
                    <method name="value" type="DerivativeStructure" line="80">
                        <params>
                            <param name="x" type="DerivativeStructure"/>
                        </params>
                    </method>
                </anonymous_class>
                <anonymous_class line="85">
                    <method name="value" type="DerivativeStructure" line="86">
                        <params>
                            <param name="x" type="DerivativeStructure"/>
                        </params>
                    </method>
                </anonymous_class>
                <anonymous_class line="91">
                    <method name="value" type="DerivativeStructure" line="92">
                        <params>
                            <param name="x" type="DerivativeStructure"/>
                        </params>
                    </method>
                </anonymous_class>
                <anonymous_class line="97">
                    <method name="value" type="DerivativeStructure" line="98">
                        <params>
                            <param name="x" type="DerivativeStructure"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <method name="compare" type="void" line="104">
                <params>
                    <param name="f" type="TestFunction"/>
                </params>
            </method>
            <method name="compare" type="void" line="107">
                <params>
                    <param name="f" type="UnivariateDifferentiableFunction"/>
                    <param name="root" type="double"/>
                    <param name="min" type="double"/>
                    <param name="max" type="double"/>
                </params>
                <declaration name="newton" type="NewtonRaphsonSolver" line="108"/>
                <declaration name="bracketing" type="BracketingNthOrderBrentSolver" line="109"/>
                <declaration name="resultN" type="double" line="110"/>
                <scope line="111"/>
                <scope line="114"/>
                <declaration name="resultB" type="double" line="117"/>
                <scope line="118"/>
                <scope line="121"/>
                <declaration name="weightedBracketingEvaluations" type="int" line="126"/>
                <declaration name="weightedNewtonEvaluations" type="int" line="127"/>
            </method>
            <class name="TestFunction" line="130">
                <implements interface="UnivariateDifferentiableFunction"/>
                <declaration name="root" type="double" line="131"/>
                <declaration name="min" type="double" line="132"/>
                <declaration name="max" type="double" line="133"/>
                <method name="TestFunction" type="constructor" line="134">
                    <params>
                        <param name="root" type="double"/>
                        <param name="min" type="double"/>
                        <param name="max" type="double"/>
                    </params>
                </method>
                <method name="getRoot" type="double" line="139"/>
                <method name="getMin" type="double" line="142"/>
                <method name="getMax" type="double" line="145"/>
                <method name="value" type="double" line="148">
                    <params>
                        <param name="x" type="double"/>
                    </params>
                </method>
                <method name="value" type="DerivativeStructure" line="151"/>
            </class>
        </class>
    </source>