<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.ode.nonstiff">
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MaxCountExceededException"/>
        <import package="org.apache.commons.math3.exception.NoBracketingException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.ode.FirstOrderDifferentialEquations"/>
        <import package="org.apache.commons.math3.ode.FirstOrderIntegrator"/>
        <import package="org.apache.commons.math3.ode.TestProblem1"/>
        <import package="org.apache.commons.math3.ode.TestProblem3"/>
        <import package="org.apache.commons.math3.ode.TestProblem4"/>
        <import package="org.apache.commons.math3.ode.TestProblem5"/>
        <import package="org.apache.commons.math3.ode.TestProblemHandler"/>
        <import package="org.apache.commons.math3.ode.events.EventHandler"/>
        <import package="org.apache.commons.math3.ode.sampling.StepHandler"/>
        <import package="org.apache.commons.math3.ode.sampling.StepInterpolator"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="DormandPrince853IntegratorTest" line="19">
            <method name="testMissedEndEvent" type="void" line="20">
                <declaration name="t0" type="double" line="21"/>
                <declaration name="tEvent" type="double" line="22"/>
                <declaration name="k" type="double[]" line="23"/>
                <anonymous_class line="24">
                    <method name="getDimension" type="int" line="25"/>
                    <method name="computeDerivatives" type="void" line="28">
                        <params>
                            <param name="t" type="double"/>
                            <param name="y" type="double[]"/>
                            <param name="yDot" type="double[]"/>
                        </params>
                        <scope line="29"/>
                    </method>
                </anonymous_class>
                <declaration name="ode" type="FirstOrderDifferentialEquations" line="24"/>
                <declaration name="integrator" type="DormandPrince853Integrator" line="35"/>
                <declaration name="y0" type="double[]" line="36"/>
                <scope line="37"/>
                <declaration name="y" type="double[]" line="40"/>
                <declaration name="finalT" type="double" line="42"/>
                <scope line="44"/>
                <anonymous_class line="48">
                    <method name="init" type="void" line="49">
                        <params>
                            <param name="t0" type="double"/>
                            <param name="y0" type="double[]"/>
                            <param name="t" type="double"/>
                        </params>
                    </method>
                    <method name="resetState" type="void" line="51">
                        <params>
                            <param name="t" type="double"/>
                            <param name="y" type="double[]"/>
                        </params>
                    </method>
                    <method name="g" type="double" line="53">
                        <params>
                            <param name="t" type="double"/>
                            <param name="y" type="double[]"/>
                        </params>
                    </method>
                    <method name="eventOccurred" type="Action" line="56">
                        <params>
                            <param name="t" type="double"/>
                            <param name="y" type="double[]"/>
                            <param name="increasing" type="boolean"/>
                        </params>
                    </method>
                </anonymous_class>
                <scope line="64"/>
            </method>
            <method name="testDimensionCheck" type="void" line="68">
                <declaration name="pb" type="TestProblem1" line="69"/>
                <declaration name="integrator" type="DormandPrince853Integrator" line="70"/>
            </method>
            <method name="testNullIntervalCheck" type="void" line="74">
                <declaration name="pb" type="TestProblem1" line="75"/>
                <declaration name="integrator" type="DormandPrince853Integrator" line="76"/>
            </method>
            <method name="testMinStep" type="void" line="80">
                <declaration name="pb" type="TestProblem1" line="81"/>
                <declaration name="minStep" type="double" line="82"/>
                <declaration name="maxStep" type="double" line="83"/>
                <declaration name="vecAbsoluteTolerance" type="double[]" line="84"/>
                <declaration name="vecRelativeTolerance" type="double[]" line="85"/>
                <declaration name="integ" type="FirstOrderIntegrator" line="86"/>
                <declaration name="handler" type="TestProblemHandler" line="87"/>
            </method>
            <method name="testIncreasingTolerance" type="void" line="92">
                <declaration name="previousCalls" type="int" line="93"/>
                <declaration name="integ" type="AdaptiveStepsizeIntegrator" line="94"/>
                <scope line="95">
                    <declaration name="pb" type="TestProblem1" line="96"/>
                    <declaration name="minStep" type="double" line="97"/>
                    <declaration name="maxStep" type="double" line="98"/>
                    <declaration name="scalAbsoluteTolerance" type="double" line="99"/>
                    <declaration name="scalRelativeTolerance" type="double" line="100"/>
                    <declaration name="handler" type="TestProblemHandler" line="102"/>
                    <declaration name="calls" type="int" line="107"/>
                </scope>
            </method>
            <method name="testTooLargeFirstStep" type="void" line="113">
                <declaration name="integ" type="AdaptiveStepsizeIntegrator" line="114"/>
                <declaration name="start" type="double" line="115"/>
                <declaration name="end" type="double" line="116"/>
                <anonymous_class line="117">
                    <method name="getDimension" type="int" line="118"/>
                    <method name="computeDerivatives" type="void" line="121">
                        <params>
                            <param name="t" type="double"/>
                            <param name="y" type="double[]"/>
                            <param name="yDot" type="double[]"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="equations" type="FirstOrderDifferentialEquations" line="117"/>
            </method>
            <method name="testBackward" type="void" line="131">
                <declaration name="pb" type="TestProblem5" line="132"/>
                <declaration name="minStep" type="double" line="133"/>
                <declaration name="maxStep" type="double" line="134"/>
                <declaration name="scalAbsoluteTolerance" type="double" line="135"/>
                <declaration name="scalRelativeTolerance" type="double" line="136"/>
                <declaration name="integ" type="FirstOrderIntegrator" line="137"/>
                <declaration name="handler" type="TestProblemHandler" line="138"/>
            </method>
            <method name="testEvents" type="void" line="146">
                <declaration name="pb" type="TestProblem4" line="147"/>
                <declaration name="minStep" type="double" line="148"/>
                <declaration name="maxStep" type="double" line="149"/>
                <declaration name="scalAbsoluteTolerance" type="double" line="150"/>
                <declaration name="scalRelativeTolerance" type="double" line="151"/>
                <declaration name="integ" type="FirstOrderIntegrator" line="152"/>
                <declaration name="handler" type="TestProblemHandler" line="153"/>
                <declaration name="functions" type="EventHandler[]" line="155"/>
                <declaration name="convergence" type="double" line="156"/>
                <scope line="157"/>
            </method>
            <method name="testKepler" type="void" line="168">
                <declaration name="pb" type="TestProblem3" line="169"/>
                <declaration name="minStep" type="double" line="170"/>
                <declaration name="maxStep" type="double" line="171"/>
                <declaration name="scalAbsoluteTolerance" type="double" line="172"/>
                <declaration name="scalRelativeTolerance" type="double" line="173"/>
                <declaration name="integ" type="FirstOrderIntegrator" line="174"/>
            </method>
            <method name="testVariableSteps" type="void" line="180">
                <declaration name="pb" type="TestProblem3" line="181"/>
                <declaration name="minStep" type="double" line="182"/>
                <declaration name="maxStep" type="double" line="183"/>
                <declaration name="scalAbsoluteTolerance" type="double" line="184"/>
                <declaration name="scalRelativeTolerance" type="double" line="185"/>
                <declaration name="integ" type="FirstOrderIntegrator" line="186"/>
                <declaration name="stopTime" type="double" line="188"/>
            </method>
            <method name="testUnstableDerivative" type="void" line="192">
                <declaration name="stepProblem" type="StepProblem" line="193"/>
                <declaration name="integ" type="FirstOrderIntegrator" line="194"/>
                <declaration name="y" type="double[]" line="196"/>
            </method>
            <method name="testEventsScheduling" type="void" line="200">
                <anonymous_class line="201">
                    <method name="getDimension" type="int" line="202"/>
                    <method name="computeDerivatives" type="void" line="205">
                        <params>
                            <param name="t" type="double"/>
                            <param name="y" type="double[]"/>
                            <param name="yDot" type="double[]"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="sincos" type="FirstOrderDifferentialEquations" line="201"/>
                <declaration name="sinChecker" type="SchedulingChecker" line="211"/>
                <declaration name="cosChecker" type="SchedulingChecker" line="212"/>
                <declaration name="integ" type="FirstOrderIntegrator" line="213"/>
                <declaration name="t0" type="double" line="218"/>
                <declaration name="y0" type="double[]" line="219"/>
                <declaration name="t" type="double" line="220"/>
                <declaration name="y" type="double[]" line="221"/>
            </method>
            <class name="SchedulingChecker" line="224">
                <implements interface="StepHandler"/>
                <implements interface="EventHandler"/>
                <declaration name="index" type="int" line="225"/>
                <declaration name="tMin" type="double" line="226"/>
                <method name="SchedulingChecker" type="constructor" line="227">
                    <params>
                        <param name="index" type="int"/>
                    </params>
                </method>
                <method name="init" type="void" line="230">
                    <params>
                        <param name="t0" type="double"/>
                        <param name="y0" type="double[]"/>
                        <param name="t" type="double"/>
                    </params>
                </method>
                <method name="handleStep" type="void" line="233">
                    <params>
                        <param name="interpolator" type="StepInterpolator"/>
                        <param name="isLast" type="boolean"/>
                    </params>
                </method>
                <method name="g" type="double" line="236">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                    </params>
                </method>
                <method name="eventOccurred" type="Action" line="240">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                        <param name="increasing" type="boolean"/>
                    </params>
                </method>
                <method name="resetState" type="void" line="243">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                    </params>
                </method>
            </class>
            <class name="KeplerHandler" line="246">
                <implements interface="StepHandler"/>
                <method name="KeplerHandler" type="constructor" line="247">
                    <params>
                        <param name="pb" type="TestProblem3"/>
                    </params>
                </method>
                <method name="init" type="void" line="250">
                    <params>
                        <param name="t0" type="double"/>
                        <param name="y0" type="double[]"/>
                        <param name="t" type="double"/>
                    </params>
                </method>
                <method name="handleStep" type="void" line="254">
                    <params>
                        <param name="interpolator" type="StepInterpolator"/>
                        <param name="isLast" type="boolean"/>
                    </params>
                    <scope line="256">
                        <declaration name="prev" type="double" line="257"/>
                        <declaration name="curr" type="double" line="258"/>
                        <declaration name="interp" type="double" line="259"/>
                        <declaration name="interpolatedY" type="double[]" line="261"/>
                        <declaration name="theoreticalY" type="double[]" line="262"/>
                        <declaration name="dx" type="double" line="263"/>
                        <declaration name="dy" type="double" line="264"/>
                        <declaration name="error" type="double" line="265"/>
                        <scope line="266"/>
                    </scope>
                    <scope line="270"/>
                </method>
                <declaration name="nbSteps" type="int" line="275"/>
                <declaration name="maxError" type="double" line="276"/>
                <declaration name="pb" type="TestProblem3" line="277"/>
            </class>
            <class name="VariableHandler" line="279">
                <implements interface="StepHandler"/>
                <method name="VariableHandler" type="constructor" line="280"/>
                <method name="init" type="void" line="285">
                    <params>
                        <param name="t0" type="double"/>
                        <param name="y0" type="double[]"/>
                        <param name="t" type="double"/>
                    </params>
                </method>
                <method name="handleStep" type="void" line="290">
                    <params>
                        <param name="interpolator" type="StepInterpolator"/>
                        <param name="isLast" type="boolean"/>
                    </params>
                    <declaration name="step" type="double" line="291"/>
                    <scope line="292"/>
                    <scope line="297">
                        <scope line="298"/>
                        <scope line="301"/>
                    </scope>
                    <scope line="305"/>
                </method>
                <declaration name="firstTime" type="boolean" line="310"/>
                <declaration name="minStep" type="double" line="311"/>
                <declaration name="maxStep" type="double" line="312"/>
            </class>
        </class>
    </source>