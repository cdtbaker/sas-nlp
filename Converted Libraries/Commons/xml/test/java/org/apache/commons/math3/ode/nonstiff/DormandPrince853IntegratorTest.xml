<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.ode.nonstiff">
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MaxCountExceededException"/>
        <import package="org.apache.commons.math3.exception.NoBracketingException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.ode.FirstOrderDifferentialEquations"/>
        <import package="org.apache.commons.math3.ode.FirstOrderIntegrator"/>
        <import package="org.apache.commons.math3.ode.TestProblem1"/>
        <import package="org.apache.commons.math3.ode.TestProblem3"/>
        <import package="org.apache.commons.math3.ode.TestProblem4"/>
        <import package="org.apache.commons.math3.ode.TestProblem5"/>
        <import package="org.apache.commons.math3.ode.TestProblemHandler"/>
        <import package="org.apache.commons.math3.ode.events.EventHandler"/>
        <import package="org.apache.commons.math3.ode.sampling.StepHandler"/>
        <import package="org.apache.commons.math3.ode.sampling.StepInterpolator"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="DormandPrince853IntegratorTest" line="39">
            <method name="testMissedEndEvent" type="void" line="44">
                <declaration name="t0" type="double" line="45"/>
                <declaration name="tEvent" type="double" line="46"/>
                <declaration name="k" type="double[]" line="47"/>
                <anonymous_class line="48">
                    <method name="getDimension" type="int" line="50"/>
                    <method name="computeDerivatives" type="void" line="54">
                        <params>
                            <param name="t" type="double"/>
                            <param name="y" type="double[]"/>
                            <param name="yDot" type="double[]"/>
                        </params>
                        <scope line="55"/>
                    </method>
                </anonymous_class>
                <declaration name="ode" type="FirstOrderDifferentialEquations" line="48"/>
                <declaration name="integrator" type="DormandPrince853Integrator" line="61"/>
                <declaration name="y0" type="double[]" line="64"/>
                <scope line="65"/>
                <declaration name="y" type="double[]" line="68"/>
                <declaration name="finalT" type="double" line="71"/>
                <scope line="73"/>
                <anonymous_class line="78">
                    <method name="init" type="void" line="80">
                        <params>
                            <param name="t0" type="double"/>
                            <param name="y0" type="double[]"/>
                            <param name="t" type="double"/>
                        </params>
                    </method>
                    <method name="resetState" type="void" line="83">
                        <params>
                            <param name="t" type="double"/>
                            <param name="y" type="double[]"/>
                        </params>
                    </method>
                    <method name="g" type="double" line="86">
                        <params>
                            <param name="t" type="double"/>
                            <param name="y" type="double[]"/>
                        </params>
                    </method>
                    <method name="eventOccurred" type="Action" line="90">
                        <params>
                            <param name="t" type="double"/>
                            <param name="y" type="double[]"/>
                            <param name="increasing" type="boolean"/>
                        </params>
                    </method>
                </anonymous_class>
                <scope line="97"/>
            </method>
            <method name="testDimensionCheck" type="void" line="106">
                <declaration name="pb" type="TestProblem1" line="107"/>
                <declaration name="integrator" type="DormandPrince853Integrator" line="108"/>
            </method>
            <method name="testNullIntervalCheck" type="void" line="119">
                <declaration name="pb" type="TestProblem1" line="120"/>
                <declaration name="integrator" type="DormandPrince853Integrator" line="121"/>
            </method>
            <method name="testMinStep" type="void" line="132">
                <declaration name="pb" type="TestProblem1" line="134"/>
                <declaration name="minStep" type="double" line="135"/>
                <declaration name="maxStep" type="double" line="136"/>
                <declaration name="vecAbsoluteTolerance" type="double[]" line="137"/>
                <declaration name="vecRelativeTolerance" type="double[]" line="138"/>
                <declaration name="integ" type="FirstOrderIntegrator" line="140"/>
                <declaration name="handler" type="TestProblemHandler" line="143"/>
            </method>
            <method name="testIncreasingTolerance" type="void" line="155">
                <comment line="176">
                    the 1.3 factor is only valid for this test
                     and has been obtained from trial and error
                     there is no general relation between local and global errors                    
                </comment>
                <declaration name="previousCalls" type="int" line="157"/>
                <declaration name="integ" type="AdaptiveStepsizeIntegrator" line="158"/>
                <scope line="161">
                    <declaration name="pb" type="TestProblem1" line="162"/>
                    <declaration name="minStep" type="double" line="163"/>
                    <declaration name="maxStep" type="double" line="164"/>
                    <declaration name="scalAbsoluteTolerance" type="double" line="165"/>
                    <declaration name="scalRelativeTolerance" type="double" line="166"/>
                    <declaration name="handler" type="TestProblemHandler" line="169"/>
                    <declaration name="calls" type="int" line="181"/>
                </scope>
            </method>
            <method name="testTooLargeFirstStep" type="void" line="193">
                <declaration name="integ" type="AdaptiveStepsizeIntegrator" line="195"/>
                <declaration name="start" type="double" line="197"/>
                <declaration name="end" type="double" line="198"/>
                <anonymous_class line="199">
                    <method name="getDimension" type="int" line="201"/>
                    <method name="computeDerivatives" type="void" line="205">
                        <params>
                            <param name="t" type="double"/>
                            <param name="y" type="double[]"/>
                            <param name="yDot" type="double[]"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="equations" type="FirstOrderDifferentialEquations" line="199"/>
            </method>
            <method name="testBackward" type="void" line="221">
                <declaration name="pb" type="TestProblem5" line="223"/>
                <declaration name="minStep" type="double" line="224"/>
                <declaration name="maxStep" type="double" line="225"/>
                <declaration name="scalAbsoluteTolerance" type="double" line="226"/>
                <declaration name="scalRelativeTolerance" type="double" line="227"/>
                <declaration name="integ" type="FirstOrderIntegrator" line="229"/>
                <declaration name="handler" type="TestProblemHandler" line="232"/>
            </method>
            <method name="testEvents" type="void" line="246">
                <declaration name="pb" type="TestProblem4" line="248"/>
                <declaration name="minStep" type="double" line="249"/>
                <declaration name="maxStep" type="double" line="250"/>
                <declaration name="scalAbsoluteTolerance" type="double" line="251"/>
                <declaration name="scalRelativeTolerance" type="double" line="252"/>
                <declaration name="integ" type="FirstOrderIntegrator" line="254"/>
                <declaration name="handler" type="TestProblemHandler" line="257"/>
                <declaration name="functions" type="EventHandler[]" line="259"/>
                <declaration name="convergence" type="double" line="260"/>
                <scope line="261"/>
            </method>
            <method name="testKepler" type="void" line="280">
                <declaration name="pb" type="TestProblem3" line="282"/>
                <declaration name="minStep" type="double" line="283"/>
                <declaration name="maxStep" type="double" line="284"/>
                <declaration name="scalAbsoluteTolerance" type="double" line="285"/>
                <declaration name="scalRelativeTolerance" type="double" line="286"/>
                <declaration name="integ" type="FirstOrderIntegrator" line="288"/>
            </method>
            <method name="testVariableSteps" type="void" line="304">
                <declaration name="pb" type="TestProblem3" line="306"/>
                <declaration name="minStep" type="double" line="307"/>
                <declaration name="maxStep" type="double" line="308"/>
                <declaration name="scalAbsoluteTolerance" type="double" line="309"/>
                <declaration name="scalRelativeTolerance" type="double" line="310"/>
                <declaration name="integ" type="FirstOrderIntegrator" line="312"/>
                <declaration name="stopTime" type="double" line="316"/>
            </method>
            <method name="testUnstableDerivative" type="void" line="326">
                <declaration name="stepProblem" type="StepProblem" line="327"/>
                <declaration name="integ" type="FirstOrderIntegrator" line="328"/>
                <declaration name="y" type="double[]" line="331"/>
            </method>
            <method name="testEventsScheduling" type="void" line="337">
                <comment line="353">
                    events at 0, PI, 2PI ...                    
                </comment>
                <comment line="354">
                    events at PI/2, 3PI/2, 5PI/2 ...                    
                </comment>
                <anonymous_class line="339">
                    <method name="getDimension" type="int" line="341"/>
                    <method name="computeDerivatives" type="void" line="345">
                        <params>
                            <param name="t" type="double"/>
                            <param name="y" type="double[]"/>
                            <param name="yDot" type="double[]"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="sincos" type="FirstOrderDifferentialEquations" line="339"/>
                <declaration name="sinChecker" type="SchedulingChecker" line="352"/>
                <declaration name="cosChecker" type="SchedulingChecker" line="353"/>
                <declaration name="integ" type="FirstOrderIntegrator" line="355"/>
                <declaration name="t0" type="double" line="361"/>
                <declaration name="y0" type="double[]" line="362"/>
                <declaration name="t" type="double" line="363"/>
                <declaration name="y" type="double[]" line="364"/>
            </method>
            <class name="SchedulingChecker" line="369">
                <implements interface="StepHandler"/>
                <implements interface="EventHandler"/>
                <declaration name="index" type="int" line="371"/>
                <declaration name="tMin" type="double" line="372"/>
                <method name="SchedulingChecker" type="constructor" line="374">
                    <params>
                        <param name="index" type="int"/>
                    </params>
                </method>
                <method name="init" type="void" line="378">
                    <params>
                        <param name="t0" type="double"/>
                        <param name="y0" type="double[]"/>
                        <param name="t" type="double"/>
                    </params>
                </method>
                <method name="handleStep" type="void" line="382">
                    <params>
                        <param name="interpolator" type="StepInterpolator"/>
                        <param name="isLast" type="boolean"/>
                    </params>
                </method>
                <method name="g" type="double" line="386">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                    </params>
                    <comment line="388">
                        once a step has been handled by handleStep,
                         events checking should only refer to dates after the step                        
                    </comment>
                </method>
                <method name="eventOccurred" type="Action" line="393">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                        <param name="increasing" type="boolean"/>
                    </params>
                </method>
                <method name="resetState" type="void" line="397">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                    </params>
                    <comment line="399">
                        in fact, we don&apos;t need to reset anything for the test                        
                    </comment>
                </method>
            </class>
            <class name="KeplerHandler" line="403">
                <implements interface="StepHandler"/>
                <method name="KeplerHandler" type="constructor" line="404">
                    <params>
                        <param name="pb" type="TestProblem3"/>
                    </params>
                </method>
                <method name="init" type="void" line="407">
                    <params>
                        <param name="t0" type="double"/>
                        <param name="y0" type="double[]"/>
                        <param name="t" type="double"/>
                    </params>
                </method>
                <method name="handleStep" type="void" line="412">
                    <params>
                        <param name="interpolator" type="StepInterpolator"/>
                        <param name="isLast" type="boolean"/>
                    </params>
                    <scope line="415">
                        <declaration name="prev" type="double" line="417"/>
                        <declaration name="curr" type="double" line="418"/>
                        <declaration name="interp" type="double" line="419"/>
                        <declaration name="interpolatedY" type="double[]" line="422"/>
                        <declaration name="theoreticalY" type="double[]" line="423"/>
                        <declaration name="dx" type="double" line="424"/>
                        <declaration name="dy" type="double" line="425"/>
                        <declaration name="error" type="double" line="426"/>
                        <scope line="427"/>
                    </scope>
                    <scope line="431"/>
                </method>
                <declaration name="nbSteps" type="int" line="436"/>
                <declaration name="maxError" type="double" line="437"/>
                <declaration name="pb" type="TestProblem3" line="438"/>
            </class>
            <class name="VariableHandler" line="441">
                <implements interface="StepHandler"/>
                <method name="VariableHandler" type="constructor" line="442"/>
                <method name="init" type="void" line="447">
                    <params>
                        <param name="t0" type="double"/>
                        <param name="y0" type="double[]"/>
                        <param name="t" type="double"/>
                    </params>
                </method>
                <method name="handleStep" type="void" line="453">
                    <params>
                        <param name="interpolator" type="StepInterpolator"/>
                        <param name="isLast" type="boolean"/>
                    </params>
                    <declaration name="step" type="double" line="455"/>
                    <scope line="457"/>
                    <scope line="461">
                        <scope line="462"/>
                        <scope line="465"/>
                    </scope>
                    <scope line="470"/>
                </method>
                <declaration name="firstTime" type="boolean" line="475"/>
                <declaration name="minStep" type="double" line="476"/>
                <declaration name="maxStep" type="double" line="477"/>
            </class>
        </class>
    </source>