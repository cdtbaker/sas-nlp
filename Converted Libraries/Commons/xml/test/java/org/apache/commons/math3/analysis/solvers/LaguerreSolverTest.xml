<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.solvers">
        <import package="org.apache.commons.math3.analysis.polynomials.PolynomialFunction"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooLargeException"/>
        <import package="org.apache.commons.math3.exception.NoBracketingException"/>
        <import package="org.apache.commons.math3.complex.Complex"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="LaguerreSolverTest" line="10">
            <javadoc line="10">
                Test case for Laguerre solver.
                  &lt;p&gt;
                  Laguerre&apos;s method is very efficient in solving polynomials. Test runs
                  show that for a default absolute accuracy of 1E-6, it generally takes
                  less than 5 iterations to find one root, provided solveAll() is not
                  invoked, and 15 to 20 iterations to find all roots for quintic function.                
                <version>
                    $Id: LaguerreSolverTest.java 1361793 2012-07-15 20:50:13Z erans $                    
                </version>
            </javadoc>
            <javadoc line="20">
                Test of solver for the linear function.                
            </javadoc>
            <method name="testLinearFunction" type="void" line="23">
                <declaration name="min" type="double" line="24"/>
                <declaration name="coefficients" type="double" line="25"/>
                <declaration name="f" type="PolynomialFunction" line="26"/>
                <declaration name="solver" type="LaguerreSolver" line="27"/>
            </method>
            <javadoc line="35">
                Test of solver for the quadratic function.                
            </javadoc>
            <method name="testQuadraticFunction" type="void" line="38">
                <declaration name="min" type="double" line="39"/>
                <declaration name="coefficients" type="double" line="40"/>
                <declaration name="f" type="PolynomialFunction" line="41"/>
                <declaration name="solver" type="LaguerreSolver" line="42"/>
            </method>
            <javadoc line="56">
                Test of solver for the quintic function.                
            </javadoc>
            <method name="testQuinticFunction" type="void" line="59">
                <declaration name="min" type="double" line="60"/>
                <declaration name="coefficients" type="double" line="61"/>
                <declaration name="f" type="PolynomialFunction" line="62"/>
                <declaration name="solver" type="LaguerreSolver" line="63"/>
            </method>
            <javadoc line="83">
                Test of solver for the quintic function using{@link LaguerreSolver#solveAllComplex(double[],double) solveAllComplex}.                
            </javadoc>
            <method name="testQuinticFunction2" type="void" line="86">
                <declaration name="coefficients" type="double[]" line="87"/>
                <declaration name="solver" type="LaguerreSolver" line="88"/>
                <declaration name="result" type="Complex[]" line="89"/>
                <scope line="90">
                    <declaration name="tolerance" type="double" line="91"/>
                </scope>
            </method>
            <javadoc line="95">
                Test of parameters for the solver.                
            </javadoc>
            <method name="testParameters" type="void" line="98">
                <declaration name="coefficients" type="double" line="99"/>
                <declaration name="f" type="PolynomialFunction" line="100"/>
                <declaration name="solver" type="LaguerreSolver" line="101"/>
                <scope line="102"/>
                <scope line="106"/>
                <scope line="108"/>
                <scope line="112"/>
            </method>
        </class>
    </source>