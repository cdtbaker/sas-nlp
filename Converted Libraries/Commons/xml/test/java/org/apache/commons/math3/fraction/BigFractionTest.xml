<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.fraction">
        <import package="java.math.BigDecimal"/>
        <import package="java.math.BigInteger"/>
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.exception.ConvergenceException"/>
        <import package="org.apache.commons.math3.exception.MathArithmeticException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.ZeroException"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="BigFractionTest" line="32">
            <comment line="101">
                MATH-179                
            </comment>
            <comment line="147">
                MATH-181                
            </comment>
            <comment line="163">
                MATH-1029                
            </comment>
            <comment line="169">
                MATH-1029                
            </comment>
            <comment line="218">
                MATH-744                
            </comment>
            <comment line="230">
                MATH-744                
            </comment>
            <method name="assertFraction" type="void" line="34">
                <params>
                    <param name="expectedNumerator" type="int"/>
                    <param name="expectedDenominator" type="int"/>
                    <param name="actual" type="BigFraction"/>
                </params>
            </method>
            <method name="assertFraction" type="void" line="39">
                <params>
                    <param name="expectedNumerator" type="long"/>
                    <param name="expectedDenominator" type="long"/>
                    <param name="actual" type="BigFraction"/>
                </params>
            </method>
            <method name="testConstructor" type="void" line="45">
                <comment line="73">
                    expected                    
                </comment>
                <comment line="79">
                    expected                    
                </comment>
                <comment line="85">
                    expected                    
                </comment>
                <comment line="91">
                    expected                    
                </comment>
                <scope line="68"/>
                <scope line="71"/>
                <scope line="74"/>
                <scope line="77"/>
                <scope line="80"/>
                <scope line="83"/>
                <scope line="86"/>
                <scope line="89"/>
            </method>
            <method name="testGoldenRatio" type="void" line="95">
                <comment line="97">
                    the golden ratio is notoriously a difficult number for continuous fraction                    
                </comment>
            </method>
            <method name="testDoubleConstructor" type="void" line="102"/>
            <method name="testDigitLimitConstructor" type="void" line="148">
                <comment line="159">
                    MATH-996                    
                </comment>
            </method>
            <method name="testPositiveValueOverflow" type="void" line="164"/>
            <method name="testNegativeValueOverflow" type="void" line="170"/>
            <method name="testEpsilonLimitConstructor" type="void" line="175"/>
            <method name="testCompareTo" type="void" line="187">
                <comment line="198">
                    these two values are different approximations of PI
                     the first  one is approximately PI - 3.07e-18
                     the second one is approximately PI + 1.936e-17                    
                </comment>
                <declaration name="first" type="BigFraction" line="188"/>
                <declaration name="second" type="BigFraction" line="189"/>
                <declaration name="third" type="BigFraction" line="190"/>
                <declaration name="pi1" type="BigFraction" line="200"/>
                <declaration name="pi2" type="BigFraction" line="201"/>
            </method>
            <method name="testDoubleValue" type="void" line="209">
                <declaration name="first" type="BigFraction" line="210"/>
                <declaration name="second" type="BigFraction" line="211"/>
            </method>
            <method name="testDoubleValueForLargeNumeratorAndDenominator" type="void" line="219">
                <declaration name="pow400" type="BigInteger" line="220"/>
                <declaration name="pow401" type="BigInteger" line="221"/>
                <declaration name="two" type="BigInteger" line="222"/>
                <declaration name="large" type="BigFraction" line="223"/>
            </method>
            <method name="testFloatValueForLargeNumeratorAndDenominator" type="void" line="231">
                <declaration name="pow400" type="BigInteger" line="232"/>
                <declaration name="pow401" type="BigInteger" line="233"/>
                <declaration name="two" type="BigInteger" line="234"/>
                <declaration name="large" type="BigFraction" line="235"/>
            </method>
            <method name="testFloatValue" type="void" line="242">
                <declaration name="first" type="BigFraction" line="243"/>
                <declaration name="second" type="BigFraction" line="244"/>
            </method>
            <method name="testIntValue" type="void" line="251">
                <declaration name="first" type="BigFraction" line="252"/>
                <declaration name="second" type="BigFraction" line="253"/>
            </method>
            <method name="testLongValue" type="void" line="260">
                <declaration name="first" type="BigFraction" line="261"/>
                <declaration name="second" type="BigFraction" line="262"/>
            </method>
            <method name="testConstructorDouble" type="void" line="269">
                <comment line="284">
                    expected                    
                </comment>
                <scope line="278">
                    <scope line="279"/>
                    <scope line="282"/>
                </scope>
            </method>
            <method name="testAbs" type="void" line="292">
                <declaration name="a" type="BigFraction" line="293"/>
                <declaration name="b" type="BigFraction" line="294"/>
                <declaration name="c" type="BigFraction" line="295"/>
            </method>
            <method name="testReciprocal" type="void" line="303">
                <comment line="329">
                    large values                    
                </comment>
                <declaration name="f" type="BigFraction" line="304"/>
                <scope line="322"/>
                <scope line="325"/>
            </method>
            <method name="testNegate" type="void" line="336">
                <comment line="350">
                    large values                    
                </comment>
                <declaration name="f" type="BigFraction" line="337"/>
            </method>
            <method name="testAdd" type="void" line="358">
                <comment line="386">
                    if this fraction is added naively, it will overflow.
                     check that it doesn&apos;t.                    
                </comment>
                <declaration name="a" type="BigFraction" line="359"/>
                <declaration name="b" type="BigFraction" line="360"/>
                <declaration name="f1" type="BigFraction" line="367"/>
                <declaration name="f2" type="BigFraction" line="368"/>
                <declaration name="f" type="BigFraction" line="369"/>
                <scope line="379"/>
                <scope line="382"/>
            </method>
            <method name="testDivide" type="void" line="429">
                <declaration name="a" type="BigFraction" line="430"/>
                <declaration name="b" type="BigFraction" line="431"/>
                <declaration name="f1" type="BigFraction" line="438"/>
                <declaration name="f2" type="BigFraction" line="439"/>
                <scope line="440"/>
                <scope line="443"/>
                <declaration name="f" type="BigFraction" line="448"/>
                <scope line="468"/>
                <scope line="471"/>
            </method>
            <method name="testMultiply" type="void" line="492">
                <declaration name="a" type="BigFraction" line="493"/>
                <declaration name="b" type="BigFraction" line="494"/>
                <declaration name="f1" type="BigFraction" line="501"/>
                <declaration name="f2" type="BigFraction" line="502"/>
                <declaration name="f" type="BigFraction" line="503"/>
                <scope line="515"/>
                <scope line="518"/>
            </method>
            <method name="testSubtract" type="void" line="524">
                <comment line="541">
                    if this fraction is subtracted naively, it will overflow.
                     check that it doesn&apos;t.                    
                </comment>
                <declaration name="a" type="BigFraction" line="525"/>
                <declaration name="b" type="BigFraction" line="526"/>
                <declaration name="f" type="BigFraction" line="533"/>
                <scope line="534"/>
                <scope line="537"/>
                <declaration name="f1" type="BigFraction" line="542"/>
                <declaration name="f2" type="BigFraction" line="543"/>
            </method>
            <method name="testBigDecimalValue" type="void" line="563"/>
            <method name="testEqualsAndHashCode" type="void" line="571">
                <declaration name="zero" type="BigFraction" line="572"/>
                <declaration name="nullFraction" type="BigFraction" line="573"/>
                <declaration name="zero2" type="BigFraction" line="577"/>
                <declaration name="one" type="BigFraction" line="580"/>
            </method>
            <method name="testGetReducedFraction" type="void" line="586">
                <comment line="595">
                    expected                    
                </comment>
                <declaration name="threeFourths" type="BigFraction" line="587"/>
                <scope line="590"/>
                <scope line="593"/>
            </method>
            <method name="testPercentage" type="void" line="601"/>
            <method name="testPow" type="void" line="606"/>
            <method name="testMath340" type="void" line="619">
                <declaration name="fractionA" type="BigFraction" line="620"/>
                <declaration name="fractionB" type="BigFraction" line="621"/>
                <declaration name="errorResult" type="BigFraction" line="622"/>
                <declaration name="correctResult" type="BigFraction" line="623"/>
            </method>
            <method name="testSerial" type="void" line="629">
                <declaration name="fractions" type="BigFraction[]" line="630"/>
                <scope line="635"/>
            </method>
        </class>
    </source>