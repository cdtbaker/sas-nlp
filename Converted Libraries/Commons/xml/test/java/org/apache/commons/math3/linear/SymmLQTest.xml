<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="java.util.Arrays"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.IterationEvent"/>
        <import package="org.apache.commons.math3.util.IterationListener"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="SymmLQTest" line="28">
            <method name="saundersTest" type="void" line="32">
                <params>
                    <param name="n" type="int"/>
                    <param name="goodb" type="boolean"/>
                    <param name="precon" type="boolean"/>
                    <param name="shift" type="double"/>
                    <param name="pertbn" type="double"/>
                </params>
                <anonymous_class line="33">
                    <method name="operate" type="RealVector" line="36">
                        <params>
                            <param name="x" type="RealVector"/>
                        </params>
                        <scope line="37"/>
                        <declaration name="y" type="double[]" line="40"/>
                        <scope line="41"/>
                    </method>
                    <method name="getRowDimension" type="int" line="48"/>
                    <method name="getColumnDimension" type="int" line="53"/>
                </anonymous_class>
                <declaration name="a" type="RealLinearOperator" line="33"/>
                <declaration name="shiftm" type="double" line="57"/>
                <declaration name="pertm" type="double" line="58"/>
                <declaration name="minv" type="RealLinearOperator" line="59"/>
                <scope line="60">
                    <anonymous_class line="61">
                        <method name="getRowDimension" type="int" line="63"/>
                        <method name="getColumnDimension" type="int" line="68"/>
                        <method name="operate" type="RealVector" line="73">
                            <params>
                                <param name="x" type="RealVector"/>
                            </params>
                            <scope line="74"/>
                            <declaration name="y" type="double[]" line="78"/>
                            <scope line="79">
                                <declaration name="d" type="double" line="80"/>
                                <scope line="82"/>
                            </scope>
                        </method>
                    </anonymous_class>
                </scope>
                <scope line="90"/>
                <declaration name="xtrue" type="RealVector" line="93"/>
                <scope line="94"/>
                <declaration name="b" type="RealVector" line="97"/>
                <declaration name="solver" type="SymmLQ" line="99"/>
                <declaration name="x" type="RealVector" line="100"/>
                <declaration name="y" type="RealVector" line="101"/>
                <declaration name="r1" type="RealVector" line="102"/>
                <scope line="103">
                    <declaration name="bi" type="double" line="104"/>
                    <declaration name="yi" type="double" line="105"/>
                    <declaration name="xi" type="double" line="106"/>
                </scope>
                <declaration name="enorm" type="double" line="109"/>
                <declaration name="etol" type="double" line="110"/>
            </method>
            <method name="testSolveSaunders1" type="void" line="116"/>
            <method name="testSolveSaunders2" type="void" line="121"/>
            <method name="testSolveSaunders3" type="void" line="126"/>
            <method name="testSolveSaunders4" type="void" line="131"/>
            <method name="testSolveSaunders5" type="void" line="136"/>
            <method name="testSolveSaunders6" type="void" line="141"/>
            <method name="testSolveSaunders7" type="void" line="146"/>
            <method name="testSolveSaunders8" type="void" line="151"/>
            <method name="testSolveSaunders9" type="void" line="156"/>
            <method name="testSolveSaunders10" type="void" line="161"/>
            <method name="testSolveSaunders11" type="void" line="166"/>
            <method name="testSolveSaunders12" type="void" line="171"/>
            <method name="testSolveSaunders13" type="void" line="176"/>
            <method name="testSolveSaunders14" type="void" line="181"/>
            <method name="testSolveSaunders15" type="void" line="186"/>
            <method name="testSolveSaunders16" type="void" line="191"/>
            <method name="testSolveSaunders17" type="void" line="196"/>
            <method name="testSolveSaunders18" type="void" line="201"/>
            <method name="testSolveSaunders19" type="void" line="206"/>
            <method name="testSolveSaunders20" type="void" line="211"/>
            <method name="testNonSquareOperator" type="void" line="216">
                <declaration name="a" type="Array2DRowRealMatrix" line="217"/>
                <declaration name="solver" type="IterativeLinearSolver" line="218"/>
                <declaration name="b" type="ArrayRealVector" line="220"/>
                <declaration name="x" type="ArrayRealVector" line="221"/>
            </method>
            <method name="testDimensionMismatchRightHandSide" type="void" line="226">
                <declaration name="a" type="Array2DRowRealMatrix" line="227"/>
                <declaration name="solver" type="IterativeLinearSolver" line="228"/>
                <declaration name="b" type="ArrayRealVector" line="230"/>
            </method>
            <method name="testDimensionMismatchSolution" type="void" line="235">
                <declaration name="a" type="Array2DRowRealMatrix" line="236"/>
                <declaration name="solver" type="IterativeLinearSolver" line="237"/>
                <declaration name="b" type="ArrayRealVector" line="239"/>
                <declaration name="x" type="ArrayRealVector" line="240"/>
            </method>
            <method name="testUnpreconditionedSolution" type="void" line="245">
                <declaration name="n" type="int" line="246"/>
                <declaration name="maxIterations" type="int" line="247"/>
                <declaration name="a" type="RealLinearOperator" line="248"/>
                <declaration name="ainv" type="InverseHilbertMatrix" line="249"/>
                <declaration name="solver" type="IterativeLinearSolver" line="250"/>
                <declaration name="b" type="RealVector" line="252"/>
                <scope line="253">
                    <declaration name="x" type="RealVector" line="256"/>
                    <scope line="257">
                        <declaration name="actual" type="double" line="258"/>
                        <declaration name="expected" type="double" line="259"/>
                        <declaration name="delta" type="double" line="260"/>
                        <declaration name="msg" type="String" line="261"/>
                    </scope>
                </scope>
            </method>
            <method name="testUnpreconditionedInPlaceSolutionWithInitialGuess" type="void" line="268">
                <declaration name="n" type="int" line="269"/>
                <declaration name="maxIterations" type="int" line="270"/>
                <declaration name="a" type="RealLinearOperator" line="271"/>
                <declaration name="ainv" type="InverseHilbertMatrix" line="272"/>
                <declaration name="solver" type="IterativeLinearSolver" line="273"/>
                <declaration name="b" type="RealVector" line="275"/>
                <scope line="276">
                    <declaration name="x0" type="RealVector" line="279"/>
                    <declaration name="x" type="RealVector" line="281"/>
                    <scope line="283">
                        <declaration name="actual" type="double" line="284"/>
                        <declaration name="expected" type="double" line="285"/>
                        <declaration name="delta" type="double" line="286"/>
                        <declaration name="msg" type="String" line="287"/>
                    </scope>
                </scope>
            </method>
            <method name="testUnpreconditionedSolutionWithInitialGuess" type="void" line="294">
                <declaration name="n" type="int" line="295"/>
                <declaration name="maxIterations" type="int" line="296"/>
                <declaration name="a" type="RealLinearOperator" line="297"/>
                <declaration name="ainv" type="InverseHilbertMatrix" line="298"/>
                <declaration name="solver" type="IterativeLinearSolver" line="299"/>
                <declaration name="b" type="RealVector" line="301"/>
                <scope line="302">
                    <declaration name="x0" type="RealVector" line="305"/>
                    <declaration name="x" type="RealVector" line="307"/>
                    <scope line="309">
                        <declaration name="actual" type="double" line="310"/>
                        <declaration name="expected" type="double" line="311"/>
                        <declaration name="delta" type="double" line="312"/>
                        <declaration name="msg" type="String" line="313"/>
                    </scope>
                </scope>
            </method>
            <method name="testNonSquarePreconditioner" type="void" line="321">
                <declaration name="a" type="Array2DRowRealMatrix" line="322"/>
                <anonymous_class line="323">
                    <method name="operate" type="RealVector" line="326">
                        <params>
                            <param name="x" type="RealVector"/>
                        </params>
                    </method>
                    <method name="getRowDimension" type="int" line="331"/>
                    <method name="getColumnDimension" type="int" line="336"/>
                </anonymous_class>
                <declaration name="m" type="RealLinearOperator" line="323"/>
                <declaration name="solver" type="PreconditionedIterativeLinearSolver" line="340"/>
                <declaration name="b" type="ArrayRealVector" line="342"/>
            </method>
            <method name="testMismatchedOperatorDimensions" type="void" line="347">
                <declaration name="a" type="Array2DRowRealMatrix" line="348"/>
                <anonymous_class line="349">
                    <method name="operate" type="RealVector" line="352">
                        <params>
                            <param name="x" type="RealVector"/>
                        </params>
                    </method>
                    <method name="getRowDimension" type="int" line="357"/>
                    <method name="getColumnDimension" type="int" line="362"/>
                </anonymous_class>
                <declaration name="m" type="RealLinearOperator" line="349"/>
                <declaration name="solver" type="PreconditionedIterativeLinearSolver" line="366"/>
                <declaration name="b" type="ArrayRealVector" line="368"/>
            </method>
            <method name="testNonPositiveDefinitePreconditioner" type="void" line="373">
                <declaration name="a" type="Array2DRowRealMatrix" line="374"/>
                <anonymous_class line="379">
                    <method name="operate" type="RealVector" line="382">
                        <params>
                            <param name="x" type="RealVector"/>
                        </params>
                        <declaration name="y" type="ArrayRealVector" line="383"/>
                    </method>
                    <method name="getRowDimension" type="int" line="390"/>
                    <method name="getColumnDimension" type="int" line="395"/>
                </anonymous_class>
                <declaration name="m" type="RealLinearOperator" line="379"/>
                <declaration name="solver" type="PreconditionedIterativeLinearSolver" line="399"/>
                <declaration name="b" type="ArrayRealVector" line="401"/>
            </method>
            <method name="testPreconditionedSolution" type="void" line="408">
                <declaration name="n" type="int" line="409"/>
                <declaration name="maxIterations" type="int" line="410"/>
                <declaration name="a" type="RealLinearOperator" line="411"/>
                <declaration name="ainv" type="InverseHilbertMatrix" line="412"/>
                <declaration name="m" type="RealLinearOperator" line="413"/>
                <declaration name="solver" type="PreconditionedIterativeLinearSolver" line="414"/>
                <declaration name="b" type="RealVector" line="416"/>
                <scope line="417">
                    <declaration name="x" type="RealVector" line="420"/>
                    <scope line="421">
                        <declaration name="actual" type="double" line="422"/>
                        <declaration name="expected" type="double" line="423"/>
                        <declaration name="delta" type="double" line="424"/>
                        <declaration name="msg" type="String" line="425"/>
                    </scope>
                </scope>
            </method>
            <method name="testPreconditionedSolution2" type="void" line="432">
                <declaration name="n" type="int" line="433"/>
                <declaration name="maxIterations" type="int" line="434"/>
                <declaration name="a" type="Array2DRowRealMatrix" line="435"/>
                <declaration name="daux" type="double" line="436"/>
                <scope line="437">
                    <scope line="440">
                        <scope line="441"/>
                        <scope line="442">
                            <declaration name="value" type="double" line="443"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="m" type="RealLinearOperator" line="449"/>
                <declaration name="prec" type="PreconditionedIterativeLinearSolver" line="450"/>
                <declaration name="unprec" type="IterativeLinearSolver" line="451"/>
                <declaration name="b" type="RealVector" line="454"/>
                <declaration name="pattern" type="String" line="455"/>
                <declaration name="msg" type="String" line="457"/>
                <scope line="458">
                    <declaration name="px" type="RealVector" line="461"/>
                    <declaration name="x" type="RealVector" line="462"/>
                    <declaration name="np" type="int" line="463"/>
                    <declaration name="nup" type="int" line="464"/>
                    <scope line="466">
                        <declaration name="expected" type="double" line="468"/>
                        <declaration name="actual" type="double" line="469"/>
                        <declaration name="delta" type="double" line="470"/>
                    </scope>
                </scope>
            </method>
            <method name="testEventManagement" type="void" line="477">
                <comment line="483">
                    count[0] = number of calls to initializationPerformed
                     count[1] = number of calls to iterationStarted
                     count[2] = number of calls to iterationPerformed
                     count[3] = number of calls to terminationPerformed                    
                </comment>
                <comment line="530">
                    Check that solution is not &quot;over-refined&quot;. When the last
                      iteration has occurred, no further refinement should be
                      performed.                    
                </comment>
                <declaration name="n" type="int" line="478"/>
                <declaration name="maxIterations" type="int" line="479"/>
                <declaration name="a" type="RealLinearOperator" line="480"/>
                <declaration name="solver" type="IterativeLinearSolver" line="481"/>
                <declaration name="count" type="int[]" line="488"/>
                <declaration name="xFromListener" type="RealVector" line="489"/>
                <anonymous_class line="490">
                    <method name="initializationPerformed" type="void" line="492">
                        <params>
                            <param name="e" type="IterationEvent"/>
                        </params>
                    </method>
                    <method name="iterationPerformed" type="void" line="496">
                        <params>
                            <param name="e" type="IterationEvent"/>
                        </params>
                    </method>
                    <method name="iterationStarted" type="void" line="503">
                        <params>
                            <param name="e" type="IterationEvent"/>
                        </params>
                    </method>
                    <method name="terminationPerformed" type="void" line="510">
                        <params>
                            <param name="e" type="IterationEvent"/>
                        </params>
                        <declaration name="ilse" type="IterativeLinearSolverEvent" line="512"/>
                    </method>
                </anonymous_class>
                <declaration name="listener" type="IterationListener" line="490"/>
                <declaration name="b" type="RealVector" line="519"/>
                <scope line="520">
                    <declaration name="xFromSolver" type="RealVector" line="524"/>
                    <declaration name="msg" type="String" line="525"/>
                    <scope line="534">
                        <declaration name="expected" type="double" line="536"/>
                        <declaration name="actual" type="double" line="537"/>
                    </scope>
                </scope>
            </method>
            <method name="testNonSelfAdjointOperator" type="void" line="544">
                <declaration name="a" type="RealLinearOperator" line="545"/>
                <declaration name="b" type="RealVector" line="551"/>
            </method>
            <method name="testNonSelfAdjointPreconditioner" type="void" line="557">
                <declaration name="a" type="RealLinearOperator" line="558"/>
                <declaration name="mMat" type="Array2DRowRealMatrix" line="563"/>
                <declaration name="mSolver" type="DecompositionSolver" line="569"/>
                <anonymous_class line="571">
                    <method name="operate" type="RealVector" line="574">
                        <params>
                            <param name="x" type="RealVector"/>
                        </params>
                    </method>
                    <method name="getRowDimension" type="int" line="579"/>
                    <method name="getColumnDimension" type="int" line="584"/>
                </anonymous_class>
                <declaration name="minv" type="RealLinearOperator" line="571"/>
                <declaration name="b" type="RealVector" line="588"/>
            </method>
            <method name="testUnpreconditionedNormOfResidual" type="void" line="595">
                <declaration name="n" type="int" line="596"/>
                <declaration name="maxIterations" type="int" line="597"/>
                <declaration name="a" type="RealLinearOperator" line="598"/>
                <declaration name="solver" type="IterativeLinearSolver" line="599"/>
                <anonymous_class line="600">
                    <method name="doTestNormOfResidual" type="void" line="602">
                        <params>
                            <param name="e" type="IterationEvent"/>
                        </params>
                        <declaration name="evt" type="IterativeLinearSolverEvent" line="603"/>
                        <declaration name="x" type="RealVector" line="605"/>
                        <declaration name="b" type="RealVector" line="606"/>
                        <declaration name="r" type="RealVector" line="607"/>
                        <declaration name="rnorm" type="double" line="608"/>
                    </method>
                    <method name="initializationPerformed" type="void" line="614">
                        <params>
                            <param name="e" type="IterationEvent"/>
                        </params>
                    </method>
                    <method name="iterationPerformed" type="void" line="618">
                        <params>
                            <param name="e" type="IterationEvent"/>
                        </params>
                    </method>
                    <method name="iterationStarted" type="void" line="622">
                        <params>
                            <param name="e" type="IterationEvent"/>
                        </params>
                    </method>
                    <method name="terminationPerformed" type="void" line="626">
                        <params>
                            <param name="e" type="IterationEvent"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="listener" type="IterationListener" line="600"/>
                <declaration name="b" type="RealVector" line="632"/>
                <scope line="633"/>
            </method>
            <method name="testPreconditionedNormOfResidual" type="void" line="641">
                <declaration name="n" type="int" line="642"/>
                <declaration name="maxIterations" type="int" line="643"/>
                <declaration name="a" type="RealLinearOperator" line="644"/>
                <declaration name="m" type="JacobiPreconditioner" line="645"/>
                <declaration name="p" type="RealLinearOperator" line="646"/>
                <declaration name="solver" type="PreconditionedIterativeLinearSolver" line="647"/>
                <anonymous_class line="648">
                    <method name="doTestNormOfResidual" type="void" line="650">
                        <params>
                            <param name="e" type="IterationEvent"/>
                        </params>
                        <declaration name="evt" type="IterativeLinearSolverEvent" line="651"/>
                        <declaration name="x" type="RealVector" line="653"/>
                        <declaration name="b" type="RealVector" line="654"/>
                        <declaration name="r" type="RealVector" line="655"/>
                        <declaration name="rnorm" type="double" line="656"/>
                    </method>
                    <method name="initializationPerformed" type="void" line="662">
                        <params>
                            <param name="e" type="IterationEvent"/>
                        </params>
                    </method>
                    <method name="iterationPerformed" type="void" line="666">
                        <params>
                            <param name="e" type="IterationEvent"/>
                        </params>
                    </method>
                    <method name="iterationStarted" type="void" line="670">
                        <params>
                            <param name="e" type="IterationEvent"/>
                        </params>
                    </method>
                    <method name="terminationPerformed" type="void" line="674">
                        <params>
                            <param name="e" type="IterationEvent"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="listener" type="IterationListener" line="648"/>
                <declaration name="b" type="RealVector" line="680"/>
                <scope line="681"/>
            </method>
        </class>
    </source>