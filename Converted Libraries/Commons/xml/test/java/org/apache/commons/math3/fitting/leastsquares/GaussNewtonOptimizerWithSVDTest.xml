<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.fitting.leastsquares">
        <import package="org.apache.commons.math3.exception.ConvergenceException"/>
        <import package="org.apache.commons.math3.exception.TooManyEvaluationsException"/>
        <import package="org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer.Decomposition"/>
        <import package="org.apache.commons.math3.fitting.leastsquares.LeastSquaresOptimizer.Optimum"/>
        <import package="org.apache.commons.math3.geometry.euclidean.threed.Plane"/>
        <import package="org.apache.commons.math3.geometry.euclidean.threed.Vector3D"/>
        <import package="org.apache.commons.math3.optim.SimpleVectorValueChecker"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <import package="java.io.IOException"/>
        <class name="GaussNewtonOptimizerWithSVDTest" line="33">
            <extends class="AbstractLeastSquaresOptimizerAbstractTest"/>
            <javadoc line="33">
                &lt;p&gt;Some of the unit tests are re-implementations of the MINPACK &lt;a
                  href=&quot;http://www.netlib.org/minpack/ex/file17&quot;&gt;file17&lt;/a&gt; and &lt;a
                  href=&quot;http://www.netlib.org/minpack/ex/file22&quot;&gt;file22&lt;/a&gt; test files.
                  The redistribution policy for MINPACK is available &lt;a
                  href=&quot;http://www.netlib.org/minpack/disclaimer&quot;&gt;here&lt;/a&gt;/                
                <version>
                    $Id: GaussNewtonOptimizerWithSVDTest.java 1573351 2014-03-02 19:54:43Z luc $                    
                </version>
            </javadoc>
            <method name="getMaxIterations" type="int" line="46"/>
            <method name="getOptimizer" type="LeastSquaresOptimizer" line="51"/>
            <method name="testMaxEvaluations" type="void" line="56">
                <comment line="76">
                    expected                    
                </comment>
                <scope line="57">
                    <declaration name="circle" type="CircleVectorial" line="58"/>
                    <declaration name="lsp" type="LeastSquaresProblem" line="65"/>
                </scope>
                <scope line="74"/>
            </method>
            <method name="testCircleFittingBadInit" type="void" line="81">
                <comment line="83">
                    This test converged to the wrong solution with this optimizer.
                     It seems that the state becomes so large that the convergence
                     checker&apos;s relative tolerance test passes.                    
                </comment>
                <comment line="92">
                    expected                    
                </comment>
                <scope line="87"/>
                <scope line="90"/>
            </method>
            <method name="testHahn1" type="void" line="98">
                <comment line="100">
                    TODO This test leads to a singular problem with the Gauss-Newton
                     optimizer. This should be inquired.                    
                </comment>
                <comment line="108">
                    expected for LU                    
                </comment>
                <comment line="110">
                    expected for QR                    
                </comment>
                <scope line="103"/>
                <scope line="106"/>
                <scope line="108"/>
            </method>
            <method name="testGetIterations" type="void" line="115">
                <comment line="117">
                                        
                </comment>
                <comment line="122">
                    expected                    
                </comment>
                <scope line="117"/>
                <scope line="120"/>
            </method>
            <method name="testNonInvertible" type="void" line="127">
                <comment line="129">
                    SVD can compute a solution to singular problems.
                      In this case the target vector, b, is not in the
                      span of the jacobian matrix, A. The closes point
                      to b on the plane spanned by A is computed.                    
                </comment>
                <comment line="146">
                    verify                    
                </comment>
                <declaration name="problem" type="LinearProblem" line="133"/>
                <declaration name="optimum" type="Optimum" line="139"/>
                <declaration name="span" type="Plane" line="141"/>
                <declaration name="expected" type="double" line="142"/>
                <declaration name="actual" type="double" line="143"/>
            </method>
        </class>
    </source>