<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="org.junit.Test"/>
        <import package="org.junit.Assert"/>
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.exception.NoDataException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <class name="SparseRealMatrixTest" line="29">
            <comment line="37">
                3 x 3 identity matrix                
            </comment>
            <comment line="39">
                Test data for group operations                
            </comment>
            <comment line="58">
                lu decomposition tests                
            </comment>
            <comment line="63">
                singular matrices                
            </comment>
            <comment line="66">
                4th                
            </comment>
            <comment line="68">
                row                
            </comment>
            <comment line="69">
                =                
            </comment>
            <comment line="70">
                1st                
            </comment>
            <comment line="71">
                +                
            </comment>
            <comment line="72">
                2nd                
            </comment>
            <comment line="77">
                vectors                
            </comment>
            <comment line="81">
                submatrix accessor tests                
            </comment>
            <comment line="85">
                array selections                
            </comment>
            <comment line="90">
                effective permutations                
            </comment>
            <comment line="94">
                contiguous ranges                
            </comment>
            <comment line="99">
                row matrices                
            </comment>
            <comment line="103">
                column matrices                
            </comment>
            <comment line="107">
                tolerances                
            </comment>
            <comment line="217">
                Additional Test for Array2DRowRealMatrixTest.testMultiply                
            </comment>
            <comment line="404">
                test submatrix accessors                
            </comment>
            <comment line="671">
                --------------- -----------------Protected methods                
            </comment>
            <javadoc line="29">
                Test cases for the {@link OpenMapRealMatrix} class.                
                <version>
                    $Id: SparseRealMatrixTest.java 1364668 2012-07-23 15:07:39Z erans $                    
                </version>
            </javadoc>
            <declaration name="id" type="double[][]" line="37"/>
            <declaration name="testData" type="double[][]" line="39"/>
            <declaration name="testDataLU" type="double[][]" line="41"/>
            <declaration name="testDataPlus2" type="double[][]" line="43"/>
            <declaration name="testDataMinus" type="double[][]" line="45"/>
            <declaration name="testDataRow1" type="double[]" line="47"/>
            <declaration name="testDataCol3" type="double[]" line="48"/>
            <declaration name="testDataInv" type="double[][]" line="49"/>
            <declaration name="preMultTest" type="double[]" line="51"/>
            <declaration name="testData2" type="double[][]" line="52"/>
            <declaration name="testData2T" type="double[][]" line="53"/>
            <declaration name="testDataPlusInv" type="double[][]" line="54"/>
            <declaration name="luData" type="double[][]" line="58"/>
            <declaration name="luDataLUDecomposition" type="double[][]" line="59"/>
            <declaration name="singular" type="double[][]" line="63"/>
            <declaration name="bigSingular" type="double[][]" line="64"/>
            <declaration name="detData" type="double[][]" line="72"/>
            <declaration name="detData2" type="double[][]" line="74"/>
            <declaration name="testVector" type="double[]" line="77"/>
            <declaration name="testVector2" type="double[]" line="78"/>
            <declaration name="subTestData" type="double[][]" line="81"/>
            <declaration name="subRows02Cols13" type="double[][]" line="85"/>
            <declaration name="subRows03Cols12" type="double[][]" line="86"/>
            <declaration name="subRows03Cols123" type="double[][]" line="87"/>
            <declaration name="subRows20Cols123" type="double[][]" line="90"/>
            <declaration name="subRows31Cols31" type="double[][]" line="91"/>
            <declaration name="subRows01Cols23" type="double[][]" line="94"/>
            <declaration name="subRows23Cols00" type="double[][]" line="95"/>
            <declaration name="subRows00Cols33" type="double[][]" line="96"/>
            <declaration name="subRow0" type="double[][]" line="99"/>
            <declaration name="subRow3" type="double[][]" line="100"/>
            <declaration name="subColumn1" type="double[][]" line="103"/>
            <declaration name="subColumn3" type="double[][]" line="104"/>
            <declaration name="entryTolerance" type="double" line="107"/>
            <declaration name="normTolerance" type="double" line="108"/>
            <javadoc line="110">
                test dimensions                
            </javadoc>
            <method name="testDimensions" type="void" line="112">
                <declaration name="m" type="OpenMapRealMatrix" line="113"/>
                <declaration name="m2" type="OpenMapRealMatrix" line="114"/>
            </method>
            <javadoc line="123">
                test copy functions                
            </javadoc>
            <method name="testCopyFunctions" type="void" line="125">
                <declaration name="m1" type="OpenMapRealMatrix" line="126"/>
                <declaration name="m2" type="RealMatrix" line="127"/>
                <declaration name="m3" type="OpenMapRealMatrix" line="130"/>
                <declaration name="m4" type="RealMatrix" line="131"/>
            </method>
            <javadoc line="136">
                test add                
            </javadoc>
            <method name="testAdd" type="void" line="138">
                <declaration name="m" type="OpenMapRealMatrix" line="139"/>
                <declaration name="mInv" type="OpenMapRealMatrix" line="140"/>
                <declaration name="mDataPlusInv" type="OpenMapRealMatrix" line="141"/>
                <declaration name="mPlusMInv" type="RealMatrix" line="142"/>
                <scope line="143">
                    <scope line="144"/>
                </scope>
            </method>
            <javadoc line="152">
                test add failure                
            </javadoc>
            <method name="testAddFail" type="void" line="154">
                <comment line="161">
                    ignored                    
                </comment>
                <declaration name="m" type="OpenMapRealMatrix" line="155"/>
                <declaration name="m2" type="OpenMapRealMatrix" line="156"/>
                <scope line="157"/>
                <scope line="160"/>
            </method>
            <javadoc line="165">
                test norm                
            </javadoc>
            <method name="testNorm" type="void" line="167">
                <declaration name="m" type="OpenMapRealMatrix" line="168"/>
                <declaration name="m2" type="OpenMapRealMatrix" line="169"/>
            </method>
            <javadoc line="174">
                test m-n = m + -n                
            </javadoc>
            <method name="testPlusMinus" type="void" line="176">
                <comment line="185">
                    ignored                    
                </comment>
                <declaration name="m" type="OpenMapRealMatrix" line="177"/>
                <declaration name="n" type="OpenMapRealMatrix" line="178"/>
                <scope line="181"/>
                <scope line="184"/>
            </method>
            <javadoc line="189">
                test multiply                
            </javadoc>
            <method name="testMultiply" type="void" line="191">
                <comment line="212">
                    ignored                    
                </comment>
                <declaration name="m" type="OpenMapRealMatrix" line="192"/>
                <declaration name="mInv" type="OpenMapRealMatrix" line="193"/>
                <declaration name="identity" type="OpenMapRealMatrix" line="194"/>
                <declaration name="m2" type="OpenMapRealMatrix" line="195"/>
                <scope line="208"/>
                <scope line="211"/>
            </method>
            <declaration name="d3" type="double[][]" line="218"/>
            <declaration name="d4" type="double[][]" line="219"/>
            <declaration name="d5" type="double[][]" line="220"/>
            <method name="testMultiply2" type="void" line="223">
                <declaration name="m3" type="RealMatrix" line="224"/>
                <declaration name="m4" type="RealMatrix" line="225"/>
                <declaration name="m5" type="RealMatrix" line="226"/>
            </method>
            <javadoc line="230">
                test trace                
            </javadoc>
            <method name="testTrace" type="void" line="232">
                <comment line="240">
                    ignored                    
                </comment>
                <declaration name="m" type="RealMatrix" line="233"/>
                <scope line="236"/>
                <scope line="239"/>
            </method>
            <javadoc line="244">
                test sclarAdd                
            </javadoc>
            <method name="testScalarAdd" type="void" line="246">
                <declaration name="m" type="RealMatrix" line="247"/>
            </method>
            <javadoc line="252">
                test operate                
            </javadoc>
            <method name="testOperate" type="void" line="254">
                <comment line="265">
                    ignored                    
                </comment>
                <declaration name="m" type="RealMatrix" line="255"/>
                <scope line="261"/>
                <scope line="264"/>
            </method>
            <javadoc line="269">
                test issue MATH-209                
            </javadoc>
            <method name="testMath209" type="void" line="271">
                <declaration name="a" type="RealMatrix" line="272"/>
                <declaration name="b" type="double[]" line="274"/>
            </method>
            <javadoc line="281">
                test transpose                
            </javadoc>
            <method name="testTranspose" type="void" line="283">
                <declaration name="m" type="RealMatrix" line="284"/>
                <declaration name="mIT" type="RealMatrix" line="285"/>
                <declaration name="mTI" type="RealMatrix" line="286"/>
                <declaration name="mt" type="RealMatrix" line="289"/>
            </method>
            <javadoc line="293">
                test preMultiply by vector                
            </javadoc>
            <method name="testPremultiplyVector" type="void" line="295">
                <comment line="306">
                    ignored                    
                </comment>
                <declaration name="m" type="RealMatrix" line="296"/>
                <scope line="302"/>
                <scope line="305"/>
            </method>
            <method name="testPremultiply" type="void" line="311">
                <comment line="332">
                    ignored                    
                </comment>
                <declaration name="m3" type="RealMatrix" line="312"/>
                <declaration name="m4" type="RealMatrix" line="313"/>
                <declaration name="m5" type="RealMatrix" line="314"/>
                <declaration name="m" type="OpenMapRealMatrix" line="317"/>
                <declaration name="mInv" type="OpenMapRealMatrix" line="318"/>
                <declaration name="identity" type="OpenMapRealMatrix" line="319"/>
                <scope line="328"/>
                <scope line="331"/>
            </method>
            <method name="testGetVectors" type="void" line="337">
                <comment line="345">
                    ignored                    
                </comment>
                <comment line="351">
                    ignored                    
                </comment>
                <declaration name="m" type="RealMatrix" line="338"/>
                <scope line="341"/>
                <scope line="344"/>
                <scope line="347"/>
                <scope line="350"/>
            </method>
            <method name="testGetEntry" type="void" line="356">
                <comment line="363">
                    expected                    
                </comment>
                <declaration name="m" type="RealMatrix" line="357"/>
                <scope line="359"/>
                <scope line="362"/>
            </method>
            <javadoc line="367">
                test examples in user guide                
            </javadoc>
            <method name="testExamples" type="void" line="369">
                <comment line="370">
                    Create a real matrix with two rows and three columns                    
                </comment>
                <comment line="373">
                    One more with three rows, two columns                    
                </comment>
                <comment line="376">
                    Now multiply m by n                    
                </comment>
                <comment line="380">
                    Invert p                    
                </comment>
                <comment line="385">
                    Solve example                    
                </comment>
                <declaration name="matrixData" type="double[][]" line="371"/>
                <declaration name="m" type="RealMatrix" line="372"/>
                <declaration name="matrixData2" type="double[][]" line="374"/>
                <declaration name="n" type="RealMatrix" line="375"/>
                <declaration name="p" type="RealMatrix" line="377"/>
                <declaration name="pInverse" type="RealMatrix" line="381"/>
                <declaration name="coefficientsData" type="double[][]" line="386"/>
                <declaration name="coefficients" type="RealMatrix" line="388"/>
                <declaration name="constants" type="RealVector" line="389"/>
                <declaration name="solution" type="RealVector" line="390"/>
                <declaration name="cst0" type="double" line="391"/>
                <declaration name="cst1" type="double" line="392"/>
                <declaration name="cst2" type="double" line="393"/>
                <declaration name="sol0" type="double" line="394"/>
                <declaration name="sol1" type="double" line="395"/>
                <declaration name="sol2" type="double" line="396"/>
            </method>
            <method name="testSubMatrix" type="void" line="405">
                <comment line="435">
                    expected                    
                </comment>
                <comment line="441">
                    expected                    
                </comment>
                <comment line="447">
                    expected                    
                </comment>
                <comment line="453">
                    expected                    
                </comment>
                <comment line="459">
                    expected                    
                </comment>
                <comment line="465">
                    expected                    
                </comment>
                <declaration name="m" type="RealMatrix" line="406"/>
                <declaration name="mRows23Cols00" type="RealMatrix" line="407"/>
                <declaration name="mRows00Cols33" type="RealMatrix" line="408"/>
                <declaration name="mRows01Cols23" type="RealMatrix" line="409"/>
                <declaration name="mRows02Cols13" type="RealMatrix" line="410"/>
                <declaration name="mRows03Cols12" type="RealMatrix" line="411"/>
                <declaration name="mRows03Cols123" type="RealMatrix" line="412"/>
                <declaration name="mRows20Cols123" type="RealMatrix" line="413"/>
                <declaration name="mRows31Cols31" type="RealMatrix" line="414"/>
                <scope line="431"/>
                <scope line="434"/>
                <scope line="437"/>
                <scope line="440"/>
                <scope line="443"/>
                <scope line="446"/>
                <scope line="449"/>
                <scope line="452"/>
                <scope line="455"/>
                <scope line="458"/>
                <scope line="461"/>
                <scope line="464"/>
            </method>
            <method name="testGetRowMatrix" type="void" line="470">
                <comment line="480">
                    expected                    
                </comment>
                <comment line="486">
                    expected                    
                </comment>
                <declaration name="m" type="RealMatrix" line="471"/>
                <declaration name="mRow0" type="RealMatrix" line="472"/>
                <declaration name="mRow3" type="RealMatrix" line="473"/>
                <scope line="476"/>
                <scope line="479"/>
                <scope line="482"/>
                <scope line="485"/>
            </method>
            <method name="testGetColumnMatrix" type="void" line="491">
                <comment line="501">
                    expected                    
                </comment>
                <comment line="507">
                    expected                    
                </comment>
                <declaration name="m" type="RealMatrix" line="492"/>
                <declaration name="mColumn1" type="RealMatrix" line="493"/>
                <declaration name="mColumn3" type="RealMatrix" line="494"/>
                <scope line="497"/>
                <scope line="500"/>
                <scope line="503"/>
                <scope line="506"/>
            </method>
            <method name="testGetRowVector" type="void" line="512">
                <comment line="522">
                    expected                    
                </comment>
                <comment line="528">
                    expected                    
                </comment>
                <declaration name="m" type="RealMatrix" line="513"/>
                <declaration name="mRow0" type="RealVector" line="514"/>
                <declaration name="mRow3" type="RealVector" line="515"/>
                <scope line="518"/>
                <scope line="521"/>
                <scope line="524"/>
                <scope line="527"/>
            </method>
            <method name="testGetColumnVector" type="void" line="533">
                <comment line="543">
                    expected                    
                </comment>
                <comment line="549">
                    expected                    
                </comment>
                <declaration name="m" type="RealMatrix" line="534"/>
                <declaration name="mColumn1" type="RealVector" line="535"/>
                <declaration name="mColumn3" type="RealVector" line="536"/>
                <scope line="539"/>
                <scope line="542"/>
                <scope line="545"/>
                <scope line="548"/>
            </method>
            <method name="columnToVector" type="RealVector" line="553">
                <params>
                    <param name="column" type="double[][]"/>
                </params>
                <declaration name="data" type="double[]" line="554"/>
                <scope line="555"/>
            </method>
            <method name="testEqualsAndHashCode" type="void" line="562">
                <declaration name="m" type="OpenMapRealMatrix" line="563"/>
                <declaration name="m1" type="OpenMapRealMatrix" line="564"/>
                <declaration name="mt" type="OpenMapRealMatrix" line="565"/>
            </method>
            <method name="testToString" type="void" line="576">
                <declaration name="m" type="OpenMapRealMatrix" line="577"/>
            </method>
            <method name="testSetSubMatrix" type="void" line="585">
                <comment line="602">
                    javadoc example                    
                </comment>
                <comment line="611">
                    dimension overflow                    
                </comment>
                <comment line="616">
                    expected                    
                </comment>
                <comment line="618">
                    dimension underflow                    
                </comment>
                <comment line="623">
                    expected                    
                </comment>
                <comment line="629">
                    expected                    
                </comment>
                <comment line="632">
                    null                    
                </comment>
                <comment line="637">
                    expected                    
                </comment>
                <comment line="643">
                    expected                    
                </comment>
                <comment line="646">
                    ragged                    
                </comment>
                <comment line="651">
                    expected                    
                </comment>
                <comment line="654">
                    empty                    
                </comment>
                <comment line="659">
                    expected                    
                </comment>
                <declaration name="m" type="OpenMapRealMatrix" line="586"/>
                <declaration name="expected" type="RealMatrix" line="588"/>
                <declaration name="matrix" type="OpenMapRealMatrix" line="603"/>
                <scope line="612"/>
                <scope line="615"/>
                <scope line="619"/>
                <scope line="622"/>
                <scope line="625"/>
                <scope line="628"/>
                <scope line="633"/>
                <scope line="636"/>
                <scope line="639"/>
                <scope line="642"/>
                <scope line="647"/>
                <scope line="650"/>
                <scope line="655"/>
                <scope line="658"/>
            </method>
            <method name="testSerial" type="void" line="665">
                <declaration name="m" type="OpenMapRealMatrix" line="666"/>
            </method>
            <javadoc line="672">
                verifies that two matrices are close (1-norm)                
            </javadoc>
            <method name="assertClose" type="void" line="674">
                <params>
                    <param name="msg" type="String"/>
                    <param name="m" type="RealMatrix"/>
                    <param name="n" type="RealMatrix"/>
                    <param name="tolerance" type="double"/>
                </params>
            </method>
            <javadoc line="678">
                verifies that two vectors are close (sup norm)                
            </javadoc>
            <method name="assertClose" type="void" line="680">
                <params>
                    <param name="msg" type="String"/>
                    <param name="m" type="double[]"/>
                    <param name="n" type="double[]"/>
                    <param name="tolerance" type="double"/>
                </params>
                <scope line="681"/>
                <scope line="684"/>
            </method>
            <method name="createSparseMatrix" type="OpenMapRealMatrix" line="690">
                <params>
                    <param name="data" type="double[][]"/>
                </params>
                <declaration name="matrix" type="OpenMapRealMatrix" line="691"/>
                <scope line="692">
                    <scope line="693"/>
                </scope>
            </method>
        </class>
    </source>