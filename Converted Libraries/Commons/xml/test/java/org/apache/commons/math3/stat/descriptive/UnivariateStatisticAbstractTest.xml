<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.descriptive">
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.distribution.IntegerDistribution"/>
        <import package="org.apache.commons.math3.distribution.UniformIntegerDistribution"/>
        <import package="org.apache.commons.math3.distribution.RealDistribution"/>
        <import package="org.apache.commons.math3.distribution.NormalDistribution"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="UnivariateStatisticAbstractTest" line="32">
            <javadoc line="32">
                Test cases for the {@link UnivariateStatistic} class.                
                <version>
                    $Id: UnivariateStatisticAbstractTest.java 1368738 2012-08-02 22:18:08Z erans $                    
                </version>
            </javadoc>
            <declaration name="mean" type="double" line="38"/>
            <declaration name="geoMean" type="double" line="39"/>
            <declaration name="var" type="double" line="41"/>
            <declaration name="std" type="double" line="42"/>
            <declaration name="skew" type="double" line="43"/>
            <declaration name="kurt" type="double" line="44"/>
            <declaration name="min" type="double" line="46"/>
            <declaration name="max" type="double" line="47"/>
            <declaration name="median" type="double" line="48"/>
            <declaration name="percentile5" type="double" line="49"/>
            <declaration name="percentile95" type="double" line="50"/>
            <declaration name="product" type="double" line="52"/>
            <declaration name="sumLog" type="double" line="53"/>
            <declaration name="sumSq" type="double" line="54"/>
            <declaration name="sum" type="double" line="55"/>
            <declaration name="secondMoment" type="double" line="56"/>
            <declaration name="thirdMoment" type="double" line="57"/>
            <declaration name="fourthMoment" type="double" line="58"/>
            <declaration name="weightedMean" type="double" line="61"/>
            <declaration name="weightedVar" type="double" line="62"/>
            <declaration name="weightedStd" type="double" line="63"/>
            <declaration name="weightedProduct" type="double" line="64"/>
            <declaration name="weightedSum" type="double" line="65"/>
            <declaration name="tolerance" type="double" line="67"/>
            <declaration name="testArray" type="double[]" line="69"/>
            <declaration name="testWeightsArray" type="double[]" line="74"/>
            <declaration name="identicalWeightsArray" type="double[]" line="79"/>
            <declaration name="unitWeightsArray" type="double[]" line="84"/>
            <method name="getUnivariateStatistic" type="UnivariateStatistic" line="89"/>
            <method name="expectedValue" type="double" line="91"/>
            <method name="getTolerance" type="double" line="93"/>
            <method name="testEvaluation" type="void" line="98"/>
            <method name="testEvaluateArraySegment" type="void" line="106">
                <declaration name="stat" type="UnivariateStatistic" line="107"/>
                <declaration name="arrayZero" type="double[]" line="108"/>
                <declaration name="arrayOne" type="double[]" line="111"/>
                <declaration name="arrayEnd" type="double[]" line="114"/>
            </method>
            <method name="testEvaluateArraySegmentWeighted" type="void" line="120">
                <comment line="121">
                    See if this statistic computes weighted statistics                    
                </comment>
                <comment line="122">
                    If not, skip this test                    
                </comment>
                <declaration name="statistic" type="UnivariateStatistic" line="123"/>
                <scope line="124"/>
                <declaration name="stat" type="WeightedEvaluation" line="127"/>
                <declaration name="arrayZero" type="double[]" line="128"/>
                <declaration name="weightZero" type="double[]" line="129"/>
                <declaration name="arrayOne" type="double[]" line="134"/>
                <declaration name="weightOne" type="double[]" line="135"/>
                <declaration name="arrayEnd" type="double[]" line="140"/>
                <declaration name="weightEnd" type="double[]" line="141"/>
            </method>
            <method name="testCopy" type="void" line="149">
                <declaration name="original" type="UnivariateStatistic" line="150"/>
                <declaration name="copy" type="UnivariateStatistic" line="151"/>
            </method>
            <javadoc line="158">
                Tests consistency of weighted statistic computation.
                  For statistics that support weighted evaluation, this test case compares
                  the result of direct computation on an array with repeated values with
                  a weighted computation on the corresponding (shorter) array with each
                  value appearing only once but with a weight value equal to its multiplicity
                  in the repeating array.                
            </javadoc>
            <method name="testWeightedConsistency" type="void" line="168">
                <comment line="170">
                    See if this statistic computes weighted statistics                    
                </comment>
                <comment line="171">
                    If not, skip this test                    
                </comment>
                <comment line="177">
                    Create arrays of values and corresponding integral weights                    
                </comment>
                <comment line="178">
                    and longer array with values repeated according to the weights                    
                </comment>
                <comment line="179">
                    length of values array                    
                </comment>
                <comment line="180">
                    mean of test data                    
                </comment>
                <comment line="181">
                    std dev of test data                    
                </comment>
                <comment line="185">
                    Fill weights array with random int values between 1 and 5                    
                </comment>
                <comment line="193">
                    Fill values array with random data from N(mu, sigma)                    
                </comment>
                <comment line="194">
                    and fill valuesList with values from values array with                    
                </comment>
                <comment line="195">
                    values[i] repeated weights[i] times, each i                    
                </comment>
                <comment line="206">
                    Dump valuesList into repeatedValues array                    
                </comment>
                <comment line="213">
                    Compare result of weighted statistic computation with direct computation                    
                </comment>
                <comment line="214">
                    on array of repeated values                    
                </comment>
                <comment line="220">
                    Check consistency of weighted evaluation methods                    
                </comment>
                <declaration name="statistic" type="UnivariateStatistic" line="172"/>
                <scope line="173"/>
                <declaration name="len" type="int" line="179"/>
                <declaration name="mu" type="double" line="180"/>
                <declaration name="sigma" type="double" line="181"/>
                <declaration name="values" type="double[]" line="182"/>
                <declaration name="weights" type="double[]" line="183"/>
                <declaration name="intWeights" type="int[]" line="186"/>
                <declaration name="weightDist" type="IntegerDistribution" line="187"/>
                <scope line="188"/>
                <declaration name="valueDist" type="RealDistribution" line="196"/>
                <declaration name="valuesList" type="List&lt;Double&gt;" line="197"/>
                <scope line="198">
                    <declaration name="value" type="double" line="199"/>
                    <scope line="201"/>
                </scope>
                <declaration name="sumWeights" type="int" line="207"/>
                <declaration name="repeatedValues" type="double[]" line="208"/>
                <scope line="209"/>
                <declaration name="weightedStatistic" type="WeightedEvaluation" line="215"/>
            </method>
        </class>
    </source>