<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.special">
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.lang.reflect.Method"/>
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="BetaTest" line="11">
            <javadoc line="11">
                @version $Id: BetaTest.java 1415853 2012-11-30 21:02:23Z celestin $                
            </javadoc>
            <declaration name="LOG_GAMMA_SUM_METHOD" type="Method" line="15"/>
            <declaration name="LOG_GAMMA_MINUS_LOG_GAMMA_SUM_METHOD" type="Method" line="16"/>
            <declaration name="SUM_DELTA_MINUS_DELTA_SUM_METHOD" type="Method" line="17"/>
            <scope line="18">
                <declaration name="b" type="Class&lt;Beta&gt;" line="19"/>
                <declaration name="d" type="Class&lt;Double&gt;" line="20"/>
                <declaration name="m" type="Method" line="22"/>
                <scope line="23"/>
                <scope line="26"/>
                <scope line="32"/>
                <scope line="35"/>
                <scope line="41"/>
                <scope line="44"/>
            </scope>
            <method name="testRegularizedBeta" type="void" line="50">
                <params>
                    <param name="expected" type="double"/>
                    <param name="x" type="double"/>
                    <param name="a" type="double"/>
                    <param name="b" type="double"/>
                </params>
                <declaration name="actual" type="double" line="51"/>
            </method>
            <method name="testLogBeta" type="void" line="54">
                <params>
                    <param name="expected" type="double"/>
                    <param name="a" type="double"/>
                    <param name="b" type="double"/>
                </params>
                <declaration name="actual" type="double" line="55"/>
            </method>
            <method name="testRegularizedBetaNanPositivePositive" type="void" line="58"/>
            <method name="testRegularizedBetaPositiveNanPositive" type="void" line="61"/>
            <method name="testRegularizedBetaPositivePositiveNan" type="void" line="64"/>
            <method name="testRegularizedBetaNegativePositivePositive" type="void" line="67"/>
            <method name="testRegularizedBetaPositiveNegativePositive" type="void" line="70"/>
            <method name="testRegularizedBetaPositivePositiveNegative" type="void" line="73"/>
            <method name="testRegularizedBetaZeroPositivePositive" type="void" line="76"/>
            <method name="testRegularizedBetaPositiveZeroPositive" type="void" line="79"/>
            <method name="testRegularizedBetaPositivePositiveZero" type="void" line="82"/>
            <method name="testRegularizedBetaPositivePositivePositive" type="void" line="85"/>
            <method name="testLogBetaNanPositive" type="void" line="88"/>
            <method name="testLogBetaPositiveNan" type="void" line="91"/>
            <method name="testLogBetaNegativePositive" type="void" line="94"/>
            <method name="testLogBetaPositiveNegative" type="void" line="97"/>
            <method name="testLogBetaZeroPositive" type="void" line="100"/>
            <method name="testLogBetaPositiveZero" type="void" line="103"/>
            <method name="testLogBetaPositivePositive" type="void" line="106"/>
            <declaration name="LOG_GAMMA_SUM_REF" type="double[][]" line="109"/>
            <javadoc line="109">
                Reference data for the {@link Gamma#logGammaSum(double,double)}function. This data was generated with the following
                  &lt;a href=&quot;http://maxima.sourceforge.net/&quot;&gt;Maxima&lt;/a&gt; script.
                  &lt;pre&gt;
                  kill(all);
                  fpprec : 64;
                  gsumln(a, b) := log(gamma(a + b));
                  x : [1.0b0, 1.125b0, 1.25b0, 1.375b0, 1.5b0, 1.625b0, 1.75b0, 1.875b0, 2.0b0];
                  for i : 1 while i &lt;= length(x) do
                  for j : 1 while j &lt;= length(x) do block(
                  a : x[i],
                  b : x[j],
                  print(&quot;{&quot;, float(a), &quot;,&quot;, float(b), &quot;,&quot;, float(gsumln(a, b)), &quot;},&quot;)
                  );
                  &lt;/pre&gt;                
            </javadoc>
            <method name="logGammaSum" type="double" line="126">
                <params>
                    <param name="a" type="double"/>
                    <param name="b" type="double"/>
                </params>
                <scope line="127"/>
                <scope line="130"/>
                <scope line="133"/>
                <scope line="136">
                    <declaration name="te" type="Throwable" line="137"/>
                    <scope line="138"/>
                </scope>
            </method>
            <method name="testLogGammaSum" type="void" line="145">
                <declaration name="ulps" type="int" line="146"/>
                <scope line="147">
                    <declaration name="ref" type="double[]" line="148"/>
                    <declaration name="a" type="double" line="149"/>
                    <declaration name="b" type="double" line="150"/>
                    <declaration name="expected" type="double" line="151"/>
                    <declaration name="actual" type="double" line="152"/>
                    <declaration name="tol" type="double" line="153"/>
                    <declaration name="builder" type="StringBuilder" line="154"/>
                </scope>
            </method>
            <method name="testLogGammaSumPrecondition1" type="void" line="159"/>
            <method name="testLogGammaSumPrecondition2" type="void" line="162"/>
            <method name="testLogGammaSumPrecondition3" type="void" line="165"/>
            <method name="testLogGammaSumPrecondition4" type="void" line="168"/>
            <declaration name="LOG_GAMMA_MINUS_LOG_GAMMA_SUM_REF" type="double[][]" line="171"/>
            <method name="logGammaMinusLogGammaSum" type="double" line="172">
                <params>
                    <param name="a" type="double"/>
                    <param name="b" type="double"/>
                </params>
                <scope line="173">
                    <declaration name="m" type="Method" line="174"/>
                </scope>
                <scope line="177"/>
                <scope line="180"/>
                <scope line="183">
                    <declaration name="te" type="Throwable" line="184"/>
                    <scope line="185"/>
                </scope>
            </method>
            <method name="testLogGammaMinusLogGammaSum" type="void" line="192">
                <declaration name="ulps" type="int" line="193"/>
                <scope line="194">
                    <declaration name="ref" type="double[]" line="195"/>
                    <declaration name="a" type="double" line="196"/>
                    <declaration name="b" type="double" line="197"/>
                    <declaration name="expected" type="double" line="198"/>
                    <declaration name="actual" type="double" line="199"/>
                    <declaration name="tol" type="double" line="200"/>
                    <declaration name="builder" type="StringBuilder" line="201"/>
                </scope>
            </method>
            <method name="testLogGammaMinusLogGammaSumPrecondition1" type="void" line="206"/>
            <method name="testLogGammaMinusLogGammaSumPrecondition2" type="void" line="209"/>
            <declaration name="SUM_DELTA_MINUS_DELTA_SUM_REF" type="double[][]" line="212"/>
            <method name="sumDeltaMinusDeltaSum" type="double" line="213">
                <params>
                    <param name="a" type="double"/>
                    <param name="b" type="double"/>
                </params>
                <scope line="214">
                    <declaration name="m" type="Method" line="215"/>
                </scope>
                <scope line="218"/>
                <scope line="221"/>
                <scope line="224">
                    <declaration name="te" type="Throwable" line="225"/>
                    <scope line="226"/>
                </scope>
            </method>
            <method name="testSumDeltaMinusDeltaSum" type="void" line="233">
                <declaration name="ulps" type="int" line="234"/>
                <scope line="235">
                    <declaration name="ref" type="double[]" line="236"/>
                    <declaration name="a" type="double" line="237"/>
                    <declaration name="b" type="double" line="238"/>
                    <declaration name="expected" type="double" line="239"/>
                    <declaration name="actual" type="double" line="240"/>
                    <declaration name="tol" type="double" line="241"/>
                    <declaration name="builder" type="StringBuilder" line="242"/>
                </scope>
            </method>
            <method name="testSumDeltaMinusDeltaSumPrecondition1" type="void" line="247"/>
            <method name="testSumDeltaMinusDeltaSumPrecondition2" type="void" line="250"/>
            <declaration name="LOG_BETA_REF" type="double[][]" line="253"/>
            <method name="testLogBeta" type="void" line="254">
                <declaration name="ulps" type="int" line="255"/>
                <scope line="256">
                    <declaration name="ref" type="double[]" line="257"/>
                    <declaration name="a" type="double" line="258"/>
                    <declaration name="b" type="double" line="259"/>
                    <declaration name="expected" type="double" line="260"/>
                    <declaration name="actual" type="double" line="261"/>
                    <declaration name="tol" type="double" line="262"/>
                    <declaration name="builder" type="StringBuilder" line="263"/>
                </scope>
            </method>
        </class>
    </source>