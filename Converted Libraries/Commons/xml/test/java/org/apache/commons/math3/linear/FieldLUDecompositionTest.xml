<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="org.junit.Test"/>
        <import package="org.junit.Assert"/>
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.fraction.Fraction"/>
        <import package="org.apache.commons.math3.fraction.FractionField"/>
        <class name="FieldLUDecompositionTest" line="27">
            <comment line="45">
                singular matrices                
            </comment>
            <comment line="55">
                4th row = 1st + 2nd                
            </comment>
            <declaration name="testData" type="Fraction[][]" line="28"/>
            <declaration name="testDataMinus" type="Fraction[][]" line="33"/>
            <declaration name="luData" type="Fraction[][]" line="38"/>
            <declaration name="singular" type="Fraction[][]" line="45"/>
            <declaration name="bigSingular" type="Fraction[][]" line="49"/>
            <javadoc line="56">
                test dimensions                
            </javadoc>
            <method name="testDimensions" type="void" line="58">
                <declaration name="matrix" type="FieldMatrix&lt;Fraction&gt;" line="59"/>
                <declaration name="LU" type="FieldLUDecomposition&lt;Fraction&gt;" line="61"/>
            </method>
            <javadoc line="71">
                test non-square matrix                
            </javadoc>
            <method name="testNonSquare" type="void" line="73">
                <comment line="75">
                    we don&apos;t use FractionField.getInstance() for testing purposes                    
                </comment>
                <comment line="83">
                    expected behavior                    
                </comment>
                <scope line="74"/>
                <scope line="82"/>
            </method>
            <javadoc line="87">
                test PA = LU                
            </javadoc>
            <method name="testPAEqualLU" type="void" line="89">
                <declaration name="matrix" type="FieldMatrix&lt;Fraction&gt;" line="90"/>
                <declaration name="lu" type="FieldLUDecomposition&lt;Fraction&gt;" line="91"/>
                <declaration name="l" type="FieldMatrix&lt;Fraction&gt;" line="92"/>
                <declaration name="u" type="FieldMatrix&lt;Fraction&gt;" line="93"/>
                <declaration name="p" type="FieldMatrix&lt;Fraction&gt;" line="94"/>
                <scope line="105"/>
            </method>
            <javadoc line="130">
                test that L is lower triangular with unit diagonal                
            </javadoc>
            <method name="testLLowerTriangular" type="void" line="132">
                <declaration name="matrix" type="FieldMatrix&lt;Fraction&gt;" line="133"/>
                <declaration name="l" type="FieldMatrix&lt;Fraction&gt;" line="134"/>
                <scope line="135">
                    <scope line="137"/>
                </scope>
            </method>
            <javadoc line="143">
                test that U is upper triangular                
            </javadoc>
            <method name="testUUpperTriangular" type="void" line="145">
                <declaration name="matrix" type="FieldMatrix&lt;Fraction&gt;" line="146"/>
                <declaration name="u" type="FieldMatrix&lt;Fraction&gt;" line="147"/>
                <scope line="148">
                    <scope line="149"/>
                </scope>
            </method>
            <javadoc line="155">
                test that P is a permutation matrix                
            </javadoc>
            <method name="testPPermutation" type="void" line="157">
                <declaration name="matrix" type="FieldMatrix&lt;Fraction&gt;" line="158"/>
                <declaration name="p" type="FieldMatrix&lt;Fraction&gt;" line="159"/>
                <declaration name="ppT" type="FieldMatrix&lt;Fraction&gt;" line="161"/>
                <declaration name="id" type="FieldMatrix&lt;Fraction&gt;" line="162"/>
                <scope line="165"/>
                <scope line="170">
                    <declaration name="zeroCount" type="int" line="171"/>
                    <declaration name="oneCount" type="int" line="172"/>
                    <declaration name="otherCount" type="int" line="173"/>
                    <scope line="174">
                        <declaration name="e" type="Fraction" line="175"/>
                        <scope line="176"/>
                        <scope line="178"/>
                        <scope line="180"/>
                    </scope>
                </scope>
                <scope line="189">
                    <declaration name="zeroCount" type="int" line="190"/>
                    <declaration name="oneCount" type="int" line="191"/>
                    <declaration name="otherCount" type="int" line="192"/>
                    <scope line="193">
                        <declaration name="e" type="Fraction" line="194"/>
                        <scope line="195"/>
                        <scope line="197"/>
                        <scope line="199"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="211">
                test singular                
            </javadoc>
            <method name="testSingular" type="void" line="213">
                <declaration name="lu" type="FieldLUDecomposition&lt;Fraction&gt;" line="214"/>
            </method>
            <javadoc line="223">
                test matrices values                
            </javadoc>
            <method name="testMatricesValues1" type="void" line="225">
                <comment line="245">
                    check values against known references                    
                </comment>
                <comment line="257">
                    check the same cached instance is returned the second time                    
                </comment>
                <declaration name="lu" type="FieldLUDecomposition&lt;Fraction&gt;" line="226"/>
                <declaration name="lRef" type="FieldMatrix&lt;Fraction&gt;" line="228"/>
                <declaration name="uRef" type="FieldMatrix&lt;Fraction&gt;" line="233"/>
                <declaration name="pRef" type="FieldMatrix&lt;Fraction&gt;" line="238"/>
                <declaration name="pivotRef" type="int[]" line="243"/>
                <declaration name="l" type="FieldMatrix&lt;Fraction&gt;" line="246"/>
                <declaration name="u" type="FieldMatrix&lt;Fraction&gt;" line="248"/>
                <declaration name="p" type="FieldMatrix&lt;Fraction&gt;" line="250"/>
                <declaration name="pivot" type="int[]" line="252"/>
                <scope line="253"/>
            </method>
            <javadoc line="264">
                test matrices values                
            </javadoc>
            <method name="testMatricesValues2" type="void" line="266">
                <comment line="286">
                    check values against known references                    
                </comment>
                <comment line="298">
                    check the same cached instance is returned the second time                    
                </comment>
                <declaration name="lu" type="FieldLUDecomposition&lt;Fraction&gt;" line="267"/>
                <declaration name="lRef" type="FieldMatrix&lt;Fraction&gt;" line="269"/>
                <declaration name="uRef" type="FieldMatrix&lt;Fraction&gt;" line="274"/>
                <declaration name="pRef" type="FieldMatrix&lt;Fraction&gt;" line="279"/>
                <declaration name="pivotRef" type="int[]" line="284"/>
                <declaration name="l" type="FieldMatrix&lt;Fraction&gt;" line="287"/>
                <declaration name="u" type="FieldMatrix&lt;Fraction&gt;" line="289"/>
                <declaration name="p" type="FieldMatrix&lt;Fraction&gt;" line="291"/>
                <declaration name="pivot" type="int[]" line="293"/>
                <scope line="294"/>
            </method>
        </class>
    </source>