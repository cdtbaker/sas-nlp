<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="PoissonDistributionTest" line="24">
            <extends class="IntegerDistributionAbstractTest"/>
            <javadoc line="24">
                &lt;code&gt;PoissonDistributionTest&lt;/code&gt;                
                <version>
                    $Id: PoissonDistributionTest.java 1533974 2013-10-20 20:42:41Z psteitz $                    
                </version>
            </javadoc>
            <declaration name="DEFAULT_TEST_POISSON_PARAMETER" type="double" line="31"/>
            <javadoc line="31">
                Poisson parameter value for the test distribution.                
            </javadoc>
            <javadoc line="36">
                Constructor.                
            </javadoc>
            <method name="PoissonDistributionTest" type="constructor" line="39"/>
            <javadoc line="43">
                Creates the default discrete distribution instance to use in tests.                
            </javadoc>
            <method name="makeDistribution" type="IntegerDistribution" line="47"/>
            <javadoc line="51">
                Creates the default probability density test input values.                
            </javadoc>
            <method name="makeDensityTestPoints" type="int[]" line="55"/>
            <javadoc line="59">
                Creates the default probability density test expected values.
                  These and all other test values are generated by R, version 1.8.1                
            </javadoc>
            <method name="makeDensityTestValues" type="double[]" line="64"/>
            <javadoc line="70">
                Creates the default logarithmic probability density test expected values.
                  Reference values are from R, version 2.14.1.                
            </javadoc>
            <method name="makeLogDensityTestValues" type="double[]" line="75"/>
            <javadoc line="82">
                Creates the default cumulative probability density test input values.                
            </javadoc>
            <method name="makeCumulativeTestPoints" type="int[]" line="86"/>
            <javadoc line="90">
                Creates the default cumulative probability density test expected values.                
            </javadoc>
            <method name="makeCumulativeTestValues" type="double[]" line="94"/>
            <javadoc line="100">
                Creates the default inverse cumulative probability test input values.                
            </javadoc>
            <method name="makeInverseCumulativeTestPoints" type="double[]" line="104">
                <declaration name="dist" type="IntegerDistribution" line="105"/>
            </method>
            <javadoc line="113">
                Creates the default inverse cumulative probability density test expected values.                
            </javadoc>
            <method name="makeInverseCumulativeTestValues" type="int[]" line="117"/>
            <javadoc line="121">
                Test the normal approximation of the Poisson distribution by
                  calculating P(90 &amp;le; X &amp;le; 110) for X = Po(100) and
                  P(9900 &amp;le; X &amp;le; 10200) for X  = Po(10000)                
            </javadoc>
            <method name="testNormalApproximateProbability" type="void" line="127">
                <declaration name="dist" type="PoissonDistribution" line="128"/>
                <declaration name="result" type="double" line="129"/>
            </method>
            <javadoc line="139">
                Test the degenerate cases of a 0.0 and 1.0 inverse cumulative probability.                
            </javadoc>
            <method name="testDegenerateInverseCumulativeProbability" type="void" line="143">
                <declaration name="dist" type="PoissonDistribution" line="144"/>
            </method>
            <method name="testNegativeMean" type="void" line="150"/>
            <method name="testMean" type="void" line="155">
                <declaration name="dist" type="PoissonDistribution" line="156"/>
            </method>
            <method name="testLargeMeanCumulativeProbability" type="void" line="161">
                <declaration name="mean" type="double" line="162"/>
                <scope line="163">
                    <declaration name="dist" type="PoissonDistribution" line="164"/>
                    <declaration name="x" type="double" line="166"/>
                    <declaration name="dx" type="double" line="167"/>
                    <declaration name="p" type="double" line="168"/>
                    <declaration name="sigma" type="double" line="169"/>
                    <scope line="170">
                        <scope line="171">
                            <scope line="175"/>
                        </scope>
                        <scope line="179"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="189">
                JIRA: MATH-282                
            </javadoc>
            <method name="testCumulativeProbabilitySpecial" type="void" line="193">
                <declaration name="dist" type="PoissonDistribution" line="194"/>
            </method>
            <method name="checkProbability" type="void" line="204">
                <params>
                    <param name="dist" type="PoissonDistribution"/>
                    <param name="x" type="int"/>
                </params>
                <declaration name="p" type="double" line="205"/>
            </method>
            <method name="testLargeMeanInverseCumulativeProbability" type="void" line="213">
                <comment line="216">
                    Extended test value: 1E7.  Reduced to limit run time.                    
                </comment>
                <comment line="223">
                    Verify that returned value satisties definition                    
                </comment>
                <declaration name="mean" type="double" line="214"/>
                <scope line="215">
                    <declaration name="dist" type="PoissonDistribution" line="216"/>
                    <declaration name="p" type="double" line="217"/>
                    <declaration name="dp" type="double" line="218"/>
                    <scope line="219">
                        <scope line="220">
                            <declaration name="ret" type="int" line="221"/>
                        </scope>
                        <scope line="225"/>
                    </scope>
                </scope>
            </method>
            <method name="testMoments" type="void" line="235">
                <declaration name="tol" type="double" line="236"/>
                <declaration name="dist" type="PoissonDistribution" line="237"/>
            </method>
        </class>
    </source>