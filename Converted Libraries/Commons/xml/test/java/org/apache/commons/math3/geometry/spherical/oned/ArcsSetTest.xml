<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.spherical.oned">
        <import package="java.util.ArrayList"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="java.util.NoSuchElementException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooLargeException"/>
        <import package="org.apache.commons.math3.geometry.partitioning.BSPTree"/>
        <import package="org.apache.commons.math3.geometry.partitioning.Region"/>
        <import package="org.apache.commons.math3.geometry.partitioning.Region.Location"/>
        <import package="org.apache.commons.math3.geometry.partitioning.RegionFactory"/>
        <import package="org.apache.commons.math3.geometry.partitioning.Side"/>
        <import package="org.apache.commons.math3.geometry.partitioning.SubHyperplane"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <import package="org.apache.commons.math3.util.Precision"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="ArcsSetTest" line="37">
            <method name="testArc" type="void" line="40">
                <declaration name="set" type="ArcsSet" line="41"/>
            </method>
            <method name="testWrapAround2PiArc" type="void" line="56">
                <declaration name="set" type="ArcsSet" line="57"/>
            </method>
            <method name="testSplitOver2Pi" type="void" line="72">
                <declaration name="set" type="ArcsSet" line="73"/>
                <declaration name="arc" type="Arc" line="74"/>
                <declaration name="split" type="ArcsSet.Split" line="75"/>
                <scope line="76">
                    <declaration name="p" type="S1Point" line="77"/>
                    <scope line="78"/>
                    <scope line="81"/>
                </scope>
            </method>
            <method name="testSplitAtEnd" type="void" line="89">
                <declaration name="set" type="ArcsSet" line="90"/>
                <declaration name="arc" type="Arc" line="91"/>
                <declaration name="split" type="ArcsSet.Split" line="92"/>
                <scope line="93">
                    <declaration name="p" type="S1Point" line="94"/>
                    <scope line="95"/>
                    <scope line="98"/>
                </scope>
                <declaration name="zero" type="S1Point" line="104"/>
                <declaration name="pi" type="S1Point" line="108"/>
            </method>
            <method name="testWrongInterval" type="void" line="115"/>
            <method name="testFullEqualEndPoints" type="void" line="120">
                <declaration name="set" type="ArcsSet" line="121"/>
                <scope line="124"/>
            </method>
            <method name="testFullCircle" type="void" line="134">
                <declaration name="set" type="ArcsSet" line="135"/>
                <scope line="138"/>
            </method>
            <method name="testEmpty" type="void" line="148">
                <declaration name="empty" type="ArcsSet" line="149"/>
            </method>
            <method name="testTiny" type="void" line="156">
                <declaration name="tiny" type="ArcsSet" line="157"/>
            </method>
            <method name="testSpecialConstruction" type="void" line="166">
                <declaration name="boundary" type="List&amp;lt;SubHyperplane&amp;lt;Sphere1D&amp;gt;&amp;gt;" line="167"/>
                <declaration name="set" type="ArcsSet" line="170"/>
            </method>
            <method name="testDifference" type="void" line="179">
                <declaration name="a" type="ArcsSet" line="181"/>
                <declaration name="aList" type="List&amp;lt;Arc&amp;gt;" line="182"/>
                <declaration name="b" type="ArcsSet" line="187"/>
                <declaration name="bList" type="List&amp;lt;Arc&amp;gt;" line="188"/>
                <declaration name="aMb" type="ArcsSet" line="193"/>
                <scope line="194"/>
                <declaration name="aMbList" type="List&amp;lt;Arc&amp;gt;" line="211"/>
            </method>
            <method name="testIntersection" type="void" line="222">
                <declaration name="a" type="ArcsSet" line="224"/>
                <declaration name="aList" type="List&amp;lt;Arc&amp;gt;" line="226"/>
                <declaration name="b" type="ArcsSet" line="233"/>
                <declaration name="bList" type="List&amp;lt;Arc&amp;gt;" line="234"/>
                <declaration name="aMb" type="ArcsSet" line="239"/>
                <scope line="240"/>
                <declaration name="aMbList" type="List&amp;lt;Arc&amp;gt;" line="256"/>
            </method>
            <method name="testMultiple" type="void" line="267">
                <declaration name="factory" type="RegionFactory&amp;lt;Sphere1D&amp;gt;" line="268"/>
                <declaration name="set" type="ArcsSet" line="269"/>
                <declaration name="list" type="List&amp;lt;Arc&amp;gt;" line="285"/>
            </method>
            <method name="testSinglePoint" type="void" line="295">
                <declaration name="set" type="ArcsSet" line="296"/>
            </method>
            <method name="testIteration" type="void" line="301">
                <comment line="310">
                    expected                    
                </comment>
                <comment line="330">
                    expected                    
                </comment>
                <declaration name="set" type="ArcsSet" line="302"/>
                <declaration name="iterator" type="Iterator&amp;lt;double[]&amp;gt;" line="304"/>
                <scope line="305"/>
                <scope line="308"/>
                <declaration name="a0" type="double[]" line="313"/>
                <declaration name="a1" type="double[]" line="319"/>
                <scope line="325"/>
                <scope line="328"/>
            </method>
            <method name="testEmptyTree" type="void" line="335"/>
            <method name="testShiftedAngles" type="void" line="340">
                <scope line="341">
                    <declaration name="l1" type="SubLimitAngle" line="342"/>
                    <declaration name="l2" type="SubLimitAngle" line="343"/>
                    <declaration name="set" type="ArcsSet" line="344"/>
                    <scope line="352">
                        <scope line="353"/>
                        <scope line="355"/>
                    </scope>
                </scope>
            </method>
            <method name="testInconsistentState" type="void" line="364">
                <declaration name="l1" type="SubLimitAngle" line="365"/>
                <declaration name="l2" type="SubLimitAngle" line="366"/>
                <declaration name="l3" type="SubLimitAngle" line="367"/>
            </method>
            <method name="testSide" type="void" line="382">
                <declaration name="set" type="ArcsSet" line="383"/>
                <scope line="385"/>
            </method>
            <method name="testSideEmbedded" type="void" line="411">
                <declaration name="s35" type="ArcsSet" line="413"/>
                <declaration name="s16" type="ArcsSet" line="414"/>
            </method>
            <method name="testSideOverlapping" type="void" line="424">
                <declaration name="s35" type="ArcsSet" line="425"/>
                <declaration name="s46" type="ArcsSet" line="426"/>
            </method>
            <method name="testSideHyper" type="void" line="435">
                <declaration name="sub" type="ArcsSet" line="436"/>
            </method>
            <method name="testSplitEmbedded" type="void" line="442">
                <declaration name="s35" type="ArcsSet" line="444"/>
                <declaration name="s16" type="ArcsSet" line="445"/>
                <declaration name="split1" type="ArcsSet.Split" line="447"/>
                <declaration name="split1Plus" type="ArcsSet" line="448"/>
                <declaration name="split1Minus" type="ArcsSet" line="449"/>
                <declaration name="split2" type="ArcsSet.Split" line="461"/>
                <declaration name="split2Plus" type="ArcsSet" line="462"/>
                <declaration name="split2Minus" type="ArcsSet" line="463"/>
                <declaration name="split3" type="ArcsSet.Split" line="475"/>
                <declaration name="split3Plus" type="ArcsSet" line="476"/>
                <declaration name="split3Minus" type="ArcsSet" line="477"/>
                <declaration name="split4" type="ArcsSet.Split" line="484"/>
                <declaration name="split4Plus" type="ArcsSet" line="485"/>
                <declaration name="split4Minus" type="ArcsSet" line="486"/>
            </method>
            <method name="testSplitOverlapping" type="void" line="496">
                <declaration name="s35" type="ArcsSet" line="498"/>
                <declaration name="s46" type="ArcsSet" line="499"/>
                <declaration name="split1" type="ArcsSet.Split" line="501"/>
                <declaration name="split1Plus" type="ArcsSet" line="502"/>
                <declaration name="split1Minus" type="ArcsSet" line="503"/>
                <declaration name="split2" type="ArcsSet.Split" line="513"/>
                <declaration name="split2Plus" type="ArcsSet" line="514"/>
                <declaration name="split2Minus" type="ArcsSet" line="515"/>
                <declaration name="split3" type="ArcsSet.Split" line="525"/>
                <declaration name="split3Plus" type="ArcsSet" line="526"/>
                <declaration name="split3Minus" type="ArcsSet" line="527"/>
                <declaration name="split4" type="ArcsSet.Split" line="537"/>
                <declaration name="split4Plus" type="ArcsSet" line="538"/>
                <declaration name="split4Minus" type="ArcsSet" line="539"/>
            </method>
            <method name="testFarSplit" type="void" line="552">
                <declaration name="set" type="ArcsSet" line="553"/>
                <declaration name="split" type="ArcsSet.Split" line="554"/>
                <declaration name="splitPlus" type="ArcsSet" line="555"/>
                <declaration name="splitMinus" type="ArcsSet" line="556"/>
            </method>
            <method name="testSplitWithinEpsilon" type="void" line="569">
                <declaration name="epsilon" type="double" line="570"/>
                <declaration name="a" type="double" line="571"/>
                <declaration name="b" type="double" line="572"/>
                <declaration name="set" type="ArcsSet" line="573"/>
                <declaration name="arc" type="Arc" line="574"/>
                <declaration name="split" type="ArcsSet.Split" line="575"/>
            </method>
        </class>
    </source>