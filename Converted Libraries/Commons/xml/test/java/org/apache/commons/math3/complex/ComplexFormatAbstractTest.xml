<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.complex">
        <import package="java.text.NumberFormat"/>
        <import package="java.text.ParsePosition"/>
        <import package="java.util.Locale"/>
        <import package="org.junit.Test"/>
        <import package="org.junit.Assert"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <class name="ComplexFormatAbstractTest" line="8">
            <declaration name="complexFormat" type="ComplexFormat" line="9"/>
            <declaration name="complexFormatJ" type="ComplexFormat" line="10"/>
            <method name="getLocale" type="Locale" line="11"/>
            <method name="getDecimalCharacter" type="char" line="12"/>
            <method name="ComplexFormatAbstractTest" type="constructor" line="13"/>
            <method name="testSimpleNoDecimals" type="void" line="17">
                <declaration name="c" type="Complex" line="18"/>
                <declaration name="expected" type="String" line="19"/>
                <declaration name="actual" type="String" line="20"/>
            </method>
            <method name="testTrimOneImaginary" type="void" line="23">
                <declaration name="fmt" type="ComplexFormat" line="24"/>
                <declaration name="c" type="Complex" line="26"/>
                <declaration name="expected" type="String" line="27"/>
                <declaration name="actual" type="String" line="28"/>
            </method>
            <method name="testSimpleWithDecimals" type="void" line="43">
                <declaration name="c" type="Complex" line="44"/>
                <declaration name="expected" type="String" line="45"/>
                <declaration name="actual" type="String" line="46"/>
            </method>
            <method name="testSimpleWithDecimalsTrunc" type="void" line="49">
                <declaration name="c" type="Complex" line="50"/>
                <declaration name="expected" type="String" line="51"/>
                <declaration name="actual" type="String" line="52"/>
            </method>
            <method name="testNegativeReal" type="void" line="55">
                <declaration name="c" type="Complex" line="56"/>
                <declaration name="expected" type="String" line="57"/>
                <declaration name="actual" type="String" line="58"/>
            </method>
            <method name="testNegativeImaginary" type="void" line="61">
                <declaration name="c" type="Complex" line="62"/>
                <declaration name="expected" type="String" line="63"/>
                <declaration name="actual" type="String" line="64"/>
            </method>
            <method name="testNegativeBoth" type="void" line="67">
                <declaration name="c" type="Complex" line="68"/>
                <declaration name="expected" type="String" line="69"/>
                <declaration name="actual" type="String" line="70"/>
            </method>
            <method name="testZeroReal" type="void" line="73">
                <declaration name="c" type="Complex" line="74"/>
                <declaration name="expected" type="String" line="75"/>
                <declaration name="actual" type="String" line="76"/>
            </method>
            <method name="testZeroImaginary" type="void" line="79">
                <declaration name="c" type="Complex" line="80"/>
                <declaration name="expected" type="String" line="81"/>
                <declaration name="actual" type="String" line="82"/>
            </method>
            <method name="testDifferentImaginaryChar" type="void" line="85">
                <declaration name="c" type="Complex" line="86"/>
                <declaration name="expected" type="String" line="87"/>
                <declaration name="actual" type="String" line="88"/>
            </method>
            <method name="testDefaultFormatComplex" type="void" line="91">
                <declaration name="defaultLocal" type="Locale" line="92"/>
                <declaration name="c" type="Complex" line="94"/>
                <declaration name="expected" type="String" line="95"/>
                <declaration name="actual" type="String" line="96"/>
            </method>
            <method name="testNan" type="void" line="100">
                <declaration name="c" type="Complex" line="101"/>
                <declaration name="expected" type="String" line="102"/>
                <declaration name="actual" type="String" line="103"/>
            </method>
            <method name="testPositiveInfinity" type="void" line="106">
                <declaration name="c" type="Complex" line="107"/>
                <declaration name="expected" type="String" line="108"/>
                <declaration name="actual" type="String" line="109"/>
            </method>
            <method name="testNegativeInfinity" type="void" line="112">
                <declaration name="c" type="Complex" line="113"/>
                <declaration name="expected" type="String" line="114"/>
                <declaration name="actual" type="String" line="115"/>
            </method>
            <method name="testParseSimpleNoDecimals" type="void" line="118">
                <declaration name="source" type="String" line="119"/>
                <declaration name="expected" type="Complex" line="120"/>
                <declaration name="actual" type="Complex" line="121"/>
            </method>
            <method name="testParseSimpleWithDecimals" type="void" line="124">
                <declaration name="source" type="String" line="125"/>
                <declaration name="expected" type="Complex" line="126"/>
                <declaration name="actual" type="Complex" line="127"/>
            </method>
            <method name="testParseSimpleWithDecimalsTrunc" type="void" line="130">
                <declaration name="source" type="String" line="131"/>
                <declaration name="expected" type="Complex" line="132"/>
                <declaration name="actual" type="Complex" line="133"/>
            </method>
            <method name="testParseNegativeReal" type="void" line="136">
                <declaration name="source" type="String" line="137"/>
                <declaration name="expected" type="Complex" line="138"/>
                <declaration name="actual" type="Complex" line="139"/>
            </method>
            <method name="testParseNegativeImaginary" type="void" line="142">
                <declaration name="source" type="String" line="143"/>
                <declaration name="expected" type="Complex" line="144"/>
                <declaration name="actual" type="Complex" line="145"/>
            </method>
            <method name="testParseNegativeBoth" type="void" line="148">
                <declaration name="source" type="String" line="149"/>
                <declaration name="expected" type="Complex" line="150"/>
                <declaration name="actual" type="Complex" line="151"/>
            </method>
            <method name="testParseZeroReal" type="void" line="154">
                <declaration name="source" type="String" line="155"/>
                <declaration name="expected" type="Complex" line="156"/>
                <declaration name="actual" type="Complex" line="157"/>
            </method>
            <method name="testParseZeroImaginary" type="void" line="160">
                <declaration name="source" type="String" line="161"/>
                <declaration name="expected" type="Complex" line="162"/>
                <declaration name="actual" type="Complex" line="163"/>
            </method>
            <method name="testParseDifferentImaginaryChar" type="void" line="166">
                <declaration name="source" type="String" line="167"/>
                <declaration name="expected" type="Complex" line="168"/>
                <declaration name="actual" type="Complex" line="169"/>
            </method>
            <method name="testParseNan" type="void" line="172">
                <declaration name="source" type="String" line="173"/>
                <declaration name="expected" type="Complex" line="174"/>
                <declaration name="actual" type="Complex" line="175"/>
            </method>
            <method name="testParsePositiveInfinity" type="void" line="178">
                <declaration name="source" type="String" line="179"/>
                <declaration name="expected" type="Complex" line="180"/>
                <declaration name="actual" type="Complex" line="181"/>
            </method>
            <method name="testPaseNegativeInfinity" type="void" line="184">
                <declaration name="source" type="String" line="185"/>
                <declaration name="expected" type="Complex" line="186"/>
                <declaration name="actual" type="Complex" line="187"/>
            </method>
            <method name="testConstructorSingleFormat" type="void" line="190">
                <declaration name="nf" type="NumberFormat" line="191"/>
                <declaration name="cf" type="ComplexFormat" line="192"/>
            </method>
            <method name="testGetImaginaryFormat" type="void" line="196">
                <declaration name="nf" type="NumberFormat" line="197"/>
                <declaration name="cf" type="ComplexFormat" line="198"/>
            </method>
            <method name="testGetRealFormat" type="void" line="201">
                <declaration name="nf" type="NumberFormat" line="202"/>
                <declaration name="cf" type="ComplexFormat" line="203"/>
            </method>
            <method name="testFormatNumber" type="void" line="206">
                <declaration name="cf" type="ComplexFormat" line="207"/>
                <declaration name="pi" type="Double" line="208"/>
                <declaration name="text" type="String" line="209"/>
            </method>
            <method name="testForgottenImaginaryCharacter" type="void" line="212">
                <declaration name="pos" type="ParsePosition" line="213"/>
            </method>
        </class>
    </source>