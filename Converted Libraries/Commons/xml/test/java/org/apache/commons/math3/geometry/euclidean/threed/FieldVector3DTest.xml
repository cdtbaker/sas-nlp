<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.euclidean.threed">
        <import package="java.text.DecimalFormat"/>
        <import package="java.text.DecimalFormatSymbols"/>
        <import package="java.text.NumberFormat"/>
        <import package="java.util.Locale"/>
        <import package="org.apache.commons.math3.analysis.differentiation.DerivativeStructure"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MathArithmeticException"/>
        <import package="org.apache.commons.math3.random.Well1024a"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.Precision"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="FieldVector3DTest" line="14">
            <method name="testConstructors" type="void" line="15">
                <declaration name="cosAlpha" type="double" line="16"/>
                <declaration name="sinAlpha" type="double" line="17"/>
                <declaration name="cosDelta" type="double" line="18"/>
                <declaration name="sinDelta" type="double" line="19"/>
                <declaration name="u" type="FieldVector3D&lt;DerivativeStructure&gt;" line="20"/>
            </method>
            <method name="testEquals" type="void" line="42">
                <declaration name="u1" type="FieldVector3D&lt;DerivativeStructure&gt;" line="43"/>
                <declaration name="v" type="FieldVector3D&lt;DerivativeStructure&gt;" line="44"/>
            </method>
            <method name="testHash" type="void" line="54">
                <declaration name="u" type="FieldVector3D&lt;DerivativeStructure&gt;" line="56"/>
                <declaration name="v" type="FieldVector3D&lt;DerivativeStructure&gt;" line="57"/>
            </method>
            <method name="testInfinite" type="void" line="60"/>
            <method name="testNaN" type="void" line="67"/>
            <method name="testToString" type="void" line="74">
                <declaration name="format" type="NumberFormat" line="76"/>
            </method>
            <method name="testWrongDimension" type="void" line="79"/>
            <method name="testCoordinates" type="void" line="82">
                <declaration name="v" type="FieldVector3D&lt;DerivativeStructure&gt;" line="83"/>
                <declaration name="coordinates" type="DerivativeStructure[]" line="87"/>
            </method>
            <method name="testNorm1" type="void" line="92"/>
            <method name="testNorm" type="void" line="99">
                <declaration name="r" type="double" line="100"/>
            </method>
            <method name="testNormSq" type="void" line="107"/>
            <method name="testNormInf" type="void" line="114"/>
            <method name="testDistance1" type="void" line="141">
                <declaration name="v1" type="FieldVector3D&lt;DerivativeStructure&gt;" line="142"/>
                <declaration name="v2" type="FieldVector3D&lt;DerivativeStructure&gt;" line="143"/>
                <declaration name="distance" type="DerivativeStructure" line="145"/>
            </method>
            <method name="testDistance" type="void" line="161">
                <declaration name="v1" type="FieldVector3D&lt;DerivativeStructure&gt;" line="162"/>
                <declaration name="v2" type="FieldVector3D&lt;DerivativeStructure&gt;" line="163"/>
                <declaration name="distance" type="DerivativeStructure" line="165"/>
            </method>
            <method name="testDistanceSq" type="void" line="181">
                <declaration name="v1" type="FieldVector3D&lt;DerivativeStructure&gt;" line="182"/>
                <declaration name="v2" type="FieldVector3D&lt;DerivativeStructure&gt;" line="183"/>
                <declaration name="distanceSq" type="DerivativeStructure" line="185"/>
            </method>
            <method name="testDistanceInf" type="void" line="201">
                <declaration name="v1" type="FieldVector3D&lt;DerivativeStructure&gt;" line="202"/>
                <declaration name="v2" type="FieldVector3D&lt;DerivativeStructure&gt;" line="203"/>
                <declaration name="distance" type="DerivativeStructure" line="205"/>
            </method>
            <method name="testSubtract" type="void" line="234">
                <declaration name="v1" type="FieldVector3D&lt;DerivativeStructure&gt;" line="235"/>
                <declaration name="v2" type="FieldVector3D&lt;DerivativeStructure&gt;" line="236"/>
            </method>
            <method name="testAdd" type="void" line="246">
                <declaration name="v1" type="FieldVector3D&lt;DerivativeStructure&gt;" line="247"/>
                <declaration name="v2" type="FieldVector3D&lt;DerivativeStructure&gt;" line="248"/>
            </method>
            <method name="testScalarProduct" type="void" line="258">
                <declaration name="v" type="FieldVector3D&lt;DerivativeStructure&gt;" line="259"/>
            </method>
            <method name="testVectorialProducts" type="void" line="264">
                <declaration name="v1" type="FieldVector3D&lt;DerivativeStructure&gt;" line="265"/>
                <declaration name="v2" type="FieldVector3D&lt;DerivativeStructure&gt;" line="266"/>
                <declaration name="v3" type="FieldVector3D&lt;DerivativeStructure&gt;" line="270"/>
            </method>
            <method name="testCrossProductCancellation" type="void" line="283">
                <declaration name="v1" type="FieldVector3D&lt;DerivativeStructure&gt;" line="284"/>
                <declaration name="v2" type="FieldVector3D&lt;DerivativeStructure&gt;" line="285"/>
                <declaration name="scale" type="double" line="287"/>
                <declaration name="big1" type="FieldVector3D&lt;DerivativeStructure&gt;" line="288"/>
                <declaration name="small2" type="FieldVector3D&lt;DerivativeStructure&gt;" line="289"/>
            </method>
            <method name="testAngular" type="void" line="292">
                <declaration name="u" type="FieldVector3D&lt;DerivativeStructure&gt;" line="298"/>
            </method>
            <method name="testAngularSeparation" type="void" line="302">
                <declaration name="v1" type="FieldVector3D&lt;DerivativeStructure&gt;" line="303"/>
                <declaration name="k" type="FieldVector3D&lt;DerivativeStructure&gt;" line="304"/>
                <declaration name="i" type="FieldVector3D&lt;DerivativeStructure&gt;" line="305"/>
                <declaration name="v2" type="FieldVector3D&lt;DerivativeStructure&gt;" line="306"/>
                <scope line="310"/>
                <scope line="314"/>
            </method>
            <method name="testNormalize" type="void" line="319">
                <scope line="321"/>
                <scope line="325"/>
            </method>
            <method name="testNegate" type="void" line="328"/>
            <method name="testOrthogonal" type="void" line="331">
                <declaration name="v1" type="FieldVector3D&lt;DerivativeStructure&gt;" line="332"/>
                <declaration name="v2" type="FieldVector3D&lt;DerivativeStructure&gt;" line="334"/>
                <declaration name="v3" type="FieldVector3D&lt;DerivativeStructure&gt;" line="336"/>
                <declaration name="v4" type="FieldVector3D&lt;DerivativeStructure&gt;" line="338"/>
                <scope line="340"/>
                <scope line="344"/>
            </method>
            <method name="testAngle" type="void" line="347">
                <scope line="351"/>
                <scope line="355"/>
            </method>
            <method name="testAccurateDotProduct" type="void" line="358">
                <declaration name="u1" type="FieldVector3D&lt;DerivativeStructure&gt;" line="359"/>
                <declaration name="u2" type="FieldVector3D&lt;DerivativeStructure&gt;" line="360"/>
                <declaration name="sNaive" type="DerivativeStructure" line="361"/>
                <declaration name="sAccurate" type="DerivativeStructure" line="362"/>
            </method>
            <method name="testDotProduct" type="void" line="366">
                <declaration name="random" type="Well1024a" line="367"/>
                <scope line="368">
                    <declaration name="ux" type="double" line="369"/>
                    <declaration name="uy" type="double" line="370"/>
                    <declaration name="uz" type="double" line="371"/>
                    <declaration name="vx" type="double" line="372"/>
                    <declaration name="vy" type="double" line="373"/>
                    <declaration name="vz" type="double" line="374"/>
                    <declaration name="sNaive" type="double" line="375"/>
                    <declaration name="uds" type="FieldVector3D&lt;DerivativeStructure&gt;" line="376"/>
                    <declaration name="vds" type="FieldVector3D&lt;DerivativeStructure&gt;" line="377"/>
                    <declaration name="v" type="Vector3D" line="378"/>
                    <declaration name="sAccurate" type="DerivativeStructure" line="379"/>
                </scope>
            </method>
            <method name="testAccurateCrossProduct" type="void" line="391">
                <declaration name="u1" type="FieldVector3D&lt;DerivativeStructure&gt;" line="392"/>
                <declaration name="u2" type="FieldVector3D&lt;DerivativeStructure&gt;" line="393"/>
                <declaration name="u3" type="FieldVector3D&lt;DerivativeStructure&gt;" line="394"/>
                <declaration name="cNaive" type="FieldVector3D&lt;DerivativeStructure&gt;" line="395"/>
                <declaration name="cAccurate" type="FieldVector3D&lt;DerivativeStructure&gt;" line="396"/>
            </method>
            <method name="testCrossProduct" type="void" line="400">
                <declaration name="random" type="Well1024a" line="401"/>
                <scope line="402">
                    <declaration name="ux" type="double" line="403"/>
                    <declaration name="uy" type="double" line="404"/>
                    <declaration name="uz" type="double" line="405"/>
                    <declaration name="vx" type="double" line="406"/>
                    <declaration name="vy" type="double" line="407"/>
                    <declaration name="vz" type="double" line="408"/>
                    <declaration name="cNaive" type="Vector3D" line="409"/>
                    <declaration name="uds" type="FieldVector3D&lt;DerivativeStructure&gt;" line="410"/>
                    <declaration name="vds" type="FieldVector3D&lt;DerivativeStructure&gt;" line="411"/>
                    <declaration name="v" type="Vector3D" line="412"/>
                </scope>
            </method>
            <method name="createVector" type="FieldVector3D<DerivativeStructure>" line="417">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="z" type="double"/>
                    <param name="params" type="int"/>
                </params>
            </method>
            <method name="checkVector" type="void" line="420">
                <params>
                    <param name="v" type="FieldVector3D<DerivativeStructure>"/>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="z" type="double"/>
                </params>
            </method>
            <method name="checkVector" type="void" line="425">
                <params>
                    <param name="v" type="FieldVector3D<DerivativeStructure>"/>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="z" type="double"/>
                    <param name="dxdx" type="double"/>
                    <param name="dxdy" type="double"/>
                    <param name="dxdz" type="double"/>
                    <param name="dydx" type="double"/>
                    <param name="dydy" type="double"/>
                    <param name="dydz" type="double"/>
                    <param name="dzdx" type="double"/>
                    <param name="dzdy" type="double"/>
                    <param name="dzdz" type="double"/>
                </params>
            </method>
            <method name="checkVector" type="void" line="439">
                <params>
                    <param name="v" type="FieldVector3D<DerivativeStructure>"/>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="z" type="double"/>
                    <param name="dxdx" type="double"/>
                    <param name="dxdy" type="double"/>
                    <param name="dxdz" type="double"/>
                    <param name="dxdt" type="double"/>
                    <param name="dydx" type="double"/>
                    <param name="dydy" type="double"/>
                    <param name="dydz" type="double"/>
                    <param name="dydt" type="double"/>
                    <param name="dzdx" type="double"/>
                    <param name="dzdy" type="double"/>
                    <param name="dzdz" type="double"/>
                    <param name="dzdt" type="double"/>
                </params>
            </method>
        </class>
    </source>