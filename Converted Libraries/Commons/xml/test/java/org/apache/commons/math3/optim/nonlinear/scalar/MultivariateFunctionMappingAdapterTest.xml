<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optim.nonlinear.scalar">
        <import package="org.apache.commons.math3.analysis.MultivariateFunction"/>
        <import package="org.apache.commons.math3.optim.InitialGuess"/>
        <import package="org.apache.commons.math3.optim.MaxEval"/>
        <import package="org.apache.commons.math3.optim.PointValuePair"/>
        <import package="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex"/>
        <import package="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex"/>
        <import package="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="MultivariateFunctionMappingAdapterTest" line="29">
            <method name="testStartSimplexInsideRange" type="void" line="31">
                <declaration name="biQuadratic" type="BiQuadratic" line="32"/>
                <declaration name="wrapped" type="MultivariateFunctionMappingAdapter" line="33"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="38"/>
                <declaration name="simplex" type="AbstractSimplex" line="39"/>
                <declaration name="optimum" type="PointValuePair" line="45"/>
                <declaration name="bounded" type="double[]" line="51"/>
            </method>
            <method name="testOptimumOutsideRange" type="void" line="58">
                <declaration name="biQuadratic" type="BiQuadratic" line="59"/>
                <declaration name="wrapped" type="MultivariateFunctionMappingAdapter" line="60"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="65"/>
                <declaration name="simplex" type="AbstractSimplex" line="66"/>
                <declaration name="optimum" type="PointValuePair" line="72"/>
                <declaration name="bounded" type="double[]" line="78"/>
            </method>
            <method name="testUnbounded" type="void" line="85">
                <declaration name="biQuadratic" type="BiQuadratic" line="86"/>
                <declaration name="wrapped" type="MultivariateFunctionMappingAdapter" line="89"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="94"/>
                <declaration name="simplex" type="AbstractSimplex" line="95"/>
                <declaration name="optimum" type="PointValuePair" line="101"/>
                <declaration name="bounded" type="double[]" line="107"/>
            </method>
            <method name="testHalfBounded" type="void" line="114">
                <declaration name="biQuadratic" type="BiQuadratic" line="115"/>
                <declaration name="wrapped" type="MultivariateFunctionMappingAdapter" line="118"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="123"/>
                <declaration name="simplex" type="AbstractSimplex" line="124"/>
                <declaration name="optimum" type="PointValuePair" line="130"/>
                <declaration name="bounded" type="double[]" line="136"/>
            </method>
            <class name="BiQuadratic" line="142">
                <implements interface="MultivariateFunction"/>
                <declaration name="xOptimum" type="double" line="144"/>
                <declaration name="yOptimum" type="double" line="145"/>
                <declaration name="xMin" type="double" line="147"/>
                <declaration name="xMax" type="double" line="148"/>
                <declaration name="yMin" type="double" line="149"/>
                <declaration name="yMax" type="double" line="150"/>
                <method name="BiQuadratic" type="constructor" line="154">
                    <params>
                        <param name="xOptimum" type="double"/>
                        <param name="yOptimum" type="double"/>
                        <param name="xMin" type="double"/>
                        <param name="xMax" type="double"/>
                        <param name="yMin" type="double"/>
                        <param name="yMax" type="double"/>
                    </params>
                </method>
                <method name="value" type="double" line="163">
                    <params>
                        <param name="point" type="double[]"/>
                    </params>
                    <comment line="165">
                        the function should never be called with out of range points                        
                    </comment>
                    <declaration name="dx" type="double" line="170"/>
                    <declaration name="dy" type="double" line="171"/>
                </method>
                <method name="getLower" type="double[]" line="176"/>
                <method name="getUpper" type="double[]" line="180"/>
                <method name="getBoundedXOptimum" type="double" line="184"/>
                <method name="getBoundedYOptimum" type="double" line="188"/>
            </class>
        </class>
    </source>