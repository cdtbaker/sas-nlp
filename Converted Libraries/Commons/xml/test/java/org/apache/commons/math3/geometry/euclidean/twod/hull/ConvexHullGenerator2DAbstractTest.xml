<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.euclidean.twod.hull">
        <import package="java.util.ArrayList"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.Collection"/>
        <import package="java.util.Collections"/>
        <import package="java.util.List"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D"/>
        <import package="org.apache.commons.math3.geometry.euclidean.twod.Vector2D"/>
        <import package="org.apache.commons.math3.geometry.partitioning.Region"/>
        <import package="org.apache.commons.math3.geometry.partitioning.Region.Location"/>
        <import package="org.apache.commons.math3.random.MersenneTwister"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Before"/>
        <import package="org.junit.Test"/>
        <class name="ConvexHullGenerator2DAbstractTest" line="37">
            <comment line="61">
                ------------------------------------------------------------------------------                
            </comment>
            <comment line="207">
                ------------------------------------------------------------------------------                
            </comment>
            <comment line="230">
                verify that the constructed hull is really convex                
            </comment>
            <comment line="263">
                verify that all points are inside the convex hull region                
            </comment>
            <javadoc line="37">
                Abstract base test class for 2D convex hull generators.                
                <version>
                    $Id: ConvexHullGenerator2DAbstractTest.java 1568752 2014-02-16 12:19:51Z tn $                    
                </version>
            </javadoc>
            <declaration name="generator" type="ConvexHullGenerator2D" line="44"/>
            <declaration name="random" type="RandomGenerator" line="45"/>
            <method name="createConvexHullGenerator" type="ConvexHullGenerator2D" line="47"/>
            <method name="reducePoints" type="Collection&lt;Vector2D&gt;" line="49">
                <params>
                    <param name="points" type="Collection&lt;Vector2D&gt;"/>
                </params>
                <comment line="51">
                    do nothing by default, may be overridden by other tests                    
                </comment>
            </method>
            <method name="setUp" type="void" line="55"/>
            <method name="testNullArgument" type="void" line="63"/>
            <method name="testEmpty" type="void" line="68">
                <declaration name="hull" type="ConvexHull2D" line="69"/>
            </method>
            <method name="testOnePoint" type="void" line="75">
                <declaration name="points" type="List&amp;lt;Vector2D&amp;gt;" line="76"/>
                <declaration name="hull" type="ConvexHull2D" line="77"/>
            </method>
            <method name="testTwoPoints" type="void" line="83">
                <declaration name="points" type="List&amp;lt;Vector2D&amp;gt;" line="84"/>
                <declaration name="hull" type="ConvexHull2D" line="85"/>
            </method>
            <method name="testAllIdentical" type="void" line="91">
                <declaration name="points" type="Collection&amp;lt;Vector2D&amp;gt;" line="92"/>
                <declaration name="hull" type="ConvexHull2D" line="98"/>
            </method>
            <method name="testConvexHull" type="void" line="103">
                <comment line="105">
                    execute 100 random variations                    
                </comment>
                <comment line="107">
                    randomize the size from 4 to 100                    
                </comment>
                <scope line="105">
                    <declaration name="size" type="int" line="107"/>
                    <declaration name="points" type="List&amp;lt;Vector2D&amp;gt;" line="109"/>
                    <declaration name="hull" type="ConvexHull2D" line="110"/>
                </scope>
            </method>
            <method name="testCollinearPoints" type="void" line="116">
                <declaration name="points" type="Collection&amp;lt;Vector2D&amp;gt;" line="117"/>
                <declaration name="hull" type="ConvexHull2D" line="124"/>
            </method>
            <method name="testCollinearPointsReverse" type="void" line="129">
                <declaration name="points" type="Collection&amp;lt;Vector2D&amp;gt;" line="130"/>
                <declaration name="hull" type="ConvexHull2D" line="137"/>
            </method>
            <method name="testCollinearPointsIncluded" type="void" line="142">
                <declaration name="points" type="Collection&amp;lt;Vector2D&amp;gt;" line="143"/>
                <declaration name="hull" type="ConvexHull2D" line="150"/>
            </method>
            <method name="testCollinearPointsIncludedReverse" type="void" line="155">
                <declaration name="points" type="Collection&amp;lt;Vector2D&amp;gt;" line="156"/>
                <declaration name="hull" type="ConvexHull2D" line="163"/>
            </method>
            <method name="testIdenticalPoints" type="void" line="168">
                <declaration name="points" type="Collection&amp;lt;Vector2D&amp;gt;" line="169"/>
                <declaration name="hull" type="ConvexHull2D" line="176"/>
            </method>
            <method name="testIdenticalPoints2" type="void" line="181">
                <declaration name="points" type="Collection&amp;lt;Vector2D&amp;gt;" line="182"/>
                <declaration name="hull" type="ConvexHull2D" line="189"/>
            </method>
            <method name="testClosePoints" type="void" line="194">
                <declaration name="points" type="Collection&amp;lt;Vector2D&amp;gt;" line="195"/>
                <declaration name="hull" type="ConvexHull2D" line="202"/>
            </method>
            <method name="createRandomPoints" type="List&lt;Vector2D&gt;" line="208">
                <params>
                    <param name="size" type="int"/>
                </params>
                <comment line="210">
                    create the cloud container                    
                </comment>
                <comment line="212">
                    fill the cloud with a random distribution of points                    
                </comment>
                <declaration name="points" type="List&amp;lt;Vector2D&amp;gt;" line="210"/>
                <scope line="212"/>
            </method>
            <method name="checkConvexHull" type="void" line="218">
                <params>
                    <param name="points" type="Collection&lt;Vector2D&gt;"/>
                    <param name="hull" type="ConvexHull2D"/>
                </params>
            </method>
            <method name="checkConvexHull" type="void" line="223">
                <params>
                    <param name="points" type="Collection&lt;Vector2D&gt;"/>
                    <param name="hull" type="ConvexHull2D"/>
                    <param name="includesCollinearPoints" type="boolean"/>
                </params>
            </method>
            <method name="isConvex" type="boolean" line="230">
                <params>
                    <param name="hull" type="ConvexHull2D"/>
                    <param name="includesCollinearPoints" type="boolean"/>
                </params>
                <comment line="251">
                    in case of collinear points the cross product will be zero                    
                </comment>
                <declaration name="sign" type="double" line="231"/>
                <declaration name="points" type="Vector2D[]" line="233"/>
                <scope line="235">
                    <declaration name="p1" type="Vector2D" line="236"/>
                    <declaration name="p2" type="Vector2D" line="237"/>
                    <declaration name="p3" type="Vector2D" line="238"/>
                    <declaration name="d1" type="Vector2D" line="240"/>
                    <declaration name="d2" type="Vector2D" line="241"/>
                    <declaration name="cross" type="double" line="246"/>
                    <scope line="248">
                        <scope line="249"/>
                        <scope line="251"/>
                    </scope>
                </scope>
            </method>
            <method name="checkPointsInsideHullRegion" type="void" line="265">
                <params>
                    <param name="points" type="Collection&lt;Vector2D&gt;"/>
                    <param name="hull" type="ConvexHull2D"/>
                    <param name="includesCollinearPoints" type="boolean"/>
                </params>
                <declaration name="hullVertices" type="Collection&amp;lt;Vector2D&amp;gt;" line="267"/>
                <declaration name="region" type="Region&amp;lt;Euclidean2D&amp;gt;" line="268"/>
                <scope line="270">
                    <declaration name="location" type="Location" line="271"/>
                    <scope line="274"/>
                </scope>
            </method>
        </class>
    </source>