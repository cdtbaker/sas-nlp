<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.fitting.leastsquares">
        <import package="java.util.ArrayList"/>
        <import package="org.apache.commons.math3.analysis.MultivariateVectorFunction"/>
        <import package="org.apache.commons.math3.analysis.MultivariateMatrixFunction"/>
        <import package="org.apache.commons.math3.analysis.UnivariateFunction"/>
        <import package="org.apache.commons.math3.stat.regression.SimpleRegression"/>
        <class name="StraightLineProblem" line="26">
            <javadoc line="26">
                Class that models a straight line defined as {@code y = a x + b}.
                  The parameters of problem are:
                  &lt;ul&gt;
                  &lt;li&gt;{@code a}&lt;/li&gt;
                  &lt;li&gt;{@code b}&lt;/li&gt;
                  &lt;/ul&gt;
                  The model functions are:
                  &lt;ul&gt;
                  &lt;li&gt;for each pair (a, b), the y-coordinate of the line.&lt;/li&gt;
                  &lt;/ul&gt;                
            </javadoc>
            <declaration name="points" type="ArrayList&amp;lt;double[]&amp;gt;" line="39"/>
            <javadoc line="39">
                Cloud of points assumed to be fitted by a straight line.                
            </javadoc>
            <declaration name="sigma" type="double" line="41"/>
            <javadoc line="41">
                Error (on the y-coordinate of the points).                
            </javadoc>
            <javadoc line="44">
                @param error Assumed error for the y-coordinate.                
            </javadoc>
            <method name="StraightLineProblem" type="constructor" line="47">
                <params>
                    <param name="error" type="double"/>
                </params>
            </method>
            <method name="addPoint" type="void" line="52">
                <params>
                    <param name="px" type="double"/>
                    <param name="py" type="double"/>
                </params>
            </method>
            <javadoc line="56">
                @return the list of x-coordinates.                
            </javadoc>
            <method name="x" type="double[]" line="59">
                <comment line="64">
                    x-coordinate.                    
                </comment>
                <declaration name="v" type="double[]" line="60"/>
                <scope line="61">
                    <declaration name="p" type="double[]" line="62"/>
                </scope>
            </method>
            <javadoc line="69">
                @return the list of y-coordinates.                
            </javadoc>
            <method name="y" type="double[]" line="72">
                <comment line="77">
                    y-coordinate.                    
                </comment>
                <declaration name="v" type="double[]" line="73"/>
                <scope line="74">
                    <declaration name="p" type="double[]" line="75"/>
                </scope>
            </method>
            <method name="target" type="double[]" line="82"/>
            <method name="weight" type="double[]" line="86">
                <declaration name="weight" type="double" line="87"/>
                <declaration name="w" type="double[]" line="88"/>
                <scope line="89"/>
            </method>
            <method name="getModelFunction" type="MultivariateVectorFunction" line="96">
                <anonymous_class line="97">
                    <method name="value" type="double[]" line="98">
                        <params>
                            <param name="params" type="double[]"/>
                        </params>
                        <declaration name="line" type="Model" line="99"/>
                        <declaration name="model" type="double[]" line="101"/>
                        <scope line="102">
                            <declaration name="p" type="double[]" line="103"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <method name="getModelFunctionJacobian" type="MultivariateMatrixFunction" line="112">
                <anonymous_class line="113">
                    <method name="value" type="double[][]" line="114">
                        <params>
                            <param name="point" type="double[]"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="120">
                Directly solve the linear problem, using the {@link SimpleRegression}class.                
            </javadoc>
            <method name="solve" type="double[]" line="124">
                <declaration name="regress" type="SimpleRegression" line="125"/>
                <scope line="126"/>
                <declaration name="result" type="double[]" line="130"/>
            </method>
            <method name="jacobian" type="double[][]" line="134">
                <params>
                    <param name="params" type="double[]"/>
                </params>
                <comment line="140">
                    Partial derivative wrt &quot;a&quot;.                    
                </comment>
                <comment line="142">
                    Partial derivative wrt &quot;b&quot;.                    
                </comment>
                <declaration name="jacobian" type="double[][]" line="135"/>
                <scope line="137">
                    <declaration name="p" type="double[]" line="138"/>
                </scope>
            </method>
            <class name="Model" line="148">
                <implements interface="UnivariateFunction"/>
                <javadoc line="148">
                    Linear function.                    
                </javadoc>
                <declaration name="a" type="double" line="152"/>
                <declaration name="b" type="double" line="153"/>
                <method name="Model" type="constructor" line="156">
                    <params>
                        <param name="a" type="double"/>
                        <param name="b" type="double"/>
                    </params>
                </method>
                <method name="value" type="double" line="161">
                    <params>
                        <param name="x" type="double"/>
                    </params>
                </method>
            </class>
        </class>
    </source>