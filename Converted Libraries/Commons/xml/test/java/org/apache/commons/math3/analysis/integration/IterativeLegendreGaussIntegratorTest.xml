<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.integration">
        <import package="java.util.Random"/>
        <import package="org.apache.commons.math3.analysis.QuinticFunction"/>
        <import package="org.apache.commons.math3.analysis.UnivariateFunction"/>
        <import package="org.apache.commons.math3.analysis.function.Sin"/>
        <import package="org.apache.commons.math3.analysis.function.Gaussian"/>
        <import package="org.apache.commons.math3.analysis.polynomials.PolynomialFunction"/>
        <import package="org.apache.commons.math3.exception.TooManyEvaluationsException"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="IterativeLegendreGaussIntegratorTest" line="32">
            <comment line="107">
                Cf. MATH-995                
            </comment>
            <method name="testSinFunction" type="void" line="35">
                <declaration name="f" type="UnivariateFunction" line="36"/>
                <declaration name="integrator" type="BaseAbstractUnivariateIntegrator" line="37"/>
                <declaration name="min" type="double" line="39"/>
            </method>
            <method name="testQuinticFunction" type="void" line="55">
                <declaration name="f" type="UnivariateFunction" line="56"/>
                <declaration name="integrator" type="UnivariateIntegrator" line="57"/>
                <declaration name="min" type="double" line="63"/>
            </method>
            <method name="testExactIntegration" type="void" line="79">
                <comment line="90">
                    an n points Gauss-Legendre integrator integrates 2n-1 degree polynoms exactly                    
                </comment>
                <declaration name="random" type="Random" line="80"/>
                <scope line="81">
                    <declaration name="integrator" type="IterativeLegendreGaussIntegrator" line="82"/>
                    <scope line="90">
                        <scope line="91">
                            <declaration name="coeff" type="double[]" line="92"/>
                            <scope line="93"/>
                            <declaration name="p" type="PolynomialFunction" line="96"/>
                            <declaration name="result" type="double" line="97"/>
                            <declaration name="reference" type="double" line="98"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testNormalDistributionWithLargeSigma" type="void" line="108">
                <declaration name="sigma" type="double" line="109"/>
                <declaration name="mean" type="double" line="110"/>
                <declaration name="factor" type="double" line="111"/>
                <declaration name="normal" type="UnivariateFunction" line="112"/>
                <declaration name="tol" type="double" line="114"/>
                <declaration name="integrator" type="IterativeLegendreGaussIntegrator" line="115"/>
                <declaration name="a" type="double" line="118"/>
                <declaration name="b" type="double" line="119"/>
                <declaration name="s" type="double" line="120"/>
            </method>
            <method name="testIssue464" type="void" line="125">
                <comment line="136">
                    due to the discontinuity, integration implies *many* calls                    
                </comment>
                <comment line="142">
                    setting up limits prevents such large number of calls                    
                </comment>
                <comment line="147">
                    expected                    
                </comment>
                <comment line="151">
                    integrating on the two sides should be simpler                    
                </comment>
                <declaration name="value" type="double" line="126"/>
                <anonymous_class line="127">
                    <method name="value" type="double" line="128">
                        <params>
                            <param name="x" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="f" type="UnivariateFunction" line="127"/>
                <declaration name="gauss" type="IterativeLegendreGaussIntegrator" line="132"/>
                <declaration name="maxX" type="double" line="136"/>
                <scope line="142"/>
                <scope line="145"/>
                <declaration name="sum1" type="double" line="151"/>
                <declaration name="eval1" type="int" line="152"/>
                <declaration name="sum2" type="double" line="153"/>
                <declaration name="eval2" type="int" line="154"/>
            </method>
            <method name="exactIntegration" type="double" line="160">
                <params>
                    <param name="p" type="PolynomialFunction"/>
                    <param name="a" type="double"/>
                    <param name="b" type="double"/>
                </params>
                <declaration name="coeffs" type="double[]" line="161"/>
                <declaration name="yb" type="double" line="162"/>
                <declaration name="ya" type="double" line="163"/>
                <scope line="164"/>
            </method>
        </class>
    </source>