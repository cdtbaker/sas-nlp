<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optim.nonlinear.vector.jacobian">
        <import package="java.util.ArrayList"/>
        <import package="org.apache.commons.math3.analysis.MultivariateVectorFunction"/>
        <import package="org.apache.commons.math3.analysis.MultivariateMatrixFunction"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.optim.nonlinear.vector.ModelFunction"/>
        <import package="org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian"/>
        <class name="CircleProblem" line="9">
            <javadoc line="9">
                Class that models a circle.
                  The parameters of problem are:
                  &lt;ul&gt;
                  &lt;li&gt;the x-coordinate of the circle center,&lt;/li&gt;
                  &lt;li&gt;the y-coordinate of the circle center,&lt;/li&gt;
                  &lt;li&gt;the radius of the circle.&lt;/li&gt;
                  &lt;/ul&gt;
                  The model functions are:
                  &lt;ul&gt;
                  &lt;li&gt;for each triplet (cx, cy, r), the (x, y) coordinates of a point on the
                  corresponding circle.&lt;/li&gt;
                  &lt;/ul&gt;                
            </javadoc>
            <declaration name="points" type="ArrayList&lt;double[]&gt;" line="24"/>
            <javadoc line="24">
                Cloud of points assumed to be fitted by a circle.                
            </javadoc>
            <declaration name="xSigma" type="double" line="28"/>
            <javadoc line="28">
                Error on the x-coordinate of the points.                
            </javadoc>
            <declaration name="ySigma" type="double" line="32"/>
            <javadoc line="32">
                Error on the y-coordinate of the points.                
            </javadoc>
            <declaration name="resolution" type="int" line="36"/>
            <javadoc line="36">
                Number of points on the circumference (when searching which
                  model point is closest to a given &quot;observation&quot;.                
            </javadoc>
            <javadoc line="41">
                @param xError Assumed error for the x-coordinate of the circle points.                
                <param>
                    yError Assumed error for the y-coordinate of the circle points.                    
                </param>
                <param>
                    searchResolution Number of points to try when searching the one
                      that is closest to a given "observed" point.                    
                </param>
            </javadoc>
            <method name="CircleProblem" type="constructor" line="47">
                <params>
                    <param name="xError" type="double"/>
                    <param name="yError" type="double"/>
                    <param name="searchResolution" type="int"/>
                </params>
            </method>
            <javadoc line="53">
                @param xError Assumed error for the x-coordinate of the circle points.                
                <param>
                    yError Assumed error for the y-coordinate of the circle points.                    
                </param>
            </javadoc>
            <method name="CircleProblem" type="constructor" line="57">
                <params>
                    <param name="xError" type="double"/>
                    <param name="yError" type="double"/>
                </params>
            </method>
            <method name="addPoint" type="void" line="60">
                <params>
                    <param name="px" type="double"/>
                    <param name="py" type="double"/>
                </params>
            </method>
            <method name="target" type="double[]" line="63">
                <declaration name="t" type="double[]" line="64"/>
                <scope line="65">
                    <declaration name="p" type="double[]" line="66"/>
                    <declaration name="index" type="int" line="67"/>
                </scope>
            </method>
            <method name="weight" type="double[]" line="73">
                <declaration name="wX" type="double" line="74"/>
                <declaration name="wY" type="double" line="75"/>
                <declaration name="w" type="double[]" line="76"/>
                <scope line="77">
                    <declaration name="index" type="int" line="78"/>
                </scope>
            </method>
            <method name="getModelFunction" type="ModelFunction" line="84">
                <anonymous_class line="85">
                    <method name="value" type="double[]" line="86">
                        <params>
                            <param name="params" type="double[]"/>
                        </params>
                        <declaration name="cx" type="double" line="87"/>
                        <declaration name="cy" type="double" line="88"/>
                        <declaration name="r" type="double" line="89"/>
                        <declaration name="model" type="double[]" line="90"/>
                        <declaration name="deltaTheta" type="double" line="91"/>
                        <scope line="92">
                            <declaration name="p" type="double[]" line="93"/>
                            <declaration name="px" type="double" line="94"/>
                            <declaration name="py" type="double" line="95"/>
                            <declaration name="bestX" type="double" line="96"/>
                            <declaration name="bestY" type="double" line="97"/>
                            <declaration name="dMin" type="double" line="98"/>
                            <scope line="99">
                                <declaration name="currentX" type="double" line="100"/>
                                <declaration name="currentY" type="double" line="101"/>
                                <declaration name="dX" type="double" line="102"/>
                                <declaration name="dY" type="double" line="103"/>
                                <declaration name="d" type="double" line="104"/>
                                <scope line="105"/>
                            </scope>
                            <declaration name="index" type="int" line="111"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <method name="getModelFunctionJacobian" type="ModelFunctionJacobian" line="120">
                <anonymous_class line="121">
                    <method name="value" type="double[][]" line="122">
                        <params>
                            <param name="point" type="double[]"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <method name="jacobian" type="double[][]" line="128">
                <params>
                    <param name="params" type="double[]"/>
                </params>
                <declaration name="jacobian" type="double[][]" line="129"/>
                <scope line="130">
                    <declaration name="index" type="int" line="131"/>
                    <declaration name="p" type="double[]" line="136"/>
                </scope>
            </method>
        </class>
    </source>