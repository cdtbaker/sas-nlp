<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.differentiation">
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.analysis.QuinticFunction"/>
        <import package="org.apache.commons.math3.analysis.UnivariateFunction"/>
        <import package="org.apache.commons.math3.analysis.UnivariateMatrixFunction"/>
        <import package="org.apache.commons.math3.analysis.UnivariateVectorFunction"/>
        <import package="org.apache.commons.math3.analysis.function.Gaussian"/>
        <import package="org.apache.commons.math3.analysis.function.Sin"/>
        <import package="org.apache.commons.math3.exception.MathInternalError"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooLargeException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="FiniteDifferencesDifferentiatorTest" line="16">
            <javadoc line="16">
                Test for class {@link FiniteDifferencesDifferentiator}.                
            </javadoc>
            <method name="testWrongNumberOfPoints" type="void" line="20"/>
            <method name="testWrongStepSize" type="void" line="23"/>
            <method name="testSerialization" type="void" line="26">
                <declaration name="differentiator" type="FiniteDifferencesDifferentiator" line="27"/>
                <declaration name="recovered" type="FiniteDifferencesDifferentiator" line="28"/>
            </method>
            <method name="testConstant" type="void" line="32">
                <declaration name="differentiator" type="FiniteDifferencesDifferentiator" line="33"/>
                <anonymous_class line="34">
                    <method name="value" type="double" line="35">
                        <params>
                            <param name="x" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="f" type="UnivariateDifferentiableFunction" line="34"/>
                <scope line="40">
                    <declaration name="y" type="DerivativeStructure" line="41"/>
                </scope>
            </method>
            <method name="testLinear" type="void" line="47">
                <declaration name="differentiator" type="FiniteDifferencesDifferentiator" line="48"/>
                <anonymous_class line="49">
                    <method name="value" type="double" line="50">
                        <params>
                            <param name="x" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="f" type="UnivariateDifferentiableFunction" line="49"/>
                <scope line="55">
                    <declaration name="y" type="DerivativeStructure" line="56"/>
                </scope>
            </method>
            <method name="testGaussian" type="void" line="62">
                <declaration name="differentiator" type="FiniteDifferencesDifferentiator" line="63"/>
                <declaration name="gaussian" type="UnivariateDifferentiableFunction" line="64"/>
                <declaration name="f" type="UnivariateDifferentiableFunction" line="65"/>
                <declaration name="expectedError" type="double[]" line="66"/>
                <declaration name="maxError" type="double[]" line="67"/>
                <scope line="68">
                    <declaration name="dsX" type="DerivativeStructure" line="69"/>
                    <declaration name="yRef" type="DerivativeStructure" line="70"/>
                    <declaration name="y" type="DerivativeStructure" line="71"/>
                    <scope line="73"/>
                </scope>
                <scope line="77"/>
            </method>
            <method name="testStepSizeUnstability" type="void" line="81">
                <declaration name="quintic" type="UnivariateDifferentiableFunction" line="82"/>
                <declaration name="goodStep" type="UnivariateDifferentiableFunction" line="83"/>
                <declaration name="badStep" type="UnivariateDifferentiableFunction" line="84"/>
                <declaration name="maxErrorGood" type="double[]" line="85"/>
                <declaration name="maxErrorBad" type="double[]" line="86"/>
                <scope line="87">
                    <declaration name="dsX" type="DerivativeStructure" line="88"/>
                    <declaration name="yRef" type="DerivativeStructure" line="89"/>
                    <declaration name="yGood" type="DerivativeStructure" line="90"/>
                    <declaration name="yBad" type="DerivativeStructure" line="91"/>
                    <scope line="92"/>
                </scope>
                <declaration name="expectedGood" type="double[]" line="97"/>
                <declaration name="expectedBad" type="double[]" line="98"/>
                <scope line="99"/>
            </method>
            <method name="testWrongOrder" type="void" line="104">
                <anonymous_class line="105">
                    <method name="value" type="double" line="106">
                        <params>
                            <param name="x" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="f" type="UnivariateDifferentiableFunction" line="105"/>
            </method>
            <method name="testWrongOrderVector" type="void" line="113">
                <anonymous_class line="114">
                    <method name="value" type="double[]" line="115">
                        <params>
                            <param name="x" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="f" type="UnivariateDifferentiableVectorFunction" line="114"/>
            </method>
            <method name="testWrongOrderMatrix" type="void" line="122">
                <anonymous_class line="123">
                    <method name="value" type="double[][]" line="124">
                        <params>
                            <param name="x" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="f" type="UnivariateDifferentiableMatrixFunction" line="123"/>
            </method>
            <method name="testTooLargeStep" type="void" line="131"/>
            <method name="testBounds" type="void" line="134">
                <declaration name="slope" type="double" line="135"/>
                <anonymous_class line="136">
                    <method name="value" type="double" line="137">
                        <params>
                            <param name="x" type="double"/>
                        </params>
                        <scope line="138"/>
                        <scope line="141"/>
                        <scope line="144"/>
                    </method>
                </anonymous_class>
                <declaration name="f" type="UnivariateFunction" line="136"/>
                <declaration name="missingBounds" type="UnivariateDifferentiableFunction" line="150"/>
                <declaration name="properlyBounded" type="UnivariateDifferentiableFunction" line="151"/>
                <declaration name="tLow" type="DerivativeStructure" line="152"/>
                <declaration name="tHigh" type="DerivativeStructure" line="153"/>
                <scope line="154"/>
                <scope line="158"/>
                <scope line="161"/>
                <scope line="164"/>
                <scope line="168"/>
                <scope line="171"/>
            </method>
            <method name="testBoundedSqrt" type="void" line="177">
                <declaration name="differentiator" type="UnivariateFunctionDifferentiator" line="178"/>
                <anonymous_class line="179">
                    <method name="value" type="double" line="180">
                        <params>
                            <param name="x" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="sqrt" type="UnivariateDifferentiableFunction" line="179"/>
                <declaration name="t001" type="DerivativeStructure" line="185"/>
                <declaration name="t01" type="DerivativeStructure" line="187"/>
                <declaration name="t03" type="DerivativeStructure" line="189"/>
            </method>
            <method name="testVectorFunction" type="void" line="192">
                <declaration name="differentiator" type="FiniteDifferencesDifferentiator" line="193"/>
                <anonymous_class line="194">
                    <method name="value" type="double[]" line="195">
                        <params>
                            <param name="x" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="f" type="UnivariateDifferentiableVectorFunction" line="194"/>
                <scope line="200">
                    <declaration name="dsX" type="DerivativeStructure" line="201"/>
                    <declaration name="y" type="DerivativeStructure[]" line="202"/>
                    <declaration name="cos" type="double" line="203"/>
                    <declaration name="sin" type="double" line="204"/>
                    <declaration name="f1" type="double[]" line="205"/>
                    <declaration name="f2" type="DerivativeStructure[]" line="206"/>
                    <scope line="208"/>
                </scope>
            </method>
            <method name="testMatrixFunction" type="void" line="219">
                <declaration name="differentiator" type="FiniteDifferencesDifferentiator" line="220"/>
                <anonymous_class line="221">
                    <method name="value" type="double[][]" line="222">
                        <params>
                            <param name="x" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="f" type="UnivariateDifferentiableMatrixFunction" line="221"/>
                <scope line="227">
                    <declaration name="dsX" type="DerivativeStructure" line="228"/>
                    <declaration name="y" type="DerivativeStructure[][]" line="229"/>
                    <declaration name="cos" type="double" line="230"/>
                    <declaration name="sin" type="double" line="231"/>
                    <declaration name="cosh" type="double" line="232"/>
                    <declaration name="sinh" type="double" line="233"/>
                    <declaration name="f1" type="double[][]" line="234"/>
                    <declaration name="f2" type="DerivativeStructure[][]" line="235"/>
                    <scope line="237">
                        <scope line="239"/>
                    </scope>
                </scope>
            </method>
            <method name="testSeveralFreeParameters" type="void" line="257">
                <declaration name="differentiator" type="FiniteDifferencesDifferentiator" line="258"/>
                <declaration name="sine" type="UnivariateDifferentiableFunction" line="259"/>
                <declaration name="f" type="UnivariateDifferentiableFunction" line="260"/>
                <declaration name="expectedError" type="double[]" line="261"/>
                <declaration name="maxError" type="double[]" line="262"/>
                <scope line="263">
                    <scope line="264">
                        <declaration name="dsX" type="DerivativeStructure" line="265"/>
                        <declaration name="dsY" type="DerivativeStructure" line="266"/>
                        <declaration name="dsT" type="DerivativeStructure" line="267"/>
                        <declaration name="sRef" type="DerivativeStructure" line="268"/>
                        <declaration name="s" type="DerivativeStructure" line="269"/>
                        <scope line="270">
                            <scope line="271">
                                <scope line="272"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="279"/>
            </method>
        </class>
    </source>