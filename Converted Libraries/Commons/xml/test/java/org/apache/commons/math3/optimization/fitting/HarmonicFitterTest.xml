<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optimization.fitting">
        <import package="java.util.Random"/>
        <import package="org.apache.commons.math3.analysis.function.HarmonicOscillator"/>
        <import package="org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalStateException"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <import package="org.junit.Test"/>
        <import package="org.junit.Assert"/>
        <class name="HarmonicFitterTest" line="32">
            <comment line="42">
                This test fails (throwing &quot;ConvergenceException&quot; instead).                
            </comment>
            <comment line="43">
                @Test(expected=ZeroException.class)                
            </comment>
            <comment line="44">
                public void testPreconditions2() {                
            </comment>
            <comment line="45">
                HarmonicFitter fitter =                
            </comment>
            <comment line="46">
                new HarmonicFitter(new LevenbergMarquardtOptimizer());                
            </comment>
            <comment line="48">
                final double x = 1.2;                
            </comment>
            <comment line="49">
                fitter.addObservedPoint(1, x, 1);                
            </comment>
            <comment line="50">
                fitter.addObservedPoint(1, x, -1);                
            </comment>
            <comment line="51">
                fitter.addObservedPoint(1, x, 0.5);                
            </comment>
            <comment line="52">
                fitter.addObservedPoint(1, x, 0);                
            </comment>
            <comment line="54">
                final double[] fitted = fitter.fit();                
            </comment>
            <comment line="55">
                }                
            </comment>
            <method name="testPreconditions1" type="void" line="34">
                <declaration name="fitter" type="HarmonicFitter" line="35"/>
            </method>
            <method name="testNoError" type="void" line="57">
                <declaration name="a" type="double" line="58"/>
                <declaration name="w" type="double" line="59"/>
                <declaration name="p" type="double" line="60"/>
                <declaration name="f" type="HarmonicOscillator" line="61"/>
                <declaration name="fitter" type="HarmonicFitter" line="63"/>
                <scope line="65"/>
                <declaration name="fitted" type="double[]" line="69"/>
                <declaration name="ff" type="HarmonicOscillator" line="74"/>
                <scope line="76"/>
            </method>
            <method name="test1PercentError" type="void" line="82">
                <declaration name="randomizer" type="Random" line="83"/>
                <declaration name="a" type="double" line="84"/>
                <declaration name="w" type="double" line="85"/>
                <declaration name="p" type="double" line="86"/>
                <declaration name="f" type="HarmonicOscillator" line="87"/>
                <declaration name="fitter" type="HarmonicFitter" line="89"/>
                <scope line="91"/>
                <declaration name="fitted" type="double[]" line="96"/>
            </method>
            <method name="testTinyVariationsData" type="void" line="103">
                <comment line="113">
                    This test serves to cover the part of the code of &quot;guessAOmega&quot;                    
                </comment>
                <comment line="114">
                    when the algorithm using integrals fails.                    
                </comment>
                <declaration name="randomizer" type="Random" line="104"/>
                <declaration name="fitter" type="HarmonicFitter" line="106"/>
                <scope line="108"/>
            </method>
            <method name="testInitialGuess" type="void" line="118">
                <declaration name="randomizer" type="Random" line="119"/>
                <declaration name="a" type="double" line="120"/>
                <declaration name="w" type="double" line="121"/>
                <declaration name="p" type="double" line="122"/>
                <declaration name="f" type="HarmonicOscillator" line="123"/>
                <declaration name="fitter" type="HarmonicFitter" line="125"/>
                <scope line="127"/>
                <declaration name="fitted" type="double[]" line="132"/>
            </method>
            <method name="testUnsorted" type="void" line="139">
                <comment line="149">
                    build a regularly spaced array of measurements                    
                </comment>
                <comment line="158">
                    shake it                    
                </comment>
                <comment line="170">
                    pass it to the fitter                    
                </comment>
                <declaration name="randomizer" type="Random" line="140"/>
                <declaration name="a" type="double" line="141"/>
                <declaration name="w" type="double" line="142"/>
                <declaration name="p" type="double" line="143"/>
                <declaration name="f" type="HarmonicOscillator" line="144"/>
                <declaration name="fitter" type="HarmonicFitter" line="146"/>
                <declaration name="size" type="int" line="150"/>
                <declaration name="xTab" type="double[]" line="151"/>
                <declaration name="yTab" type="double[]" line="152"/>
                <scope line="153"/>
                <scope line="159">
                    <declaration name="i1" type="int" line="160"/>
                    <declaration name="i2" type="int" line="161"/>
                    <declaration name="xTmp" type="double" line="162"/>
                    <declaration name="yTmp" type="double" line="163"/>
                </scope>
                <scope line="171"/>
                <declaration name="fitted" type="double[]" line="175"/>
            </method>
            <method name="testMath844" type="void" line="182">
                <comment line="194">
                    The guesser fails because the function is far from an harmonic                    
                </comment>
                <comment line="195">
                    function: It is a triangular periodic function with amplitude 3                    
                </comment>
                <comment line="196">
                    and period 12, and all sample points are taken at integer abscissae                    
                </comment>
                <comment line="197">
                    so function values all belong to the integer subset {-3, -2, -1, 0,                    
                </comment>
                <comment line="198">
                    1, 2, 3}.                    
                </comment>
                <declaration name="y" type="double[]" line="183"/>
                <declaration name="len" type="int" line="188"/>
                <declaration name="points" type="WeightedObservedPoint[]" line="189"/>
                <scope line="190"/>
                <declaration name="guesser" type="HarmonicFitter.ParameterGuesser" line="199"/>
            </method>
        </class>
    </source>