<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.complex">
        <import package="java.util.Random"/>
        <import package="org.apache.commons.math3.complex.Quaternion"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.ZeroException"/>
        <import package="org.apache.commons.math3.geometry.euclidean.threed.Rotation"/>
        <import package="org.apache.commons.math3.geometry.euclidean.threed.Vector3D"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Test"/>
        <import package="org.junit.Assert"/>
        <class name="QuaternionTest" line="11">
            <declaration name="EPS" type="double" line="12"/>
            <javadoc line="12">
                Epsilon for double comparison.                
            </javadoc>
            <declaration name="COMPARISON_EPS" type="double" line="16"/>
            <javadoc line="16">
                Epsilon for double comparison.                
            </javadoc>
            <method name="testAccessors1" type="void" line="20">
                <declaration name="q0" type="double" line="21"/>
                <declaration name="q1" type="double" line="22"/>
                <declaration name="q2" type="double" line="23"/>
                <declaration name="q3" type="double" line="24"/>
                <declaration name="q" type="Quaternion" line="25"/>
            </method>
            <method name="testAccessors2" type="void" line="31">
                <declaration name="q0" type="double" line="32"/>
                <declaration name="q1" type="double" line="33"/>
                <declaration name="q2" type="double" line="34"/>
                <declaration name="q3" type="double" line="35"/>
                <declaration name="q" type="Quaternion" line="36"/>
                <declaration name="sP" type="double" line="37"/>
                <declaration name="vP" type="double[]" line="38"/>
            </method>
            <method name="testAccessors3" type="void" line="44">
                <declaration name="q0" type="double" line="45"/>
                <declaration name="q1" type="double" line="46"/>
                <declaration name="q2" type="double" line="47"/>
                <declaration name="q3" type="double" line="48"/>
                <declaration name="q" type="Quaternion" line="49"/>
                <declaration name="sP" type="double" line="50"/>
                <declaration name="vP" type="double[]" line="51"/>
            </method>
            <method name="testWrongDimension" type="void" line="57"/>
            <method name="testConjugate" type="void" line="60">
                <declaration name="q0" type="double" line="61"/>
                <declaration name="q1" type="double" line="62"/>
                <declaration name="q2" type="double" line="63"/>
                <declaration name="q3" type="double" line="64"/>
                <declaration name="q" type="Quaternion" line="65"/>
                <declaration name="qConjugate" type="Quaternion" line="66"/>
            </method>
            <method name="testProductQuaternionQuaternion" type="void" line="72">
                <declaration name="qA" type="Quaternion" line="73"/>
                <declaration name="qB" type="Quaternion" line="74"/>
                <declaration name="qResult" type="Quaternion" line="75"/>
                <declaration name="vectorA" type="Vector3D" line="80"/>
                <declaration name="vectorB" type="Vector3D" line="81"/>
                <declaration name="vectorResult" type="Vector3D" line="82"/>
                <declaration name="scalarPartRef" type="double" line="83"/>
                <declaration name="vectorPartRef" type="Vector3D" line="85"/>
                <declaration name="norm" type="double" line="86"/>
                <declaration name="conjugateOfProduct" type="Quaternion" line="88"/>
                <declaration name="productOfConjugate" type="Quaternion" line="89"/>
            </method>
            <method name="testProductQuaternionVector" type="void" line="95">
                <declaration name="quaternion" type="Quaternion" line="96"/>
                <declaration name="vector" type="double[]" line="97"/>
                <declaration name="qResultQxV" type="Quaternion" line="98"/>
                <declaration name="vectorQ" type="double[]" line="103"/>
                <declaration name="vectorResultQxV" type="double[]" line="104"/>
                <declaration name="scalarPartRefQxV" type="double" line="105"/>
                <declaration name="vectorPartRefQxV" type="Vector3D" line="107"/>
                <declaration name="normQxV" type="double" line="108"/>
                <declaration name="qResultVxQ" type="Quaternion" line="110"/>
                <declaration name="vectorResultVxQ" type="double[]" line="115"/>
                <declaration name="scalarPartRefVxQ" type="double" line="116"/>
                <declaration name="vectorPartRefVxQ" type="Vector3D" line="118"/>
                <declaration name="normVxQ" type="double" line="119"/>
            </method>
            <method name="testDotProductQuaternionQuaternion" type="void" line="122">
                <declaration name="expected" type="double" line="123"/>
                <declaration name="q1" type="Quaternion" line="124"/>
                <declaration name="q2" type="Quaternion" line="125"/>
                <declaration name="actual1" type="double" line="126"/>
                <declaration name="actual2" type="double" line="127"/>
            </method>
            <method name="testScalarMultiplyDouble" type="void" line="131">
                <declaration name="w" type="double" line="132"/>
                <declaration name="x" type="double" line="133"/>
                <declaration name="y" type="double" line="134"/>
                <declaration name="z" type="double" line="135"/>
                <declaration name="q1" type="Quaternion" line="136"/>
                <declaration name="a" type="double" line="137"/>
                <declaration name="q" type="Quaternion" line="138"/>
            </method>
            <method name="testAddQuaternionQuaternion" type="void" line="144">
                <declaration name="w" type="double" line="145"/>
                <declaration name="x" type="double" line="146"/>
                <declaration name="y" type="double" line="147"/>
                <declaration name="z" type="double" line="148"/>
                <declaration name="q1" type="Quaternion" line="149"/>
                <declaration name="q2" type="Quaternion" line="150"/>
                <declaration name="qa" type="Quaternion" line="151"/>
                <declaration name="qb" type="Quaternion" line="152"/>
            </method>
            <method name="testSubtractQuaternionQuaternion" type="void" line="162">
                <declaration name="w" type="double" line="163"/>
                <declaration name="x" type="double" line="164"/>
                <declaration name="y" type="double" line="165"/>
                <declaration name="z" type="double" line="166"/>
                <declaration name="q1" type="Quaternion" line="167"/>
                <declaration name="q2" type="Quaternion" line="168"/>
                <declaration name="qa" type="Quaternion" line="169"/>
                <declaration name="qb" type="Quaternion" line="170"/>
            </method>
            <method name="testNorm" type="void" line="180">
                <declaration name="q0" type="double" line="181"/>
                <declaration name="q1" type="double" line="182"/>
                <declaration name="q2" type="double" line="183"/>
                <declaration name="q3" type="double" line="184"/>
                <declaration name="q" type="Quaternion" line="185"/>
                <declaration name="norm" type="double" line="186"/>
                <declaration name="normSquareRef" type="double" line="188"/>
            </method>
            <method name="testNormalize" type="void" line="191">
                <declaration name="q" type="Quaternion" line="192"/>
                <declaration name="versor" type="Quaternion" line="193"/>
            </method>
            <method name="testNormalizeFail" type="void" line="200">
                <declaration name="zeroQ" type="Quaternion" line="201"/>
            </method>
            <method name="testObjectEquals" type="void" line="204">
                <declaration name="one" type="double" line="205"/>
                <declaration name="q1" type="Quaternion" line="206"/>
                <declaration name="q2" type="Quaternion" line="208"/>
                <declaration name="q3" type="Quaternion" line="210"/>
            </method>
            <method name="testQuaternionEquals" type="void" line="213">
                <declaration name="inc" type="double" line="214"/>
                <declaration name="q1" type="Quaternion" line="215"/>
                <declaration name="q2" type="Quaternion" line="216"/>
                <declaration name="q3" type="Quaternion" line="217"/>
                <declaration name="q4" type="Quaternion" line="218"/>
                <declaration name="q5" type="Quaternion" line="219"/>
            </method>
            <method name="testQuaternionEquals2" type="void" line="229">
                <declaration name="q1" type="Quaternion" line="230"/>
                <declaration name="gap" type="double" line="231"/>
                <declaration name="q2" type="Quaternion" line="232"/>
            </method>
            <method name="testIsUnitQuaternion" type="void" line="237">
                <declaration name="r" type="Random" line="238"/>
                <declaration name="numberOfTrials" type="int" line="239"/>
                <scope line="240">
                    <declaration name="q1" type="Quaternion" line="241"/>
                    <declaration name="q2" type="Quaternion" line="242"/>
                </scope>
                <declaration name="q" type="Quaternion" line="245"/>
            </method>
            <method name="testIsPureQuaternion" type="void" line="248">
                <declaration name="q1" type="Quaternion" line="249"/>
                <declaration name="q2" type="Quaternion" line="251"/>
                <declaration name="q3" type="Quaternion" line="253"/>
                <declaration name="r" type="Random" line="255"/>
                <declaration name="v" type="double[]" line="256"/>
                <declaration name="q4" type="Quaternion" line="257"/>
                <declaration name="q5" type="Quaternion" line="259"/>
            </method>
            <method name="testPolarForm" type="void" line="262">
                <declaration name="r" type="Random" line="263"/>
                <declaration name="numberOfTrials" type="int" line="264"/>
                <scope line="265">
                    <declaration name="q" type="Quaternion" line="266"/>
                    <declaration name="qP" type="Quaternion" line="267"/>
                    <declaration name="rot" type="Rotation" line="270"/>
                    <declaration name="rotP" type="Rotation" line="271"/>
                </scope>
            </method>
            <method name="testGetInverse" type="void" line="278">
                <declaration name="q" type="Quaternion" line="279"/>
                <declaration name="inverseQ" type="Quaternion" line="280"/>
                <declaration name="product" type="Quaternion" line="285"/>
                <declaration name="qNul" type="Quaternion" line="290"/>
                <scope line="291">
                    <declaration name="inverseQNul" type="Quaternion" line="292"/>
                </scope>
                <scope line="295"/>
            </method>
            <method name="testToString" type="void" line="298">
                <declaration name="q" type="Quaternion" line="299"/>
            </method>
        </class>
    </source>