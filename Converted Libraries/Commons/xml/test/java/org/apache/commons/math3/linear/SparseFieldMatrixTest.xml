<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="org.junit.Test"/>
        <import package="org.junit.Assert"/>
        <import package="org.apache.commons.math3.Field"/>
        <import package="org.apache.commons.math3.fraction.Fraction"/>
        <import package="org.apache.commons.math3.fraction.FractionConversionException"/>
        <import package="org.apache.commons.math3.fraction.FractionField"/>
        <import package="org.apache.commons.math3.exception.NoDataException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <class name="SparseFieldMatrixTest" line="13">
            <javadoc line="13">
                Test cases for the {@link SparseFieldMatrix} class.                
                <version>
                    $Id: SparseFieldMatrixTest.java 1364030 2012-07-21 01:10:04Z erans $                    
                </version>
            </javadoc>
            <declaration name="id" type="Fraction[][]" line="18"/>
            <declaration name="testData" type="Fraction[][]" line="19"/>
            <declaration name="testDataLU" type="Fraction[][]" line="20"/>
            <declaration name="testDataPlus2" type="Fraction[][]" line="21"/>
            <declaration name="testDataMinus" type="Fraction[][]" line="22"/>
            <declaration name="testDataRow1" type="Fraction[]" line="23"/>
            <declaration name="testDataCol3" type="Fraction[]" line="24"/>
            <declaration name="testDataInv" type="Fraction[][]" line="25"/>
            <declaration name="preMultTest" type="Fraction[]" line="26"/>
            <declaration name="testData2" type="Fraction[][]" line="27"/>
            <declaration name="testData2T" type="Fraction[][]" line="28"/>
            <declaration name="testDataPlusInv" type="Fraction[][]" line="29"/>
            <declaration name="luData" type="Fraction[][]" line="30"/>
            <declaration name="luDataLUDecomposition" type="Fraction[][]" line="31"/>
            <declaration name="singular" type="Fraction[][]" line="32"/>
            <declaration name="bigSingular" type="Fraction[][]" line="33"/>
            <declaration name="detData" type="Fraction[][]" line="34"/>
            <declaration name="detData2" type="Fraction[][]" line="35"/>
            <declaration name="testVector" type="Fraction[]" line="36"/>
            <declaration name="testVector2" type="Fraction[]" line="37"/>
            <declaration name="subTestData" type="Fraction[][]" line="38"/>
            <declaration name="subRows02Cols13" type="Fraction[][]" line="39"/>
            <declaration name="subRows03Cols12" type="Fraction[][]" line="40"/>
            <declaration name="subRows03Cols123" type="Fraction[][]" line="41"/>
            <declaration name="subRows20Cols123" type="Fraction[][]" line="42"/>
            <declaration name="subRows31Cols31" type="Fraction[][]" line="43"/>
            <declaration name="subRows01Cols23" type="Fraction[][]" line="44"/>
            <declaration name="subRows23Cols00" type="Fraction[][]" line="45"/>
            <declaration name="subRows00Cols33" type="Fraction[][]" line="46"/>
            <declaration name="subRow0" type="Fraction[][]" line="47"/>
            <declaration name="subRow3" type="Fraction[][]" line="48"/>
            <declaration name="subColumn1" type="Fraction[][]" line="49"/>
            <declaration name="subColumn3" type="Fraction[][]" line="50"/>
            <declaration name="entryTolerance" type="double" line="51"/>
            <declaration name="normTolerance" type="double" line="52"/>
            <declaration name="field" type="Field&lt;Fraction&gt;" line="53"/>
            <method name="SparseFieldMatrixTest" type="constructor" line="54">
                <scope line="55"/>
                <scope line="64"/>
            </method>
            <javadoc line="67">
                test dimensions                
            </javadoc>
            <method name="testDimensions" type="void" line="70">
                <declaration name="m" type="SparseFieldMatrix&lt;Fraction&gt;" line="71"/>
                <declaration name="m2" type="SparseFieldMatrix&lt;Fraction&gt;" line="72"/>
            </method>
            <javadoc line="80">
                test copy functions                
            </javadoc>
            <method name="testCopyFunctions" type="void" line="83">
                <declaration name="m1" type="SparseFieldMatrix&lt;Fraction&gt;" line="84"/>
                <declaration name="m2" type="FieldMatrix&lt;Fraction&gt;" line="85"/>
                <declaration name="m3" type="SparseFieldMatrix&lt;Fraction&gt;" line="88"/>
                <declaration name="m4" type="FieldMatrix&lt;Fraction&gt;" line="89"/>
            </method>
            <javadoc line="93">
                test add                
            </javadoc>
            <method name="testAdd" type="void" line="96">
                <declaration name="m" type="SparseFieldMatrix&lt;Fraction&gt;" line="97"/>
                <declaration name="mInv" type="SparseFieldMatrix&lt;Fraction&gt;" line="98"/>
                <declaration name="mDataPlusInv" type="SparseFieldMatrix&lt;Fraction&gt;" line="99"/>
                <declaration name="mPlusMInv" type="FieldMatrix&lt;Fraction&gt;" line="100"/>
                <scope line="101">
                    <scope line="102"/>
                </scope>
            </method>
            <javadoc line="107">
                test add failure                
            </javadoc>
            <method name="testAddFail" type="void" line="110">
                <declaration name="m" type="SparseFieldMatrix&lt;Fraction&gt;" line="111"/>
                <declaration name="m2" type="SparseFieldMatrix&lt;Fraction&gt;" line="112"/>
                <scope line="113"/>
                <scope line="117"/>
            </method>
            <javadoc line="120">
                test m-n = m + -n                
            </javadoc>
            <method name="testPlusMinus" type="void" line="123">
                <declaration name="m" type="SparseFieldMatrix&lt;Fraction&gt;" line="124"/>
                <declaration name="n" type="SparseFieldMatrix&lt;Fraction&gt;" line="125"/>
                <scope line="127"/>
                <scope line="131"/>
            </method>
            <javadoc line="134">
                test multiply                
            </javadoc>
            <method name="testMultiply" type="void" line="137">
                <declaration name="m" type="SparseFieldMatrix&lt;Fraction&gt;" line="138"/>
                <declaration name="mInv" type="SparseFieldMatrix&lt;Fraction&gt;" line="139"/>
                <declaration name="identity" type="SparseFieldMatrix&lt;Fraction&gt;" line="140"/>
                <declaration name="m2" type="SparseFieldMatrix&lt;Fraction&gt;" line="141"/>
                <scope line="148"/>
                <scope line="152"/>
            </method>
            <declaration name="d3" type="Fraction[][]" line="155"/>
            <declaration name="d4" type="Fraction[][]" line="156"/>
            <declaration name="d5" type="Fraction[][]" line="157"/>
            <method name="testMultiply2" type="void" line="158">
                <declaration name="m3" type="FieldMatrix&lt;Fraction&gt;" line="159"/>
                <declaration name="m4" type="FieldMatrix&lt;Fraction&gt;" line="160"/>
                <declaration name="m5" type="FieldMatrix&lt;Fraction&gt;" line="161"/>
            </method>
            <javadoc line="164">
                test trace                
            </javadoc>
            <method name="testTrace" type="void" line="167">
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="168"/>
                <scope line="171"/>
                <scope line="175"/>
            </method>
            <javadoc line="178">
                test sclarAdd                
            </javadoc>
            <method name="testScalarAdd" type="void" line="181">
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="182"/>
            </method>
            <javadoc line="185">
                test operate                
            </javadoc>
            <method name="testOperate" type="void" line="188">
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="189"/>
                <scope line="193"/>
                <scope line="197"/>
            </method>
            <javadoc line="200">
                test issue MATH-209                
            </javadoc>
            <method name="testMath209" type="void" line="203">
                <declaration name="a" type="FieldMatrix&lt;Fraction&gt;" line="204"/>
                <declaration name="b" type="Fraction[]" line="205"/>
            </method>
            <javadoc line="211">
                test transpose                
            </javadoc>
            <method name="testTranspose" type="void" line="214">
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="215"/>
                <declaration name="mIT" type="FieldMatrix&lt;Fraction&gt;" line="216"/>
                <declaration name="mTI" type="FieldMatrix&lt;Fraction&gt;" line="217"/>
                <declaration name="mt" type="FieldMatrix&lt;Fraction&gt;" line="220"/>
            </method>
            <javadoc line="223">
                test preMultiply by vector                
            </javadoc>
            <method name="testPremultiplyVector" type="void" line="226">
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="227"/>
                <scope line="231"/>
                <scope line="235"/>
            </method>
            <method name="testPremultiply" type="void" line="238">
                <declaration name="m3" type="FieldMatrix&lt;Fraction&gt;" line="239"/>
                <declaration name="m4" type="FieldMatrix&lt;Fraction&gt;" line="240"/>
                <declaration name="m5" type="FieldMatrix&lt;Fraction&gt;" line="241"/>
                <declaration name="m" type="SparseFieldMatrix&lt;Fraction&gt;" line="243"/>
                <declaration name="mInv" type="SparseFieldMatrix&lt;Fraction&gt;" line="244"/>
                <declaration name="identity" type="SparseFieldMatrix&lt;Fraction&gt;" line="245"/>
                <scope line="250"/>
                <scope line="254"/>
            </method>
            <method name="testGetVectors" type="void" line="257">
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="258"/>
                <scope line="261"/>
                <scope line="265"/>
                <scope line="267"/>
                <scope line="271"/>
            </method>
            <method name="testGetEntry" type="void" line="274">
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="275"/>
                <scope line="277"/>
                <scope line="281"/>
            </method>
            <javadoc line="284">
                test examples in user guide                
            </javadoc>
            <method name="testExamples" type="void" line="287">
                <declaration name="matrixData" type="Fraction[][]" line="288"/>
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="289"/>
                <declaration name="matrixData2" type="Fraction[][]" line="290"/>
                <declaration name="n" type="FieldMatrix&lt;Fraction&gt;" line="291"/>
                <declaration name="p" type="FieldMatrix&lt;Fraction&gt;" line="292"/>
                <declaration name="pInverse" type="FieldMatrix&lt;Fraction&gt;" line="295"/>
                <declaration name="coefficientsData" type="Fraction[][]" line="298"/>
                <declaration name="coefficients" type="FieldMatrix&lt;Fraction&gt;" line="299"/>
                <declaration name="constants" type="Fraction[]" line="300"/>
                <declaration name="solution" type="Fraction[]" line="301"/>
            </method>
            <method name="testSubMatrix" type="void" line="307">
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="308"/>
                <declaration name="mRows23Cols00" type="FieldMatrix&lt;Fraction&gt;" line="309"/>
                <declaration name="mRows00Cols33" type="FieldMatrix&lt;Fraction&gt;" line="310"/>
                <declaration name="mRows01Cols23" type="FieldMatrix&lt;Fraction&gt;" line="311"/>
                <declaration name="mRows02Cols13" type="FieldMatrix&lt;Fraction&gt;" line="312"/>
                <declaration name="mRows03Cols12" type="FieldMatrix&lt;Fraction&gt;" line="313"/>
                <declaration name="mRows03Cols123" type="FieldMatrix&lt;Fraction&gt;" line="314"/>
                <declaration name="mRows20Cols123" type="FieldMatrix&lt;Fraction&gt;" line="315"/>
                <declaration name="mRows31Cols31" type="FieldMatrix&lt;Fraction&gt;" line="316"/>
                <scope line="326"/>
                <scope line="330"/>
                <scope line="332"/>
                <scope line="336"/>
                <scope line="338"/>
                <scope line="342"/>
                <scope line="344"/>
                <scope line="348"/>
                <scope line="350"/>
                <scope line="354"/>
                <scope line="356"/>
                <scope line="360"/>
            </method>
            <method name="testGetRowMatrix" type="void" line="363">
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="364"/>
                <declaration name="mRow0" type="FieldMatrix&lt;Fraction&gt;" line="365"/>
                <declaration name="mRow3" type="FieldMatrix&lt;Fraction&gt;" line="366"/>
                <scope line="369"/>
                <scope line="373"/>
                <scope line="375"/>
                <scope line="379"/>
            </method>
            <method name="testGetColumnMatrix" type="void" line="382">
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="383"/>
                <declaration name="mColumn1" type="FieldMatrix&lt;Fraction&gt;" line="384"/>
                <declaration name="mColumn3" type="FieldMatrix&lt;Fraction&gt;" line="385"/>
                <scope line="388"/>
                <scope line="392"/>
                <scope line="394"/>
                <scope line="398"/>
            </method>
            <method name="testGetRowVector" type="void" line="401">
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="402"/>
                <declaration name="mRow0" type="FieldVector&lt;Fraction&gt;" line="403"/>
                <declaration name="mRow3" type="FieldVector&lt;Fraction&gt;" line="404"/>
                <scope line="407"/>
                <scope line="411"/>
                <scope line="413"/>
                <scope line="417"/>
            </method>
            <method name="testGetColumnVector" type="void" line="420">
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="421"/>
                <declaration name="mColumn1" type="FieldVector&lt;Fraction&gt;" line="422"/>
                <declaration name="mColumn3" type="FieldVector&lt;Fraction&gt;" line="423"/>
                <scope line="426"/>
                <scope line="430"/>
                <scope line="432"/>
                <scope line="436"/>
            </method>
            <method name="columnToVector" type="FieldVector<Fraction>" line="439">
                <params>
                    <param name="column" type="Fraction[][]"/>
                </params>
                <declaration name="data" type="Fraction[]" line="440"/>
                <scope line="441"/>
            </method>
            <method name="testEqualsAndHashCode" type="void" line="446">
                <declaration name="m" type="SparseFieldMatrix&lt;Fraction&gt;" line="447"/>
                <declaration name="m1" type="SparseFieldMatrix&lt;Fraction&gt;" line="448"/>
                <declaration name="mt" type="SparseFieldMatrix&lt;Fraction&gt;" line="449"/>
            </method>
            <method name="testSetSubMatrix" type="void" line="458">
                <declaration name="m" type="SparseFieldMatrix&lt;Fraction&gt;" line="459"/>
                <declaration name="expected" type="FieldMatrix&lt;Fraction&gt;" line="461"/>
                <declaration name="matrix" type="SparseFieldMatrix&lt;Fraction&gt;" line="469"/>
                <scope line="473"/>
                <scope line="477"/>
                <scope line="479"/>
                <scope line="483"/>
                <scope line="485"/>
                <scope line="489"/>
                <scope line="491"/>
                <scope line="495"/>
                <scope line="497"/>
                <scope line="501"/>
                <scope line="503"/>
                <scope line="507"/>
                <scope line="509"/>
                <scope line="513"/>
            </method>
            <javadoc line="516">
                verifies that two matrices are close (1-norm)                
            </javadoc>
            <method name="assertClose" type="void" line="519">
                <params>
                    <param name="msg" type="String"/>
                    <param name="m" type="FieldMatrix<Fraction>"/>
                    <param name="n" type="FieldMatrix<Fraction>"/>
                    <param name="tolerance" type="double"/>
                </params>
                <scope line="520">
                    <scope line="521"/>
                </scope>
            </method>
            <javadoc line="526">
                verifies that two vectors are close (sup norm)                
            </javadoc>
            <method name="assertClose" type="void" line="529">
                <params>
                    <param name="msg" type="String"/>
                    <param name="m" type="Fraction[]"/>
                    <param name="n" type="Fraction[]"/>
                    <param name="tolerance" type="double"/>
                </params>
                <scope line="530"/>
                <scope line="533"/>
            </method>
            <method name="createSparseMatrix" type="SparseFieldMatrix<Fraction>" line="537">
                <params>
                    <param name="data" type="Fraction[][]"/>
                </params>
                <declaration name="matrix" type="SparseFieldMatrix&lt;Fraction&gt;" line="538"/>
                <scope line="539">
                    <scope line="540"/>
                </scope>
            </method>
        </class>
    </source>