<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="org.junit.Test"/>
        <import package="org.junit.Assert"/>
        <import package="org.apache.commons.math3.Field"/>
        <import package="org.apache.commons.math3.fraction.Fraction"/>
        <import package="org.apache.commons.math3.fraction.FractionConversionException"/>
        <import package="org.apache.commons.math3.fraction.FractionField"/>
        <import package="org.apache.commons.math3.exception.NoDataException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <class name="SparseFieldMatrixTest" line="32">
            <comment line="39">
                3 x 3 identity matrix                
            </comment>
            <comment line="41">
                Test data for group operations                
            </comment>
            <comment line="59">
                lu decomposition tests                
            </comment>
            <comment line="63">
                singular matrices                
            </comment>
            <comment line="66">
                4th                
            </comment>
            <comment line="68">
                row
                 =
                 1st
                 +
                 2nd                
            </comment>
            <comment line="77">
                vectors                
            </comment>
            <comment line="81">
                submatrix accessor tests                
            </comment>
            <comment line="84">
                array selections                
            </comment>
            <comment line="89">
                effective permutations                
            </comment>
            <comment line="93">
                contiguous ranges                
            </comment>
            <comment line="98">
                row matrices                
            </comment>
            <comment line="102">
                column matrices                
            </comment>
            <comment line="106">
                tolerances                
            </comment>
            <comment line="226">
                Additional Test for Array2DRowRealMatrixTest.testMultiply                
            </comment>
            <comment line="413">
                test submatrix accessors                
            </comment>
            <comment line="585">
                Disable for now
                @Test
                public void testToString() {
                SparseFieldMatrix&lt;Fraction&gt; m = createSparseMatrix(testData);
                Assert.assertEquals(&quot;SparseFieldMatrix&lt;Fraction&gt;{{1.0,2.0,3.0},{2.0,5.0,3.0},{1.0,0.0,8.0}}&quot;,
                m.toString());
                m = new SparseFieldMatrix&lt;Fraction&gt;(field, 1, 1);
                Assert.assertEquals(&quot;SparseFieldMatrix&lt;Fraction&gt;{{0.0}}&quot;, m.toString());
                }                
            </comment>
            <comment line="675">
                --------------- -----------------Protected methods                
            </comment>
            <javadoc line="32">
                Test cases for the {@link SparseFieldMatrix} class.                
                <version>
                    $Id: SparseFieldMatrixTest.java 1364030 2012-07-21 01:10:04Z erans $                    
                </version>
            </javadoc>
            <declaration name="id" type="Fraction[][]" line="39"/>
            <declaration name="testData" type="Fraction[][]" line="41"/>
            <declaration name="testDataLU" type="Fraction[][]" line="43"/>
            <declaration name="testDataPlus2" type="Fraction[][]" line="44"/>
            <declaration name="testDataMinus" type="Fraction[][]" line="46"/>
            <declaration name="testDataRow1" type="Fraction[]" line="48"/>
            <declaration name="testDataCol3" type="Fraction[]" line="49"/>
            <declaration name="testDataInv" type="Fraction[][]" line="50"/>
            <declaration name="preMultTest" type="Fraction[]" line="52"/>
            <declaration name="testData2" type="Fraction[][]" line="53"/>
            <declaration name="testData2T" type="Fraction[][]" line="54"/>
            <declaration name="testDataPlusInv" type="Fraction[][]" line="55"/>
            <declaration name="luData" type="Fraction[][]" line="59"/>
            <declaration name="luDataLUDecomposition" type="Fraction[][]" line="60"/>
            <declaration name="singular" type="Fraction[][]" line="63"/>
            <declaration name="bigSingular" type="Fraction[][]" line="64"/>
            <declaration name="detData" type="Fraction[][]" line="72"/>
            <declaration name="detData2" type="Fraction[][]" line="74"/>
            <declaration name="testVector" type="Fraction[]" line="77"/>
            <declaration name="testVector2" type="Fraction[]" line="78"/>
            <declaration name="subTestData" type="Fraction[][]" line="81"/>
            <declaration name="subRows02Cols13" type="Fraction[][]" line="84"/>
            <declaration name="subRows03Cols12" type="Fraction[][]" line="85"/>
            <declaration name="subRows03Cols123" type="Fraction[][]" line="86"/>
            <declaration name="subRows20Cols123" type="Fraction[][]" line="89"/>
            <declaration name="subRows31Cols31" type="Fraction[][]" line="90"/>
            <declaration name="subRows01Cols23" type="Fraction[][]" line="93"/>
            <declaration name="subRows23Cols00" type="Fraction[][]" line="94"/>
            <declaration name="subRows00Cols33" type="Fraction[][]" line="95"/>
            <declaration name="subRow0" type="Fraction[][]" line="98"/>
            <declaration name="subRow3" type="Fraction[][]" line="99"/>
            <declaration name="subColumn1" type="Fraction[][]" line="102"/>
            <declaration name="subColumn3" type="Fraction[][]" line="103"/>
            <declaration name="entryTolerance" type="double" line="106"/>
            <declaration name="normTolerance" type="double" line="107"/>
            <declaration name="field" type="Field&lt;Fraction&gt;" line="108"/>
            <method name="SparseFieldMatrixTest" type="constructor" line="110">
                <comment line="124">
                    ignore, can&apos;t happen                    
                </comment>
                <scope line="111"/>
                <scope line="122"/>
            </method>
            <javadoc line="127">
                test dimensions                
            </javadoc>
            <method name="testDimensions" type="void" line="129">
                <declaration name="m" type="SparseFieldMatrix&lt;Fraction&gt;" line="130"/>
                <declaration name="m2" type="SparseFieldMatrix&lt;Fraction&gt;" line="131"/>
            </method>
            <javadoc line="140">
                test copy functions                
            </javadoc>
            <method name="testCopyFunctions" type="void" line="142">
                <declaration name="m1" type="SparseFieldMatrix&lt;Fraction&gt;" line="143"/>
                <declaration name="m2" type="FieldMatrix&lt;Fraction&gt;" line="144"/>
                <declaration name="m3" type="SparseFieldMatrix&lt;Fraction&gt;" line="147"/>
                <declaration name="m4" type="FieldMatrix&lt;Fraction&gt;" line="148"/>
            </method>
            <javadoc line="153">
                test add                
            </javadoc>
            <method name="testAdd" type="void" line="155">
                <declaration name="m" type="SparseFieldMatrix&lt;Fraction&gt;" line="156"/>
                <declaration name="mInv" type="SparseFieldMatrix&lt;Fraction&gt;" line="157"/>
                <declaration name="mDataPlusInv" type="SparseFieldMatrix&lt;Fraction&gt;" line="158"/>
                <declaration name="mPlusMInv" type="FieldMatrix&lt;Fraction&gt;" line="159"/>
                <scope line="160">
                    <scope line="161"/>
                </scope>
            </method>
            <javadoc line="169">
                test add failure                
            </javadoc>
            <method name="testAddFail" type="void" line="171">
                <comment line="179">
                    ignored                    
                </comment>
                <declaration name="m" type="SparseFieldMatrix&lt;Fraction&gt;" line="172"/>
                <declaration name="m2" type="SparseFieldMatrix&lt;Fraction&gt;" line="173"/>
                <scope line="174"/>
                <scope line="177"/>
            </method>
            <javadoc line="183">
                test m-n = m + -n                
            </javadoc>
            <method name="testPlusMinus" type="void" line="185">
                <comment line="195">
                    ignored                    
                </comment>
                <declaration name="m" type="SparseFieldMatrix&lt;Fraction&gt;" line="186"/>
                <declaration name="n" type="SparseFieldMatrix&lt;Fraction&gt;" line="187"/>
                <scope line="190"/>
                <scope line="193"/>
            </method>
            <javadoc line="198">
                test multiply                
            </javadoc>
            <method name="testMultiply" type="void" line="200">
                <comment line="222">
                    ignored                    
                </comment>
                <declaration name="m" type="SparseFieldMatrix&lt;Fraction&gt;" line="201"/>
                <declaration name="mInv" type="SparseFieldMatrix&lt;Fraction&gt;" line="202"/>
                <declaration name="identity" type="SparseFieldMatrix&lt;Fraction&gt;" line="203"/>
                <declaration name="m2" type="SparseFieldMatrix&lt;Fraction&gt;" line="204"/>
                <scope line="217"/>
                <scope line="220"/>
            </method>
            <declaration name="d3" type="Fraction[][]" line="227"/>
            <declaration name="d4" type="Fraction[][]" line="228"/>
            <declaration name="d5" type="Fraction[][]" line="229"/>
            <method name="testMultiply2" type="void" line="232">
                <declaration name="m3" type="FieldMatrix&lt;Fraction&gt;" line="233"/>
                <declaration name="m4" type="FieldMatrix&lt;Fraction&gt;" line="234"/>
                <declaration name="m5" type="FieldMatrix&lt;Fraction&gt;" line="235"/>
            </method>
            <javadoc line="239">
                test trace                
            </javadoc>
            <method name="testTrace" type="void" line="241">
                <comment line="250">
                    ignored                    
                </comment>
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="242"/>
                <scope line="245"/>
                <scope line="248"/>
            </method>
            <javadoc line="253">
                test sclarAdd                
            </javadoc>
            <method name="testScalarAdd" type="void" line="255">
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="256"/>
            </method>
            <javadoc line="261">
                test operate                
            </javadoc>
            <method name="testOperate" type="void" line="263">
                <comment line="275">
                    ignored                    
                </comment>
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="264"/>
                <scope line="270"/>
                <scope line="273"/>
            </method>
            <javadoc line="278">
                test issue MATH-209                
            </javadoc>
            <method name="testMath209" type="void" line="280">
                <declaration name="a" type="FieldMatrix&lt;Fraction&gt;" line="281"/>
                <declaration name="b" type="Fraction[]" line="283"/>
            </method>
            <javadoc line="290">
                test transpose                
            </javadoc>
            <method name="testTranspose" type="void" line="292">
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="293"/>
                <declaration name="mIT" type="FieldMatrix&lt;Fraction&gt;" line="294"/>
                <declaration name="mTI" type="FieldMatrix&lt;Fraction&gt;" line="295"/>
                <declaration name="mt" type="FieldMatrix&lt;Fraction&gt;" line="298"/>
            </method>
            <javadoc line="302">
                test preMultiply by vector                
            </javadoc>
            <method name="testPremultiplyVector" type="void" line="304">
                <comment line="316">
                    ignored                    
                </comment>
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="305"/>
                <scope line="311"/>
                <scope line="314"/>
            </method>
            <method name="testPremultiply" type="void" line="320">
                <comment line="342">
                    ignored                    
                </comment>
                <declaration name="m3" type="FieldMatrix&lt;Fraction&gt;" line="321"/>
                <declaration name="m4" type="FieldMatrix&lt;Fraction&gt;" line="322"/>
                <declaration name="m5" type="FieldMatrix&lt;Fraction&gt;" line="323"/>
                <declaration name="m" type="SparseFieldMatrix&lt;Fraction&gt;" line="326"/>
                <declaration name="mInv" type="SparseFieldMatrix&lt;Fraction&gt;" line="327"/>
                <declaration name="identity" type="SparseFieldMatrix&lt;Fraction&gt;" line="328"/>
                <scope line="337"/>
                <scope line="340"/>
            </method>
            <method name="testGetVectors" type="void" line="346">
                <comment line="355">
                    ignored                    
                </comment>
                <comment line="361">
                    ignored                    
                </comment>
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="347"/>
                <scope line="350"/>
                <scope line="353"/>
                <scope line="356"/>
                <scope line="359"/>
            </method>
            <method name="testGetEntry" type="void" line="365">
                <comment line="373">
                    expected                    
                </comment>
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="366"/>
                <scope line="368"/>
                <scope line="371"/>
            </method>
            <javadoc line="376">
                test examples in user guide                
            </javadoc>
            <method name="testExamples" type="void" line="378">
                <comment line="380">
                    Create a real matrix with two rows and three columns                    
                </comment>
                <comment line="383">
                    One more with three rows, two columns                    
                </comment>
                <comment line="386">
                    Now multiply m by n                    
                </comment>
                <comment line="390">
                    Invert p                    
                </comment>
                <comment line="395">
                    Solve example                    
                </comment>
                <declaration name="matrixData" type="Fraction[][]" line="380"/>
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="381"/>
                <declaration name="matrixData2" type="Fraction[][]" line="383"/>
                <declaration name="n" type="FieldMatrix&lt;Fraction&gt;" line="384"/>
                <declaration name="p" type="FieldMatrix&lt;Fraction&gt;" line="386"/>
                <declaration name="pInverse" type="FieldMatrix&lt;Fraction&gt;" line="390"/>
                <declaration name="coefficientsData" type="Fraction[][]" line="395"/>
                <declaration name="coefficients" type="FieldMatrix&lt;Fraction&gt;" line="397"/>
                <declaration name="constants" type="Fraction[]" line="398"/>
                <declaration name="solution" type="Fraction[]" line="399"/>
            </method>
            <method name="testSubMatrix" type="void" line="414">
                <comment line="445">
                    expected                    
                </comment>
                <comment line="451">
                    expected                    
                </comment>
                <comment line="457">
                    expected                    
                </comment>
                <comment line="463">
                    expected                    
                </comment>
                <comment line="469">
                    expected                    
                </comment>
                <comment line="475">
                    expected                    
                </comment>
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="415"/>
                <declaration name="mRows23Cols00" type="FieldMatrix&lt;Fraction&gt;" line="416"/>
                <declaration name="mRows00Cols33" type="FieldMatrix&lt;Fraction&gt;" line="417"/>
                <declaration name="mRows01Cols23" type="FieldMatrix&lt;Fraction&gt;" line="418"/>
                <declaration name="mRows02Cols13" type="FieldMatrix&lt;Fraction&gt;" line="419"/>
                <declaration name="mRows03Cols12" type="FieldMatrix&lt;Fraction&gt;" line="420"/>
                <declaration name="mRows03Cols123" type="FieldMatrix&lt;Fraction&gt;" line="421"/>
                <declaration name="mRows20Cols123" type="FieldMatrix&lt;Fraction&gt;" line="422"/>
                <declaration name="mRows31Cols31" type="FieldMatrix&lt;Fraction&gt;" line="423"/>
                <scope line="440"/>
                <scope line="443"/>
                <scope line="446"/>
                <scope line="449"/>
                <scope line="452"/>
                <scope line="455"/>
                <scope line="458"/>
                <scope line="461"/>
                <scope line="464"/>
                <scope line="467"/>
                <scope line="470"/>
                <scope line="473"/>
            </method>
            <method name="testGetRowMatrix" type="void" line="479">
                <comment line="490">
                    expected                    
                </comment>
                <comment line="496">
                    expected                    
                </comment>
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="480"/>
                <declaration name="mRow0" type="FieldMatrix&lt;Fraction&gt;" line="481"/>
                <declaration name="mRow3" type="FieldMatrix&lt;Fraction&gt;" line="482"/>
                <scope line="485"/>
                <scope line="488"/>
                <scope line="491"/>
                <scope line="494"/>
            </method>
            <method name="testGetColumnMatrix" type="void" line="500">
                <comment line="511">
                    expected                    
                </comment>
                <comment line="517">
                    expected                    
                </comment>
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="501"/>
                <declaration name="mColumn1" type="FieldMatrix&lt;Fraction&gt;" line="502"/>
                <declaration name="mColumn3" type="FieldMatrix&lt;Fraction&gt;" line="503"/>
                <scope line="506"/>
                <scope line="509"/>
                <scope line="512"/>
                <scope line="515"/>
            </method>
            <method name="testGetRowVector" type="void" line="521">
                <comment line="532">
                    expected                    
                </comment>
                <comment line="538">
                    expected                    
                </comment>
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="522"/>
                <declaration name="mRow0" type="FieldVector&lt;Fraction&gt;" line="523"/>
                <declaration name="mRow3" type="FieldVector&lt;Fraction&gt;" line="524"/>
                <scope line="527"/>
                <scope line="530"/>
                <scope line="533"/>
                <scope line="536"/>
            </method>
            <method name="testGetColumnVector" type="void" line="542">
                <comment line="553">
                    expected                    
                </comment>
                <comment line="559">
                    expected                    
                </comment>
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="543"/>
                <declaration name="mColumn1" type="FieldVector&lt;Fraction&gt;" line="544"/>
                <declaration name="mColumn3" type="FieldVector&lt;Fraction&gt;" line="545"/>
                <scope line="548"/>
                <scope line="551"/>
                <scope line="554"/>
                <scope line="557"/>
            </method>
            <method name="columnToVector" type="FieldVector<Fraction>" line="562">
                <params>
                    <param name="column" type="Fraction[][]"/>
                </params>
                <declaration name="data" type="Fraction[]" line="563"/>
                <scope line="564"/>
            </method>
            <method name="testEqualsAndHashCode" type="void" line="571">
                <declaration name="m" type="SparseFieldMatrix&lt;Fraction&gt;" line="572"/>
                <declaration name="m1" type="SparseFieldMatrix&lt;Fraction&gt;" line="573"/>
                <declaration name="mt" type="SparseFieldMatrix&lt;Fraction&gt;" line="574"/>
            </method>
            <method name="testSetSubMatrix" type="void" line="596">
                <comment line="614">
                    javadoc example                    
                </comment>
                <comment line="623">
                    dimension overflow                    
                </comment>
                <comment line="628">
                    expected                    
                </comment>
                <comment line="630">
                    dimension underflow                    
                </comment>
                <comment line="635">
                    expected                    
                </comment>
                <comment line="641">
                    expected                    
                </comment>
                <comment line="644">
                    null                    
                </comment>
                <comment line="649">
                    expected                    
                </comment>
                <comment line="655">
                    expected                    
                </comment>
                <comment line="658">
                    ragged                    
                </comment>
                <comment line="663">
                    expected                    
                </comment>
                <comment line="666">
                    empty                    
                </comment>
                <comment line="671">
                    expected                    
                </comment>
                <declaration name="m" type="SparseFieldMatrix&lt;Fraction&gt;" line="597"/>
                <declaration name="expected" type="FieldMatrix&lt;Fraction&gt;" line="599"/>
                <declaration name="matrix" type="SparseFieldMatrix&lt;Fraction&gt;" line="614"/>
                <scope line="623"/>
                <scope line="626"/>
                <scope line="630"/>
                <scope line="633"/>
                <scope line="636"/>
                <scope line="639"/>
                <scope line="644"/>
                <scope line="647"/>
                <scope line="650"/>
                <scope line="653"/>
                <scope line="658"/>
                <scope line="661"/>
                <scope line="666"/>
                <scope line="669"/>
            </method>
            <javadoc line="676">
                verifies that two matrices are close (1-norm)                
            </javadoc>
            <method name="assertClose" type="void" line="678">
                <params>
                    <param name="msg" type="String"/>
                    <param name="m" type="FieldMatrix<Fraction>"/>
                    <param name="n" type="FieldMatrix<Fraction>"/>
                    <param name="tolerance" type="double"/>
                </params>
                <scope line="679">
                    <scope line="680"/>
                </scope>
            </method>
            <javadoc line="687">
                verifies that two vectors are close (sup norm)                
            </javadoc>
            <method name="assertClose" type="void" line="689">
                <params>
                    <param name="msg" type="String"/>
                    <param name="m" type="Fraction[]"/>
                    <param name="n" type="Fraction[]"/>
                    <param name="tolerance" type="double"/>
                </params>
                <scope line="690"/>
                <scope line="693"/>
            </method>
            <method name="createSparseMatrix" type="SparseFieldMatrix<Fraction>" line="699">
                <params>
                    <param name="data" type="Fraction[][]"/>
                </params>
                <declaration name="matrix" type="SparseFieldMatrix&lt;Fraction&gt;" line="700"/>
                <scope line="701">
                    <scope line="702"/>
                </scope>
            </method>
        </class>
    </source>