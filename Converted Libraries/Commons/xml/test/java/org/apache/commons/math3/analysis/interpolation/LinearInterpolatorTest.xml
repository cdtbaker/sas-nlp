<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.interpolation">
        <import package="org.apache.commons.math3.exception.NonMonotonicSequenceException"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.analysis.UnivariateFunction"/>
        <import package="org.apache.commons.math3.analysis.polynomials.PolynomialFunction"/>
        <import package="org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="LinearInterpolatorTest" line="11">
            <javadoc line="11">
                Test the LinearInterpolator.                
            </javadoc>
            <declaration name="knotTolerance" type="double" line="15"/>
            <javadoc line="15">
                error tolerance for spline interpolator value at knot points                
            </javadoc>
            <declaration name="coefficientTolerance" type="double" line="19"/>
            <javadoc line="19">
                error tolerance for interpolating polynomial coefficients                
            </javadoc>
            <declaration name="interpolationTolerance" type="double" line="23"/>
            <javadoc line="23">
                error tolerance for interpolated values                
            </javadoc>
            <method name="testInterpolateLinearDegenerateTwoSegment" type="void" line="27">
                <declaration name="x" type="double" line="28"/>
                <declaration name="y" type="double" line="29"/>
                <declaration name="i" type="UnivariateInterpolator" line="30"/>
                <declaration name="f" type="UnivariateFunction" line="31"/>
                <declaration name="polynomials" type="PolynomialFunction" line="33"/>
                <declaration name="target" type="double" line="34"/>
            </method>
            <method name="testInterpolateLinearDegenerateThreeSegment" type="void" line="42">
                <declaration name="x" type="double" line="43"/>
                <declaration name="y" type="double" line="44"/>
                <declaration name="i" type="UnivariateInterpolator" line="45"/>
                <declaration name="f" type="UnivariateFunction" line="46"/>
                <declaration name="polynomials" type="PolynomialFunction" line="48"/>
                <declaration name="target" type="double" line="49"/>
            </method>
            <method name="testInterpolateLinear" type="void" line="59">
                <declaration name="x" type="double" line="60"/>
                <declaration name="y" type="double" line="61"/>
                <declaration name="i" type="UnivariateInterpolator" line="62"/>
                <declaration name="f" type="UnivariateFunction" line="63"/>
                <declaration name="polynomials" type="PolynomialFunction" line="65"/>
                <declaration name="target" type="double" line="66"/>
            </method>
            <method name="testIllegalArguments" type="void" line="71">
                <declaration name="i" type="UnivariateInterpolator" line="72"/>
                <scope line="73">
                    <declaration name="xval" type="double" line="74"/>
                    <declaration name="yval" type="double" line="75"/>
                </scope>
                <scope line="79"/>
                <scope line="81">
                    <declaration name="xval" type="double" line="82"/>
                    <declaration name="yval" type="double" line="83"/>
                </scope>
                <scope line="87"/>
                <scope line="89">
                    <declaration name="xval" type="double" line="90"/>
                    <declaration name="yval" type="double" line="91"/>
                </scope>
                <scope line="95"/>
            </method>
            <javadoc line="98">
                verifies that f(x[i]) = y[i] for i = 0..n-1 where n is common length.                
            </javadoc>
            <method name="verifyInterpolation" type="void" line="101">
                <params>
                    <param name="f" type="UnivariateFunction"/>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                </params>
                <scope line="102"/>
            </method>
        </class>
    </source>