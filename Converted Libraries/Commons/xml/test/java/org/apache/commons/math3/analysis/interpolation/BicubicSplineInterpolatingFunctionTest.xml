<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.interpolation">
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.analysis.BivariateFunction"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="BicubicSplineInterpolatingFunctionTest" line="25">
            <javadoc line="25">
                Test case for the bicubic function.                
                <version>
                    $Id$                    
                </version>
            </javadoc>
            <javadoc line="31">
                Test preconditions.                
            </javadoc>
            <method name="testPreconditions" type="void" line="35">
                <comment line="50">
                    Expected                    
                </comment>
                <comment line="57">
                    Expected                    
                </comment>
                <comment line="64">
                    Expected                    
                </comment>
                <comment line="70">
                    Expected                    
                </comment>
                <comment line="76">
                    Expected                    
                </comment>
                <comment line="82">
                    Expected                    
                </comment>
                <comment line="90">
                    Expected                    
                </comment>
                <comment line="96">
                    Expected                    
                </comment>
                <comment line="102">
                    Expected                    
                </comment>
                <comment line="108">
                    Expected                    
                </comment>
                <declaration name="xval" type="double[]" line="36"/>
                <declaration name="yval" type="double[]" line="37"/>
                <declaration name="zval" type="double[][]" line="38"/>
                <declaration name="bcf" type="BivariateFunction" line="40"/>
                <declaration name="wxval" type="double[]" line="44"/>
                <scope line="45"/>
                <scope line="48"/>
                <declaration name="wyval" type="double[]" line="51"/>
                <scope line="52"/>
                <scope line="55"/>
                <declaration name="wzval" type="double[][]" line="58"/>
                <scope line="59"/>
                <scope line="62"/>
                <scope line="65"/>
                <scope line="68"/>
                <scope line="71"/>
                <scope line="74"/>
                <scope line="77"/>
                <scope line="80"/>
                <scope line="85"/>
                <scope line="88"/>
                <scope line="91"/>
                <scope line="94"/>
                <scope line="97"/>
                <scope line="100"/>
                <scope line="103"/>
                <scope line="106"/>
            </method>
            <javadoc line="111">
                Test for a plane.
                  &lt;p&gt;
                  z = 2 x - 3 y + 5                
            </javadoc>
            <method name="testPlane" type="void" line="117">
                <comment line="121">
                    Function values                    
                </comment>
                <comment line="133">
                    Partial derivatives with respect to x                    
                </comment>
                <comment line="140">
                    Partial derivatives with respect to y                    
                </comment>
                <comment line="147">
                    Partial cross-derivatives                    
                </comment>
                <declaration name="xval" type="double[]" line="118"/>
                <declaration name="yval" type="double[]" line="119"/>
                <anonymous_class line="121">
                    <method name="value" type="double" line="122">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="f" type="BivariateFunction" line="121"/>
                <declaration name="zval" type="double[][]" line="126"/>
                <scope line="127">
                    <scope line="128"/>
                </scope>
                <declaration name="dZdX" type="double[][]" line="133"/>
                <scope line="134">
                    <scope line="135"/>
                </scope>
                <declaration name="dZdY" type="double[][]" line="140"/>
                <scope line="141">
                    <scope line="142"/>
                </scope>
                <declaration name="dZdXdY" type="double[][]" line="147"/>
                <scope line="148">
                    <scope line="149"/>
                </scope>
                <declaration name="bcf" type="BivariateFunction" line="154"/>
                <declaration name="x" type="double" line="156"/>
                <declaration name="expected" type="double" line="157"/>
            </method>
            <javadoc line="181">
                Test for a paraboloid.
                  &lt;p&gt;
                  z = 2 x&lt;sup&gt;2&lt;/sup&gt; - 3 y&lt;sup&gt;2&lt;/sup&gt; + 4 x y - 5                
            </javadoc>
            <method name="testParaboloid" type="void" line="187">
                <comment line="191">
                    Function values                    
                </comment>
                <comment line="203">
                    Partial derivatives with respect to x                    
                </comment>
                <comment line="215">
                    Partial derivatives with respect to y                    
                </comment>
                <comment line="227">
                    Partial cross-derivatives                    
                </comment>
                <declaration name="xval" type="double[]" line="188"/>
                <declaration name="yval" type="double[]" line="189"/>
                <anonymous_class line="191">
                    <method name="value" type="double" line="192">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="f" type="BivariateFunction" line="191"/>
                <declaration name="zval" type="double[][]" line="196"/>
                <scope line="197">
                    <scope line="198"/>
                </scope>
                <declaration name="dZdX" type="double[][]" line="203"/>
                <anonymous_class line="204">
                    <method name="value" type="double" line="205">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="dfdX" type="BivariateFunction" line="204"/>
                <scope line="209">
                    <scope line="210"/>
                </scope>
                <declaration name="dZdY" type="double[][]" line="215"/>
                <anonymous_class line="216">
                    <method name="value" type="double" line="217">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="dfdY" type="BivariateFunction" line="216"/>
                <scope line="221">
                    <scope line="222"/>
                </scope>
                <declaration name="dZdXdY" type="double[][]" line="227"/>
                <scope line="228">
                    <scope line="229"/>
                </scope>
                <declaration name="bcf" type="BivariateFunction" line="234"/>
                <declaration name="x" type="double" line="236"/>
                <declaration name="expected" type="double" line="237"/>
            </method>
            <javadoc line="261">
                Test for partial derivatives of {@link BicubicSplineFunction}.
                  &lt;p&gt;
                  f(x, y) = &amp;Sigma;&lt;sub&gt;i&lt;/sub&gt;&amp;Sigma;&lt;sub&gt;j&lt;/sub&gt; (i+1) (j+2) x&lt;sup&gt;i&lt;/sup&gt; y&lt;sup&gt;j&lt;/sup&gt;                
            </javadoc>
            <method name="testSplinePartialDerivatives" type="void" line="267">
                <declaration name="N" type="int" line="268"/>
                <declaration name="coeff" type="double[]" line="269"/>
                <scope line="271">
                    <scope line="272"/>
                </scope>
                <declaration name="f" type="BicubicSplineFunction" line="277"/>
                <declaration name="derivative" type="BivariateFunction" line="278"/>
                <declaration name="x" type="double" line="279"/>
                <declaration name="y" type="double" line="280"/>
                <declaration name="tol" type="double" line="281"/>
                <anonymous_class line="283">
                    <method name="value" type="double" line="284">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                        <declaration name="x2" type="double" line="285"/>
                        <declaration name="y2" type="double" line="286"/>
                        <declaration name="y3" type="double" line="287"/>
                        <declaration name="yFactor" type="double" line="288"/>
                    </method>
                </anonymous_class>
                <anonymous_class line="295">
                    <method name="value" type="double" line="296">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                        <declaration name="x2" type="double" line="297"/>
                        <declaration name="x3" type="double" line="298"/>
                        <declaration name="y2" type="double" line="299"/>
                        <declaration name="xFactor" type="double" line="300"/>
                    </method>
                </anonymous_class>
                <anonymous_class line="307">
                    <method name="value" type="double" line="308">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                        <declaration name="y2" type="double" line="309"/>
                        <declaration name="y3" type="double" line="310"/>
                        <declaration name="yFactor" type="double" line="311"/>
                    </method>
                </anonymous_class>
                <anonymous_class line="318">
                    <method name="value" type="double" line="319">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                        <declaration name="x2" type="double" line="320"/>
                        <declaration name="x3" type="double" line="321"/>
                        <declaration name="xFactor" type="double" line="322"/>
                    </method>
                </anonymous_class>
                <anonymous_class line="329">
                    <method name="value" type="double" line="330">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                        <declaration name="x2" type="double" line="331"/>
                        <declaration name="y2" type="double" line="332"/>
                        <declaration name="yFactor" type="double" line="333"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="341">
                Test that the partial derivatives computed from a{@link BicubicSplineInterpolatingFunction} match the input data.
                  &lt;p&gt;
                  f(x, y) = 5
                  - 3 x + 2 y
                  - x y + 2 x&lt;sup&gt;2&lt;/sup&gt; - 3 y&lt;sup&gt;2&lt;/sup&gt;
                  + 4 x&lt;sup&gt;2&lt;/sup&gt; y - x y&lt;sup&gt;2&lt;/sup&gt; - 3 x&lt;sup&gt;3&lt;/sup&gt; + y&lt;sup&gt;3&lt;/sup&gt;                
            </javadoc>
            <method name="testMatchingPartialDerivatives" type="void" line="351">
                <comment line="355">
                    Coordinate values                    
                </comment>
                <comment line="360">
                    Function values                    
                </comment>
                <comment line="380">
                    Partial derivatives with respect to x                    
                </comment>
                <comment line="394">
                    Partial derivatives with respect to y                    
                </comment>
                <comment line="408">
                    Partial cross-derivatives                    
                </comment>
                <declaration name="sz" type="int" line="352"/>
                <declaration name="val" type="double[]" line="353"/>
                <declaration name="delta" type="double" line="355"/>
                <scope line="356"/>
                <anonymous_class line="360">
                    <method name="value" type="double" line="361">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                        <declaration name="x2" type="double" line="362"/>
                        <declaration name="x3" type="double" line="363"/>
                        <declaration name="y2" type="double" line="364"/>
                        <declaration name="y3" type="double" line="365"/>
                    </method>
                </anonymous_class>
                <declaration name="f" type="BivariateFunction" line="360"/>
                <declaration name="fval" type="double[][]" line="373"/>
                <scope line="374">
                    <scope line="375"/>
                </scope>
                <declaration name="dFdX" type="double[][]" line="380"/>
                <anonymous_class line="381">
                    <method name="value" type="double" line="382">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                        <declaration name="x2" type="double" line="383"/>
                        <declaration name="y2" type="double" line="384"/>
                    </method>
                </anonymous_class>
                <declaration name="dfdX" type="BivariateFunction" line="381"/>
                <scope line="388">
                    <scope line="389"/>
                </scope>
                <declaration name="dFdY" type="double[][]" line="394"/>
                <anonymous_class line="395">
                    <method name="value" type="double" line="396">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                        <declaration name="x2" type="double" line="397"/>
                        <declaration name="y2" type="double" line="398"/>
                    </method>
                </anonymous_class>
                <declaration name="dfdY" type="BivariateFunction" line="395"/>
                <scope line="402">
                    <scope line="403"/>
                </scope>
                <declaration name="d2FdXdY" type="double[][]" line="408"/>
                <anonymous_class line="409">
                    <method name="value" type="double" line="410">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="d2fdXdY" type="BivariateFunction" line="409"/>
                <scope line="414">
                    <scope line="415"/>
                </scope>
                <declaration name="bcf" type="BicubicSplineInterpolatingFunction" line="420"/>
                <declaration name="x" type="double" line="423"/>
                <declaration name="expected" type="double" line="424"/>
                <declaration name="tol" type="double" line="426"/>
                <scope line="427">
                    <scope line="429"/>
                </scope>
            </method>
        </class>
    </source>