<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.interpolation">
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.analysis.BivariateFunction"/>
        <import package="org.apache.commons.math3.distribution.UniformRealDistribution"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.random.Well19937c"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <import package="org.junit.Ignore"/>
        <class name="BicubicSplineInterpolatingFunctionTest" line="30">
            <javadoc line="30">
                Test case for the bicubic function.                
                <version>
                    $Id: BicubicSplineInterpolatingFunctionTest.java 1499088 2013-07-02 20:03:20Z tn $                    
                </version>
            </javadoc>
            <javadoc line="36">
                Test preconditions.                
            </javadoc>
            <method name="testPreconditions" type="void" line="40">
                <comment line="55">
                    Expected                    
                </comment>
                <comment line="62">
                    Expected                    
                </comment>
                <comment line="69">
                    Expected                    
                </comment>
                <comment line="75">
                    Expected                    
                </comment>
                <comment line="81">
                    Expected                    
                </comment>
                <comment line="87">
                    Expected                    
                </comment>
                <comment line="95">
                    Expected                    
                </comment>
                <comment line="101">
                    Expected                    
                </comment>
                <comment line="107">
                    Expected                    
                </comment>
                <comment line="113">
                    Expected                    
                </comment>
                <declaration name="xval" type="double[]" line="41"/>
                <declaration name="yval" type="double[]" line="42"/>
                <declaration name="zval" type="double[][]" line="43"/>
                <declaration name="bcf" type="BivariateFunction" line="45"/>
                <declaration name="wxval" type="double[]" line="49"/>
                <scope line="50"/>
                <scope line="53"/>
                <declaration name="wyval" type="double[]" line="56"/>
                <scope line="57"/>
                <scope line="60"/>
                <declaration name="wzval" type="double[][]" line="63"/>
                <scope line="64"/>
                <scope line="67"/>
                <scope line="70"/>
                <scope line="73"/>
                <scope line="76"/>
                <scope line="79"/>
                <scope line="82"/>
                <scope line="85"/>
                <scope line="90"/>
                <scope line="93"/>
                <scope line="96"/>
                <scope line="99"/>
                <scope line="102"/>
                <scope line="105"/>
                <scope line="108"/>
                <scope line="111"/>
            </method>
            <javadoc line="116">
                Test for a plane.
                  &lt;p&gt;
                  z = 2 x - 3 y + 5                
            </javadoc>
            <method name="testPlane" type="void" line="122">
                <comment line="126">
                    Function values                    
                </comment>
                <comment line="138">
                    Partial derivatives with respect to x                    
                </comment>
                <comment line="145">
                    Partial derivatives with respect to y                    
                </comment>
                <comment line="152">
                    Partial cross-derivatives                    
                </comment>
                <declaration name="xval" type="double[]" line="123"/>
                <declaration name="yval" type="double[]" line="124"/>
                <anonymous_class line="126">
                    <method name="value" type="double" line="127">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="f" type="BivariateFunction" line="126"/>
                <declaration name="zval" type="double[][]" line="131"/>
                <scope line="132">
                    <scope line="133"/>
                </scope>
                <declaration name="dZdX" type="double[][]" line="138"/>
                <scope line="139">
                    <scope line="140"/>
                </scope>
                <declaration name="dZdY" type="double[][]" line="145"/>
                <scope line="146">
                    <scope line="147"/>
                </scope>
                <declaration name="dZdXdY" type="double[][]" line="152"/>
                <scope line="153">
                    <scope line="154"/>
                </scope>
                <declaration name="bcf" type="BivariateFunction" line="159"/>
                <declaration name="x" type="double" line="161"/>
                <declaration name="expected" type="double" line="162"/>
            </method>
            <javadoc line="186">
                Test for a paraboloid.
                  &lt;p&gt;
                  z = 2 x&lt;sup&gt;2&lt;/sup&gt; - 3 y&lt;sup&gt;2&lt;/sup&gt; + 4 x y - 5                
            </javadoc>
            <method name="testParaboloid" type="void" line="192">
                <comment line="196">
                    Function values                    
                </comment>
                <comment line="208">
                    Partial derivatives with respect to x                    
                </comment>
                <comment line="220">
                    Partial derivatives with respect to y                    
                </comment>
                <comment line="232">
                    Partial cross-derivatives                    
                </comment>
                <declaration name="xval" type="double[]" line="193"/>
                <declaration name="yval" type="double[]" line="194"/>
                <anonymous_class line="196">
                    <method name="value" type="double" line="197">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="f" type="BivariateFunction" line="196"/>
                <declaration name="zval" type="double[][]" line="201"/>
                <scope line="202">
                    <scope line="203"/>
                </scope>
                <declaration name="dZdX" type="double[][]" line="208"/>
                <anonymous_class line="209">
                    <method name="value" type="double" line="210">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="dfdX" type="BivariateFunction" line="209"/>
                <scope line="214">
                    <scope line="215"/>
                </scope>
                <declaration name="dZdY" type="double[][]" line="220"/>
                <anonymous_class line="221">
                    <method name="value" type="double" line="222">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="dfdY" type="BivariateFunction" line="221"/>
                <scope line="226">
                    <scope line="227"/>
                </scope>
                <declaration name="dZdXdY" type="double[][]" line="232"/>
                <scope line="233">
                    <scope line="234"/>
                </scope>
                <declaration name="bcf" type="BivariateFunction" line="239"/>
                <declaration name="x" type="double" line="241"/>
                <declaration name="expected" type="double" line="242"/>
            </method>
            <javadoc line="266">
                Test for partial derivatives of {@link BicubicSplineFunction}.
                  &lt;p&gt;
                  f(x, y) = &amp;Sigma;&lt;sub&gt;i&lt;/sub&gt;&amp;Sigma;&lt;sub&gt;j&lt;/sub&gt; (i+1) (j+2) x&lt;sup&gt;i&lt;/sup&gt; y&lt;sup&gt;j&lt;/sup&gt;                
            </javadoc>
            <method name="testSplinePartialDerivatives" type="void" line="272">
                <declaration name="N" type="int" line="273"/>
                <declaration name="coeff" type="double[]" line="274"/>
                <scope line="276">
                    <scope line="277"/>
                </scope>
                <declaration name="f" type="BicubicSplineFunction" line="282"/>
                <declaration name="derivative" type="BivariateFunction" line="283"/>
                <declaration name="x" type="double" line="284"/>
                <declaration name="y" type="double" line="285"/>
                <declaration name="tol" type="double" line="286"/>
                <anonymous_class line="288">
                    <method name="value" type="double" line="289">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                        <declaration name="x2" type="double" line="290"/>
                        <declaration name="y2" type="double" line="291"/>
                        <declaration name="y3" type="double" line="292"/>
                        <declaration name="yFactor" type="double" line="293"/>
                    </method>
                </anonymous_class>
                <anonymous_class line="300">
                    <method name="value" type="double" line="301">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                        <declaration name="x2" type="double" line="302"/>
                        <declaration name="x3" type="double" line="303"/>
                        <declaration name="y2" type="double" line="304"/>
                        <declaration name="xFactor" type="double" line="305"/>
                    </method>
                </anonymous_class>
                <anonymous_class line="312">
                    <method name="value" type="double" line="313">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                        <declaration name="y2" type="double" line="314"/>
                        <declaration name="y3" type="double" line="315"/>
                        <declaration name="yFactor" type="double" line="316"/>
                    </method>
                </anonymous_class>
                <anonymous_class line="323">
                    <method name="value" type="double" line="324">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                        <declaration name="x2" type="double" line="325"/>
                        <declaration name="x3" type="double" line="326"/>
                        <declaration name="xFactor" type="double" line="327"/>
                    </method>
                </anonymous_class>
                <anonymous_class line="334">
                    <method name="value" type="double" line="335">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                        <declaration name="x2" type="double" line="336"/>
                        <declaration name="y2" type="double" line="337"/>
                        <declaration name="yFactor" type="double" line="338"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="346">
                Test that the partial derivatives computed from a{@link BicubicSplineInterpolatingFunction} match the input data.
                  &lt;p&gt;
                  f(x, y) = 5
                  - 3 x + 2 y
                  - x y + 2 x&lt;sup&gt;2&lt;/sup&gt; - 3 y&lt;sup&gt;2&lt;/sup&gt;
                  + 4 x&lt;sup&gt;2&lt;/sup&gt; y - x y&lt;sup&gt;2&lt;/sup&gt; - 3 x&lt;sup&gt;3&lt;/sup&gt; + y&lt;sup&gt;3&lt;/sup&gt;                
            </javadoc>
            <method name="testMatchingPartialDerivatives" type="void" line="356">
                <comment line="360">
                    Coordinate values                    
                </comment>
                <comment line="365">
                    Function values                    
                </comment>
                <comment line="385">
                    Partial derivatives with respect to x                    
                </comment>
                <comment line="399">
                    Partial derivatives with respect to y                    
                </comment>
                <comment line="413">
                    Partial cross-derivatives                    
                </comment>
                <declaration name="sz" type="int" line="357"/>
                <declaration name="val" type="double[]" line="358"/>
                <declaration name="delta" type="double" line="360"/>
                <scope line="361"/>
                <anonymous_class line="365">
                    <method name="value" type="double" line="366">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                        <declaration name="x2" type="double" line="367"/>
                        <declaration name="x3" type="double" line="368"/>
                        <declaration name="y2" type="double" line="369"/>
                        <declaration name="y3" type="double" line="370"/>
                    </method>
                </anonymous_class>
                <declaration name="f" type="BivariateFunction" line="365"/>
                <declaration name="fval" type="double[][]" line="378"/>
                <scope line="379">
                    <scope line="380"/>
                </scope>
                <declaration name="dFdX" type="double[][]" line="385"/>
                <anonymous_class line="386">
                    <method name="value" type="double" line="387">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                        <declaration name="x2" type="double" line="388"/>
                        <declaration name="y2" type="double" line="389"/>
                    </method>
                </anonymous_class>
                <declaration name="dfdX" type="BivariateFunction" line="386"/>
                <scope line="393">
                    <scope line="394"/>
                </scope>
                <declaration name="dFdY" type="double[][]" line="399"/>
                <anonymous_class line="400">
                    <method name="value" type="double" line="401">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                        <declaration name="x2" type="double" line="402"/>
                        <declaration name="y2" type="double" line="403"/>
                    </method>
                </anonymous_class>
                <declaration name="dfdY" type="BivariateFunction" line="400"/>
                <scope line="407">
                    <scope line="408"/>
                </scope>
                <declaration name="d2FdXdY" type="double[][]" line="413"/>
                <anonymous_class line="414">
                    <method name="value" type="double" line="415">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="d2fdXdY" type="BivariateFunction" line="414"/>
                <scope line="419">
                    <scope line="420"/>
                </scope>
                <declaration name="bcf" type="BicubicSplineInterpolatingFunction" line="425"/>
                <declaration name="x" type="double" line="428"/>
                <declaration name="expected" type="double" line="429"/>
                <declaration name="tol" type="double" line="431"/>
                <scope line="432">
                    <scope line="434"/>
                </scope>
            </method>
            <javadoc line="452">
                Interpolating a plane.
                  &lt;p&gt;
                  z = 2 x - 3 y + 5                
            </javadoc>
            <method name="testInterpolation1" type="void" line="458">
                <comment line="463">
                    Coordinate values                    
                </comment>
                <comment line="470">
                    Function values                    
                </comment>
                <comment line="482">
                    Partial derivatives with respect to x                    
                </comment>
                <comment line="489">
                    Partial derivatives with respect to y                    
                </comment>
                <comment line="496">
                    Partial cross-derivatives                    
                </comment>
                <comment line="509">
                    &quot;tol&quot; depends on the seed.                    
                </comment>
                <comment line="521">
                    System.out.println(x + &quot; &quot; + y + &quot; &quot; + f.value(x, y) + &quot; &quot; + bcf.value(x, y));                    
                </comment>
                <comment line="524">
                    System.out.println();                    
                </comment>
                <declaration name="sz" type="int" line="459"/>
                <declaration name="xval" type="double[]" line="460"/>
                <declaration name="yval" type="double[]" line="461"/>
                <declaration name="delta" type="double" line="463"/>
                <scope line="464"/>
                <anonymous_class line="470">
                    <method name="value" type="double" line="471">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="f" type="BivariateFunction" line="470"/>
                <declaration name="zval" type="double[][]" line="475"/>
                <scope line="476">
                    <scope line="477"/>
                </scope>
                <declaration name="dZdX" type="double[][]" line="482"/>
                <scope line="483">
                    <scope line="484"/>
                </scope>
                <declaration name="dZdY" type="double[][]" line="489"/>
                <scope line="490">
                    <scope line="491"/>
                </scope>
                <declaration name="dZdXdY" type="double[][]" line="496"/>
                <scope line="497">
                    <scope line="498"/>
                </scope>
                <declaration name="bcf" type="BivariateFunction" line="503"/>
                <declaration name="x" type="double" line="506"/>
                <declaration name="rng" type="RandomGenerator" line="508"/>
                <declaration name="distX" type="UniformRealDistribution" line="509"/>
                <declaration name="distY" type="UniformRealDistribution" line="511"/>
                <declaration name="numSamples" type="int" line="514"/>
                <declaration name="tol" type="double" line="515"/>
                <scope line="516">
                    <scope line="518"/>
                </scope>
            </method>
            <javadoc line="527">
                Interpolating a paraboloid.
                  &lt;p&gt;
                  z = 2 x&lt;sup&gt;2&lt;/sup&gt; - 3 y&lt;sup&gt;2&lt;/sup&gt; + 4 x y - 5                
            </javadoc>
            <method name="testInterpolation2" type="void" line="533">
                <comment line="538">
                    Coordinate values                    
                </comment>
                <comment line="545">
                    Function values                    
                </comment>
                <comment line="557">
                    Partial derivatives with respect to x                    
                </comment>
                <comment line="569">
                    Partial derivatives with respect to y                    
                </comment>
                <comment line="581">
                    Partial cross-derivatives                    
                </comment>
                <comment line="593">
                    &quot;tol&quot; depends on the seed.                    
                </comment>
                <comment line="605">
                    System.out.println(x + &quot; &quot; + y + &quot; &quot; + f.value(x, y) + &quot; &quot; + bcf.value(x, y));                    
                </comment>
                <comment line="608">
                    System.out.println();                    
                </comment>
                <declaration name="sz" type="int" line="534"/>
                <declaration name="xval" type="double[]" line="535"/>
                <declaration name="yval" type="double[]" line="536"/>
                <declaration name="delta" type="double" line="538"/>
                <scope line="539"/>
                <anonymous_class line="545">
                    <method name="value" type="double" line="546">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="f" type="BivariateFunction" line="545"/>
                <declaration name="zval" type="double[][]" line="550"/>
                <scope line="551">
                    <scope line="552"/>
                </scope>
                <declaration name="dZdX" type="double[][]" line="557"/>
                <anonymous_class line="558">
                    <method name="value" type="double" line="559">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="dfdX" type="BivariateFunction" line="558"/>
                <scope line="563">
                    <scope line="564"/>
                </scope>
                <declaration name="dZdY" type="double[][]" line="569"/>
                <anonymous_class line="570">
                    <method name="value" type="double" line="571">
                        <params>
                            <param name="x" type="double"/>
                            <param name="y" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="dfdY" type="BivariateFunction" line="570"/>
                <scope line="575">
                    <scope line="576"/>
                </scope>
                <declaration name="dZdXdY" type="double[][]" line="581"/>
                <scope line="582">
                    <scope line="583"/>
                </scope>
                <declaration name="bcf" type="BivariateFunction" line="588"/>
                <declaration name="x" type="double" line="590"/>
                <declaration name="rng" type="RandomGenerator" line="592"/>
                <declaration name="distX" type="UniformRealDistribution" line="593"/>
                <declaration name="distY" type="UniformRealDistribution" line="595"/>
                <declaration name="tol" type="double" line="598"/>
                <declaration name="max" type="double" line="599"/>
                <scope line="600">
                    <scope line="602"/>
                </scope>
            </method>
            <method name="testIsValidPoint" type="void" line="612">
                <comment line="635">
                    Ensure that no exception is thrown.                    
                </comment>
                <comment line="641">
                    Ensure that no exception is thrown.                    
                </comment>
                <comment line="649">
                    Ensure that no exception is thrown.                    
                </comment>
                <comment line="656">
                    Ensure that an exception would have been thrown.                    
                </comment>
                <comment line="665">
                    Ensure that an exception would have been thrown.                    
                </comment>
                <declaration name="xMin" type="double" line="613"/>
                <declaration name="xMax" type="double" line="614"/>
                <declaration name="yMin" type="double" line="615"/>
                <declaration name="yMax" type="double" line="616"/>
                <declaration name="xval" type="double[]" line="617"/>
                <declaration name="yval" type="double[]" line="618"/>
                <declaration name="f" type="double[][]" line="619"/>
                <declaration name="dFdX" type="double[][]" line="621"/>
                <declaration name="dFdY" type="double[][]" line="622"/>
                <declaration name="dFdXdY" type="double[][]" line="623"/>
                <declaration name="bcf" type="BicubicSplineInterpolatingFunction" line="625"/>
                <declaration name="x" type="double" line="629"/>
                <declaration name="xRange" type="double" line="643"/>
                <declaration name="yRange" type="double" line="644"/>
                <declaration name="small" type="double" line="651"/>
                <scope line="656"/>
                <scope line="659"/>
                <scope line="665"/>
                <scope line="668"/>
            </method>
        </class>
    </source>