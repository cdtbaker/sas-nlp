<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.euclidean.threed">
        <import package="org.apache.commons.math3.exception.MathArithmeticException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="RotationTest" line="8">
            <method name="testIdentity" type="void" line="9">
                <declaration name="r" type="Rotation" line="10"/>
            </method>
            <method name="testAxisAngle" type="void" line="26">
                <declaration name="r" type="Rotation" line="27"/>
                <declaration name="s" type="double" line="31"/>
                <scope line="34"/>
                <scope line="38"/>
            </method>
            <method name="testRevert" type="void" line="48">
                <declaration name="r" type="Rotation" line="49"/>
                <declaration name="reverted" type="Rotation" line="50"/>
            </method>
            <method name="testVectorOnePair" type="void" line="56">
                <declaration name="u" type="Vector3D" line="57"/>
                <declaration name="v" type="Vector3D" line="58"/>
                <declaration name="r" type="Rotation" line="59"/>
                <scope line="62"/>
                <scope line="66"/>
            </method>
            <method name="testVectorTwoPairs" type="void" line="69">
                <declaration name="u1" type="Vector3D" line="70"/>
                <declaration name="u2" type="Vector3D" line="71"/>
                <declaration name="v1" type="Vector3D" line="72"/>
                <declaration name="v2" type="Vector3D" line="73"/>
                <declaration name="r" type="Rotation" line="74"/>
                <declaration name="axis" type="Vector3D" line="78"/>
                <scope line="79"/>
                <scope line="82"/>
                <declaration name="sqrt" type="double" line="86"/>
                <scope line="92"/>
                <scope line="96"/>
            </method>
            <method name="testMatrix" type="void" line="99">
                <scope line="100"/>
                <scope line="104"/>
                <scope line="106"/>
                <scope line="110"/>
                <scope line="112"/>
                <scope line="116"/>
                <declaration name="m1" type="double[][]" line="122"/>
                <declaration name="r" type="Rotation" line="123"/>
                <declaration name="m2" type="double[][]" line="127"/>
                <declaration name="m3" type="double[][]" line="129"/>
                <declaration name="d00" type="double" line="130"/>
                <declaration name="d01" type="double" line="131"/>
                <declaration name="d02" type="double" line="132"/>
                <declaration name="d10" type="double" line="133"/>
                <declaration name="d11" type="double" line="134"/>
                <declaration name="d12" type="double" line="135"/>
                <declaration name="d20" type="double" line="136"/>
                <declaration name="d21" type="double" line="137"/>
                <declaration name="d22" type="double" line="138"/>
                <scope line="157">
                    <scope line="158">
                        <declaration name="m3tm3" type="double" line="159"/>
                        <scope line="160"/>
                        <scope line="163"/>
                    </scope>
                </scope>
                <declaration name="m4" type="double[][]" line="171"/>
                <scope line="174">
                    <declaration name="m5" type="double[][]" line="175"/>
                </scope>
                <scope line="179"/>
            </method>
            <method name="testAngles" type="void" line="182">
                <declaration name="CardanOrders" type="RotationOrder[]" line="183"/>
                <scope line="184">
                    <scope line="185">
                        <scope line="186">
                            <scope line="187">
                                <declaration name="r" type="Rotation" line="188"/>
                                <declaration name="angles" type="double[]" line="189"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <declaration name="EulerOrders" type="RotationOrder[]" line="197"/>
                <scope line="198">
                    <scope line="199">
                        <scope line="200">
                            <scope line="201">
                                <declaration name="r" type="Rotation" line="202"/>
                                <declaration name="angles" type="double[]" line="203"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testSingularities" type="void" line="212">
                <declaration name="CardanOrders" type="RotationOrder[]" line="213"/>
                <declaration name="singularCardanAngle" type="double[]" line="214"/>
                <scope line="215">
                    <scope line="216">
                        <declaration name="r" type="Rotation" line="217"/>
                        <scope line="218"/>
                        <scope line="222"/>
                    </scope>
                </scope>
                <declaration name="EulerOrders" type="RotationOrder[]" line="226"/>
                <declaration name="singularEulerAngle" type="double[]" line="227"/>
                <scope line="228">
                    <scope line="229">
                        <declaration name="r" type="Rotation" line="230"/>
                        <scope line="231"/>
                        <scope line="235"/>
                    </scope>
                </scope>
            </method>
            <method name="testQuaternion" type="void" line="240">
                <declaration name="r1" type="Rotation" line="241"/>
                <declaration name="n" type="double" line="242"/>
                <declaration name="r2" type="Rotation" line="243"/>
                <scope line="244">
                    <scope line="245">
                        <scope line="246">
                            <declaration name="u" type="Vector3D" line="247"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testCompose" type="void" line="255">
                <declaration name="r1" type="Rotation" line="256"/>
                <declaration name="r2" type="Rotation" line="257"/>
                <declaration name="r3" type="Rotation" line="258"/>
                <scope line="259">
                    <scope line="260">
                        <scope line="261">
                            <declaration name="u" type="Vector3D" line="262"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testComposeInverse" type="void" line="268">
                <declaration name="r1" type="Rotation" line="269"/>
                <declaration name="r2" type="Rotation" line="270"/>
                <declaration name="r3" type="Rotation" line="271"/>
                <scope line="272">
                    <scope line="273">
                        <scope line="274">
                            <declaration name="u" type="Vector3D" line="275"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testArray" type="void" line="281">
                <declaration name="r" type="Rotation" line="282"/>
                <scope line="283">
                    <scope line="284">
                        <scope line="285">
                            <declaration name="u" type="Vector3D" line="286"/>
                            <declaration name="v" type="Vector3D" line="287"/>
                            <declaration name="inOut" type="double[]" line="288"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testApplyInverseTo" type="void" line="301">
                <declaration name="r" type="Rotation" line="302"/>
                <scope line="303">
                    <scope line="304">
                        <declaration name="u" type="Vector3D" line="305"/>
                    </scope>
                </scope>
                <scope line="312">
                    <scope line="313">
                        <declaration name="u" type="Vector3D" line="314"/>
                    </scope>
                </scope>
                <scope line="320">
                    <scope line="321">
                        <declaration name="u" type="Vector3D" line="322"/>
                    </scope>
                </scope>
            </method>
            <method name="testIssue639" type="void" line="328">
                <declaration name="u1" type="Vector3D" line="329"/>
                <declaration name="u2" type="Vector3D" line="330"/>
                <declaration name="rot" type="Rotation" line="331"/>
            </method>
            <method name="testIssue801" type="void" line="337">
                <declaration name="u1" type="Vector3D" line="338"/>
                <declaration name="u2" type="Vector3D" line="339"/>
                <declaration name="v1" type="Vector3D" line="340"/>
                <declaration name="v2" type="Vector3D" line="341"/>
                <declaration name="quat" type="Rotation" line="342"/>
                <declaration name="q2" type="double" line="343"/>
            </method>
            <method name="checkVector" type="void" line="348">
                <params>
                    <param name="v1" type="Vector3D"/>
                    <param name="v2" type="Vector3D"/>
                </params>
            </method>
            <method name="checkAngle" type="void" line="351">
                <params>
                    <param name="a1" type="double"/>
                    <param name="a2" type="double"/>
                </params>
            </method>
            <method name="checkRotation" type="void" line="354">
                <params>
                    <param name="r" type="Rotation"/>
                    <param name="q0" type="double"/>
                    <param name="q1" type="double"/>
                    <param name="q2" type="double"/>
                    <param name="q3" type="double"/>
                </params>
            </method>
        </class>
    </source>