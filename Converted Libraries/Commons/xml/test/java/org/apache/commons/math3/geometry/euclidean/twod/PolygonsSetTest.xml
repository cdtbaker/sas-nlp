<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.euclidean.twod">
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="org.apache.commons.math3.geometry.euclidean.oned.Interval"/>
        <import package="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet"/>
        <import package="org.apache.commons.math3.geometry.euclidean.oned.Vector1D"/>
        <import package="org.apache.commons.math3.geometry.partitioning.BSPTree"/>
        <import package="org.apache.commons.math3.geometry.partitioning.BoundaryProjection"/>
        <import package="org.apache.commons.math3.geometry.partitioning.Region"/>
        <import package="org.apache.commons.math3.geometry.partitioning.Region.Location"/>
        <import package="org.apache.commons.math3.geometry.partitioning.RegionFactory"/>
        <import package="org.apache.commons.math3.geometry.partitioning.SubHyperplane"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="PolygonsSetTest" line="35">
            <method name="testSimplyConnected" type="void" line="38">
                <declaration name="vertices" type="Vector2D[][]" line="39"/>
                <declaration name="set" type="PolygonsSet" line="53"/>
            </method>
            <method name="testBox" type="void" line="79">
                <declaration name="box" type="PolygonsSet" line="80"/>
            </method>
            <method name="testInfinite" type="void" line="86">
                <declaration name="box" type="PolygonsSet" line="87"/>
            </method>
            <method name="testStair" type="void" line="92">
                <declaration name="vertices" type="Vector2D[][]" line="93"/>
                <declaration name="set" type="PolygonsSet" line="109"/>
            </method>
            <method name="testEmpty" type="void" line="117">
                <declaration name="empty" type="PolygonsSet" line="118"/>
                <scope line="123">
                    <scope line="124"/>
                </scope>
            </method>
            <method name="testFull" type="void" line="133">
                <declaration name="empty" type="PolygonsSet" line="134"/>
                <scope line="139">
                    <scope line="140"/>
                </scope>
            </method>
            <method name="testHole" type="void" line="149">
                <declaration name="vertices" type="Vector2D[][]" line="150"/>
                <declaration name="set" type="PolygonsSet" line="163"/>
                <scope line="191">
                    <declaration name="v" type="Vector2D" line="192"/>
                    <declaration name="projection" type="BoundaryProjection&amp;lt;Euclidean2D&amp;gt;" line="193"/>
                    <declaration name="p" type="Vector2D" line="195"/>
                    <scope line="196"/>
                    <scope line="200"/>
                    <scope line="204"/>
                    <scope line="208"/>
                    <scope line="212"/>
                    <scope line="216"/>
                </scope>
            </method>
            <method name="testDisjointPolygons" type="void" line="227">
                <declaration name="vertices" type="Vector2D[][]" line="228"/>
                <declaration name="set" type="PolygonsSet" line="239"/>
            </method>
            <method name="testOppositeHyperplanes" type="void" line="260">
                <declaration name="vertices" type="Vector2D[][]" line="261"/>
                <declaration name="set" type="PolygonsSet" line="271"/>
            </method>
            <method name="testSingularPoint" type="void" line="276">
                <declaration name="vertices" type="Vector2D[][]" line="277"/>
                <declaration name="set" type="PolygonsSet" line="289"/>
            </method>
            <method name="testLineIntersection" type="void" line="294">
                <declaration name="vertices" type="Vector2D[][]" line="295"/>
                <declaration name="set" type="PolygonsSet" line="307"/>
                <declaration name="l1" type="Line" line="309"/>
                <declaration name="s1" type="SubLine" line="310"/>
                <declaration name="i1" type="List&amp;lt;Interval&amp;gt;" line="311"/>
                <declaration name="v10" type="Interval" line="313"/>
                <declaration name="p10Lower" type="Vector2D" line="314"/>
                <declaration name="p10Upper" type="Vector2D" line="317"/>
                <declaration name="v11" type="Interval" line="320"/>
                <declaration name="p11Lower" type="Vector2D" line="321"/>
                <declaration name="p11Upper" type="Vector2D" line="324"/>
                <declaration name="l2" type="Line" line="328"/>
                <declaration name="s2" type="SubLine" line="329"/>
                <declaration name="i2" type="List&amp;lt;Interval&amp;gt;" line="330"/>
                <declaration name="v20" type="Interval" line="332"/>
                <declaration name="p20Lower" type="Vector2D" line="333"/>
                <declaration name="p20Upper" type="Vector2D" line="336"/>
            </method>
            <method name="testUnlimitedSubHyperplane" type="void" line="343">
                <declaration name="vertices1" type="Vector2D[][]" line="344"/>
                <declaration name="set1" type="PolygonsSet" line="352"/>
                <declaration name="vertices2" type="Vector2D[][]" line="353"/>
                <declaration name="set2" type="PolygonsSet" line="360"/>
                <declaration name="set" type="PolygonsSet" line="362"/>
            </method>
            <method name="testUnion" type="void" line="382">
                <declaration name="vertices1" type="Vector2D[][]" line="383"/>
                <declaration name="set1" type="PolygonsSet" line="391"/>
                <declaration name="vertices2" type="Vector2D[][]" line="392"/>
                <declaration name="set2" type="PolygonsSet" line="400"/>
                <declaration name="set" type="PolygonsSet" line="401"/>
            </method>
            <method name="testIntersection" type="void" line="446">
                <declaration name="vertices1" type="Vector2D[][]" line="447"/>
                <declaration name="set1" type="PolygonsSet" line="455"/>
                <declaration name="vertices2" type="Vector2D[][]" line="456"/>
                <declaration name="set2" type="PolygonsSet" line="464"/>
                <declaration name="set" type="PolygonsSet" line="465"/>
            </method>
            <method name="testXor" type="void" line="495">
                <declaration name="vertices1" type="Vector2D[][]" line="496"/>
                <declaration name="set1" type="PolygonsSet" line="504"/>
                <declaration name="vertices2" type="Vector2D[][]" line="505"/>
                <declaration name="set2" type="PolygonsSet" line="513"/>
                <declaration name="set" type="PolygonsSet" line="514"/>
            </method>
            <method name="testDifference" type="void" line="566">
                <declaration name="vertices1" type="Vector2D[][]" line="567"/>
                <declaration name="set1" type="PolygonsSet" line="575"/>
                <declaration name="vertices2" type="Vector2D[][]" line="576"/>
                <declaration name="set2" type="PolygonsSet" line="584"/>
                <declaration name="set" type="PolygonsSet" line="585"/>
            </method>
            <method name="testEmptyDifference" type="void" line="629">
                <declaration name="vertices1" type="Vector2D[][]" line="630"/>
                <declaration name="set1" type="PolygonsSet" line="638"/>
                <declaration name="vertices2" type="Vector2D[][]" line="639"/>
                <declaration name="set2" type="PolygonsSet" line="647"/>
            </method>
            <method name="testChoppedHexagon" type="void" line="652">
                <declaration name="pi6" type="double" line="653"/>
                <declaration name="sqrt3" type="double" line="654"/>
                <declaration name="hyp" type="SubLine[]" line="655"/>
                <declaration name="tree" type="BSPTree&amp;lt;Euclidean2D&amp;gt;" line="670"/>
                <scope line="671"/>
                <declaration name="set" type="PolygonsSet" line="674"/>
                <declaration name="splitter" type="SubLine" line="675"/>
                <declaration name="slice" type="PolygonsSet" line="677"/>
            </method>
            <method name="testConcentric" type="void" line="689">
                <declaration name="h" type="double" line="690"/>
                <declaration name="vertices1" type="Vector2D[][]" line="691"/>
                <declaration name="set1" type="PolygonsSet" line="702"/>
                <declaration name="vertices2" type="Vector2D[][]" line="703"/>
                <declaration name="set2" type="PolygonsSet" line="714"/>
            </method>
            <method name="testBug20040520" type="void" line="719">
                <declaration name="a0" type="BSPTree&amp;lt;Euclidean2D&amp;gt;" line="720"/>
                <declaration name="a1" type="BSPTree&amp;lt;Euclidean2D&amp;gt;" line="726"/>
                <declaration name="a2" type="BSPTree&amp;lt;Euclidean2D&amp;gt;" line="730"/>
                <declaration name="a3" type="BSPTree&amp;lt;Euclidean2D&amp;gt;" line="734"/>
                <declaration name="a4" type="BSPTree&amp;lt;Euclidean2D&amp;gt;" line="740"/>
                <declaration name="a5" type="BSPTree&amp;lt;Euclidean2D&amp;gt;" line="745"/>
                <declaration name="a6" type="BSPTree&amp;lt;Euclidean2D&amp;gt;" line="751"/>
                <declaration name="a7" type="BSPTree&amp;lt;Euclidean2D&amp;gt;" line="756"/>
                <declaration name="a8" type="BSPTree&amp;lt;Euclidean2D&amp;gt;" line="761"/>
                <declaration name="a9" type="BSPTree&amp;lt;Euclidean2D&amp;gt;" line="765"/>
                <declaration name="b0" type="BSPTree&amp;lt;Euclidean2D&amp;gt;" line="770"/>
                <declaration name="b1" type="BSPTree&amp;lt;Euclidean2D&amp;gt;" line="775"/>
                <declaration name="b2" type="BSPTree&amp;lt;Euclidean2D&amp;gt;" line="780"/>
                <declaration name="b3" type="BSPTree&amp;lt;Euclidean2D&amp;gt;" line="785"/>
                <declaration name="b4" type="BSPTree&amp;lt;Euclidean2D&amp;gt;" line="789"/>
                <declaration name="b5" type="BSPTree&amp;lt;Euclidean2D&amp;gt;" line="793"/>
                <declaration name="b6" type="BSPTree&amp;lt;Euclidean2D&amp;gt;" line="798"/>
                <declaration name="c" type="PolygonsSet" line="803"/>
            </method>
            <method name="testBug20041003" type="void" line="847">
                <declaration name="l" type="Line[]" line="849"/>
                <declaration name="node1" type="BSPTree&amp;lt;Euclidean2D&amp;gt;" line="860"/>
                <declaration name="node2" type="BSPTree&amp;lt;Euclidean2D&amp;gt;" line="867"/>
                <declaration name="node3" type="BSPTree&amp;lt;Euclidean2D&amp;gt;" line="873"/>
                <declaration name="node4" type="BSPTree&amp;lt;Euclidean2D&amp;gt;" line="878"/>
                <declaration name="set" type="PolygonsSet" line="881"/>
            </method>
            <method name="testSqueezedHexa" type="void" line="887">
                <declaration name="set" type="PolygonsSet" line="888"/>
            </method>
            <method name="testIssue880Simplified" type="void" line="895">
                <declaration name="vertices1" type="Vector2D[]" line="897"/>
                <declaration name="set1" type="PolygonsSet" line="907"/>
            </method>
            <method name="testIssue880Complete" type="void" line="914">
                <declaration name="vertices1" type="Vector2D[]" line="915"/>
                <declaration name="set1" type="PolygonsSet" line="987"/>
                <declaration name="vertices2" type="Vector2D[]" line="995"/>
                <declaration name="set2" type="PolygonsSet" line="1059"/>
                <declaration name="set" type="PolygonsSet" line="1060"/>
                <declaration name="verticies" type="Vector2D[][]" line="1064"/>
            </method>
            <method name="testTooThinBox" type="void" line="1070"/>
            <method name="testWrongUsage" type="void" line="1077">
                <comment line="1079">
                    the following is a wrong usage of the constructor.
                     as explained in the javadoc, the failure is NOT detected at construction
                     time but occurs later on                    
                </comment>
                <comment line="1088">
                    this is expected                    
                </comment>
                <declaration name="ps" type="PolygonsSet" line="1081"/>
                <scope line="1083"/>
                <scope line="1086"/>
            </method>
            <method name="buildSet" type="PolygonsSet" line="1091">
                <params>
                    <param name="vertices" type="Vector2D[][]"/>
                </params>
                <declaration name="edges" type="ArrayList&amp;lt;SubHyperplane&amp;lt;Euclidean2D&amp;gt;&amp;gt;" line="1092"/>
                <scope line="1093">
                    <declaration name="l" type="int" line="1094"/>
                    <scope line="1095"/>
                </scope>
            </method>
            <method name="buildLine" type="SubHyperplane&lt;Euclidean2D&gt;" line="1102">
                <params>
                    <param name="start" type="Vector2D"/>
                    <param name="end" type="Vector2D"/>
                </params>
            </method>
            <method name="intersectionAbscissa" type="double" line="1106">
                <params>
                    <param name="l0" type="Line"/>
                    <param name="l1" type="Line"/>
                </params>
                <declaration name="p" type="Vector2D" line="1107"/>
            </method>
            <method name="buildHalfLine" type="SubHyperplane&lt;Euclidean2D&gt;" line="1112">
                <params>
                    <param name="start" type="Vector2D"/>
                    <param name="end" type="Vector2D"/>
                    <param name="startIsVirtual" type="boolean"/>
                </params>
                <declaration name="line" type="Line" line="1113"/>
                <declaration name="lower" type="double" line="1114"/>
                <declaration name="upper" type="double" line="1117"/>
            </method>
            <method name="buildSegment" type="SubHyperplane&lt;Euclidean2D&gt;" line="1123">
                <params>
                    <param name="start" type="Vector2D"/>
                    <param name="end" type="Vector2D"/>
                </params>
                <declaration name="line" type="Line" line="1124"/>
                <declaration name="lower" type="double" line="1125"/>
                <declaration name="upper" type="double" line="1126"/>
            </method>
            <method name="checkPoints" type="void" line="1131">
                <params>
                    <param name="expected" type="Region.Location"/>
                    <param name="set" type="PolygonsSet"/>
                    <param name="points" type="Vector2D[]"/>
                </params>
                <scope line="1132"/>
            </method>
            <method name="checkInSegment" type="boolean" line="1139">
                <params>
                    <param name="p" type="Vector2D"/>
                    <param name="p1" type="Vector2D"/>
                    <param name="p2" type="Vector2D"/>
                    <param name="tolerance" type="double"/>
                </params>
                <declaration name="line" type="Line" line="1140"/>
                <scope line="1141">
                    <declaration name="x" type="double" line="1142"/>
                    <declaration name="x1" type="double" line="1143"/>
                    <declaration name="x2" type="double" line="1144"/>
                </scope>
                <scope line="1148"/>
            </method>
            <method name="checkVertices" type="void" line="1154">
                <params>
                    <param name="rebuiltVertices" type="Vector2D[][]"/>
                    <param name="vertices" type="Vector2D[][]"/>
                </params>
                <comment line="1157">
                    each rebuilt vertex should be in a segment joining two original vertices                    
                </comment>
                <comment line="1173">
                    each original vertex should have a corresponding rebuilt vertex                    
                </comment>
                <scope line="1157">
                    <scope line="1158">
                        <declaration name="inSegment" type="boolean" line="1159"/>
                        <declaration name="p" type="Vector2D" line="1160"/>
                        <scope line="1161">
                            <declaration name="loop" type="Vector2D[]" line="1162"/>
                            <declaration name="length" type="int" line="1163"/>
                            <scope line="1164"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="1173">
                    <scope line="1174">
                        <declaration name="min" type="double" line="1175"/>
                        <scope line="1176">
                            <scope line="1177"/>
                        </scope>
                    </scope>
                </scope>
            </method>
        </class>
    </source>