<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.euclidean.twod">
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="org.apache.commons.math3.geometry.euclidean.oned.Interval"/>
        <import package="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet"/>
        <import package="org.apache.commons.math3.geometry.euclidean.oned.Vector1D"/>
        <import package="org.apache.commons.math3.geometry.partitioning.BSPTree"/>
        <import package="org.apache.commons.math3.geometry.partitioning.Region"/>
        <import package="org.apache.commons.math3.geometry.partitioning.Region.Location"/>
        <import package="org.apache.commons.math3.geometry.partitioning.RegionFactory"/>
        <import package="org.apache.commons.math3.geometry.partitioning.SubHyperplane"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="PolygonsSetTest" line="15">
            <method name="testSimplyConnected" type="void" line="16">
                <declaration name="vertices" type="Vector2D[][]" line="17"/>
                <declaration name="set" type="PolygonsSet" line="18"/>
            </method>
            <method name="testStair" type="void" line="25">
                <declaration name="vertices" type="Vector2D[][]" line="26"/>
                <declaration name="set" type="PolygonsSet" line="27"/>
            </method>
            <method name="testHole" type="void" line="31">
                <declaration name="vertices" type="Vector2D[][]" line="32"/>
                <declaration name="set" type="PolygonsSet" line="33"/>
            </method>
            <method name="testDisjointPolygons" type="void" line="39">
                <declaration name="vertices" type="Vector2D[][]" line="40"/>
                <declaration name="set" type="PolygonsSet" line="41"/>
            </method>
            <method name="testOppositeHyperplanes" type="void" line="48">
                <declaration name="vertices" type="Vector2D[][]" line="49"/>
                <declaration name="set" type="PolygonsSet" line="50"/>
            </method>
            <method name="testSingularPoint" type="void" line="53">
                <declaration name="vertices" type="Vector2D[][]" line="54"/>
                <declaration name="set" type="PolygonsSet" line="55"/>
            </method>
            <method name="testLineIntersection" type="void" line="58">
                <declaration name="vertices" type="Vector2D[][]" line="59"/>
                <declaration name="set" type="PolygonsSet" line="60"/>
                <declaration name="l1" type="Line" line="61"/>
                <declaration name="s1" type="SubLine" line="62"/>
                <declaration name="i1" type="List&lt;Interval&gt;" line="63"/>
                <declaration name="v10" type="Interval" line="65"/>
                <declaration name="p10Lower" type="Vector2D" line="66"/>
                <declaration name="p10Upper" type="Vector2D" line="69"/>
                <declaration name="v11" type="Interval" line="72"/>
                <declaration name="p11Lower" type="Vector2D" line="73"/>
                <declaration name="p11Upper" type="Vector2D" line="76"/>
                <declaration name="l2" type="Line" line="79"/>
                <declaration name="s2" type="SubLine" line="80"/>
                <declaration name="i2" type="List&lt;Interval&gt;" line="81"/>
                <declaration name="v20" type="Interval" line="83"/>
                <declaration name="p20Lower" type="Vector2D" line="84"/>
                <declaration name="p20Upper" type="Vector2D" line="87"/>
            </method>
            <method name="testUnlimitedSubHyperplane" type="void" line="91">
                <declaration name="vertices1" type="Vector2D[][]" line="92"/>
                <declaration name="set1" type="PolygonsSet" line="93"/>
                <declaration name="vertices2" type="Vector2D[][]" line="94"/>
                <declaration name="set2" type="PolygonsSet" line="95"/>
                <declaration name="set" type="PolygonsSet" line="96"/>
            </method>
            <method name="testUnion" type="void" line="101">
                <declaration name="vertices1" type="Vector2D[][]" line="102"/>
                <declaration name="set1" type="PolygonsSet" line="103"/>
                <declaration name="vertices2" type="Vector2D[][]" line="104"/>
                <declaration name="set2" type="PolygonsSet" line="105"/>
                <declaration name="set" type="PolygonsSet" line="106"/>
            </method>
            <method name="testIntersection" type="void" line="114">
                <declaration name="vertices1" type="Vector2D[][]" line="115"/>
                <declaration name="set1" type="PolygonsSet" line="116"/>
                <declaration name="vertices2" type="Vector2D[][]" line="117"/>
                <declaration name="set2" type="PolygonsSet" line="118"/>
                <declaration name="set" type="PolygonsSet" line="119"/>
            </method>
            <method name="testXor" type="void" line="127">
                <declaration name="vertices1" type="Vector2D[][]" line="128"/>
                <declaration name="set1" type="PolygonsSet" line="129"/>
                <declaration name="vertices2" type="Vector2D[][]" line="130"/>
                <declaration name="set2" type="PolygonsSet" line="131"/>
                <declaration name="set" type="PolygonsSet" line="132"/>
            </method>
            <method name="testDifference" type="void" line="140">
                <declaration name="vertices1" type="Vector2D[][]" line="141"/>
                <declaration name="set1" type="PolygonsSet" line="142"/>
                <declaration name="vertices2" type="Vector2D[][]" line="143"/>
                <declaration name="set2" type="PolygonsSet" line="144"/>
                <declaration name="set" type="PolygonsSet" line="145"/>
            </method>
            <method name="testEmptyDifference" type="void" line="153">
                <declaration name="vertices1" type="Vector2D[][]" line="154"/>
                <declaration name="set1" type="PolygonsSet" line="155"/>
                <declaration name="vertices2" type="Vector2D[][]" line="156"/>
                <declaration name="set2" type="PolygonsSet" line="157"/>
            </method>
            <method name="testChoppedHexagon" type="void" line="160">
                <declaration name="pi6" type="double" line="161"/>
                <declaration name="sqrt3" type="double" line="162"/>
                <declaration name="hyp" type="SubLine[]" line="163"/>
                <declaration name="tree" type="BSPTree&lt;Euclidean2D&gt;" line="170"/>
                <scope line="171"/>
                <declaration name="set" type="PolygonsSet" line="174"/>
                <declaration name="splitter" type="SubLine" line="175"/>
                <declaration name="slice" type="PolygonsSet" line="176"/>
            </method>
            <method name="testConcentric" type="void" line="180">
                <declaration name="h" type="double" line="181"/>
                <declaration name="vertices1" type="Vector2D[][]" line="182"/>
                <declaration name="set1" type="PolygonsSet" line="183"/>
                <declaration name="vertices2" type="Vector2D[][]" line="184"/>
                <declaration name="set2" type="PolygonsSet" line="185"/>
            </method>
            <method name="testBug20040520" type="void" line="188">
                <declaration name="a0" type="BSPTree&lt;Euclidean2D&gt;" line="189"/>
                <declaration name="a1" type="BSPTree&lt;Euclidean2D&gt;" line="190"/>
                <declaration name="a2" type="BSPTree&lt;Euclidean2D&gt;" line="191"/>
                <declaration name="a3" type="BSPTree&lt;Euclidean2D&gt;" line="192"/>
                <declaration name="a4" type="BSPTree&lt;Euclidean2D&gt;" line="193"/>
                <declaration name="a5" type="BSPTree&lt;Euclidean2D&gt;" line="194"/>
                <declaration name="a6" type="BSPTree&lt;Euclidean2D&gt;" line="195"/>
                <declaration name="a7" type="BSPTree&lt;Euclidean2D&gt;" line="196"/>
                <declaration name="a8" type="BSPTree&lt;Euclidean2D&gt;" line="197"/>
                <declaration name="a9" type="BSPTree&lt;Euclidean2D&gt;" line="198"/>
                <declaration name="b0" type="BSPTree&lt;Euclidean2D&gt;" line="199"/>
                <declaration name="b1" type="BSPTree&lt;Euclidean2D&gt;" line="200"/>
                <declaration name="b2" type="BSPTree&lt;Euclidean2D&gt;" line="201"/>
                <declaration name="b3" type="BSPTree&lt;Euclidean2D&gt;" line="202"/>
                <declaration name="b4" type="BSPTree&lt;Euclidean2D&gt;" line="203"/>
                <declaration name="b5" type="BSPTree&lt;Euclidean2D&gt;" line="204"/>
                <declaration name="b6" type="BSPTree&lt;Euclidean2D&gt;" line="205"/>
                <declaration name="c" type="PolygonsSet" line="206"/>
            </method>
            <method name="testBug20041003" type="void" line="211">
                <declaration name="l" type="Line[]" line="212"/>
                <declaration name="node1" type="BSPTree&lt;Euclidean2D&gt;" line="213"/>
                <declaration name="node2" type="BSPTree&lt;Euclidean2D&gt;" line="214"/>
                <declaration name="node3" type="BSPTree&lt;Euclidean2D&gt;" line="215"/>
                <declaration name="node4" type="BSPTree&lt;Euclidean2D&gt;" line="216"/>
                <declaration name="set" type="PolygonsSet" line="217"/>
            </method>
            <method name="testSqueezedHexa" type="void" line="220">
                <declaration name="set" type="PolygonsSet" line="221"/>
            </method>
            <method name="testIssue880Simplified" type="void" line="224">
                <declaration name="vertices1" type="Vector2D[]" line="225"/>
                <declaration name="set1" type="PolygonsSet" line="226"/>
            </method>
            <method name="testIssue880Complete" type="void" line="230">
                <declaration name="vertices1" type="Vector2D[]" line="231"/>
                <declaration name="set1" type="PolygonsSet" line="232"/>
                <declaration name="vertices2" type="Vector2D[]" line="239"/>
                <declaration name="set2" type="PolygonsSet" line="240"/>
                <declaration name="set" type="PolygonsSet" line="241"/>
                <declaration name="verticies" type="Vector2D[][]" line="242"/>
            </method>
            <method name="buildSet" type="PolygonsSet" line="246">
                <params>
                    <param name="vertices" type="Vector2D[][]"/>
                </params>
                <declaration name="edges" type="ArrayList&lt;SubHyperplane&lt;Euclidean2D&gt;&gt;" line="247"/>
                <scope line="248">
                    <declaration name="l" type="int" line="249"/>
                    <scope line="250"/>
                </scope>
            </method>
            <method name="buildLine" type="SubHyperplane<Euclidean2D>" line="256">
                <params>
                    <param name="start" type="Vector2D"/>
                    <param name="end" type="Vector2D"/>
                </params>
            </method>
            <method name="intersectionAbscissa" type="double" line="259">
                <params>
                    <param name="l0" type="Line"/>
                    <param name="l1" type="Line"/>
                </params>
                <declaration name="p" type="Vector2D" line="260"/>
            </method>
            <method name="buildHalfLine" type="SubHyperplane<Euclidean2D>" line="263">
                <params>
                    <param name="start" type="Vector2D"/>
                    <param name="end" type="Vector2D"/>
                    <param name="startIsVirtual" type="boolean"/>
                </params>
                <declaration name="line" type="Line" line="264"/>
                <declaration name="lower" type="double" line="265"/>
                <declaration name="upper" type="double" line="266"/>
            </method>
            <method name="buildSegment" type="SubHyperplane<Euclidean2D>" line="269">
                <params>
                    <param name="start" type="Vector2D"/>
                    <param name="end" type="Vector2D"/>
                </params>
                <declaration name="line" type="Line" line="270"/>
                <declaration name="lower" type="double" line="271"/>
                <declaration name="upper" type="double" line="272"/>
            </method>
            <method name="checkPoints" type="void" line="275">
                <params>
                    <param name="expected" type="Region.Location"/>
                    <param name="set" type="PolygonsSet"/>
                    <param name="points" type="Vector2D[]"/>
                </params>
                <scope line="276"/>
            </method>
            <method name="checkInSegment" type="boolean" line="280">
                <params>
                    <param name="p" type="Vector2D"/>
                    <param name="p1" type="Vector2D"/>
                    <param name="p2" type="Vector2D"/>
                    <param name="tolerance" type="double"/>
                </params>
                <declaration name="line" type="Line" line="281"/>
                <scope line="282">
                    <declaration name="x" type="double" line="283"/>
                    <declaration name="x1" type="double" line="284"/>
                    <declaration name="x2" type="double" line="285"/>
                </scope>
                <scope line="288"/>
            </method>
            <method name="checkVertices" type="void" line="292">
                <params>
                    <param name="rebuiltVertices" type="Vector2D[][]"/>
                    <param name="vertices" type="Vector2D[][]"/>
                </params>
                <scope line="293">
                    <scope line="294">
                        <declaration name="inSegment" type="boolean" line="295"/>
                        <declaration name="p" type="Vector2D" line="296"/>
                        <scope line="297">
                            <declaration name="loop" type="Vector2D[]" line="298"/>
                            <declaration name="length" type="int" line="299"/>
                            <scope line="300"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="307">
                    <scope line="308">
                        <declaration name="min" type="double" line="309"/>
                        <scope line="310">
                            <scope line="311"/>
                        </scope>
                    </scope>
                </scope>
            </method>
        </class>
    </source>