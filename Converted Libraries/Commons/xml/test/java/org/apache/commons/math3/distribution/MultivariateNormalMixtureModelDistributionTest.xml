<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="java.util.List"/>
        <import package="java.util.ArrayList"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.exception.MathArithmeticException"/>
        <import package="org.apache.commons.math3.util.Pair"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="MultivariateNormalMixtureModelDistributionTest" line="9">
            <javadoc line="9">
                Test that demonstrates the use of {@link MixtureMultivariateRealDistribution}in order to create a mixture model composed of {@link MultivariateNormalDistributionnormal distributions}.                
            </javadoc>
            <method name="testNonUnitWeightSum" type="void" line="13">
                <declaration name="weights" type="double[]" line="14"/>
                <declaration name="means" type="double[][]" line="15"/>
                <declaration name="covariances" type="double[][][]" line="16"/>
                <declaration name="d" type="MultivariateNormalMixtureModelDistribution" line="17"/>
                <declaration name="comp" type="List&lt;Pair&lt;Double,MultivariateNormalDistribution&gt;&gt;" line="18"/>
            </method>
            <method name="testWeightSumOverFlow" type="void" line="22">
                <declaration name="weights" type="double[]" line="23"/>
                <declaration name="means" type="double[][]" line="24"/>
                <declaration name="covariances" type="double[][][]" line="25"/>
                <declaration name="d" type="MultivariateNormalMixtureModelDistribution" line="26"/>
            </method>
            <method name="testPreconditionPositiveWeights" type="void" line="28">
                <declaration name="negativeWeights" type="double[]" line="29"/>
                <declaration name="means" type="double[][]" line="30"/>
                <declaration name="covariances" type="double[][][]" line="31"/>
                <declaration name="d" type="MultivariateNormalMixtureModelDistribution" line="32"/>
            </method>
            <javadoc line="34">
                Test the accuracy of the density calculation.                
            </javadoc>
            <method name="testDensities" type="void" line="37">
                <declaration name="weights" type="double[]" line="38"/>
                <declaration name="means" type="double[][]" line="39"/>
                <declaration name="covariances" type="double[][][]" line="40"/>
                <declaration name="d" type="MultivariateNormalMixtureModelDistribution" line="41"/>
                <declaration name="testValues" type="double[][]" line="42"/>
                <declaration name="correctDensities" type="double[]" line="43"/>
                <scope line="44"/>
            </method>
            <javadoc line="48">
                Test the accuracy of sampling from the distribution.                
            </javadoc>
            <method name="testSampling" type="void" line="51">
                <declaration name="weights" type="double[]" line="52"/>
                <declaration name="means" type="double[][]" line="53"/>
                <declaration name="covariances" type="double[][][]" line="54"/>
                <declaration name="d" type="MultivariateNormalMixtureModelDistribution" line="55"/>
                <declaration name="correctSamples" type="double[][]" line="57"/>
                <declaration name="n" type="int" line="58"/>
                <declaration name="samples" type="double[][]" line="59"/>
                <scope line="60">
                    <scope line="61"/>
                </scope>
            </method>
            <javadoc line="66">
                Creates a mixture of Gaussian distributions.                
                <param>
                    weights Weights.                    
                </param>
                <param>
                    means Means.                    
                </param>
                <param>
                    covariances Covariances.                    
                </param>
                <return>
                    the mixture distribution.                    
                </return>
            </javadoc>
            <method name="create" type="MultivariateNormalMixtureModelDistribution" line="73">
                <params>
                    <param name="weights" type="double[]"/>
                    <param name="means" type="double[][]"/>
                    <param name="covariances" type="double[][][]"/>
                </params>
                <declaration name="mvns" type="List&lt;Pair&lt;Double,MultivariateNormalDistribution&gt;&gt;" line="74"/>
                <scope line="75">
                    <declaration name="dist" type="MultivariateNormalDistribution" line="76"/>
                </scope>
            </method>
            <javadoc line="81">
                Values used in {@link #testSampling()}.                
            </javadoc>
            <method name="getCorrectSamples" type="double[][]" line="84"/>
        </class>
        <class name="MultivariateNormalMixtureModelDistribution" line="88">
            <extends class="MixtureMultivariateRealDistribution">
                <type_params>
                    <type_param name="MultivariateNormalDistribution"/>
                </type_params>
            </extends>
            <javadoc line="88">
                Class that implements a mixture of Gaussian ditributions.                
            </javadoc>
            <method name="MultivariateNormalMixtureModelDistribution" type="constructor" line="92">
                <params>
                    <param name="components" type="List<Pair<Double,MultivariateNormalDistribution>>"/>
                </params>
            </method>
        </class>
    </source>