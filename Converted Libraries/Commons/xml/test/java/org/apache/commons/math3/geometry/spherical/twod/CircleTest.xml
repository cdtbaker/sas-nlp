<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.spherical.twod">
        <import package="org.apache.commons.math3.geometry.euclidean.threed.Rotation"/>
        <import package="org.apache.commons.math3.geometry.euclidean.threed.Vector3D"/>
        <import package="org.apache.commons.math3.geometry.partitioning.Transform"/>
        <import package="org.apache.commons.math3.geometry.spherical.oned.Arc"/>
        <import package="org.apache.commons.math3.geometry.spherical.oned.LimitAngle"/>
        <import package="org.apache.commons.math3.geometry.spherical.oned.S1Point"/>
        <import package="org.apache.commons.math3.geometry.spherical.oned.Sphere1D"/>
        <import package="org.apache.commons.math3.geometry.spherical.oned.SubLimitAngle"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.random.UnitSphereRandomVectorGenerator"/>
        <import package="org.apache.commons.math3.random.Well1024a"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="CircleTest" line="35">
            <method name="testEquator" type="void" line="38">
                <declaration name="circle" type="Circle" line="39"/>
            </method>
            <method name="testXY" type="void" line="49">
                <declaration name="circle" type="Circle" line="50"/>
            </method>
            <method name="testReverse" type="void" line="62">
                <declaration name="circle" type="Circle" line="63"/>
                <declaration name="reversed" type="Circle" line="64"/>
            </method>
            <method name="testPhase" type="void" line="84">
                <declaration name="circle" type="Circle" line="85"/>
                <declaration name="p" type="Vector3D" line="86"/>
                <declaration name="samePhase" type="Vector3D" line="87"/>
            </method>
            <method name="testSubSpace" type="void" line="100">
                <declaration name="circle" type="Circle" line="101"/>
                <declaration name="p" type="Vector3D" line="104"/>
            </method>
            <method name="testSpace" type="void" line="109">
                <declaration name="circle" type="Circle" line="110"/>
                <scope line="111">
                    <declaration name="p" type="Vector3D" line="112"/>
                    <declaration name="q" type="Vector3D" line="114"/>
                </scope>
            </method>
            <method name="testOffset" type="void" line="121">
                <declaration name="circle" type="Circle" line="122"/>
            </method>
            <method name="testInsideArc" type="void" line="133">
                <declaration name="random" type="RandomGenerator" line="134"/>
                <declaration name="sphRandom" type="UnitSphereRandomVectorGenerator" line="135"/>
                <scope line="136">
                    <declaration name="c1" type="Circle" line="137"/>
                    <declaration name="c2" type="Circle" line="138"/>
                </scope>
            </method>
            <method name="checkArcIsInside" type="void" line="144">
                <params>
                    <param name="arcCircle" type="Circle"/>
                    <param name="otherCircle" type="Circle"/>
                </params>
                <declaration name="arc" type="Arc" line="145"/>
                <scope line="147"/>
                <scope line="150"/>
            </method>
            <method name="testTransform" type="void" line="156">
                <declaration name="random" type="RandomGenerator" line="157"/>
                <declaration name="sphRandom" type="UnitSphereRandomVectorGenerator" line="158"/>
                <scope line="159">
                    <declaration name="r" type="Rotation" line="161"/>
                    <declaration name="t" type="Transform&amp;lt;Sphere2D,Sphere1D&amp;gt;" line="163"/>
                    <declaration name="p" type="S2Point" line="165"/>
                    <declaration name="tp" type="S2Point" line="166"/>
                    <declaration name="c" type="Circle" line="169"/>
                    <declaration name="tc" type="Circle" line="170"/>
                    <declaration name="sub" type="SubLimitAngle" line="176"/>
                    <declaration name="psub" type="Vector3D" line="178"/>
                    <declaration name="tsub" type="SubLimitAngle" line="179"/>
                    <declaration name="ptsub" type="Vector3D" line="180"/>
                </scope>
            </method>
        </class>
    </source>