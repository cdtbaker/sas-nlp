<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="java.util.Random"/>
        <import package="org.apache.commons.math3.linear.SingularMatrixException"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="QRDecompositionTest" line="27">
            <declaration name="testData3x3NonSingular" type="double[][]" line="28"/>
            <declaration name="testData3x3Singular" type="double[][]" line="33"/>
            <declaration name="testData3x4" type="double[][]" line="38"/>
            <declaration name="testData4x3" type="double[][]" line="43"/>
            <declaration name="entryTolerance" type="double" line="49"/>
            <declaration name="normTolerance" type="double" line="51"/>
            <javadoc line="53">
                test dimensions                
            </javadoc>
            <method name="testDimensions" type="void" line="55">
                <declaration name="r" type="Random" line="62"/>
                <declaration name="p" type="int" line="63"/>
                <declaration name="q" type="int" line="64"/>
            </method>
            <method name="checkDimension" type="void" line="70">
                <params>
                    <param name="m" type="RealMatrix"/>
                </params>
                <declaration name="rows" type="int" line="71"/>
                <declaration name="columns" type="int" line="72"/>
                <declaration name="qr" type="QRDecomposition" line="73"/>
            </method>
            <javadoc line="80">
                test A = QR                
            </javadoc>
            <method name="testAEqualQR" type="void" line="82">
                <declaration name="r" type="Random" line="91"/>
                <declaration name="p" type="int" line="92"/>
                <declaration name="q" type="int" line="93"/>
            </method>
            <method name="checkAEqualQR" type="void" line="100">
                <params>
                    <param name="m" type="RealMatrix"/>
                </params>
                <declaration name="qr" type="QRDecomposition" line="101"/>
                <declaration name="norm" type="double" line="102"/>
            </method>
            <javadoc line="106">
                test the orthogonality of Q                
            </javadoc>
            <method name="testQOrthogonal" type="void" line="108">
                <declaration name="r" type="Random" line="117"/>
                <declaration name="p" type="int" line="118"/>
                <declaration name="q" type="int" line="119"/>
            </method>
            <method name="checkQOrthogonal" type="void" line="126">
                <params>
                    <param name="m" type="RealMatrix"/>
                </params>
                <declaration name="qr" type="QRDecomposition" line="127"/>
                <declaration name="eye" type="RealMatrix" line="128"/>
                <declaration name="norm" type="double" line="129"/>
            </method>
            <javadoc line="133">
                test that R is upper triangular                
            </javadoc>
            <method name="testRUpperTriangular" type="void" line="135">
                <declaration name="matrix" type="RealMatrix" line="136"/>
                <declaration name="r" type="Random" line="148"/>
                <declaration name="p" type="int" line="149"/>
                <declaration name="q" type="int" line="150"/>
            </method>
            <method name="checkUpperTriangular" type="void" line="159">
                <params>
                    <param name="m" type="RealMatrix"/>
                </params>
                <anonymous_class line="160">
                    <method name="visit" type="void" line="162">
                        <params>
                            <param name="row" type="int"/>
                            <param name="column" type="int"/>
                            <param name="value" type="double"/>
                        </params>
                        <scope line="163"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="170">
                test that H is trapezoidal                
            </javadoc>
            <method name="testHTrapezoidal" type="void" line="172">
                <declaration name="matrix" type="RealMatrix" line="173"/>
                <declaration name="r" type="Random" line="185"/>
                <declaration name="p" type="int" line="186"/>
                <declaration name="q" type="int" line="187"/>
            </method>
            <method name="checkTrapezoidal" type="void" line="196">
                <params>
                    <param name="m" type="RealMatrix"/>
                </params>
                <anonymous_class line="197">
                    <method name="visit" type="void" line="199">
                        <params>
                            <param name="row" type="int"/>
                            <param name="column" type="int"/>
                            <param name="value" type="double"/>
                        </params>
                        <scope line="200"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="206">
                test matrices values                
            </javadoc>
            <method name="testMatricesValues" type="void" line="208">
                <comment line="228">
                    check values against known references                    
                </comment>
                <comment line="238">
                    check the same cached instance is returned the second time                    
                </comment>
                <declaration name="qr" type="QRDecomposition" line="209"/>
                <declaration name="qRef" type="RealMatrix" line="211"/>
                <declaration name="rRef" type="RealMatrix" line="216"/>
                <declaration name="hRef" type="RealMatrix" line="221"/>
                <declaration name="q" type="RealMatrix" line="228"/>
                <declaration name="qT" type="RealMatrix" line="230"/>
                <declaration name="r" type="RealMatrix" line="232"/>
                <declaration name="h" type="RealMatrix" line="234"/>
            </method>
            <method name="testNonInvertible" type="void" line="245">
                <declaration name="qr" type="QRDecomposition" line="246"/>
            </method>
            <method name="testInvertTallSkinny" type="void" line="252">
                <declaration name="a" type="RealMatrix" line="253"/>
                <declaration name="pinv" type="RealMatrix" line="254"/>
            </method>
            <method name="testInvertShortWide" type="void" line="259">
                <declaration name="a" type="RealMatrix" line="260"/>
                <declaration name="pinv" type="RealMatrix" line="261"/>
            </method>
            <method name="createTestMatrix" type="RealMatrix" line="266">
                <params>
                    <param name="r" type="Random"/>
                    <param name="rows" type="int"/>
                    <param name="columns" type="int"/>
                </params>
                <declaration name="m" type="RealMatrix" line="267"/>
                <anonymous_class line="268">
                    <method name="visit" type="double" line="270">
                        <params>
                            <param name="row" type="int"/>
                            <param name="column" type="int"/>
                            <param name="value" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <method name="testQRSingular" type="void" line="278">
                <declaration name="a" type="RealMatrix" line="279"/>
                <declaration name="b" type="RealVector" line="282"/>
            </method>
        </class>
    </source>