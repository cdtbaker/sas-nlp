<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optimization.direct">
        <import package="org.apache.commons.math3.analysis.MultivariateFunction"/>
        <import package="org.apache.commons.math3.optimization.GoalType"/>
        <import package="org.apache.commons.math3.optimization.PointValuePair"/>
        <import package="org.apache.commons.math3.optimization.SimpleValueChecker"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="SimplexOptimizerMultiDirectionalTest" line="9">
            <method name="testMinimize1" type="void" line="10">
                <declaration name="optimizer" type="SimplexOptimizer" line="11"/>
                <declaration name="fourExtrema" type="FourExtrema" line="13"/>
                <declaration name="optimum" type="PointValuePair" line="14"/>
            </method>
            <method name="testMinimize2" type="void" line="21">
                <declaration name="optimizer" type="SimplexOptimizer" line="22"/>
                <declaration name="fourExtrema" type="FourExtrema" line="24"/>
                <declaration name="optimum" type="PointValuePair" line="25"/>
            </method>
            <method name="testMaximize1" type="void" line="32">
                <declaration name="optimizer" type="SimplexOptimizer" line="33"/>
                <declaration name="fourExtrema" type="FourExtrema" line="35"/>
                <declaration name="optimum" type="PointValuePair" line="36"/>
            </method>
            <method name="testMaximize2" type="void" line="43">
                <declaration name="optimizer" type="SimplexOptimizer" line="44"/>
                <declaration name="fourExtrema" type="FourExtrema" line="46"/>
                <declaration name="optimum" type="PointValuePair" line="47"/>
            </method>
            <method name="testRosenbrock" type="void" line="54">
                <anonymous_class line="55">
                    <method name="value" type="double" line="56">
                        <params>
                            <param name="x" type="double[]"/>
                        </params>
                        <declaration name="a" type="double" line="58"/>
                        <declaration name="b" type="double" line="59"/>
                    </method>
                </anonymous_class>
                <declaration name="rosenbrock" type="MultivariateFunction" line="55"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="65"/>
                <declaration name="optimum" type="PointValuePair" line="67"/>
            </method>
            <method name="testPowell" type="void" line="73">
                <anonymous_class line="74">
                    <method name="value" type="double" line="75">
                        <params>
                            <param name="x" type="double[]"/>
                        </params>
                        <declaration name="a" type="double" line="77"/>
                        <declaration name="b" type="double" line="78"/>
                        <declaration name="c" type="double" line="79"/>
                        <declaration name="d" type="double" line="80"/>
                    </method>
                </anonymous_class>
                <declaration name="powell" type="MultivariateFunction" line="74"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="86"/>
                <declaration name="optimum" type="PointValuePair" line="88"/>
            </method>
            <method name="testMath283" type="void" line="94">
                <declaration name="optimizer" type="SimplexOptimizer" line="95"/>
                <declaration name="function" type="Gaussian2D" line="97"/>
                <declaration name="estimate" type="PointValuePair" line="98"/>
                <declaration name="EPSILON" type="double" line="99"/>
                <declaration name="expectedMaximum" type="double" line="100"/>
                <declaration name="actualMaximum" type="double" line="101"/>
                <declaration name="expectedPosition" type="double[]" line="103"/>
                <declaration name="actualPosition" type="double[]" line="104"/>
            </method>
            <class name="FourExtrema" line="108">
                <implements interface="MultivariateFunction"/>
                <declaration name="xM" type="double" line="109"/>
                <declaration name="yM" type="double" line="110"/>
                <declaration name="xP" type="double" line="111"/>
                <declaration name="yP" type="double" line="112"/>
                <declaration name="valueXmYm" type="double" line="113"/>
                <declaration name="valueXmYp" type="double" line="114"/>
                <declaration name="valueXpYm" type="double" line="115"/>
                <declaration name="valueXpYp" type="double" line="116"/>
                <method name="value" type="double" line="117">
                    <params>
                        <param name="variables" type="double[]"/>
                    </params>
                    <declaration name="x" type="double" line="118"/>
                    <declaration name="y" type="double" line="119"/>
                </method>
            </class>
            <class name="Gaussian2D" line="123">
                <implements interface="MultivariateFunction"/>
                <declaration name="maximumPosition" type="double[]" line="124"/>
                <declaration name="std" type="double" line="125"/>
                <method name="Gaussian2D" type="constructor" line="126">
                    <params>
                        <param name="xOpt" type="double"/>
                        <param name="yOpt" type="double"/>
                        <param name="std" type="double"/>
                    </params>
                </method>
                <method name="getMaximum" type="double" line="130"/>
                <method name="getMaximumPosition" type="double[]" line="133"/>
                <method name="value" type="double" line="136">
                    <params>
                        <param name="point" type="double[]"/>
                    </params>
                    <declaration name="x" type="double" line="137"/>
                    <declaration name="twoS2" type="double" line="138"/>
                </method>
            </class>
            <declaration name="count" type="int" line="142"/>
        </class>
    </source>