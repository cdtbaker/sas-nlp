<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.util">
        <import package="java.math.BigDecimal"/>
        <import package="org.apache.commons.math3.exception.MathArithmeticException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="PrecisionTest" line="24">
            <comment line="124">
                Tests for floating point equality                
            </comment>
            <javadoc line="24">
                Test cases for the {@link Precision} class.                
                <version>
                    $Id$                    
                </version>
            </javadoc>
            <method name="testEqualsWithRelativeTolerance" type="void" line="31">
                <declaration name="eps" type="double" line="35"/>
            </method>
            <method name="testEqualsIncludingNaN" type="void" line="58">
                <declaration name="testArray" type="double[]" line="59"/>
                <scope line="65">
                    <scope line="66">
                        <scope line="67"/>
                        <scope line="70"/>
                    </scope>
                </scope>
            </method>
            <method name="testEqualsWithAllowedDelta" type="void" line="79"/>
            <method name="testMath475" type="void" line="92">
                <comment line="98">
                    Because they are adjacent floating point numbers, &quot;a&quot; and &quot;b&quot; are
                     considered equal even though the allowed error is smaller than
                     their difference.                    
                </comment>
                <comment line="105">
                    Because &quot;a&quot; and &quot;c&quot; are not adjacent, the tolerance is taken into
                     account for assessing equality.                    
                </comment>
                <declaration name="a" type="double" line="93"/>
                <declaration name="b" type="double" line="94"/>
                <declaration name="diff" type="double" line="96"/>
                <declaration name="c" type="double" line="102"/>
            </method>
            <method name="testEqualsIncludingNaNWithAllowedDelta" type="void" line="111"/>
            <method name="testFloatEqualsWithAllowedUlps" type="void" line="125">
                <comment line="136">
                    These tests need adjusting for floating point precision                    
                </comment>
                <comment line="137">
                    Assert.assertTrue(Precision.equals(153.0f, 153.00000000000003f, 1));
                            Assert.assertFalse(Precision.equals(153.0f, 153.00000000000006f, 1));
                            Assert.assertTrue(Precision.equals(153.0f, 152.99999999999997f, 1));
                            Assert.assertFalse(Precision.equals(153f, 152.99999999999994f, 1));
                    
                            Assert.assertTrue(Precision.equals(-128.0f, -127.99999999999999f, 1));
                            Assert.assertFalse(Precision.equals(-128.0f, -127.99999999999997f, 1));
                            Assert.assertTrue(Precision.equals(-128.0f, -128.00000000000003f, 1));
                            Assert.assertFalse(Precision.equals(-128.0f, -128.00000000000006f, 1));                    
                </comment>
                <declaration name="oneFloat" type="float" line="128"/>
            </method>
            <method name="testEqualsWithAllowedUlps" type="void" line="162">
                <declaration name="nUp1" type="double" line="168"/>
                <declaration name="nnUp1" type="double" line="169"/>
            </method>
            <method name="testEqualsIncludingNaNWithAllowedUlps" type="void" line="205">
                <declaration name="nUp1" type="double" line="211"/>
                <declaration name="nnUp1" type="double" line="212"/>
            </method>
            <method name="testCompareToEpsilon" type="void" line="244"/>
            <method name="testCompareToMaxUlps" type="void" line="253">
                <declaration name="a" type="double" line="254"/>
                <declaration name="delta" type="double" line="255"/>
                <scope line="256">
                    <scope line="257"/>
                    <scope line="260"/>
                </scope>
            </method>
            <method name="testRoundDouble" type="void" line="290">
                <comment line="297">
                    JIRA MATH-151                    
                </comment>
                <comment line="304">
                    BZ 35904                    
                </comment>
                <comment line="372">
                    expected                    
                </comment>
                <comment line="386">
                    expected                    
                </comment>
                <comment line="389">
                    MATH-151                    
                </comment>
                <comment line="392">
                    special values                    
                </comment>
                <declaration name="x" type="double" line="291"/>
                <declaration name="xx" type="double" line="299"/>
                <scope line="367"/>
                <scope line="370"/>
                <scope line="381"/>
                <scope line="384"/>
            </method>
            <method name="testRoundFloat" type="void" line="399">
                <comment line="406">
                    BZ 35904                    
                </comment>
                <comment line="472">
                    success                    
                </comment>
                <comment line="486">
                    success                    
                </comment>
                <comment line="489">
                    special values                    
                </comment>
                <declaration name="x" type="float" line="400"/>
                <scope line="467"/>
                <scope line="470"/>
                <scope line="481"/>
                <scope line="484"/>
            </method>
            <method name="testIssue721" type="void" line="497"/>
            <method name="testRepresentableDelta" type="void" line="504">
                <declaration name="nonRepresentableCount" type="int" line="505"/>
                <declaration name="x" type="double" line="506"/>
                <declaration name="numTrials" type="int" line="507"/>
                <scope line="508">
                    <declaration name="originalDelta" type="double" line="509"/>
                    <declaration name="delta" type="double" line="510"/>
                    <scope line="511"/>
                </scope>
            </method>
            <method name="testMath843" type="void" line="520">
                <comment line="525">
                    a) 1 + EPSILON is equal to 1.                    
                </comment>
                <comment line="528">
                    b) 1 + &quot;the number after EPSILON&quot; is not equal to 1.                    
                </comment>
                <declaration name="afterEpsilon" type="double" line="521"/>
            </method>
        </class>
    </source>