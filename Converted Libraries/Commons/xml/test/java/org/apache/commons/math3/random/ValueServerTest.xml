<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.random">
        <import package="java.net.URL"/>
        <import package="java.util.Arrays"/>
        <import package="org.apache.commons.math3.RetryRunner"/>
        <import package="org.apache.commons.math3.exception.MathIllegalStateException"/>
        <import package="org.apache.commons.math3.exception.ZeroException"/>
        <import package="org.apache.commons.math3.stat.descriptive.SummaryStatistics"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Before"/>
        <import package="org.junit.Test"/>
        <import package="org.junit.runner.RunWith"/>
        <class name="ValueServerTest" line="31">
            <javadoc line="31">
                Test cases for the ValueServer class.                
                <version>
                    $Id: ValueServerTest.java 1425978 2012-12-26 18:19:30Z psteitz $                    
                </version>
            </javadoc>
            <declaration name="vs" type="ValueServer" line="40"/>
            <method name="setUp" type="void" line="43">
                <declaration name="url" type="URL" line="45"/>
            </method>
            <javadoc line="49">
                Generate 1000 random values and make sure they look OK.&lt;br&gt;
                  Note that there is a non-zero (but very small) probability that
                  these tests will fail even if the code is working as designed.                
            </javadoc>
            <method name="testNextDigest" type="void" line="55">
                <declaration name="next" type="double" line="56"/>
                <declaration name="tolerance" type="double" line="57"/>
                <declaration name="stats" type="SummaryStatistics" line="61"/>
                <scope line="62"/>
                <scope line="72"/>
            </method>
            <javadoc line="81">
                Verify that when provided with fixed seeds, stochastic modes
                  generate fixed sequences.  Verifies the fix for MATH-654.                
            </javadoc>
            <method name="testFixedSeed" type="void" line="86">
                <declaration name="valueServer" type="ValueServer" line="87"/>
                <declaration name="url" type="URL" line="88"/>
            </method>
            <javadoc line="97">
                Do the check for {@link #testFixedSeed()}                
                <param>
                    mode ValueServer mode                    
                </param>
            </javadoc>
            <method name="checkFixedSeed" type="void" line="101">
                <params>
                    <param name="valueServer" type="ValueServer"/>
                    <param name="mode" type="int"/>
                </params>
                <declaration name="values" type="double[][]" line="104"/>
                <scope line="105"/>
                <scope line="109"/>
            </method>
            <javadoc line="115">
                Make sure exception thrown if digest getNext is attempted
                  before loading empiricalDistribution.                
            </javadoc>
            <method name="testNextDigestFail" type="void" line="120">
                <scope line="121"/>
                <scope line="124"/>
            </method>
            <method name="testEmptyReplayFile" type="void" line="128">
                <comment line="137">
                    expected behavior                    
                </comment>
                <scope line="129">
                    <declaration name="url" type="URL" line="130"/>
                </scope>
                <scope line="135"/>
            </method>
            <method name="testEmptyDigestFile" type="void" line="141">
                <comment line="150">
                    expected behavior                    
                </comment>
                <scope line="142">
                    <declaration name="url" type="URL" line="143"/>
                </scope>
                <scope line="148"/>
            </method>
            <javadoc line="153">
                Test ValueServer REPLAY_MODE using values in testData file.&lt;br&gt;
                  Check that the values 1,2,1001,1002 match data file values 1 and 2.
                  the sample data file.                
            </javadoc>
            <method name="testReplay" type="void" line="159">
                <comment line="179">
                    make sure no NPE                    
                </comment>
                <declaration name="firstDataValue" type="double" line="160"/>
                <declaration name="secondDataValue" type="double" line="161"/>
                <declaration name="tolerance" type="double" line="162"/>
                <declaration name="compareValue" type="double" line="163"/>
                <scope line="170"/>
            </method>
            <javadoc line="182">
                Test other ValueServer modes                
            </javadoc>
            <method name="testModes" type="void" line="186">
                <comment line="208">
                    ignored                    
                </comment>
                <declaration name="val" type="double" line="192"/>
                <scope line="202"/>
                <scope line="206"/>
            </method>
            <javadoc line="211">
                Test fill                
            </javadoc>
            <method name="testFill" type="void" line="215">
                <declaration name="val" type="double[]" line="218"/>
                <scope line="220"/>
                <declaration name="v2" type="double" line="223"/>
                <scope line="224"/>
            </method>
            <javadoc line="229">
                Test getters to make Clover happy                
            </javadoc>
            <method name="testProperties" type="void" line="233">
                <declaration name="url" type="URL" line="237"/>
            </method>
        </class>
    </source>