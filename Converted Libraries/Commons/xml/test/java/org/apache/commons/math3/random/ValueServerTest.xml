<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.random">
        <import package="java.net.URL"/>
        <import package="java.util.Arrays"/>
        <import package="org.apache.commons.math3.RetryRunner"/>
        <import package="org.apache.commons.math3.exception.MathIllegalStateException"/>
        <import package="org.apache.commons.math3.exception.ZeroException"/>
        <import package="org.apache.commons.math3.stat.descriptive.SummaryStatistics"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Before"/>
        <import package="org.junit.Test"/>
        <import package="org.junit.runner.RunWith"/>
        <class name="ValueServerTest" line="12">
            <javadoc line="12">
                Test cases for the ValueServer class.                
                <version>
                    $Id: ValueServerTest.java 1425978 2012-12-26 18:19:30Z psteitz $                    
                </version>
            </javadoc>
            <declaration name="vs" type="ValueServer" line="17"/>
            <method name="setUp" type="void" line="18">
                <declaration name="url" type="URL" line="20"/>
            </method>
            <javadoc line="23">
                Generate 1000 random values and make sure they look OK.&lt;br&gt;
                  Note that there is a non-zero (but very small) probability that
                  these tests will fail even if the code is working as designed.                
            </javadoc>
            <method name="testNextDigest" type="void" line="28">
                <declaration name="next" type="double" line="29"/>
                <declaration name="tolerance" type="double" line="30"/>
                <declaration name="stats" type="SummaryStatistics" line="33"/>
                <scope line="34"/>
                <scope line="42"/>
            </method>
            <javadoc line="49">
                Verify that when provided with fixed seeds, stochastic modes
                  generate fixed sequences.  Verifies the fix for MATH-654.                
            </javadoc>
            <method name="testFixedSeed" type="void" line="53">
                <declaration name="valueServer" type="ValueServer" line="54"/>
                <declaration name="url" type="URL" line="55"/>
            </method>
            <javadoc line="63">
                Do the check for {@link #testFixedSeed()}                
                <param>
                    mode ValueServer mode                    
                </param>
            </javadoc>
            <method name="checkFixedSeed" type="void" line="67">
                <params>
                    <param name="valueServer" type="ValueServer"/>
                    <param name="mode" type="int"/>
                </params>
                <declaration name="values" type="double[][]" line="70"/>
                <scope line="71"/>
                <scope line="75"/>
            </method>
            <javadoc line="80">
                Make sure exception thrown if digest getNext is attempted
                  before loading empiricalDistribution.                
            </javadoc>
            <method name="testNextDigestFail" type="void" line="84">
                <scope line="85"/>
                <scope line="89"/>
            </method>
            <method name="testEmptyReplayFile" type="void" line="92">
                <scope line="93">
                    <declaration name="url" type="URL" line="94"/>
                </scope>
                <scope line="100"/>
            </method>
            <method name="testEmptyDigestFile" type="void" line="103">
                <scope line="104">
                    <declaration name="url" type="URL" line="105"/>
                </scope>
                <scope line="111"/>
            </method>
            <javadoc line="114">
                Test ValueServer REPLAY_MODE using values in testData file.&lt;br&gt;
                  Check that the values 1,2,1001,1002 match data file values 1 and 2.
                  the sample data file.                
            </javadoc>
            <method name="testReplay" type="void" line="119">
                <declaration name="firstDataValue" type="double" line="120"/>
                <declaration name="secondDataValue" type="double" line="121"/>
                <declaration name="tolerance" type="double" line="122"/>
                <declaration name="compareValue" type="double" line="123"/>
                <scope line="130"/>
            </method>
            <javadoc line="140">
                Test other ValueServer modes                
            </javadoc>
            <method name="testModes" type="void" line="143">
                <declaration name="val" type="double" line="149"/>
                <scope line="158"/>
                <scope line="163"/>
            </method>
            <javadoc line="166">
                Test fill                
            </javadoc>
            <method name="testFill" type="void" line="169">
                <declaration name="val" type="double[]" line="172"/>
                <scope line="174"/>
                <declaration name="v2" type="double" line="177"/>
                <scope line="178"/>
            </method>
            <javadoc line="182">
                Test getters to make Clover happy                
            </javadoc>
            <method name="testProperties" type="void" line="185">
                <declaration name="url" type="URL" line="189"/>
            </method>
        </class>
    </source>