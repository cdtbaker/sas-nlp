<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.solvers">
        <import package="org.apache.commons.math3.analysis.QuinticFunction"/>
        <import package="org.apache.commons.math3.analysis.UnivariateFunction"/>
        <import package="org.apache.commons.math3.analysis.XMinus5Function"/>
        <import package="org.apache.commons.math3.analysis.function.Sin"/>
        <import package="org.apache.commons.math3.exception.NoBracketingException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooLargeException"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="BaseSecantSolverAbstractTest" line="29">
            <javadoc line="29">
                Base class for root-finding algorithms tests derived from{@link BaseSecantSolver}.                
                <version>
                    $Id$                    
                </version>
            </javadoc>
            <method name="getSolver" type="UnivariateSolver" line="36"/>
            <javadoc line="36">
                Returns the solver to use to perform the tests.                
                <return>
                    the solver to use to perform the tests                    
                </return>
            </javadoc>
            <method name="getQuinticEvalCounts" type="int[]" line="41"/>
            <javadoc line="41">
                Returns the expected number of evaluations for the{@link #testQuinticZero} unit test. A value of {@code -1} indicates that
                  the test should be skipped for that solver.                
                <return>
                    the expected number of evaluations for the{@link #testQuinticZero} unit test                    
                </return>
            </javadoc>
            <method name="testSinZero" type="void" line="50">
                <comment line="51">
                    The sinus function is behaved well around the root at pi. The second                    
                </comment>
                <comment line="52">
                    order derivative is zero, which means linear approximating methods                    
                </comment>
                <comment line="53">
                    still converge quadratically.                    
                </comment>
                <comment line="59">
                    System.out.println(                    
                </comment>
                <comment line="60">
                    &quot;Root: &quot; + result + &quot; Evaluations: &quot; + solver.getEvaluations());                    
                </comment>
                <comment line="64">
                    System.out.println(                    
                </comment>
                <comment line="65">
                    &quot;Root: &quot; + result + &quot; Evaluations: &quot; + solver.getEvaluations());                    
                </comment>
                <declaration name="f" type="UnivariateFunction" line="54"/>
                <declaration name="result" type="double" line="55"/>
                <declaration name="solver" type="UnivariateSolver" line="56"/>
            </method>
            <method name="testQuinticZero" type="void" line="71">
                <comment line="72">
                    The quintic function has zeros at 0, +-0.5 and +-1.                    
                </comment>
                <comment line="73">
                    Around the root of 0 the function is well behaved, with a second                    
                </comment>
                <comment line="74">
                    derivative of zero a 0.                    
                </comment>
                <comment line="75">
                    The other roots are less well to find, in particular the root at 1,                    
                </comment>
                <comment line="76">
                    because the function grows fast for x&gt;1.                    
                </comment>
                <comment line="77">
                    The function has extrema (first derivative is zero) at 0.27195613                    
                </comment>
                <comment line="78">
                    and 0.82221643, intervals containing these values are harder for                    
                </comment>
                <comment line="79">
                    the solvers.                    
                </comment>
                <comment line="86">
                    Tests data: initial bounds, and expected solution, per test case.                    
                </comment>
                <comment line="102">
                    Skip test, if needed.                    
                </comment>
                <comment line="105">
                    Compute solution.                    
                </comment>
                <comment line="108">
                    System.out.println(                    
                </comment>
                <comment line="109">
                    &quot;Root: &quot; + result + &quot; Evaluations: &quot; + solver.getEvaluations());                    
                </comment>
                <comment line="111">
                    Check solution.                    
                </comment>
                <declaration name="f" type="UnivariateFunction" line="80"/>
                <declaration name="result" type="double" line="81"/>
                <declaration name="solver" type="UnivariateSolver" line="82"/>
                <declaration name="atol" type="double" line="83"/>
                <declaration name="counts" type="int[]" line="84"/>
                <declaration name="testsData" type="double[][]" line="87"/>
                <declaration name="maxIter" type="int" line="99"/>
                <scope line="101">
                    <declaration name="testData" type="double[]" line="106"/>
                </scope>
            </method>
            <method name="testRootEndpoints" type="void" line="118">
                <comment line="122">
                    End-point is root. This should be a special case in the solver, and                    
                </comment>
                <comment line="123">
                    the initial end-point should be returned exactly.                    
                </comment>
                <declaration name="f" type="UnivariateFunction" line="119"/>
                <declaration name="solver" type="UnivariateSolver" line="120"/>
                <declaration name="result" type="double" line="124"/>
            </method>
            <method name="testBadEndpoints" type="void" line="138">
                <comment line="141">
                    bad interval                    
                </comment>
                <comment line="145">
                    expected                    
                </comment>
                <comment line="147">
                    no bracket                    
                </comment>
                <comment line="151">
                    expected                    
                </comment>
                <comment line="153">
                    no bracket                    
                </comment>
                <comment line="157">
                    expected                    
                </comment>
                <declaration name="f" type="UnivariateFunction" line="139"/>
                <declaration name="solver" type="UnivariateSolver" line="140"/>
                <scope line="141"/>
                <scope line="144"/>
                <scope line="147"/>
                <scope line="150"/>
                <scope line="153"/>
                <scope line="156"/>
            </method>
            <method name="testSolutionLeftSide" type="void" line="162">
                <comment line="168">
                    Test whether the allowed solutions are taken into account.                    
                </comment>
                <comment line="174">
                    Prepare for next test.                    
                </comment>
                <declaration name="f" type="UnivariateFunction" line="163"/>
                <declaration name="solver" type="UnivariateSolver" line="164"/>
                <declaration name="left" type="double" line="165"/>
                <declaration name="right" type="double" line="166"/>
                <scope line="167">
                    <declaration name="solution" type="double" line="169"/>
                    <scope line="170"/>
                </scope>
            </method>
            <method name="testSolutionRightSide" type="void" line="181">
                <comment line="187">
                    Test whether the allowed solutions are taken into account.                    
                </comment>
                <comment line="193">
                    Prepare for next test.                    
                </comment>
                <declaration name="f" type="UnivariateFunction" line="182"/>
                <declaration name="solver" type="UnivariateSolver" line="183"/>
                <declaration name="left" type="double" line="184"/>
                <declaration name="right" type="double" line="185"/>
                <scope line="186">
                    <declaration name="solution" type="double" line="188"/>
                    <scope line="189"/>
                </scope>
            </method>
            <method name="testSolutionBelowSide" type="void" line="199">
                <comment line="205">
                    Test whether the allowed solutions are taken into account.                    
                </comment>
                <comment line="211">
                    Prepare for next test.                    
                </comment>
                <declaration name="f" type="UnivariateFunction" line="200"/>
                <declaration name="solver" type="UnivariateSolver" line="201"/>
                <declaration name="left" type="double" line="202"/>
                <declaration name="right" type="double" line="203"/>
                <scope line="204">
                    <declaration name="solution" type="double" line="206"/>
                    <scope line="207"/>
                </scope>
            </method>
            <method name="testSolutionAboveSide" type="void" line="218">
                <comment line="224">
                    Test whether the allowed solutions are taken into account.                    
                </comment>
                <comment line="230">
                    Prepare for next test.                    
                </comment>
                <declaration name="f" type="UnivariateFunction" line="219"/>
                <declaration name="solver" type="UnivariateSolver" line="220"/>
                <declaration name="left" type="double" line="221"/>
                <declaration name="right" type="double" line="222"/>
                <scope line="223">
                    <declaration name="solution" type="double" line="225"/>
                    <scope line="226"/>
                </scope>
            </method>
            <method name="getSolution" type="double" line="237">
                <params>
                    <param name="solver" type="UnivariateSolver"/>
                    <param name="maxEval" type="int"/>
                    <param name="f" type="UnivariateFunction"/>
                    <param name="left" type="double"/>
                    <param name="right" type="double"/>
                    <param name="allowedSolution" type="AllowedSolution"/>
                </params>
                <comment line="246">
                    the solution slipped out of interval                    
                </comment>
                <scope line="238">
                    <declaration name="bracketing" type="BracketedUnivariateSolver&lt;UnivariateFunction&gt;" line="239"/>
                </scope>
                <scope line="243">
                    <declaration name="baseRoot" type="double" line="244"/>
                    <scope line="245"/>
                    <declaration name="bracketing" type="PegasusSolver" line="249"/>
                </scope>
            </method>
        </class>
    </source>