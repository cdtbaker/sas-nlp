<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="LogNormalDistributionTest" line="24">
            <extends class="RealDistributionAbstractTest"/>
            <comment line="35">
                -------------- Implementations for abstract methods -----------------------                
            </comment>
            <comment line="102">
                --------------------- Override tolerance  --------------                
            </comment>
            <comment line="109">
                ---------------------------- Additional test cases -------------------------                
            </comment>
            <javadoc line="24">
                Test cases for {@link LogNormalDistribution}. Extends{@link RealDistributionAbstractTest}. See class javadoc of that class
                  for details.                
                <version>
                    $Id: LogNormalDistributionTest.java 1364028 2012-07-21 00:42:49Z erans $                    
                </version>
                <since>
                    3.0                    
                </since>
            </javadoc>
            <javadoc line="36">
                Creates the default real distribution instance to use in tests.                
            </javadoc>
            <method name="makeDistribution" type="LogNormalDistribution" line="38"/>
            <javadoc line="42">
                Creates the default cumulative probability distribution test input values                
            </javadoc>
            <method name="makeCumulativeTestPoints" type="double[]" line="44">
                <comment line="46">
                    quantiles computed using R                    
                </comment>
            </method>
            <javadoc line="53">
                Creates the default cumulative probability density test expected values                
            </javadoc>
            <method name="makeCumulativeTestValues" type="double[]" line="55"/>
            <javadoc line="61">
                Creates the default probability density test expected values                
            </javadoc>
            <method name="makeDensityTestValues" type="double[]" line="63"/>
            <javadoc line="69">
                Creates the default inverse cumulative probability distribution test
                  input values.                
            </javadoc>
            <method name="makeInverseCumulativeTestPoints" type="double[]" line="74">
                <comment line="76">
                    Exclude the test points less than zero, as they have cumulative
                     probability of zero, meaning the inverse returns zero, and not the
                     points less than zero.                    
                </comment>
                <comment line="83">
                    return Arrays.copyOfRange(points, 4, points.length - 4);                    
                </comment>
                <declaration name="points" type="double[]" line="78"/>
                <declaration name="points2" type="double[]" line="79"/>
            </method>
            <javadoc line="85">
                Creates the default inverse cumulative probability test expected
                  values.                
            </javadoc>
            <method name="makeInverseCumulativeTestValues" type="double[]" line="90">
                <comment line="92">
                    Exclude the test points less than zero, as they have cumulative
                     probability of zero, meaning the inverse returns zero, and not the
                     points less than zero.                    
                </comment>
                <comment line="99">
                    return Arrays.copyOfRange(points, 1, points.length - 4);                    
                </comment>
                <declaration name="points" type="double[]" line="94"/>
                <declaration name="points2" type="double[]" line="95"/>
            </method>
            <method name="setUp" type="void" line="103"/>
            <method name="verifyQuantiles" type="void" line="110">
                <declaration name="distribution" type="LogNormalDistribution" line="111"/>
                <declaration name="mu" type="double" line="112"/>
                <declaration name="sigma" type="double" line="113"/>
            </method>
            <method name="testQuantiles" type="void" line="122"/>
            <method name="testInverseCumulativeProbabilityExtremes" type="void" line="159"/>
            <method name="testGetScale" type="void" line="167">
                <declaration name="distribution" type="LogNormalDistribution" line="168"/>
            </method>
            <method name="testGetShape" type="void" line="173">
                <declaration name="distribution" type="LogNormalDistribution" line="174"/>
            </method>
            <method name="testPreconditions" type="void" line="179"/>
            <method name="testDensity" type="void" line="184">
                <comment line="187">
                    R 2.13: print(dlnorm(c(-2,-1,0,1,2)), digits=10)                    
                </comment>
                <comment line="191">
                    R 2.13: print(dlnorm(c(-2,-1,0,1,2), mean=1.1), digits=10)                    
                </comment>
                <declaration name="x" type="double[]" line="185"/>
            </method>
            <method name="checkDensity" type="void" line="197">
                <params>
                    <param name="scale" type="double"/>
                    <param name="shape" type="double"/>
                    <param name="x" type="double[]"/>
                    <param name="expected" type="double[]"/>
                </params>
                <declaration name="d" type="LogNormalDistribution" line="198"/>
                <scope line="199"/>
            </method>
            <javadoc line="204">
                Check to make sure top-coding of extreme values works correctly.
                  Verifies fixes for JIRA MATH-167, MATH-414                
            </javadoc>
            <method name="testExtremeValues" type="void" line="209">
                <comment line="212">
                    make sure no convergence exception                    
                </comment>
                <comment line="214">
                    make sure not top-coded                    
                </comment>
                <comment line="217">
                    make sure top coding not reversed                    
                </comment>
                <declaration name="d" type="LogNormalDistribution" line="210"/>
                <scope line="211">
                    <declaration name="upperTail" type="double" line="212"/>
                    <scope line="213"/>
                    <scope line="216"/>
                </scope>
            </method>
            <method name="testMeanVariance" type="void" line="228">
                <declaration name="tol" type="double" line="229"/>
                <declaration name="dist" type="LogNormalDistribution" line="230"/>
            </method>
        </class>
    </source>