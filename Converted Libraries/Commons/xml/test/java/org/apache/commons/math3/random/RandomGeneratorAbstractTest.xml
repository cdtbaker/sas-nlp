<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.random">
        <import package="java.util.Arrays"/>
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.stat.Frequency"/>
        <import package="org.apache.commons.math3.stat.descriptive.SummaryStatistics"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Before"/>
        <import package="org.junit.Test"/>
        <class name="RandomGeneratorAbstractTest" line="11">
            <extends class="RandomDataGeneratorTest"/>
            <javadoc line="11">
                Base class for RandomGenerator tests.
                  Tests RandomGenerator methods directly and also executes RandomDataTest
                  test cases against a RandomDataImpl created using the provided generator.
                  RandomGenerator test classes should extend this class, implementing
                  makeGenerator() to provide a concrete generator to test. The generator
                  returned by makeGenerator should be seeded with a fixed seed.                
                <version>
                    $Id: RandomGeneratorAbstractTest.java 1454846 2013-03-10 13:02:04Z luc $                    
                </version>
            </javadoc>
            <declaration name="generator" type="RandomGenerator" line="21"/>
            <javadoc line="21">
                RandomGenerator under test                
            </javadoc>
            <method name="makeGenerator" type="RandomGenerator" line="25"/>
            <javadoc line="25">
                Override this method in subclasses to provide a concrete generator to test.
                  Return a generator seeded with a fixed seed.                
            </javadoc>
            <javadoc line="30">
                Initialize generator and randomData instance in superclass.                
            </javadoc>
            <method name="RandomGeneratorAbstractTest" type="constructor" line="33"/>
            <javadoc line="37">
                Set a fixed seed for the tests                
            </javadoc>
            <method name="setUp" type="void" line="40"/>
            <method name="testNextSecureLongIAE" type="void" line="43"/>
            <method name="testNextSecureLongNegativeToPositiveRange" type="void" line="45"/>
            <method name="testNextSecureLongNegativeRange" type="void" line="47"/>
            <method name="testNextSecureLongPositiveRange" type="void" line="49"/>
            <method name="testNextSecureIntIAE" type="void" line="51"/>
            <method name="testNextSecureIntNegativeToPositiveRange" type="void" line="53"/>
            <method name="testNextSecureIntNegativeRange" type="void" line="55"/>
            <method name="testNextSecureIntPositiveRange" type="void" line="57"/>
            <method name="testNextSecureHex" type="void" line="59"/>
            <method name="testNextIntDirect" type="void" line="61">
                <declaration name="testValues" type="int[]" line="62"/>
                <scope line="63">
                    <declaration name="val" type="int" line="64"/>
                </scope>
                <declaration name="numTests" type="int" line="67"/>
                <scope line="68">
                    <declaration name="n" type="int" line="69"/>
                    <declaration name="binUpperBounds" type="int[]" line="70"/>
                    <scope line="71">
                        <scope line="73"/>
                    </scope>
                    <scope line="77">
                        <declaration name="step" type="int" line="79"/>
                        <scope line="80"/>
                    </scope>
                    <declaration name="numFailures" type="int" line="85"/>
                    <declaration name="binCount" type="int" line="86"/>
                    <declaration name="observed" type="long[]" line="87"/>
                    <declaration name="expected" type="double[]" line="88"/>
                    <scope line="90"/>
                    <scope line="93">
                        <scope line="95">
                            <declaration name="value" type="int" line="96"/>
                            <scope line="98">
                                <scope line="99"/>
                            </scope>
                        </scope>
                        <scope line="105"/>
                    </scope>
                    <scope line="109"/>
                </scope>
            </method>
            <method name="testNextIntIAE2" type="void" line="114">
                <scope line="115"/>
                <scope line="119"/>
                <scope line="121"/>
                <scope line="124"/>
            </method>
            <method name="testNextLongDirect" type="void" line="127">
                <declaration name="q1" type="long" line="128"/>
                <declaration name="q2" type="long" line="129"/>
                <declaration name="q3" type="long" line="130"/>
                <declaration name="freq" type="Frequency" line="131"/>
                <declaration name="val" type="long" line="132"/>
                <declaration name="value" type="int" line="133"/>
                <scope line="134">
                    <scope line="137"/>
                    <scope line="140"/>
                    <scope line="143"/>
                    <scope line="146"/>
                </scope>
                <declaration name="observed" type="long[]" line="151"/>
                <scope line="152"/>
            </method>
            <method name="testNextBooleanDirect" type="void" line="157">
                <declaration name="halfSampleSize" type="long" line="158"/>
                <declaration name="expected" type="double[]" line="159"/>
                <declaration name="observed" type="long[]" line="160"/>
                <scope line="161">
                    <scope line="162"/>
                    <scope line="165"/>
                </scope>
            </method>
            <method name="testNextFloatDirect" type="void" line="171">
                <declaration name="freq" type="Frequency" line="172"/>
                <declaration name="val" type="float" line="173"/>
                <declaration name="value" type="int" line="174"/>
                <scope line="175">
                    <scope line="177"/>
                    <scope line="180"/>
                    <scope line="183"/>
                    <scope line="186"/>
                </scope>
                <declaration name="observed" type="long[]" line="191"/>
                <scope line="192"/>
            </method>
            <method name="testDoubleDirect" type="void" line="197">
                <declaration name="sample" type="SummaryStatistics" line="198"/>
                <declaration name="N" type="int" line="199"/>
                <scope line="200"/>
            </method>
            <method name="testFloatDirect" type="void" line="206">
                <declaration name="sample" type="SummaryStatistics" line="207"/>
                <declaration name="N" type="int" line="208"/>
                <scope line="209"/>
            </method>
            <method name="testNextIntNeg" type="void" line="215"/>
            <method name="testNextInt2" type="void" line="218">
                <declaration name="walk" type="int" line="219"/>
                <declaration name="N" type="int" line="220"/>
                <scope line="221">
                    <scope line="222"/>
                    <scope line="225"/>
                </scope>
            </method>
            <method name="testNextLong2" type="void" line="231">
                <declaration name="walk" type="int" line="232"/>
                <declaration name="N" type="int" line="233"/>
                <scope line="234">
                    <scope line="235"/>
                    <scope line="238"/>
                </scope>
            </method>
            <method name="testNexBoolean2" type="void" line="244">
                <declaration name="walk" type="int" line="245"/>
                <declaration name="N" type="int" line="246"/>
                <scope line="247">
                    <scope line="248"/>
                    <scope line="251"/>
                </scope>
            </method>
            <method name="testNexBytes" type="void" line="257">
                <declaration name="count" type="long[]" line="258"/>
                <declaration name="bytes" type="byte[]" line="259"/>
                <declaration name="expected" type="double[]" line="260"/>
                <declaration name="sampleSize" type="int" line="261"/>
                <scope line="262"/>
                <scope line="265">
                    <scope line="267"/>
                </scope>
            </method>
            <method name="testSeeding" type="void" line="273">
                <declaration name="gen" type="RandomGenerator" line="274"/>
                <declaration name="gen1" type="RandomGenerator" line="275"/>
            </method>
            <method name="checkSameSequence" type="void" line="282">
                <params>
                    <param name="gen1" type="RandomGenerator"/>
                    <param name="gen2" type="RandomGenerator"/>
                </params>
                <declaration name="len" type="int" line="283"/>
                <declaration name="values" type="double[][]" line="284"/>
                <scope line="285"/>
                <scope line="288"/>
                <scope line="292"/>
                <scope line="295"/>
                <scope line="299"/>
                <scope line="302"/>
                <scope line="306"/>
                <scope line="309"/>
                <scope line="313"/>
                <scope line="316"/>
                <scope line="320"/>
                <scope line="323"/>
                <scope line="327"/>
                <scope line="330"/>
            </method>
        </class>
    </source>