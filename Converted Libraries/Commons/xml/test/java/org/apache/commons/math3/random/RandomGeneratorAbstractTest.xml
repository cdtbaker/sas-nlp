<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.random">
        <import package="java.util.Arrays"/>
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.stat.Frequency"/>
        <import package="org.apache.commons.math3.stat.descriptive.SummaryStatistics"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Before"/>
        <import package="org.junit.Test"/>
        <class name="RandomGeneratorAbstractTest" line="31">
            <extends class="RandomDataGeneratorTest"/>
            <comment line="72">
                Omit secureXxx tests, since they do not use the provided generator                
            </comment>
            <javadoc line="31">
                Base class for RandomGenerator tests.
                  Tests RandomGenerator methods directly and also executes RandomDataTest
                  test cases against a RandomDataImpl created using the provided generator.
                  RandomGenerator test classes should extend this class, implementing
                  makeGenerator() to provide a concrete generator to test. The generator
                  returned by makeGenerator should be seeded with a fixed seed.                
                <version>
                    $Id: RandomGeneratorAbstractTest.java 1454846 2013-03-10 13:02:04Z luc $                    
                </version>
            </javadoc>
            <declaration name="generator" type="RandomGenerator" line="46"/>
            <javadoc line="46">
                RandomGenerator under test                
            </javadoc>
            <method name="makeGenerator" type="RandomGenerator" line="49"/>
            <javadoc line="49">
                Override this method in subclasses to provide a concrete generator to test.
                  Return a generator seeded with a fixed seed.                
            </javadoc>
            <javadoc line="55">
                Initialize generator and randomData instance in superclass.                
            </javadoc>
            <method name="RandomGeneratorAbstractTest" type="constructor" line="58"/>
            <javadoc line="63">
                Set a fixed seed for the tests                
            </javadoc>
            <method name="setUp" type="void" line="67"/>
            <method name="testNextSecureLongIAE" type="void" line="73"/>
            <method name="testNextSecureLongNegativeToPositiveRange" type="void" line="75"/>
            <method name="testNextSecureLongNegativeRange" type="void" line="77"/>
            <method name="testNextSecureLongPositiveRange" type="void" line="79"/>
            <method name="testNextSecureIntIAE" type="void" line="81"/>
            <method name="testNextSecureIntNegativeToPositiveRange" type="void" line="83"/>
            <method name="testNextSecureIntNegativeRange" type="void" line="85"/>
            <method name="testNextSecureIntPositiveRange" type="void" line="87"/>
            <method name="testNextSecureHex" type="void" line="89"/>
            <method name="testNextIntDirect" type="void" line="104">
                <comment line="92">
                    Tests uniformity of nextInt(int) distribution by generating 1000
                     samples for each of 10 test values and for each sample performing
                     a chi-square test of homogeneity of the observed distribution with
                     the expected uniform distribution.  Tests are performed at the .01
                     level and an average failure rate higher than 2% (i.e. more than 20
                     null hypothesis rejections) causes the test case to fail.
                    
                     All random values are generated using the generator instance used by
                     other tests and the generator is not reseeded, so this is a fixed seed
                     test.                    
                </comment>
                <comment line="105">
                    Set up test values - end of the array filled randomly                    
                </comment>
                <comment line="115">
                    Set up bins                    
                </comment>
                <comment line="130">
                    Run the tests                    
                </comment>
                <declaration name="testValues" type="int[]" line="106"/>
                <scope line="107">
                    <declaration name="val" type="int" line="108"/>
                </scope>
                <declaration name="numTests" type="int" line="112"/>
                <scope line="113">
                    <declaration name="n" type="int" line="114"/>
                    <declaration name="binUpperBounds" type="int[]" line="116"/>
                    <scope line="117">
                        <scope line="119"/>
                    </scope>
                    <scope line="122">
                        <declaration name="step" type="int" line="124"/>
                        <scope line="125"/>
                    </scope>
                    <declaration name="numFailures" type="int" line="131"/>
                    <declaration name="binCount" type="int" line="132"/>
                    <declaration name="observed" type="long[]" line="133"/>
                    <declaration name="expected" type="double[]" line="134"/>
                    <scope line="137"/>
                    <scope line="141">
                        <scope line="143">
                            <declaration name="value" type="int" line="144"/>
                            <scope line="146">
                                <scope line="147"/>
                            </scope>
                        </scope>
                        <scope line="153"/>
                    </scope>
                    <scope line="157"/>
                </scope>
            </method>
            <method name="testNextIntIAE2" type="void" line="165">
                <comment line="170">
                    ignored                    
                </comment>
                <comment line="175">
                    ignored                    
                </comment>
                <scope line="166"/>
                <scope line="169"/>
                <scope line="172"/>
                <scope line="174"/>
            </method>
            <method name="testNextLongDirect" type="void" line="180">
                <comment line="207">
                    Use ChiSquare dist with df = 4-1 = 3, alpha = .001
                     Change to 11.34 for alpha = .01                    
                </comment>
                <declaration name="q1" type="long" line="181"/>
                <declaration name="q2" type="long" line="182"/>
                <declaration name="q3" type="long" line="183"/>
                <declaration name="freq" type="Frequency" line="185"/>
                <declaration name="val" type="long" line="186"/>
                <declaration name="value" type="int" line="187"/>
                <scope line="188">
                    <scope line="191"/>
                    <scope line="193"/>
                    <scope line="195"/>
                    <scope line="197"/>
                </scope>
                <declaration name="observed" type="long[]" line="202"/>
                <scope line="203"/>
            </method>
            <method name="testNextBooleanDirect" type="void" line="215">
                <comment line="226">
                    Use ChiSquare dist with df = 2-1 = 1, alpha = .001
                     Change to 6.635 for alpha = .01                    
                </comment>
                <declaration name="halfSampleSize" type="long" line="216"/>
                <declaration name="expected" type="double[]" line="217"/>
                <declaration name="observed" type="long[]" line="218"/>
                <scope line="219">
                    <scope line="220"/>
                    <scope line="222"/>
                </scope>
            </method>
            <method name="testNextFloatDirect" type="void" line="234">
                <comment line="256">
                    Use ChiSquare dist with df = 4-1 = 3, alpha = .001
                     Change to 11.34 for alpha = .01                    
                </comment>
                <declaration name="freq" type="Frequency" line="235"/>
                <declaration name="val" type="float" line="236"/>
                <declaration name="value" type="int" line="237"/>
                <scope line="238">
                    <scope line="240"/>
                    <scope line="242"/>
                    <scope line="244"/>
                    <scope line="246"/>
                </scope>
                <declaration name="observed" type="long[]" line="251"/>
                <scope line="252"/>
            </method>
            <method name="testDoubleDirect" type="void" line="264">
                <declaration name="sample" type="SummaryStatistics" line="265"/>
                <declaration name="N" type="int" line="266"/>
                <scope line="267"/>
            </method>
            <method name="testFloatDirect" type="void" line="277">
                <declaration name="sample" type="SummaryStatistics" line="278"/>
                <declaration name="N" type="int" line="279"/>
                <scope line="280"/>
            </method>
            <method name="testNextIntNeg" type="void" line="290"/>
            <method name="testNextInt2" type="void" line="295">
                <declaration name="walk" type="int" line="296"/>
                <declaration name="N" type="int" line="297"/>
                <scope line="298">
                    <scope line="299"/>
                    <scope line="301"/>
                </scope>
            </method>
            <method name="testNextLong2" type="void" line="311">
                <declaration name="walk" type="int" line="312"/>
                <declaration name="N" type="int" line="313"/>
                <scope line="314">
                    <scope line="315"/>
                    <scope line="317"/>
                </scope>
            </method>
            <method name="testNexBoolean2" type="void" line="327">
                <declaration name="walk" type="int" line="328"/>
                <declaration name="N" type="int" line="329"/>
                <scope line="330">
                    <scope line="331"/>
                    <scope line="333"/>
                </scope>
            </method>
            <method name="testNexBytes" type="void" line="343">
                <declaration name="count" type="long[]" line="344"/>
                <declaration name="bytes" type="byte[]" line="345"/>
                <declaration name="expected" type="double[]" line="346"/>
                <declaration name="sampleSize" type="int" line="347"/>
                <scope line="349"/>
                <scope line="353">
                    <scope line="355"/>
                </scope>
            </method>
            <method name="testSeeding" type="void" line="365">
                <comment line="366">
                    makeGenerator initializes with fixed seed                    
                </comment>
                <comment line="370">
                    reseed, but recreate the second one                    
                </comment>
                <comment line="371">
                    verifies MATH-723                    
                </comment>
                <declaration name="gen" type="RandomGenerator" line="367"/>
                <declaration name="gen1" type="RandomGenerator" line="368"/>
            </method>
            <method name="checkSameSequence" type="void" line="378">
                <params>
                    <param name="gen1" type="RandomGenerator"/>
                    <param name="gen2" type="RandomGenerator"/>
                </params>
                <comment line="379">
                    Needs to be an odd number to check MATH-723                    
                </comment>
                <declaration name="len" type="int" line="379"/>
                <declaration name="values" type="double[][]" line="380"/>
                <scope line="381"/>
                <scope line="384"/>
                <scope line="388"/>
                <scope line="391"/>
                <scope line="395"/>
                <scope line="398"/>
                <scope line="402"/>
                <scope line="405"/>
                <scope line="409"/>
                <scope line="412"/>
                <scope line="416"/>
                <scope line="419"/>
                <scope line="423"/>
                <scope line="426"/>
            </method>
        </class>
    </source>