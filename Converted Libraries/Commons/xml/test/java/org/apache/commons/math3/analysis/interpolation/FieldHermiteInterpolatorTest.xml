<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.interpolation">
        <import package="java.util.Random"/>
        <import package="org.apache.commons.math3.analysis.polynomials.PolynomialFunction"/>
        <import package="org.apache.commons.math3.dfp.Dfp"/>
        <import package="org.apache.commons.math3.dfp.DfpField"/>
        <import package="org.apache.commons.math3.exception.NoDataException"/>
        <import package="org.apache.commons.math3.fraction.BigFraction"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="FieldHermiteInterpolatorTest" line="11">
            <method name="testZero" type="void" line="12">
                <declaration name="interpolator" type="FieldHermiteInterpolator&lt;BigFraction&gt;" line="13"/>
                <scope line="15">
                    <declaration name="y" type="BigFraction" line="16"/>
                    <declaration name="derivatives" type="BigFraction[][]" line="18"/>
                </scope>
            </method>
            <method name="testQuadratic" type="void" line="23">
                <declaration name="interpolator" type="FieldHermiteInterpolator&lt;BigFraction&gt;" line="24"/>
                <scope line="28">
                    <declaration name="y" type="BigFraction" line="29"/>
                    <declaration name="derivatives" type="BigFraction[][]" line="31"/>
                </scope>
            </method>
            <method name="testMixedDerivatives" type="void" line="38">
                <declaration name="interpolator" type="FieldHermiteInterpolator&lt;BigFraction&gt;" line="39"/>
                <declaration name="derivatives" type="BigFraction[][]" line="43"/>
            </method>
            <method name="testRandomPolynomialsValuesOnly" type="void" line="65">
                <declaration name="random" type="Random" line="66"/>
                <scope line="67">
                    <declaration name="maxDegree" type="int" line="68"/>
                    <declaration name="p" type="PolynomialFunction[]" line="69"/>
                    <scope line="70">
                        <declaration name="degree" type="int" line="71"/>
                    </scope>
                    <declaration name="field" type="DfpField" line="75"/>
                    <declaration name="step" type="Dfp" line="76"/>
                    <declaration name="interpolator" type="FieldHermiteInterpolator&lt;Dfp&gt;" line="77"/>
                    <scope line="78">
                        <declaration name="x" type="Dfp" line="79"/>
                        <declaration name="values" type="Dfp[]" line="80"/>
                        <scope line="81"/>
                    </scope>
                    <scope line="86">
                        <declaration name="x" type="Dfp" line="87"/>
                        <declaration name="values" type="Dfp[]" line="88"/>
                        <scope line="90"/>
                    </scope>
                </scope>
            </method>
            <method name="testRandomPolynomialsFirstDerivative" type="void" line="96">
                <declaration name="random" type="Random" line="97"/>
                <scope line="98">
                    <declaration name="maxDegree" type="int" line="99"/>
                    <declaration name="p" type="PolynomialFunction[]" line="100"/>
                    <declaration name="pPrime" type="PolynomialFunction[]" line="101"/>
                    <scope line="102">
                        <declaration name="degree" type="int" line="103"/>
                    </scope>
                    <declaration name="field" type="DfpField" line="108"/>
                    <declaration name="step" type="Dfp" line="109"/>
                    <declaration name="interpolator" type="FieldHermiteInterpolator&lt;Dfp&gt;" line="110"/>
                    <scope line="111">
                        <declaration name="x" type="Dfp" line="112"/>
                        <declaration name="values" type="Dfp[]" line="113"/>
                        <declaration name="derivatives" type="Dfp[]" line="114"/>
                        <scope line="115"/>
                    </scope>
                    <declaration name="h" type="Dfp" line="121"/>
                    <scope line="122">
                        <declaration name="x" type="Dfp" line="123"/>
                        <declaration name="y" type="Dfp[]" line="124"/>
                        <declaration name="yP" type="Dfp[]" line="125"/>
                        <declaration name="yM" type="Dfp[]" line="126"/>
                        <scope line="128"/>
                    </scope>
                </scope>
            </method>
            <method name="testSine" type="void" line="135">
                <declaration name="field" type="DfpField" line="136"/>
                <declaration name="interpolator" type="FieldHermiteInterpolator&lt;Dfp&gt;" line="137"/>
                <scope line="138"/>
                <scope line="141">
                    <declaration name="y" type="Dfp" line="142"/>
                </scope>
            </method>
            <method name="testSquareRoot" type="void" line="146">
                <declaration name="field" type="DfpField" line="147"/>
                <declaration name="interpolator" type="FieldHermiteInterpolator&lt;Dfp&gt;" line="148"/>
                <scope line="149"/>
                <scope line="152">
                    <declaration name="y" type="Dfp" line="153"/>
                </scope>
            </method>
            <method name="testWikipedia" type="void" line="157">
                <declaration name="interpolator" type="FieldHermiteInterpolator&lt;BigFraction&gt;" line="158"/>
                <scope line="162">
                    <declaration name="y" type="BigFraction" line="163"/>
                    <declaration name="x2" type="BigFraction" line="164"/>
                    <declaration name="x4" type="BigFraction" line="165"/>
                    <declaration name="x8" type="BigFraction" line="166"/>
                </scope>
            </method>
            <method name="testOnePointParabola" type="void" line="170">
                <declaration name="interpolator" type="FieldHermiteInterpolator&lt;BigFraction&gt;" line="171"/>
                <scope line="173">
                    <declaration name="y" type="BigFraction" line="174"/>
                </scope>
            </method>
            <method name="randomPolynomial" type="PolynomialFunction" line="178">
                <params>
                    <param name="degree" type="int"/>
                    <param name="random" type="Random"/>
                </params>
                <declaration name="coeff" type="double[]" line="179"/>
                <scope line="180"/>
            </method>
            <method name="testEmptySampleValue" type="void" line="185"/>
            <method name="testEmptySampleDerivative" type="void" line="188"/>
            <method name="testDuplicatedAbscissa" type="void" line="191">
                <declaration name="interpolator" type="FieldHermiteInterpolator&lt;BigFraction&gt;" line="192"/>
            </method>
        </class>
    </source>