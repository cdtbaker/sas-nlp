<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.util">
        <import package="java.util.ConcurrentModificationException"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Map"/>
        <import package="java.util.NoSuchElementException"/>
        <import package="java.util.Random"/>
        <import package="java.util.Set"/>
        <import package="java.util.Map.Entry"/>
        <import package="org.apache.commons.math3.Field"/>
        <import package="org.apache.commons.math3.fraction.Fraction"/>
        <import package="org.apache.commons.math3.fraction.FractionConversionException"/>
        <import package="org.apache.commons.math3.fraction.FractionField"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Before"/>
        <import package="org.junit.Test"/>
        <class name="OpenIntToFieldTest" line="37">
            <comment line="173">
                                
            </comment>
            <declaration name="javaMap" type="Map&amp;lt;Integer,Fraction&amp;gt;" line="40"/>
            <declaration name="field" type="FractionField" line="41"/>
            <method name="setUp" type="void" line="44">
                <comment line="59">
                                        
                </comment>
            </method>
            <method name="generate" type="Map&lt;Integer,Fraction&gt;" line="63">
                <declaration name="map" type="Map&amp;lt;Integer,Fraction&amp;gt;" line="64"/>
                <declaration name="r" type="Random" line="65"/>
                <declaration name="dd" type="double" line="66"/>
                <scope line="69"/>
                <scope line="71"/>
            </method>
            <method name="createFromJavaMap" type="OpenIntToFieldHashMap&lt;Fraction&gt;" line="77">
                <params>
                    <param name="field" type="Field&lt;Fraction&gt;"/>
                </params>
                <declaration name="map" type="OpenIntToFieldHashMap&amp;lt;Fraction&amp;gt;" line="78"/>
                <scope line="79"/>
            </method>
            <method name="testPutAndGetWith0ExpectedSize" type="void" line="86">
                <declaration name="map" type="OpenIntToFieldHashMap&amp;lt;Fraction&amp;gt;" line="87"/>
            </method>
            <method name="testPutAndGetWithExpectedSize" type="void" line="92">
                <declaration name="map" type="OpenIntToFieldHashMap&amp;lt;Fraction&amp;gt;" line="93"/>
            </method>
            <method name="testPutAndGet" type="void" line="98">
                <declaration name="map" type="OpenIntToFieldHashMap&amp;lt;Fraction&amp;gt;" line="99"/>
            </method>
            <method name="assertPutAndGet" type="void" line="103">
                <params>
                    <param name="map" type="OpenIntToFieldHashMap&lt;Fraction&gt;"/>
                </params>
            </method>
            <method name="assertPutAndGet" type="void" line="108">
                <params>
                    <param name="map" type="OpenIntToFieldHashMap&lt;Fraction&gt;"/>
                    <param name="mapSize" type="int"/>
                    <param name="keysInMap" type="Set&lt;Integer&gt;"/>
                </params>
                <scope line="110"/>
            </method>
            <method name="testPutAbsentOnExisting" type="void" line="120">
                <declaration name="map" type="OpenIntToFieldHashMap&amp;lt;Fraction&amp;gt;" line="121"/>
                <declaration name="size" type="int" line="122"/>
                <scope line="123"/>
            </method>
            <method name="testPutOnExisting" type="void" line="131">
                <declaration name="map" type="OpenIntToFieldHashMap&amp;lt;Fraction&amp;gt;" line="132"/>
                <scope line="133"/>
            </method>
            <method name="testGetAbsent" type="void" line="141">
                <declaration name="generated" type="Map&amp;lt;Integer,Fraction&amp;gt;" line="142"/>
                <declaration name="map" type="OpenIntToFieldHashMap&amp;lt;Fraction&amp;gt;" line="143"/>
            </method>
            <method name="testGetFromEmpty" type="void" line="150">
                <declaration name="map" type="OpenIntToFieldHashMap&amp;lt;Fraction&amp;gt;" line="151"/>
            </method>
            <method name="testRemove" type="void" line="158">
                <comment line="169">
                                        
                </comment>
                <declaration name="map" type="OpenIntToFieldHashMap&amp;lt;Fraction&amp;gt;" line="159"/>
                <declaration name="mapSize" type="int" line="160"/>
                <scope line="162"/>
            </method>
            <method name="testRemove2" type="void" line="174">
                <comment line="189">
                                        
                </comment>
                <declaration name="map" type="OpenIntToFieldHashMap&amp;lt;Fraction&amp;gt;" line="175"/>
                <declaration name="mapSize" type="int" line="176"/>
                <declaration name="count" type="int" line="177"/>
                <declaration name="keysInMap" type="Set&amp;lt;Integer&amp;gt;" line="178"/>
                <scope line="179"/>
            </method>
            <method name="testRemoveFromEmpty" type="void" line="193">
                <declaration name="map" type="OpenIntToFieldHashMap&amp;lt;Fraction&amp;gt;" line="194"/>
            </method>
            <method name="testRemoveAbsent" type="void" line="199">
                <declaration name="generated" type="Map&amp;lt;Integer,Fraction&amp;gt;" line="200"/>
                <declaration name="map" type="OpenIntToFieldHashMap&amp;lt;Fraction&amp;gt;" line="202"/>
                <declaration name="mapSize" type="int" line="203"/>
                <scope line="205"/>
            </method>
            <javadoc line="212">
                Returns a map with at least 100 elements where each element is absent from javaMap.                
            </javadoc>
            <method name="generateAbsent" type="Map&lt;Integer,Fraction&gt;" line="215">
                <declaration name="generated" type="Map&amp;lt;Integer,Fraction&amp;gt;" line="216"/>
                <scope line="217"/>
            </method>
            <method name="testCopy" type="void" line="226">
                <declaration name="copy" type="OpenIntToFieldHashMap&amp;lt;Fraction&amp;gt;" line="227"/>
            </method>
            <method name="testContainsKey" type="void" line="236">
                <declaration name="map" type="OpenIntToFieldHashMap&amp;lt;Fraction&amp;gt;" line="237"/>
                <scope line="238"/>
                <scope line="241"/>
                <scope line="244">
                    <declaration name="key" type="int" line="245"/>
                </scope>
            </method>
            <method name="testIterator" type="void" line="253">
                <comment line="271">
                    expected                    
                </comment>
                <declaration name="map" type="OpenIntToFieldHashMap&amp;lt;Fraction&amp;gt;" line="254"/>
                <declaration name="iterator" type="OpenIntToFieldHashMap&amp;lt;Fraction&amp;gt;.Iterator" line="255"/>
                <scope line="256">
                    <declaration name="key" type="int" line="259"/>
                </scope>
                <scope line="266"/>
                <scope line="269"/>
            </method>
            <method name="testConcurrentModification" type="void" line="275">
                <comment line="284">
                    expected                    
                </comment>
                <declaration name="map" type="OpenIntToFieldHashMap&amp;lt;Fraction&amp;gt;" line="276"/>
                <declaration name="iterator" type="OpenIntToFieldHashMap&amp;lt;Fraction&amp;gt;.Iterator" line="277"/>
                <scope line="279"/>
                <scope line="282"/>
            </method>
            <javadoc line="287">
                Regression test for a bug in findInsertionIndex where the hashing in the second probing
                  loop was inconsistent with the first causing duplicate keys after the right sequence
                  of puts and removes.                
            </javadoc>
            <method name="testPutKeysWithCollisions" type="void" line="293">
                <declaration name="map" type="OpenIntToFieldHashMap&amp;lt;Fraction&amp;gt;" line="294"/>
                <declaration name="key1" type="int" line="295"/>
                <declaration name="value1" type="Fraction" line="296"/>
                <declaration name="key2" type="int" line="298"/>
                <declaration name="key3" type="int" line="300"/>
                <declaration name="value2" type="Fraction" line="306"/>
            </method>
            <javadoc line="312">
                Similar to testPutKeysWithCollisions() but exercises the codepaths in a slightly
                  different manner.                
            </javadoc>
            <method name="testPutKeysWithCollision2" type="void" line="317">
                <declaration name="map" type="OpenIntToFieldHashMap&amp;lt;Fraction&amp;gt;" line="318"/>
                <declaration name="key1" type="int" line="319"/>
                <declaration name="value1" type="Fraction" line="320"/>
                <declaration name="key2" type="int" line="322"/>
                <declaration name="value2" type="Fraction" line="328"/>
            </method>
        </class>
    </source>