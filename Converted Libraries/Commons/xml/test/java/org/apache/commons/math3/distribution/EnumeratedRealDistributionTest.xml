<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MathArithmeticException"/>
        <import package="org.apache.commons.math3.exception.NotANumberException"/>
        <import package="org.apache.commons.math3.exception.NotFiniteNumberException"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.Pair"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="EnumeratedRealDistributionTest" line="13">
            <javadoc line="13">
                Test class for {@link EnumeratedRealDistribution}.                
                <version>
                    $Id: EnumeratedRealDistributionTest.java 1456769 2013-03-15 04:51:34Z psteitz $                    
                </version>
            </javadoc>
            <declaration name="testDistribution" type="EnumeratedRealDistribution" line="18"/>
            <javadoc line="18">
                The distribution object used for testing.                
            </javadoc>
            <javadoc line="22">
                Creates the default distribution object used for testing.                
            </javadoc>
            <method name="EnumeratedRealDistributionTest" type="constructor" line="25"/>
            <javadoc line="28">
                Tests if the {@link EnumeratedRealDistribution} constructor throws
                  exceptions for invalid data.                
            </javadoc>
            <method name="testExceptions" type="void" line="32">
                <declaration name="invalid" type="EnumeratedRealDistribution" line="33"/>
                <scope line="34"/>
                <scope line="38"/>
                <scope line="40"/>
                <scope line="44"/>
                <scope line="46"/>
                <scope line="50"/>
                <scope line="52"/>
                <scope line="56"/>
                <scope line="58"/>
                <scope line="62"/>
            </method>
            <javadoc line="66">
                Tests if the distribution returns proper probability values.                
            </javadoc>
            <method name="testProbability" type="void" line="69">
                <declaration name="points" type="double[]" line="70"/>
                <declaration name="results" type="double[]" line="71"/>
                <scope line="72">
                    <declaration name="density" type="double" line="73"/>
                </scope>
            </method>
            <javadoc line="77">
                Tests if the distribution returns proper density values.                
            </javadoc>
            <method name="testDensity" type="void" line="80">
                <declaration name="points" type="double[]" line="81"/>
                <declaration name="results" type="double[]" line="82"/>
                <scope line="83">
                    <declaration name="density" type="double" line="84"/>
                </scope>
            </method>
            <javadoc line="88">
                Tests if the distribution returns proper cumulative probability values.                
            </javadoc>
            <method name="testCumulativeProbability" type="void" line="91">
                <declaration name="points" type="double[]" line="92"/>
                <declaration name="results" type="double[]" line="93"/>
                <scope line="94">
                    <declaration name="probability" type="double" line="95"/>
                </scope>
            </method>
            <javadoc line="99">
                Tests if the distribution returns proper mean value.                
            </javadoc>
            <method name="testGetNumericalMean" type="void" line="102"/>
            <javadoc line="105">
                Tests if the distribution returns proper variance.                
            </javadoc>
            <method name="testGetNumericalVariance" type="void" line="108"/>
            <javadoc line="111">
                Tests if the distribution returns proper lower bound.                
            </javadoc>
            <method name="testGetSupportLowerBound" type="void" line="114"/>
            <javadoc line="117">
                Tests if the distribution returns proper upper bound.                
            </javadoc>
            <method name="testGetSupportUpperBound" type="void" line="120"/>
            <javadoc line="123">
                Tests if the distribution returns properly that the support includes the
                  lower bound.                
            </javadoc>
            <method name="testIsSupportLowerBoundInclusive" type="void" line="127"/>
            <javadoc line="130">
                Tests if the distribution returns properly that the support includes the
                  upper bound.                
            </javadoc>
            <method name="testIsSupportUpperBoundInclusive" type="void" line="134"/>
            <javadoc line="137">
                Tests if the distribution returns properly that the support is connected.                
            </javadoc>
            <method name="testIsSupportConnected" type="void" line="140"/>
            <javadoc line="143">
                Tests sampling.                
            </javadoc>
            <method name="testSample" type="void" line="146">
                <declaration name="n" type="int" line="147"/>
                <declaration name="samples" type="double[]" line="149"/>
                <declaration name="sum" type="double" line="151"/>
                <declaration name="sumOfSquares" type="double" line="152"/>
                <scope line="153"/>
            </method>
            <method name="testIssue942" type="void" line="160">
                <declaration name="list" type="List&lt;Pair&lt;Object,Double&gt;&gt;" line="161"/>
                <anonymous_class line="162"/>
                <anonymous_class line="165"/>
            </method>
        </class>
    </source>