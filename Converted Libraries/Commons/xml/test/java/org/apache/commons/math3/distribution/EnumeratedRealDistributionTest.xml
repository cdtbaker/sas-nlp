<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="org.junit.Assert.assertEquals"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MathArithmeticException"/>
        <import package="org.apache.commons.math3.exception.NotANumberException"/>
        <import package="org.apache.commons.math3.exception.NotFiniteNumberException"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.Pair"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="EnumeratedRealDistributionTest" line="34">
            <javadoc line="34">
                Test class for {@link EnumeratedRealDistribution}.                
                <version>
                    $Id: EnumeratedRealDistributionTest.java 1566274 2014-02-09 11:21:28Z tn $                    
                </version>
            </javadoc>
            <declaration name="testDistribution" type="EnumeratedRealDistribution" line="41"/>
            <javadoc line="41">
                The distribution object used for testing.                
            </javadoc>
            <javadoc line="46">
                Creates the default distribution object used for testing.                
            </javadoc>
            <method name="EnumeratedRealDistributionTest" type="constructor" line="49">
                <comment line="51">
                    Non-sorted singleton array with duplicates should be allowed.
                     Values with zero-probability do not extend the support.                    
                </comment>
            </method>
            <javadoc line="57">
                Tests if the {@link EnumeratedRealDistribution} constructor throws
                  exceptions for invalid data.                
            </javadoc>
            <method name="testExceptions" type="void" line="62">
                <declaration name="invalid" type="EnumeratedRealDistribution" line="63"/>
                <scope line="64"/>
                <scope line="67"/>
                <scope line="69"/>
                <scope line="72"/>
                <scope line="74"/>
                <scope line="77"/>
                <scope line="79"/>
                <scope line="82"/>
                <scope line="84"/>
                <scope line="87"/>
            </method>
            <javadoc line="92">
                Tests if the distribution returns proper probability values.                
            </javadoc>
            <method name="testProbability" type="void" line="96">
                <declaration name="points" type="double[]" line="97"/>
                <declaration name="results" type="double[]" line="98"/>
                <scope line="99">
                    <declaration name="density" type="double" line="100"/>
                </scope>
            </method>
            <javadoc line="105">
                Tests if the distribution returns proper density values.                
            </javadoc>
            <method name="testDensity" type="void" line="109">
                <declaration name="points" type="double[]" line="110"/>
                <declaration name="results" type="double[]" line="111"/>
                <scope line="112">
                    <declaration name="density" type="double" line="113"/>
                </scope>
            </method>
            <javadoc line="118">
                Tests if the distribution returns proper cumulative probability values.                
            </javadoc>
            <method name="testCumulativeProbability" type="void" line="122">
                <declaration name="points" type="double[]" line="123"/>
                <declaration name="results" type="double[]" line="124"/>
                <scope line="125">
                    <declaration name="probability" type="double" line="126"/>
                </scope>
            </method>
            <javadoc line="131">
                Tests if the distribution returns proper mean value.                
            </javadoc>
            <method name="testGetNumericalMean" type="void" line="135"/>
            <javadoc line="139">
                Tests if the distribution returns proper variance.                
            </javadoc>
            <method name="testGetNumericalVariance" type="void" line="143"/>
            <javadoc line="147">
                Tests if the distribution returns proper lower bound.                
            </javadoc>
            <method name="testGetSupportLowerBound" type="void" line="151"/>
            <javadoc line="155">
                Tests if the distribution returns proper upper bound.                
            </javadoc>
            <method name="testGetSupportUpperBound" type="void" line="159"/>
            <javadoc line="163">
                Tests if the distribution returns properly that the support includes the
                  lower bound.                
            </javadoc>
            <method name="testIsSupportLowerBoundInclusive" type="void" line="168"/>
            <javadoc line="172">
                Tests if the distribution returns properly that the support includes the
                  upper bound.                
            </javadoc>
            <method name="testIsSupportUpperBoundInclusive" type="void" line="177"/>
            <javadoc line="181">
                Tests if the distribution returns properly that the support is connected.                
            </javadoc>
            <method name="testIsSupportConnected" type="void" line="185"/>
            <javadoc line="189">
                Tests sampling.                
            </javadoc>
            <method name="testSample" type="void" line="193">
                <comment line="196">
                    fixed seed                    
                </comment>
                <declaration name="n" type="int" line="194"/>
                <declaration name="samples" type="double[]" line="196"/>
                <declaration name="sum" type="double" line="198"/>
                <declaration name="sumOfSquares" type="double" line="199"/>
                <scope line="200"/>
            </method>
            <method name="testIssue942" type="void" line="211">
                <declaration name="list" type="List&amp;lt;Pair&amp;lt;Object,Double&amp;gt;&amp;gt;" line="212"/>
                <anonymous_class line="213"/>
                <anonymous_class line="214"/>
            </method>
            <method name="testIssue1065" type="void" line="219">
                <comment line="221">
                    Test Distribution for inverseCumulativeProbability
                    
                             ^
                             |
                     1.000   +--------------------------------o===============
                             |                               3|
                             |                                |
                             |                             1o=
                     0.750   +-------------------------&gt; o==  .
                             |                          3|  . .
                             |                   0       |  . .
                     0.5625  +---------------&gt; o==o======   . .
                             |                 |  .      .  . .
                             |                 |  .      .  . .
                             |                5|  .      .  . .
                             |                 |  .      .  . .
                             |             o===   .      .  . .
                             |             |   .  .      .  . .
                             |            4|   .  .      .  . .
                             |             |   .  .      .  . .
                     0.000   +=============----+--+------+--+-+---------------&gt;
                                          14  18 21     28 31 33
                    
                     sum  = 4+5+0+3+1+3 = 16                    
                </comment>
                <declaration name="distribution" type="EnumeratedRealDistribution" line="245"/>
            </method>
        </class>
    </source>