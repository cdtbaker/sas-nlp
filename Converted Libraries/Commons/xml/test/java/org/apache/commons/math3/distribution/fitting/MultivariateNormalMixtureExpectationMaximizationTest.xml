<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution.fitting">
        <import package="java.util.ArrayList"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.List"/>
        <import package="org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution"/>
        <import package="org.apache.commons.math3.distribution.MultivariateNormalDistribution"/>
        <import package="org.apache.commons.math3.exception.ConvergenceException"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
        <import package="org.apache.commons.math3.linear.RealMatrix"/>
        <import package="org.apache.commons.math3.util.Pair"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="MultivariateNormalMixtureExpectationMaximizationTest" line="16">
            <javadoc line="16">
                Test that demonstrates the use of{@link MultivariateNormalMixtureExpectationMaximization}.                
            </javadoc>
            <method name="testNonEmptyData" type="void" line="20"/>
            <method name="testNonJaggedData" type="void" line="23">
                <declaration name="data" type="double[][]" line="24"/>
            </method>
            <method name="testMultipleColumnsRequired" type="void" line="27">
                <declaration name="data" type="double[][]" line="28"/>
            </method>
            <method name="testMaxIterationsPositive" type="void" line="31">
                <declaration name="data" type="double[][]" line="32"/>
                <declaration name="fitter" type="MultivariateNormalMixtureExpectationMaximization" line="33"/>
                <declaration name="initialMix" type="MixtureMultivariateNormalDistribution" line="34"/>
            </method>
            <method name="testThresholdPositive" type="void" line="37">
                <declaration name="data" type="double[][]" line="38"/>
                <declaration name="fitter" type="MultivariateNormalMixtureExpectationMaximization" line="39"/>
                <declaration name="initialMix" type="MixtureMultivariateNormalDistribution" line="40"/>
            </method>
            <method name="testConvergenceException" type="void" line="43">
                <declaration name="data" type="double[][]" line="44"/>
                <declaration name="fitter" type="MultivariateNormalMixtureExpectationMaximization" line="45"/>
                <declaration name="initialMix" type="MixtureMultivariateNormalDistribution" line="46"/>
            </method>
            <method name="testIncompatibleIntialMixture" type="void" line="49">
                <declaration name="data" type="double[][]" line="50"/>
                <declaration name="weights" type="double[]" line="51"/>
                <declaration name="mvns" type="MultivariateNormalDistribution[]" line="52"/>
                <declaration name="components" type="List&lt;Pair&lt;Double,MultivariateNormalDistribution&gt;&gt;" line="55"/>
                <declaration name="badInitialMix" type="MixtureMultivariateNormalDistribution" line="58"/>
                <declaration name="fitter" type="MultivariateNormalMixtureExpectationMaximization" line="59"/>
            </method>
            <method name="testInitialMixture" type="void" line="62">
                <declaration name="correctWeights" type="double[]" line="63"/>
                <declaration name="correctMeans" type="double[][]" line="64"/>
                <declaration name="correctCovMats" type="RealMatrix[]" line="65"/>
                <declaration name="correctMVNs" type="MultivariateNormalDistribution[]" line="68"/>
                <declaration name="initialMix" type="MixtureMultivariateNormalDistribution" line="71"/>
                <declaration name="i" type="int" line="72"/>
                <scope line="73">
                    <declaration name="means" type="double[]" line="75"/>
                    <declaration name="covMat" type="RealMatrix" line="77"/>
                </scope>
            </method>
            <method name="testFit" type="void" line="82">
                <declaration name="data" type="double[][]" line="83"/>
                <declaration name="correctLogLikelihood" type="double" line="84"/>
                <declaration name="correctWeights" type="double[]" line="85"/>
                <declaration name="correctMeans" type="double[][]" line="86"/>
                <declaration name="correctCovMats" type="RealMatrix[]" line="87"/>
                <declaration name="correctMVNs" type="MultivariateNormalDistribution[]" line="90"/>
                <declaration name="fitter" type="MultivariateNormalMixtureExpectationMaximization" line="93"/>
                <declaration name="initialMix" type="MixtureMultivariateNormalDistribution" line="94"/>
                <declaration name="fittedMix" type="MixtureMultivariateNormalDistribution" line="96"/>
                <declaration name="components" type="List&lt;Pair&lt;Double,MultivariateNormalDistribution&gt;&gt;" line="97"/>
                <declaration name="i" type="int" line="99"/>
                <scope line="100">
                    <declaration name="weight" type="double" line="101"/>
                    <declaration name="mvn" type="MultivariateNormalDistribution" line="102"/>
                    <declaration name="mean" type="double[]" line="103"/>
                    <declaration name="covMat" type="RealMatrix" line="104"/>
                </scope>
            </method>
            <method name="getTestSamples" type="double[][]" line="111"/>
        </class>
    </source>