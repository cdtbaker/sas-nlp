<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.ode.nonstiff">
        <import package="java.io.ByteArrayInputStream"/>
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.util.Random"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MaxCountExceededException"/>
        <import package="org.apache.commons.math3.exception.NoBracketingException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.ode.ContinuousOutputModel"/>
        <import package="org.apache.commons.math3.ode.EquationsMapper"/>
        <import package="org.apache.commons.math3.ode.TestProblem1"/>
        <import package="org.apache.commons.math3.ode.TestProblem3"/>
        <import package="org.apache.commons.math3.ode.sampling.StepHandler"/>
        <import package="org.apache.commons.math3.ode.sampling.StepInterpolatorTestUtils"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="EulerStepInterpolatorTest" line="21">
            <method name="noReset" type="void" line="22">
                <declaration name="y" type="double[]" line="23"/>
                <declaration name="yDot" type="double[][]" line="24"/>
                <declaration name="interpolator" type="EulerStepInterpolator" line="25"/>
                <declaration name="result" type="double[]" line="30"/>
                <scope line="31"/>
            </method>
            <method name="interpolationAtBounds" type="void" line="35">
                <declaration name="t0" type="double" line="36"/>
                <declaration name="y0" type="double[]" line="37"/>
                <declaration name="y" type="double[]" line="38"/>
                <declaration name="yDot" type="double[][]" line="39"/>
                <declaration name="interpolator" type="EulerStepInterpolator" line="40"/>
                <declaration name="dt" type="double" line="43"/>
                <declaration name="result" type="double[]" line="53"/>
                <scope line="54"/>
                <scope line="59"/>
            </method>
            <method name="interpolationInside" type="void" line="63">
                <declaration name="y" type="double[]" line="64"/>
                <declaration name="yDot" type="double[][]" line="65"/>
                <declaration name="interpolator" type="EulerStepInterpolator" line="66"/>
                <declaration name="result" type="double[]" line="75"/>
            </method>
            <method name="derivativesConsistency" type="void" line="85">
                <declaration name="pb" type="TestProblem3" line="86"/>
                <declaration name="step" type="double" line="87"/>
                <declaration name="integ" type="EulerIntegrator" line="88"/>
            </method>
            <method name="serialization" type="void" line="91">
                <declaration name="pb" type="TestProblem1" line="92"/>
                <declaration name="step" type="double" line="93"/>
                <declaration name="integ" type="EulerIntegrator" line="94"/>
                <declaration name="bos" type="ByteArrayOutputStream" line="97"/>
                <declaration name="oos" type="ObjectOutputStream" line="98"/>
                <scope line="99"/>
                <declaration name="bis" type="ByteArrayInputStream" line="102"/>
                <declaration name="ois" type="ObjectInputStream" line="103"/>
                <declaration name="cm" type="ContinuousOutputModel" line="104"/>
                <declaration name="random" type="Random" line="105"/>
                <declaration name="maxError" type="double" line="106"/>
                <scope line="107">
                    <declaration name="r" type="double" line="108"/>
                    <declaration name="time" type="double" line="109"/>
                    <declaration name="interpolatedY" type="double[]" line="111"/>
                    <declaration name="theoreticalY" type="double[]" line="112"/>
                    <declaration name="dx" type="double" line="113"/>
                    <declaration name="dy" type="double" line="114"/>
                    <declaration name="error" type="double" line="115"/>
                    <scope line="116"/>
                </scope>
            </method>
            <class name="DummyIntegrator" line="122">
                <extends class="RungeKuttaIntegrator"/>
                <method name="DummyIntegrator" type="constructor" line="123">
                    <params>
                        <param name="prototype" type="RungeKuttaStepInterpolator"/>
                    </params>
                </method>
            </class>
        </class>
    </source>