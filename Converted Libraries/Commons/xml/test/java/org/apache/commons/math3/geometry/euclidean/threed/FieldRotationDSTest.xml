<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.euclidean.threed">
        <import package="org.apache.commons.math3.analysis.differentiation.DerivativeStructure"/>
        <import package="org.apache.commons.math3.exception.MathArithmeticException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.linear.MatrixUtils"/>
        <import package="org.apache.commons.math3.linear.RealMatrix"/>
        <import package="org.apache.commons.math3.random.UnitSphereRandomVectorGenerator"/>
        <import package="org.apache.commons.math3.random.Well1024a"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="FieldRotationDSTest" line="33">
            <method name="testIdentity" type="void" line="36">
                <declaration name="r" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="38"/>
            </method>
            <method name="testAxisAngle" type="void" line="59">
                <declaration name="r" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="61"/>
                <declaration name="s" type="double" line="65"/>
                <scope line="69"/>
                <scope line="72"/>
            </method>
            <method name="testRevert" type="void" line="88">
                <declaration name="a" type="double" line="89"/>
                <declaration name="b" type="double" line="90"/>
                <declaration name="c" type="double" line="91"/>
                <declaration name="d" type="double" line="92"/>
                <declaration name="r" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="93"/>
                <declaration name="a2" type="double" line="94"/>
                <declaration name="b2" type="double" line="95"/>
                <declaration name="c2" type="double" line="96"/>
                <declaration name="d2" type="double" line="97"/>
                <declaration name="den" type="double" line="98"/>
                <declaration name="reverted" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="115"/>
                <declaration name="rrT" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="116"/>
                <declaration name="rTr" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="134"/>
            </method>
            <method name="testVectorOnePair" type="void" line="157">
                <comment line="171">
                    expected behavior                    
                </comment>
                <declaration name="u" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="159"/>
                <declaration name="v" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="160"/>
                <declaration name="r" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="161"/>
                <scope line="166"/>
                <scope line="169"/>
            </method>
            <method name="testVectorTwoPairs" type="void" line="176">
                <comment line="211">
                    expected behavior                    
                </comment>
                <declaration name="u1" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="178"/>
                <declaration name="u2" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="179"/>
                <declaration name="v1" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="180"/>
                <declaration name="v2" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="181"/>
                <declaration name="r" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="182"/>
                <declaration name="axis" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="187"/>
                <scope line="188"/>
                <scope line="190"/>
                <declaration name="sqrt" type="double" line="195"/>
                <scope line="206"/>
                <scope line="209"/>
            </method>
            <method name="testMatrix" type="void" line="217">
                <comment line="227">
                    expected behavior                    
                </comment>
                <comment line="238">
                    expected behavior                    
                </comment>
                <comment line="249">
                    expected behavior                    
                </comment>
                <comment line="357">
                    expected                    
                </comment>
                <scope line="219"/>
                <scope line="225"/>
                <scope line="229"/>
                <scope line="236"/>
                <scope line="240"/>
                <scope line="247"/>
                <declaration name="m1" type="double[][]" line="279"/>
                <declaration name="r" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="282"/>
                <declaration name="m2" type="double[][]" line="287"/>
                <declaration name="m3" type="DerivativeStructure[][]" line="292"/>
                <declaration name="d00" type="double" line="293"/>
                <declaration name="d01" type="double" line="294"/>
                <declaration name="d02" type="double" line="295"/>
                <declaration name="d10" type="double" line="296"/>
                <declaration name="d11" type="double" line="297"/>
                <declaration name="d12" type="double" line="298"/>
                <declaration name="d20" type="double" line="299"/>
                <declaration name="d21" type="double" line="300"/>
                <declaration name="d22" type="double" line="301"/>
                <scope line="323">
                    <scope line="324">
                        <declaration name="m3tm3" type="double" line="325"/>
                        <scope line="328"/>
                        <scope line="330"/>
                    </scope>
                </scope>
                <declaration name="m4" type="double[][]" line="343"/>
                <scope line="349">
                    <declaration name="m5" type="double[][]" line="350"/>
                </scope>
                <scope line="355"/>
            </method>
            <method name="testAngles" type="void" line="363">
                <declaration name="CardanOrders" type="RotationOrder[]" line="365"/>
                <scope line="370">
                    <scope line="371">
                        <scope line="372">
                            <scope line="373">
                                <declaration name="r" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="374"/>
                                <declaration name="angles" type="DerivativeStructure[]" line="378"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <declaration name="EulerOrders" type="RotationOrder[]" line="387"/>
                <scope line="392">
                    <scope line="393">
                        <scope line="394">
                            <scope line="395">
                                <declaration name="r" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="396"/>
                                <declaration name="angles" type="DerivativeStructure[]" line="400"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testSingularities" type="void" line="412">
                <comment line="431">
                    expected behavior                    
                </comment>
                <comment line="452">
                    expected behavior                    
                </comment>
                <declaration name="CardanOrders" type="RotationOrder[]" line="414"/>
                <declaration name="singularCardanAngle" type="double[]" line="419"/>
                <scope line="420">
                    <scope line="421">
                        <declaration name="r" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="422"/>
                        <scope line="426"/>
                        <scope line="429"/>
                    </scope>
                </scope>
                <declaration name="EulerOrders" type="RotationOrder[]" line="435"/>
                <declaration name="singularEulerAngle" type="double[]" line="440"/>
                <scope line="441">
                    <scope line="442">
                        <declaration name="r" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="443"/>
                        <scope line="447"/>
                        <scope line="450"/>
                    </scope>
                </scope>
            </method>
            <method name="testQuaternion" type="void" line="460">
                <declaration name="r1" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="462"/>
                <declaration name="n" type="double" line="463"/>
                <declaration name="r2" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="464"/>
                <scope line="467">
                    <scope line="468">
                        <scope line="469">
                            <declaration name="u" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="470"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testCompose" type="void" line="488">
                <declaration name="r1" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="490"/>
                <declaration name="r2" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="491"/>
                <declaration name="r3" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="492"/>
                <declaration name="r3Double" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="493"/>
                <scope line="499">
                    <scope line="500">
                        <scope line="501">
                            <declaration name="u" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="502"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testComposeInverse" type="void" line="512">
                <declaration name="r1" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="514"/>
                <declaration name="r2" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="515"/>
                <declaration name="r3" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="516"/>
                <declaration name="r3Double" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="517"/>
                <scope line="523">
                    <scope line="524">
                        <scope line="525">
                            <declaration name="u" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="526"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testDoubleVectors" type="void" line="536">
                <declaration name="random" type="Well1024a" line="538"/>
                <declaration name="g" type="UnitSphereRandomVectorGenerator" line="539"/>
                <scope line="540">
                    <declaration name="unit" type="double[]" line="541"/>
                    <declaration name="r" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="542"/>
                    <scope line="545">
                        <scope line="546">
                            <scope line="547">
                                <declaration name="uds" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="548"/>
                                <declaration name="ruds" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="549"/>
                                <declaration name="rIuds" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="550"/>
                                <declaration name="u" type="Vector3D" line="551"/>
                                <declaration name="ru" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="552"/>
                                <declaration name="rIu" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="553"/>
                                <declaration name="ruArray" type="DerivativeStructure[]" line="554"/>
                                <declaration name="rIuArray" type="DerivativeStructure[]" line="556"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testDoubleRotations" type="void" line="570">
                <declaration name="random" type="Well1024a" line="572"/>
                <declaration name="g" type="UnitSphereRandomVectorGenerator" line="573"/>
                <scope line="574">
                    <declaration name="unit1" type="double[]" line="575"/>
                    <declaration name="r1" type="Rotation" line="576"/>
                    <declaration name="r1Prime" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="578"/>
                    <declaration name="unit2" type="double[]" line="583"/>
                    <declaration name="r2" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="584"/>
                    <declaration name="rA" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="587"/>
                    <declaration name="rB" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="588"/>
                    <declaration name="rC" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="589"/>
                    <declaration name="rD" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="590"/>
                    <scope line="592">
                        <scope line="593">
                            <scope line="594">
                                <declaration name="uds" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="596"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testDerivatives" type="void" line="612">
                <comment line="627">
                    Jacobian of the normalized rotation axis a with respect to the Cartesian vector k                    
                </comment>
                <comment line="640">
                    explicit formula for rotation of vector u around axis a with angle theta                    
                </comment>
                <comment line="650">
                    Jacobian of the image v = r(u) with respect to rotation axis a
                     (analytical differentiation of the explicit formula)                    
                </comment>
                <comment line="658">
                    compose Jacobians                    
                </comment>
                <comment line="661">
                    derivatives with respect to un-normalized axis                    
                </comment>
                <comment line="672">
                    derivative with respect to rotation angle
                     (analytical differentiation of the explicit formula)                    
                </comment>
                <declaration name="eps" type="double" line="614"/>
                <declaration name="kx" type="double" line="615"/>
                <declaration name="ky" type="double" line="616"/>
                <declaration name="kz" type="double" line="617"/>
                <declaration name="n2" type="double" line="618"/>
                <declaration name="n" type="double" line="619"/>
                <declaration name="theta" type="double" line="620"/>
                <declaration name="cosTheta" type="double" line="621"/>
                <declaration name="sinTheta" type="double" line="622"/>
                <declaration name="r" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="623"/>
                <declaration name="a" type="Vector3D" line="624"/>
                <declaration name="dadk" type="RealMatrix" line="627"/>
                <scope line="633">
                    <scope line="634">
                        <scope line="635">
                            <declaration name="u" type="Vector3D" line="636"/>
                            <declaration name="v" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="637"/>
                            <declaration name="dot" type="double" line="640"/>
                            <declaration name="cross" type="Vector3D" line="641"/>
                            <declaration name="c1" type="double" line="642"/>
                            <declaration name="c2" type="double" line="643"/>
                            <declaration name="rt" type="Vector3D" line="644"/>
                            <declaration name="dvda" type="RealMatrix" line="651"/>
                            <declaration name="dvdk" type="RealMatrix" line="658"/>
                            <declaration name="dvdTheta" type="Vector3D" line="673"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testArray" type="void" line="685">
                <declaration name="r" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="687"/>
                <scope line="689">
                    <scope line="690">
                        <scope line="691">
                            <declaration name="u" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="692"/>
                            <declaration name="v" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="693"/>
                            <declaration name="out" type="DerivativeStructure[]" line="694"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testApplyInverseTo" type="void" line="710">
                <declaration name="in" type="DerivativeStructure[]" line="712"/>
                <declaration name="out" type="DerivativeStructure[]" line="713"/>
                <declaration name="rebuilt" type="DerivativeStructure[]" line="714"/>
                <declaration name="r" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="715"/>
                <scope line="716">
                    <scope line="717">
                        <declaration name="u" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="718"/>
                    </scope>
                </scope>
                <scope line="736">
                    <scope line="737">
                        <declaration name="u" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="738"/>
                    </scope>
                </scope>
                <scope line="747">
                    <scope line="748">
                        <declaration name="u" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="749"/>
                    </scope>
                </scope>
            </method>
            <method name="testIssue639" type="void" line="760">
                <declaration name="u1" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="761"/>
                <declaration name="u2" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="764"/>
                <declaration name="rot" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="767"/>
            </method>
            <method name="testIssue801" type="void" line="775">
                <declaration name="u1" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="776"/>
                <declaration name="u2" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="777"/>
                <declaration name="v1" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="779"/>
                <declaration name="v2" type="FieldVector3D&amp;lt;DerivativeStructure&amp;gt;" line="780"/>
                <declaration name="quat" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="782"/>
                <declaration name="q2" type="double" line="783"/>
            </method>
            <method name="checkAngle" type="void" line="793">
                <params>
                    <param name="a1" type="DerivativeStructure"/>
                    <param name="a2" type="double"/>
                </params>
            </method>
            <method name="checkRotationDS" type="void" line="797">
                <params>
                    <param name="r" type="FieldRotation&lt;DerivativeStructure&gt;"/>
                    <param name="q0" type="double"/>
                    <param name="q1" type="double"/>
                    <param name="q2" type="double"/>
                    <param name="q3" type="double"/>
                </params>
                <declaration name="rPrime" type="FieldRotation&amp;lt;DerivativeStructure&amp;gt;" line="798"/>
            </method>
            <method name="createRotation" type="FieldRotation&lt;DerivativeStructure&gt;" line="803">
                <params>
                    <param name="q0" type="double"/>
                    <param name="q1" type="double"/>
                    <param name="q2" type="double"/>
                    <param name="q3" type="double"/>
                    <param name="needsNormalization" type="boolean"/>
                </params>
            </method>
            <method name="createRotation" type="FieldRotation&lt;DerivativeStructure&gt;" line="811">
                <params>
                    <param name="m" type="double[][]"/>
                    <param name="threshold" type="double"/>
                </params>
                <declaration name="mds" type="DerivativeStructure[][]" line="812"/>
                <declaration name="index" type="int" line="813"/>
                <scope line="814">
                    <scope line="815"/>
                </scope>
            </method>
            <method name="createVector" type="FieldVector3D&lt;DerivativeStructure&gt;" line="823">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="z" type="double"/>
                </params>
            </method>
            <method name="createAxis" type="FieldVector3D&lt;DerivativeStructure&gt;" line="829">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="z" type="double"/>
                </params>
            </method>
            <method name="createAngle" type="DerivativeStructure" line="835">
                <params>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <method name="checkVector" type="void" line="839">
                <params>
                    <param name="u" type="FieldVector3D&lt;DerivativeStructure&gt;"/>
                    <param name="v" type="FieldVector3D&lt;DerivativeStructure&gt;"/>
                </params>
            </method>
        </class>
    </source>