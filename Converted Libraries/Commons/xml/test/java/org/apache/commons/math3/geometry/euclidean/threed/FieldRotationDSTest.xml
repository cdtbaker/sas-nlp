<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.euclidean.threed">
        <import package="org.apache.commons.math3.analysis.differentiation.DerivativeStructure"/>
        <import package="org.apache.commons.math3.exception.MathArithmeticException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.linear.MatrixUtils"/>
        <import package="org.apache.commons.math3.linear.RealMatrix"/>
        <import package="org.apache.commons.math3.random.UnitSphereRandomVectorGenerator"/>
        <import package="org.apache.commons.math3.random.Well1024a"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="FieldRotationDSTest" line="13">
            <method name="testIdentity" type="void" line="14">
                <declaration name="r" type="FieldRotation&lt;DerivativeStructure&gt;" line="15"/>
            </method>
            <method name="testAxisAngle" type="void" line="31">
                <declaration name="r" type="FieldRotation&lt;DerivativeStructure&gt;" line="32"/>
                <declaration name="s" type="double" line="36"/>
                <scope line="39"/>
                <scope line="43"/>
            </method>
            <method name="testRevert" type="void" line="53">
                <declaration name="a" type="double" line="54"/>
                <declaration name="b" type="double" line="55"/>
                <declaration name="c" type="double" line="56"/>
                <declaration name="d" type="double" line="57"/>
                <declaration name="r" type="FieldRotation&lt;DerivativeStructure&gt;" line="58"/>
                <declaration name="a2" type="double" line="59"/>
                <declaration name="b2" type="double" line="60"/>
                <declaration name="c2" type="double" line="61"/>
                <declaration name="d2" type="double" line="62"/>
                <declaration name="den" type="double" line="63"/>
                <declaration name="reverted" type="FieldRotation&lt;DerivativeStructure&gt;" line="80"/>
                <declaration name="rrT" type="FieldRotation&lt;DerivativeStructure&gt;" line="81"/>
                <declaration name="rTr" type="FieldRotation&lt;DerivativeStructure&gt;" line="99"/>
            </method>
            <method name="testVectorOnePair" type="void" line="120">
                <declaration name="u" type="FieldVector3D&lt;DerivativeStructure&gt;" line="121"/>
                <declaration name="v" type="FieldVector3D&lt;DerivativeStructure&gt;" line="122"/>
                <declaration name="r" type="FieldRotation&lt;DerivativeStructure&gt;" line="123"/>
                <scope line="126"/>
                <scope line="130"/>
            </method>
            <method name="testVectorTwoPairs" type="void" line="133">
                <declaration name="u1" type="FieldVector3D&lt;DerivativeStructure&gt;" line="134"/>
                <declaration name="u2" type="FieldVector3D&lt;DerivativeStructure&gt;" line="135"/>
                <declaration name="v1" type="FieldVector3D&lt;DerivativeStructure&gt;" line="136"/>
                <declaration name="v2" type="FieldVector3D&lt;DerivativeStructure&gt;" line="137"/>
                <declaration name="r" type="FieldRotation&lt;DerivativeStructure&gt;" line="138"/>
                <declaration name="axis" type="FieldVector3D&lt;DerivativeStructure&gt;" line="142"/>
                <scope line="143"/>
                <scope line="146"/>
                <declaration name="sqrt" type="double" line="150"/>
                <scope line="156"/>
                <scope line="160"/>
            </method>
            <method name="testMatrix" type="void" line="163">
                <scope line="164"/>
                <scope line="168"/>
                <scope line="170"/>
                <scope line="174"/>
                <scope line="176"/>
                <scope line="180"/>
                <declaration name="m1" type="double[][]" line="186"/>
                <declaration name="r" type="FieldRotation&lt;DerivativeStructure&gt;" line="187"/>
                <declaration name="m2" type="double[][]" line="191"/>
                <declaration name="m3" type="DerivativeStructure[][]" line="193"/>
                <declaration name="d00" type="double" line="194"/>
                <declaration name="d01" type="double" line="195"/>
                <declaration name="d02" type="double" line="196"/>
                <declaration name="d10" type="double" line="197"/>
                <declaration name="d11" type="double" line="198"/>
                <declaration name="d12" type="double" line="199"/>
                <declaration name="d20" type="double" line="200"/>
                <declaration name="d21" type="double" line="201"/>
                <declaration name="d22" type="double" line="202"/>
                <scope line="221">
                    <scope line="222">
                        <declaration name="m3tm3" type="double" line="223"/>
                        <scope line="224"/>
                        <scope line="227"/>
                    </scope>
                </scope>
                <declaration name="m4" type="double[][]" line="235"/>
                <scope line="238">
                    <declaration name="m5" type="double[][]" line="239"/>
                </scope>
                <scope line="243"/>
            </method>
            <method name="testAngles" type="void" line="246">
                <declaration name="CardanOrders" type="RotationOrder[]" line="247"/>
                <scope line="248">
                    <scope line="249">
                        <scope line="250">
                            <scope line="251">
                                <declaration name="r" type="FieldRotation&lt;DerivativeStructure&gt;" line="252"/>
                                <declaration name="angles" type="DerivativeStructure[]" line="253"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <declaration name="EulerOrders" type="RotationOrder[]" line="261"/>
                <scope line="262">
                    <scope line="263">
                        <scope line="264">
                            <scope line="265">
                                <declaration name="r" type="FieldRotation&lt;DerivativeStructure&gt;" line="266"/>
                                <declaration name="angles" type="DerivativeStructure[]" line="267"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testSingularities" type="void" line="276">
                <declaration name="CardanOrders" type="RotationOrder[]" line="277"/>
                <declaration name="singularCardanAngle" type="double[]" line="278"/>
                <scope line="279">
                    <scope line="280">
                        <declaration name="r" type="FieldRotation&lt;DerivativeStructure&gt;" line="281"/>
                        <scope line="282"/>
                        <scope line="286"/>
                    </scope>
                </scope>
                <declaration name="EulerOrders" type="RotationOrder[]" line="290"/>
                <declaration name="singularEulerAngle" type="double[]" line="291"/>
                <scope line="292">
                    <scope line="293">
                        <declaration name="r" type="FieldRotation&lt;DerivativeStructure&gt;" line="294"/>
                        <scope line="295"/>
                        <scope line="299"/>
                    </scope>
                </scope>
            </method>
            <method name="testQuaternion" type="void" line="304">
                <declaration name="r1" type="FieldRotation&lt;DerivativeStructure&gt;" line="305"/>
                <declaration name="n" type="double" line="306"/>
                <declaration name="r2" type="FieldRotation&lt;DerivativeStructure&gt;" line="307"/>
                <scope line="308">
                    <scope line="309">
                        <scope line="310">
                            <declaration name="u" type="FieldVector3D&lt;DerivativeStructure&gt;" line="311"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testCompose" type="void" line="323">
                <declaration name="r1" type="FieldRotation&lt;DerivativeStructure&gt;" line="324"/>
                <declaration name="r2" type="FieldRotation&lt;DerivativeStructure&gt;" line="325"/>
                <declaration name="r3" type="FieldRotation&lt;DerivativeStructure&gt;" line="326"/>
                <declaration name="r3Double" type="FieldRotation&lt;DerivativeStructure&gt;" line="327"/>
                <scope line="328">
                    <scope line="329">
                        <scope line="330">
                            <declaration name="u" type="FieldVector3D&lt;DerivativeStructure&gt;" line="331"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testComposeInverse" type="void" line="338">
                <declaration name="r1" type="FieldRotation&lt;DerivativeStructure&gt;" line="339"/>
                <declaration name="r2" type="FieldRotation&lt;DerivativeStructure&gt;" line="340"/>
                <declaration name="r3" type="FieldRotation&lt;DerivativeStructure&gt;" line="341"/>
                <declaration name="r3Double" type="FieldRotation&lt;DerivativeStructure&gt;" line="342"/>
                <scope line="343">
                    <scope line="344">
                        <scope line="345">
                            <declaration name="u" type="FieldVector3D&lt;DerivativeStructure&gt;" line="346"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testDoubleVectors" type="void" line="353">
                <declaration name="random" type="Well1024a" line="354"/>
                <declaration name="g" type="UnitSphereRandomVectorGenerator" line="355"/>
                <scope line="356">
                    <declaration name="unit" type="double[]" line="357"/>
                    <declaration name="r" type="FieldRotation&lt;DerivativeStructure&gt;" line="358"/>
                    <scope line="359">
                        <scope line="360">
                            <scope line="361">
                                <declaration name="uds" type="FieldVector3D&lt;DerivativeStructure&gt;" line="362"/>
                                <declaration name="ruds" type="FieldVector3D&lt;DerivativeStructure&gt;" line="363"/>
                                <declaration name="rIuds" type="FieldVector3D&lt;DerivativeStructure&gt;" line="364"/>
                                <declaration name="u" type="Vector3D" line="365"/>
                                <declaration name="ru" type="FieldVector3D&lt;DerivativeStructure&gt;" line="366"/>
                                <declaration name="rIu" type="FieldVector3D&lt;DerivativeStructure&gt;" line="367"/>
                                <declaration name="ruArray" type="DerivativeStructure[]" line="368"/>
                                <declaration name="rIuArray" type="DerivativeStructure[]" line="370"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testDoubleRotations" type="void" line="381">
                <declaration name="random" type="Well1024a" line="382"/>
                <declaration name="g" type="UnitSphereRandomVectorGenerator" line="383"/>
                <scope line="384">
                    <declaration name="unit1" type="double[]" line="385"/>
                    <declaration name="r1" type="Rotation" line="386"/>
                    <declaration name="r1Prime" type="FieldRotation&lt;DerivativeStructure&gt;" line="387"/>
                    <declaration name="unit2" type="double[]" line="388"/>
                    <declaration name="r2" type="FieldRotation&lt;DerivativeStructure&gt;" line="389"/>
                    <declaration name="rA" type="FieldRotation&lt;DerivativeStructure&gt;" line="390"/>
                    <declaration name="rB" type="FieldRotation&lt;DerivativeStructure&gt;" line="391"/>
                    <declaration name="rC" type="FieldRotation&lt;DerivativeStructure&gt;" line="392"/>
                    <declaration name="rD" type="FieldRotation&lt;DerivativeStructure&gt;" line="393"/>
                    <scope line="394">
                        <scope line="395">
                            <scope line="396">
                                <declaration name="uds" type="FieldVector3D&lt;DerivativeStructure&gt;" line="397"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testDerivatives" type="void" line="409">
                <declaration name="eps" type="double" line="410"/>
                <declaration name="kx" type="double" line="411"/>
                <declaration name="ky" type="double" line="412"/>
                <declaration name="kz" type="double" line="413"/>
                <declaration name="n2" type="double" line="414"/>
                <declaration name="n" type="double" line="415"/>
                <declaration name="theta" type="double" line="416"/>
                <declaration name="cosTheta" type="double" line="417"/>
                <declaration name="sinTheta" type="double" line="418"/>
                <declaration name="r" type="FieldRotation&lt;DerivativeStructure&gt;" line="419"/>
                <declaration name="a" type="Vector3D" line="420"/>
                <declaration name="dadk" type="RealMatrix" line="421"/>
                <scope line="422">
                    <scope line="423">
                        <scope line="424">
                            <declaration name="u" type="Vector3D" line="425"/>
                            <declaration name="v" type="FieldVector3D&lt;DerivativeStructure&gt;" line="426"/>
                            <declaration name="dot" type="double" line="427"/>
                            <declaration name="cross" type="Vector3D" line="428"/>
                            <declaration name="c1" type="double" line="429"/>
                            <declaration name="c2" type="double" line="430"/>
                            <declaration name="rt" type="Vector3D" line="431"/>
                            <declaration name="dvda" type="RealMatrix" line="435"/>
                            <declaration name="dvdk" type="RealMatrix" line="436"/>
                            <declaration name="dvdTheta" type="Vector3D" line="446"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testArray" type="void" line="454">
                <declaration name="r" type="FieldRotation&lt;DerivativeStructure&gt;" line="455"/>
                <scope line="456">
                    <scope line="457">
                        <scope line="458">
                            <declaration name="u" type="FieldVector3D&lt;DerivativeStructure&gt;" line="459"/>
                            <declaration name="v" type="FieldVector3D&lt;DerivativeStructure&gt;" line="460"/>
                            <declaration name="out" type="DerivativeStructure[]" line="461"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testApplyInverseTo" type="void" line="474">
                <declaration name="in" type="DerivativeStructure[]" line="475"/>
                <declaration name="out" type="DerivativeStructure[]" line="476"/>
                <declaration name="rebuilt" type="DerivativeStructure[]" line="477"/>
                <declaration name="r" type="FieldRotation&lt;DerivativeStructure&gt;" line="478"/>
                <scope line="479">
                    <scope line="480">
                        <declaration name="u" type="FieldVector3D&lt;DerivativeStructure&gt;" line="481"/>
                    </scope>
                </scope>
                <scope line="496">
                    <scope line="497">
                        <declaration name="u" type="FieldVector3D&lt;DerivativeStructure&gt;" line="498"/>
                    </scope>
                </scope>
                <scope line="504">
                    <scope line="505">
                        <declaration name="u" type="FieldVector3D&lt;DerivativeStructure&gt;" line="506"/>
                    </scope>
                </scope>
            </method>
            <method name="testIssue639" type="void" line="512">
                <declaration name="u1" type="FieldVector3D&lt;DerivativeStructure&gt;" line="513"/>
                <declaration name="u2" type="FieldVector3D&lt;DerivativeStructure&gt;" line="514"/>
                <declaration name="rot" type="FieldRotation&lt;DerivativeStructure&gt;" line="515"/>
            </method>
            <method name="testIssue801" type="void" line="521">
                <declaration name="u1" type="FieldVector3D&lt;DerivativeStructure&gt;" line="522"/>
                <declaration name="u2" type="FieldVector3D&lt;DerivativeStructure&gt;" line="523"/>
                <declaration name="v1" type="FieldVector3D&lt;DerivativeStructure&gt;" line="524"/>
                <declaration name="v2" type="FieldVector3D&lt;DerivativeStructure&gt;" line="525"/>
                <declaration name="quat" type="FieldRotation&lt;DerivativeStructure&gt;" line="526"/>
                <declaration name="q2" type="double" line="527"/>
            </method>
            <method name="checkAngle" type="void" line="532">
                <params>
                    <param name="a1" type="DerivativeStructure"/>
                    <param name="a2" type="double"/>
                </params>
            </method>
            <method name="checkRotationDS" type="void" line="535">
                <params>
                    <param name="r" type="FieldRotation<DerivativeStructure>"/>
                    <param name="q0" type="double"/>
                    <param name="q1" type="double"/>
                    <param name="q2" type="double"/>
                    <param name="q3" type="double"/>
                </params>
                <declaration name="rPrime" type="FieldRotation&lt;DerivativeStructure&gt;" line="536"/>
            </method>
            <method name="createRotation" type="FieldRotation<DerivativeStructure>" line="539">
                <params>
                    <param name="q0" type="double"/>
                    <param name="q1" type="double"/>
                    <param name="q2" type="double"/>
                    <param name="q3" type="double"/>
                    <param name="needsNormalization" type="boolean"/>
                </params>
            </method>
            <method name="createRotation" type="FieldRotation<DerivativeStructure>" line="542">
                <params>
                    <param name="m" type="double[][]"/>
                    <param name="threshold" type="double"/>
                </params>
                <declaration name="mds" type="DerivativeStructure[][]" line="543"/>
                <declaration name="index" type="int" line="544"/>
                <scope line="545">
                    <scope line="546"/>
                </scope>
            </method>
            <method name="createVector" type="FieldVector3D<DerivativeStructure>" line="553">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="z" type="double"/>
                </params>
            </method>
            <method name="createAxis" type="FieldVector3D<DerivativeStructure>" line="556">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="z" type="double"/>
                </params>
            </method>
            <method name="createAngle" type="DerivativeStructure" line="559">
                <params>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <method name="checkVector" type="void" line="562">
                <params>
                    <param name="u" type="FieldVector3D<DerivativeStructure>"/>
                    <param name="v" type="FieldVector3D<DerivativeStructure>"/>
                </params>
            </method>
        </class>
    </source>