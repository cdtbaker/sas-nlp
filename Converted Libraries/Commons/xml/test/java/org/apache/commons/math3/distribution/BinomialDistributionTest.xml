<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="BinomialDistributionTest" line="19">
            <extends class="IntegerDistributionAbstractTest"/>
            <comment line="35">
                -------------- Implementations for abstract methods
                 -----------------------                
            </comment>
            <comment line="93">
                ----------------- Additional test cases ---------------------------------                
            </comment>
            <javadoc line="19">
                Test cases for BinomialDistribution. Extends IntegerDistributionAbstractTest.
                  See class javadoc for IntegerDistributionAbstractTest for details.                
                <version>
                    $Id: BinomialDistributionTest.java 1531756 2013-10-13 21:33:13Z psteitz $                    
                </version>
            </javadoc>
            <javadoc line="27">
                Constructor to override default tolerance.                
            </javadoc>
            <method name="BinomialDistributionTest" type="constructor" line="30"/>
            <javadoc line="37">
                Creates the default discrete distribution instance to use in tests.                
            </javadoc>
            <method name="makeDistribution" type="IntegerDistribution" line="39"/>
            <javadoc line="43">
                Creates the default probability density test input values.                
            </javadoc>
            <method name="makeDensityTestPoints" type="int[]" line="45"/>
            <javadoc line="49">
                Creates the default probability density test expected values.
                  Reference values are from R, version 2.15.3.                
            </javadoc>
            <method name="makeDensityTestValues" type="double[]" line="54"/>
            <javadoc line="60">
                Creates the default cumulative probability density test input values                
            </javadoc>
            <method name="makeCumulativeTestPoints" type="int[]" line="62"/>
            <javadoc line="66">
                Creates the default cumulative probability density test expected values.
                  Reference values are from R, version 2.15.3.                
            </javadoc>
            <method name="makeCumulativeTestValues" type="double[]" line="71"/>
            <javadoc line="76">
                Creates the default inverse cumulative probability test input values                
            </javadoc>
            <method name="makeInverseCumulativeTestPoints" type="double[]" line="78"/>
            <javadoc line="83">
                Creates the default inverse cumulative probability density test expected
                  values                
            </javadoc>
            <method name="makeInverseCumulativeTestValues" type="int[]" line="88"/>
            <javadoc line="94">
                Test degenerate case p = 0                
            </javadoc>
            <method name="testDegenerate0" type="void" line="96">
                <declaration name="dist" type="BinomialDistribution" line="97"/>
            </method>
            <javadoc line="112">
                Test degenerate case p = 1                
            </javadoc>
            <method name="testDegenerate1" type="void" line="114">
                <declaration name="dist" type="BinomialDistribution" line="115"/>
            </method>
            <method name="testMoments" type="void" line="131">
                <declaration name="tol" type="double" line="132"/>
                <declaration name="dist" type="BinomialDistribution" line="133"/>
            </method>
            <method name="testMath718" type="void" line="145">
                <comment line="147">
                    for large trials the evaluation of ContinuedFraction was inaccurate
                     do a sweep over several large trials to test if the current implementation is
                     numerically stable.                    
                </comment>
                <scope line="150">
                    <declaration name="dist" type="BinomialDistribution" line="151"/>
                    <declaration name="p" type="int" line="152"/>
                </scope>
            </method>
        </class>
    </source>