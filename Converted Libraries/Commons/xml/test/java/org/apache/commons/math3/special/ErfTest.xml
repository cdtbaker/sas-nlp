<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.special">
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Test"/>
        <import package="org.junit.Assert"/>
        <class name="ErfTest" line="6">
            <javadoc line="6">
                @version $Id: ErfTest.java 1456905 2013-03-15 11:37:35Z luc $                
            </javadoc>
            <method name="testErf0" type="void" line="10">
                <declaration name="actual" type="double" line="11"/>
                <declaration name="expected" type="double" line="12"/>
            </method>
            <method name="testErf1960" type="void" line="16">
                <declaration name="x" type="double" line="17"/>
                <declaration name="actual" type="double" line="18"/>
                <declaration name="expected" type="double" line="19"/>
            </method>
            <method name="testErf2576" type="void" line="27">
                <declaration name="x" type="double" line="28"/>
                <declaration name="actual" type="double" line="29"/>
                <declaration name="expected" type="double" line="30"/>
            </method>
            <method name="testErf2807" type="void" line="38">
                <declaration name="x" type="double" line="39"/>
                <declaration name="actual" type="double" line="40"/>
                <declaration name="expected" type="double" line="41"/>
            </method>
            <method name="testErf3291" type="void" line="49">
                <declaration name="x" type="double" line="50"/>
                <declaration name="actual" type="double" line="51"/>
                <declaration name="expected" type="double" line="52"/>
            </method>
            <javadoc line="60">
                MATH-301, MATH-456                
            </javadoc>
            <method name="testLargeValues" type="void" line="63">
                <scope line="64">
                    <declaration name="result" type="double" line="65"/>
                </scope>
            </method>
            <javadoc line="83">
                Compare Erf.erf against reference values computed using GCC 4.2.1 (Apple OSX packaged version)
                  erfl (extended precision erf).                
            </javadoc>
            <method name="testErfGnu" type="void" line="87">
                <declaration name="tol" type="double" line="88"/>
                <declaration name="gnuValues" type="double[]" line="89"/>
                <declaration name="x" type="double" line="90"/>
                <scope line="91"/>
            </method>
            <javadoc line="96">
                Compare Erf.erfc against reference values computed using GCC 4.2.1 (Apple OSX packaged version)
                  erfcl (extended precision erfc).                
            </javadoc>
            <method name="testErfcGnu" type="void" line="100">
                <declaration name="tol" type="double" line="101"/>
                <declaration name="gnuValues" type="double[]" line="102"/>
                <declaration name="x" type="double" line="103"/>
                <scope line="104"/>
            </method>
            <javadoc line="109">
                Tests erfc against reference data computed using Maple reported in Marsaglia, G,, 
                  &quot;Evaluating the Normal Distribution,&quot; Journal of Statistical Software, July, 2004.
                  http//www.jstatsoft.org/v11/a05/paper                
            </javadoc>
            <method name="testErfcMaple" type="void" line="114">
                <declaration name="ref" type="double[][]" line="115"/>
                <scope line="116">
                    <declaration name="result" type="double" line="117"/>
                </scope>
            </method>
            <javadoc line="122">
                Test the implementation of Erf.erf(double, double) for consistency with results
                  obtained from Erf.erf(double) and Erf.erfc(double).                
            </javadoc>
            <method name="testTwoArgumentErf" type="void" line="126">
                <declaration name="xi" type="double[]" line="127"/>
                <scope line="128">
                    <scope line="129">
                        <declaration name="a" type="double" line="130"/>
                        <declaration name="b" type="double" line="131"/>
                        <declaration name="c" type="double" line="132"/>
                    </scope>
                </scope>
            </method>
            <method name="testErfInvNaN" type="void" line="138"/>
            <method name="testErfInvInfinite" type="void" line="142"/>
            <method name="testErfInv" type="void" line="148">
                <scope line="149">
                    <declaration name="y" type="double" line="150"/>
                    <declaration name="dydx" type="double" line="151"/>
                </scope>
            </method>
            <method name="testErfcInvNaN" type="void" line="155"/>
            <method name="testErfcInvInfinite" type="void" line="159"/>
            <method name="testErfcInv" type="void" line="165">
                <scope line="166">
                    <declaration name="y" type="double" line="167"/>
                    <declaration name="dydxAbs" type="double" line="168"/>
                </scope>
            </method>
        </class>
    </source>