<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="java.math.BigDecimal"/>
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.fraction.BigFraction"/>
        <import package="org.apache.commons.math3.fraction.Fraction"/>
        <import package="org.apache.commons.math3.fraction.FractionConversionException"/>
        <import package="org.apache.commons.math3.fraction.FractionField"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="MatrixUtilsTest" line="13">
            <javadoc line="13">
                Test cases for the {@link MatrixUtils} class.                
                <version>
                    $Id: MatrixUtilsTest.java 1403587 2012-10-30 00:21:20Z erans $                    
                </version>
            </javadoc>
            <declaration name="testData" type="double[][]" line="18"/>
            <declaration name="nullMatrix" type="double[][]" line="19"/>
            <declaration name="row" type="double[]" line="20"/>
            <declaration name="bigRow" type="BigDecimal[]" line="21"/>
            <declaration name="stringRow" type="String[]" line="22"/>
            <declaration name="fractionRow" type="Fraction[]" line="23"/>
            <declaration name="rowMatrix" type="double[][]" line="24"/>
            <declaration name="bigRowMatrix" type="BigDecimal[][]" line="25"/>
            <declaration name="stringRowMatrix" type="String[][]" line="26"/>
            <declaration name="fractionRowMatrix" type="Fraction[][]" line="27"/>
            <declaration name="col" type="double[]" line="28"/>
            <declaration name="bigCol" type="BigDecimal[]" line="29"/>
            <declaration name="stringCol" type="String[]" line="30"/>
            <declaration name="fractionCol" type="Fraction[]" line="31"/>
            <declaration name="nullDoubleArray" type="double[]" line="32"/>
            <declaration name="colMatrix" type="double[][]" line="33"/>
            <declaration name="bigColMatrix" type="BigDecimal[][]" line="34"/>
            <declaration name="stringColMatrix" type="String[][]" line="35"/>
            <declaration name="fractionColMatrix" type="Fraction[][]" line="36"/>
            <method name="testCreateRealMatrix" type="void" line="37">
                <scope line="39"/>
                <scope line="43"/>
                <scope line="45"/>
                <scope line="49"/>
                <scope line="51"/>
                <scope line="55"/>
            </method>
            <method name="testcreateFieldMatrix" type="void" line="58">
                <scope line="61"/>
                <scope line="65"/>
                <scope line="67"/>
                <scope line="71"/>
                <scope line="73"/>
                <scope line="77"/>
            </method>
            <method name="testCreateRowRealMatrix" type="void" line="80">
                <scope line="82"/>
                <scope line="86"/>
                <scope line="88"/>
                <scope line="92"/>
            </method>
            <method name="testCreateRowFieldMatrix" type="void" line="95">
                <scope line="98"/>
                <scope line="102"/>
                <scope line="104"/>
                <scope line="108"/>
            </method>
            <method name="testCreateColumnRealMatrix" type="void" line="111">
                <scope line="113"/>
                <scope line="117"/>
                <scope line="119"/>
                <scope line="123"/>
            </method>
            <method name="testCreateColumnFieldMatrix" type="void" line="126">
                <scope line="129"/>
                <scope line="133"/>
                <scope line="135"/>
                <scope line="139"/>
            </method>
            <javadoc line="142">
                Verifies that the matrix is an identity matrix                
            </javadoc>
            <method name="checkIdentityMatrix" type="void" line="145">
                <params>
                    <param name="m" type="RealMatrix"/>
                </params>
                <scope line="146">
                    <scope line="147">
                        <scope line="148"/>
                        <scope line="151"/>
                    </scope>
                </scope>
            </method>
            <method name="testCreateIdentityMatrix" type="void" line="157">
                <scope line="161"/>
                <scope line="165"/>
            </method>
            <javadoc line="168">
                Verifies that the matrix is an identity matrix                
            </javadoc>
            <method name="checkIdentityFieldMatrix" type="void" line="171">
                <params>
                    <param name="m" type="FieldMatrix<Fraction>"/>
                </params>
                <scope line="172">
                    <scope line="173">
                        <scope line="174"/>
                        <scope line="177"/>
                    </scope>
                </scope>
            </method>
            <method name="testcreateFieldIdentityMatrix" type="void" line="183">
                <scope line="187"/>
                <scope line="191"/>
            </method>
            <method name="testBigFractionConverter" type="void" line="194">
                <declaration name="bfData" type="BigFraction[][]" line="195"/>
                <declaration name="m" type="FieldMatrix&lt;BigFraction&gt;" line="196"/>
                <declaration name="converted" type="RealMatrix" line="197"/>
                <declaration name="reference" type="RealMatrix" line="198"/>
            </method>
            <method name="testFractionConverter" type="void" line="201">
                <declaration name="fData" type="Fraction[][]" line="202"/>
                <declaration name="m" type="FieldMatrix&lt;Fraction&gt;" line="203"/>
                <declaration name="converted" type="RealMatrix" line="204"/>
                <declaration name="reference" type="RealMatrix" line="205"/>
            </method>
            <method name="asFraction" type="Fraction[][]" line="208">
                <params>
                    <param name="data" type="double[][]"/>
                </params>
                <declaration name="d" type="Fraction" line="209"/>
                <scope line="210">
                    <scope line="211">
                        <declaration name="dataI" type="double[]" line="212"/>
                        <declaration name="dI" type="Fraction[]" line="213"/>
                        <scope line="214"/>
                    </scope>
                </scope>
                <scope line="220"/>
            </method>
            <method name="asFraction" type="Fraction[]" line="225">
                <params>
                    <param name="data" type="double[]"/>
                </params>
                <declaration name="d" type="Fraction" line="226"/>
                <scope line="227">
                    <scope line="228"/>
                </scope>
                <scope line="232"/>
            </method>
            <method name="testSolveLowerTriangularSystem" type="void" line="237">
                <declaration name="rm" type="RealMatrix" line="238"/>
                <declaration name="b" type="RealVector" line="239"/>
            </method>
            <method name="testSolveUpperTriangularSystem" type="void" line="243">
                <declaration name="rm" type="RealMatrix" line="244"/>
                <declaration name="b" type="RealVector" line="245"/>
            </method>
            <javadoc line="249">
                This test should probably be replaced by one that could show
                  whether this algorithm can sometimes perform better (precision- or
                  performance-wise) than the direct inversion of the whole matrix.                
            </javadoc>
            <method name="testBlockInverse" type="void" line="254">
                <declaration name="data" type="double[][]" line="255"/>
                <declaration name="m" type="RealMatrix" line="256"/>
                <declaration name="len" type="int" line="257"/>
                <declaration name="tol" type="double" line="258"/>
                <scope line="259">
                    <declaration name="mInv" type="RealMatrix" line="260"/>
                    <declaration name="id" type="RealMatrix" line="261"/>
                    <scope line="262">
                        <scope line="263">
                            <declaration name="entry" type="double" line="264"/>
                            <scope line="265"/>
                            <scope line="268"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testIsSymmetric" type="void" line="275">
                <declaration name="eps" type="double" line="276"/>
                <declaration name="dataSym" type="double[][]" line="277"/>
                <declaration name="dataNonSym" type="double[][]" line="279"/>
            </method>
            <method name="testIsSymmetricTolerance" type="void" line="282">
                <declaration name="eps" type="double" line="283"/>
                <declaration name="dataSym1" type="double[][]" line="284"/>
                <declaration name="dataSym2" type="double[][]" line="286"/>
                <declaration name="dataNonSym1" type="double[][]" line="288"/>
                <declaration name="dataNonSym2" type="double[][]" line="290"/>
            </method>
            <method name="testCheckSymmetric1" type="void" line="293">
                <declaration name="dataSym" type="double[][]" line="294"/>
            </method>
            <method name="testCheckSymmetric2" type="void" line="297">
                <declaration name="dataNonSym" type="double[][]" line="298"/>
            </method>
        </class>
    </source>