<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="java.math.BigDecimal"/>
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.fraction.BigFraction"/>
        <import package="org.apache.commons.math3.fraction.Fraction"/>
        <import package="org.apache.commons.math3.fraction.FractionConversionException"/>
        <import package="org.apache.commons.math3.fraction.FractionField"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="MatrixUtilsTest" line="32">
            <comment line="320">
                Taken from R manual http:stat.ethz.chR-manualR-patchedlibrarybasehtmlbacksolve.html                
            </comment>
            <javadoc line="32">
                Test cases for the {@link MatrixUtils} class.                
                <version>
                    $Id: MatrixUtilsTest.java 1533638 2013-10-18 21:19:18Z tn $                    
                </version>
            </javadoc>
            <declaration name="testData" type="double[][]" line="40"/>
            <declaration name="testData3x3Singular" type="double[][]" line="41"/>
            <declaration name="testData3x4" type="double[][]" line="42"/>
            <declaration name="nullMatrix" type="double[][]" line="43"/>
            <declaration name="row" type="double[]" line="44"/>
            <declaration name="bigRow" type="BigDecimal[]" line="45"/>
            <declaration name="stringRow" type="String[]" line="47"/>
            <declaration name="fractionRow" type="Fraction[]" line="48"/>
            <declaration name="rowMatrix" type="double[][]" line="50"/>
            <declaration name="bigRowMatrix" type="BigDecimal[][]" line="51"/>
            <declaration name="stringRowMatrix" type="String[][]" line="53"/>
            <declaration name="fractionRowMatrix" type="Fraction[][]" line="54"/>
            <declaration name="col" type="double[]" line="56"/>
            <declaration name="bigCol" type="BigDecimal[]" line="57"/>
            <declaration name="stringCol" type="String[]" line="59"/>
            <declaration name="fractionCol" type="Fraction[]" line="60"/>
            <declaration name="nullDoubleArray" type="double[]" line="62"/>
            <declaration name="colMatrix" type="double[][]" line="63"/>
            <declaration name="bigColMatrix" type="BigDecimal[][]" line="64"/>
            <declaration name="stringColMatrix" type="String[][]" line="66"/>
            <declaration name="fractionColMatrix" type="Fraction[][]" line="67"/>
            <method name="testCreateRealMatrix" type="void" line="71">
                <comment line="76">
                    ragged                    
                </comment>
                <comment line="79">
                    expected                    
                </comment>
                <comment line="82">
                    no columns                    
                </comment>
                <comment line="85">
                    expected                    
                </comment>
                <comment line="88">
                    null                    
                </comment>
                <comment line="91">
                    expected                    
                </comment>
                <scope line="74"/>
                <scope line="77"/>
                <scope line="80"/>
                <scope line="83"/>
                <scope line="86"/>
                <scope line="89"/>
            </method>
            <method name="testcreateFieldMatrix" type="void" line="95">
                <comment line="102">
                    ragged                    
                </comment>
                <comment line="105">
                    expected                    
                </comment>
                <comment line="108">
                    no columns                    
                </comment>
                <comment line="111">
                    expected                    
                </comment>
                <comment line="114">
                    null                    
                </comment>
                <comment line="117">
                    expected                    
                </comment>
                <scope line="100"/>
                <scope line="103"/>
                <scope line="106"/>
                <scope line="109"/>
                <scope line="112"/>
                <scope line="115"/>
            </method>
            <method name="testCreateRowRealMatrix" type="void" line="121">
                <comment line="126">
                    empty                    
                </comment>
                <comment line="129">
                    expected                    
                </comment>
                <comment line="132">
                    null                    
                </comment>
                <comment line="135">
                    expected                    
                </comment>
                <scope line="124"/>
                <scope line="127"/>
                <scope line="130"/>
                <scope line="133"/>
            </method>
            <method name="testCreateRowFieldMatrix" type="void" line="139">
                <comment line="146">
                    empty                    
                </comment>
                <comment line="149">
                    expected                    
                </comment>
                <comment line="152">
                    null                    
                </comment>
                <comment line="155">
                    expected                    
                </comment>
                <scope line="144"/>
                <scope line="147"/>
                <scope line="150"/>
                <scope line="153"/>
            </method>
            <method name="testCreateColumnRealMatrix" type="void" line="159">
                <comment line="164">
                    empty                    
                </comment>
                <comment line="167">
                    expected                    
                </comment>
                <comment line="170">
                    null                    
                </comment>
                <comment line="173">
                    expected                    
                </comment>
                <scope line="162"/>
                <scope line="165"/>
                <scope line="168"/>
                <scope line="171"/>
            </method>
            <method name="testCreateColumnFieldMatrix" type="void" line="177">
                <comment line="185">
                    empty                    
                </comment>
                <comment line="188">
                    expected                    
                </comment>
                <comment line="191">
                    null                    
                </comment>
                <comment line="194">
                    expected                    
                </comment>
                <scope line="183"/>
                <scope line="186"/>
                <scope line="189"/>
                <scope line="192"/>
            </method>
            <javadoc line="197">
                Verifies that the matrix is an identity matrix                
            </javadoc>
            <method name="checkIdentityMatrix" type="void" line="200">
                <params>
                    <param name="m" type="RealMatrix"/>
                </params>
                <scope line="201">
                    <scope line="202">
                        <scope line="203"/>
                        <scope line="205"/>
                    </scope>
                </scope>
            </method>
            <method name="testCreateIdentityMatrix" type="void" line="213">
                <comment line="222">
                    expected                    
                </comment>
                <scope line="217"/>
                <scope line="220"/>
            </method>
            <javadoc line="225">
                Verifies that the matrix is an identity matrix                
            </javadoc>
            <method name="checkIdentityFieldMatrix" type="void" line="228">
                <params>
                    <param name="m" type="FieldMatrix&lt;Fraction&gt;"/>
                </params>
                <scope line="229">
                    <scope line="230">
                        <scope line="231"/>
                        <scope line="233"/>
                    </scope>
                </scope>
            </method>
            <method name="testcreateFieldIdentityMatrix" type="void" line="241">
                <comment line="250">
                    expected                    
                </comment>
                <scope line="245"/>
                <scope line="248"/>
            </method>
            <method name="testBigFractionConverter" type="void" line="254">
                <declaration name="bfData" type="BigFraction[][]" line="255"/>
                <declaration name="m" type="FieldMatrix&amp;lt;BigFraction&amp;gt;" line="260"/>
                <declaration name="converted" type="RealMatrix" line="261"/>
                <declaration name="reference" type="RealMatrix" line="262"/>
            </method>
            <method name="testFractionConverter" type="void" line="267">
                <declaration name="fData" type="Fraction[][]" line="268"/>
                <declaration name="m" type="FieldMatrix&amp;lt;Fraction&amp;gt;" line="273"/>
                <declaration name="converted" type="RealMatrix" line="274"/>
                <declaration name="reference" type="RealMatrix" line="275"/>
            </method>
            <method name="asFraction" type="Fraction[][]" line="279">
                <params>
                    <param name="data" type="double[][]"/>
                </params>
                <declaration name="d" type="Fraction" line="280"/>
                <scope line="281">
                    <scope line="282">
                        <declaration name="dataI" type="double[]" line="283"/>
                        <declaration name="dI" type="Fraction[]" line="284"/>
                        <scope line="285"/>
                    </scope>
                </scope>
                <scope line="290"/>
            </method>
            <method name="asFraction" type="Fraction[]" line="296">
                <params>
                    <param name="data" type="double[]"/>
                </params>
                <declaration name="d" type="Fraction" line="297"/>
                <scope line="298">
                    <scope line="299"/>
                </scope>
                <scope line="302"/>
            </method>
            <method name="testSolveLowerTriangularSystem" type="void" line="309">
                <declaration name="rm" type="RealMatrix" line="310"/>
                <declaration name="b" type="RealVector" line="313"/>
            </method>
            <method name="testSolveUpperTriangularSystem" type="void" line="323">
                <declaration name="rm" type="RealMatrix" line="324"/>
                <declaration name="b" type="RealVector" line="327"/>
            </method>
            <javadoc line="332">
                This test should probably be replaced by one that could show
                  whether this algorithm can sometimes perform better (precision- or
                  performance-wise) than the direct inversion of the whole matrix.                
            </javadoc>
            <method name="testBlockInverse" type="void" line="338">
                <comment line="355">
                    Check that we recovered the identity matrix.                    
                </comment>
                <declaration name="data" type="double[][]" line="339"/>
                <declaration name="m" type="RealMatrix" line="346"/>
                <declaration name="len" type="int" line="347"/>
                <declaration name="tol" type="double" line="348"/>
                <scope line="350">
                    <declaration name="mInv" type="RealMatrix" line="351"/>
                    <declaration name="id" type="RealMatrix" line="352"/>
                    <scope line="355">
                        <scope line="356">
                            <declaration name="entry" type="double" line="357"/>
                            <scope line="358"/>
                            <scope line="361"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testBlockInverseNonInvertible" type="void" line="371">
                <declaration name="data" type="double[][]" line="372"/>
            </method>
            <method name="testIsSymmetric" type="void" line="383">
                <declaration name="eps" type="double" line="384"/>
                <declaration name="dataSym" type="double[][]" line="386"/>
                <declaration name="dataNonSym" type="double[][]" line="393"/>
            </method>
            <method name="testIsSymmetricTolerance" type="void" line="402">
                <declaration name="eps" type="double" line="403"/>
                <declaration name="dataSym1" type="double[][]" line="405"/>
                <declaration name="dataSym2" type="double[][]" line="411"/>
                <declaration name="dataNonSym1" type="double[][]" line="418"/>
                <declaration name="dataNonSym2" type="double[][]" line="424"/>
            </method>
            <method name="testCheckSymmetric1" type="void" line="433">
                <declaration name="dataSym" type="double[][]" line="434"/>
            </method>
            <method name="testCheckSymmetric2" type="void" line="443">
                <declaration name="dataNonSym" type="double[][]" line="444"/>
            </method>
            <method name="testInverseSingular" type="void" line="453">
                <declaration name="m" type="RealMatrix" line="454"/>
            </method>
            <method name="testInverseNonSquare" type="void" line="459">
                <declaration name="m" type="RealMatrix" line="460"/>
            </method>
            <method name="testInverseDiagonalMatrix" type="void" line="465">
                <declaration name="data" type="double[]" line="466"/>
                <declaration name="m" type="RealMatrix" line="467"/>
                <declaration name="inverse" type="RealMatrix" line="468"/>
                <declaration name="result" type="RealMatrix" line="470"/>
            </method>
            <method name="testInverseRealMatrix" type="void" line="476">
                <declaration name="m" type="RealMatrix" line="477"/>
                <declaration name="inverse" type="RealMatrix" line="478"/>
                <declaration name="result" type="RealMatrix" line="480"/>
            </method>
        </class>
    </source>