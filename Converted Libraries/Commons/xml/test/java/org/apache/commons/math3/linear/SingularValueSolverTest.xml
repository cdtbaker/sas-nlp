<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="SingularValueSolverTest" line="25">
            <comment line="37">
                4th row = 1st + 2nd                
            </comment>
            <declaration name="testSquare" type="double[][]" line="27"/>
            <declaration name="bigSingular" type="double[][]" line="31"/>
            <declaration name="normTolerance" type="double" line="38"/>
            <javadoc line="40">
                test solve dimension errors                
            </javadoc>
            <method name="testSolveDimensionErrors" type="void" line="42">
                <comment line="51">
                    expected behavior                    
                </comment>
                <comment line="57">
                    expected behavior                    
                </comment>
                <comment line="63">
                    expected behavior                    
                </comment>
                <declaration name="solver" type="DecompositionSolver" line="43"/>
                <declaration name="b" type="RealMatrix" line="45"/>
                <scope line="46"/>
                <scope line="49"/>
                <scope line="52"/>
                <scope line="55"/>
                <scope line="58"/>
                <scope line="61"/>
            </method>
            <javadoc line="66">
                test least square solve                
            </javadoc>
            <method name="testLeastSquareSolve" type="void" line="68">
                <declaration name="m" type="RealMatrix" line="69"/>
                <declaration name="solver" type="DecompositionSolver" line="74"/>
                <declaration name="b" type="RealMatrix" line="75"/>
                <declaration name="xMatrix" type="RealMatrix" line="78"/>
                <declaration name="xColVec" type="RealVector" line="83"/>
                <declaration name="xColOtherVec" type="RealVector" line="86"/>
            </method>
            <javadoc line="91">
                test solve                
            </javadoc>
            <method name="testSolve" type="void" line="93">
                <comment line="105">
                    using RealMatrix                    
                </comment>
                <comment line="108">
                    using ArrayRealVector                    
                </comment>
                <comment line="115">
                    using RealVector with an alternate implementation                    
                </comment>
                <declaration name="solver" type="DecompositionSolver" line="94"/>
                <declaration name="b" type="RealMatrix" line="96"/>
                <declaration name="xRef" type="RealMatrix" line="99"/>
                <scope line="108"/>
                <scope line="115">
                    <declaration name="v" type="ArrayRealVectorTest.RealVectorTestImpl" line="116"/>
                </scope>
            </method>
            <javadoc line="125">
                test condition number                
            </javadoc>
            <method name="testConditionNumber" type="void" line="127">
                <comment line="131">
                    replace 1.0e-15 with 1.5e-15                    
                </comment>
                <declaration name="svd" type="SingularValueDecomposition" line="128"/>
            </method>
            <method name="testMath320B" type="void" line="135">
                <declaration name="rm" type="RealMatrix" line="136"/>
                <declaration name="svd" type="SingularValueDecomposition" line="139"/>
                <declaration name="recomposed" type="RealMatrix" line="141"/>
            </method>
            <method name="testSingular" type="void" line="146">
                <declaration name="svd" type="SingularValueDecomposition" line="147"/>
                <declaration name="pseudoInverse" type="RealMatrix" line="149"/>
                <declaration name="expected" type="RealMatrix" line="150"/>
            </method>
        </class>
    </source>