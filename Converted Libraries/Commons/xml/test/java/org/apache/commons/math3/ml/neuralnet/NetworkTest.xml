<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.ml.neuralnet">
        <import package="java.io.ByteArrayInputStream"/>
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.util.Collection"/>
        <import package="java.util.NoSuchElementException"/>
        <import package="org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="NetworkTest" line="32">
            <comment line="50">
                Test assumes that the network is
                
                  0-----1
                  |     |
                  |     |
                  2-----3                
            </comment>
            <comment line="79">
                Test assumes that the network is
                
                  0-----1
                  |     |
                  |     |
                  2-----3                
            </comment>
            <javadoc line="32">
                Tests for {@link Network}.                
            </javadoc>
            <declaration name="init" type="FeatureInitializer" line="36"/>
            <method name="testGetFeaturesSize" type="void" line="39">
                <declaration name="initArray" type="FeatureInitializer[]" line="40"/>
                <declaration name="net" type="Network" line="42"/>
            </method>
            <method name="testDeleteLink" type="void" line="58">
                <comment line="67">
                    Delete 0 --&gt; 1.                    
                </comment>
                <comment line="71">
                    Link from 0 to 1 was deleted.                    
                </comment>
                <comment line="74">
                    Link from 1 to 0 still exists.                    
                </comment>
                <declaration name="initArray" type="FeatureInitializer[]" line="59"/>
                <declaration name="net" type="Network" line="60"/>
                <declaration name="neighbours" type="Collection&amp;lt;Neuron&amp;gt;" line="64"/>
            </method>
            <method name="testDeleteNeuron" type="void" line="87">
                <comment line="98">
                    Delete neuron 1.                    
                </comment>
                <declaration name="initArray" type="FeatureInitializer[]" line="88"/>
                <declaration name="net" type="Network" line="89"/>
                <scope line="100"/>
                <scope line="102"/>
            </method>
            <method name="testIterationOrder" type="void" line="109">
                <comment line="117">
                    Check that the comparator provides a specific order.                    
                </comment>
                <declaration name="initArray" type="FeatureInitializer[]" line="110"/>
                <declaration name="net" type="Network" line="111"/>
                <declaration name="isUnspecifiedOrder" type="boolean" line="117"/>
                <declaration name="previousId" type="long" line="118"/>
                <scope line="119">
                    <declaration name="currentId" type="long" line="120"/>
                    <scope line="121"/>
                </scope>
            </method>
            <method name="testSerialize" type="void" line="133">
                <comment line="152">
                    Same values.                    
                </comment>
                <comment line="160">
                    Same neighbours.                    
                </comment>
                <declaration name="initArray" type="FeatureInitializer[]" line="134"/>
                <declaration name="out" type="Network" line="135"/>
                <declaration name="bos" type="ByteArrayOutputStream" line="140"/>
                <declaration name="oos" type="ObjectOutputStream" line="141"/>
                <declaration name="bis" type="ByteArrayInputStream" line="144"/>
                <declaration name="ois" type="ObjectInputStream" line="145"/>
                <declaration name="in" type="Network" line="146"/>
                <scope line="148">
                    <declaration name="nIn" type="Neuron" line="149"/>
                    <declaration name="outF" type="double[]" line="152"/>
                    <declaration name="inF" type="double[]" line="153"/>
                    <scope line="155"/>
                    <declaration name="outNeighbours" type="Collection&amp;lt;Neuron&amp;gt;" line="160"/>
                    <declaration name="inNeighbours" type="Collection&amp;lt;Neuron&amp;gt;" line="161"/>
                    <scope line="163"/>
                </scope>
            </method>
        </class>
    </source>