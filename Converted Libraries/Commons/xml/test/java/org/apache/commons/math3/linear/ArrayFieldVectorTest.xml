<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="java.io.Serializable"/>
        <import package="java.lang.reflect.Array"/>
        <import package="org.apache.commons.math3.Field"/>
        <import package="org.apache.commons.math3.FieldElement"/>
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.fraction.Fraction"/>
        <import package="org.apache.commons.math3.fraction.FractionField"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="ArrayFieldVectorTest" line="13">
            <javadoc line="13">
                Test cases for the {@link ArrayFieldVector} class.                
                <version>
                    $Id: ArrayFieldVectorTest.java 1296542 2012-03-03 00:55:17Z sebb $                    
                </version>
            </javadoc>
            <declaration name="ma1" type="Fraction[][]" line="18"/>
            <declaration name="vec1" type="Fraction[]" line="19"/>
            <declaration name="vec2" type="Fraction[]" line="20"/>
            <declaration name="vec3" type="Fraction[]" line="21"/>
            <declaration name="vec4" type="Fraction[]" line="22"/>
            <declaration name="vec_null" type="Fraction[]" line="23"/>
            <declaration name="dvec1" type="Fraction[]" line="24"/>
            <declaration name="mat1" type="Fraction[][]" line="25"/>
            <class name="FieldVectorTestImpl" line="26">
                <type_params>
                    <type_param name="T"/>
                </type_params>
                <implements interface="FieldVector">
                    <type_params>
                        <type_param name="T"/>
                    </type_params>
                </implements>
                <implements interface="Serializable"/>
                <declaration name="serialVersionUID" type="long" line="27"/>
                <declaration name="field" type="Field&lt;T&gt;" line="28"/>
                <declaration name="data" type="T[]" line="29"/>
                <javadoc line="29">
                    Entries of the vector.                    
                </javadoc>
                <javadoc line="33">
                    Build an array of elements.                    
                    <param>
                        length size of the array to build                        
                    </param>
                    <return>
                        a new array                        
                    </return>
                </javadoc>
                <method name="buildArray" type="T[]" line="38">
                    <params>
                        <param name="length" type="int"/>
                    </params>
                </method>
                <method name="FieldVectorTestImpl" type="constructor" line="41">
                    <params>
                        <param name="d" type="T[]"/>
                    </params>
                </method>
                <method name="getField" type="Field<T>" line="45"/>
                <method name="unsupported" type="UnsupportedOperationException" line="48"/>
                <method name="copy" type="FieldVector<T>" line="51"/>
                <method name="add" type="FieldVector<T>" line="54">
                    <params>
                        <param name="v" type="FieldVector<T>"/>
                    </params>
                </method>
                <method name="add" type="FieldVector<T>" line="57">
                    <params>
                        <param name="v" type="T[]"/>
                    </params>
                </method>
                <method name="subtract" type="FieldVector<T>" line="60">
                    <params>
                        <param name="v" type="FieldVector<T>"/>
                    </params>
                </method>
                <method name="subtract" type="FieldVector<T>" line="63">
                    <params>
                        <param name="v" type="T[]"/>
                    </params>
                </method>
                <method name="mapAdd" type="FieldVector<T>" line="66">
                    <params>
                        <param name="d" type="T"/>
                    </params>
                </method>
                <method name="mapAddToSelf" type="FieldVector<T>" line="69">
                    <params>
                        <param name="d" type="T"/>
                    </params>
                </method>
                <method name="mapSubtract" type="FieldVector<T>" line="72">
                    <params>
                        <param name="d" type="T"/>
                    </params>
                </method>
                <method name="mapSubtractToSelf" type="FieldVector<T>" line="75">
                    <params>
                        <param name="d" type="T"/>
                    </params>
                </method>
                <method name="mapMultiply" type="FieldVector<T>" line="78">
                    <params>
                        <param name="d" type="T"/>
                    </params>
                    <declaration name="out" type="T[]" line="79"/>
                    <scope line="80"/>
                </method>
                <method name="mapMultiplyToSelf" type="FieldVector<T>" line="85">
                    <params>
                        <param name="d" type="T"/>
                    </params>
                </method>
                <method name="mapDivide" type="FieldVector<T>" line="88">
                    <params>
                        <param name="d" type="T"/>
                    </params>
                </method>
                <method name="mapDivideToSelf" type="FieldVector<T>" line="91">
                    <params>
                        <param name="d" type="T"/>
                    </params>
                </method>
                <method name="mapInv" type="FieldVector<T>" line="94"/>
                <method name="mapInvToSelf" type="FieldVector<T>" line="97"/>
                <method name="ebeMultiply" type="FieldVector<T>" line="100">
                    <params>
                        <param name="v" type="FieldVector<T>"/>
                    </params>
                </method>
                <method name="ebeMultiply" type="FieldVector<T>" line="103">
                    <params>
                        <param name="v" type="T[]"/>
                    </params>
                </method>
                <method name="ebeDivide" type="FieldVector<T>" line="106">
                    <params>
                        <param name="v" type="FieldVector<T>"/>
                    </params>
                </method>
                <method name="ebeDivide" type="FieldVector<T>" line="109">
                    <params>
                        <param name="v" type="T[]"/>
                    </params>
                </method>
                <method name="getData" type="T[]" line="112"/>
                <method name="dotProduct" type="T" line="115">
                    <params>
                        <param name="v" type="FieldVector<T>"/>
                    </params>
                    <declaration name="dot" type="T" line="116"/>
                    <scope line="117"/>
                </method>
                <method name="dotProduct" type="T" line="122">
                    <params>
                        <param name="v" type="T[]"/>
                    </params>
                    <declaration name="dot" type="T" line="123"/>
                    <scope line="124"/>
                </method>
                <method name="projection" type="FieldVector<T>" line="129">
                    <params>
                        <param name="v" type="FieldVector<T>"/>
                    </params>
                </method>
                <method name="projection" type="FieldVector<T>" line="132">
                    <params>
                        <param name="v" type="T[]"/>
                    </params>
                </method>
                <method name="outerProduct" type="FieldMatrix<T>" line="135">
                    <params>
                        <param name="v" type="FieldVector<T>"/>
                    </params>
                </method>
                <method name="outerProduct" type="FieldMatrix<T>" line="138">
                    <params>
                        <param name="v" type="T[]"/>
                    </params>
                </method>
                <method name="getEntry" type="T" line="141">
                    <params>
                        <param name="index" type="int"/>
                    </params>
                </method>
                <method name="getDimension" type="int" line="144"/>
                <method name="append" type="FieldVector<T>" line="147">
                    <params>
                        <param name="v" type="FieldVector<T>"/>
                    </params>
                </method>
                <method name="append" type="FieldVector<T>" line="150">
                    <params>
                        <param name="d" type="T"/>
                    </params>
                </method>
                <method name="append" type="FieldVector<T>" line="153">
                    <params>
                        <param name="a" type="T[]"/>
                    </params>
                </method>
                <method name="getSubVector" type="FieldVector<T>" line="156">
                    <params>
                        <param name="index" type="int"/>
                        <param name="n" type="int"/>
                    </params>
                </method>
                <method name="setEntry" type="void" line="159">
                    <params>
                        <param name="index" type="int"/>
                        <param name="value" type="T"/>
                    </params>
                </method>
                <method name="setSubVector" type="void" line="162">
                    <params>
                        <param name="index" type="int"/>
                        <param name="v" type="FieldVector<T>"/>
                    </params>
                </method>
                <method name="setSubVector" type="void" line="165">
                    <params>
                        <param name="index" type="int"/>
                        <param name="v" type="T[]"/>
                    </params>
                </method>
                <method name="set" type="void" line="168">
                    <params>
                        <param name="value" type="T"/>
                    </params>
                </method>
                <method name="toArray" type="T[]" line="171"/>
            </class>
            <method name="testConstructors" type="void" line="175">
                <declaration name="v0" type="ArrayFieldVector&lt;Fraction&gt;" line="176"/>
                <declaration name="v1" type="ArrayFieldVector&lt;Fraction&gt;" line="178"/>
                <declaration name="v2" type="ArrayFieldVector&lt;Fraction&gt;" line="181"/>
                <declaration name="v3" type="ArrayFieldVector&lt;Fraction&gt;" line="184"/>
                <declaration name="v4" type="ArrayFieldVector&lt;Fraction&gt;" line="187"/>
                <scope line="190"/>
                <scope line="194"/>
                <declaration name="v5_i" type="FieldVector&lt;Fraction&gt;" line="196"/>
                <declaration name="v5" type="ArrayFieldVector&lt;Fraction&gt;" line="199"/>
                <declaration name="v6" type="ArrayFieldVector&lt;Fraction&gt;" line="202"/>
                <scope line="205"/>
                <scope line="209"/>
                <declaration name="v7" type="ArrayFieldVector&lt;Fraction&gt;" line="211"/>
                <declaration name="v7_i" type="FieldVectorTestImpl&lt;Fraction&gt;" line="214"/>
                <declaration name="v7_2" type="ArrayFieldVector&lt;Fraction&gt;" line="215"/>
                <declaration name="v8" type="ArrayFieldVector&lt;Fraction&gt;" line="218"/>
                <declaration name="v8_2" type="ArrayFieldVector&lt;Fraction&gt;" line="222"/>
                <declaration name="v9" type="ArrayFieldVector&lt;Fraction&gt;" line="226"/>
            </method>
            <method name="testDataInOut" type="void" line="230">
                <declaration name="v1" type="ArrayFieldVector&lt;Fraction&gt;" line="231"/>
                <declaration name="v2" type="ArrayFieldVector&lt;Fraction&gt;" line="232"/>
                <declaration name="v4" type="ArrayFieldVector&lt;Fraction&gt;" line="233"/>
                <declaration name="v2_t" type="FieldVectorTestImpl&lt;Fraction&gt;" line="234"/>
                <declaration name="v_append_1" type="FieldVector&lt;Fraction&gt;" line="235"/>
                <declaration name="v_append_2" type="FieldVector&lt;Fraction&gt;" line="238"/>
                <declaration name="v_append_4" type="FieldVector&lt;Fraction&gt;" line="241"/>
                <declaration name="v_copy" type="FieldVector&lt;Fraction&gt;" line="244"/>
                <declaration name="a_frac" type="Fraction[]" line="247"/>
                <declaration name="vout5" type="FieldVector&lt;Fraction&gt;" line="250"/>
                <scope line="253"/>
                <scope line="257"/>
                <declaration name="v_set1" type="ArrayFieldVector&lt;Fraction&gt;" line="259"/>
                <scope line="262"/>
                <scope line="266"/>
                <declaration name="v_set2" type="ArrayFieldVector&lt;Fraction&gt;" line="268"/>
                <scope line="272"/>
                <scope line="276"/>
                <declaration name="v_set3" type="ArrayFieldVector&lt;Fraction&gt;" line="278"/>
                <scope line="281"/>
                <scope line="285"/>
                <declaration name="v_set4" type="ArrayFieldVector&lt;Fraction&gt;" line="287"/>
                <scope line="291"/>
                <scope line="295"/>
                <declaration name="vout10" type="ArrayFieldVector&lt;Fraction&gt;" line="297"/>
                <declaration name="vout10_2" type="ArrayFieldVector&lt;Fraction&gt;" line="298"/>
            </method>
            <method name="testMapFunctions" type="void" line="303">
                <declaration name="v1" type="ArrayFieldVector&lt;Fraction&gt;" line="304"/>
                <declaration name="v_mapAdd" type="FieldVector&lt;Fraction&gt;" line="305"/>
                <declaration name="result_mapAdd" type="Fraction[]" line="306"/>
                <declaration name="v_mapAddToSelf" type="FieldVector&lt;Fraction&gt;" line="308"/>
                <declaration name="result_mapAddToSelf" type="Fraction[]" line="310"/>
                <declaration name="v_mapSubtract" type="FieldVector&lt;Fraction&gt;" line="312"/>
                <declaration name="result_mapSubtract" type="Fraction[]" line="313"/>
                <declaration name="v_mapSubtractToSelf" type="FieldVector&lt;Fraction&gt;" line="315"/>
                <declaration name="result_mapSubtractToSelf" type="Fraction[]" line="317"/>
                <declaration name="v_mapMultiply" type="FieldVector&lt;Fraction&gt;" line="319"/>
                <declaration name="result_mapMultiply" type="Fraction[]" line="320"/>
                <declaration name="v_mapMultiplyToSelf" type="FieldVector&lt;Fraction&gt;" line="322"/>
                <declaration name="result_mapMultiplyToSelf" type="Fraction[]" line="324"/>
                <declaration name="v_mapDivide" type="FieldVector&lt;Fraction&gt;" line="326"/>
                <declaration name="result_mapDivide" type="Fraction[]" line="327"/>
                <declaration name="v_mapDivideToSelf" type="FieldVector&lt;Fraction&gt;" line="329"/>
                <declaration name="result_mapDivideToSelf" type="Fraction[]" line="331"/>
                <declaration name="v_mapInv" type="FieldVector&lt;Fraction&gt;" line="333"/>
                <declaration name="result_mapInv" type="Fraction[]" line="334"/>
                <declaration name="v_mapInvToSelf" type="FieldVector&lt;Fraction&gt;" line="336"/>
                <declaration name="result_mapInvToSelf" type="Fraction[]" line="338"/>
            </method>
            <method name="testBasicFunctions" type="void" line="341">
                <declaration name="v1" type="ArrayFieldVector&lt;Fraction&gt;" line="342"/>
                <declaration name="v2" type="ArrayFieldVector&lt;Fraction&gt;" line="343"/>
                <declaration name="v2_t" type="FieldVectorTestImpl&lt;Fraction&gt;" line="345"/>
                <declaration name="v_add" type="ArrayFieldVector&lt;Fraction&gt;" line="346"/>
                <declaration name="result_add" type="Fraction[]" line="347"/>
                <declaration name="vt2" type="FieldVectorTestImpl&lt;Fraction&gt;" line="349"/>
                <declaration name="v_add_i" type="FieldVector&lt;Fraction&gt;" line="350"/>
                <declaration name="result_add_i" type="Fraction[]" line="351"/>
                <declaration name="v_subtract" type="ArrayFieldVector&lt;Fraction&gt;" line="353"/>
                <declaration name="result_subtract" type="Fraction[]" line="354"/>
                <declaration name="v_subtract_i" type="FieldVector&lt;Fraction&gt;" line="356"/>
                <declaration name="result_subtract_i" type="Fraction[]" line="357"/>
                <declaration name="v_ebeMultiply" type="ArrayFieldVector&lt;Fraction&gt;" line="359"/>
                <declaration name="result_ebeMultiply" type="Fraction[]" line="360"/>
                <declaration name="v_ebeMultiply_2" type="FieldVector&lt;Fraction&gt;" line="362"/>
                <declaration name="result_ebeMultiply_2" type="Fraction[]" line="363"/>
                <declaration name="v_ebeDivide" type="ArrayFieldVector&lt;Fraction&gt;" line="365"/>
                <declaration name="result_ebeDivide" type="Fraction[]" line="366"/>
                <declaration name="v_ebeDivide_2" type="FieldVector&lt;Fraction&gt;" line="368"/>
                <declaration name="result_ebeDivide_2" type="Fraction[]" line="369"/>
                <declaration name="dot" type="Fraction" line="371"/>
                <declaration name="dot_2" type="Fraction" line="373"/>
                <declaration name="m_outerProduct" type="FieldMatrix&lt;Fraction&gt;" line="375"/>
                <declaration name="m_outerProduct_2" type="FieldMatrix&lt;Fraction&gt;" line="377"/>
                <declaration name="v_projection" type="ArrayFieldVector&lt;Fraction&gt;" line="379"/>
                <declaration name="result_projection" type="Fraction[]" line="380"/>
                <declaration name="v_projection_2" type="FieldVector&lt;Fraction&gt;" line="382"/>
                <declaration name="result_projection_2" type="Fraction[]" line="383"/>
            </method>
            <method name="testMisc" type="void" line="386">
                <declaration name="v1" type="ArrayFieldVector&lt;Fraction&gt;" line="387"/>
                <declaration name="v4" type="ArrayFieldVector&lt;Fraction&gt;" line="388"/>
                <declaration name="v4_2" type="FieldVector&lt;Fraction&gt;" line="389"/>
                <declaration name="out1" type="String" line="390"/>
                <scope line="392"/>
                <scope line="396"/>
                <scope line="398"/>
                <scope line="402"/>
                <scope line="404"/>
                <scope line="408"/>
            </method>
            <method name="testSerial" type="void" line="411">
                <declaration name="v" type="ArrayFieldVector&lt;Fraction&gt;" line="412"/>
            </method>
            <method name="testZeroVectors" type="void" line="415">
                <scope line="416"/>
                <scope line="420"/>
                <scope line="422"/>
                <scope line="426"/>
                <scope line="428"/>
                <scope line="432"/>
            </method>
            <method name="testOuterProduct" type="void" line="438">
                <declaration name="u" type="ArrayFieldVector&lt;Fraction&gt;" line="439"/>
                <declaration name="v" type="ArrayFieldVector&lt;Fraction&gt;" line="440"/>
                <declaration name="uv" type="FieldMatrix&lt;Fraction&gt;" line="441"/>
                <declaration name="tol" type="double" line="442"/>
            </method>
            <javadoc line="450">
                verifies that two vectors are equals                
            </javadoc>
            <method name="checkArray" type="void" line="453">
                <params>
                    <param name="msg" type="String"/>
                    <param name="m" type="Fraction[]"/>
                    <param name="n" type="Fraction[]"/>
                </params>
                <scope line="454"/>
                <scope line="457"/>
            </method>
        </class>
    </source>