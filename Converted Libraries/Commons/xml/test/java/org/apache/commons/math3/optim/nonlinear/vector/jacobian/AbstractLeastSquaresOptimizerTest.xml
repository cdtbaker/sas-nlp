<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optim.nonlinear.vector.jacobian">
        <import package="java.io.IOException"/>
        <import package="java.util.Arrays"/>
        <import package="org.apache.commons.math3.optim.PointVectorValuePair"/>
        <import package="org.apache.commons.math3.optim.InitialGuess"/>
        <import package="org.apache.commons.math3.optim.MaxEval"/>
        <import package="org.apache.commons.math3.optim.nonlinear.vector.Target"/>
        <import package="org.apache.commons.math3.optim.nonlinear.vector.Weight"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Test"/>
        <import package="org.junit.Assert"/>
        <class name="AbstractLeastSquaresOptimizerTest" line="12">
            <method name="createOptimizer" type="AbstractLeastSquaresOptimizer" line="13">
                <anonymous_class line="14">
                    <method name="doOptimize" type="PointVectorValuePair" line="15">
                        <declaration name="params" type="double[]" line="16"/>
                        <declaration name="res" type="double[]" line="17"/>
                    </method>
                </anonymous_class>
            </method>
            <method name="testGetChiSquare" type="void" line="24">
                <declaration name="dataset" type="StatisticalReferenceDataset" line="25"/>
                <declaration name="optimizer" type="AbstractLeastSquaresOptimizer" line="26"/>
                <declaration name="a" type="double[]" line="27"/>
                <declaration name="y" type="double[]" line="28"/>
                <declaration name="w" type="double[]" line="29"/>
                <declaration name="problem" type="StatisticalReferenceDataset.LeastSquaresProblem" line="31"/>
                <declaration name="expected" type="double" line="33"/>
                <declaration name="actual" type="double" line="34"/>
            </method>
            <method name="testGetRMS" type="void" line="37">
                <declaration name="dataset" type="StatisticalReferenceDataset" line="38"/>
                <declaration name="optimizer" type="AbstractLeastSquaresOptimizer" line="39"/>
                <declaration name="a" type="double[]" line="40"/>
                <declaration name="y" type="double[]" line="41"/>
                <declaration name="w" type="double[]" line="42"/>
                <declaration name="problem" type="StatisticalReferenceDataset.LeastSquaresProblem" line="44"/>
                <declaration name="expected" type="double" line="46"/>
                <declaration name="actual" type="double" line="47"/>
            </method>
            <method name="testComputeSigma" type="void" line="50">
                <declaration name="dataset" type="StatisticalReferenceDataset" line="51"/>
                <declaration name="optimizer" type="AbstractLeastSquaresOptimizer" line="52"/>
                <declaration name="a" type="double[]" line="53"/>
                <declaration name="y" type="double[]" line="54"/>
                <declaration name="w" type="double[]" line="55"/>
                <declaration name="problem" type="StatisticalReferenceDataset.LeastSquaresProblem" line="57"/>
                <declaration name="optimum" type="PointVectorValuePair" line="58"/>
                <declaration name="sig" type="double[]" line="59"/>
                <declaration name="dof" type="int" line="60"/>
                <declaration name="expected" type="double[]" line="61"/>
                <scope line="62">
                    <declaration name="actual" type="double" line="63"/>
                </scope>
            </method>
        </class>
    </source>