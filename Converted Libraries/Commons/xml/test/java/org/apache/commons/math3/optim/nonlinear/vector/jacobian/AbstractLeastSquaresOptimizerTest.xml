<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optim.nonlinear.vector.jacobian">
        <import package="java.io.IOException"/>
        <import package="java.util.Arrays"/>
        <import package="org.apache.commons.math3.optim.PointVectorValuePair"/>
        <import package="org.apache.commons.math3.optim.InitialGuess"/>
        <import package="org.apache.commons.math3.optim.MaxEval"/>
        <import package="org.apache.commons.math3.optim.nonlinear.vector.Target"/>
        <import package="org.apache.commons.math3.optim.nonlinear.vector.Weight"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Test"/>
        <import package="org.junit.Assert"/>
        <class name="AbstractLeastSquaresOptimizerTest" line="27">
            <method name="createOptimizer" type="AbstractLeastSquaresOptimizer" line="29">
                <anonymous_class line="30">
                    <method name="doOptimize" type="PointVectorValuePair" line="33">
                        <declaration name="params" type="double[]" line="34"/>
                        <declaration name="res" type="double[]" line="35"/>
                    </method>
                </anonymous_class>
            </method>
            <method name="testGetChiSquare" type="void" line="43">
                <declaration name="dataset" type="StatisticalReferenceDataset" line="44"/>
                <declaration name="optimizer" type="AbstractLeastSquaresOptimizer" line="46"/>
                <declaration name="a" type="double[]" line="47"/>
                <declaration name="y" type="double[]" line="48"/>
                <declaration name="w" type="double[]" line="49"/>
                <declaration name="problem" type="StatisticalReferenceDataset.LeastSquaresProblem" line="52"/>
                <declaration name="expected" type="double" line="61"/>
                <declaration name="actual" type="double" line="62"/>
            </method>
            <method name="testGetRMS" type="void" line="68">
                <declaration name="dataset" type="StatisticalReferenceDataset" line="69"/>
                <declaration name="optimizer" type="AbstractLeastSquaresOptimizer" line="71"/>
                <declaration name="a" type="double[]" line="72"/>
                <declaration name="y" type="double[]" line="73"/>
                <declaration name="w" type="double[]" line="74"/>
                <declaration name="problem" type="StatisticalReferenceDataset.LeastSquaresProblem" line="77"/>
                <declaration name="expected" type="double" line="87"/>
                <declaration name="actual" type="double" line="90"/>
            </method>
            <method name="testComputeSigma" type="void" line="96">
                <declaration name="dataset" type="StatisticalReferenceDataset" line="97"/>
                <declaration name="optimizer" type="AbstractLeastSquaresOptimizer" line="99"/>
                <declaration name="a" type="double[]" line="100"/>
                <declaration name="y" type="double[]" line="101"/>
                <declaration name="w" type="double[]" line="102"/>
                <declaration name="problem" type="StatisticalReferenceDataset.LeastSquaresProblem" line="105"/>
                <declaration name="optimum" type="PointVectorValuePair" line="108"/>
                <declaration name="sig" type="double[]" line="116"/>
                <declaration name="dof" type="int" line="118"/>
                <declaration name="expected" type="double[]" line="119"/>
                <scope line="120">
                    <declaration name="actual" type="double" line="121"/>
                </scope>
            </method>
        </class>
    </source>