<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optimization.fitting">
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="GaussianFitterTest" line="6">
            <javadoc line="6">
                Tests {@link GaussianFitter}.                
                <since>
                    2.2                    
                </since>
                <version>
                    $Id: GaussianFitterTest.java 1349707 2012-06-13 09:30:56Z erans $                    
                </version>
            </javadoc>
            <declaration name="DATASET1" type="double[][]" line="12"/>
            <javadoc line="12">
                Good data.                
            </javadoc>
            <declaration name="DATASET2" type="double[][]" line="16"/>
            <javadoc line="16">
                Poor data: right of peak not symmetric with left of peak.                
            </javadoc>
            <declaration name="DATASET3" type="double[][]" line="20"/>
            <javadoc line="20">
                Poor data: long tails.                
            </javadoc>
            <declaration name="DATASET4" type="double[][]" line="24"/>
            <javadoc line="24">
                Poor data: right of peak is missing.                
            </javadoc>
            <declaration name="DATASET5" type="double[][]" line="28"/>
            <javadoc line="28">
                Good data, but few points.                
            </javadoc>
            <javadoc line="32">
                Basic.                
            </javadoc>
            <method name="testFit01" type="void" line="35">
                <declaration name="fitter" type="GaussianFitter" line="36"/>
                <declaration name="parameters" type="double[]" line="38"/>
            </method>
            <javadoc line="43">
                Zero points is not enough observed points.                
            </javadoc>
            <method name="testFit02" type="void" line="46">
                <declaration name="fitter" type="GaussianFitter" line="47"/>
            </method>
            <javadoc line="50">
                Two points is not enough observed points.                
            </javadoc>
            <method name="testFit03" type="void" line="53">
                <declaration name="fitter" type="GaussianFitter" line="54"/>
            </method>
            <javadoc line="58">
                Poor data: right of peak not symmetric with left of peak.                
            </javadoc>
            <method name="testFit04" type="void" line="61">
                <declaration name="fitter" type="GaussianFitter" line="62"/>
                <declaration name="parameters" type="double[]" line="64"/>
            </method>
            <javadoc line="69">
                Poor data: long tails.                
            </javadoc>
            <method name="testFit05" type="void" line="72">
                <declaration name="fitter" type="GaussianFitter" line="73"/>
                <declaration name="parameters" type="double[]" line="75"/>
            </method>
            <javadoc line="80">
                Poor data: right of peak is missing.                
            </javadoc>
            <method name="testFit06" type="void" line="83">
                <declaration name="fitter" type="GaussianFitter" line="84"/>
                <declaration name="parameters" type="double[]" line="86"/>
            </method>
            <javadoc line="91">
                Basic with smaller dataset.                
            </javadoc>
            <method name="testFit07" type="void" line="94">
                <declaration name="fitter" type="GaussianFitter" line="95"/>
                <declaration name="parameters" type="double[]" line="97"/>
            </method>
            <method name="testMath519" type="void" line="102">
                <declaration name="data" type="double[]" line="103"/>
                <declaration name="fitter" type="GaussianFitter" line="104"/>
                <scope line="105"/>
                <declaration name="p" type="double[]" line="108"/>
            </method>
            <method name="testMath798" type="void" line="112">
                <declaration name="fitter" type="GaussianFitter" line="113"/>
                <declaration name="p" type="double[]" line="120"/>
            </method>
            <javadoc line="125">
                Adds the specified points to specified &lt;code&gt;GaussianFitter&lt;/code&gt;
                  instance.                
                <param>
                    points data points where first dimension is a point index and
                      second dimension is an array of length two representing the point
                      with the first value corresponding to X and the second value
                      corresponding to Y                    
                </param>
                <param>
                    fitter fitter to which the points in <code>points</code> should be
                      added as observed points                    
                </param>
            </javadoc>
            <method name="addDatasetToGaussianFitter" type="void" line="135">
                <params>
                    <param name="points" type="double[][]"/>
                    <param name="fitter" type="GaussianFitter"/>
                </params>
                <scope line="136"/>
            </method>
        </class>
    </source>