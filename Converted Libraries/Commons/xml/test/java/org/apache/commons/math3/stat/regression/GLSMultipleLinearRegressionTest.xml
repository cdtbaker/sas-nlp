<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.regression">
        <import package="org.junit.Assert"/>
        <import package="org.junit.Before"/>
        <import package="org.junit.Test"/>
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.linear.MatrixUtils"/>
        <import package="org.apache.commons.math3.linear.RealMatrix"/>
        <import package="org.apache.commons.math3.linear.RealVector"/>
        <import package="org.apache.commons.math3.random.CorrelatedRandomVectorGenerator"/>
        <import package="org.apache.commons.math3.random.JDKRandomGenerator"/>
        <import package="org.apache.commons.math3.random.GaussianRandomGenerator"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.stat.correlation.Covariance"/>
        <import package="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics"/>
        <class name="GLSMultipleLinearRegressionTest" line="15">
            <extends class="MultipleLinearRegressionAbstractTest"/>
            <declaration name="y" type="double[]" line="16"/>
            <declaration name="x" type="double[][]" line="17"/>
            <declaration name="omega" type="double[][]" line="18"/>
            <declaration name="longley" type="double[]" line="19"/>
            <method name="setUp" type="void" line="20"/>
            <method name="cannotAddXSampleData" type="void" line="38"/>
            <method name="cannotAddNullYSampleData" type="void" line="41"/>
            <method name="cannotAddSampleDataWithSizeMismatch" type="void" line="44">
                <declaration name="y" type="double[]" line="45"/>
                <declaration name="x" type="double[][]" line="46"/>
            </method>
            <method name="cannotAddNullCovarianceData" type="void" line="50"/>
            <method name="notEnoughData" type="void" line="53">
                <declaration name="reducedY" type="double[]" line="54"/>
                <declaration name="reducedX" type="double[][]" line="55"/>
                <declaration name="reducedO" type="double[][]" line="56"/>
            </method>
            <method name="cannotAddCovarianceDataWithSampleSizeMismatch" type="void" line="62">
                <declaration name="y" type="double[]" line="63"/>
                <declaration name="x" type="double[][]" line="64"/>
                <declaration name="omega" type="double[][]" line="67"/>
            </method>
            <method name="cannotAddCovarianceDataThatIsNotSquare" type="void" line="71">
                <declaration name="y" type="double[]" line="72"/>
                <declaration name="x" type="double[][]" line="73"/>
                <declaration name="omega" type="double[][]" line="76"/>
            </method>
            <method name="createRegression" type="GLSMultipleLinearRegression" line="82">
                <declaration name="regression" type="GLSMultipleLinearRegression" line="83"/>
            </method>
            <method name="getNumberOfRegressors" type="int" line="87"/>
            <method name="getSampleSize" type="int" line="90"/>
            <javadoc line="93">
                test calculateYVariance                
            </javadoc>
            <method name="testYVariance" type="void" line="96">
                <declaration name="model" type="GLSMultipleLinearRegression" line="97"/>
            </method>
            <javadoc line="101">
                Verifies that setting X, Y and covariance separately has the same effect as newSample(X,Y,cov).                
            </javadoc>
            <method name="testNewSample2" type="void" line="104">
                <declaration name="y" type="double[]" line="105"/>
                <declaration name="x" type="double[][]" line="106"/>
                <declaration name="covariance" type="double[][]" line="107"/>
                <declaration name="regression" type="GLSMultipleLinearRegression" line="108"/>
                <declaration name="combinedX" type="RealMatrix" line="110"/>
                <declaration name="combinedY" type="RealVector" line="111"/>
                <declaration name="combinedCovInv" type="RealMatrix" line="112"/>
            </method>
            <javadoc line="119">
                Verifies that GLS with identity covariance matrix gives the same results
                  as OLS.                
            </javadoc>
            <method name="testGLSOLSConsistency" type="void" line="123">
                <declaration name="identityCov" type="RealMatrix" line="124"/>
                <declaration name="glsModel" type="GLSMultipleLinearRegression" line="125"/>
                <declaration name="olsModel" type="OLSMultipleLinearRegression" line="126"/>
                <declaration name="olsBeta" type="double[]" line="130"/>
                <declaration name="glsBeta" type="double[]" line="131"/>
                <scope line="132"/>
            </method>
            <javadoc line="136">
                Generate an error covariance matrix and sample data representing models
                  with this error structure. Then verify that GLS estimated coefficients,
                  on average, perform better than OLS.                
            </javadoc>
            <method name="testGLSEfficiency" type="void" line="141">
                <declaration name="rg" type="RandomGenerator" line="142"/>
                <declaration name="nObs" type="int" line="144"/>
                <declaration name="sigma" type="double[]" line="145"/>
                <scope line="146"/>
                <declaration name="numSeeds" type="int" line="149"/>
                <declaration name="errorSeeds" type="RealMatrix" line="150"/>
                <scope line="151">
                    <scope line="152"/>
                </scope>
                <declaration name="cov" type="RealMatrix" line="156"/>
                <declaration name="rawGenerator" type="GaussianRandomGenerator" line="157"/>
                <declaration name="errorMeans" type="double[]" line="158"/>
                <declaration name="gen" type="CorrelatedRandomVectorGenerator" line="159"/>
                <declaration name="ols" type="OLSMultipleLinearRegression" line="160"/>
                <declaration name="b" type="RealVector" line="162"/>
                <declaration name="x" type="RealMatrix" line="163"/>
                <declaration name="gls" type="GLSMultipleLinearRegression" line="164"/>
                <declaration name="olsBetaStats" type="DescriptiveStatistics" line="167"/>
                <declaration name="glsBetaStats" type="DescriptiveStatistics" line="168"/>
                <declaration name="nModels" type="int" line="169"/>
                <scope line="170">
                    <declaration name="u" type="RealVector" line="171"/>
                    <declaration name="y" type="double[]" line="172"/>
                    <declaration name="olsBeta" type="RealVector" line="174"/>
                    <declaration name="glsBeta" type="RealVector" line="176"/>
                    <declaration name="dist" type="double" line="177"/>
                </scope>
            </method>
        </class>
    </source>