<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.differentiation">
        <import package="java.util.Arrays"/>
        <import package="java.util.List"/>
        <import package="org.apache.commons.math3.ExtendedFieldElementAbstractTest"/>
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.analysis.polynomials.PolynomialFunction"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooLargeException"/>
        <import package="org.apache.commons.math3.random.Well1024a"/>
        <import package="org.apache.commons.math3.util.ArithmeticUtils"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="DerivativeStructureTest" line="14">
            <extends class="ExtendedFieldElementAbstractTest">
                <type_params>
                    <type_param name="DerivativeStructure"/>
                </type_params>
            </extends>
            <javadoc line="14">
                Test for class {@link DerivativeStructure}.                
            </javadoc>
            <method name="build" type="DerivativeStructure" line="18">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <method name="testWrongVariableIndex" type="void" line="21"/>
            <method name="testMissingOrders" type="void" line="24"/>
            <method name="testTooLargeOrder" type="void" line="27"/>
            <method name="testVariableWithoutDerivative0" type="void" line="30">
                <declaration name="v" type="DerivativeStructure" line="31"/>
            </method>
            <method name="testVariableWithoutDerivative1" type="void" line="34">
                <declaration name="v" type="DerivativeStructure" line="35"/>
            </method>
            <method name="testVariable" type="void" line="38">
                <scope line="39"/>
            </method>
            <method name="testConstant" type="void" line="45">
                <scope line="46"/>
            </method>
            <method name="testPrimitiveAdd" type="void" line="50">
                <scope line="51"/>
            </method>
            <method name="testAdd" type="void" line="57">
                <scope line="58">
                    <declaration name="x" type="DerivativeStructure" line="59"/>
                    <declaration name="y" type="DerivativeStructure" line="60"/>
                    <declaration name="z" type="DerivativeStructure" line="61"/>
                    <declaration name="xyz" type="DerivativeStructure" line="62"/>
                </scope>
            </method>
            <method name="testPrimitiveSubtract" type="void" line="66">
                <scope line="67"/>
            </method>
            <method name="testSubtract" type="void" line="73">
                <scope line="74">
                    <declaration name="x" type="DerivativeStructure" line="75"/>
                    <declaration name="y" type="DerivativeStructure" line="76"/>
                    <declaration name="z" type="DerivativeStructure" line="77"/>
                    <declaration name="xyz" type="DerivativeStructure" line="78"/>
                </scope>
            </method>
            <method name="testPrimitiveMultiply" type="void" line="82">
                <scope line="83"/>
            </method>
            <method name="testMultiply" type="void" line="89">
                <scope line="90">
                    <declaration name="x" type="DerivativeStructure" line="91"/>
                    <declaration name="y" type="DerivativeStructure" line="92"/>
                    <declaration name="z" type="DerivativeStructure" line="93"/>
                    <declaration name="xyz" type="DerivativeStructure" line="94"/>
                    <scope line="95">
                        <scope line="96">
                            <scope line="97">
                                <scope line="98"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testNegate" type="void" line="106">
                <scope line="107"/>
            </method>
            <method name="testReciprocal" type="void" line="113">
                <scope line="114">
                    <declaration name="r" type="DerivativeStructure" line="115"/>
                    <scope line="117">
                        <declaration name="expected" type="double" line="118"/>
                    </scope>
                </scope>
            </method>
            <method name="testPow" type="void" line="123">
                <scope line="124">
                    <scope line="125">
                        <declaration name="x" type="DerivativeStructure" line="126"/>
                        <declaration name="y" type="DerivativeStructure" line="127"/>
                        <declaration name="z" type="DerivativeStructure" line="128"/>
                        <declaration name="list" type="List&lt;DerivativeStructure&gt;" line="129"/>
                        <scope line="130">
                            <scope line="131"/>
                        </scope>
                        <scope line="135">
                            <scope line="136"/>
                        </scope>
                        <scope line="140">
                            <scope line="141">
                                <declaration name="p" type="DerivativeStructure" line="142"/>
                                <scope line="143"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testExpression" type="void" line="152">
                <declaration name="epsilon" type="double" line="153"/>
                <scope line="154">
                    <declaration name="dsX" type="DerivativeStructure" line="155"/>
                    <scope line="156">
                        <declaration name="dsY" type="DerivativeStructure" line="157"/>
                        <scope line="158">
                            <declaration name="dsZ" type="DerivativeStructure" line="159"/>
                            <declaration name="ds" type="DerivativeStructure" line="160"/>
                            <declaration name="dsOther" type="DerivativeStructure" line="161"/>
                            <declaration name="f" type="double" line="162"/>
                            <declaration name="dfdx" type="double" line="165"/>
                            <declaration name="dfdxdy" type="double" line="168"/>
                            <declaration name="dfdxdydz" type="double" line="171"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testCompositionOneVariableX" type="void" line="178">
                <declaration name="epsilon" type="double" line="179"/>
                <scope line="180">
                    <scope line="181">
                        <declaration name="dsX" type="DerivativeStructure" line="182"/>
                        <scope line="183">
                            <declaration name="dsY" type="DerivativeStructure" line="184"/>
                            <declaration name="f" type="DerivativeStructure" line="185"/>
                            <declaration name="f0" type="double" line="186"/>
                            <scope line="188">
                                <declaration name="f1" type="double" line="189"/>
                                <scope line="191">
                                    <declaration name="f2" type="double" line="192"/>
                                    <scope line="194">
                                        <declaration name="f3" type="double" line="195"/>
                                    </scope>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testTrigo" type="void" line="204">
                <declaration name="epsilon" type="double" line="205"/>
                <scope line="206">
                    <scope line="207">
                        <declaration name="dsX" type="DerivativeStructure" line="208"/>
                        <scope line="209">
                            <declaration name="dsY" type="DerivativeStructure" line="210"/>
                            <scope line="211">
                                <declaration name="dsZ" type="DerivativeStructure" line="212"/>
                                <declaration name="f" type="DerivativeStructure" line="213"/>
                                <declaration name="a" type="double" line="214"/>
                                <declaration name="f0" type="double" line="215"/>
                                <scope line="217">
                                    <declaration name="dfdx" type="double" line="218"/>
                                    <declaration name="dfdy" type="double" line="220"/>
                                    <declaration name="cz" type="double" line="222"/>
                                    <declaration name="cz2" type="double" line="223"/>
                                    <declaration name="dfdz" type="double" line="224"/>
                                    <scope line="226">
                                        <declaration name="df2dx2" type="double" line="227"/>
                                        <declaration name="df2dy2" type="double" line="229"/>
                                        <declaration name="c4" type="double" line="231"/>
                                        <declaration name="df2dz2" type="double" line="232"/>
                                        <declaration name="df2dxdy" type="double" line="234"/>
                                    </scope>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testSqrtDefinition" type="void" line="243">
                <declaration name="epsilon" type="double[]" line="244"/>
                <scope line="245">
                    <scope line="246">
                        <declaration name="dsX" type="DerivativeStructure" line="247"/>
                        <declaration name="sqrt1" type="DerivativeStructure" line="248"/>
                        <declaration name="sqrt2" type="DerivativeStructure" line="249"/>
                        <declaration name="zero" type="DerivativeStructure" line="250"/>
                        <scope line="251"/>
                    </scope>
                </scope>
            </method>
            <method name="testRootNSingularity" type="void" line="257">
                <scope line="258">
                    <scope line="259">
                        <declaration name="dsZero" type="DerivativeStructure" line="260"/>
                        <declaration name="rootN" type="DerivativeStructure" line="261"/>
                        <scope line="263">
                            <scope line="266"/>
                        </scope>
                        <declaration name="gDerivatives" type="double[]" line="270"/>
                        <scope line="272"/>
                        <declaration name="correctRoot" type="DerivativeStructure" line="275"/>
                        <scope line="277">
                            <scope line="280">
                                <scope line="282"/>
                                <scope line="285"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testSqrtPow2" type="void" line="293">
                <declaration name="epsilon" type="double[]" line="294"/>
                <scope line="295">
                    <scope line="296">
                        <declaration name="dsX" type="DerivativeStructure" line="297"/>
                        <declaration name="rebuiltX" type="DerivativeStructure" line="298"/>
                        <declaration name="zero" type="DerivativeStructure" line="299"/>
                        <scope line="300"/>
                    </scope>
                </scope>
            </method>
            <method name="testCbrtDefinition" type="void" line="306">
                <declaration name="epsilon" type="double[]" line="307"/>
                <scope line="308">
                    <scope line="309">
                        <declaration name="dsX" type="DerivativeStructure" line="310"/>
                        <declaration name="cbrt1" type="DerivativeStructure" line="311"/>
                        <declaration name="cbrt2" type="DerivativeStructure" line="312"/>
                        <declaration name="zero" type="DerivativeStructure" line="313"/>
                        <scope line="314"/>
                    </scope>
                </scope>
            </method>
            <method name="testCbrtPow3" type="void" line="320">
                <declaration name="epsilon" type="double[]" line="321"/>
                <scope line="322">
                    <scope line="323">
                        <declaration name="dsX" type="DerivativeStructure" line="324"/>
                        <declaration name="rebuiltX" type="DerivativeStructure" line="325"/>
                        <declaration name="zero" type="DerivativeStructure" line="326"/>
                        <scope line="327"/>
                    </scope>
                </scope>
            </method>
            <method name="testPowReciprocalPow" type="void" line="333">
                <declaration name="epsilon" type="double[]" line="334"/>
                <scope line="335">
                    <scope line="336">
                        <declaration name="dsX" type="DerivativeStructure" line="337"/>
                        <scope line="338">
                            <declaration name="dsY" type="DerivativeStructure" line="339"/>
                            <declaration name="rebuiltX" type="DerivativeStructure" line="340"/>
                            <declaration name="zero" type="DerivativeStructure" line="341"/>
                            <scope line="342">
                                <scope line="343">
                                    <scope line="344"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testHypotDefinition" type="void" line="353">
                <declaration name="epsilon" type="double" line="354"/>
                <scope line="355">
                    <scope line="356">
                        <declaration name="dsX" type="DerivativeStructure" line="357"/>
                        <scope line="358">
                            <declaration name="dsY" type="DerivativeStructure" line="359"/>
                            <declaration name="hypot" type="DerivativeStructure" line="360"/>
                            <declaration name="ref" type="DerivativeStructure" line="361"/>
                            <declaration name="zero" type="DerivativeStructure" line="362"/>
                            <scope line="363">
                                <scope line="364">
                                    <scope line="365"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testHypotNoOverflow" type="void" line="374">
                <declaration name="dsX" type="DerivativeStructure" line="375"/>
                <declaration name="dsY" type="DerivativeStructure" line="376"/>
                <declaration name="hypot" type="DerivativeStructure" line="377"/>
                <declaration name="sqrt" type="DerivativeStructure" line="381"/>
            </method>
            <method name="testHypotNeglectible" type="void" line="384">
                <declaration name="dsSmall" type="DerivativeStructure" line="385"/>
                <declaration name="dsLarge" type="DerivativeStructure" line="386"/>
            </method>
            <method name="testHypotSpecial" type="void" line="394"/>
            <method name="testPrimitiveRemainder" type="void" line="400">
                <declaration name="epsilon" type="double" line="401"/>
                <scope line="402">
                    <scope line="403">
                        <declaration name="dsX" type="DerivativeStructure" line="404"/>
                        <scope line="405">
                            <declaration name="remainder" type="DerivativeStructure" line="406"/>
                            <declaration name="ref" type="DerivativeStructure" line="407"/>
                            <declaration name="zero" type="DerivativeStructure" line="408"/>
                            <scope line="409">
                                <scope line="410">
                                    <scope line="411"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testRemainder" type="void" line="420">
                <declaration name="epsilon" type="double" line="421"/>
                <scope line="422">
                    <scope line="423">
                        <declaration name="dsX" type="DerivativeStructure" line="424"/>
                        <scope line="425">
                            <declaration name="dsY" type="DerivativeStructure" line="426"/>
                            <declaration name="remainder" type="DerivativeStructure" line="427"/>
                            <declaration name="ref" type="DerivativeStructure" line="428"/>
                            <declaration name="zero" type="DerivativeStructure" line="429"/>
                            <scope line="430">
                                <scope line="431">
                                    <scope line="432"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testExp" type="void" line="441">
                <declaration name="epsilon" type="double[]" line="442"/>
                <scope line="443">
                    <scope line="444">
                        <declaration name="refExp" type="double" line="445"/>
                        <declaration name="exp" type="DerivativeStructure" line="446"/>
                        <scope line="447"/>
                    </scope>
                </scope>
            </method>
            <method name="testExpm1Definition" type="void" line="453">
                <declaration name="epsilon" type="double" line="454"/>
                <scope line="455">
                    <scope line="456">
                        <declaration name="dsX" type="DerivativeStructure" line="457"/>
                        <declaration name="expm11" type="DerivativeStructure" line="458"/>
                        <declaration name="expm12" type="DerivativeStructure" line="459"/>
                        <declaration name="zero" type="DerivativeStructure" line="460"/>
                        <scope line="461"/>
                    </scope>
                </scope>
            </method>
            <method name="testLog" type="void" line="467">
                <declaration name="epsilon" type="double[]" line="468"/>
                <scope line="469">
                    <scope line="470">
                        <declaration name="log" type="DerivativeStructure" line="471"/>
                        <scope line="473">
                            <declaration name="refDer" type="double" line="474"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testLog1pDefinition" type="void" line="480">
                <declaration name="epsilon" type="double" line="481"/>
                <scope line="482">
                    <scope line="483">
                        <declaration name="dsX" type="DerivativeStructure" line="484"/>
                        <declaration name="log1p1" type="DerivativeStructure" line="485"/>
                        <declaration name="log1p2" type="DerivativeStructure" line="486"/>
                        <declaration name="zero" type="DerivativeStructure" line="487"/>
                        <scope line="488"/>
                    </scope>
                </scope>
            </method>
            <method name="testLog10Definition" type="void" line="494">
                <declaration name="epsilon" type="double[]" line="495"/>
                <scope line="496">
                    <scope line="497">
                        <declaration name="dsX" type="DerivativeStructure" line="498"/>
                        <declaration name="log101" type="DerivativeStructure" line="499"/>
                        <declaration name="log102" type="DerivativeStructure" line="500"/>
                        <declaration name="zero" type="DerivativeStructure" line="501"/>
                        <scope line="502"/>
                    </scope>
                </scope>
            </method>
            <method name="testLogExp" type="void" line="508">
                <declaration name="epsilon" type="double[]" line="509"/>
                <scope line="510">
                    <scope line="511">
                        <declaration name="dsX" type="DerivativeStructure" line="512"/>
                        <declaration name="rebuiltX" type="DerivativeStructure" line="513"/>
                        <declaration name="zero" type="DerivativeStructure" line="514"/>
                        <scope line="515"/>
                    </scope>
                </scope>
            </method>
            <method name="testLog1pExpm1" type="void" line="521">
                <declaration name="epsilon" type="double[]" line="522"/>
                <scope line="523">
                    <scope line="524">
                        <declaration name="dsX" type="DerivativeStructure" line="525"/>
                        <declaration name="rebuiltX" type="DerivativeStructure" line="526"/>
                        <declaration name="zero" type="DerivativeStructure" line="527"/>
                        <scope line="528"/>
                    </scope>
                </scope>
            </method>
            <method name="testLog10Power" type="void" line="534">
                <declaration name="epsilon" type="double[]" line="535"/>
                <scope line="536">
                    <scope line="537">
                        <declaration name="dsX" type="DerivativeStructure" line="538"/>
                        <declaration name="rebuiltX" type="DerivativeStructure" line="539"/>
                        <declaration name="zero" type="DerivativeStructure" line="540"/>
                        <scope line="541"/>
                    </scope>
                </scope>
            </method>
            <method name="testSinCos" type="void" line="547">
                <declaration name="epsilon" type="double" line="548"/>
                <scope line="549">
                    <scope line="550">
                        <declaration name="dsX" type="DerivativeStructure" line="551"/>
                        <declaration name="sin" type="DerivativeStructure" line="552"/>
                        <declaration name="cos" type="DerivativeStructure" line="553"/>
                        <declaration name="s" type="double" line="554"/>
                        <declaration name="c" type="double" line="555"/>
                        <scope line="556"/>
                    </scope>
                </scope>
            </method>
            <method name="testSinAsin" type="void" line="579">
                <declaration name="epsilon" type="double[]" line="580"/>
                <scope line="581">
                    <scope line="582">
                        <declaration name="dsX" type="DerivativeStructure" line="583"/>
                        <declaration name="rebuiltX" type="DerivativeStructure" line="584"/>
                        <declaration name="zero" type="DerivativeStructure" line="585"/>
                        <scope line="586"/>
                    </scope>
                </scope>
            </method>
            <method name="testCosAcos" type="void" line="592">
                <declaration name="epsilon" type="double[]" line="593"/>
                <scope line="594">
                    <scope line="595">
                        <declaration name="dsX" type="DerivativeStructure" line="596"/>
                        <declaration name="rebuiltX" type="DerivativeStructure" line="597"/>
                        <declaration name="zero" type="DerivativeStructure" line="598"/>
                        <scope line="599"/>
                    </scope>
                </scope>
            </method>
            <method name="testTanAtan" type="void" line="605">
                <declaration name="epsilon" type="double[]" line="606"/>
                <scope line="607">
                    <scope line="608">
                        <declaration name="dsX" type="DerivativeStructure" line="609"/>
                        <declaration name="rebuiltX" type="DerivativeStructure" line="610"/>
                        <declaration name="zero" type="DerivativeStructure" line="611"/>
                        <scope line="612"/>
                    </scope>
                </scope>
            </method>
            <method name="testTangentDefinition" type="void" line="618">
                <declaration name="epsilon" type="double[]" line="619"/>
                <scope line="620">
                    <scope line="621">
                        <declaration name="dsX" type="DerivativeStructure" line="622"/>
                        <declaration name="tan1" type="DerivativeStructure" line="623"/>
                        <declaration name="tan2" type="DerivativeStructure" line="624"/>
                        <declaration name="zero" type="DerivativeStructure" line="625"/>
                        <scope line="626"/>
                    </scope>
                </scope>
            </method>
            <method name="testAtan2" type="void" line="632">
                <declaration name="epsilon" type="double[]" line="633"/>
                <scope line="634">
                    <scope line="635">
                        <declaration name="dsX" type="DerivativeStructure" line="636"/>
                        <scope line="637">
                            <declaration name="dsY" type="DerivativeStructure" line="638"/>
                            <declaration name="atan2" type="DerivativeStructure" line="639"/>
                            <declaration name="ref" type="DerivativeStructure" line="640"/>
                            <scope line="641"/>
                            <declaration name="zero" type="DerivativeStructure" line="644"/>
                            <scope line="645">
                                <scope line="646">
                                    <scope line="647"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testAtan2SpecialCases" type="void" line="656">
                <declaration name="pp" type="DerivativeStructure" line="657"/>
                <declaration name="pn" type="DerivativeStructure" line="660"/>
                <declaration name="np" type="DerivativeStructure" line="662"/>
                <declaration name="nn" type="DerivativeStructure" line="665"/>
            </method>
            <method name="testSinhDefinition" type="void" line="668">
                <declaration name="epsilon" type="double[]" line="669"/>
                <scope line="670">
                    <scope line="671">
                        <declaration name="dsX" type="DerivativeStructure" line="672"/>
                        <declaration name="sinh1" type="DerivativeStructure" line="673"/>
                        <declaration name="sinh2" type="DerivativeStructure" line="674"/>
                        <declaration name="zero" type="DerivativeStructure" line="675"/>
                        <scope line="676"/>
                    </scope>
                </scope>
            </method>
            <method name="testCoshDefinition" type="void" line="682">
                <declaration name="epsilon" type="double[]" line="683"/>
                <scope line="684">
                    <scope line="685">
                        <declaration name="dsX" type="DerivativeStructure" line="686"/>
                        <declaration name="cosh1" type="DerivativeStructure" line="687"/>
                        <declaration name="cosh2" type="DerivativeStructure" line="688"/>
                        <declaration name="zero" type="DerivativeStructure" line="689"/>
                        <scope line="690"/>
                    </scope>
                </scope>
            </method>
            <method name="testTanhDefinition" type="void" line="696">
                <declaration name="epsilon" type="double[]" line="697"/>
                <scope line="698">
                    <scope line="699">
                        <declaration name="dsX" type="DerivativeStructure" line="700"/>
                        <declaration name="tanh1" type="DerivativeStructure" line="701"/>
                        <declaration name="tanh2" type="DerivativeStructure" line="702"/>
                        <declaration name="zero" type="DerivativeStructure" line="703"/>
                        <scope line="704"/>
                    </scope>
                </scope>
            </method>
            <method name="testSinhAsinh" type="void" line="710">
                <declaration name="epsilon" type="double[]" line="711"/>
                <scope line="712">
                    <scope line="713">
                        <declaration name="dsX" type="DerivativeStructure" line="714"/>
                        <declaration name="rebuiltX" type="DerivativeStructure" line="715"/>
                        <declaration name="zero" type="DerivativeStructure" line="716"/>
                        <scope line="717"/>
                    </scope>
                </scope>
            </method>
            <method name="testCoshAcosh" type="void" line="723">
                <declaration name="epsilon" type="double[]" line="724"/>
                <scope line="725">
                    <scope line="726">
                        <declaration name="dsX" type="DerivativeStructure" line="727"/>
                        <declaration name="rebuiltX" type="DerivativeStructure" line="728"/>
                        <declaration name="zero" type="DerivativeStructure" line="729"/>
                        <scope line="730"/>
                    </scope>
                </scope>
            </method>
            <method name="testTanhAtanh" type="void" line="736">
                <declaration name="epsilon" type="double[]" line="737"/>
                <scope line="738">
                    <scope line="739">
                        <declaration name="dsX" type="DerivativeStructure" line="740"/>
                        <declaration name="rebuiltX" type="DerivativeStructure" line="741"/>
                        <declaration name="zero" type="DerivativeStructure" line="742"/>
                        <scope line="743"/>
                    </scope>
                </scope>
            </method>
            <method name="testCompositionOneVariableY" type="void" line="749">
                <declaration name="epsilon" type="double" line="750"/>
                <scope line="751">
                    <scope line="752">
                        <declaration name="dsX" type="DerivativeStructure" line="753"/>
                        <scope line="754">
                            <declaration name="dsY" type="DerivativeStructure" line="755"/>
                            <declaration name="f" type="DerivativeStructure" line="756"/>
                            <declaration name="f0" type="double" line="757"/>
                            <scope line="759">
                                <declaration name="f1" type="double" line="760"/>
                                <scope line="762">
                                    <declaration name="f2" type="double" line="763"/>
                                    <scope line="765">
                                        <declaration name="f3" type="double" line="766"/>
                                    </scope>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testTaylorPolynomial" type="void" line="775">
                <scope line="776">
                    <declaration name="dsX" type="DerivativeStructure" line="777"/>
                    <scope line="778">
                        <declaration name="dsY" type="DerivativeStructure" line="779"/>
                        <scope line="780">
                            <declaration name="dsZ" type="DerivativeStructure" line="781"/>
                            <declaration name="f" type="DerivativeStructure" line="782"/>
                            <scope line="783">
                                <scope line="784">
                                    <scope line="785">
                                        <declaration name="ref" type="double" line="786"/>
                                    </scope>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testTaylorAtan2" type="void" line="795">
                <declaration name="expected" type="double[]" line="796"/>
                <declaration name="x0" type="double" line="797"/>
                <declaration name="y0" type="double" line="798"/>
                <scope line="799">
                    <declaration name="dsX" type="DerivativeStructure" line="800"/>
                    <declaration name="dsY" type="DerivativeStructure" line="801"/>
                    <declaration name="atan2" type="DerivativeStructure" line="802"/>
                    <declaration name="maxError" type="double" line="803"/>
                    <scope line="804">
                        <scope line="805">
                            <declaration name="ref" type="double" line="806"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testAbs" type="void" line="813">
                <declaration name="minusOne" type="DerivativeStructure" line="814"/>
                <declaration name="plusOne" type="DerivativeStructure" line="817"/>
                <declaration name="minusZero" type="DerivativeStructure" line="820"/>
                <declaration name="plusZero" type="DerivativeStructure" line="823"/>
            </method>
            <method name="testSignum" type="void" line="827">
                <declaration name="minusOne" type="DerivativeStructure" line="828"/>
                <declaration name="plusOne" type="DerivativeStructure" line="831"/>
                <declaration name="minusZero" type="DerivativeStructure" line="834"/>
                <declaration name="plusZero" type="DerivativeStructure" line="838"/>
            </method>
            <method name="testCeilFloorRintLong" type="void" line="843">
                <declaration name="x" type="DerivativeStructure" line="844"/>
            </method>
            <method name="testCopySign" type="void" line="856">
                <declaration name="minusOne" type="DerivativeStructure" line="857"/>
                <declaration name="plusOne" type="DerivativeStructure" line="868"/>
            </method>
            <method name="testToDegreesDefinition" type="void" line="880">
                <declaration name="epsilon" type="double" line="881"/>
                <scope line="882">
                    <scope line="883">
                        <declaration name="dsX" type="DerivativeStructure" line="884"/>
                        <scope line="886">
                            <scope line="887"/>
                            <scope line="890"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testToRadiansDefinition" type="void" line="897">
                <declaration name="epsilon" type="double" line="898"/>
                <scope line="899">
                    <scope line="900">
                        <declaration name="dsX" type="DerivativeStructure" line="901"/>
                        <scope line="903">
                            <scope line="904"/>
                            <scope line="907"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="testDegRad" type="void" line="914">
                <declaration name="epsilon" type="double" line="915"/>
                <scope line="916">
                    <scope line="917">
                        <declaration name="dsX" type="DerivativeStructure" line="918"/>
                        <declaration name="rebuiltX" type="DerivativeStructure" line="919"/>
                        <declaration name="zero" type="DerivativeStructure" line="920"/>
                        <scope line="921"/>
                    </scope>
                </scope>
            </method>
            <method name="testComposeMismatchedDimensions" type="void" line="927"/>
            <method name="testCompose" type="void" line="930">
                <declaration name="epsilon" type="double[]" line="931"/>
                <declaration name="poly" type="PolynomialFunction" line="932"/>
                <scope line="933">
                    <declaration name="p" type="PolynomialFunction[]" line="934"/>
                    <scope line="936"/>
                    <scope line="939">
                        <declaration name="dsX" type="DerivativeStructure" line="940"/>
                        <declaration name="dsY1" type="DerivativeStructure" line="941"/>
                        <scope line="942"/>
                        <declaration name="f" type="double[]" line="945"/>
                        <scope line="946"/>
                        <declaration name="dsY2" type="DerivativeStructure" line="949"/>
                        <declaration name="zero" type="DerivativeStructure" line="950"/>
                        <scope line="951"/>
                    </scope>
                </scope>
            </method>
            <method name="testField" type="void" line="957">
                <scope line="958">
                    <declaration name="x" type="DerivativeStructure" line="959"/>
                </scope>
            </method>
            <method name="testOneParameterConstructor" type="void" line="967">
                <declaration name="x" type="double" line="968"/>
                <declaration name="cos" type="double" line="969"/>
                <declaration name="sin" type="double" line="970"/>
                <declaration name="yRef" type="DerivativeStructure" line="971"/>
                <scope line="972"/>
                <scope line="976"/>
                <scope line="978"/>
                <declaration name="derivatives" type="double[]" line="981"/>
                <declaration name="y" type="DerivativeStructure" line="982"/>
            </method>
            <method name="testOneOrderConstructor" type="void" line="986">
                <declaration name="x" type="double" line="987"/>
                <declaration name="y" type="double" line="988"/>
                <declaration name="z" type="double" line="989"/>
                <declaration name="xRef" type="DerivativeStructure" line="990"/>
                <declaration name="yRef" type="DerivativeStructure" line="991"/>
                <declaration name="zRef" type="DerivativeStructure" line="992"/>
                <scope line="993"/>
                <scope line="997"/>
                <scope line="999"/>
                <declaration name="derivatives" type="double[]" line="1002"/>
                <declaration name="t" type="DerivativeStructure" line="1003"/>
            </method>
            <method name="testLinearCombination1DSDS" type="void" line="1007">
                <declaration name="a" type="DerivativeStructure[]" line="1008"/>
                <declaration name="b" type="DerivativeStructure[]" line="1009"/>
                <declaration name="abSumInline" type="DerivativeStructure" line="1010"/>
                <declaration name="abSumArray" type="DerivativeStructure" line="1011"/>
            </method>
            <method name="testLinearCombination1DoubleDS" type="void" line="1021">
                <declaration name="a" type="double[]" line="1022"/>
                <declaration name="b" type="DerivativeStructure[]" line="1023"/>
                <declaration name="abSumInline" type="DerivativeStructure" line="1024"/>
                <declaration name="abSumArray" type="DerivativeStructure" line="1025"/>
            </method>
            <method name="testLinearCombination2DSDS" type="void" line="1032">
                <declaration name="random" type="Well1024a" line="1033"/>
                <scope line="1034">
                    <declaration name="u" type="DerivativeStructure[]" line="1035"/>
                    <declaration name="v" type="DerivativeStructure[]" line="1036"/>
                    <scope line="1037"/>
                    <declaration name="lin" type="DerivativeStructure" line="1041"/>
                    <declaration name="ref" type="double" line="1042"/>
                </scope>
            </method>
            <method name="testLinearCombination2DoubleDS" type="void" line="1061">
                <declaration name="random" type="Well1024a" line="1062"/>
                <scope line="1063">
                    <declaration name="u" type="double[]" line="1064"/>
                    <declaration name="v" type="DerivativeStructure[]" line="1065"/>
                    <scope line="1066"/>
                    <declaration name="lin" type="DerivativeStructure" line="1070"/>
                    <declaration name="ref" type="double" line="1071"/>
                </scope>
            </method>
            <method name="testSerialization" type="void" line="1090">
                <declaration name="a" type="DerivativeStructure" line="1091"/>
                <declaration name="b" type="DerivativeStructure" line="1092"/>
            </method>
            <method name="checkF0F1" type="void" line="1097">
                <params>
                    <param name="ds" type="DerivativeStructure"/>
                    <param name="value" type="double"/>
                    <param name="derivatives" type="double"/>
                </params>
                <scope line="1101">
                    <declaration name="orders" type="int[]" line="1102"/>
                </scope>
            </method>
            <method name="checkEquals" type="void" line="1107">
                <params>
                    <param name="ds1" type="DerivativeStructure"/>
                    <param name="ds2" type="DerivativeStructure"/>
                    <param name="epsilon" type="double"/>
                </params>
                <declaration name="derivatives" type="int[]" line="1110"/>
                <declaration name="sum" type="int" line="1111"/>
                <scope line="1112">
                    <scope line="1113"/>
                    <declaration name="increment" type="boolean" line="1116"/>
                    <scope line="1118">
                        <scope line="1119">
                            <scope line="1120"/>
                            <scope line="1123"/>
                        </scope>
                    </scope>
                    <scope line="1130"/>
                </scope>
            </method>
        </class>
    </source>