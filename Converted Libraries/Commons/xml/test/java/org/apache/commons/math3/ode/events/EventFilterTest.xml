<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.ode.events">
        <import package="org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MaxCountExceededException"/>
        <import package="org.apache.commons.math3.exception.NoBracketingException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.ode.FirstOrderDifferentialEquations"/>
        <import package="org.apache.commons.math3.ode.FirstOrderIntegrator"/>
        <import package="org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.random.Well19937a"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="EventFilterTest" line="15">
            <method name="testHistoryIncreasingForward" type="void" line="16"/>
            <method name="testHistoryIncreasingBackward" type="void" line="21"/>
            <method name="testHistoryDecreasingForward" type="void" line="26"/>
            <method name="testHistoryDecreasingBackward" type="void" line="31"/>
            <method name="testHistory" type="void" line="36">
                <params>
                    <param name="type" type="FilterType"/>
                    <param name="t0" type="double"/>
                    <param name="t1" type="double"/>
                    <param name="refSwitch" type="double"/>
                    <param name="signEven" type="double"/>
                </params>
                <declaration name="onlyIncreasing" type="Event" line="37"/>
                <declaration name="eventFilter" type="EventFilter" line="38"/>
                <declaration name="h" type="double" line="40"/>
                <declaration name="n" type="double" line="41"/>
                <scope line="42">
                    <declaration name="t" type="double" line="43"/>
                </scope>
                <declaration name="rng" type="RandomGenerator" line="46"/>
                <scope line="47">
                    <declaration name="t" type="double" line="48"/>
                    <declaration name="g" type="double" line="49"/>
                    <declaration name="turn" type="int" line="50"/>
                    <scope line="51"/>
                    <scope line="54"/>
                </scope>
            </method>
            <method name="testIncreasingOnly" type="void" line="59">
                <declaration name="e" type="double" line="60"/>
                <declaration name="integrator" type="FirstOrderIntegrator" line="61"/>
                <declaration name="allEvents" type="Event" line="63"/>
                <declaration name="onlyIncreasing" type="Event" line="65"/>
                <declaration name="t0" type="double" line="67"/>
                <declaration name="tEnd" type="double" line="68"/>
                <declaration name="y" type="double[]" line="69"/>
            </method>
            <method name="testDecreasingOnly" type="void" line="74">
                <declaration name="e" type="double" line="75"/>
                <declaration name="integrator" type="FirstOrderIntegrator" line="76"/>
                <declaration name="allEvents" type="Event" line="78"/>
                <declaration name="onlyDecreasing" type="Event" line="80"/>
                <declaration name="t0" type="double" line="82"/>
                <declaration name="tEnd" type="double" line="83"/>
                <declaration name="y" type="double[]" line="84"/>
            </method>
            <method name="testTwoOppositeFilters" type="void" line="89">
                <declaration name="e" type="double" line="90"/>
                <declaration name="integrator" type="FirstOrderIntegrator" line="91"/>
                <declaration name="allEvents" type="Event" line="93"/>
                <declaration name="onlyIncreasing" type="Event" line="95"/>
                <declaration name="onlyDecreasing" type="Event" line="97"/>
                <declaration name="t0" type="double" line="99"/>
                <declaration name="tEnd" type="double" line="100"/>
                <declaration name="y" type="double[]" line="101"/>
            </method>
            <class name="SineCosine" line="107">
                <implements interface="FirstOrderDifferentialEquations"/>
                <method name="getDimension" type="int" line="108"/>
                <method name="computeDerivatives" type="void" line="111">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                        <param name="yDot" type="double[]"/>
                    </params>
                </method>
            </class>
            <class name="Event" line="116">
                <implements interface="EventHandler"/>
                <javadoc line="116">
                    State events for this unit test.                    
                </javadoc>
                <declaration name="expectDecreasing" type="boolean" line="120"/>
                <declaration name="expectIncreasing" type="boolean" line="121"/>
                <declaration name="eventCount" type="int" line="122"/>
                <method name="Event" type="constructor" line="123">
                    <params>
                        <param name="expectDecreasing" type="boolean"/>
                        <param name="expectIncreasing" type="boolean"/>
                    </params>
                </method>
                <method name="getEventCount" type="int" line="127"/>
                <method name="init" type="void" line="130">
                    <params>
                        <param name="t0" type="double"/>
                        <param name="y0" type="double[]"/>
                        <param name="t" type="double"/>
                    </params>
                </method>
                <method name="g" type="double" line="133">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                    </params>
                </method>
                <method name="eventOccurred" type="Action" line="136">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                        <param name="increasing" type="boolean"/>
                    </params>
                    <scope line="137"/>
                    <scope line="140"/>
                </method>
                <method name="resetState" type="void" line="146">
                    <params>
                        <param name="t" type="double"/>
                        <param name="y" type="double[]"/>
                    </params>
                </method>
            </class>
        </class>
    </source>