<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optim.nonlinear.vector.jacobian">
        <import package="java.util.ArrayList"/>
        <import package="org.apache.commons.math3.analysis.MultivariateVectorFunction"/>
        <import package="org.apache.commons.math3.analysis.MultivariateMatrixFunction"/>
        <import package="org.apache.commons.math3.analysis.UnivariateFunction"/>
        <import package="org.apache.commons.math3.stat.regression.SimpleRegression"/>
        <import package="org.apache.commons.math3.optim.nonlinear.vector.ModelFunction"/>
        <import package="org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian"/>
        <class name="StraightLineProblem" line="9">
            <javadoc line="9">
                Class that models a straight line defined as {@code y = a x + b}.
                  The parameters of problem are:
                  &lt;ul&gt;
                  &lt;li&gt;{@code a}&lt;/li&gt;
                  &lt;li&gt;{@code b}&lt;/li&gt;
                  &lt;/ul&gt;
                  The model functions are:
                  &lt;ul&gt;
                  &lt;li&gt;for each pair (a, b), the y-coordinate of the line.&lt;/li&gt;
                  &lt;/ul&gt;                
            </javadoc>
            <declaration name="points" type="ArrayList&lt;double[]&gt;" line="22"/>
            <javadoc line="22">
                Cloud of points assumed to be fitted by a straight line.                
            </javadoc>
            <declaration name="sigma" type="double" line="26"/>
            <javadoc line="26">
                Error (on the y-coordinate of the points).                
            </javadoc>
            <javadoc line="30">
                @param error Assumed error for the y-coordinate.                
            </javadoc>
            <method name="StraightLineProblem" type="constructor" line="33">
                <params>
                    <param name="error" type="double"/>
                </params>
            </method>
            <method name="addPoint" type="void" line="37">
                <params>
                    <param name="px" type="double"/>
                    <param name="py" type="double"/>
                </params>
            </method>
            <javadoc line="40">
                @return the list of x-coordinates.                
            </javadoc>
            <method name="x" type="double[]" line="43">
                <declaration name="v" type="double[]" line="44"/>
                <scope line="45">
                    <declaration name="p" type="double[]" line="46"/>
                </scope>
            </method>
            <javadoc line="51">
                @return the list of y-coordinates.                
            </javadoc>
            <method name="y" type="double[]" line="54">
                <declaration name="v" type="double[]" line="55"/>
                <scope line="56">
                    <declaration name="p" type="double[]" line="57"/>
                </scope>
            </method>
            <method name="target" type="double[]" line="62"/>
            <method name="weight" type="double[]" line="65">
                <declaration name="weight" type="double" line="66"/>
                <declaration name="w" type="double[]" line="67"/>
                <scope line="68"/>
            </method>
            <method name="getModelFunction" type="ModelFunction" line="73">
                <anonymous_class line="74">
                    <method name="value" type="double[]" line="75">
                        <params>
                            <param name="params" type="double[]"/>
                        </params>
                        <declaration name="line" type="Model" line="76"/>
                        <declaration name="model" type="double[]" line="77"/>
                        <scope line="78">
                            <declaration name="p" type="double[]" line="79"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <method name="getModelFunctionJacobian" type="ModelFunctionJacobian" line="87">
                <anonymous_class line="88">
                    <method name="value" type="double[][]" line="89">
                        <params>
                            <param name="point" type="double[]"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="95">
                Directly solve the linear problem, using the {@link SimpleRegression}class.                
            </javadoc>
            <method name="solve" type="double[]" line="98">
                <declaration name="regress" type="SimpleRegression" line="99"/>
                <scope line="100"/>
                <declaration name="result" type="double[]" line="103"/>
            </method>
            <method name="jacobian" type="double[][]" line="106">
                <params>
                    <param name="params" type="double[]"/>
                </params>
                <declaration name="jacobian" type="double[][]" line="107"/>
                <scope line="108">
                    <declaration name="p" type="double[]" line="109"/>
                </scope>
            </method>
            <class name="Model" line="115">
                <implements interface="UnivariateFunction"/>
                <javadoc line="115">
                    Linear function.                    
                </javadoc>
                <declaration name="a" type="double" line="119"/>
                <declaration name="b" type="double" line="120"/>
                <method name="Model" type="constructor" line="121">
                    <params>
                        <param name="a" type="double"/>
                        <param name="b" type="double"/>
                    </params>
                </method>
                <method name="value" type="double" line="125">
                    <params>
                        <param name="x" type="double"/>
                    </params>
                </method>
            </class>
        </class>
    </source>