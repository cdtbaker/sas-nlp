<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optimization.general">
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.random.Well44497b"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.distribution.RealDistribution"/>
        <import package="org.apache.commons.math3.distribution.UniformRealDistribution"/>
        <import package="org.apache.commons.math3.distribution.NormalDistribution"/>
        <import package="org.apache.commons.math3.geometry.euclidean.twod.Vector2D"/>
        <class name="RandomCirclePointGenerator" line="10">
            <javadoc line="10">
                Factory for generating a cloud of points that approximate a circle.                
            </javadoc>
            <declaration name="cX" type="RealDistribution" line="14"/>
            <javadoc line="14">
                RNG for the x-coordinate of the center.                
            </javadoc>
            <declaration name="cY" type="RealDistribution" line="18"/>
            <javadoc line="18">
                RNG for the y-coordinate of the center.                
            </javadoc>
            <declaration name="tP" type="RealDistribution" line="22"/>
            <javadoc line="22">
                RNG for the parametric position of the point.                
            </javadoc>
            <declaration name="radius" type="double" line="26"/>
            <javadoc line="26">
                Radius of the circle.                
            </javadoc>
            <javadoc line="30">
                @param x Abscissa of the circle center.                
                <param>
                    y Ordinate of the circle center.                    
                </param>
                <param>
                    radius Radius of the circle.                    
                </param>
                <param>
                    xSigma Error on the x-coordinate of the circumference points.                    
                </param>
                <param>
                    ySigma Error on the y-coordinate of the circumference points.                    
                </param>
                <param>
                    seed RNG seed.                    
                </param>
            </javadoc>
            <method name="RandomCirclePointGenerator" type="constructor" line="38">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="radius" type="double"/>
                    <param name="xSigma" type="double"/>
                    <param name="ySigma" type="double"/>
                    <param name="seed" type="long"/>
                </params>
                <declaration name="rng" type="RandomGenerator" line="39"/>
            </method>
            <javadoc line="45">
                Point generator.                
                <param>
                    n Number of points to create.                    
                </param>
                <return>
                    the cloud of {@code n} points.                    
                </return>
            </javadoc>
            <method name="generate" type="Vector2D[]" line="50">
                <params>
                    <param name="n" type="int"/>
                </params>
                <declaration name="cloud" type="Vector2D[]" line="51"/>
                <scope line="52"/>
            </method>
            <javadoc line="57">
                Create one point.                
                <return>
                    a point.                    
                </return>
            </javadoc>
            <method name="create" type="Vector2D" line="61">
                <declaration name="t" type="double" line="62"/>
                <declaration name="pX" type="double" line="63"/>
                <declaration name="pY" type="double" line="64"/>
            </method>
        </class>
    </source>