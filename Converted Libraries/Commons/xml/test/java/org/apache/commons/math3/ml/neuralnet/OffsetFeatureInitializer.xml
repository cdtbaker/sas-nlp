<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.ml.neuralnet">
        <import package="org.junit.Test"/>
        <import package="org.junit.Assert"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.random.Well44497b"/>
        <class name="OffsetFeatureInitializer" line="25">
            <implements interface="FeatureInitializer"/>
            <javadoc line="25">
                Wraps a given initializer.                
            </javadoc>
            <declaration name="orig" type="FeatureInitializer" line="30"/>
            <javadoc line="30">
                Wrapped initializer.                
            </javadoc>
            <declaration name="inc" type="int" line="32"/>
            <javadoc line="32">
                Offset.                
            </javadoc>
            <javadoc line="35">
                Creates a new initializer whose {@link #value()} method
                  will return {@code orig.value() + offset}, where{@code offset} is automatically incremented by one at
                  each call.                
                <param>
                    orig Original initializer.                    
                </param>
            </javadoc>
            <method name="OffsetFeatureInitializer" type="constructor" line="43">
                <params>
                    <param name="orig" type="FeatureInitializer"/>
                </params>
            </method>
            <javadoc line="47">
                {@inheritDoc}                
            </javadoc>
            <method name="value" type="double" line="48"/>
        </class>
    </source>