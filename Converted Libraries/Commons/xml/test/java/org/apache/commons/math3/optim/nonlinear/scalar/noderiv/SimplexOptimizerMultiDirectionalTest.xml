<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optim.nonlinear.scalar.noderiv">
        <import package="org.apache.commons.math3.analysis.MultivariateFunction"/>
        <import package="org.apache.commons.math3.optim.MaxEval"/>
        <import package="org.apache.commons.math3.optim.InitialGuess"/>
        <import package="org.apache.commons.math3.optim.PointValuePair"/>
        <import package="org.apache.commons.math3.optim.SimpleValueChecker"/>
        <import package="org.apache.commons.math3.optim.SimpleBounds"/>
        <import package="org.apache.commons.math3.optim.nonlinear.scalar.GoalType"/>
        <import package="org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction"/>
        <import package="org.apache.commons.math3.exception.MathUnsupportedOperationException"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="SimplexOptimizerMultiDirectionalTest" line="14">
            <method name="testBoundsUnsupported" type="void" line="15">
                <declaration name="optimizer" type="SimplexOptimizer" line="16"/>
                <declaration name="fourExtrema" type="FourExtrema" line="17"/>
            </method>
            <method name="testMinimize1" type="void" line="20">
                <declaration name="optimizer" type="SimplexOptimizer" line="21"/>
                <declaration name="fourExtrema" type="FourExtrema" line="22"/>
                <declaration name="optimum" type="PointValuePair" line="23"/>
            </method>
            <method name="testMinimize2" type="void" line="31">
                <declaration name="optimizer" type="SimplexOptimizer" line="32"/>
                <declaration name="fourExtrema" type="FourExtrema" line="33"/>
                <declaration name="optimum" type="PointValuePair" line="34"/>
            </method>
            <method name="testMaximize1" type="void" line="42">
                <declaration name="optimizer" type="SimplexOptimizer" line="43"/>
                <declaration name="fourExtrema" type="FourExtrema" line="44"/>
                <declaration name="optimum" type="PointValuePair" line="45"/>
            </method>
            <method name="testMaximize2" type="void" line="53">
                <declaration name="optimizer" type="SimplexOptimizer" line="54"/>
                <declaration name="fourExtrema" type="FourExtrema" line="55"/>
                <declaration name="optimum" type="PointValuePair" line="56"/>
            </method>
            <method name="testRosenbrock" type="void" line="64">
                <anonymous_class line="65">
                    <method name="value" type="double" line="66">
                        <params>
                            <param name="x" type="double[]"/>
                        </params>
                        <declaration name="a" type="double" line="68"/>
                        <declaration name="b" type="double" line="69"/>
                    </method>
                </anonymous_class>
                <declaration name="rosenbrock" type="MultivariateFunction" line="65"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="75"/>
                <declaration name="optimum" type="PointValuePair" line="76"/>
            </method>
            <method name="testPowell" type="void" line="82">
                <anonymous_class line="83">
                    <method name="value" type="double" line="84">
                        <params>
                            <param name="x" type="double[]"/>
                        </params>
                        <declaration name="a" type="double" line="86"/>
                        <declaration name="b" type="double" line="87"/>
                        <declaration name="c" type="double" line="88"/>
                        <declaration name="d" type="double" line="89"/>
                    </method>
                </anonymous_class>
                <declaration name="powell" type="MultivariateFunction" line="83"/>
                <declaration name="optimizer" type="SimplexOptimizer" line="95"/>
                <declaration name="optimum" type="PointValuePair" line="96"/>
            </method>
            <method name="testMath283" type="void" line="102">
                <declaration name="optimizer" type="SimplexOptimizer" line="103"/>
                <declaration name="function" type="Gaussian2D" line="104"/>
                <declaration name="estimate" type="PointValuePair" line="105"/>
                <declaration name="EPSILON" type="double" line="106"/>
                <declaration name="expectedMaximum" type="double" line="107"/>
                <declaration name="actualMaximum" type="double" line="108"/>
                <declaration name="expectedPosition" type="double[]" line="110"/>
                <declaration name="actualPosition" type="double[]" line="111"/>
            </method>
            <class name="FourExtrema" line="115">
                <implements interface="MultivariateFunction"/>
                <declaration name="xM" type="double" line="116"/>
                <declaration name="yM" type="double" line="117"/>
                <declaration name="xP" type="double" line="118"/>
                <declaration name="yP" type="double" line="119"/>
                <declaration name="valueXmYm" type="double" line="120"/>
                <declaration name="valueXmYp" type="double" line="121"/>
                <declaration name="valueXpYm" type="double" line="122"/>
                <declaration name="valueXpYp" type="double" line="123"/>
                <method name="value" type="double" line="124">
                    <params>
                        <param name="variables" type="double[]"/>
                    </params>
                    <declaration name="x" type="double" line="125"/>
                    <declaration name="y" type="double" line="126"/>
                </method>
            </class>
            <class name="Gaussian2D" line="130">
                <implements interface="MultivariateFunction"/>
                <declaration name="maximumPosition" type="double[]" line="131"/>
                <declaration name="std" type="double" line="132"/>
                <method name="Gaussian2D" type="constructor" line="133">
                    <params>
                        <param name="xOpt" type="double"/>
                        <param name="yOpt" type="double"/>
                        <param name="std" type="double"/>
                    </params>
                </method>
                <method name="getMaximum" type="double" line="137"/>
                <method name="getMaximumPosition" type="double[]" line="140"/>
                <method name="value" type="double" line="143">
                    <params>
                        <param name="point" type="double[]"/>
                    </params>
                    <declaration name="x" type="double" line="144"/>
                    <declaration name="twoS2" type="double" line="145"/>
                </method>
            </class>
            <declaration name="count" type="int" line="149"/>
        </class>
    </source>