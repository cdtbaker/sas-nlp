<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.lang.reflect.Method"/>
        <import package="java.util.Set"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.Random"/>
        <import package="org.apache.commons.math3.analysis.UnivariateFunction"/>
        <import package="org.apache.commons.math3.analysis.function.Sin"/>
        <import package="org.apache.commons.math3.exception.MathUnsupportedOperationException"/>
        <import package="org.apache.commons.math3.linear.RealVector.Entry"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="UnmodifiableRealVectorAbstractTest" line="34">
            <javadoc line="34">
                This is an abstract test of the {@link RealVector#unmodifiableRealVector(RealVector) unmodifiable vector}implementation. These unmodifiable vectors decorate a (modifiable){@link RealVector}; therefore, a new implementation of this abstract
                  test should be considered for each implementation of{@link RealVector}.                
                <version>
                    $Id$                    
                </version>
            </javadoc>
            <declaration name="DIM" type="int" line="46"/>
            <javadoc line="46">
                The dimension of the randomly generated vectors.                
            </javadoc>
            <declaration name="EPS" type="double" line="48"/>
            <javadoc line="48">
                Absolute tolerance.                
            </javadoc>
            <declaration name="EXCLUDE" type="Set&amp;lt;String&amp;gt;" line="50"/>
            <javadoc line="50">
                The list of methods which are excluded from the general test{@link #testAllButExcluded()}.                
            </javadoc>
            <declaration name="RANDOM" type="Random" line="55"/>
            <javadoc line="55">
                The random number generator (always initialized with the same seed.                
            </javadoc>
            <scope line="58">
                <scope line="72"/>
            </scope>
            <javadoc line="78">
                Returns {@code true} if the specified {@code double} are equal (within a
                  given tolerance).                
                <param>
                    x First {@code double}.                    
                </param>
                <param>
                    y Second {@code double}.                    
                </param>
                <return>
                    {@code true} if {@code x} and {@code y} are equal.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="86">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                </params>
                <scope line="87"/>
                <scope line="89"/>
                <scope line="91"/>
                <scope line="93"/>
            </method>
            <javadoc line="98">
                Returns {@code true} if the specified {@code double} arrays are equal
                  (within a given tolerance).                
                <param>
                    x First array.                    
                </param>
                <param>
                    y Second array.                    
                </param>
                <return>
                    {@code true} if {@code x} and {@code y} are equal.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="106">
                <params>
                    <param name="x" type="double[]"/>
                    <param name="y" type="double[]"/>
                </params>
                <scope line="107"/>
                <declaration name="n" type="int" line="110"/>
                <scope line="111">
                    <scope line="112"/>
                </scope>
            </method>
            <javadoc line="119">
                Returns {@code true} if the specified {@code RealVector} are equal
                  (within a given tolerance).                
                <param>
                    x First vector.                    
                </param>
                <param>
                    y Second vector.                    
                </param>
                <return>
                    {@code true} if {@code x} and {@code y} are equal.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="127">
                <params>
                    <param name="x" type="RealVector"/>
                    <param name="y" type="RealVector"/>
                </params>
                <scope line="128"/>
                <declaration name="n" type="int" line="131"/>
                <scope line="132">
                    <scope line="133"/>
                </scope>
            </method>
            <javadoc line="140">
                Returns {@code true} if the specified {@code RealVector} is equal to the
                  specified {@code double} array (within a given tolerance).                
                <param>
                    x Vector.                    
                </param>
                <param>
                    y Array.                    
                </param>
                <return>
                    {@code true} if {@code x} and {@code y} are equal.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="148">
                <params>
                    <param name="x" type="RealVector"/>
                    <param name="y" type="double[]"/>
                </params>
                <scope line="149"/>
                <declaration name="n" type="int" line="152"/>
                <scope line="153">
                    <scope line="154"/>
                </scope>
            </method>
            <javadoc line="161">
                Returns {@code true} if the specified {@code RealMatrix} are equal
                  (within a given tolerance).                
                <param>
                    x First matrix.                    
                </param>
                <param>
                    y Second matrix.                    
                </param>
                <return>
                    {@code true} if {@code x} and {@code y} are equal.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="169">
                <params>
                    <param name="x" type="RealMatrix"/>
                    <param name="y" type="RealMatrix"/>
                </params>
                <scope line="170"/>
                <scope line="173"/>
                <declaration name="rows" type="int" line="176"/>
                <declaration name="cols" type="int" line="177"/>
                <scope line="178">
                    <scope line="179">
                        <scope line="180"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="188">
                Returns {@code true} if the specified {@code Object} are equal.                
                <param>
                    x First object.                    
                </param>
                <param>
                    y Second object.                    
                </param>
                <return>
                    {@code true} if {@code x} and {@code y} are equal.                    
                </return>
                <throws>
                    IllegalArgumentException if {@code x} and {@code y} could
                      not be compared.                    
                </throws>
            </javadoc>
            <method name="equals" type="boolean" line="197">
                <params>
                    <param name="x" type="Object"/>
                    <param name="y" type="Object"/>
                </params>
                <scope line="198">
                    <scope line="199"/>
                    <scope line="202"/>
                </scope>
                <scope line="206">
                    <scope line="207"/>
                    <scope line="209"/>
                </scope>
                <scope line="212">
                    <scope line="213"/>
                    <scope line="216"/>
                </scope>
                <scope line="219">
                    <scope line="220"/>
                    <scope line="222"/>
                    <scope line="224"/>
                </scope>
                <scope line="227">
                    <scope line="228"/>
                    <scope line="230"/>
                    <scope line="232"/>
                </scope>
                <scope line="235">
                    <scope line="236"/>
                    <scope line="238"/>
                </scope>
                <scope line="241"/>
            </method>
            <method name="createVector" type="RealVector" line="247"/>
            <javadoc line="247">
                Creates a new random vector of a specified type. This vector is then to
                  be wrapped in an unmodifiable vector.                
                <return>
                    a new random vector.                    
                </return>
            </javadoc>
            <javadoc line="255">
                Creates a new random object of the specified type.                
                <param>
                    c Class of the object to be created.                    
                </param>
                <return>
                    a new random object.                    
                </return>
                <throws>
                    IllegalArgumentException if the specified class is not
                      recognized by this method.                    
                </throws>
            </javadoc>
            <method name="createParameter" type="Object" line="263">
                <params>
                    <param name="c" type="Class&lt;?&gt;"/>
                </params>
                <scope line="264"/>
                <scope line="266"/>
                <scope line="268">
                    <declaration name="v" type="double[]" line="269"/>
                    <scope line="270"/>
                </scope>
                <scope line="274"/>
                <scope line="276"/>
                <scope line="278"/>
            </method>
            <javadoc line="283">
                This is the general test of most methods in the{@link RealVector#unmodifiableRealVector(RealVector) unmodifiable vector}.
                  It works as follows.
                  First, an unmodifiable view of a copy of the specified random vector{@code u} is created: this defines {@code v}. Then the &lt;em&gt;same&lt;/em&gt;
                  method {@code m} is invoked on {@code u} and {@code v}, with randomly
                  generated parameters {@code args}.
                  If it turns out that {@code u} has changed after the call of method{@code m}, then this test checks that the call of this method on{@code v} resulted in a {@link MathUnsupportedOperationException}. If{@code u} was not modified, then this test checks that the results
                  returned by the call of method {@code m} on {@code u} and {@code v}returned the same result.                
                <param>
                    m Method to be tested.                    
                </param>
                <param>
                    u Random vector from which the unmodifiable view is to be
                      constructed.                    
                </param>
                <param>
                    args Arguments to be passed to method {@code m}.                    
                </param>
            </javadoc>
            <method name="callMethod" type="void" line="308">
                <params>
                    <param name="m" type="Method"/>
                    <param name="u" type="RealVector"/>
                    <param name="args" type="Object"/>
                </params>
                <declaration name="uu" type="RealVector" line="309"/>
                <declaration name="v" type="RealVector" line="310"/>
                <declaration name="exp" type="Object" line="311"/>
                <scope line="312">
                    <declaration name="act" type="Object" line="313"/>
                </scope>
                <scope line="319">
                    <declaration name="flag" type="boolean" line="320"/>
                    <scope line="321"/>
                    <scope line="323">
                        <scope line="324"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="332">
                This test calls {@link #callMethod(Method,RealVector,Object)} on
                  every method defined in interface {@link RealVector}. It generates the
                  appropriate random arguments. Some methods are manually excluded (see{@link #EXCLUDE}), they must be handled by separate tests.                
            </javadoc>
            <method name="testAllButExcluded" type="void" line="342">
                <declaration name="method" type="Method[]" line="343"/>
                <scope line="344">
                    <declaration name="m" type="Method" line="345"/>
                    <scope line="346">
                        <declaration name="u" type="RealVector" line="347"/>
                        <declaration name="paramType" type="Class&amp;lt;?&amp;gt;[]" line="348"/>
                        <declaration name="param" type="Object[]" line="349"/>
                        <scope line="350"/>
                    </scope>
                </scope>
            </method>
            <method name="testGetEntry" type="void" line="359">
                <declaration name="u" type="RealVector" line="360"/>
                <declaration name="v" type="RealVector" line="361"/>
                <scope line="362"/>
            </method>
            <method name="testSetEntry" type="void" line="368">
                <declaration name="u" type="RealVector" line="369"/>
                <declaration name="v" type="RealVector" line="370"/>
                <scope line="371"/>
            </method>
            <method name="testAddToEntry" type="void" line="377">
                <declaration name="u" type="RealVector" line="378"/>
                <declaration name="v" type="RealVector" line="379"/>
                <scope line="380"/>
            </method>
            <method name="testGetSubVector" type="void" line="386">
                <declaration name="u" type="RealVector" line="387"/>
                <declaration name="v" type="RealVector" line="388"/>
                <scope line="389">
                    <scope line="390">
                        <declaration name="exp" type="RealVector" line="391"/>
                        <declaration name="act" type="RealVector" line="392"/>
                    </scope>
                </scope>
            </method>
            <method name="testSetSubVector" type="void" line="399">
                <declaration name="u" type="RealVector" line="400"/>
                <declaration name="v" type="RealVector" line="401"/>
            </method>
            <method name="testIterator" type="void" line="406">
                <declaration name="u" type="RealVector" line="407"/>
                <declaration name="i" type="Iterator&amp;lt;Entry&amp;gt;" line="408"/>
                <declaration name="v" type="RealVector" line="409"/>
                <declaration name="j" type="Iterator&amp;lt;Entry&amp;gt;" line="410"/>
                <declaration name="flag" type="boolean" line="411"/>
                <scope line="412">
                    <declaration name="exp" type="Entry" line="414"/>
                    <declaration name="act" type="Entry" line="415"/>
                    <scope line="421"/>
                    <scope line="423"/>
                </scope>
            </method>
            <method name="testSparseIterator" type="void" line="432">
                <declaration name="u" type="RealVector" line="433"/>
                <declaration name="i" type="Iterator&amp;lt;Entry&amp;gt;" line="434"/>
                <declaration name="v" type="RealVector" line="435"/>
                <declaration name="j" type="Iterator&amp;lt;Entry&amp;gt;" line="436"/>
                <declaration name="flag" type="boolean" line="437"/>
                <scope line="438">
                    <declaration name="exp" type="Entry" line="440"/>
                    <declaration name="act" type="Entry" line="441"/>
                    <scope line="447"/>
                    <scope line="449"/>
                </scope>
            </method>
        </class>
    </source>