<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.util">
        <import package="java.util.Arrays"/>
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MathArithmeticException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.exception.NonMonotonicSequenceException"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.random.Well1024a"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="MathArraysTest" line="30">
            <javadoc line="30">
                Test cases for the {@link MathArrays} class.                
                <version>
                    $Id$                    
                </version>
            </javadoc>
            <method name="testScale" type="void" line="38">
                <comment line="45">
                    Make sure test has not changed                    
                </comment>
                <comment line="50">
                    Test scaled values                    
                </comment>
                <declaration name="test" type="double[]" line="39"/>
                <declaration name="correctTest" type="double[]" line="40"/>
                <declaration name="correctScaled" type="double[]" line="41"/>
                <declaration name="scaled" type="double[]" line="43"/>
                <scope line="46"/>
                <scope line="51"/>
            </method>
            <method name="testScaleInPlace" type="void" line="57">
                <comment line="62">
                    Make sure test has changed                    
                </comment>
                <declaration name="test" type="double[]" line="58"/>
                <declaration name="correctScaled" type="double[]" line="59"/>
                <scope line="63"/>
            </method>
            <method name="testEbeAddPrecondition" type="void" line="69"/>
            <method name="testEbeSubtractPrecondition" type="void" line="73"/>
            <method name="testEbeMultiplyPrecondition" type="void" line="77"/>
            <method name="testEbeDividePrecondition" type="void" line="81"/>
            <method name="testEbeAdd" type="void" line="86">
                <declaration name="a" type="double[]" line="87"/>
                <declaration name="b" type="double[]" line="88"/>
                <declaration name="r" type="double[]" line="89"/>
                <scope line="91"/>
            </method>
            <method name="testEbeSubtract" type="void" line="96">
                <declaration name="a" type="double[]" line="97"/>
                <declaration name="b" type="double[]" line="98"/>
                <declaration name="r" type="double[]" line="99"/>
                <scope line="101"/>
            </method>
            <method name="testEbeMultiply" type="void" line="106">
                <declaration name="a" type="double[]" line="107"/>
                <declaration name="b" type="double[]" line="108"/>
                <declaration name="r" type="double[]" line="109"/>
                <scope line="111"/>
            </method>
            <method name="testEbeDivide" type="void" line="116">
                <declaration name="a" type="double[]" line="117"/>
                <declaration name="b" type="double[]" line="118"/>
                <declaration name="r" type="double[]" line="119"/>
                <scope line="121"/>
            </method>
            <method name="testL1DistanceDouble" type="void" line="127">
                <declaration name="p1" type="double[]" line="128"/>
                <declaration name="p2" type="double[]" line="129"/>
            </method>
            <method name="testL1DistanceInt" type="void" line="134">
                <declaration name="p1" type="int[]" line="135"/>
                <declaration name="p2" type="int[]" line="136"/>
            </method>
            <method name="testL2DistanceDouble" type="void" line="141">
                <declaration name="p1" type="double[]" line="142"/>
                <declaration name="p2" type="double[]" line="143"/>
            </method>
            <method name="testL2DistanceInt" type="void" line="148">
                <declaration name="p1" type="int[]" line="149"/>
                <declaration name="p2" type="int[]" line="150"/>
            </method>
            <method name="testLInfDistanceDouble" type="void" line="155">
                <declaration name="p1" type="double[]" line="156"/>
                <declaration name="p2" type="double[]" line="157"/>
            </method>
            <method name="testLInfDistanceInt" type="void" line="162">
                <declaration name="p1" type="int[]" line="163"/>
                <declaration name="p2" type="int[]" line="164"/>
            </method>
            <method name="testCheckOrder" type="void" line="169">
                <comment line="184">
                    Expected                    
                </comment>
                <comment line="191">
                    Expected                    
                </comment>
                <comment line="198">
                    Expected                    
                </comment>
                <comment line="205">
                    Expected                    
                </comment>
                <comment line="212">
                    Expected                    
                </comment>
                <scope line="179"/>
                <scope line="183"/>
                <scope line="186"/>
                <scope line="190"/>
                <scope line="193"/>
                <scope line="197"/>
                <scope line="200"/>
                <scope line="204"/>
                <scope line="207"/>
                <scope line="211"/>
            </method>
            <method name="testIsMonotonic" type="void" line="217"/>
            <method name="testIsMonotonicComparable" type="void" line="237"/>
            <method name="testCheckRectangular" type="void" line="293">
                <comment line="304">
                    Expected                    
                </comment>
                <comment line="310">
                    Expected                    
                </comment>
                <declaration name="rect" type="long[][]" line="294"/>
                <declaration name="ragged" type="long[][]" line="295"/>
                <declaration name="nullArray" type="long[][]" line="296"/>
                <declaration name="empty" type="long[][]" line="297"/>
                <scope line="300"/>
                <scope line="303"/>
                <scope line="306"/>
                <scope line="309"/>
            </method>
            <method name="testCheckPositive" type="void" line="315">
                <comment line="326">
                    Expected                    
                </comment>
                <comment line="332">
                    Expected                    
                </comment>
                <declaration name="positive" type="double[]" line="316"/>
                <declaration name="nonNegative" type="double[]" line="317"/>
                <declaration name="nullArray" type="double[]" line="318"/>
                <declaration name="empty" type="double[]" line="319"/>
                <scope line="322"/>
                <scope line="325"/>
                <scope line="328"/>
                <scope line="331"/>
            </method>
            <method name="testCheckNonNegative" type="void" line="337">
                <comment line="348">
                    Expected                    
                </comment>
                <comment line="354">
                    Expected                    
                </comment>
                <declaration name="nonNegative" type="long[]" line="338"/>
                <declaration name="hasNegative" type="long[]" line="339"/>
                <declaration name="nullArray" type="long[]" line="340"/>
                <declaration name="empty" type="long[]" line="341"/>
                <scope line="344"/>
                <scope line="347"/>
                <scope line="350"/>
                <scope line="353"/>
            </method>
            <method name="testCheckNonNegative2D" type="void" line="359">
                <comment line="370">
                    Expected                    
                </comment>
                <comment line="376">
                    Expected                    
                </comment>
                <declaration name="nonNegative" type="long[][]" line="360"/>
                <declaration name="hasNegative" type="long[][]" line="361"/>
                <declaration name="nullArray" type="long[][]" line="362"/>
                <declaration name="empty" type="long[][]" line="363"/>
                <scope line="366"/>
                <scope line="369"/>
                <scope line="372"/>
                <scope line="375"/>
            </method>
            <method name="testSortInPlace" type="void" line="381">
                <declaration name="x1" type="double[]" line="382"/>
                <declaration name="x2" type="double[]" line="383"/>
                <declaration name="x3" type="double[]" line="384"/>
            </method>
            <method name="testSortInPlaceExample" type="void" line="411">
                <comment line="410">
                                        
                </comment>
                <declaration name="x" type="double[]" line="412"/>
                <declaration name="y" type="double[]" line="413"/>
                <declaration name="z" type="double[]" line="414"/>
                <declaration name="sx" type="double[]" line="416"/>
                <declaration name="sy" type="double[]" line="417"/>
                <declaration name="sz" type="double[]" line="418"/>
            </method>
            <method name="testSortInPlaceFailures" type="void" line="425">
                <comment line="434">
                    expected                    
                </comment>
                <comment line="440">
                    expected                    
                </comment>
                <comment line="446">
                    expected                    
                </comment>
                <declaration name="nullArray" type="double[]" line="426"/>
                <declaration name="one" type="double[]" line="427"/>
                <declaration name="two" type="double[]" line="428"/>
                <declaration name="onep" type="double[]" line="429"/>
                <scope line="430"/>
                <scope line="433"/>
                <scope line="436"/>
                <scope line="439"/>
                <scope line="442"/>
                <scope line="445"/>
            </method>
            <method name="testCopyOfInt" type="void" line="451">
                <declaration name="source" type="int[]" line="452"/>
                <declaration name="dest" type="int[]" line="455"/>
                <scope line="458"/>
            </method>
            <method name="testCopyOfInt2" type="void" line="464">
                <declaration name="source" type="int[]" line="465"/>
                <declaration name="offset" type="int" line="468"/>
                <declaration name="dest" type="int[]" line="469"/>
                <scope line="472"/>
            </method>
            <method name="testCopyOfInt3" type="void" line="478">
                <declaration name="source" type="int[]" line="479"/>
                <declaration name="offset" type="int" line="482"/>
                <declaration name="dest" type="int[]" line="483"/>
                <scope line="486"/>
                <scope line="489"/>
            </method>
            <method name="testCopyOfDouble" type="void" line="495">
                <declaration name="source" type="double[]" line="496"/>
                <declaration name="dest" type="double[]" line="504"/>
                <scope line="507"/>
            </method>
            <method name="testCopyOfDouble2" type="void" line="513">
                <declaration name="source" type="double[]" line="514"/>
                <declaration name="offset" type="int" line="522"/>
                <declaration name="dest" type="double[]" line="523"/>
                <scope line="526"/>
            </method>
            <method name="testCopyOfDouble3" type="void" line="532">
                <declaration name="source" type="double[]" line="533"/>
                <declaration name="offset" type="int" line="541"/>
                <declaration name="dest" type="double[]" line="542"/>
                <scope line="545"/>
                <scope line="548"/>
            </method>
            <method name="testLinearCombination1" type="void" line="554">
                <declaration name="a" type="double[]" line="555"/>
                <declaration name="b" type="double[]" line="560"/>
                <declaration name="abSumInline" type="double" line="566"/>
                <declaration name="abSumArray" type="double" line="569"/>
                <declaration name="naive" type="double" line="574"/>
            </method>
            <method name="testLinearCombination2" type="void" line="580">
                <comment line="581">
                    we compare accurate versus naive dot product implementations                    
                </comment>
                <comment line="582">
                    on regular vectors (i.e. not extreme cases like in the previous test)                    
                </comment>
                <declaration name="random" type="Well1024a" line="583"/>
                <scope line="585">
                    <declaration name="ux" type="double" line="586"/>
                    <declaration name="uy" type="double" line="587"/>
                    <declaration name="uz" type="double" line="588"/>
                    <declaration name="vx" type="double" line="589"/>
                    <declaration name="vy" type="double" line="590"/>
                    <declaration name="vz" type="double" line="591"/>
                    <declaration name="sInline" type="double" line="592"/>
                    <declaration name="sArray" type="double" line="595"/>
                </scope>
            </method>
            <method name="testLinearCombinationInfinite" type="void" line="602">
                <declaration name="a" type="double[][]" line="603"/>
                <declaration name="b" type="double[][]" line="613"/>
            </method>
            <method name="testArrayEquals" type="void" line="754"/>
            <method name="testArrayEqualsIncludingNaN" type="void" line="775"/>
            <method name="testNormalizeArray" type="void" line="793">
                <comment line="804">
                    Ignore NaNs                    
                </comment>
                <comment line="810">
                    Zero sum -&gt; MathArithmeticException                    
                </comment>
                <comment line="817">
                    Infinite elements -&gt; MathArithmeticException                    
                </comment>
                <comment line="824">
                    Infinite target -&gt; MathIllegalArgumentException                    
                </comment>
                <comment line="830">
                    NaN target -&gt; MathIllegalArgumentException                    
                </comment>
                <declaration name="testValues1" type="double[]" line="794"/>
                <declaration name="testValues2" type="double[]" line="799"/>
                <declaration name="testValues3" type="double[]" line="805"/>
                <declaration name="zeroSum" type="double[]" line="811"/>
                <scope line="812"/>
                <scope line="815"/>
                <declaration name="hasInf" type="double[]" line="818"/>
                <scope line="819"/>
                <scope line="822"/>
                <scope line="825"/>
                <scope line="828"/>
                <scope line="831"/>
                <scope line="834"/>
            </method>
        </class>
    </source>