<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.util">
        <import package="java.util.Arrays"/>
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MathArithmeticException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.exception.NoDataException"/>
        <import package="org.apache.commons.math3.exception.NonMonotonicSequenceException"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.random.Well1024a"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="MathArraysTest" line="31">
            <comment line="592">
                MATH-1005                
            </comment>
            <javadoc line="31">
                Test cases for the {@link MathArrays} class.                
                <version>
                    $Id: MathArraysTest.java 1540167 2013-11-08 20:00:08Z tn $                    
                </version>
            </javadoc>
            <declaration name="testArray" type="double[]" line="38"/>
            <declaration name="testWeightsArray" type="double[]" line="39"/>
            <declaration name="testNegativeWeightsArray" type="double[]" line="40"/>
            <declaration name="nullArray" type="double[]" line="41"/>
            <declaration name="singletonArray" type="double[]" line="42"/>
            <method name="testScale" type="void" line="45">
                <comment line="53">
                    Make sure test has not changed                    
                </comment>
                <comment line="58">
                    Test scaled values                    
                </comment>
                <declaration name="test" type="double[]" line="46"/>
                <declaration name="correctTest" type="double[]" line="47"/>
                <declaration name="correctScaled" type="double[]" line="48"/>
                <declaration name="scaled" type="double[]" line="50"/>
                <scope line="53"/>
                <scope line="58"/>
            </method>
            <method name="testScaleInPlace" type="void" line="64">
                <comment line="70">
                    Make sure test has changed                    
                </comment>
                <declaration name="test" type="double[]" line="65"/>
                <declaration name="correctScaled" type="double[]" line="66"/>
                <scope line="70"/>
            </method>
            <method name="testEbeAddPrecondition" type="void" line="76"/>
            <method name="testEbeSubtractPrecondition" type="void" line="80"/>
            <method name="testEbeMultiplyPrecondition" type="void" line="84"/>
            <method name="testEbeDividePrecondition" type="void" line="88"/>
            <method name="testEbeAdd" type="void" line="93">
                <declaration name="a" type="double[]" line="94"/>
                <declaration name="b" type="double[]" line="95"/>
                <declaration name="r" type="double[]" line="96"/>
                <scope line="98"/>
            </method>
            <method name="testEbeSubtract" type="void" line="103">
                <declaration name="a" type="double[]" line="104"/>
                <declaration name="b" type="double[]" line="105"/>
                <declaration name="r" type="double[]" line="106"/>
                <scope line="108"/>
            </method>
            <method name="testEbeMultiply" type="void" line="113">
                <declaration name="a" type="double[]" line="114"/>
                <declaration name="b" type="double[]" line="115"/>
                <declaration name="r" type="double[]" line="116"/>
                <scope line="118"/>
            </method>
            <method name="testEbeDivide" type="void" line="123">
                <declaration name="a" type="double[]" line="124"/>
                <declaration name="b" type="double[]" line="125"/>
                <declaration name="r" type="double[]" line="126"/>
                <scope line="128"/>
            </method>
            <method name="testL1DistanceDouble" type="void" line="134">
                <declaration name="p1" type="double[]" line="135"/>
                <declaration name="p2" type="double[]" line="136"/>
            </method>
            <method name="testL1DistanceInt" type="void" line="141">
                <declaration name="p1" type="int[]" line="142"/>
                <declaration name="p2" type="int[]" line="143"/>
            </method>
            <method name="testL2DistanceDouble" type="void" line="148">
                <declaration name="p1" type="double[]" line="149"/>
                <declaration name="p2" type="double[]" line="150"/>
            </method>
            <method name="testL2DistanceInt" type="void" line="155">
                <declaration name="p1" type="int[]" line="156"/>
                <declaration name="p2" type="int[]" line="157"/>
            </method>
            <method name="testLInfDistanceDouble" type="void" line="162">
                <declaration name="p1" type="double[]" line="163"/>
                <declaration name="p2" type="double[]" line="164"/>
            </method>
            <method name="testLInfDistanceInt" type="void" line="169">
                <declaration name="p1" type="int[]" line="170"/>
                <declaration name="p2" type="int[]" line="171"/>
            </method>
            <method name="testCheckOrder" type="void" line="176">
                <comment line="192">
                    Expected                    
                </comment>
                <comment line="199">
                    Expected                    
                </comment>
                <comment line="206">
                    Expected                    
                </comment>
                <comment line="213">
                    Expected                    
                </comment>
                <comment line="220">
                    Expected                    
                </comment>
                <scope line="186"/>
                <scope line="190"/>
                <scope line="193"/>
                <scope line="197"/>
                <scope line="200"/>
                <scope line="204"/>
                <scope line="207"/>
                <scope line="211"/>
                <scope line="214"/>
                <scope line="218"/>
            </method>
            <method name="testIsMonotonic" type="void" line="224"/>
            <method name="testIsMonotonicComparable" type="void" line="244"/>
            <method name="testCheckRectangular" type="void" line="300">
                <comment line="312">
                    Expected                    
                </comment>
                <comment line="318">
                    Expected                    
                </comment>
                <declaration name="rect" type="long[][]" line="301"/>
                <declaration name="ragged" type="long[][]" line="302"/>
                <declaration name="nullArray" type="long[][]" line="303"/>
                <declaration name="empty" type="long[][]" line="304"/>
                <scope line="307"/>
                <scope line="310"/>
                <scope line="313"/>
                <scope line="316"/>
            </method>
            <method name="testCheckPositive" type="void" line="322">
                <comment line="334">
                    Expected                    
                </comment>
                <comment line="340">
                    Expected                    
                </comment>
                <declaration name="positive" type="double[]" line="323"/>
                <declaration name="nonNegative" type="double[]" line="324"/>
                <declaration name="nullArray" type="double[]" line="325"/>
                <declaration name="empty" type="double[]" line="326"/>
                <scope line="329"/>
                <scope line="332"/>
                <scope line="335"/>
                <scope line="338"/>
            </method>
            <method name="testCheckNonNegative" type="void" line="344">
                <comment line="356">
                    Expected                    
                </comment>
                <comment line="362">
                    Expected                    
                </comment>
                <declaration name="nonNegative" type="long[]" line="345"/>
                <declaration name="hasNegative" type="long[]" line="346"/>
                <declaration name="nullArray" type="long[]" line="347"/>
                <declaration name="empty" type="long[]" line="348"/>
                <scope line="351"/>
                <scope line="354"/>
                <scope line="357"/>
                <scope line="360"/>
            </method>
            <method name="testCheckNonNegative2D" type="void" line="366">
                <comment line="378">
                    Expected                    
                </comment>
                <comment line="384">
                    Expected                    
                </comment>
                <declaration name="nonNegative" type="long[][]" line="367"/>
                <declaration name="hasNegative" type="long[][]" line="368"/>
                <declaration name="nullArray" type="long[][]" line="369"/>
                <declaration name="empty" type="long[][]" line="370"/>
                <scope line="373"/>
                <scope line="376"/>
                <scope line="379"/>
                <scope line="382"/>
            </method>
            <method name="testSortInPlace" type="void" line="388">
                <declaration name="x1" type="double[]" line="389"/>
                <declaration name="x2" type="double[]" line="390"/>
                <declaration name="x3" type="double[]" line="391"/>
            </method>
            <method name="testSortInPlaceDecresasingOrder" type="void" line="417">
                <declaration name="x1" type="double[]" line="418"/>
                <declaration name="x2" type="double[]" line="419"/>
                <declaration name="x3" type="double[]" line="420"/>
            </method>
            <method name="testSortInPlaceExample" type="void" line="449">
                <comment line="449">
                                        
                </comment>
                <declaration name="x" type="double[]" line="450"/>
                <declaration name="y" type="double[]" line="451"/>
                <declaration name="z" type="double[]" line="452"/>
                <declaration name="sx" type="double[]" line="454"/>
                <declaration name="sy" type="double[]" line="455"/>
                <declaration name="sz" type="double[]" line="456"/>
            </method>
            <method name="testSortInPlaceFailures" type="void" line="463">
                <comment line="473">
                    expected                    
                </comment>
                <comment line="479">
                    expected                    
                </comment>
                <comment line="485">
                    expected                    
                </comment>
                <declaration name="nullArray" type="double[]" line="464"/>
                <declaration name="one" type="double[]" line="465"/>
                <declaration name="two" type="double[]" line="466"/>
                <declaration name="onep" type="double[]" line="467"/>
                <scope line="468"/>
                <scope line="471"/>
                <scope line="474"/>
                <scope line="477"/>
                <scope line="480"/>
                <scope line="483"/>
            </method>
            <method name="testCopyOfInt" type="void" line="489">
                <declaration name="source" type="int[]" line="490"/>
                <declaration name="dest" type="int[]" line="493"/>
                <scope line="496"/>
            </method>
            <method name="testCopyOfInt2" type="void" line="502">
                <declaration name="source" type="int[]" line="503"/>
                <declaration name="offset" type="int" line="506"/>
                <declaration name="dest" type="int[]" line="507"/>
                <scope line="510"/>
            </method>
            <method name="testCopyOfInt3" type="void" line="516">
                <declaration name="source" type="int[]" line="517"/>
                <declaration name="offset" type="int" line="520"/>
                <declaration name="dest" type="int[]" line="521"/>
                <scope line="524"/>
                <scope line="527"/>
            </method>
            <method name="testCopyOfDouble" type="void" line="533">
                <declaration name="source" type="double[]" line="534"/>
                <declaration name="dest" type="double[]" line="542"/>
                <scope line="545"/>
            </method>
            <method name="testCopyOfDouble2" type="void" line="551">
                <declaration name="source" type="double[]" line="552"/>
                <declaration name="offset" type="int" line="560"/>
                <declaration name="dest" type="double[]" line="561"/>
                <scope line="564"/>
            </method>
            <method name="testCopyOfDouble3" type="void" line="570">
                <declaration name="source" type="double[]" line="571"/>
                <declaration name="offset" type="int" line="579"/>
                <declaration name="dest" type="double[]" line="580"/>
                <scope line="583"/>
                <scope line="586"/>
            </method>
            <method name="testLinearCombinationWithSingleElementArray" type="void" line="593">
                <declaration name="a" type="double[]" line="594"/>
                <declaration name="b" type="double[]" line="595"/>
            </method>
            <method name="testLinearCombination1" type="void" line="601">
                <declaration name="a" type="double[]" line="602"/>
                <declaration name="b" type="double[]" line="607"/>
                <declaration name="abSumInline" type="double" line="613"/>
                <declaration name="abSumArray" type="double" line="616"/>
                <declaration name="naive" type="double" line="621"/>
            </method>
            <method name="testLinearCombination2" type="void" line="627">
                <comment line="629">
                    we compare accurate versus naive dot product implementations
                     on regular vectors (i.e. not extreme cases like in the previous test)                    
                </comment>
                <declaration name="random" type="Well1024a" line="630"/>
                <scope line="632">
                    <declaration name="ux" type="double" line="633"/>
                    <declaration name="uy" type="double" line="634"/>
                    <declaration name="uz" type="double" line="635"/>
                    <declaration name="vx" type="double" line="636"/>
                    <declaration name="vy" type="double" line="637"/>
                    <declaration name="vz" type="double" line="638"/>
                    <declaration name="sInline" type="double" line="639"/>
                    <declaration name="sArray" type="double" line="642"/>
                </scope>
            </method>
            <method name="testLinearCombinationInfinite" type="void" line="649">
                <declaration name="a" type="double[][]" line="650"/>
                <declaration name="b" type="double[][]" line="660"/>
            </method>
            <method name="testArrayEquals" type="void" line="801"/>
            <method name="testArrayEqualsIncludingNaN" type="void" line="822"/>
            <method name="testNormalizeArray" type="void" line="840">
                <comment line="852">
                    Ignore NaNs                    
                </comment>
                <comment line="858">
                    Zero sum -&gt; MathArithmeticException                    
                </comment>
                <comment line="865">
                    Infinite elements -&gt; MathArithmeticException                    
                </comment>
                <comment line="872">
                    Infinite target -&gt; MathIllegalArgumentException                    
                </comment>
                <comment line="878">
                    NaN target -&gt; MathIllegalArgumentException                    
                </comment>
                <declaration name="testValues1" type="double[]" line="841"/>
                <declaration name="testValues2" type="double[]" line="846"/>
                <declaration name="testValues3" type="double[]" line="852"/>
                <declaration name="zeroSum" type="double[]" line="858"/>
                <scope line="859"/>
                <scope line="862"/>
                <declaration name="hasInf" type="double[]" line="865"/>
                <scope line="866"/>
                <scope line="869"/>
                <scope line="872"/>
                <scope line="875"/>
                <scope line="878"/>
                <scope line="881"/>
            </method>
            <method name="testConvolve" type="void" line="885">
                <comment line="887">
                    Test Case (obtained via SciPy)
                     x=[1.2,-1.8,1.4]
                     h=[1,0.8,0.5,0.3]
                     convolve(x,h) -&gt; array([ 1.2 , -0.84,  0.56,  0.58,  0.16,  0.42])                    
                </comment>
                <comment line="911">
                    expected behavior                    
                </comment>
                <comment line="918">
                    expected behavior                    
                </comment>
                <comment line="925">
                    expected behavior                    
                </comment>
                <comment line="932">
                    expected behavior                    
                </comment>
                <comment line="939">
                    expected behavior                    
                </comment>
                <declaration name="x1" type="double[]" line="891"/>
                <declaration name="h1" type="double[]" line="892"/>
                <declaration name="y1" type="double[]" line="893"/>
                <declaration name="tolerance" type="double" line="894"/>
                <declaration name="yActual" type="double[]" line="896"/>
                <declaration name="x2" type="double[]" line="899"/>
                <declaration name="h2" type="double[]" line="900"/>
                <declaration name="y2" type="double[]" line="901"/>
                <scope line="906"/>
                <scope line="909"/>
                <scope line="913"/>
                <scope line="916"/>
                <scope line="920"/>
                <scope line="923"/>
                <scope line="927"/>
                <scope line="930"/>
                <scope line="934"/>
                <scope line="937"/>
            </method>
            <method name="testShuffleTail" type="void" line="943">
                <comment line="950">
                    Ensure that all entries below index &quot;start&quot; did not move.                    
                </comment>
                <comment line="955">
                    Ensure that at least one entry has moved.                    
                </comment>
                <declaration name="orig" type="int[]" line="944"/>
                <declaration name="list" type="int[]" line="945"/>
                <declaration name="start" type="int" line="946"/>
                <scope line="950"/>
                <declaration name="ok" type="boolean" line="955"/>
                <scope line="956">
                    <scope line="957"/>
                </scope>
            </method>
            <method name="testShuffleHead" type="void" line="966">
                <comment line="973">
                    Ensure that all entries above index &quot;start&quot; did not move.                    
                </comment>
                <comment line="978">
                    Ensure that at least one entry has moved.                    
                </comment>
                <declaration name="orig" type="int[]" line="967"/>
                <declaration name="list" type="int[]" line="968"/>
                <declaration name="start" type="int" line="969"/>
                <scope line="973"/>
                <declaration name="ok" type="boolean" line="978"/>
                <scope line="979">
                    <scope line="980"/>
                </scope>
            </method>
            <method name="testNatural" type="void" line="989">
                <declaration name="n" type="int" line="990"/>
                <declaration name="expected" type="int[]" line="991"/>
                <declaration name="natural" type="int[]" line="993"/>
                <scope line="994"/>
            </method>
            <method name="testNaturalZero" type="void" line="1000">
                <declaration name="natural" type="int[]" line="1001"/>
            </method>
            <method name="testVerifyValuesPositive" type="void" line="1006">
                <scope line="1007">
                    <scope line="1008"/>
                </scope>
            </method>
            <method name="testVerifyValuesNegative" type="void" line="1017">
                <comment line="1022">
                    start past end                    
                </comment>
                <comment line="1025">
                    expected                    
                </comment>
                <comment line="1028">
                    end past end                    
                </comment>
                <comment line="1031">
                    expected                    
                </comment>
                <comment line="1034">
                    start negative                    
                </comment>
                <comment line="1037">
                    expected                    
                </comment>
                <comment line="1040">
                    length negative                    
                </comment>
                <comment line="1043">
                    expected                    
                </comment>
                <comment line="1046">
                    null array                    
                </comment>
                <comment line="1049">
                    expected                    
                </comment>
                <comment line="1052">
                    null weights array                    
                </comment>
                <comment line="1055">
                    expected                    
                </comment>
                <comment line="1058">
                    weights.length != value.length                    
                </comment>
                <comment line="1061">
                    expected                    
                </comment>
                <comment line="1064">
                    can&apos;t have negative weights                    
                </comment>
                <comment line="1067">
                    expected                    
                </comment>
                <scope line="1020"/>
                <scope line="1023"/>
                <scope line="1026"/>
                <scope line="1029"/>
                <scope line="1032"/>
                <scope line="1035"/>
                <scope line="1038"/>
                <scope line="1041"/>
                <scope line="1044"/>
                <scope line="1047"/>
                <scope line="1050"/>
                <scope line="1053"/>
                <scope line="1056"/>
                <scope line="1059"/>
                <scope line="1062"/>
                <scope line="1065"/>
            </method>
        </class>
    </source>