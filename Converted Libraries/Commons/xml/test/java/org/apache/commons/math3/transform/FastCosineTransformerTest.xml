<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.transform">
        <import package="java.util.Arrays"/>
        <import package="java.util.Collection"/>
        <import package="org.apache.commons.math3.analysis.UnivariateFunction"/>
        <import package="org.apache.commons.math3.analysis.function.Sin"/>
        <import package="org.apache.commons.math3.analysis.function.Sinc"/>
        <import package="org.apache.commons.math3.exception.MathIllegalStateException"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <import package="org.junit.runner.RunWith"/>
        <import package="org.junit.runners.Parameterized"/>
        <import package="org.junit.runners.Parameterized.Parameters"/>
        <class name="FastCosineTransformerTest" line="14">
            <extends class="RealTransformerAbstractTest"/>
            <javadoc line="14">
                Test case for fast cosine transformer.
                  &lt;p&gt;
                  FCT algorithm is exact, the small tolerance number is used only to account
                  for round-off errors.                
                <version>
                    $Id: FastCosineTransformerTest.java 1374632 2012-08-18 18:11:11Z luc $                    
                </version>
            </javadoc>
            <declaration name="normalization" type="DctNormalization" line="22"/>
            <declaration name="invalidDataSize" type="int[]" line="23"/>
            <declaration name="relativeTolerance" type="double[]" line="24"/>
            <declaration name="validDataSize" type="int[]" line="25"/>
            <method name="FastCosineTransformerTest" type="constructor" line="26">
                <params>
                    <param name="normalization" type="DctNormalization"/>
                </params>
            </method>
            <javadoc line="32">
                Returns an array containing {@code true, false} in order to check both
                  standard and orthogonal DCTs.                
                <return>
                    an array of parameters for this parameterized test                    
                </return>
            </javadoc>
            <method name="data" type="Collection<Object[]>" line="37">
                <declaration name="normalization" type="DctNormalization[]" line="38"/>
                <declaration name="data" type="Object[][]" line="39"/>
                <scope line="40"/>
            </method>
            <method name="createRealTransformer" type="RealTransformer" line="45"/>
            <method name="getInvalidDataSize" type="int" line="48">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="getNumberOfInvalidDataSizes" type="int" line="51"/>
            <method name="getNumberOfValidDataSizes" type="int" line="54"/>
            <method name="getRelativeTolerance" type="double" line="57">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="getValidDataSize" type="int" line="60">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="getValidFunction" type="UnivariateFunction" line="63"/>
            <method name="getValidLowerBound" type="double" line="66"/>
            <method name="getValidUpperBound" type="double" line="69"/>
            <method name="transform" type="double[]" line="72">
                <params>
                    <param name="x" type="double[]"/>
                    <param name="type" type="TransformType"/>
                </params>
                <declaration name="n" type="int" line="73"/>
                <declaration name="y" type="double[]" line="74"/>
                <declaration name="cos" type="double[]" line="75"/>
                <scope line="76"/>
                <declaration name="sgn" type="int" line="79"/>
                <scope line="80">
                    <declaration name="yj" type="double" line="81"/>
                    <scope line="82"/>
                </scope>
                <declaration name="s" type="double" line="88"/>
                <scope line="89">
                    <scope line="90"/>
                    <scope line="93"/>
                    <scope line="96"/>
                </scope>
                <scope line="100">
                    <scope line="101"/>
                    <scope line="104"/>
                    <scope line="107"/>
                </scope>
                <scope line="111"/>
            </method>
            <javadoc line="117">
                Test of transformer for the ad hoc data.                
            </javadoc>
            <method name="testAdHocData" type="void" line="120">
                <declaration name="transformer" type="FastCosineTransformer" line="121"/>
                <declaration name="result" type="double" line="123"/>
                <declaration name="x" type="double" line="124"/>
                <declaration name="y" type="double" line="125"/>
                <scope line="127"/>
                <scope line="131"/>
                <scope line="137"/>
                <scope line="141"/>
            </method>
            <javadoc line="145">
                Test of parameters for the transformer.                
            </javadoc>
            <method name="testParameters" type="void" line="148">
                <declaration name="f" type="UnivariateFunction" line="149"/>
                <declaration name="transformer" type="FastCosineTransformer" line="150"/>
                <scope line="152"/>
                <scope line="156"/>
                <scope line="158"/>
                <scope line="162"/>
                <scope line="164"/>
                <scope line="168"/>
            </method>
            <javadoc line="171">
                Test of transformer for the sine function.                
            </javadoc>
            <method name="testSinFunction" type="void" line="174">
                <declaration name="f" type="UnivariateFunction" line="175"/>
                <declaration name="transformer" type="FastCosineTransformer" line="176"/>
                <declaration name="min" type="double" line="178"/>
                <declaration name="N" type="int" line="179"/>
                <declaration name="expected" type="double" line="180"/>
                <scope line="184"/>
                <scope line="190"/>
            </method>
        </class>
    </source>