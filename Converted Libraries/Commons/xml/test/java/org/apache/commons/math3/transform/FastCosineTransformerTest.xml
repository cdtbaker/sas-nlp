<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.transform">
        <import package="java.util.Arrays"/>
        <import package="java.util.Collection"/>
        <import package="org.apache.commons.math3.analysis.UnivariateFunction"/>
        <import package="org.apache.commons.math3.analysis.function.Sin"/>
        <import package="org.apache.commons.math3.analysis.function.Sinc"/>
        <import package="org.apache.commons.math3.exception.MathIllegalStateException"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <import package="org.junit.runner.RunWith"/>
        <import package="org.junit.runners.Parameterized"/>
        <import package="org.junit.runners.Parameterized.Parameters"/>
        <class name="FastCosineTransformerTest" line="33">
            <extends class="RealTransformerAbstractTest"/>
            <comment line="173">
                Additional tests.                
            </comment>
            <javadoc line="33">
                Test case for fast cosine transformer.
                  &lt;p&gt;
                  FCT algorithm is exact, the small tolerance number is used only to account
                  for round-off errors.                
                <version>
                    $Id: FastCosineTransformerTest.java 1374632 2012-08-18 18:11:11Z luc $                    
                </version>
            </javadoc>
            <declaration name="normalization" type="DctNormalization" line="45"/>
            <declaration name="invalidDataSize" type="int[]" line="47"/>
            <declaration name="relativeTolerance" type="double[]" line="49"/>
            <declaration name="validDataSize" type="int[]" line="51"/>
            <method name="FastCosineTransformerTest" type="constructor" line="53">
                <params>
                    <param name="normalization" type="DctNormalization"/>
                </params>
            </method>
            <javadoc line="66">
                Returns an array containing {@code true, false} in order to check both
                  standard and orthogonal DCTs.                
                <return>
                    an array of parameters for this parameterized test                    
                </return>
            </javadoc>
            <method name="data" type="Collection<Object[]>" line="73">
                <declaration name="normalization" type="DctNormalization[]" line="74"/>
                <declaration name="data" type="Object[][]" line="75"/>
                <scope line="76"/>
            </method>
            <method name="createRealTransformer" type="RealTransformer" line="83"/>
            <method name="getInvalidDataSize" type="int" line="88">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="getNumberOfInvalidDataSizes" type="int" line="93"/>
            <method name="getNumberOfValidDataSizes" type="int" line="98"/>
            <method name="getRelativeTolerance" type="double" line="103">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="getValidDataSize" type="int" line="108">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="getValidFunction" type="UnivariateFunction" line="113"/>
            <method name="getValidLowerBound" type="double" line="118"/>
            <method name="getValidUpperBound" type="double" line="123"/>
            <method name="transform" type="double[]" line="128">
                <params>
                    <param name="x" type="double[]"/>
                    <param name="type" type="TransformType"/>
                </params>
                <comment line="162">
                    Should never occur. This clause is a safeguard in case other
                     types are used to TransformType (which should not be done).                    
                </comment>
                <declaration name="n" type="int" line="129"/>
                <declaration name="y" type="double[]" line="130"/>
                <declaration name="cos" type="double[]" line="131"/>
                <scope line="132"/>
                <declaration name="sgn" type="int" line="135"/>
                <scope line="136">
                    <declaration name="yj" type="double" line="137"/>
                    <scope line="138"/>
                </scope>
                <declaration name="s" type="double" line="144"/>
                <scope line="145">
                    <scope line="146"/>
                    <scope line="148"/>
                    <scope line="150"/>
                </scope>
                <scope line="153">
                    <scope line="154"/>
                    <scope line="156"/>
                    <scope line="158"/>
                </scope>
                <scope line="161"/>
            </method>
            <javadoc line="176">
                Test of transformer for the ad hoc data.                
            </javadoc>
            <method name="testAdHocData" type="void" line="178">
                <declaration name="transformer" type="FastCosineTransformer" line="179"/>
                <declaration name="result" type="double" line="181"/>
                <declaration name="x" type="double" line="183"/>
                <declaration name="y" type="double" line="186"/>
                <scope line="194"/>
                <scope line="199"/>
                <scope line="207"/>
                <scope line="212"/>
            </method>
            <javadoc line="217">
                Test of parameters for the transformer.                
            </javadoc>
            <method name="testParameters" type="void" line="220">
                <comment line="226">
                    bad interval                    
                </comment>
                <comment line="230">
                    expected                    
                </comment>
                <comment line="233">
                    bad samples number                    
                </comment>
                <comment line="238">
                    expected                    
                </comment>
                <comment line="241">
                    bad samples number                    
                </comment>
                <comment line="246">
                    expected                    
                </comment>
                <declaration name="f" type="UnivariateFunction" line="221"/>
                <declaration name="transformer" type="FastCosineTransformer" line="222"/>
                <scope line="225"/>
                <scope line="229"/>
                <scope line="232"/>
                <scope line="237"/>
                <scope line="240"/>
                <scope line="245"/>
            </method>
            <javadoc line="250">
                Test of transformer for the sine function.                
            </javadoc>
            <method name="testSinFunction" type="void" line="252">
                <declaration name="f" type="UnivariateFunction" line="253"/>
                <declaration name="transformer" type="FastCosineTransformer" line="254"/>
                <declaration name="min" type="double" line="256"/>
                <declaration name="N" type="int" line="257"/>
                <declaration name="expected" type="double" line="259"/>
                <scope line="267"/>
                <scope line="274"/>
            </method>
        </class>
    </source>