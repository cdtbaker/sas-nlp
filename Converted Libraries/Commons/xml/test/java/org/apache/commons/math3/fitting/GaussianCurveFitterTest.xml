<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.fitting">
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.exception.TooManyIterationsException"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="GaussianCurveFitterTest" line="24">
            <javadoc line="24">
                Tests {@link GaussianCurveFitter}.                
                <version>
                    $Id: GaussianCurveFitterTest.java 1516896 2013-08-23 15:39:55Z erans $                    
                </version>
            </javadoc>
            <declaration name="DATASET1" type="double[][]" line="30"/>
            <javadoc line="30">
                Good data.                
            </javadoc>
            <declaration name="DATASET2" type="double[][]" line="63"/>
            <javadoc line="63">
                Poor data: right of peak not symmetric with left of peak.                
            </javadoc>
            <declaration name="DATASET3" type="double[][]" line="97"/>
            <javadoc line="97">
                Poor data: long tails.                
            </javadoc>
            <declaration name="DATASET4" type="double[][]" line="146"/>
            <javadoc line="146">
                Poor data: right of peak is missing.                
            </javadoc>
            <declaration name="DATASET5" type="double[][]" line="163"/>
            <javadoc line="163">
                Good data, but few points.                
            </javadoc>
            <javadoc line="179">
                Basic.                
            </javadoc>
            <method name="testFit01" type="void" line="183">
                <declaration name="fitter" type="GaussianCurveFitter" line="184"/>
                <declaration name="parameters" type="double[]" line="185"/>
            </method>
            <method name="testWithMaxIterations1" type="void" line="193">
                <declaration name="maxIter" type="int" line="194"/>
                <declaration name="init" type="double[]" line="195"/>
                <declaration name="fitter" type="GaussianCurveFitter" line="197"/>
                <declaration name="parameters" type="double[]" line="198"/>
            </method>
            <method name="testWithMaxIterations2" type="void" line="209">
                <comment line="211">
                    Too few iterations.                    
                </comment>
                <declaration name="maxIter" type="int" line="210"/>
                <declaration name="init" type="double[]" line="211"/>
                <declaration name="fitter" type="GaussianCurveFitter" line="213"/>
                <declaration name="parameters" type="double[]" line="214"/>
            </method>
            <method name="testWithStartPoint" type="void" line="221">
                <declaration name="init" type="double[]" line="222"/>
                <declaration name="fitter" type="GaussianCurveFitter" line="224"/>
                <declaration name="parameters" type="double[]" line="225"/>
            </method>
            <javadoc line="234">
                Zero points is not enough observed points.                
            </javadoc>
            <method name="testFit02" type="void" line="238"/>
            <javadoc line="242">
                Two points is not enough observed points.                
            </javadoc>
            <method name="testFit03" type="void" line="246">
                <declaration name="fitter" type="GaussianCurveFitter" line="247"/>
            </method>
            <javadoc line="254">
                Poor data: right of peak not symmetric with left of peak.                
            </javadoc>
            <method name="testFit04" type="void" line="258">
                <declaration name="fitter" type="GaussianCurveFitter" line="259"/>
                <declaration name="parameters" type="double[]" line="260"/>
            </method>
            <javadoc line="267">
                Poor data: long tails.                
            </javadoc>
            <method name="testFit05" type="void" line="271">
                <declaration name="fitter" type="GaussianCurveFitter" line="272"/>
                <declaration name="parameters" type="double[]" line="273"/>
            </method>
            <javadoc line="280">
                Poor data: right of peak is missing.                
            </javadoc>
            <method name="testFit06" type="void" line="284">
                <declaration name="fitter" type="GaussianCurveFitter" line="285"/>
                <declaration name="parameters" type="double[]" line="286"/>
            </method>
            <javadoc line="293">
                Basic with smaller dataset.                
            </javadoc>
            <method name="testFit07" type="void" line="297">
                <declaration name="fitter" type="GaussianCurveFitter" line="298"/>
                <declaration name="parameters" type="double[]" line="299"/>
            </method>
            <method name="testMath519" type="void" line="307">
                <comment line="309">
                    The optimizer will try negative sigma values but &quot;GaussianCurveFitter&quot;
                     will catch the raised exceptions and return NaN values instead.                    
                </comment>
                <declaration name="data" type="double[]" line="311"/>
                <declaration name="obs" type="WeightedObservedPoints" line="341"/>
                <scope line="342"/>
                <declaration name="p" type="double[]" line="345"/>
            </method>
            <method name="testMath798" type="void" line="352">
                <comment line="354">
                    When the data points are not commented out below, the fit stalls.
                     This is expected however, since the whole dataset hardly looks like
                     a Gaussian.
                     When commented out, the fit proceeds fine.                    
                </comment>
                <comment line="362">
                    obs.add(0.68, 0.0);                    
                </comment>
                <comment line="364">
                    obs.add(1.59, 0.0);                    
                </comment>
                <comment line="366">
                    obs.add(2.50, 0.0);                    
                </comment>
                <comment line="368">
                    obs.add(3.41, 0.0);                    
                </comment>
                <comment line="370">
                    obs.add(4.32, 0.0);                    
                </comment>
                <comment line="375">
                    Values are copied from a previous run of this test.                    
                </comment>
                <declaration name="obs" type="WeightedObservedPoints" line="358"/>
                <declaration name="p" type="double[]" line="372"/>
            </method>
            <javadoc line="380">
                Adds the specified points to specified &lt;code&gt;GaussianCurveFitter&lt;/code&gt;
                  instance.                
                <param>
                    points Data points where first dimension is a point index and
                      second dimension is an array of length two representing the point
                      with the first value corresponding to X and the second value
                      corresponding to Y.                    
                </param>
                <return>
                    the collection of observed points.                    
                </return>
            </javadoc>
            <method name="createDataset" type="WeightedObservedPoints" line="390">
                <params>
                    <param name="points" type="double[][]"/>
                </params>
                <declaration name="obs" type="WeightedObservedPoints" line="391"/>
                <scope line="392"/>
            </method>
        </class>
    </source>