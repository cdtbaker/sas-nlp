<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="NormalDistributionTest" line="24">
            <extends class="RealDistributionAbstractTest"/>
            <comment line="34">
                -------------- Implementations for abstract methods -----------------------                
            </comment>
            <comment line="64">
                --------------------- Override tolerance  --------------                
            </comment>
            <comment line="72">
                ---------------------------- Additional test cases -------------------------                
            </comment>
            <javadoc line="24">
                Test cases for {@link NormalDistribution}. Extends{@link RealDistributionAbstractTest}. See class javadoc of that class
                  for details.                
                <version>
                    $Id: NormalDistributionTest.java 1364028 2012-07-21 00:42:49Z erans $                    
                </version>
            </javadoc>
            <javadoc line="35">
                Creates the default real distribution instance to use in tests.                
            </javadoc>
            <method name="makeDistribution" type="NormalDistribution" line="37"/>
            <javadoc line="41">
                Creates the default cumulative probability distribution test input values                
            </javadoc>
            <method name="makeCumulativeTestPoints" type="double[]" line="43">
                <comment line="44">
                    quantiles computed using R                    
                </comment>
            </method>
            <javadoc line="49">
                Creates the default cumulative probability density test expected values                
            </javadoc>
            <method name="makeCumulativeTestValues" type="double[]" line="51"/>
            <javadoc line="56">
                Creates the default probability density test expected values                
            </javadoc>
            <method name="makeDensityTestValues" type="double[]" line="58"/>
            <declaration name="defaultTolerance" type="double" line="64"/>
            <method name="setUp" type="void" line="66"/>
            <method name="verifyQuantiles" type="void" line="73">
                <comment line="80">
                    Quantiles computed using R (same as Mathematica)                    
                </comment>
                <declaration name="distribution" type="NormalDistribution" line="74"/>
                <declaration name="mu" type="double" line="75"/>
                <declaration name="sigma" type="double" line="76"/>
            </method>
            <method name="testQuantiles" type="void" line="87"/>
            <method name="testInverseCumulativeProbabilityExtremes" type="void" line="107"/>
            <method name="testGetMean" type="void" line="115">
                <declaration name="distribution" type="NormalDistribution" line="116"/>
            </method>
            <method name="testGetStandardDeviation" type="void" line="121">
                <declaration name="distribution" type="NormalDistribution" line="122"/>
            </method>
            <method name="testPreconditions" type="void" line="127"/>
            <method name="testDensity" type="void" line="132">
                <comment line="134">
                    R 2.5: print(dnorm(c(-2,-1,0,1,2)), digits=10)                    
                </comment>
                <comment line="136">
                    R 2.5: print(dnorm(c(-2,-1,0,1,2), mean=1.1), digits=10)                    
                </comment>
                <declaration name="x" type="double[]" line="133"/>
            </method>
            <method name="checkDensity" type="void" line="140">
                <params>
                    <param name="mean" type="double"/>
                    <param name="sd" type="double"/>
                    <param name="x" type="double[]"/>
                    <param name="expected" type="double[]"/>
                </params>
                <declaration name="d" type="NormalDistribution" line="141"/>
                <scope line="142"/>
            </method>
            <javadoc line="147">
                Check to make sure top-coding of extreme values works correctly.
                  Verifies fixes for JIRA MATH-167, MATH-414                
            </javadoc>
            <method name="testExtremeValues" type="void" line="152">
                <comment line="154">
                    make sure no convergence exception                    
                </comment>
                <comment line="157">
                    make sure not top-coded                    
                </comment>
                <comment line="158">
                    For i = 10, due to bad tail precision in erf (MATH-364), 1 is returned                    
                </comment>
                <comment line="159">
                    TODO: once MATH-364 is resolved, replace 9 with 30                    
                </comment>
                <comment line="163">
                    make sure top coding not reversed                    
                </comment>
                <declaration name="distribution" type="NormalDistribution" line="153"/>
                <scope line="154">
                    <declaration name="lowerTail" type="double" line="155"/>
                    <declaration name="upperTail" type="double" line="156"/>
                    <scope line="157"/>
                    <scope line="163"/>
                </scope>
            </method>
            <method name="testMath280" type="void" line="176">
                <declaration name="normal" type="NormalDistribution" line="177"/>
                <declaration name="result" type="double" line="178"/>
            </method>
            <method name="testMoments" type="void" line="189">
                <declaration name="tol" type="double" line="190"/>
                <declaration name="dist" type="NormalDistribution" line="191"/>
            </method>
        </class>
    </source>