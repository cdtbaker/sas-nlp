<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.descriptive">
        <import package="java.io.Serializable"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.stat.descriptive.UnivariateStatistic"/>
        <import package="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics"/>
        <import package="org.apache.commons.math3.util.DefaultTransformer"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.NumberTransformer"/>
        <class name="ListUnivariateImpl" line="30">
            <extends class="DescriptiveStatistics"/>
            <implements interface="Serializable"/>
            <javadoc line="30">
                @version $Id: ListUnivariateImpl.java 1334421 2012-05-05 13:41:04Z tn $                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="35"/>
            <javadoc line="35">
                Serializable version identifier                
            </javadoc>
            <declaration name="list" type="List&amp;lt;Object&amp;gt;" line="38"/>
            <javadoc line="38">
                Holds a reference to a list - GENERICs are going to make
                  our lives easier here as we could only accept List&lt;Number&gt;                
            </javadoc>
            <declaration name="transformer" type="NumberTransformer" line="44"/>
            <javadoc line="44">
                Number Transformer maps Objects to Number for us.                
            </javadoc>
            <javadoc line="47">
                No argument Constructor                
            </javadoc>
            <method name="ListUnivariateImpl" type="constructor" line="50"/>
            <javadoc line="54">
                Construct a ListUnivariate with a specific List.                
                <param>
                    list The list that will back this DescriptiveStatistics                    
                </param>
            </javadoc>
            <method name="ListUnivariateImpl" type="constructor" line="58">
                <params>
                    <param name="list" type="List&lt;Object&gt;"/>
                </params>
            </method>
            <javadoc line="62">
                Construct a ListUnivariate with a specific List.                
                <param>
                    list The list that will back this DescriptiveStatistics                    
                </param>
                <param>
                    transformer the number transformer used to convert the list items.                    
                </param>
            </javadoc>
            <method name="ListUnivariateImpl" type="constructor" line="67">
                <params>
                    <param name="list" type="List&lt;Object&gt;"/>
                    <param name="transformer" type="NumberTransformer"/>
                </params>
            </method>
            <javadoc line="73">
                {@inheritDoc}                
            </javadoc>
            <method name="getValues" type="double[]" line="75">
                <comment line="80">
                    If the window size is not INFINITE_WINDOW AND
                     the current list is larger that the window size, we need to
                     take into account only the last n elements of the list
                     as definied by windowSize                    
                </comment>
                <comment line="90">
                    Create an array to hold all values                    
                </comment>
                <declaration name="length" type="int" line="77"/>
                <declaration name="wSize" type="int" line="84"/>
                <scope line="85"/>
                <declaration name="copiedArray" type="double[]" line="90"/>
                <scope line="92"/>
            </method>
            <javadoc line="98">
                {@inheritDoc}                
            </javadoc>
            <method name="getElement" type="double" line="100">
                <params>
                    <param name="index" type="int"/>
                </params>
                <declaration name="value" type="double" line="102"/>
                <declaration name="calcIndex" type="int" line="104"/>
                <declaration name="wSize" type="int" line="106"/>
                <scope line="107"/>
                <scope line="112"/>
                <scope line="114"/>
            </method>
            <javadoc line="121">
                {@inheritDoc}                
            </javadoc>
            <method name="getN" type="long" line="123">
                <declaration name="n" type="int" line="124"/>
                <declaration name="wSize" type="int" line="126"/>
                <scope line="127">
                    <scope line="128"/>
                    <scope line="130"/>
                </scope>
                <scope line="133"/>
            </method>
            <javadoc line="139">
                {@inheritDoc}                
            </javadoc>
            <method name="addValue" type="void" line="141">
                <params>
                    <param name="v" type="double"/>
                </params>
            </method>
            <javadoc line="145">
                Adds an object to this list.                
                <param>
                    o Object to add to the list                    
                </param>
            </javadoc>
            <method name="addObject" type="void" line="149">
                <params>
                    <param name="o" type="Object"/>
                </params>
            </method>
            <javadoc line="153">
                Clears all statistics.
                  &lt;p&gt;
                  &lt;strong&gt;N.B.: &lt;/strong&gt; This method has the side effect of clearing the underlying list.                
            </javadoc>
            <method name="clear" type="void" line="159"/>
            <javadoc line="163">
                Apply the given statistic to this univariate collection.                
                <param>
                    stat the statistic to apply                    
                </param>
                <return>
                    the computed value of the statistic.                    
                </return>
            </javadoc>
            <method name="apply" type="double" line="169">
                <params>
                    <param name="stat" type="UnivariateStatistic"/>
                </params>
                <declaration name="v" type="double[]" line="170"/>
                <scope line="172"/>
            </method>
            <javadoc line="178">
                Access the number transformer.                
                <return>
                    the number transformer.                    
                </return>
            </javadoc>
            <method name="getTransformer" type="NumberTransformer" line="182"/>
            <javadoc line="186">
                Modify the number transformer.                
                <param>
                    transformer the new number transformer.                    
                </param>
            </javadoc>
            <method name="setTransformer" type="void" line="190">
                <params>
                    <param name="transformer" type="NumberTransformer"/>
                </params>
            </method>
            <javadoc line="194">
                {@inheritDoc}                
            </javadoc>
            <method name="setWindowSize" type="void" line="196">
                <params>
                    <param name="windowSize" type="int"/>
                </params>
                <comment line="199">
                    Discard elements from the front of the list if the windowSize is less than
                     the size of the list.                    
                </comment>
                <declaration name="extra" type="int" line="200"/>
                <scope line="201"/>
            </method>
        </class>
    </source>