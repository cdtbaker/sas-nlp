<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis">
        <import package="org.apache.commons.math3.analysis.differentiation.DerivativeStructure"/>
        <import package="org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction"/>
        <import package="org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction"/>
        <import package="org.apache.commons.math3.analysis.function.Add"/>
        <import package="org.apache.commons.math3.analysis.function.Constant"/>
        <import package="org.apache.commons.math3.analysis.function.Cos"/>
        <import package="org.apache.commons.math3.analysis.function.Cosh"/>
        <import package="org.apache.commons.math3.analysis.function.Divide"/>
        <import package="org.apache.commons.math3.analysis.function.Identity"/>
        <import package="org.apache.commons.math3.analysis.function.Inverse"/>
        <import package="org.apache.commons.math3.analysis.function.Log"/>
        <import package="org.apache.commons.math3.analysis.function.Max"/>
        <import package="org.apache.commons.math3.analysis.function.Min"/>
        <import package="org.apache.commons.math3.analysis.function.Minus"/>
        <import package="org.apache.commons.math3.analysis.function.Multiply"/>
        <import package="org.apache.commons.math3.analysis.function.Pow"/>
        <import package="org.apache.commons.math3.analysis.function.Power"/>
        <import package="org.apache.commons.math3.analysis.function.Sin"/>
        <import package="org.apache.commons.math3.analysis.function.Sinc"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooLargeException"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="FunctionUtilsTest" line="45">
            <javadoc line="45">
                Test for {@link FunctionUtils}.                
            </javadoc>
            <declaration name="EPS" type="double" line="49"/>
            <method name="testCompose" type="void" line="52">
                <declaration name="id" type="UnivariateFunction" line="53"/>
                <declaration name="c" type="UnivariateFunction" line="56"/>
                <declaration name="m" type="UnivariateFunction" line="60"/>
                <declaration name="inv" type="UnivariateFunction" line="64"/>
                <declaration name="pow" type="UnivariateFunction" line="67"/>
            </method>
            <method name="testComposeDifferentiable" type="void" line="72">
                <declaration name="id" type="UnivariateDifferentiableFunction" line="73"/>
                <declaration name="c" type="UnivariateDifferentiableFunction" line="76"/>
                <declaration name="m" type="UnivariateDifferentiableFunction" line="80"/>
                <declaration name="inv" type="UnivariateDifferentiableFunction" line="84"/>
                <declaration name="pow" type="UnivariateDifferentiableFunction" line="87"/>
                <declaration name="log" type="UnivariateDifferentiableFunction" line="90"/>
                <declaration name="a" type="double" line="91"/>
            </method>
            <method name="testAdd" type="void" line="97">
                <declaration name="id" type="UnivariateFunction" line="98"/>
                <declaration name="c" type="UnivariateFunction" line="99"/>
                <declaration name="m" type="UnivariateFunction" line="100"/>
                <declaration name="inv" type="UnivariateFunction" line="101"/>
            </method>
            <method name="testAddDifferentiable" type="void" line="109">
                <declaration name="sin" type="UnivariateDifferentiableFunction" line="110"/>
                <declaration name="c" type="UnivariateDifferentiableFunction" line="111"/>
                <declaration name="m" type="UnivariateDifferentiableFunction" line="112"/>
                <declaration name="inv" type="UnivariateDifferentiableFunction" line="113"/>
                <declaration name="a" type="double" line="115"/>
            </method>
            <method name="testMultiply" type="void" line="122">
                <declaration name="c" type="UnivariateFunction" line="123"/>
                <declaration name="inv" type="UnivariateFunction" line="126"/>
                <declaration name="pow" type="UnivariateFunction" line="127"/>
            </method>
            <method name="testMultiplyDifferentiable" type="void" line="132">
                <declaration name="c" type="UnivariateDifferentiableFunction" line="133"/>
                <declaration name="id" type="UnivariateDifferentiableFunction" line="134"/>
                <declaration name="a" type="double" line="135"/>
                <declaration name="inv" type="UnivariateDifferentiableFunction" line="138"/>
                <declaration name="pow" type="UnivariateDifferentiableFunction" line="139"/>
                <declaration name="cos" type="UnivariateDifferentiableFunction" line="140"/>
                <declaration name="cosh" type="UnivariateDifferentiableFunction" line="144"/>
            </method>
            <method name="testCombine" type="void" line="150">
                <declaration name="bi" type="BivariateFunction" line="151"/>
                <declaration name="id" type="UnivariateFunction" line="152"/>
                <declaration name="m" type="UnivariateFunction" line="153"/>
                <declaration name="c" type="UnivariateFunction" line="154"/>
                <declaration name="inv" type="UnivariateFunction" line="158"/>
            </method>
            <method name="testCollector" type="void" line="164">
                <declaration name="bi" type="BivariateFunction" line="165"/>
                <declaration name="coll" type="MultivariateFunction" line="166"/>
            </method>
            <method name="testSinc" type="void" line="183">
                <declaration name="div" type="BivariateFunction" line="184"/>
                <declaration name="sin" type="UnivariateFunction" line="185"/>
                <declaration name="id" type="UnivariateFunction" line="186"/>
                <declaration name="sinc1" type="UnivariateFunction" line="187"/>
                <declaration name="sinc2" type="UnivariateFunction" line="188"/>
                <scope line="190">
                    <declaration name="x" type="double" line="191"/>
                </scope>
            </method>
            <method name="testFixingArguments" type="void" line="197">
                <declaration name="scaler" type="UnivariateFunction" line="198"/>
                <declaration name="pow1" type="UnivariateFunction" line="201"/>
                <declaration name="pow2" type="UnivariateFunction" line="202"/>
                <scope line="204">
                    <declaration name="x" type="double" line="205"/>
                </scope>
            </method>
            <method name="testSampleWrongBounds" type="void" line="211"/>
            <method name="testSampleNegativeNumberOfPoints" type="void" line="216"/>
            <method name="testSampleNullNumberOfPoints" type="void" line="221"/>
            <method name="testSample" type="void" line="226">
                <declaration name="n" type="int" line="227"/>
                <declaration name="min" type="double" line="228"/>
                <declaration name="max" type="double" line="229"/>
                <declaration name="actual" type="double[]" line="230"/>
                <scope line="231">
                    <declaration name="x" type="double" line="232"/>
                </scope>
            </method>
            <method name="testToDifferentiableUnivariateFunction" type="void" line="239">
                <comment line="242">
                    Sin implements both UnivariateDifferentiableFunction and DifferentiableUnivariateFunction                    
                </comment>
                <declaration name="sin" type="Sin" line="242"/>
                <declaration name="converted" type="DifferentiableUnivariateFunction" line="243"/>
                <scope line="244"/>
            </method>
            <method name="testToUnivariateDifferential" type="void" line="253">
                <comment line="256">
                    Sin implements both UnivariateDifferentiableFunction and DifferentiableUnivariateFunction                    
                </comment>
                <declaration name="sin" type="Sin" line="256"/>
                <declaration name="converted" type="UnivariateDifferentiableFunction" line="257"/>
                <scope line="258">
                    <declaration name="t" type="DerivativeStructure" line="259"/>
                </scope>
            </method>
            <method name="testToDifferentiableMultivariateFunction" type="void" line="273">
                <anonymous_class line="275">
                    <method name="value" type="double" line="277">
                        <params>
                            <param name="point" type="double[]"/>
                        </params>
                    </method>
                    <method name="value" type="DerivativeStructure" line="281">
                        <params>
                            <param name="point" type="DerivativeStructure[]"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="hypot" type="MultivariateDifferentiableFunction" line="275"/>
                <declaration name="converted" type="DifferentiableMultivariateFunction" line="286"/>
                <scope line="287">
                    <scope line="288">
                        <declaration name="point" type="double[]" line="289"/>
                    </scope>
                </scope>
            </method>
            <method name="testToMultivariateDifferentiableFunction" type="void" line="300">
                <anonymous_class line="302">
                    <method name="value" type="double" line="304">
                        <params>
                            <param name="point" type="double[]"/>
                        </params>
                    </method>
                    <method name="partialDerivative" type="MultivariateFunction" line="308">
                        <params>
                            <param name="k" type="int"/>
                        </params>
                        <anonymous_class line="309">
                            <method name="value" type="double" line="310">
                                <params>
                                    <param name="point" type="double[]"/>
                                </params>
                            </method>
                        </anonymous_class>
                    </method>
                    <method name="gradient" type="MultivariateVectorFunction" line="316">
                        <anonymous_class line="317">
                            <method name="value" type="double[]" line="318">
                                <params>
                                    <param name="point" type="double[]"/>
                                </params>
                                <declaration name="h" type="double" line="319"/>
                            </method>
                        </anonymous_class>
                    </method>
                </anonymous_class>
                <declaration name="hypot" type="DifferentiableMultivariateFunction" line="302"/>
                <declaration name="converted" type="MultivariateDifferentiableFunction" line="327"/>
                <scope line="328">
                    <scope line="329">
                        <declaration name="t" type="DerivativeStructure[]" line="330"/>
                        <declaration name="h" type="DerivativeStructure" line="334"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>