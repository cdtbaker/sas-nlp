<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis">
        <import package="org.apache.commons.math3.analysis.differentiation.DerivativeStructure"/>
        <import package="org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction"/>
        <import package="org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction"/>
        <import package="org.apache.commons.math3.analysis.function.Add"/>
        <import package="org.apache.commons.math3.analysis.function.Constant"/>
        <import package="org.apache.commons.math3.analysis.function.Cos"/>
        <import package="org.apache.commons.math3.analysis.function.Cosh"/>
        <import package="org.apache.commons.math3.analysis.function.Divide"/>
        <import package="org.apache.commons.math3.analysis.function.Identity"/>
        <import package="org.apache.commons.math3.analysis.function.Inverse"/>
        <import package="org.apache.commons.math3.analysis.function.Log"/>
        <import package="org.apache.commons.math3.analysis.function.Max"/>
        <import package="org.apache.commons.math3.analysis.function.Min"/>
        <import package="org.apache.commons.math3.analysis.function.Minus"/>
        <import package="org.apache.commons.math3.analysis.function.Multiply"/>
        <import package="org.apache.commons.math3.analysis.function.Pow"/>
        <import package="org.apache.commons.math3.analysis.function.Power"/>
        <import package="org.apache.commons.math3.analysis.function.Sin"/>
        <import package="org.apache.commons.math3.analysis.function.Sinc"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooLargeException"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="FunctionUtilsTest" line="26">
            <javadoc line="26">
                Test for {@link FunctionUtils}.                
            </javadoc>
            <declaration name="EPS" type="double" line="30"/>
            <method name="testCompose" type="void" line="31">
                <declaration name="id" type="UnivariateFunction" line="32"/>
                <declaration name="c" type="UnivariateFunction" line="34"/>
                <declaration name="m" type="UnivariateFunction" line="37"/>
                <declaration name="inv" type="UnivariateFunction" line="40"/>
                <declaration name="pow" type="UnivariateFunction" line="42"/>
            </method>
            <method name="testComposeDifferentiable" type="void" line="45">
                <declaration name="id" type="UnivariateDifferentiableFunction" line="46"/>
                <declaration name="c" type="UnivariateDifferentiableFunction" line="48"/>
                <declaration name="m" type="UnivariateDifferentiableFunction" line="51"/>
                <declaration name="inv" type="UnivariateDifferentiableFunction" line="54"/>
                <declaration name="pow" type="UnivariateDifferentiableFunction" line="56"/>
                <declaration name="log" type="UnivariateDifferentiableFunction" line="58"/>
                <declaration name="a" type="double" line="59"/>
            </method>
            <method name="testAdd" type="void" line="62">
                <declaration name="id" type="UnivariateFunction" line="63"/>
                <declaration name="c" type="UnivariateFunction" line="64"/>
                <declaration name="m" type="UnivariateFunction" line="65"/>
                <declaration name="inv" type="UnivariateFunction" line="66"/>
            </method>
            <method name="testAddDifferentiable" type="void" line="71">
                <declaration name="sin" type="UnivariateDifferentiableFunction" line="72"/>
                <declaration name="c" type="UnivariateDifferentiableFunction" line="73"/>
                <declaration name="m" type="UnivariateDifferentiableFunction" line="74"/>
                <declaration name="inv" type="UnivariateDifferentiableFunction" line="75"/>
                <declaration name="a" type="double" line="76"/>
            </method>
            <method name="testMultiply" type="void" line="79">
                <declaration name="c" type="UnivariateFunction" line="80"/>
                <declaration name="inv" type="UnivariateFunction" line="82"/>
                <declaration name="pow" type="UnivariateFunction" line="83"/>
            </method>
            <method name="testMultiplyDifferentiable" type="void" line="86">
                <declaration name="c" type="UnivariateDifferentiableFunction" line="87"/>
                <declaration name="id" type="UnivariateDifferentiableFunction" line="88"/>
                <declaration name="a" type="double" line="89"/>
                <declaration name="inv" type="UnivariateDifferentiableFunction" line="91"/>
                <declaration name="pow" type="UnivariateDifferentiableFunction" line="92"/>
                <declaration name="cos" type="UnivariateDifferentiableFunction" line="93"/>
                <declaration name="cosh" type="UnivariateDifferentiableFunction" line="95"/>
            </method>
            <method name="testCombine" type="void" line="98">
                <declaration name="bi" type="BivariateFunction" line="99"/>
                <declaration name="id" type="UnivariateFunction" line="100"/>
                <declaration name="m" type="UnivariateFunction" line="101"/>
                <declaration name="c" type="UnivariateFunction" line="102"/>
                <declaration name="inv" type="UnivariateFunction" line="105"/>
            </method>
            <method name="testCollector" type="void" line="109">
                <declaration name="bi" type="BivariateFunction" line="110"/>
                <declaration name="coll" type="MultivariateFunction" line="111"/>
            </method>
            <method name="testSinc" type="void" line="123">
                <declaration name="div" type="BivariateFunction" line="124"/>
                <declaration name="sin" type="UnivariateFunction" line="125"/>
                <declaration name="id" type="UnivariateFunction" line="126"/>
                <declaration name="sinc1" type="UnivariateFunction" line="127"/>
                <declaration name="sinc2" type="UnivariateFunction" line="128"/>
                <scope line="129">
                    <declaration name="x" type="double" line="130"/>
                </scope>
            </method>
            <method name="testFixingArguments" type="void" line="134">
                <declaration name="scaler" type="UnivariateFunction" line="135"/>
                <declaration name="pow1" type="UnivariateFunction" line="137"/>
                <declaration name="pow2" type="UnivariateFunction" line="138"/>
                <scope line="139">
                    <declaration name="x" type="double" line="140"/>
                </scope>
            </method>
            <method name="testSampleWrongBounds" type="void" line="144"/>
            <method name="testSampleNegativeNumberOfPoints" type="void" line="147"/>
            <method name="testSampleNullNumberOfPoints" type="void" line="150"/>
            <method name="testSample" type="void" line="153">
                <declaration name="n" type="int" line="154"/>
                <declaration name="min" type="double" line="155"/>
                <declaration name="max" type="double" line="156"/>
                <declaration name="actual" type="double[]" line="157"/>
                <scope line="158">
                    <declaration name="x" type="double" line="159"/>
                </scope>
            </method>
            <method name="testToDifferentiableUnivariateFunction" type="void" line="163">
                <declaration name="sin" type="Sin" line="164"/>
                <declaration name="converted" type="DifferentiableUnivariateFunction" line="165"/>
                <scope line="166"/>
            </method>
            <method name="testToUnivariateDifferential" type="void" line="171">
                <declaration name="sin" type="Sin" line="172"/>
                <declaration name="converted" type="UnivariateDifferentiableFunction" line="173"/>
                <scope line="174">
                    <declaration name="t" type="DerivativeStructure" line="175"/>
                </scope>
            </method>
            <method name="testToDifferentiableMultivariateFunction" type="void" line="181">
                <anonymous_class line="182">
                    <method name="value" type="double" line="183">
                        <params>
                            <param name="point" type="double[]"/>
                        </params>
                    </method>
                    <method name="value" type="DerivativeStructure" line="186">
                        <params>
                            <param name="point" type="DerivativeStructure[]"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="hypot" type="MultivariateDifferentiableFunction" line="182"/>
                <declaration name="converted" type="DifferentiableMultivariateFunction" line="191"/>
                <scope line="192">
                    <scope line="193">
                        <declaration name="point" type="double[]" line="194"/>
                    </scope>
                </scope>
            </method>
            <method name="testToMultivariateDifferentiableFunction" type="void" line="201">
                <anonymous_class line="202">
                    <method name="value" type="double" line="203">
                        <params>
                            <param name="point" type="double[]"/>
                        </params>
                    </method>
                    <method name="partialDerivative" type="MultivariateFunction" line="206">
                        <params>
                            <param name="k" type="int"/>
                        </params>
                        <anonymous_class line="207">
                            <method name="value" type="double" line="208">
                                <params>
                                    <param name="point" type="double[]"/>
                                </params>
                            </method>
                        </anonymous_class>
                    </method>
                    <method name="gradient" type="MultivariateVectorFunction" line="214">
                        <anonymous_class line="215">
                            <method name="value" type="double[]" line="216">
                                <params>
                                    <param name="point" type="double[]"/>
                                </params>
                                <declaration name="h" type="double" line="217"/>
                            </method>
                        </anonymous_class>
                    </method>
                </anonymous_class>
                <declaration name="hypot" type="DifferentiableMultivariateFunction" line="202"/>
                <declaration name="converted" type="MultivariateDifferentiableFunction" line="225"/>
                <scope line="226">
                    <scope line="227">
                        <declaration name="t" type="DerivativeStructure[]" line="228"/>
                        <declaration name="h" type="DerivativeStructure" line="229"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>