<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="org.apache.commons.math3.exception.NumberIsTooLargeException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="TriangularDistributionTest" line="25">
            <extends class="RealDistributionAbstractTest"/>
            <comment line="32">
                --- Override tolerance -------------------------------------------------                
            </comment>
            <comment line="40">
                --- Implementations for abstract methods --------------------------------                
            </comment>
            <comment line="137">
                --- Additional test cases -----------------------------------------------                
            </comment>
            <javadoc line="25">
                Test cases for {@link TriangularDistribution}. See class javadoc for{@link RealDistributionAbstractTest} for further details.                
            </javadoc>
            <method name="setUp" type="void" line="34"/>
            <javadoc line="41">
                Creates the default triangular distribution instance to use in tests.                
            </javadoc>
            <method name="makeDistribution" type="TriangularDistribution" line="45">
                <comment line="47">
                    Left side 5 wide, right side 10 wide.                    
                </comment>
            </method>
            <javadoc line="50">
                Creates the default cumulative probability distribution test input
                  values.                
            </javadoc>
            <method name="makeCumulativeTestPoints" type="double[]" line="55">
                <comment line="57">
                    below lower limit                    
                </comment>
                <comment line="58">
                    at lower limit                    
                </comment>
                <comment line="59">
                    on lower side                    
                </comment>
                <comment line="60">
                    at mode                    
                </comment>
                <comment line="61">
                    on upper side                    
                </comment>
                <comment line="62">
                    at upper limit                    
                </comment>
                <comment line="63">
                    above upper limit                    
                </comment>
            </method>
            <javadoc line="66">
                Creates the default cumulative probability density test expected values.                
            </javadoc>
            <method name="makeCumulativeTestValues" type="double[]" line="70">
                <comment line="72">
                    Top at 2 / (b - a) = 2 / (12 - -3) = 2 / 15 = 7.5
                     Area left  = 7.5 * 5  * 0.5 = 18.75 (1/3 of the total area)
                     Area right = 7.5 * 10 * 0.5 = 37.5  (2/3 of the total area)
                     Area total = 18.75 + 37.5 = 56.25
                     Derivative left side = 7.5 / 5 = 1.5
                     Derivative right side = -7.5 / 10 = -0.75                    
                </comment>
                <declaration name="third" type="double" line="77"/>
                <declaration name="left" type="double" line="78"/>
                <declaration name="area" type="double" line="79"/>
            </method>
            <javadoc line="91">
                Creates the default inverse cumulative probability distribution test
                  input values.                
            </javadoc>
            <method name="makeInverseCumulativeTestPoints" type="double[]" line="96">
                <comment line="98">
                    Exclude the points outside the limits, as they have cumulative
                     probability of zero and one, meaning the inverse returns the
                     limits and not the points outside the limits.                    
                </comment>
                <comment line="105">
                    return Arrays.copyOfRange(points, 1, points.length - 1);                    
                </comment>
                <declaration name="points" type="double[]" line="100"/>
                <declaration name="points2" type="double[]" line="101"/>
            </method>
            <javadoc line="107">
                Creates the default inverse cumulative probability density test expected
                  values.                
            </javadoc>
            <method name="makeInverseCumulativeTestValues" type="double[]" line="112">
                <comment line="114">
                    Exclude the points outside the limits, as they have cumulative
                     probability of zero and one, meaning the inverse returns the
                     limits and not the points outside the limits.                    
                </comment>
                <comment line="121">
                    return Arrays.copyOfRange(points, 1, points.length - 1);                    
                </comment>
                <declaration name="points" type="double[]" line="116"/>
                <declaration name="points2" type="double[]" line="117"/>
            </method>
            <javadoc line="123">
                Creates the default probability density test expected values.                
            </javadoc>
            <method name="makeDensityTestValues" type="double[]" line="125"/>
            <javadoc line="138">
                Test lower bound getter.                
            </javadoc>
            <method name="testGetLowerBound" type="void" line="140">
                <declaration name="distribution" type="TriangularDistribution" line="141"/>
            </method>
            <javadoc line="145">
                Test upper bound getter.                
            </javadoc>
            <method name="testGetUpperBound" type="void" line="147">
                <declaration name="distribution" type="TriangularDistribution" line="148"/>
            </method>
            <javadoc line="152">
                Test pre-condition for equal lower/upper limit.                
            </javadoc>
            <method name="testPreconditions1" type="void" line="154"/>
            <javadoc line="158">
                Test pre-condition for lower limit larger than upper limit.                
            </javadoc>
            <method name="testPreconditions2" type="void" line="160"/>
            <javadoc line="164">
                Test pre-condition for mode larger than upper limit.                
            </javadoc>
            <method name="testPreconditions3" type="void" line="166"/>
            <javadoc line="170">
                Test pre-condition for mode smaller than lower limit.                
            </javadoc>
            <method name="testPreconditions4" type="void" line="172"/>
            <javadoc line="176">
                Test mean/variance.                
            </javadoc>
            <method name="testMeanVariance" type="void" line="178">
                <declaration name="dist" type="TriangularDistribution" line="179"/>
            </method>
        </class>
    </source>