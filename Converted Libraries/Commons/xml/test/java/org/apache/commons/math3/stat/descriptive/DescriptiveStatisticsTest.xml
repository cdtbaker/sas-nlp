<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.descriptive">
        <import package="java.util.Locale"/>
        <import package="org.apache.commons.math3.TestUtils"/>
        <import package="org.apache.commons.math3.stat.descriptive.rank.Percentile"/>
        <import package="org.apache.commons.math3.stat.descriptive.moment.GeometricMean"/>
        <import package="org.apache.commons.math3.stat.descriptive.moment.Mean"/>
        <import package="org.apache.commons.math3.stat.descriptive.moment.Variance"/>
        <import package="org.apache.commons.math3.stat.descriptive.rank.Max"/>
        <import package="org.apache.commons.math3.stat.descriptive.rank.Min"/>
        <import package="org.apache.commons.math3.stat.descriptive.summary.Sum"/>
        <import package="org.apache.commons.math3.stat.descriptive.summary.SumOfSquares"/>
        <import package="org.apache.commons.math3.util.Precision"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="DescriptiveStatisticsTest" line="32">
            <comment line="268">
                Test UnivariateStatistics impls for setter injection tests                
            </comment>
            <javadoc line="32">
                Test cases for the DescriptiveStatistics class.                
                <version>
                    $Id: DescriptiveStatisticsTest.java 1364030 2012-07-21 01:10:04Z erans $
                      2007) $                    
                </version>
            </javadoc>
            <method name="createDescriptiveStatistics" type="DescriptiveStatistics" line="40"/>
            <method name="testSetterInjection" type="void" line="45">
                <comment line="51">
                    Now lets try some new math                    
                </comment>
                <declaration name="stats" type="DescriptiveStatistics" line="46"/>
            </method>
            <method name="testCopy" type="void" line="56">
                <comment line="63">
                    Now lets try some new math                    
                </comment>
                <declaration name="stats" type="DescriptiveStatistics" line="57"/>
                <declaration name="copy" type="DescriptiveStatistics" line="60"/>
            </method>
            <method name="testWindowSize" type="void" line="69">
                <comment line="83">
                    expected                    
                </comment>
                <declaration name="stats" type="DescriptiveStatistics" line="70"/>
                <scope line="72"/>
                <declaration name="refSum" type="int" line="75"/>
                <scope line="78"/>
                <scope line="81"/>
                <declaration name="refSum2" type="int" line="87"/>
            </method>
            <method name="testGetValues" type="void" line="92">
                <declaration name="stats" type="DescriptiveStatistics" line="93"/>
                <scope line="94"/>
                <declaration name="refSum" type="int" line="97"/>
                <declaration name="v" type="double[]" line="99"/>
                <scope line="100"/>
                <declaration name="s" type="double[]" line="103"/>
                <scope line="104"/>
            </method>
            <method name="testToString" type="void" line="111">
                <declaration name="stats" type="DescriptiveStatistics" line="112"/>
                <declaration name="d" type="Locale" line="116"/>
            </method>
            <method name="testShuffledStatistics" type="void" line="131">
                <comment line="133">
                    the purpose of this test is only to check the get/set methods
                     we are aware shuffling statistics like this is really not
                     something sensible to do in production ...                    
                </comment>
                <declaration name="reference" type="DescriptiveStatistics" line="135"/>
                <declaration name="shuffled" type="DescriptiveStatistics" line="136"/>
                <declaration name="tmp" type="UnivariateStatistic" line="138"/>
                <scope line="149"/>
            </method>
            <method name="testPercentileSetter" type="void" line="167">
                <comment line="175">
                    Inject wrapped Percentile impl                    
                </comment>
                <comment line="179">
                    Try &quot;new math&quot; impl                    
                </comment>
                <comment line="183">
                    Try to set bad impl                    
                </comment>
                <comment line="188">
                    expected                    
                </comment>
                <declaration name="stats" type="DescriptiveStatistics" line="168"/>
                <scope line="183"/>
                <scope line="186"/>
            </method>
            <method name="test20090720" type="void" line="192">
                <declaration name="descriptiveStatistics" type="DescriptiveStatistics" line="193"/>
                <scope line="194"/>
            </method>
            <method name="testRemoval" type="void" line="203">
                <declaration name="dstat" type="DescriptiveStatistics" line="205"/>
            </method>
            <method name="testSummaryConsistency" type="void" line="216">
                <declaration name="dstats" type="DescriptiveStatistics" line="217"/>
                <declaration name="sstats" type="SummaryStatistics" line="218"/>
                <declaration name="windowSize" type="int" line="219"/>
                <declaration name="tol" type="double" line="221"/>
                <scope line="222">
                    <declaration name="values" type="double[]" line="225"/>
                    <scope line="226"/>
                </scope>
            </method>
            <method name="checkremoval" type="void" line="250">
                <params>
                    <param name="dstat" type="DescriptiveStatistics"/>
                    <param name="wsize" type="int"/>
                    <param name="mean1" type="double"/>
                    <param name="mean2" type="double"/>
                    <param name="mean3" type="double"/>
                </params>
                <scope line="255"/>
            </method>
            <class name="deepMean" line="269">
                <implements interface="UnivariateStatistic"/>
                <javadoc line="269">
                    A new way to compute the mean                    
                </javadoc>
                <method name="evaluate" type="double" line="274">
                    <params>
                        <param name="values" type="double[]"/>
                        <param name="begin" type="int"/>
                        <param name="length" type="int"/>
                    </params>
                </method>
                <method name="evaluate" type="double" line="278">
                    <params>
                        <param name="values" type="double[]"/>
                    </params>
                </method>
                <method name="copy" type="UnivariateStatistic" line="281"/>
            </class>
            <class name="goodPercentile" line="286">
                <implements interface="UnivariateStatistic"/>
                <javadoc line="286">
                    Test percentile implementation - wraps a Percentile                    
                </javadoc>
                <declaration name="percentile" type="Percentile" line="290"/>
                <method name="setQuantile" type="void" line="291">
                    <params>
                        <param name="quantile" type="double"/>
                    </params>
                </method>
                <method name="evaluate" type="double" line="294">
                    <params>
                        <param name="values" type="double[]"/>
                        <param name="begin" type="int"/>
                        <param name="length" type="int"/>
                    </params>
                </method>
                <method name="evaluate" type="double" line="297">
                    <params>
                        <param name="values" type="double[]"/>
                    </params>
                </method>
                <method name="copy" type="UnivariateStatistic" line="300">
                    <declaration name="result" type="goodPercentile" line="301"/>
                </method>
            </class>
            <class name="subPercentile" line="307">
                <extends class="Percentile"/>
                <javadoc line="307">
                    Test percentile subclass - another &quot;new math&quot; impl
                      Always returns currently set quantile                    
                </javadoc>
                <method name="evaluate" type="double" line="313">
                    <params>
                        <param name="values" type="double[]"/>
                        <param name="begin" type="int"/>
                        <param name="length" type="int"/>
                    </params>
                </method>
                <method name="evaluate" type="double" line="317">
                    <params>
                        <param name="values" type="double[]"/>
                    </params>
                </method>
                <declaration name="serialVersionUID" type="long" line="320"/>
                <method name="copy" type="Percentile" line="322">
                    <declaration name="result" type="subPercentile" line="323"/>
                </method>
            </class>
            <class name="badPercentile" line="328">
                <implements interface="UnivariateStatistic"/>
                <javadoc line="328">
                    &quot;Bad&quot; test percentile implementation - no setQuantile                    
                </javadoc>
                <declaration name="percentile" type="Percentile" line="332"/>
                <method name="evaluate" type="double" line="333">
                    <params>
                        <param name="values" type="double[]"/>
                        <param name="begin" type="int"/>
                        <param name="length" type="int"/>
                    </params>
                </method>
                <method name="evaluate" type="double" line="336">
                    <params>
                        <param name="values" type="double[]"/>
                    </params>
                </method>
                <method name="copy" type="UnivariateStatistic" line="339"/>
            </class>
        </class>
    </source>