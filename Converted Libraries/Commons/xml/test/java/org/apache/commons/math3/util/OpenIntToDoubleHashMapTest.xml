<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.util">
        <import package="java.util.ConcurrentModificationException"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Map"/>
        <import package="java.util.NoSuchElementException"/>
        <import package="java.util.Random"/>
        <import package="java.util.Set"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Before"/>
        <import package="org.junit.Test"/>
        <class name="OpenIntToDoubleHashMapTest" line="12">
            <javadoc line="12">
                Test cases for the {@link OpenIntToDoubleHashMap}.                
            </javadoc>
            <declaration name="javaMap" type="Map&lt;Integer,Double&gt;" line="16"/>
            <method name="setUp" type="void" line="17"/>
            <method name="generate" type="Map<Integer,Double>" line="32">
                <declaration name="map" type="Map&lt;Integer,Double&gt;" line="33"/>
                <declaration name="r" type="Random" line="34"/>
            </method>
            <method name="createFromJavaMap" type="OpenIntToDoubleHashMap" line="38">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="39"/>
                <scope line="40"/>
            </method>
            <method name="testPutAndGetWith0ExpectedSize" type="void" line="45">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="46"/>
            </method>
            <method name="testPutAndGetWithExpectedSize" type="void" line="49">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="50"/>
            </method>
            <method name="testPutAndGet" type="void" line="53">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="54"/>
            </method>
            <method name="assertPutAndGet" type="void" line="57">
                <params>
                    <param name="map" type="OpenIntToDoubleHashMap"/>
                </params>
            </method>
            <method name="assertPutAndGet" type="void" line="60">
                <params>
                    <param name="map" type="OpenIntToDoubleHashMap"/>
                    <param name="mapSize" type="int"/>
                    <param name="keysInMap" type="Set<Integer>"/>
                </params>
                <scope line="62"/>
            </method>
            <method name="testPutAbsentOnExisting" type="void" line="69">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="70"/>
                <declaration name="size" type="int" line="71"/>
                <scope line="72"/>
            </method>
            <method name="testPutOnExisting" type="void" line="78">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="79"/>
                <scope line="80"/>
            </method>
            <method name="testGetAbsent" type="void" line="86">
                <declaration name="generated" type="Map&lt;Integer,Double&gt;" line="87"/>
                <declaration name="map" type="OpenIntToDoubleHashMap" line="88"/>
            </method>
            <method name="testGetFromEmpty" type="void" line="91">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="92"/>
            </method>
            <method name="testRemove" type="void" line="97">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="98"/>
                <declaration name="mapSize" type="int" line="99"/>
                <scope line="101"/>
            </method>
            <method name="testRemove2" type="void" line="108">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="109"/>
                <declaration name="mapSize" type="int" line="110"/>
                <declaration name="count" type="int" line="111"/>
                <declaration name="keysInMap" type="Set&lt;Integer&gt;" line="112"/>
                <scope line="113"/>
            </method>
            <method name="testRemoveFromEmpty" type="void" line="122">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="123"/>
            </method>
            <method name="testRemoveAbsent" type="void" line="126">
                <declaration name="generated" type="Map&lt;Integer,Double&gt;" line="127"/>
                <declaration name="map" type="OpenIntToDoubleHashMap" line="128"/>
                <declaration name="mapSize" type="int" line="129"/>
                <scope line="130"/>
            </method>
            <javadoc line="136">
                Returns a map with at least 100 elements where each element is absent from javaMap.                
            </javadoc>
            <method name="generateAbsent" type="Map<Integer,Double>" line="139">
                <declaration name="generated" type="Map&lt;Integer,Double&gt;" line="140"/>
                <scope line="141"/>
            </method>
            <method name="testCopy" type="void" line="148">
                <declaration name="copy" type="OpenIntToDoubleHashMap" line="149"/>
            </method>
            <method name="testContainsKey" type="void" line="153">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="154"/>
                <scope line="155"/>
                <scope line="158"/>
                <scope line="161">
                    <declaration name="key" type="int" line="162"/>
                </scope>
            </method>
            <method name="testIterator" type="void" line="168">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="169"/>
                <declaration name="iterator" type="OpenIntToDoubleHashMap.Iterator" line="170"/>
                <scope line="171">
                    <declaration name="key" type="int" line="174"/>
                </scope>
                <scope line="181"/>
                <scope line="185"/>
            </method>
            <method name="testConcurrentModification" type="void" line="188">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="189"/>
                <declaration name="iterator" type="OpenIntToDoubleHashMap.Iterator" line="190"/>
                <scope line="192"/>
                <scope line="196"/>
            </method>
            <javadoc line="199">
                Regression test for a bug in findInsertionIndex where the hashing in the second probing
                  loop was inconsistent with the first causing duplicate keys after the right sequence
                  of puts and removes.                
            </javadoc>
            <method name="testPutKeysWithCollisions" type="void" line="204">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="205"/>
                <declaration name="key1" type="int" line="206"/>
                <declaration name="value1" type="double" line="207"/>
                <declaration name="key2" type="int" line="209"/>
                <declaration name="key3" type="int" line="211"/>
                <declaration name="value2" type="double" line="216"/>
            </method>
            <javadoc line="221">
                Similar to testPutKeysWithCollisions() but exercises the codepaths in a slightly
                  different manner.                
            </javadoc>
            <method name="testPutKeysWithCollision2" type="void" line="225">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="226"/>
                <declaration name="key1" type="int" line="227"/>
                <declaration name="value1" type="double" line="228"/>
                <declaration name="key2" type="int" line="230"/>
                <declaration name="value2" type="double" line="235"/>
            </method>
        </class>
    </source>