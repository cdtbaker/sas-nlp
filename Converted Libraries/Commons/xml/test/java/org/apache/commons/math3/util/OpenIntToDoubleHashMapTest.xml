<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.util">
        <import package="java.util.ConcurrentModificationException"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Map"/>
        <import package="java.util.NoSuchElementException"/>
        <import package="java.util.Random"/>
        <import package="java.util.Set"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Before"/>
        <import package="org.junit.Test"/>
        <class name="OpenIntToDoubleHashMapTest" line="32">
            <comment line="164">
                                
            </comment>
            <javadoc line="32">
                Test cases for the {@link OpenIntToDoubleHashMap}.                
            </javadoc>
            <declaration name="javaMap" type="Map&amp;lt;Integer,Double&amp;gt;" line="38"/>
            <method name="setUp" type="void" line="41">
                <comment line="56">
                                        
                </comment>
            </method>
            <method name="generate" type="Map&lt;Integer,Double&gt;" line="60">
                <declaration name="map" type="Map&amp;lt;Integer,Double&amp;gt;" line="61"/>
                <declaration name="r" type="Random" line="62"/>
            </method>
            <method name="createFromJavaMap" type="OpenIntToDoubleHashMap" line="68">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="69"/>
                <scope line="70"/>
            </method>
            <method name="testPutAndGetWith0ExpectedSize" type="void" line="77">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="78"/>
            </method>
            <method name="testPutAndGetWithExpectedSize" type="void" line="83">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="84"/>
            </method>
            <method name="testPutAndGet" type="void" line="89">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="90"/>
            </method>
            <method name="assertPutAndGet" type="void" line="94">
                <params>
                    <param name="map" type="OpenIntToDoubleHashMap"/>
                </params>
            </method>
            <method name="assertPutAndGet" type="void" line="99">
                <params>
                    <param name="map" type="OpenIntToDoubleHashMap"/>
                    <param name="mapSize" type="int"/>
                    <param name="keysInMap" type="Set&lt;Integer&gt;"/>
                </params>
                <scope line="101"/>
            </method>
            <method name="testPutAbsentOnExisting" type="void" line="111">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="112"/>
                <declaration name="size" type="int" line="113"/>
                <scope line="114"/>
            </method>
            <method name="testPutOnExisting" type="void" line="122">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="123"/>
                <scope line="124"/>
            </method>
            <method name="testGetAbsent" type="void" line="132">
                <declaration name="generated" type="Map&amp;lt;Integer,Double&amp;gt;" line="133"/>
                <declaration name="map" type="OpenIntToDoubleHashMap" line="134"/>
            </method>
            <method name="testGetFromEmpty" type="void" line="141">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="142"/>
            </method>
            <method name="testRemove" type="void" line="149">
                <comment line="160">
                                        
                </comment>
                <declaration name="map" type="OpenIntToDoubleHashMap" line="150"/>
                <declaration name="mapSize" type="int" line="151"/>
                <scope line="153"/>
            </method>
            <method name="testRemove2" type="void" line="165">
                <comment line="180">
                                        
                </comment>
                <declaration name="map" type="OpenIntToDoubleHashMap" line="166"/>
                <declaration name="mapSize" type="int" line="167"/>
                <declaration name="count" type="int" line="168"/>
                <declaration name="keysInMap" type="Set&amp;lt;Integer&amp;gt;" line="169"/>
                <scope line="170"/>
            </method>
            <method name="testRemoveFromEmpty" type="void" line="184">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="185"/>
            </method>
            <method name="testRemoveAbsent" type="void" line="190">
                <declaration name="generated" type="Map&amp;lt;Integer,Double&amp;gt;" line="191"/>
                <declaration name="map" type="OpenIntToDoubleHashMap" line="193"/>
                <declaration name="mapSize" type="int" line="194"/>
                <scope line="196"/>
            </method>
            <javadoc line="203">
                Returns a map with at least 100 elements where each element is absent from javaMap.                
            </javadoc>
            <method name="generateAbsent" type="Map&lt;Integer,Double&gt;" line="206">
                <declaration name="generated" type="Map&amp;lt;Integer,Double&amp;gt;" line="207"/>
                <scope line="208"/>
            </method>
            <method name="testCopy" type="void" line="217">
                <declaration name="copy" type="OpenIntToDoubleHashMap" line="218"/>
            </method>
            <method name="testContainsKey" type="void" line="227">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="228"/>
                <scope line="229"/>
                <scope line="232"/>
                <scope line="235">
                    <declaration name="key" type="int" line="236"/>
                </scope>
            </method>
            <method name="testIterator" type="void" line="244">
                <comment line="262">
                    expected                    
                </comment>
                <declaration name="map" type="OpenIntToDoubleHashMap" line="245"/>
                <declaration name="iterator" type="OpenIntToDoubleHashMap.Iterator" line="246"/>
                <scope line="247">
                    <declaration name="key" type="int" line="250"/>
                </scope>
                <scope line="257"/>
                <scope line="260"/>
            </method>
            <method name="testConcurrentModification" type="void" line="266">
                <comment line="275">
                    expected                    
                </comment>
                <declaration name="map" type="OpenIntToDoubleHashMap" line="267"/>
                <declaration name="iterator" type="OpenIntToDoubleHashMap.Iterator" line="268"/>
                <scope line="270"/>
                <scope line="273"/>
            </method>
            <javadoc line="278">
                Regression test for a bug in findInsertionIndex where the hashing in the second probing
                  loop was inconsistent with the first causing duplicate keys after the right sequence
                  of puts and removes.                
            </javadoc>
            <method name="testPutKeysWithCollisions" type="void" line="284">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="285"/>
                <declaration name="key1" type="int" line="286"/>
                <declaration name="value1" type="double" line="287"/>
                <declaration name="key2" type="int" line="289"/>
                <declaration name="key3" type="int" line="291"/>
                <declaration name="value2" type="double" line="297"/>
            </method>
            <javadoc line="303">
                Similar to testPutKeysWithCollisions() but exercises the codepaths in a slightly
                  different manner.                
            </javadoc>
            <method name="testPutKeysWithCollision2" type="void" line="308">
                <declaration name="map" type="OpenIntToDoubleHashMap" line="309"/>
                <declaration name="key1" type="int" line="310"/>
                <declaration name="value1" type="double" line="311"/>
                <declaration name="key2" type="int" line="313"/>
                <declaration name="value2" type="double" line="319"/>
            </method>
        </class>
    </source>