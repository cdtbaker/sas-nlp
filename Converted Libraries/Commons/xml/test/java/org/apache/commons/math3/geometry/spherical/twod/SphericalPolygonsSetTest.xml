<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.spherical.twod">
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="org.apache.commons.math3.geometry.enclosing.EnclosingBall"/>
        <import package="org.apache.commons.math3.geometry.euclidean.threed.Rotation"/>
        <import package="org.apache.commons.math3.geometry.euclidean.threed.Vector3D"/>
        <import package="org.apache.commons.math3.geometry.partitioning.Region.Location"/>
        <import package="org.apache.commons.math3.geometry.partitioning.RegionFactory"/>
        <import package="org.apache.commons.math3.geometry.partitioning.SubHyperplane"/>
        <import package="org.apache.commons.math3.geometry.spherical.oned.ArcsSet"/>
        <import package="org.apache.commons.math3.geometry.spherical.oned.Sphere1D"/>
        <import package="org.apache.commons.math3.random.UnitSphereRandomVectorGenerator"/>
        <import package="org.apache.commons.math3.random.Well1024a"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="SphericalPolygonsSetTest" line="37">
            <method name="testFullSphere" type="void" line="40">
                <declaration name="full" type="SphericalPolygonsSet" line="41"/>
                <declaration name="random" type="UnitSphereRandomVectorGenerator" line="42"/>
                <scope line="44">
                    <declaration name="v" type="Vector3D" line="45"/>
                </scope>
            </method>
            <method name="testEmpty" type="void" line="56">
                <declaration name="empty" type="SphericalPolygonsSet" line="57"/>
                <declaration name="random" type="UnitSphereRandomVectorGenerator" line="59"/>
                <scope line="61">
                    <declaration name="v" type="Vector3D" line="62"/>
                </scope>
            </method>
            <method name="testSouthHemisphere" type="void" line="73">
                <declaration name="tol" type="double" line="74"/>
                <declaration name="sinTol" type="double" line="75"/>
                <declaration name="south" type="SphericalPolygonsSet" line="76"/>
                <declaration name="random" type="UnitSphereRandomVectorGenerator" line="77"/>
                <scope line="79">
                    <declaration name="v" type="Vector3D" line="80"/>
                    <scope line="81"/>
                    <scope line="83"/>
                    <scope line="85"/>
                </scope>
                <declaration name="southCap" type="EnclosingBall&amp;lt;Sphere2D,S2Point&amp;gt;" line="91"/>
                <declaration name="northCap" type="EnclosingBall&amp;lt;Sphere2D,S2Point&amp;gt;" line="95"/>
            </method>
            <method name="testPositiveOctantByIntersection" type="void" line="103">
                <declaration name="tol" type="double" line="104"/>
                <declaration name="sinTol" type="double" line="105"/>
                <declaration name="factory" type="RegionFactory&amp;lt;Sphere2D&amp;gt;" line="106"/>
                <declaration name="plusX" type="SphericalPolygonsSet" line="107"/>
                <declaration name="plusY" type="SphericalPolygonsSet" line="108"/>
                <declaration name="plusZ" type="SphericalPolygonsSet" line="109"/>
                <declaration name="octant" type="SphericalPolygonsSet" line="110"/>
                <declaration name="random" type="UnitSphereRandomVectorGenerator" line="112"/>
                <scope line="114">
                    <declaration name="v" type="Vector3D" line="115"/>
                    <scope line="116"/>
                    <scope line="118"/>
                    <scope line="120"/>
                </scope>
                <declaration name="loops" type="List&amp;lt;Vertex&amp;gt;" line="125"/>
                <declaration name="xPFound" type="boolean" line="127"/>
                <declaration name="yPFound" type="boolean" line="128"/>
                <declaration name="zPFound" type="boolean" line="129"/>
                <declaration name="xVFound" type="boolean" line="130"/>
                <declaration name="yVFound" type="boolean" line="131"/>
                <declaration name="zVFound" type="boolean" line="132"/>
                <declaration name="first" type="Vertex" line="133"/>
                <declaration name="count" type="int" line="134"/>
                <scope line="135">
                    <declaration name="e" type="Edge" line="137"/>
                </scope>
                <declaration name="cap" type="EnclosingBall&amp;lt;Sphere2D,S2Point&amp;gt;" line="160"/>
                <declaration name="reversedCap" type="EnclosingBall&amp;lt;Sphere2D,S2Point&amp;gt;" line="164"/>
            </method>
            <method name="testPositiveOctantByVertices" type="void" line="172">
                <declaration name="tol" type="double" line="173"/>
                <declaration name="sinTol" type="double" line="174"/>
                <declaration name="octant" type="SphericalPolygonsSet" line="175"/>
                <declaration name="random" type="UnitSphereRandomVectorGenerator" line="176"/>
                <scope line="178">
                    <declaration name="v" type="Vector3D" line="179"/>
                    <scope line="180"/>
                    <scope line="182"/>
                    <scope line="184"/>
                </scope>
            </method>
            <method name="testNonConvex" type="void" line="191">
                <declaration name="tol" type="double" line="192"/>
                <declaration name="sinTol" type="double" line="193"/>
                <declaration name="factory" type="RegionFactory&amp;lt;Sphere2D&amp;gt;" line="194"/>
                <declaration name="plusX" type="SphericalPolygonsSet" line="195"/>
                <declaration name="plusY" type="SphericalPolygonsSet" line="196"/>
                <declaration name="plusZ" type="SphericalPolygonsSet" line="197"/>
                <declaration name="threeOctants" type="SphericalPolygonsSet" line="198"/>
                <declaration name="random" type="UnitSphereRandomVectorGenerator" line="201"/>
                <scope line="203">
                    <declaration name="v" type="Vector3D" line="204"/>
                    <scope line="205"/>
                    <scope line="207"/>
                    <scope line="209"/>
                </scope>
                <declaration name="loops" type="List&amp;lt;Vertex&amp;gt;" line="214"/>
                <declaration name="xPFound" type="boolean" line="216"/>
                <declaration name="yPFound" type="boolean" line="217"/>
                <declaration name="zPFound" type="boolean" line="218"/>
                <declaration name="xVFound" type="boolean" line="219"/>
                <declaration name="yVFound" type="boolean" line="220"/>
                <declaration name="zVFound" type="boolean" line="221"/>
                <declaration name="first" type="Vertex" line="222"/>
                <declaration name="count" type="int" line="223"/>
                <scope line="224">
                    <declaration name="e" type="Edge" line="226"/>
                    <scope line="231"/>
                    <scope line="233"/>
                </scope>
            </method>
            <method name="testModeratlyComplexShape" type="void" line="253">
                <declaration name="tol" type="double" line="254"/>
                <declaration name="boundary" type="List&amp;lt;SubHyperplane&amp;lt;Sphere2D&amp;gt;&amp;gt;" line="255"/>
                <declaration name="polygon" type="SphericalPolygonsSet" line="262"/>
                <declaration name="loops" type="List&amp;lt;Vertex&amp;gt;" line="276"/>
                <declaration name="pXFound" type="boolean" line="278"/>
                <declaration name="mXFound" type="boolean" line="279"/>
                <declaration name="pYFound" type="boolean" line="280"/>
                <declaration name="mYFound" type="boolean" line="281"/>
                <declaration name="pZFound" type="boolean" line="282"/>
                <declaration name="mZFound" type="boolean" line="283"/>
                <declaration name="first" type="Vertex" line="284"/>
                <declaration name="count" type="int" line="285"/>
                <scope line="286">
                    <declaration name="e" type="Edge" line="288"/>
                </scope>
            </method>
            <method name="testSeveralParts" type="void" line="309">
                <comment line="315">
                    first part: +X, +Y, +Z octant                    
                </comment>
                <comment line="320">
                    first part: -X, -Y, -Z octant                    
                </comment>
                <comment line="347">
                    there should be two separate boundary loops                    
                </comment>
                <declaration name="tol" type="double" line="310"/>
                <declaration name="sinTol" type="double" line="311"/>
                <declaration name="boundary" type="List&amp;lt;SubHyperplane&amp;lt;Sphere2D&amp;gt;&amp;gt;" line="312"/>
                <declaration name="polygon" type="SphericalPolygonsSet" line="324"/>
                <declaration name="random" type="UnitSphereRandomVectorGenerator" line="326"/>
                <scope line="328">
                    <declaration name="v" type="Vector3D" line="329"/>
                    <scope line="330"/>
                    <scope line="332"/>
                    <scope line="334"/>
                    <scope line="336"/>
                    <scope line="338"/>
                </scope>
            </method>
            <method name="testPartWithHole" type="void" line="352">
                <comment line="374">
                    there should be two separate boundary loops                    
                </comment>
                <declaration name="tol" type="double" line="353"/>
                <declaration name="alpha" type="double" line="354"/>
                <declaration name="center" type="S2Point" line="355"/>
                <declaration name="hexa" type="SphericalPolygonsSet" line="356"/>
                <declaration name="hole" type="SphericalPolygonsSet" line="357"/>
                <declaration name="hexaWithHole" type="SphericalPolygonsSet" line="361"/>
                <scope line="364">
                    <declaration name="l" type="Location" line="365"/>
                    <scope line="366"/>
                    <scope line="368"/>
                </scope>
            </method>
            <method name="testConcentricSubParts" type="void" line="382">
                <comment line="403">
                    there should be two separate boundary loops                    
                </comment>
                <comment line="417">
                    we expect lots of sign changes as we traverse all concentric rings                    
                </comment>
                <declaration name="tol" type="double" line="383"/>
                <declaration name="center" type="Vector3D" line="384"/>
                <declaration name="hexaOut" type="SphericalPolygonsSet" line="385"/>
                <declaration name="hexaIn" type="SphericalPolygonsSet" line="386"/>
                <declaration name="pentaOut" type="SphericalPolygonsSet" line="387"/>
                <declaration name="pentaIn" type="SphericalPolygonsSet" line="388"/>
                <declaration name="quadriOut" type="SphericalPolygonsSet" line="389"/>
                <declaration name="quadriIn" type="SphericalPolygonsSet" line="390"/>
                <declaration name="triOut" type="SphericalPolygonsSet" line="391"/>
                <declaration name="triIn" type="SphericalPolygonsSet" line="392"/>
                <declaration name="factory" type="RegionFactory&amp;lt;Sphere2D&amp;gt;" line="394"/>
                <declaration name="hexa" type="SphericalPolygonsSet" line="395"/>
                <declaration name="penta" type="SphericalPolygonsSet" line="396"/>
                <declaration name="quadri" type="SphericalPolygonsSet" line="397"/>
                <declaration name="tri" type="SphericalPolygonsSet" line="398"/>
                <declaration name="concentric" type="SphericalPolygonsSet" line="399"/>
                <declaration name="phi" type="double" line="417"/>
            </method>
            <method name="testGeographicalMap" type="void" line="439">
                <declaration name="continental" type="SphericalPolygonsSet" line="441"/>
                <declaration name="corsica" type="SphericalPolygonsSet" line="451"/>
                <declaration name="factory" type="RegionFactory&amp;lt;Sphere2D&amp;gt;" line="455"/>
                <declaration name="zone" type="SphericalPolygonsSet" line="456"/>
                <declaration name="enclosing" type="EnclosingBall&amp;lt;Sphere2D,S2Point&amp;gt;" line="457"/>
                <declaration name="enclosingCenter" type="Vector3D" line="458"/>
                <declaration name="step" type="double" line="460"/>
                <scope line="461">
                    <declaration name="count" type="int" line="462"/>
                    <scope line="463">
                        <scope line="465">
                            <declaration name="p" type="Vector3D" line="466"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="supportPointA" type="S2Point" line="472"/>
                <declaration name="supportPointB" type="S2Point" line="473"/>
                <declaration name="continentalInscribed" type="EnclosingBall&amp;lt;Sphere2D,S2Point&amp;gt;" line="479"/>
                <declaration name="continentalCenter" type="Vector3D" line="481"/>
                <scope line="483">
                    <declaration name="count" type="int" line="484"/>
                    <scope line="485">
                        <scope line="487">
                            <declaration name="p" type="Vector3D" line="488"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="corsicaInscribed" type="EnclosingBall&amp;lt;Sphere2D,S2Point&amp;gt;" line="494"/>
                <declaration name="corsicaCenter" type="Vector3D" line="496"/>
                <scope line="498">
                    <declaration name="count" type="int" line="499"/>
                    <scope line="500">
                        <scope line="502">
                            <declaration name="p" type="Vector3D" line="503"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="create" type="SubCircle" line="512">
                <params>
                    <param name="pole" type="Vector3D"/>
                    <param name="x" type="Vector3D"/>
                    <param name="y" type="Vector3D"/>
                    <param name="tolerance" type="double"/>
                    <param name="limits" type="double"/>
                </params>
                <declaration name="factory" type="RegionFactory&amp;lt;Sphere1D&amp;gt;" line="513"/>
                <declaration name="circle" type="Circle" line="514"/>
                <declaration name="phased" type="Circle" line="515"/>
                <declaration name="set" type="ArcsSet" line="517"/>
                <scope line="518"/>
            </method>
            <method name="buildSimpleZone" type="SphericalPolygonsSet" line="524">
                <params>
                    <param name="points" type="double[][]"/>
                </params>
                <declaration name="vertices" type="S2Point[]" line="525"/>
                <scope line="526"/>
            </method>
            <method name="s2Point" type="S2Point" line="532">
                <params>
                    <param name="latitude" type="double"/>
                    <param name="longitude" type="double"/>
                </params>
            </method>
        </class>
    </source>