<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MathArithmeticException"/>
        <import package="org.apache.commons.math3.exception.NotANumberException"/>
        <import package="org.apache.commons.math3.exception.NotFiniteNumberException"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="EnumeratedIntegerDistributionTest" line="10">
            <javadoc line="10">
                Test class for {@link EnumeratedIntegerDistribution}.                
                <version>
                    $Id: EnumeratedIntegerDistributionTest.java 1456769 2013-03-15 04:51:34Z psteitz $                    
                </version>
            </javadoc>
            <declaration name="testDistribution" type="EnumeratedIntegerDistribution" line="15"/>
            <javadoc line="15">
                The distribution object used for testing.                
            </javadoc>
            <javadoc line="19">
                Creates the default distribution object used for testing.                
            </javadoc>
            <method name="EnumeratedIntegerDistributionTest" type="constructor" line="22"/>
            <javadoc line="25">
                Tests if the EnumeratedIntegerDistribution constructor throws
                  exceptions for invalid data.                
            </javadoc>
            <method name="testExceptions" type="void" line="29">
                <declaration name="invalid" type="EnumeratedIntegerDistribution" line="30"/>
                <scope line="31"/>
                <scope line="35"/>
                <scope line="37"/>
                <scope line="41"/>
                <scope line="43"/>
                <scope line="47"/>
                <scope line="49"/>
                <scope line="53"/>
                <scope line="55"/>
                <scope line="59"/>
            </method>
            <javadoc line="63">
                Tests if the distribution returns proper probability values.                
            </javadoc>
            <method name="testProbability" type="void" line="66">
                <declaration name="points" type="int[]" line="67"/>
                <declaration name="results" type="double[]" line="68"/>
                <scope line="69">
                    <declaration name="probability" type="double" line="70"/>
                </scope>
            </method>
            <javadoc line="74">
                Tests if the distribution returns proper cumulative probability values.                
            </javadoc>
            <method name="testCumulativeProbability" type="void" line="77">
                <declaration name="points" type="int[]" line="78"/>
                <declaration name="results" type="double[]" line="79"/>
                <scope line="80">
                    <declaration name="probability" type="double" line="81"/>
                </scope>
            </method>
            <javadoc line="85">
                Tests if the distribution returns proper mean value.                
            </javadoc>
            <method name="testGetNumericalMean" type="void" line="88"/>
            <javadoc line="91">
                Tests if the distribution returns proper variance.                
            </javadoc>
            <method name="testGetNumericalVariance" type="void" line="94"/>
            <javadoc line="97">
                Tests if the distribution returns proper lower bound.                
            </javadoc>
            <method name="testGetSupportLowerBound" type="void" line="100"/>
            <javadoc line="103">
                Tests if the distribution returns proper upper bound.                
            </javadoc>
            <method name="testGetSupportUpperBound" type="void" line="106"/>
            <javadoc line="109">
                Tests if the distribution returns properly that the support is connected.                
            </javadoc>
            <method name="testIsSupportConnected" type="void" line="112"/>
            <javadoc line="115">
                Tests sampling.                
            </javadoc>
            <method name="testSample" type="void" line="118">
                <declaration name="n" type="int" line="119"/>
                <declaration name="samples" type="int[]" line="121"/>
                <declaration name="sum" type="double" line="123"/>
                <declaration name="sumOfSquares" type="double" line="124"/>
                <scope line="125"/>
            </method>
        </class>
    </source>