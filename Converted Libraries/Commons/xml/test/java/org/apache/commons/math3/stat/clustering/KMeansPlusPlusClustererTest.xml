<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.clustering">
        <import package="java.util.ArrayList"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.Collection"/>
        <import package="java.util.List"/>
        <import package="java.util.Random"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.junit.Assert"/>
        <import package="org.junit.Test"/>
        <class name="KMeansPlusPlusClustererTest" line="31">
            <method name="dimension2" type="void" line="34">
                <comment line="39">
                    first expected cluster                    
                </comment>
                <comment line="49">
                    second expected cluster                    
                </comment>
                <comment line="56">
                    third expected cluster                    
                </comment>
                <declaration name="transformer" type="KMeansPlusPlusClusterer&lt;EuclideanIntegerPoint&gt;" line="35"/>
                <declaration name="points" type="EuclideanIntegerPoint[]" line="37"/>
                <declaration name="clusters" type="List&lt;Cluster&lt;EuclideanIntegerPoint&gt;&gt;" line="67"/>
                <declaration name="cluster1Found" type="boolean" line="71"/>
                <declaration name="cluster2Found" type="boolean" line="72"/>
                <declaration name="cluster3Found" type="boolean" line="73"/>
                <scope line="74">
                    <declaration name="center" type="int[]" line="75"/>
                    <scope line="76"/>
                    <scope line="81"/>
                    <scope line="86"/>
                </scope>
            </method>
            <javadoc line="99">
                JIRA: MATH-305
                  Two points, one cluster, one iteration                
            </javadoc>
            <method name="testPerformClusterAnalysisDegenerate" type="void" line="105">
                <declaration name="transformer" type="KMeansPlusPlusClusterer&lt;EuclideanIntegerPoint&gt;" line="106"/>
                <declaration name="points" type="EuclideanIntegerPoint[]" line="108"/>
                <declaration name="clusters" type="List&lt;Cluster&lt;EuclideanIntegerPoint&gt;&gt;" line="111"/>
                <declaration name="pt1" type="EuclideanIntegerPoint" line="114"/>
                <declaration name="pt2" type="EuclideanIntegerPoint" line="115"/>
            </method>
            <method name="testCertainSpace" type="void" line="122">
                <comment line="132">
                    initialise testvalues                    
                </comment>
                <comment line="137">
                    testvalues will be multiplied                    
                </comment>
                <comment line="141">
                    define the space which will break the cluster algorithm                    
                </comment>
                <comment line="144">
                    multiply the values                    
                </comment>
                <declaration name="strategies" type="KMeansPlusPlusClusterer.EmptyClusterStrategy[]" line="123"/>
                <scope line="128">
                    <declaration name="transformer" type="KMeansPlusPlusClusterer&lt;EuclideanIntegerPoint&gt;" line="129"/>
                    <declaration name="numberOfVariables" type="int" line="131"/>
                    <declaration name="position1" type="int" line="133"/>
                    <declaration name="position2" type="int" line="134"/>
                    <declaration name="position3" type="int" line="135"/>
                    <declaration name="position4" type="int" line="136"/>
                    <declaration name="multiplier" type="int" line="138"/>
                    <declaration name="breakingPoints" type="EuclideanIntegerPoint[]" line="140"/>
                    <scope line="142">
                        <declaration name="points" type="int" line="143"/>
                        <scope line="145"/>
                        <declaration name="euclideanIntegerPoint" type="EuclideanIntegerPoint" line="148"/>
                    </scope>
                    <scope line="156">
                        <declaration name="clusters" type="List&lt;Cluster&lt;EuclideanIntegerPoint&gt;&gt;" line="157"/>
                        <declaration name="sum" type="int" line="160"/>
                        <scope line="161"/>
                    </scope>
                </scope>
            </method>
            <class name="CloseIntegerPoint" line="170">
                <implements interface="Clusterable">
                    <type_params>
                        <type_param name="CloseIntegerPoint"/>
                    </type_params>
                </implements>
                <javadoc line="170">
                    A helper class for testSmallDistances(). This class is similar to EuclideanIntegerPoint, but
                      it defines a different distanceFrom() method that tends to return distances less than 1.                    
                </javadoc>
                <method name="CloseIntegerPoint" type="constructor" line="175">
                    <params>
                        <param name="point" type="EuclideanIntegerPoint"/>
                    </params>
                </method>
                <method name="distanceFrom" type="double" line="179">
                    <params>
                        <param name="p" type="CloseIntegerPoint"/>
                    </params>
                </method>
                <method name="centroidOf" type="CloseIntegerPoint" line="183">
                    <params>
                        <param name="p" type="Collection<CloseIntegerPoint>"/>
                    </params>
                    <declaration name="euclideanPoints" type="Collection&lt;EuclideanIntegerPoint&gt;" line="184"/>
                    <scope line="186"/>
                </method>
                <method name="equals" type="boolean" line="193">
                    <params>
                        <param name="o" type="Object"/>
                    </params>
                    <scope line="194"/>
                    <declaration name="p" type="CloseIntegerPoint" line="197"/>
                </method>
                <method name="hashCode" type="int" line="203"/>
                <declaration name="euclideanPoint" type="EuclideanIntegerPoint" line="207"/>
            </class>
            <javadoc line="210">
                Test points that are very close together. See issue MATH-546.                
            </javadoc>
            <method name="testSmallDistances" type="void" line="214">
                <comment line="215">
                    Create a bunch of CloseIntegerPoints. Most are identical, but one is different by a                    
                </comment>
                <comment line="216">
                    small distance.                    
                </comment>
                <comment line="231">
                    Ask a KMeansPlusPlusClusterer to run zero iterations (i.e., to simply choose initial                    
                </comment>
                <comment line="232">
                    cluster centers).                    
                </comment>
                <comment line="241">
                    Check that one of the chosen centers is the unique point.                    
                </comment>
                <declaration name="repeatedArray" type="int[]" line="217"/>
                <declaration name="uniqueArray" type="int[]" line="218"/>
                <declaration name="repeatedPoint" type="CloseIntegerPoint" line="219"/>
                <declaration name="uniquePoint" type="CloseIntegerPoint" line="221"/>
                <declaration name="points" type="Collection&lt;CloseIntegerPoint&gt;" line="224"/>
                <declaration name="NUM_REPEATED_POINTS" type="int" line="225"/>
                <scope line="226"/>
                <declaration name="RANDOM_SEED" type="long" line="233"/>
                <declaration name="NUM_CLUSTERS" type="int" line="234"/>
                <declaration name="NUM_ITERATIONS" type="int" line="235"/>
                <declaration name="clusterer" type="KMeansPlusPlusClusterer&lt;CloseIntegerPoint&gt;" line="236"/>
                <declaration name="clusters" type="List&lt;Cluster&lt;CloseIntegerPoint&gt;&gt;" line="238"/>
                <declaration name="uniquePointIsCenter" type="boolean" line="242"/>
                <scope line="243">
                    <scope line="244"/>
                </scope>
            </method>
            <javadoc line="251">
                2 variables cannot be clustered into 3 clusters. See issue MATH-436.                
            </javadoc>
            <method name="testPerformClusterAnalysisToManyClusters" type="void" line="255">
                <declaration name="transformer" type="KMeansPlusPlusClusterer&lt;EuclideanIntegerPoint&gt;" line="256"/>
                <declaration name="points" type="EuclideanIntegerPoint[]" line="260"/>
            </method>
        </class>
    </source>