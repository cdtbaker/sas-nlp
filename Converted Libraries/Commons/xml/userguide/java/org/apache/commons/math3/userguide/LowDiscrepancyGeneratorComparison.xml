<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.userguide">
        <import package="java.awt.Color"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.GridBagConstraints"/>
        <import package="java.awt.GridBagLayout"/>
        <import package="java.awt.Insets"/>
        <import package="java.awt.RenderingHints"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="javax.swing.JComponent"/>
        <import package="javax.swing.JLabel"/>
        <import package="javax.swing.JTextArea"/>
        <import package="org.apache.commons.math3.geometry.euclidean.twod.Vector2D"/>
        <import package="org.apache.commons.math3.random.HaltonSequenceGenerator"/>
        <import package="org.apache.commons.math3.random.JDKRandomGenerator"/>
        <import package="org.apache.commons.math3.random.MersenneTwister"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.random.RandomVectorGenerator"/>
        <import package="org.apache.commons.math3.random.SobolSequenceGenerator"/>
        <import package="org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator"/>
        <import package="org.apache.commons.math3.random.UniformRandomGenerator"/>
        <import package="org.apache.commons.math3.userguide.ExampleUtils.ExampleFrame"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.Pair"/>
        <class name="LowDiscrepancyGeneratorComparison" line="48">
            <javadoc line="48">
                Plots 2D samples drawn from various pseudo / quasi-random generators.                
            </javadoc>
            <method name="makeCircle" type="List&lt;Vector2D&gt;" line="53">
                <params>
                    <param name="samples" type="int"/>
                    <param name="generator" type="RandomVectorGenerator"/>
                </params>
                <comment line="62">
                    normalize points first                    
                </comment>
                <comment line="65">
                    now test if the sample is within the unit circle                    
                </comment>
                <declaration name="points" type="List&amp;lt;Vector2D&amp;gt;" line="54"/>
                <scope line="55">
                    <declaration name="vector" type="double[]" line="56"/>
                    <declaration name="point" type="Vector2D" line="57"/>
                </scope>
                <declaration name="circlePoints" type="List&amp;lt;Vector2D&amp;gt;" line="65"/>
                <scope line="66">
                    <declaration name="criteria" type="double" line="67"/>
                    <scope line="68"/>
                </scope>
            </method>
            <method name="makeRandom" type="List&lt;Vector2D&gt;" line="76">
                <params>
                    <param name="samples" type="int"/>
                    <param name="generator" type="RandomVectorGenerator"/>
                </params>
                <declaration name="points" type="List&amp;lt;Vector2D&amp;gt;" line="77"/>
                <scope line="78">
                    <declaration name="vector" type="double[]" line="79"/>
                    <declaration name="point" type="Vector2D" line="80"/>
                </scope>
            </method>
            <method name="normalize" type="List&lt;Vector2D&gt;" line="87">
                <params>
                    <param name="input" type="List&lt;Vector2D&gt;"/>
                </params>
                <comment line="89">
                    find the mininum and maximum x value in the dataset                    
                </comment>
                <comment line="99">
                    use the minimum to detect if we either have input values in the range [0, 1] or [-sqrt(3), sqrt(3)]                    
                </comment>
                <comment line="113">
                    normalize to the range [-1, 1]                    
                </comment>
                <declaration name="minX" type="double" line="89"/>
                <declaration name="maxX" type="double" line="90"/>
                <scope line="91"/>
                <declaration name="minY" type="double" line="96"/>
                <scope line="99"/>
                <scope line="102"/>
                <declaration name="rangeX" type="double" line="107"/>
                <declaration name="rangeY" type="double" line="108"/>
                <declaration name="points" type="List&amp;lt;Vector2D&amp;gt;" line="109"/>
                <scope line="110">
                    <declaration name="arr" type="double[]" line="111"/>
                </scope>
            </method>
            <class name="Display" line="120">
                <extends class="ExampleFrame"/>
                <method name="Display" type="constructor" line="123">
                    <declaration name="datasets" type="int[]" line="129"/>
                    <declaration name="generators" type="List&amp;lt;Pair&amp;lt;String,RandomVectorGenerator&amp;gt;&amp;gt;" line="130"/>
                    <anonymous_class line="134">
                        <declaration name="rngs" type="RandomGenerator[]" line="136"/>
                        <method name="nextVector" type="double[]" line="141">
                            <declaration name="vector" type="double[]" line="142"/>
                        </method>
                    </anonymous_class>
                    <declaration name="c" type="GridBagConstraints" line="152"/>
                    <scope line="158">
                        <declaration name="text" type="JTextArea" line="159"/>
                    </scope>
                    <declaration name="saveY" type="int" line="165"/>
                    <scope line="168">
                        <declaration name="text" type="JLabel" line="169"/>
                    </scope>
                    <scope line="176">
                        <scope line="179">
                            <declaration name="points" type="List&amp;lt;Vector2D&amp;gt;" line="180"/>
                            <declaration name="samples" type="int" line="181"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="Plot" line="205">
                <extends class="JComponent"/>
                <declaration name="PAD" type="double" line="208"/>
                <declaration name="points" type="List&amp;lt;Vector2D&amp;gt;" line="210"/>
                <method name="Plot" type="constructor" line="212">
                    <params>
                        <param name="points" type="List&lt;Vector2D&gt;"/>
                    </params>
                </method>
                <method name="paintComponent" type="void" line="217">
                    <params>
                        <param name="g" type="Graphics"/>
                    </params>
                    <declaration name="g2" type="Graphics2D" line="219"/>
                    <declaration name="w" type="int" line="223"/>
                    <declaration name="h" type="int" line="224"/>
                    <scope line="231">
                        <declaration name="p" type="Vector2D" line="232"/>
                        <declaration name="arr" type="double[]" line="233"/>
                    </scope>
                </method>
                <method name="getPreferredSize" type="Dimension" line="239"/>
                <method name="transform" type="Vector2D" line="243">
                    <params>
                        <param name="point" type="Vector2D"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <declaration name="arr" type="double[]" line="244"/>
                </method>
            </class>
            <method name="main" type="void" line="250">
                <params>
                    <param name="args" type="String[]"/>
                </params>
            </method>
        </class>
    </source>