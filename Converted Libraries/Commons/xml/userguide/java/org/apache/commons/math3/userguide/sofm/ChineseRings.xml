<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.userguide.sofm">
        <import package="java.util.Iterator"/>
        <import package="org.apache.commons.math3.geometry.euclidean.threed.Vector3D"/>
        <import package="org.apache.commons.math3.geometry.euclidean.threed.Rotation"/>
        <import package="org.apache.commons.math3.random.UnitSphereRandomVectorGenerator"/>
        <import package="org.apache.commons.math3.distribution.RealDistribution"/>
        <import package="org.apache.commons.math3.distribution.UniformRealDistribution"/>
        <class name="ChineseRings" line="27">
            <javadoc line="27">
                Class that creates two intertwined rings.
                  Each ring is composed of a cloud of points.                
            </javadoc>
            <declaration name="points" type="Vector3D[]" line="32"/>
            <javadoc line="32">
                Points in the two rings.                
            </javadoc>
            <javadoc line="35">
                @param orientationRing1 Vector othogonal to the plane containing the
                  first ring.                
                <param>
                    radiusRing1 Radius of the first ring.                    
                </param>
                <param>
                    halfWidthRing1 Half-width of the first ring.                    
                </param>
                <param>
                    radiusRing2 Radius of the second ring.                    
                </param>
                <param>
                    halfWidthRing2 Half-width of the second ring.                    
                </param>
                <param>
                    numPointsRing1 Number of points in the first ring.                    
                </param>
                <param>
                    numPointsRing2 Number of points in the second ring.                    
                </param>
            </javadoc>
            <method name="ChineseRings" type="constructor" line="51">
                <params>
                    <param name="orientationRing1" type="Vector3D"/>
                    <param name="radiusRing1" type="double"/>
                    <param name="halfWidthRing1" type="double"/>
                    <param name="radiusRing2" type="double"/>
                    <param name="halfWidthRing2" type="double"/>
                    <param name="numPointsRing1" type="int"/>
                    <param name="numPointsRing2" type="int"/>
                </params>
                <comment line="53">
                    First ring (centered at the origin).                    
                </comment>
                <comment line="55">
                    Second ring (centered around the first ring).                    
                </comment>
                <comment line="58">
                    Create two rings lying in xy-plane.                    
                </comment>
                <comment line="71">
                    First ring is in the xy-plane, centered at (0, 0, 0).                    
                </comment>
                <comment line="86">
                    Second ring is in the xz-plane, centered at (radiusRing1, 0, 0).                    
                </comment>
                <comment line="92">
                    Move first and second rings into position.                    
                </comment>
                <declaration name="firstRing" type="Vector3D[]" line="53"/>
                <declaration name="secondRing" type="Vector3D[]" line="55"/>
                <declaration name="unit" type="UnitSphereRandomVectorGenerator" line="58"/>
                <declaration name="radius1" type="RealDistribution" line="61"/>
                <declaration name="widthRing1" type="RealDistribution" line="64"/>
                <scope line="67">
                    <declaration name="v" type="double[]" line="68"/>
                    <declaration name="r" type="double" line="69"/>
                </scope>
                <declaration name="radius2" type="RealDistribution" line="76"/>
                <declaration name="widthRing2" type="RealDistribution" line="79"/>
                <scope line="82">
                    <declaration name="v" type="double[]" line="83"/>
                    <declaration name="r" type="double" line="84"/>
                </scope>
                <declaration name="rot" type="Rotation" line="92"/>
                <declaration name="count" type="int" line="94"/>
                <scope line="96"/>
                <scope line="99"/>
            </method>
            <javadoc line="104">
                Gets all the points.                
            </javadoc>
            <method name="getPoints" type="Vector3D[]" line="107"/>
        </class>
    </source>