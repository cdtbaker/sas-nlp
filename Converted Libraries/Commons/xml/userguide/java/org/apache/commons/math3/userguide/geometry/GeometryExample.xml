<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.userguide.geometry">
        <import package="java.awt.BorderLayout"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.event.ActionEvent"/>
        <import package="java.awt.event.ActionListener"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="javax.swing.BorderFactory"/>
        <import package="javax.swing.JButton"/>
        <import package="javax.swing.JComponent"/>
        <import package="javax.swing.JPanel"/>
        <import package="javax.swing.JSplitPane"/>
        <import package="org.apache.commons.math3.geometry.enclosing.Encloser"/>
        <import package="org.apache.commons.math3.geometry.enclosing.EnclosingBall"/>
        <import package="org.apache.commons.math3.geometry.enclosing.WelzlEncloser"/>
        <import package="org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator"/>
        <import package="org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D"/>
        <import package="org.apache.commons.math3.geometry.euclidean.twod.Segment"/>
        <import package="org.apache.commons.math3.geometry.euclidean.twod.Vector2D"/>
        <import package="org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D"/>
        <import package="org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHullGenerator2D"/>
        <import package="org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain"/>
        <import package="org.apache.commons.math3.random.MersenneTwister"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.userguide.ExampleUtils"/>
        <import package="org.apache.commons.math3.userguide.ExampleUtils.ExampleFrame"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.piccolo2d.PCamera"/>
        <import package="org.piccolo2d.PCanvas"/>
        <import package="org.piccolo2d.PNode"/>
        <import package="org.piccolo2d.event.PBasicInputEventHandler"/>
        <import package="org.piccolo2d.event.PInputEvent"/>
        <import package="org.piccolo2d.event.PMouseWheelZoomEventHandler"/>
        <import package="org.piccolo2d.nodes.PPath"/>
        <import package="org.piccolo2d.nodes.PText"/>
        <class name="GeometryExample" line="58">
            <javadoc line="58">
                Simple example illustrating some parts of the geometry package.
                  TODO: 
                  - select tolerance level
                  - allow editing of the point set                
            </javadoc>
            <method name="createRandomPoints" type="List&lt;Vector2D&gt;" line="67">
                <params>
                    <param name="size" type="int"/>
                </params>
                <comment line="71">
                    create the cloud container                    
                </comment>
                <comment line="73">
                    fill the cloud with a random distribution of points                    
                </comment>
                <declaration name="random" type="RandomGenerator" line="68"/>
                <declaration name="points" type="List&amp;lt;Vector2D&amp;gt;" line="71"/>
                <scope line="73"/>
            </method>
            <method name="createCircle" type="List&lt;Vector2D&gt;" line="81">
                <params>
                    <param name="samples" type="int"/>
                </params>
                <declaration name="points" type="List&amp;lt;Vector2D&amp;gt;" line="82"/>
                <declaration name="center" type="Vector2D" line="83"/>
                <declaration name="range" type="double" line="84"/>
                <declaration name="step" type="double" line="85"/>
                <scope line="86">
                    <declaration name="circle" type="Vector2D" line="87"/>
                </scope>
            </method>
            <method name="createCross" type="List&lt;Vector2D&gt;" line="94">
                <declaration name="points" type="List&amp;lt;Vector2D&amp;gt;" line="95"/>
                <scope line="97"/>
            </method>
            <method name="createCanvas" type="PCanvas" line="105">
                <comment line="140">
                    uninstall default zoom event handler                    
                </comment>
                <comment line="143">
                    install mouse wheel zoom event handler                    
                </comment>
                <declaration name="canvas" type="PCanvas" line="106"/>
                <declaration name="camera" type="PCamera" line="107"/>
                <declaration name="tooltipNode" type="PText" line="109"/>
                <anonymous_class line="113">
                    <method name="mouseMoved" type="void" line="114">
                        <params>
                            <param name="event" type="PInputEvent"/>
                        </params>
                    </method>
                    <method name="mouseDragged" type="void" line="118">
                        <params>
                            <param name="event" type="PInputEvent"/>
                        </params>
                    </method>
                    <method name="updateToolTip" type="void" line="122">
                        <params>
                            <param name="event" type="PInputEvent"/>
                        </params>
                        <declaration name="n" type="PNode" line="123"/>
                        <declaration name="object" type="Object" line="124"/>
                        <scope line="125">
                            <declaration name="tooltipString" type="String" line="126"/>
                            <declaration name="p" type="Point2D" line="127"/>
                        </scope>
                        <scope line="133"/>
                    </method>
                </anonymous_class>
                <declaration name="mouseWheelZoomEventHandler" type="PMouseWheelZoomEventHandler" line="143"/>
            </method>
            <class name="Display" line="149">
                <extends class="ExampleFrame"/>
                <declaration name="points" type="List&amp;lt;Vector2D&amp;gt;" line="152"/>
                <declaration name="canvas" type="PCanvas" line="153"/>
                <declaration name="container" type="JComponent" line="154"/>
                <declaration name="controlPanel" type="JComponent" line="155"/>
                <method name="Display" type="constructor" line="157">
                    <declaration name="random" type="JButton" line="167"/>
                    <anonymous_class line="170">
                        <method name="actionPerformed" type="void" line="173">
                            <params>
                                <param name="e" type="ActionEvent"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="circle" type="JButton" line="181"/>
                    <anonymous_class line="184">
                        <method name="actionPerformed" type="void" line="187">
                            <params>
                                <param name="e" type="ActionEvent"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="cross" type="JButton" line="195"/>
                    <anonymous_class line="198">
                        <method name="actionPerformed" type="void" line="201">
                            <params>
                                <param name="e" type="ActionEvent"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="splitpane" type="JSplitPane" line="209"/>
                </method>
                <method name="getMainPanel" type="Component" line="219"/>
                <method name="paintConvexHull" type="void" line="223">
                    <comment line="236">
                        AklToussaintHeuristic.reducePoints(points));                        
                    </comment>
                    <declaration name="pointSet" type="PNode" line="224"/>
                    <scope line="225">
                        <declaration name="node" type="PNode" line="226"/>
                    </scope>
                    <declaration name="generator" type="ConvexHullGenerator2D" line="234"/>
                    <declaration name="hull" type="ConvexHull2D" line="235"/>
                    <declaration name="hullNode" type="PNode" line="237"/>
                    <scope line="238">
                        <declaration name="node" type="PPath" line="239"/>
                    </scope>
                    <scope line="246">
                        <declaration name="node" type="PPath" line="247"/>
                    </scope>
                    <declaration name="encloser" type="Encloser&amp;lt;Euclidean2D,Vector2D&amp;gt;" line="257"/>
                    <declaration name="ball" type="EnclosingBall&amp;lt;Euclidean2D,Vector2D&amp;gt;" line="259"/>
                    <declaration name="radius" type="double" line="261"/>
                    <declaration name="ballCenter" type="PPath" line="262"/>
                    <declaration name="ballNode" type="PPath" line="268"/>
                </method>
            </class>
            <method name="main" type="void" line="277">
                <params>
                    <param name="argv" type="String[]"/>
                </params>
            </method>
        </class>
    </source>