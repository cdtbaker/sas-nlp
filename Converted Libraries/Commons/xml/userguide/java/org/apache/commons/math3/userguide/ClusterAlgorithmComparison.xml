<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.userguide">
        <import package="java.awt.Color"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.GridBagConstraints"/>
        <import package="java.awt.GridBagLayout"/>
        <import package="java.awt.Insets"/>
        <import package="java.awt.RenderingHints"/>
        <import package="java.awt.Shape"/>
        <import package="java.awt.geom.Ellipse2D"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.Collections"/>
        <import package="java.util.List"/>
        <import package="javax.swing.JComponent"/>
        <import package="javax.swing.JLabel"/>
        <import package="org.apache.commons.math3.distribution.NormalDistribution"/>
        <import package="org.apache.commons.math3.geometry.euclidean.twod.Vector2D"/>
        <import package="org.apache.commons.math3.ml.clustering.CentroidCluster"/>
        <import package="org.apache.commons.math3.ml.clustering.Cluster"/>
        <import package="org.apache.commons.math3.ml.clustering.Clusterable"/>
        <import package="org.apache.commons.math3.ml.clustering.Clusterer"/>
        <import package="org.apache.commons.math3.ml.clustering.DBSCANClusterer"/>
        <import package="org.apache.commons.math3.ml.clustering.DoublePoint"/>
        <import package="org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer"/>
        <import package="org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer"/>
        <import package="org.apache.commons.math3.random.RandomAdaptor"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.random.SobolSequenceGenerator"/>
        <import package="org.apache.commons.math3.random.Well19937c"/>
        <import package="org.apache.commons.math3.userguide.ExampleUtils.ExampleFrame"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.Pair"/>
        <class name="ClusterAlgorithmComparison" line="55">
            <javadoc line="55">
                Plots clustering results for various algorithms and datasets.
                  Based on
                  &lt;a href=&quot;http://scikit-learn.org/stable/auto_examples/cluster/plot_cluster_comparison.html&quot;&gt;scikit learn&lt;/a&gt;.                
            </javadoc>
            <method name="makeCircles" type="List&lt;Vector2D&gt;" line="62">
                <params>
                    <param name="samples" type="int"/>
                    <param name="shuffle" type="boolean"/>
                    <param name="noise" type="double"/>
                    <param name="factor" type="double"/>
                    <param name="random" type="RandomGenerator"/>
                </params>
                <scope line="63"/>
                <declaration name="dist" type="NormalDistribution" line="67"/>
                <declaration name="points" type="List&amp;lt;Vector2D&amp;gt;" line="69"/>
                <declaration name="range" type="double" line="70"/>
                <declaration name="step" type="double" line="71"/>
                <scope line="72">
                    <declaration name="outerCircle" type="Vector2D" line="73"/>
                    <declaration name="innerCircle" type="Vector2D" line="74"/>
                </scope>
                <scope line="80"/>
            </method>
            <method name="makeMoons" type="List&lt;Vector2D&gt;" line="87">
                <params>
                    <param name="samples" type="int"/>
                    <param name="shuffle" type="boolean"/>
                    <param name="noise" type="double"/>
                    <param name="random" type="RandomGenerator"/>
                </params>
                <declaration name="dist" type="NormalDistribution" line="88"/>
                <declaration name="nSamplesOut" type="int" line="90"/>
                <declaration name="nSamplesIn" type="int" line="91"/>
                <declaration name="points" type="List&amp;lt;Vector2D&amp;gt;" line="93"/>
                <declaration name="range" type="double" line="94"/>
                <declaration name="step" type="double" line="95"/>
                <scope line="96">
                    <declaration name="outerCircle" type="Vector2D" line="97"/>
                </scope>
                <scope line="102">
                    <declaration name="innerCircle" type="Vector2D" line="103"/>
                </scope>
                <scope line="107"/>
            </method>
            <method name="makeBlobs" type="List&lt;Vector2D&gt;" line="115">
                <params>
                    <param name="samples" type="int"/>
                    <param name="centers" type="int"/>
                    <param name="clusterStd" type="double"/>
                    <param name="min" type="double"/>
                    <param name="max" type="double"/>
                    <param name="shuffle" type="boolean"/>
                    <param name="random" type="RandomGenerator"/>
                </params>
                <declaration name="dist" type="NormalDistribution" line="117"/>
                <declaration name="range" type="double" line="119"/>
                <declaration name="centerPoints" type="Vector2D[]" line="120"/>
                <scope line="121">
                    <declaration name="x" type="double" line="122"/>
                    <declaration name="y" type="double" line="123"/>
                </scope>
                <declaration name="nSamplesPerCenter" type="int[]" line="127"/>
                <declaration name="count" type="int" line="128"/>
                <scope line="131"/>
                <declaration name="points" type="List&amp;lt;Vector2D&amp;gt;" line="135"/>
                <scope line="136">
                    <scope line="137">
                        <declaration name="point" type="Vector2D" line="138"/>
                    </scope>
                </scope>
                <scope line="143"/>
            </method>
            <method name="makeRandom" type="List&lt;Vector2D&gt;" line="150">
                <params>
                    <param name="samples" type="int"/>
                </params>
                <declaration name="generator" type="SobolSequenceGenerator" line="151"/>
                <declaration name="points" type="List&amp;lt;Vector2D&amp;gt;" line="153"/>
                <scope line="154">
                    <declaration name="vector" type="double[]" line="155"/>
                    <declaration name="point" type="Vector2D" line="158"/>
                </scope>
            </method>
            <method name="generateNoiseVector" type="Vector2D" line="165">
                <params>
                    <param name="distribution" type="NormalDistribution"/>
                </params>
            </method>
            <method name="normalize" type="List&lt;DoublePoint&gt;" line="169">
                <params>
                    <param name="input" type="List&lt;Vector2D&gt;"/>
                    <param name="minX" type="double"/>
                    <param name="maxX" type="double"/>
                    <param name="minY" type="double"/>
                    <param name="maxY" type="double"/>
                </params>
                <declaration name="rangeX" type="double" line="170"/>
                <declaration name="rangeY" type="double" line="171"/>
                <declaration name="points" type="List&amp;lt;DoublePoint&amp;gt;" line="172"/>
                <scope line="173">
                    <declaration name="arr" type="double[]" line="174"/>
                </scope>
            </method>
            <class name="Display" line="182">
                <extends class="ExampleFrame"/>
                <method name="Display" type="constructor" line="185">
                    <declaration name="nSamples" type="int" line="191"/>
                    <declaration name="rng" type="RandomGenerator" line="193"/>
                    <declaration name="datasets" type="List&amp;lt;List&amp;lt;DoublePoint&amp;gt;&amp;gt;" line="194"/>
                    <declaration name="algorithms" type="List&amp;lt;Pair&amp;lt;String,Clusterer&amp;lt;DoublePoint&amp;gt;&amp;gt;&amp;gt;" line="201"/>
                    <declaration name="c" type="GridBagConstraints" line="209"/>
                    <scope line="215">
                        <declaration name="text" type="JLabel" line="216"/>
                    </scope>
                    <scope line="222">
                        <scope line="224">
                            <declaration name="start" type="long" line="225"/>
                            <declaration name="clusters" type="List&amp;lt;? extends Cluster&amp;lt;DoublePoint&amp;gt;&amp;gt;" line="226"/>
                            <declaration name="end" type="long" line="227"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="ClusterPlot" line="237">
                <extends class="JComponent"/>
                <declaration name="PAD" type="double" line="240"/>
                <declaration name="clusters" type="List&amp;lt;? extends Cluster&amp;lt;DoublePoint&amp;gt;&amp;gt;" line="242"/>
                <declaration name="duration" type="long" line="243"/>
                <method name="ClusterPlot" type="constructor" line="245">
                    <params>
                        <param name="clusters" type="List&lt;? extends Cluster&lt;DoublePoint&gt;&gt;"/>
                        <param name="duration" type="long"/>
                    </params>
                </method>
                <method name="paintComponent" type="void" line="251">
                    <params>
                        <param name="g" type="Graphics"/>
                    </params>
                    <declaration name="g2" type="Graphics2D" line="253"/>
                    <declaration name="w" type="int" line="257"/>
                    <declaration name="h" type="int" line="258"/>
                    <declaration name="index" type="int" line="265"/>
                    <declaration name="colors" type="Color[]" line="266"/>
                    <scope line="267">
                        <scope line="269">
                            <declaration name="p" type="Clusterable" line="270"/>
                            <declaration name="arr" type="double[]" line="271"/>
                        </scope>
                        <scope line="275">
                            <declaration name="p" type="Clusterable" line="276"/>
                            <declaration name="arr" type="double[]" line="277"/>
                            <declaration name="s" type="Shape" line="278"/>
                        </scope>
                    </scope>
                </method>
                <method name="getPreferredSize" type="Dimension" line="290"/>
                <method name="transform" type="Clusterable" line="294">
                    <params>
                        <param name="point" type="Clusterable"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <declaration name="arr" type="double[]" line="295"/>
                </method>
            </class>
            <method name="main" type="void" line="301">
                <params>
                    <param name="args" type="String[]"/>
                </params>
            </method>
        </class>
    </source>