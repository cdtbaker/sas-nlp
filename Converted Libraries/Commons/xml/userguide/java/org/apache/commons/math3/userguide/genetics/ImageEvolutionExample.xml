<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.userguide.genetics">
        <import package="java.awt.Component"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.FlowLayout"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.event.ActionEvent"/>
        <import package="java.awt.event.ActionListener"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.io.File"/>
        <import package="java.io.IOException"/>
        <import package="java.util.LinkedList"/>
        <import package="java.util.List"/>
        <import package="javax.imageio.ImageIO"/>
        <import package="javax.swing.Box"/>
        <import package="javax.swing.ImageIcon"/>
        <import package="javax.swing.JButton"/>
        <import package="javax.swing.JLabel"/>
        <import package="org.apache.commons.math3.genetics.Chromosome"/>
        <import package="org.apache.commons.math3.genetics.ElitisticListPopulation"/>
        <import package="org.apache.commons.math3.genetics.GeneticAlgorithm"/>
        <import package="org.apache.commons.math3.genetics.Population"/>
        <import package="org.apache.commons.math3.genetics.TournamentSelection"/>
        <import package="org.apache.commons.math3.genetics.UniformCrossover"/>
        <import package="org.apache.commons.math3.userguide.ExampleUtils"/>
        <import package="org.apache.commons.math3.userguide.ExampleUtils.ExampleFrame"/>
        <class name="ImageEvolutionExample" line="47">
            <javadoc line="47">
                This example shows a more advanced use of a genetic algorithm: approximate a raster image
                  with ~100 semi-transparent polygons of length 6.
                  &lt;p&gt;
                  The fitness function is quite simple yet expensive to compute:
                  - draw the polygons of a chromosome to an image
                  - compare each pixel with the corresponding reference image
                  &lt;p&gt;
                  To improve the speed of the calculation, we calculate the fitness not on the original image size,
                  but rather on a scaled down version, which is sufficient to demonstrate the power of such a genetic algorithm.
                  &lt;p&gt;
                  TODO:
                  - improve user interface
                  - make algorithm parameters configurable
                  - add a gallery of results after x iterations / minutes (either automatic or based on button click)
                  - allow loading / selection of other images
                  - add logging in the user interface, e.g. number of generations, time spent, ...                
                <see>
                    &lt;a href=&quot;http://www.nihilogic.dk/labs/evolving-images/&quot;&gt;Evolving Images with JavaScript and canvas (Nihilogic)&lt;/a&gt;                    
                </see>
            </javadoc>
            <declaration name="POPULATION_SIZE" type="int" line="71"/>
            <declaration name="TOURNAMENT_ARITY" type="int" line="72"/>
            <declaration name="MUTATION_RATE" type="float" line="73"/>
            <declaration name="MUTATION_CHANGE" type="float" line="74"/>
            <declaration name="POLYGON_LENGTH" type="int" line="76"/>
            <declaration name="POLYGON_COUNT" type="int" line="77"/>
            <class name="Display" line="79">
                <extends class="ExampleFrame"/>
                <declaration name="ga" type="GeneticAlgorithm" line="81"/>
                <declaration name="currentPopulation" type="Population" line="82"/>
                <declaration name="bestFit" type="Chromosome" line="83"/>
                <declaration name="internalThread" type="Thread" line="85"/>
                <declaration name="noStopRequested" type="boolean" line="86"/>
                <declaration name="ref" type="BufferedImage" line="88"/>
                <declaration name="referenceImage" type="BufferedImage" line="90"/>
                <declaration name="testImage" type="BufferedImage" line="91"/>
                <declaration name="painter" type="ImagePainter" line="93"/>
                <method name="Display" type="constructor" line="95">
                    <comment line="105">
                        ref = ImageIO.read(new File(&quot;resources/feather-small.gif&quot;));                        
                    </comment>
                    <comment line="116">
                        set the images used for calculating the fitness function:
                           refImage  - the reference image
                           testImage - the test image to draw the current chromosome                        
                    </comment>
                    <comment line="138">
                        initialize a new genetic algorithm                        
                    </comment>
                    <comment line="143">
                        initial population                        
                    </comment>
                    <declaration name="bar" type="Box" line="101"/>
                    <declaration name="picLabel" type="JLabel" line="109"/>
                    <declaration name="startButton" type="JButton" line="123"/>
                    <anonymous_class line="127">
                        <method name="actionPerformed" type="void" line="128">
                            <params>
                                <param name="e" type="ActionEvent"/>
                            </params>
                            <scope line="129"/>
                            <scope line="131"/>
                        </method>
                    </anonymous_class>
                </method>
                <method name="isAlive" type="boolean" line="147"/>
                <method name="stopRequest" type="void" line="151"/>
                <method name="startEvolution" type="void" line="157">
                    <anonymous_class line="159">
                        <method name="run" type="void" line="160">
                            <declaration name="evolution" type="int" line="161"/>
                            <scope line="162"/>
                        </method>
                    </anonymous_class>
                    <declaration name="r" type="Runnable" line="159"/>
                </method>
                <class name="ImagePainter" line="177">
                    <extends class="Component"/>
                    <declaration name="width" type="int" line="179"/>
                    <declaration name="height" type="int" line="180"/>
                    <method name="ImagePainter" type="constructor" line="182">
                        <params>
                            <param name="width" type="int"/>
                            <param name="height" type="int"/>
                        </params>
                    </method>
                    <method name="getPreferredSize" type="Dimension" line="187"/>
                    <method name="getMinimumSize" type="Dimension" line="192"/>
                    <method name="getMaximumSize" type="Dimension" line="197"/>
                    <method name="paint" type="void" line="201">
                        <params>
                            <param name="g" type="Graphics"/>
                        </params>
                        <declaration name="chromosome" type="PolygonChromosome" line="202"/>
                    </method>
                </class>
            </class>
            <method name="main" type="void" line="210">
                <params>
                    <param name="args" type="String[]"/>
                </params>
            </method>
            <method name="resizeImage" type="BufferedImage" line="214">
                <params>
                    <param name="originalImage" type="BufferedImage"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="type" type="int"/>
                </params>
                <declaration name="resizedImage" type="BufferedImage" line="215"/>
                <declaration name="g" type="Graphics2D" line="216"/>
            </method>
            <method name="getInitialPopulation" type="Population" line="222">
                <declaration name="popList" type="List&amp;lt;Chromosome&amp;gt;" line="223"/>
                <scope line="224"/>
            </method>
        </class>
    </source>