<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.euclidean.threed">
        <import package="org.apache.commons.math3.geometry.euclidean.oned.Vector1D"/>
        <import package="org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D"/>
        <import package="org.apache.commons.math3.geometry.euclidean.twod.Vector2D"/>
        <import package="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet"/>
        <import package="org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane"/>
        <import package="org.apache.commons.math3.geometry.partitioning.BSPTree"/>
        <import package="org.apache.commons.math3.geometry.partitioning.Hyperplane"/>
        <import package="org.apache.commons.math3.geometry.partitioning.Region"/>
        <import package="org.apache.commons.math3.geometry.partitioning.Side"/>
        <import package="org.apache.commons.math3.geometry.partitioning.SubHyperplane"/>
        <class name="SubPlane" line="12">
            <extends class="AbstractSubHyperplane">
                <type_params>
                    <type_param name="Euclidean3D"/>
                    <type_param name="Euclidean2D"/>
                </type_params>
            </extends>
            <javadoc line="12">
                This class represents a sub-hyperplane for {@link Plane}.                
                <version>
                    $Id: SubPlane.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
                <since>
                    3.0                    
                </since>
            </javadoc>
            <javadoc line="18">
                Simple constructor.                
                <param>
                    hyperplane underlying hyperplane                    
                </param>
                <param>
                    remainingRegion remaining region of the hyperplane                    
                </param>
            </javadoc>
            <method name="SubPlane" type="constructor" line="23">
                <params>
                    <param name="hyperplane" type="Hyperplane<Euclidean3D>"/>
                    <param name="remainingRegion" type="Region<Euclidean2D>"/>
                </params>
            </method>
            <javadoc line="26">
                {@inheritDoc}                
            </javadoc>
            <method name="buildNew" type="AbstractSubHyperplane<Euclidean3D,Euclidean2D>" line="29">
                <params>
                    <param name="hyperplane" type="Hyperplane<Euclidean3D>"/>
                    <param name="remainingRegion" type="Region<Euclidean2D>"/>
                </params>
            </method>
            <javadoc line="32">
                {@inheritDoc}                
            </javadoc>
            <method name="side" type="Side" line="35">
                <params>
                    <param name="hyperplane" type="Hyperplane<Euclidean3D>"/>
                </params>
                <declaration name="otherPlane" type="Plane" line="36"/>
                <declaration name="thisPlane" type="Plane" line="37"/>
                <declaration name="inter" type="Line" line="38"/>
                <scope line="39">
                    <declaration name="global" type="double" line="40"/>
                </scope>
                <declaration name="p" type="Vector2D" line="43"/>
                <declaration name="q" type="Vector2D" line="44"/>
                <declaration name="crossP" type="Vector3D" line="45"/>
                <scope line="46">
                    <declaration name="tmp" type="Vector2D" line="47"/>
                </scope>
                <declaration name="line2D" type="org.apache.commons.math3.geometry.euclidean.twod.Line" line="51"/>
            </method>
            <javadoc line="54">
                Split the instance in two parts by an hyperplane.                
                <param>
                    hyperplane splitting hyperplane                    
                </param>
                <return>
                    an object containing both the part of the instance
                      on the plus side of the instance and the part of the
                      instance on the minus side of the instance                    
                </return>
            </javadoc>
            <method name="split" type="SplitSubHyperplane<Euclidean3D>" line="61">
                <params>
                    <param name="hyperplane" type="Hyperplane<Euclidean3D>"/>
                </params>
                <declaration name="otherPlane" type="Plane" line="62"/>
                <declaration name="thisPlane" type="Plane" line="63"/>
                <declaration name="inter" type="Line" line="64"/>
                <scope line="65">
                    <declaration name="global" type="double" line="66"/>
                </scope>
                <declaration name="p" type="Vector2D" line="69"/>
                <declaration name="q" type="Vector2D" line="70"/>
                <declaration name="crossP" type="Vector3D" line="71"/>
                <scope line="72">
                    <declaration name="tmp" type="Vector2D" line="73"/>
                </scope>
                <declaration name="l2DMinus" type="SubHyperplane&lt;Euclidean2D&gt;" line="77"/>
                <declaration name="l2DPlus" type="SubHyperplane&lt;Euclidean2D&gt;" line="78"/>
                <declaration name="splitTree" type="BSPTree&lt;Euclidean2D&gt;" line="79"/>
                <declaration name="plusTree" type="BSPTree&lt;Euclidean2D&gt;" line="80"/>
                <declaration name="minusTree" type="BSPTree&lt;Euclidean2D&gt;" line="81"/>
            </method>
        </class>
    </source>