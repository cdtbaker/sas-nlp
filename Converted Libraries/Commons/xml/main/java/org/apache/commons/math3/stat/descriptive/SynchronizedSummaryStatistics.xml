<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.descriptive">
        <import package="org.apache.commons.math3.exception.MathIllegalStateException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <class name="SynchronizedSummaryStatistics" line="5">
            <extends class="SummaryStatistics"/>
            <javadoc line="5">
                Implementation of{@link org.apache.commons.math3.stat.descriptive.SummaryStatistics} that
                  is safe to use in a multithreaded environment.  Multiple threads can safely
                  operate on a single instance without causing runtime exceptions due to race
                  conditions.  In effect, this implementation makes modification and access
                  methods atomic operations for a single instance.  That is to say, as one
                  thread is computing a statistic from the instance, no other thread can modify
                  the instance nor compute another statistic.                
                <since>
                    1.2                    
                </since>
                <version>
                    $Id: SynchronizedSummaryStatistics.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="17"/>
            <javadoc line="17">
                Serialization UID                
            </javadoc>
            <javadoc line="21">
                Construct a SynchronizedSummaryStatistics instance                
            </javadoc>
            <method name="SynchronizedSummaryStatistics" type="constructor" line="24"/>
            <javadoc line="27">
                A copy constructor. Creates a deep-copy of the {@code original}.                
                <param>
                    original the {@code SynchronizedSummaryStatistics} instance to copy                    
                </param>
                <throws>
                    NullArgumentException if original is null                    
                </throws>
            </javadoc>
            <method name="SynchronizedSummaryStatistics" type="constructor" line="32">
                <params>
                    <param name="original" type="SynchronizedSummaryStatistics"/>
                </params>
            </method>
            <javadoc line="35">
                {@inheritDoc}                
            </javadoc>
            <method name="getSummary" type="StatisticalSummary" line="38"/>
            <javadoc line="41">
                {@inheritDoc}                
            </javadoc>
            <method name="addValue" type="void" line="44">
                <params>
                    <param name="value" type="double"/>
                </params>
            </method>
            <javadoc line="47">
                {@inheritDoc}                
            </javadoc>
            <method name="getN" type="long" line="50"/>
            <javadoc line="53">
                {@inheritDoc}                
            </javadoc>
            <method name="getSum" type="double" line="56"/>
            <javadoc line="59">
                {@inheritDoc}                
            </javadoc>
            <method name="getSumsq" type="double" line="62"/>
            <javadoc line="65">
                {@inheritDoc}                
            </javadoc>
            <method name="getMean" type="double" line="68"/>
            <javadoc line="71">
                {@inheritDoc}                
            </javadoc>
            <method name="getStandardDeviation" type="double" line="74"/>
            <javadoc line="77">
                {@inheritDoc}                
            </javadoc>
            <method name="getVariance" type="double" line="80"/>
            <javadoc line="83">
                {@inheritDoc}                
            </javadoc>
            <method name="getPopulationVariance" type="double" line="86"/>
            <javadoc line="89">
                {@inheritDoc}                
            </javadoc>
            <method name="getMax" type="double" line="92"/>
            <javadoc line="95">
                {@inheritDoc}                
            </javadoc>
            <method name="getMin" type="double" line="98"/>
            <javadoc line="101">
                {@inheritDoc}                
            </javadoc>
            <method name="getGeometricMean" type="double" line="104"/>
            <javadoc line="107">
                {@inheritDoc}                
            </javadoc>
            <method name="toString" type="String" line="110"/>
            <javadoc line="113">
                {@inheritDoc}                
            </javadoc>
            <method name="clear" type="void" line="116"/>
            <javadoc line="119">
                {@inheritDoc}                
            </javadoc>
            <method name="equals" type="boolean" line="122">
                <params>
                    <param name="object" type="Object"/>
                </params>
            </method>
            <javadoc line="125">
                {@inheritDoc}                
            </javadoc>
            <method name="hashCode" type="int" line="128"/>
            <javadoc line="131">
                {@inheritDoc}                
            </javadoc>
            <method name="getSumImpl" type="StorelessUnivariateStatistic" line="134"/>
            <javadoc line="137">
                {@inheritDoc}                
            </javadoc>
            <method name="setSumImpl" type="void" line="140">
                <params>
                    <param name="sumImpl" type="StorelessUnivariateStatistic"/>
                </params>
            </method>
            <javadoc line="143">
                {@inheritDoc}                
            </javadoc>
            <method name="getSumsqImpl" type="StorelessUnivariateStatistic" line="146"/>
            <javadoc line="149">
                {@inheritDoc}                
            </javadoc>
            <method name="setSumsqImpl" type="void" line="152">
                <params>
                    <param name="sumsqImpl" type="StorelessUnivariateStatistic"/>
                </params>
            </method>
            <javadoc line="155">
                {@inheritDoc}                
            </javadoc>
            <method name="getMinImpl" type="StorelessUnivariateStatistic" line="158"/>
            <javadoc line="161">
                {@inheritDoc}                
            </javadoc>
            <method name="setMinImpl" type="void" line="164">
                <params>
                    <param name="minImpl" type="StorelessUnivariateStatistic"/>
                </params>
            </method>
            <javadoc line="167">
                {@inheritDoc}                
            </javadoc>
            <method name="getMaxImpl" type="StorelessUnivariateStatistic" line="170"/>
            <javadoc line="173">
                {@inheritDoc}                
            </javadoc>
            <method name="setMaxImpl" type="void" line="176">
                <params>
                    <param name="maxImpl" type="StorelessUnivariateStatistic"/>
                </params>
            </method>
            <javadoc line="179">
                {@inheritDoc}                
            </javadoc>
            <method name="getSumLogImpl" type="StorelessUnivariateStatistic" line="182"/>
            <javadoc line="185">
                {@inheritDoc}                
            </javadoc>
            <method name="setSumLogImpl" type="void" line="188">
                <params>
                    <param name="sumLogImpl" type="StorelessUnivariateStatistic"/>
                </params>
            </method>
            <javadoc line="191">
                {@inheritDoc}                
            </javadoc>
            <method name="getGeoMeanImpl" type="StorelessUnivariateStatistic" line="194"/>
            <javadoc line="197">
                {@inheritDoc}                
            </javadoc>
            <method name="setGeoMeanImpl" type="void" line="200">
                <params>
                    <param name="geoMeanImpl" type="StorelessUnivariateStatistic"/>
                </params>
            </method>
            <javadoc line="203">
                {@inheritDoc}                
            </javadoc>
            <method name="getMeanImpl" type="StorelessUnivariateStatistic" line="206"/>
            <javadoc line="209">
                {@inheritDoc}                
            </javadoc>
            <method name="setMeanImpl" type="void" line="212">
                <params>
                    <param name="meanImpl" type="StorelessUnivariateStatistic"/>
                </params>
            </method>
            <javadoc line="215">
                {@inheritDoc}                
            </javadoc>
            <method name="getVarianceImpl" type="StorelessUnivariateStatistic" line="218"/>
            <javadoc line="221">
                {@inheritDoc}                
            </javadoc>
            <method name="setVarianceImpl" type="void" line="224">
                <params>
                    <param name="varianceImpl" type="StorelessUnivariateStatistic"/>
                </params>
            </method>
            <javadoc line="227">
                Returns a copy of this SynchronizedSummaryStatistics instance with the
                  same internal state.                
                <return>
                    a copy of this                    
                </return>
            </javadoc>
            <method name="copy" type="SynchronizedSummaryStatistics" line="232">
                <declaration name="result" type="SynchronizedSummaryStatistics" line="233"/>
            </method>
            <javadoc line="237">
                Copies source to dest.
                  &lt;p&gt;Neither source nor dest can be null.&lt;/p&gt;
                  &lt;p&gt;Acquires synchronization lock on source, then dest before copying.&lt;/p&gt;                
                <param>
                    source SynchronizedSummaryStatistics to copy                    
                </param>
                <param>
                    dest SynchronizedSummaryStatistics to copy to                    
                </param>
                <throws>
                    NullArgumentException if either source or dest is null                    
                </throws>
            </javadoc>
            <method name="copy" type="void" line="245">
                <params>
                    <param name="source" type="SynchronizedSummaryStatistics"/>
                    <param name="dest" type="SynchronizedSummaryStatistics"/>
                </params>
                <scope line="248">
                    <scope line="249"/>
                </scope>
            </method>
        </class>
    </source>