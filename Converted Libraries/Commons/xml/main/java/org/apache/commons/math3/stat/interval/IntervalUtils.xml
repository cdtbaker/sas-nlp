<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.interval">
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooLargeException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <class name="IntervalUtils" line="25">
            <javadoc line="25">
                Factory methods to generate confidence intervals for a binomial proportion.
                  The supported methods are:
                  &lt;ul&gt;
                  &lt;li&gt;Agresti-Coull interval&lt;/li&gt;
                  &lt;li&gt;Clopper-Pearson method (exact method)&lt;/li&gt;
                  &lt;li&gt;Normal approximation (based on central limit theorem)&lt;/li&gt;
                  &lt;li&gt;Wilson score interval&lt;/li&gt;
                  &lt;/ul&gt;                
                <version>
                    $Id: IntervalUtils.java 1560551 2014-01-22 22:35:21Z tn $                    
                </version>
                <since>
                    3.3                    
                </since>
            </javadoc>
            <declaration name="AGRESTI_COULL" type="BinomialConfidenceInterval" line="40"/>
            <javadoc line="40">
                Singleton Agresti-Coull instance.                
            </javadoc>
            <declaration name="CLOPPER_PEARSON" type="BinomialConfidenceInterval" line="43"/>
            <javadoc line="43">
                Singleton Clopper-Pearson instance.                
            </javadoc>
            <declaration name="NORMAL_APPROXIMATION" type="BinomialConfidenceInterval" line="46"/>
            <javadoc line="46">
                Singleton NormalApproximation instance.                
            </javadoc>
            <declaration name="WILSON_SCORE" type="BinomialConfidenceInterval" line="49"/>
            <javadoc line="49">
                Singleton Wilson score instance.                
            </javadoc>
            <javadoc line="52">
                Prevent instantiation.                
            </javadoc>
            <method name="IntervalUtils" type="constructor" line="55"/>
            <javadoc line="58">
                Create an Agresti-Coull binomial confidence interval for the true
                  probability of success of an unknown binomial distribution with the given
                  observed number of trials, successes and confidence level.                
                <param>
                    numberOfTrials number of trials                    
                </param>
                <param>
                    numberOfSuccesses number of successes                    
                </param>
                <param>
                    confidenceLevel desired probability that the true probability of
                      success falls within the returned interval                    
                </param>
                <return>
                    Confidence interval containing the probability of success with
                      probability {@code confidenceLevel}                    
                </return>
                <throws>
                    NotStrictlyPositiveException if {@code numberOfTrials &lt;= 0}.                    
                </throws>
                <throws>
                    NotPositiveException if {@code numberOfSuccesses &lt; 0}.                    
                </throws>
                <throws>
                    NumberIsTooLargeException if {@code numberOfSuccesses &gt; numberOfTrials}.                    
                </throws>
                <throws>
                    OutOfRangeException if {@code confidenceLevel} is not in the interval {@code (0, 1)}.                    
                </throws>
            </javadoc>
            <method name="getAgrestiCoullInterval" type="ConfidenceInterval" line="75">
                <params>
                    <param name="numberOfTrials" type="int"/>
                    <param name="numberOfSuccesses" type="int"/>
                    <param name="confidenceLevel" type="double"/>
                </params>
            </method>
            <javadoc line="79">
                Create a Clopper-Pearson binomial confidence interval for the true
                  probability of success of an unknown binomial distribution with the given
                  observed number of trials, successes and confidence level.
                  &lt;p&gt;
                  Preconditions:
                  &lt;ul&gt;
                  &lt;li&gt;{@code numberOfTrials} must be positive&lt;/li&gt;
                  &lt;li&gt;{@code numberOfSuccesses} may not exceed {@code numberOfTrials}&lt;/li&gt;
                  &lt;li&gt;{@code confidenceLevel} must be strictly between 0 and 1 (exclusive)&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;                
                <param>
                    numberOfTrials number of trials                    
                </param>
                <param>
                    numberOfSuccesses number of successes                    
                </param>
                <param>
                    confidenceLevel desired probability that the true probability of
                      success falls within the returned interval                    
                </param>
                <return>
                    Confidence interval containing the probability of success with
                      probability {@code confidenceLevel}                    
                </return>
                <throws>
                    NotStrictlyPositiveException if {@code numberOfTrials &lt;= 0}.                    
                </throws>
                <throws>
                    NotPositiveException if {@code numberOfSuccesses &lt; 0}.                    
                </throws>
                <throws>
                    NumberIsTooLargeException if {@code numberOfSuccesses &gt; numberOfTrials}.                    
                </throws>
                <throws>
                    OutOfRangeException if {@code confidenceLevel} is not in the interval {@code (0, 1)}.                    
                </throws>
            </javadoc>
            <method name="getClopperPearsonInterval" type="ConfidenceInterval" line="104">
                <params>
                    <param name="numberOfTrials" type="int"/>
                    <param name="numberOfSuccesses" type="int"/>
                    <param name="confidenceLevel" type="double"/>
                </params>
            </method>
            <javadoc line="108">
                Create a binomial confidence interval for the true probability of success
                  of an unknown binomial distribution with the given observed number of
                  trials, successes and confidence level using the Normal approximation to
                  the binomial distribution.                
                <param>
                    numberOfTrials number of trials                    
                </param>
                <param>
                    numberOfSuccesses number of successes                    
                </param>
                <param>
                    confidenceLevel desired probability that the true probability of
                      success falls within the interval                    
                </param>
                <return>
                    Confidence interval containing the probability of success with
                      probability {@code confidenceLevel}                    
                </return>
            </javadoc>
            <method name="getNormalApproximationInterval" type="ConfidenceInterval" line="122">
                <params>
                    <param name="numberOfTrials" type="int"/>
                    <param name="numberOfSuccesses" type="int"/>
                    <param name="confidenceLevel" type="double"/>
                </params>
            </method>
            <javadoc line="126">
                Create a Wilson score binomial confidence interval for the true
                  probability of success of an unknown binomial distribution with the given
                  observed number of trials, successes and confidence level.                
                <param>
                    numberOfTrials number of trials                    
                </param>
                <param>
                    numberOfSuccesses number of successes                    
                </param>
                <param>
                    confidenceLevel desired probability that the true probability of
                      success falls within the returned interval                    
                </param>
                <return>
                    Confidence interval containing the probability of success with
                      probability {@code confidenceLevel}                    
                </return>
                <throws>
                    NotStrictlyPositiveException if {@code numberOfTrials &lt;= 0}.                    
                </throws>
                <throws>
                    NotPositiveException if {@code numberOfSuccesses &lt; 0}.                    
                </throws>
                <throws>
                    NumberIsTooLargeException if {@code numberOfSuccesses &gt; numberOfTrials}.                    
                </throws>
                <throws>
                    OutOfRangeException if {@code confidenceLevel} is not in the interval {@code (0, 1)}.                    
                </throws>
            </javadoc>
            <method name="getWilsonScoreInterval" type="ConfidenceInterval" line="143">
                <params>
                    <param name="numberOfTrials" type="int"/>
                    <param name="numberOfSuccesses" type="int"/>
                    <param name="confidenceLevel" type="double"/>
                </params>
            </method>
            <javadoc line="147">
                Verifies that parameters satisfy preconditions.                
                <param>
                    numberOfTrials number of trials (must be positive)                    
                </param>
                <param>
                    numberOfSuccesses number of successes (must not exceed numberOfTrials)                    
                </param>
                <param>
                    confidenceLevel confidence level (must be strictly between 0 and 1)                    
                </param>
                <throws>
                    NotStrictlyPositiveException if {@code numberOfTrials &lt;= 0}.                    
                </throws>
                <throws>
                    NotPositiveException if {@code numberOfSuccesses &lt; 0}.                    
                </throws>
                <throws>
                    NumberIsTooLargeException if {@code numberOfSuccesses &gt; numberOfTrials}.                    
                </throws>
                <throws>
                    OutOfRangeException if {@code confidenceLevel} is not in the interval {@code (0, 1)}.                    
                </throws>
            </javadoc>
            <method name="checkParameters" type="void" line="158">
                <params>
                    <param name="numberOfTrials" type="int"/>
                    <param name="numberOfSuccesses" type="int"/>
                    <param name="confidenceLevel" type="double"/>
                </params>
                <scope line="159"/>
                <scope line="162"/>
                <scope line="165"/>
                <scope line="169"/>
            </method>
        </class>
    </source>