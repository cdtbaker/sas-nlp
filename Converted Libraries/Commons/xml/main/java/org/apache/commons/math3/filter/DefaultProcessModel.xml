<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.filter">
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.NoDataException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
        <import package="org.apache.commons.math3.linear.ArrayRealVector"/>
        <import package="org.apache.commons.math3.linear.RealMatrix"/>
        <import package="org.apache.commons.math3.linear.RealVector"/>
        <class name="DefaultProcessModel" line="9">
            <implements interface="ProcessModel"/>
            <javadoc line="9">
                Default implementation of a {@link ProcessModel} for the use with a {@link KalmanFilter}.                
                <since>
                    3.0                    
                </since>
                <version>
                    $Id: DefaultProcessModel.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
            </javadoc>
            <declaration name="stateTransitionMatrix" type="RealMatrix" line="15"/>
            <javadoc line="15">
                The state transition matrix, used to advance the internal state estimation each time-step.                
            </javadoc>
            <declaration name="controlMatrix" type="RealMatrix" line="19"/>
            <javadoc line="19">
                The control matrix, used to integrate a control input into the state estimation.                
            </javadoc>
            <declaration name="processNoiseCovMatrix" type="RealMatrix" line="23"/>
            <javadoc line="23">
                The process noise covariance matrix.                
            </javadoc>
            <declaration name="initialStateEstimateVector" type="RealVector" line="27"/>
            <javadoc line="27">
                The initial state estimation of the observed process.                
            </javadoc>
            <declaration name="initialErrorCovMatrix" type="RealMatrix" line="31"/>
            <javadoc line="31">
                The initial error covariance matrix of the observed process.                
            </javadoc>
            <javadoc line="35">
                Create a new {@link ProcessModel}, taking double arrays as input parameters.                
                <param>
                    stateTransitionthe state transition matrix                    
                </param>
                <param>
                    controlthe control matrix                    
                </param>
                <param>
                    processNoisethe process noise matrix                    
                </param>
                <param>
                    initialStateEstimatethe initial state estimate vector                    
                </param>
                <param>
                    initialErrorCovariancethe initial error covariance matrix                    
                </param>
                <throws>
                    NullArgumentExceptionif any of the input arrays is {@code null}                    
                </throws>
                <throws>
                    NoDataExceptionif any row / column dimension of the input matrices is zero                    
                </throws>
                <throws>
                    DimensionMismatchExceptionif any of the input matrices is non-rectangular                    
                </throws>
            </javadoc>
            <method name="DefaultProcessModel" type="constructor" line="46">
                <params>
                    <param name="stateTransition" type="double[][]"/>
                    <param name="control" type="double[][]"/>
                    <param name="processNoise" type="double[][]"/>
                    <param name="initialStateEstimate" type="double[]"/>
                    <param name="initialErrorCovariance" type="double[][]"/>
                </params>
            </method>
            <javadoc line="49">
                Create a new {@link ProcessModel}, taking double arrays as input parameters.
                  &lt;p&gt;
                  The initial state estimate and error covariance are omitted and will be initialized by the{@link KalmanFilter} to default values.                
                <param>
                    stateTransitionthe state transition matrix                    
                </param>
                <param>
                    controlthe control matrix                    
                </param>
                <param>
                    processNoisethe process noise matrix                    
                </param>
                <throws>
                    NullArgumentExceptionif any of the input arrays is {@code null}                    
                </throws>
                <throws>
                    NoDataExceptionif any row / column dimension of the input matrices is zero                    
                </throws>
                <throws>
                    DimensionMismatchExceptionif any of the input matrices is non-rectangular                    
                </throws>
            </javadoc>
            <method name="DefaultProcessModel" type="constructor" line="60">
                <params>
                    <param name="stateTransition" type="double[][]"/>
                    <param name="control" type="double[][]"/>
                    <param name="processNoise" type="double[][]"/>
                </params>
            </method>
            <javadoc line="63">
                Create a new {@link ProcessModel}, taking double arrays as input parameters.                
                <param>
                    stateTransitionthe state transition matrix                    
                </param>
                <param>
                    controlthe control matrix                    
                </param>
                <param>
                    processNoisethe process noise matrix                    
                </param>
                <param>
                    initialStateEstimatethe initial state estimate vector                    
                </param>
                <param>
                    initialErrorCovariancethe initial error covariance matrix                    
                </param>
            </javadoc>
            <method name="DefaultProcessModel" type="constructor" line="71">
                <params>
                    <param name="stateTransition" type="RealMatrix"/>
                    <param name="control" type="RealMatrix"/>
                    <param name="processNoise" type="RealMatrix"/>
                    <param name="initialStateEstimate" type="RealVector"/>
                    <param name="initialErrorCovariance" type="RealMatrix"/>
                </params>
            </method>
            <javadoc line="78">
                {@inheritDoc}                
            </javadoc>
            <method name="getStateTransitionMatrix" type="RealMatrix" line="81"/>
            <javadoc line="84">
                {@inheritDoc}                
            </javadoc>
            <method name="getControlMatrix" type="RealMatrix" line="87"/>
            <javadoc line="90">
                {@inheritDoc}                
            </javadoc>
            <method name="getProcessNoise" type="RealMatrix" line="93"/>
            <javadoc line="96">
                {@inheritDoc}                
            </javadoc>
            <method name="getInitialStateEstimate" type="RealVector" line="99"/>
            <javadoc line="102">
                {@inheritDoc}                
            </javadoc>
            <method name="getInitialErrorCovariance" type="RealMatrix" line="105"/>
        </class>
    </source>