<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.differentiation">
        <import package="org.apache.commons.math3.analysis.MultivariateMatrixFunction"/>
        <class name="JacobianFunction" line="21">
            <implements interface="MultivariateMatrixFunction"/>
            <javadoc line="21">
                Class representing the Jacobian of a multivariate vector function.
                  &lt;p&gt;
                  The rows iterate on the model functions while the columns iterate on the parameters; thus,
                  the numbers of rows is equal to the dimension of the underlying function vector
                  value and the number of columns is equal to the number of free parameters of
                  the underlying function.
                  &lt;/p&gt;                
                <version>
                    $Id: JacobianFunction.java 1455194 2013-03-11 15:45:54Z luc $                    
                </version>
                <since>
                    3.1                    
                </since>
            </javadoc>
            <declaration name="f" type="MultivariateDifferentiableVectorFunction" line="33"/>
            <javadoc line="33">
                Underlying vector-valued function.                
            </javadoc>
            <javadoc line="36">
                Simple constructor.                
                <param>
                    f underlying vector-valued function                    
                </param>
            </javadoc>
            <method name="JacobianFunction" type="constructor" line="39">
                <params>
                    <param name="f" type="MultivariateDifferentiableVectorFunction"/>
                </params>
            </method>
            <javadoc line="43">
                {@inheritDoc}                
            </javadoc>
            <method name="value" type="double[][]" line="44">
                <params>
                    <param name="point" type="double[]"/>
                </params>
                <comment line="47">
                    set up parameters                    
                </comment>
                <comment line="53">
                    compute the derivatives                    
                </comment>
                <comment line="56">
                    extract the Jacobian                    
                </comment>
                <declaration name="dsX" type="DerivativeStructure[]" line="47"/>
                <scope line="48"/>
                <declaration name="dsY" type="DerivativeStructure[]" line="53"/>
                <declaration name="y" type="double[][]" line="56"/>
                <declaration name="orders" type="int[]" line="57"/>
                <scope line="58">
                    <scope line="59"/>
                </scope>
            </method>
        </class>
    </source>