<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optim.linear">
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.Serializable"/>
        <import package="org.apache.commons.math3.linear.MatrixUtils"/>
        <import package="org.apache.commons.math3.linear.RealVector"/>
        <import package="org.apache.commons.math3.linear.ArrayRealVector"/>
        <class name="LinearConstraint" line="9">
            <implements interface="Serializable"/>
            <javadoc line="9">
                A linear constraint for a linear optimization problem.
                  &lt;p&gt;
                  A linear constraint has one of the forms:
                  &lt;ul&gt;
                  &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; = v&lt;/li&gt;
                  &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; &amp;lt;= v&lt;/li&gt;
                  &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; &gt;= v&lt;/li&gt;
                  &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; =
                  r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
                  &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; &amp;lt;=
                  r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
                  &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; &gt;=
                  r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
                  &lt;/ul&gt;
                  The c&lt;sub&gt;i&lt;/sub&gt;, l&lt;sub&gt;i&lt;/sub&gt; or r&lt;sub&gt;i&lt;/sub&gt; are the coefficients of the constraints, the x&lt;sub&gt;i&lt;/sub&gt;
                  are the coordinates of the current point and v is the value of the constraint.
                  &lt;/p&gt;                
                <version>
                    $Id: LinearConstraint.java 1435539 2013-01-19 13:27:24Z tn $                    
                </version>
                <since>
                    2.0                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="31"/>
            <javadoc line="31">
                Serializable version identifier.                
            </javadoc>
            <declaration name="coefficients" type="RealVector" line="35"/>
            <javadoc line="35">
                Coefficients of the constraint (left hand side).                
            </javadoc>
            <declaration name="relationship" type="Relationship" line="39"/>
            <javadoc line="39">
                Relationship between left and right hand sides (=, &amp;lt;=, &gt;=).                
            </javadoc>
            <declaration name="value" type="double" line="43"/>
            <javadoc line="43">
                Value of the constraint (right hand side).                
            </javadoc>
            <javadoc line="47">
                Build a constraint involving a single linear equation.
                  &lt;p&gt;
                  A linear constraint with a single linear equation has one of the forms:
                  &lt;ul&gt;
                  &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; = v&lt;/li&gt;
                  &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; &amp;lt;= v&lt;/li&gt;
                  &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; &gt;= v&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;                
                <param>
                    coefficients The coefficients of the constraint (left hand side)                    
                </param>
                <param>
                    relationship The type of (in)equality used in the constraint                    
                </param>
                <param>
                    value The value of the constraint (right hand side)                    
                </param>
            </javadoc>
            <method name="LinearConstraint" type="constructor" line="61">
                <params>
                    <param name="coefficients" type="double[]"/>
                    <param name="relationship" type="Relationship"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <javadoc line="64">
                Build a constraint involving a single linear equation.
                  &lt;p&gt;
                  A linear constraint with a single linear equation has one of the forms:
                  &lt;ul&gt;
                  &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; = v&lt;/li&gt;
                  &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; &amp;lt;= v&lt;/li&gt;
                  &lt;li&gt;c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; &gt;= v&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;                
                <param>
                    coefficients The coefficients of the constraint (left hand side)                    
                </param>
                <param>
                    relationship The type of (in)equality used in the constraint                    
                </param>
                <param>
                    value The value of the constraint (right hand side)                    
                </param>
            </javadoc>
            <method name="LinearConstraint" type="constructor" line="78">
                <params>
                    <param name="coefficients" type="RealVector"/>
                    <param name="relationship" type="Relationship"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <javadoc line="83">
                Build a constraint involving two linear equations.
                  &lt;p&gt;
                  A linear constraint with two linear equation has one of the forms:
                  &lt;ul&gt;
                  &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; =
                  r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
                  &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; &amp;lt;=
                  r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
                  &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; &gt;=
                  r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;                
                <param>
                    lhsCoefficients The coefficients of the linear expression on the left hand side of the constraint                    
                </param>
                <param>
                    lhsConstant The constant term of the linear expression on the left hand side of the constraint                    
                </param>
                <param>
                    relationship The type of (in)equality used in the constraint                    
                </param>
                <param>
                    rhsCoefficients The coefficients of the linear expression on the right hand side of the constraint                    
                </param>
                <param>
                    rhsConstant The constant term of the linear expression on the right hand side of the constraint                    
                </param>
            </javadoc>
            <method name="LinearConstraint" type="constructor" line="102">
                <params>
                    <param name="lhsCoefficients" type="double[]"/>
                    <param name="lhsConstant" type="double"/>
                    <param name="relationship" type="Relationship"/>
                    <param name="rhsCoefficients" type="double[]"/>
                    <param name="rhsConstant" type="double"/>
                </params>
                <declaration name="sub" type="double[]" line="103"/>
                <scope line="104"/>
            </method>
            <javadoc line="111">
                Build a constraint involving two linear equations.
                  &lt;p&gt;
                  A linear constraint with two linear equation has one of the forms:
                  &lt;ul&gt;
                  &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; =
                  r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
                  &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; &amp;lt;=
                  r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
                  &lt;li&gt;l&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... l&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + l&lt;sub&gt;cst&lt;/sub&gt; &gt;=
                  r&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... r&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + r&lt;sub&gt;cst&lt;/sub&gt;&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;                
                <param>
                    lhsCoefficients The coefficients of the linear expression on the left hand side of the constraint                    
                </param>
                <param>
                    lhsConstant The constant term of the linear expression on the left hand side of the constraint                    
                </param>
                <param>
                    relationship The type of (in)equality used in the constraint                    
                </param>
                <param>
                    rhsCoefficients The coefficients of the linear expression on the right hand side of the constraint                    
                </param>
                <param>
                    rhsConstant The constant term of the linear expression on the right hand side of the constraint                    
                </param>
            </javadoc>
            <method name="LinearConstraint" type="constructor" line="130">
                <params>
                    <param name="lhsCoefficients" type="RealVector"/>
                    <param name="lhsConstant" type="double"/>
                    <param name="relationship" type="Relationship"/>
                    <param name="rhsCoefficients" type="RealVector"/>
                    <param name="rhsConstant" type="double"/>
                </params>
            </method>
            <javadoc line="135">
                Gets the coefficients of the constraint (left hand side).                
                <return>
                    the coefficients of the constraint (left hand side).                    
                </return>
            </javadoc>
            <method name="getCoefficients" type="RealVector" line="139"/>
            <javadoc line="142">
                Gets the relationship between left and right hand sides.                
                <return>
                    the relationship between left and right hand sides.                    
                </return>
            </javadoc>
            <method name="getRelationship" type="Relationship" line="146"/>
            <javadoc line="149">
                Gets the value of the constraint (right hand side).                
                <return>
                    the value of the constraint (right hand side).                    
                </return>
            </javadoc>
            <method name="getValue" type="double" line="153"/>
            <method name="equals" type="boolean" line="156">
                <params>
                    <param name="other" type="Object"/>
                </params>
                <scope line="157"/>
                <scope line="160">
                    <declaration name="rhs" type="LinearConstraint" line="161"/>
                </scope>
            </method>
            <method name="hashCode" type="int" line="166"/>
            <javadoc line="169">
                Serialize the instance.                
                <param>
                    oos stream where object should be written                    
                </param>
                <throws>
                    IOException if object cannot be written to stream                    
                </throws>
            </javadoc>
            <method name="writeObject" type="void" line="174">
                <params>
                    <param name="oos" type="ObjectOutputStream"/>
                </params>
            </method>
            <javadoc line="178">
                Deserialize the instance.                
                <param>
                    ois stream from which the object should be read                    
                </param>
                <throws>
                    ClassNotFoundException if a class in the stream cannot be found                    
                </throws>
                <throws>
                    IOException if object cannot be read from the stream                    
                </throws>
            </javadoc>
            <method name="readObject" type="void" line="184">
                <params>
                    <param name="ois" type="ObjectInputStream"/>
                </params>
            </method>
        </class>
    </source>