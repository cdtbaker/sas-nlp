<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.regression">
        <import package="org.apache.commons.math3.linear.LUDecomposition"/>
        <import package="org.apache.commons.math3.linear.RealMatrix"/>
        <import package="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
        <import package="org.apache.commons.math3.linear.RealVector"/>
        <class name="GLSMultipleLinearRegression" line="24">
            <extends class="AbstractMultipleLinearRegression"/>
            <javadoc line="24">
                The GLS implementation of the multiple linear regression.
                  GLS assumes a general covariance matrix Omega of the error
                  &lt;pre&gt;
                  u ~ N(0, Omega)
                  &lt;/pre&gt;
                  Estimated by GLS,
                  &lt;pre&gt;
                  b=(X&apos; Omega^-1 X)^-1X&apos;Omega^-1 y
                  &lt;/pre&gt;
                  whose variance is
                  &lt;pre&gt;
                  Var(b)=(X&apos; Omega^-1 X)^-1
                  &lt;/pre&gt;                
                <version>
                    $Id: GLSMultipleLinearRegression.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
                <since>
                    2.0                    
                </since>
            </javadoc>
            <declaration name="Omega" type="RealMatrix" line="45"/>
            <javadoc line="45">
                Covariance matrix.                
            </javadoc>
            <declaration name="OmegaInverse" type="RealMatrix" line="48"/>
            <javadoc line="48">
                Inverse of covariance matrix.                
            </javadoc>
            <javadoc line="51">
                Replace sample data, overriding any previous sample.                
                <param>
                    y y values of the sample                    
                </param>
                <param>
                    x x values of the sample                    
                </param>
                <param>
                    covariance array representing the covariance matrix                    
                </param>
            </javadoc>
            <method name="newSampleData" type="void" line="56">
                <params>
                    <param name="y" type="double[]"/>
                    <param name="x" type="double[][]"/>
                    <param name="covariance" type="double[][]"/>
                </params>
            </method>
            <javadoc line="64">
                Add the covariance data.                
                <param>
                    omega the [n,n] array representing the covariance                    
                </param>
            </javadoc>
            <method name="newCovarianceData" type="void" line="69">
                <params>
                    <param name="omega" type="double[][]"/>
                </params>
            </method>
            <javadoc line="74">
                Get the inverse of the covariance.
                  &lt;p&gt;The inverse of the covariance matrix is lazily evaluated and cached.&lt;/p&gt;                
                <return>
                    inverse of the covariance                    
                </return>
            </javadoc>
            <method name="getOmegaInverse" type="RealMatrix" line="79">
                <scope line="80"/>
            </method>
            <javadoc line="86">
                Calculates beta by GLS.
                  &lt;pre&gt;
                  b=(X&apos; Omega^-1 X)^-1X&apos;Omega^-1 y
                  &lt;/pre&gt;                
                <return>
                    beta                    
                </return>
            </javadoc>
            <method name="calculateBeta" type="RealVector" line="94">
                <declaration name="OI" type="RealMatrix" line="95"/>
                <declaration name="XT" type="RealMatrix" line="96"/>
                <declaration name="XTOIX" type="RealMatrix" line="97"/>
                <declaration name="inverse" type="RealMatrix" line="98"/>
            </method>
            <javadoc line="102">
                Calculates the variance on the beta.
                  &lt;pre&gt;
                  Var(b)=(X&apos; Omega^-1 X)^-1
                  &lt;/pre&gt;                
                <return>
                    The beta variance matrix                    
                </return>
            </javadoc>
            <method name="calculateBetaVariance" type="RealMatrix" line="110">
                <declaration name="OI" type="RealMatrix" line="111"/>
                <declaration name="XTOIX" type="RealMatrix" line="112"/>
            </method>
            <javadoc line="117">
                Calculates the estimated variance of the error term using the formula
                  &lt;pre&gt;
                  Var(u) = Tr(u&apos; Omega^-1 u)/(n-k)
                  &lt;/pre&gt;
                  where n and k are the row and column dimensions of the design
                  matrix X.                
                <return>
                    error variance                    
                </return>
                <since>
                    2.2                    
                </since>
            </javadoc>
            <method name="calculateErrorVariance" type="double" line="129">
                <declaration name="residuals" type="RealVector" line="130"/>
                <declaration name="t" type="double" line="131"/>
            </method>
        </class>
    </source>