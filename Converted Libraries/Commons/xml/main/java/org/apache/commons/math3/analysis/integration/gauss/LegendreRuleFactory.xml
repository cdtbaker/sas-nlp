<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.integration.gauss">
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.util.Pair"/>
        <class name="LegendreRuleFactory" line="22">
            <extends class="BaseRuleFactory">
                <type_params>
                    <type_param name="Double"/>
                </type_params>
            </extends>
            <javadoc line="22">
                Factory that creates Gauss-type quadrature rule using Legendre polynomials.
                  In this implementation, the lower and upper bounds of the natural interval
                  of integration are -1 and 1, respectively.
                  The Legendre polynomials are evaluated using the recurrence relation
                  presented in &lt;a href=&quot;http://en.wikipedia.org/wiki/Abramowitz_and_Stegun&quot;
                  Abramowitz and Stegun, 1964&lt;/a&gt;.                
                <since>
                    3.1                    
                </since>
                <version>
                    $Id: LegendreRuleFactory.java 1455194 2013-03-11 15:45:54Z luc $                    
                </version>
            </javadoc>
            <javadoc line="34">
                {@inheritDoc}                
            </javadoc>
            <method name="computeRule" type="Pair<Double[],Double[]>" line="37">
                <params>
                    <param name="numberOfPoints" type="int"/>
                </params>
                <comment line="41">
                    Break recursion.                    
                </comment>
                <comment line="46">
                    Get previous rule.
                     If it has not been computed yet it will trigger a recursive call
                     to this method.                    
                </comment>
                <comment line="51">
                    Compute next rule.                    
                </comment>
                <comment line="55">
                    Find i-th root of P[n+1] by bracketing.                    
                </comment>
                <comment line="58">
                    Lower-bound of the interval.                    
                </comment>
                <comment line="60">
                    Upper-bound of the interval.                    
                </comment>
                <comment line="62">
                    P[j-1](a)                    
                </comment>
                <comment line="64">
                    P[j](a)                    
                </comment>
                <comment line="66">
                    P[j-1](b)                    
                </comment>
                <comment line="68">
                    P[j](b)                    
                </comment>
                <comment line="73">
                    P[j+1](a)                    
                </comment>
                <comment line="75">
                    P[j+1](b)                    
                </comment>
                <comment line="82">
                    Now pa = P[n+1](a), and pma = P[n](a) (same holds for b).
                     Middle of the interval.                    
                </comment>
                <comment line="85">
                    P[j-1](c)                    
                </comment>
                <comment line="87">
                    P[j](c)                    
                </comment>
                <comment line="95">
                    P[j+1](c)                    
                </comment>
                <comment line="100">
                    Now pc = P[n+1](c) and pmc = P[n](c).                    
                </comment>
                <comment line="124">
                    If &quot;numberOfPoints&quot; is odd, 0 is a root.
                     Note: as written, the test for oddness will work for negative
                     integers too (although it is not necessary here), preventing
                     a FindBugs warning.                    
                </comment>
                <scope line="39"/>
                <declaration name="previousPoints" type="Double[]" line="48"/>
                <declaration name="points" type="Double[]" line="51"/>
                <declaration name="weights" type="Double[]" line="52"/>
                <declaration name="iMax" type="int" line="55"/>
                <scope line="56">
                    <declaration name="a" type="double" line="58"/>
                    <declaration name="b" type="double" line="60"/>
                    <declaration name="pma" type="double" line="62"/>
                    <declaration name="pa" type="double" line="64"/>
                    <declaration name="pmb" type="double" line="66"/>
                    <declaration name="pb" type="double" line="68"/>
                    <scope line="69">
                        <declaration name="two_j_p_1" type="int" line="70"/>
                        <declaration name="j_p_1" type="int" line="71"/>
                        <declaration name="ppa" type="double" line="73"/>
                        <declaration name="ppb" type="double" line="75"/>
                    </scope>
                    <declaration name="c" type="double" line="83"/>
                    <declaration name="pmc" type="double" line="85"/>
                    <declaration name="pc" type="double" line="87"/>
                    <declaration name="done" type="boolean" line="88"/>
                    <scope line="89">
                        <scope line="93">
                            <declaration name="ppc" type="double" line="95"/>
                        </scope>
                        <scope line="100">
                            <scope line="101"/>
                            <scope line="105"/>
                        </scope>
                    </scope>
                    <declaration name="d" type="double" line="113"/>
                    <declaration name="w" type="double" line="114"/>
                    <declaration name="idx" type="int" line="119"/>
                </scope>
                <scope line="127">
                    <declaration name="pmc" type="double" line="128"/>
                    <scope line="129"/>
                    <declaration name="d" type="double" line="132"/>
                    <declaration name="w" type="double" line="133"/>
                </scope>
            </method>
        </class>
    </source>