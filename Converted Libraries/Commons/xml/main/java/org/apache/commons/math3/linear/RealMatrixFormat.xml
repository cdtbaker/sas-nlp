<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="java.text.FieldPosition"/>
        <import package="java.text.NumberFormat"/>
        <import package="java.text.ParsePosition"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="java.util.Locale"/>
        <import package="org.apache.commons.math3.exception.MathParseException"/>
        <import package="org.apache.commons.math3.util.CompositeFormat"/>
        <class name="RealMatrixFormat" line="30">
            <javadoc line="30">
                Formats a {@code nxm} matrix in components list format
                  &quot;{{a&lt;sub&gt;0&lt;/sub&gt;&lt;sub&gt;0&lt;/sub&gt;,a&lt;sub&gt;0&lt;/sub&gt;&lt;sub&gt;1&lt;/sub&gt;, ...,
                  a&lt;sub&gt;0&lt;/sub&gt;&lt;sub&gt;m-1&lt;/sub&gt;},{a&lt;sub&gt;1&lt;/sub&gt;&lt;sub&gt;0&lt;/sub&gt;,
                  a&lt;sub&gt;1&lt;/sub&gt;&lt;sub&gt;1&lt;/sub&gt;, ..., a&lt;sub&gt;1&lt;/sub&gt;&lt;sub&gt;m-1&lt;/sub&gt;},{...},{
                  a&lt;sub&gt;n-1&lt;/sub&gt;&lt;sub&gt;0&lt;/sub&gt;, a&lt;sub&gt;n-1&lt;/sub&gt;&lt;sub&gt;1&lt;/sub&gt;, ...,
                  a&lt;sub&gt;n-1&lt;/sub&gt;&lt;sub&gt;m-1&lt;/sub&gt;}}&quot;.
                  &lt;p&gt;The prefix and suffix &quot;{&quot; and &quot;}&quot;, the row prefix and suffix &quot;{&quot; and &quot;}&quot;,
                  the row separator &quot;,&quot; and the column separator &quot;,&quot; can be replaced by any
                  user-defined strings. The number format for components can be configured.&lt;/p&gt;
                  &lt;p&gt;White space is ignored at parse time, even if it is in the prefix, suffix
                  or separator specifications. So even if the default separator does include a space
                  character that is used at format time, both input string &quot;{{1,1,1}}&quot; and
                  &quot; { { 1 , 1 , 1 } } &quot; will be parsed without error and the same matrix will be
                  returned. In the second case, however, the parse position after parsing will be
                  just after the closing curly brace, i.e. just before the trailing space.&lt;/p&gt;
                  &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; the grouping functionality of the used {@link NumberFormat} is
                  disabled to prevent problems when parsing (e.g. 1,345.34 would be a valid number
                  but conflicts with the default column separator).&lt;/p&gt;                
                <since>
                    3.1                    
                </since>
                <version>
                    $Id: RealMatrixFormat.java 1364793 2012-07-23 20:46:28Z tn $                    
                </version>
            </javadoc>
            <declaration name="DEFAULT_PREFIX" type="String" line="57"/>
            <javadoc line="57">
                The default prefix: &quot;{&quot;.                
            </javadoc>
            <declaration name="DEFAULT_SUFFIX" type="String" line="59"/>
            <javadoc line="59">
                The default suffix: &quot;}&quot;.                
            </javadoc>
            <declaration name="DEFAULT_ROW_PREFIX" type="String" line="61"/>
            <javadoc line="61">
                The default row prefix: &quot;{&quot;.                
            </javadoc>
            <declaration name="DEFAULT_ROW_SUFFIX" type="String" line="63"/>
            <javadoc line="63">
                The default row suffix: &quot;}&quot;.                
            </javadoc>
            <declaration name="DEFAULT_ROW_SEPARATOR" type="String" line="65"/>
            <javadoc line="65">
                The default row separator: &quot;,&quot;.                
            </javadoc>
            <declaration name="DEFAULT_COLUMN_SEPARATOR" type="String" line="67"/>
            <javadoc line="67">
                The default column separator: &quot;,&quot;.                
            </javadoc>
            <declaration name="prefix" type="String" line="69"/>
            <javadoc line="69">
                Prefix.                
            </javadoc>
            <declaration name="suffix" type="String" line="71"/>
            <javadoc line="71">
                Suffix.                
            </javadoc>
            <declaration name="rowPrefix" type="String" line="73"/>
            <javadoc line="73">
                Row prefix.                
            </javadoc>
            <declaration name="rowSuffix" type="String" line="75"/>
            <javadoc line="75">
                Row suffix.                
            </javadoc>
            <declaration name="rowSeparator" type="String" line="77"/>
            <javadoc line="77">
                Row separator.                
            </javadoc>
            <declaration name="columnSeparator" type="String" line="79"/>
            <javadoc line="79">
                Column separator.                
            </javadoc>
            <declaration name="format" type="NumberFormat" line="81"/>
            <javadoc line="81">
                The format used for components.                
            </javadoc>
            <javadoc line="84">
                Create an instance with default settings.
                  &lt;p&gt;The instance uses the default prefix, suffix and row/column separator:
                  &quot;[&quot;, &quot;]&quot;, &quot;;&quot; and &quot;, &quot; and the default number format for components.&lt;/p&gt;                
            </javadoc>
            <method name="RealMatrixFormat" type="constructor" line="89"/>
            <javadoc line="94">
                Create an instance with a custom number format for components.                
                <param>
                    format the custom format for components.                    
                </param>
            </javadoc>
            <method name="RealMatrixFormat" type="constructor" line="98">
                <params>
                    <param name="format" type="NumberFormat"/>
                </params>
            </method>
            <javadoc line="103">
                Create an instance with custom prefix, suffix and separator.                
                <param>
                    prefix prefix to use instead of the default &quot;{&quot;                    
                </param>
                <param>
                    suffix suffix to use instead of the default &quot;}&quot;                    
                </param>
                <param>
                    rowPrefix row prefix to use instead of the default &quot;{&quot;                    
                </param>
                <param>
                    rowSuffix row suffix to use instead of the default &quot;}&quot;                    
                </param>
                <param>
                    rowSeparator tow separator to use instead of the default &quot;;&quot;                    
                </param>
                <param>
                    columnSeparator column separator to use instead of the default &quot;, &quot;                    
                </param>
            </javadoc>
            <method name="RealMatrixFormat" type="constructor" line="114">
                <params>
                    <param name="prefix" type="String"/>
                    <param name="suffix" type="String"/>
                    <param name="rowPrefix" type="String"/>
                    <param name="rowSuffix" type="String"/>
                    <param name="rowSeparator" type="String"/>
                    <param name="columnSeparator" type="String"/>
                </params>
            </method>
            <javadoc line="119">
                Create an instance with custom prefix, suffix, separator and format
                  for components.                
                <param>
                    prefix prefix to use instead of the default &quot;{&quot;                    
                </param>
                <param>
                    suffix suffix to use instead of the default &quot;}&quot;                    
                </param>
                <param>
                    rowPrefix row prefix to use instead of the default &quot;{&quot;                    
                </param>
                <param>
                    rowSuffix row suffix to use instead of the default &quot;}&quot;                    
                </param>
                <param>
                    rowSeparator tow separator to use instead of the default &quot;;&quot;                    
                </param>
                <param>
                    columnSeparator column separator to use instead of the default &quot;, &quot;                    
                </param>
                <param>
                    format the custom format for components.                    
                </param>
            </javadoc>
            <method name="RealMatrixFormat" type="constructor" line="133">
                <params>
                    <param name="prefix" type="String"/>
                    <param name="suffix" type="String"/>
                    <param name="rowPrefix" type="String"/>
                    <param name="rowSuffix" type="String"/>
                    <param name="rowSeparator" type="String"/>
                    <param name="columnSeparator" type="String"/>
                    <param name="format" type="NumberFormat"/>
                </params>
                <comment line="142">
                    disable grouping to prevent parsing problems                    
                </comment>
            </method>
            <javadoc line="145">
                Get the set of locales for which real vectors formats are available.
                  &lt;p&gt;This is the same set as the {@link NumberFormat} set.&lt;/p&gt;                
                <return>
                    available real vector format locales.                    
                </return>
            </javadoc>
            <method name="getAvailableLocales" type="Locale[]" line="150"/>
            <javadoc line="154">
                Get the format prefix.                
                <return>
                    format prefix.                    
                </return>
            </javadoc>
            <method name="getPrefix" type="String" line="158"/>
            <javadoc line="162">
                Get the format suffix.                
                <return>
                    format suffix.                    
                </return>
            </javadoc>
            <method name="getSuffix" type="String" line="166"/>
            <javadoc line="170">
                Get the format prefix.                
                <return>
                    format prefix.                    
                </return>
            </javadoc>
            <method name="getRowPrefix" type="String" line="174"/>
            <javadoc line="178">
                Get the format suffix.                
                <return>
                    format suffix.                    
                </return>
            </javadoc>
            <method name="getRowSuffix" type="String" line="182"/>
            <javadoc line="186">
                Get the format separator between rows of the matrix.                
                <return>
                    format separator for rows.                    
                </return>
            </javadoc>
            <method name="getRowSeparator" type="String" line="190"/>
            <javadoc line="194">
                Get the format separator between components.                
                <return>
                    format separator between components.                    
                </return>
            </javadoc>
            <method name="getColumnSeparator" type="String" line="198"/>
            <javadoc line="202">
                Get the components format.                
                <return>
                    components format.                    
                </return>
            </javadoc>
            <method name="getFormat" type="NumberFormat" line="206"/>
            <javadoc line="210">
                Returns the default real vector format for the current locale.                
                <return>
                    the default real vector format.                    
                </return>
            </javadoc>
            <method name="getInstance" type="RealMatrixFormat" line="214"/>
            <javadoc line="218">
                Returns the default real vector format for the given locale.                
                <param>
                    locale the specific locale used by the format.                    
                </param>
                <return>
                    the real vector format specific to the given locale.                    
                </return>
            </javadoc>
            <method name="getInstance" type="RealMatrixFormat" line="223">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
            </method>
            <javadoc line="227">
                This method calls {@link #format(RealMatrix,StringBuffer,FieldPosition)}.                
                <param>
                    m RealMatrix object to format.                    
                </param>
                <return>
                    a formatted matrix.                    
                </return>
            </javadoc>
            <method name="format" type="String" line="233">
                <params>
                    <param name="m" type="RealMatrix"/>
                </params>
            </method>
            <javadoc line="237">
                Formats a {@link RealMatrix} object to produce a string.                
                <param>
                    matrix the object to format.                    
                </param>
                <param>
                    toAppendTo where the text is to be appended                    
                </param>
                <param>
                    pos On input: an alignment field, if desired. On output: the
                      offsets of the alignment field                    
                </param>
                <return>
                    the value passed in as toAppendTo.                    
                </return>
            </javadoc>
            <method name="format" type="StringBuffer" line="246">
                <params>
                    <param name="matrix" type="RealMatrix"/>
                    <param name="toAppendTo" type="StringBuffer"/>
                    <param name="pos" type="FieldPosition"/>
                </params>
                <comment line="252">
                    format prefix                    
                </comment>
                <comment line="255">
                    format rows                    
                </comment>
                <comment line="271">
                    format suffix                    
                </comment>
                <declaration name="rows" type="int" line="255"/>
                <scope line="256">
                    <scope line="258">
                        <scope line="259"/>
                    </scope>
                    <scope line="265"/>
                </scope>
            </method>
            <javadoc line="276">
                Parse a string to produce a {@link RealMatrix} object.                
                <param>
                    source String to parse.                    
                </param>
                <return>
                    the parsed {@link RealMatrix} object.                    
                </return>
                <throws>
                    MathParseException if the beginning of the specified string
                      cannot be parsed.                    
                </throws>
            </javadoc>
            <method name="parse" type="RealMatrix" line="284">
                <params>
                    <param name="source" type="String"/>
                </params>
                <declaration name="parsePosition" type="ParsePosition" line="285"/>
                <declaration name="result" type="RealMatrix" line="286"/>
                <scope line="287"/>
            </method>
            <javadoc line="295">
                Parse a string to produce a {@link RealMatrix} object.                
                <param>
                    source String to parse.                    
                </param>
                <param>
                    pos input/ouput parsing parameter.                    
                </param>
                <return>
                    the parsed {@link RealMatrix} object.                    
                </return>
            </javadoc>
            <method name="parse" type="RealMatrix" line="302">
                <params>
                    <param name="source" type="String"/>
                    <param name="pos" type="ParsePosition"/>
                </params>
                <comment line="313">
                    parse prefix                    
                </comment>
                <comment line="319">
                    parse components                    
                </comment>
                <comment line="358">
                    invalid component
                     set index back to initial, error index should already be set                    
                </comment>
                <comment line="372">
                    parse suffix                    
                </comment>
                <comment line="378">
                    do not allow an empty matrix                    
                </comment>
                <comment line="384">
                    build vector                    
                </comment>
                <declaration name="initialIndex" type="int" line="303"/>
                <declaration name="trimmedPrefix" type="String" line="305"/>
                <declaration name="trimmedSuffix" type="String" line="306"/>
                <declaration name="trimmedRowPrefix" type="String" line="307"/>
                <declaration name="trimmedRowSuffix" type="String" line="308"/>
                <declaration name="trimmedColumnSeparator" type="String" line="309"/>
                <declaration name="trimmedRowSeparator" type="String" line="310"/>
                <scope line="314"/>
                <declaration name="matrix" type="List&lt;List&lt;Number&gt;&gt;" line="319"/>
                <declaration name="rowComponents" type="List&lt;Number&gt;" line="320"/>
                <scope line="321">
                    <scope line="323">
                        <scope line="325">
                            <scope line="327"/>
                            <scope line="329">
                                <scope line="331"/>
                                <scope line="335"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="340">
                        <scope line="343"/>
                    </scope>
                    <scope line="348">
                        <declaration name="component" type="Number" line="350"/>
                        <scope line="351"/>
                        <scope line="353">
                            <scope line="354"/>
                            <scope line="356"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="367"/>
                <scope line="373"/>
                <scope line="378"/>
                <declaration name="data" type="double[][]" line="384"/>
                <declaration name="row" type="int" line="385"/>
                <scope line="386">
                    <scope line="388"/>
                </scope>
            </method>
        </class>
    </source>