<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optimization.univariate">
        <import package="org.apache.commons.math3.util.Incrementor"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.TooManyEvaluationsException"/>
        <import package="org.apache.commons.math3.exception.MaxCountExceededException"/>
        <import package="org.apache.commons.math3.analysis.UnivariateFunction"/>
        <import package="org.apache.commons.math3.optimization.GoalType"/>
        <class name="BracketFinder" line="8">
            <javadoc line="8">
                Provide an interval that brackets a local optimum of a function.
                  This code is based on a Python implementation (from &lt;em&gt;SciPy&lt;/em&gt;,
                  module {@code optimize.py} v0.5).                
                <version>
                    $Id: BracketFinder.java 1422230 2012-12-15 12:11:13Z erans $                    
                </version>
                <deprecated>
                    As of 3.1 (to be removed in 4.0).                    
                </deprecated>
                <since>
                    2.2                    
                </since>
            </javadoc>
            <declaration name="EPS_MIN" type="double" line="17"/>
            <javadoc line="17">
                Tolerance to avoid division by zero.                
            </javadoc>
            <declaration name="GOLD" type="double" line="21"/>
            <javadoc line="21">
                Golden section.                
            </javadoc>
            <declaration name="growLimit" type="double" line="25"/>
            <javadoc line="25">
                Factor for expanding the interval.                
            </javadoc>
            <declaration name="evaluations" type="Incrementor" line="29"/>
            <javadoc line="29">
                Counter for function evaluations.                
            </javadoc>
            <declaration name="lo" type="double" line="33"/>
            <javadoc line="33">
                Lower bound of the bracket.                
            </javadoc>
            <declaration name="hi" type="double" line="37"/>
            <javadoc line="37">
                Higher bound of the bracket.                
            </javadoc>
            <declaration name="mid" type="double" line="41"/>
            <javadoc line="41">
                Point inside the bracket.                
            </javadoc>
            <declaration name="fLo" type="double" line="45"/>
            <javadoc line="45">
                Function value at {@link #lo}.                
            </javadoc>
            <declaration name="fHi" type="double" line="49"/>
            <javadoc line="49">
                Function value at {@link #hi}.                
            </javadoc>
            <declaration name="fMid" type="double" line="53"/>
            <javadoc line="53">
                Function value at {@link #mid}.                
            </javadoc>
            <javadoc line="57">
                Constructor with default values {@code 100, 50} (see the{@link #BracketFinder(double,int) other constructor}).                
            </javadoc>
            <method name="BracketFinder" type="constructor" line="60"/>
            <javadoc line="63">
                Create a bracketing interval finder.                
                <param>
                    growLimit Expanding factor.                    
                </param>
                <param>
                    maxEvaluations Maximum number of evaluations allowed for finding
                      a bracketing interval.                    
                </param>
            </javadoc>
            <method name="BracketFinder" type="constructor" line="69">
                <params>
                    <param name="growLimit" type="double"/>
                    <param name="maxEvaluations" type="int"/>
                </params>
                <scope line="70"/>
                <scope line="73"/>
            </method>
            <javadoc line="79">
                Search new points that bracket a local optimum of the function.                
                <param>
                    func Function whose optimum should be bracketed.                    
                </param>
                <param>
                    goal {@link GoalType Goal type}.                    
                </param>
                <param>
                    xA Initial point.                    
                </param>
                <param>
                    xB Initial point.                    
                </param>
                <throws>
                    TooManyEvaluationsException if the maximum number of evaluations
                      is exceeded.                    
                </throws>
            </javadoc>
            <method name="search" type="void" line="88">
                <params>
                    <param name="func" type="UnivariateFunction"/>
                    <param name="goal" type="GoalType"/>
                    <param name="xA" type="double"/>
                    <param name="xB" type="double"/>
                </params>
                <declaration name="isMinim" type="boolean" line="90"/>
                <declaration name="fA" type="double" line="91"/>
                <declaration name="fB" type="double" line="92"/>
                <scope line="93">
                    <declaration name="tmp" type="double" line="94"/>
                </scope>
                <declaration name="xC" type="double" line="101"/>
                <declaration name="fC" type="double" line="102"/>
                <scope line="103">
                    <declaration name="tmp1" type="double" line="104"/>
                    <declaration name="tmp2" type="double" line="105"/>
                    <declaration name="val" type="double" line="106"/>
                    <declaration name="denom" type="double" line="107"/>
                    <declaration name="w" type="double" line="108"/>
                    <declaration name="wLim" type="double" line="109"/>
                    <declaration name="fW" type="double" line="110"/>
                    <scope line="111">
                        <scope line="113"/>
                        <scope line="120"/>
                    </scope>
                    <scope line="128"/>
                    <scope line="132">
                        <scope line="134"/>
                    </scope>
                    <scope line="143"/>
                </scope>
                <scope line="160">
                    <declaration name="tmp" type="double" line="161"/>
                </scope>
            </method>
            <javadoc line="169">
                @return the number of evalutations.                
            </javadoc>
            <method name="getMaxEvaluations" type="int" line="172"/>
            <javadoc line="175">
                @return the number of evalutations.                
            </javadoc>
            <method name="getEvaluations" type="int" line="178"/>
            <javadoc line="181">
                @return the lower bound of the bracket.                
                <see>
                    #getFLo()                    
                </see>
            </javadoc>
            <method name="getLo" type="double" line="185"/>
            <javadoc line="188">
                Get function value at {@link #getLo()}.                
                <return>
                    function value at {@link #getLo()}                    
                </return>
            </javadoc>
            <method name="getFLo" type="double" line="192"/>
            <javadoc line="195">
                @return the higher bound of the bracket.                
                <see>
                    #getFHi()                    
                </see>
            </javadoc>
            <method name="getHi" type="double" line="199"/>
            <javadoc line="202">
                Get function value at {@link #getHi()}.                
                <return>
                    function value at {@link #getHi()}                    
                </return>
            </javadoc>
            <method name="getFHi" type="double" line="206"/>
            <javadoc line="209">
                @return a point in the middle of the bracket.                
                <see>
                    #getFMid()                    
                </see>
            </javadoc>
            <method name="getMid" type="double" line="213"/>
            <javadoc line="216">
                Get function value at {@link #getMid()}.                
                <return>
                    function value at {@link #getMid()}                    
                </return>
            </javadoc>
            <method name="getFMid" type="double" line="220"/>
            <javadoc line="223">
                @param f Function.                
                <param>
                    x Argument.                    
                </param>
                <return>
                    {@code f(x)}                    
                </return>
                <throws>
                    TooManyEvaluationsException if the maximal number of evaluations is
                      exceeded.                    
                </throws>
            </javadoc>
            <method name="eval" type="double" line="230">
                <params>
                    <param name="f" type="UnivariateFunction"/>
                    <param name="x" type="double"/>
                </params>
                <scope line="231"/>
                <scope line="234"/>
            </method>
        </class>
    </source>