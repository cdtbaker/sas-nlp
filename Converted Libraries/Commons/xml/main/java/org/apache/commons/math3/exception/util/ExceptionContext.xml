<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.exception.util">
        <import package="java.util.List"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Set"/>
        <import package="java.util.Map"/>
        <import package="java.io.IOException"/>
        <import package="java.io.Serializable"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.util.HashMap"/>
        <import package="java.text.MessageFormat"/>
        <import package="java.util.Locale"/>
        <class name="ExceptionContext" line="13">
            <implements interface="Serializable"/>
            <javadoc line="13">
                Class that contains the actual implementation of the functionality mandated
                  by the {@link ExceptionContext} interface.
                  All Commons Math exceptions delegate the interface&apos;s methods to this class.                
                <since>
                    3.0                    
                </since>
                <version>
                    $Id: ExceptionContext.java 1364388 2012-07-22 18:16:43Z tn $                    
                </version>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="21"/>
            <javadoc line="21">
                Serializable version Id.                
            </javadoc>
            <declaration name="throwable" type="Throwable" line="25"/>
            <javadoc line="25">
                The throwable to which this context refers to.                
            </javadoc>
            <declaration name="msgPatterns" type="List&lt;Localizable&gt;" line="29"/>
            <javadoc line="29">
                Various informations that enrich the informative message.                
            </javadoc>
            <declaration name="msgArguments" type="List&lt;Object[]&gt;" line="33"/>
            <javadoc line="33">
                Various informations that enrich the informative message.
                  The arguments will replace the corresponding place-holders in{@link #msgPatterns}.                
            </javadoc>
            <declaration name="context" type="Map&lt;String,Object&gt;" line="38"/>
            <javadoc line="38">
                Arbitrary context information.                
            </javadoc>
            <javadoc line="42">
                Simple constructor.                
                <param>
                    throwable the exception this context refers too                    
                </param>
            </javadoc>
            <method name="ExceptionContext" type="constructor" line="46">
                <params>
                    <param name="throwable" type="Throwable"/>
                </params>
            </method>
            <javadoc line="52">
                Get a reference to the exception to which the context relates.                
                <return>
                    a reference to the exception to which the context relates                    
                </return>
            </javadoc>
            <method name="getThrowable" type="Throwable" line="56"/>
            <javadoc line="59">
                Adds a message.                
                <param>
                    pattern Message pattern.                    
                </param>
                <param>
                    arguments Values for replacing the placeholders in the message
                      pattern.                    
                </param>
            </javadoc>
            <method name="addMessage" type="void" line="65">
                <params>
                    <param name="pattern" type="Localizable"/>
                    <param name="arguments" type="Object"/>
                </params>
            </method>
            <javadoc line="69">
                Sets the context (key, value) pair.
                  Keys are assumed to be unique within an instance. If the same key is
                  assigned a new value, the previous one will be lost.                
                <param>
                    key Context key (not null).                    
                </param>
                <param>
                    value Context value.                    
                </param>
            </javadoc>
            <method name="setValue" type="void" line="76">
                <params>
                    <param name="key" type="String"/>
                    <param name="value" type="Object"/>
                </params>
            </method>
            <javadoc line="79">
                Gets the value associated to the given context key.                
                <param>
                    key Context key.                    
                </param>
                <return>
                    the context value or {@code null} if the key does not exist.                    
                </return>
            </javadoc>
            <method name="getValue" type="Object" line="84">
                <params>
                    <param name="key" type="String"/>
                </params>
            </method>
            <javadoc line="87">
                Gets all the keys stored in the exception                
                <return>
                    the set of keys.                    
                </return>
            </javadoc>
            <method name="getKeys" type="Set<String>" line="91"/>
            <javadoc line="94">
                Gets the default message.                
                <return>
                    the message.                    
                </return>
            </javadoc>
            <method name="getMessage" type="String" line="98"/>
            <javadoc line="101">
                Gets the message in the default locale.                
                <return>
                    the localized message.                    
                </return>
            </javadoc>
            <method name="getLocalizedMessage" type="String" line="105"/>
            <javadoc line="108">
                Gets the message in a specified locale.                
                <param>
                    locale Locale in which the message should be translated.                    
                </param>
                <return>
                    the localized message.                    
                </return>
            </javadoc>
            <method name="getMessage" type="String" line="113">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
            </method>
            <javadoc line="116">
                Gets the message in a specified locale.                
                <param>
                    locale Locale in which the message should be translated.                    
                </param>
                <param>
                    separator Separator inserted between the message parts.                    
                </param>
                <return>
                    the localized message.                    
                </return>
            </javadoc>
            <method name="getMessage" type="String" line="122">
                <params>
                    <param name="locale" type="Locale"/>
                    <param name="separator" type="String"/>
                </params>
            </method>
            <javadoc line="125">
                Builds a message string.                
                <param>
                    locale Locale in which the message should be translated.                    
                </param>
                <param>
                    separator Message separator.                    
                </param>
                <return>
                    a localized message string.                    
                </return>
            </javadoc>
            <method name="buildMessage" type="String" line="131">
                <params>
                    <param name="locale" type="Locale"/>
                    <param name="separator" type="String"/>
                </params>
                <declaration name="sb" type="StringBuilder" line="132"/>
                <declaration name="count" type="int" line="133"/>
                <declaration name="len" type="int" line="134"/>
                <scope line="135">
                    <declaration name="pat" type="Localizable" line="136"/>
                    <declaration name="args" type="Object[]" line="137"/>
                    <declaration name="fmt" type="MessageFormat" line="138"/>
                    <scope line="140"/>
                </scope>
            </method>
            <javadoc line="146">
                Serialize this object to the given stream.                
                <param>
                    out Stream.                    
                </param>
                <throws>
                    IOException This should never happen.                    
                </throws>
            </javadoc>
            <method name="writeObject" type="void" line="151">
                <params>
                    <param name="out" type="ObjectOutputStream"/>
                </params>
            </method>
            <javadoc line="156">
                Deserialize this object from the given stream.                
                <param>
                    in Stream.                    
                </param>
                <throws>
                    IOException This should never happen.                    
                </throws>
                <throws>
                    ClassNotFoundException This should never happen.                    
                </throws>
            </javadoc>
            <method name="readObject" type="void" line="162">
                <params>
                    <param name="in" type="ObjectInputStream"/>
                </params>
            </method>
            <javadoc line="167">
                Serialize  {@link #msgPatterns} and {@link #msgArguments}.                
                <param>
                    out Stream.                    
                </param>
                <throws>
                    IOException This should never happen.                    
                </throws>
            </javadoc>
            <method name="serializeMessages" type="void" line="172">
                <params>
                    <param name="out" type="ObjectOutputStream"/>
                </params>
                <declaration name="len" type="int" line="173"/>
                <scope line="175">
                    <declaration name="pat" type="Localizable" line="176"/>
                    <declaration name="args" type="Object[]" line="178"/>
                    <declaration name="aLen" type="int" line="179"/>
                    <scope line="181">
                        <scope line="182"/>
                        <scope line="185"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="191">
                Deserialize {@link #msgPatterns} and {@link #msgArguments}.                
                <param>
                    in Stream.                    
                </param>
                <throws>
                    IOException This should never happen.                    
                </throws>
                <throws>
                    ClassNotFoundException This should never happen.                    
                </throws>
            </javadoc>
            <method name="deSerializeMessages" type="void" line="197">
                <params>
                    <param name="in" type="ObjectInputStream"/>
                </params>
                <declaration name="len" type="int" line="198"/>
                <scope line="201">
                    <declaration name="pat" type="Localizable" line="202"/>
                    <declaration name="aLen" type="int" line="204"/>
                    <declaration name="args" type="Object[]" line="205"/>
                    <scope line="206"/>
                </scope>
            </method>
            <javadoc line="212">
                Serialize {@link #context}.                
                <param>
                    out Stream.                    
                </param>
                <throws>
                    IOException This should never happen.                    
                </throws>
            </javadoc>
            <method name="serializeContext" type="void" line="217">
                <params>
                    <param name="out" type="ObjectOutputStream"/>
                </params>
                <declaration name="len" type="int" line="218"/>
                <scope line="220">
                    <declaration name="value" type="Object" line="222"/>
                    <scope line="223"/>
                    <scope line="226"/>
                </scope>
            </method>
            <javadoc line="231">
                Deserialize {@link #context}.                
                <param>
                    in Stream.                    
                </param>
                <throws>
                    IOException This should never happen.                    
                </throws>
                <throws>
                    ClassNotFoundException This should never happen.                    
                </throws>
            </javadoc>
            <method name="deSerializeContext" type="void" line="237">
                <params>
                    <param name="in" type="ObjectInputStream"/>
                </params>
                <declaration name="len" type="int" line="238"/>
                <scope line="240">
                    <declaration name="key" type="String" line="241"/>
                    <declaration name="value" type="Object" line="242"/>
                </scope>
            </method>
            <javadoc line="246">
                Replaces a non-serializable object with an error message string.                
                <param>
                    obj Object that does not implement the {@code Serializable}interface.                    
                </param>
                <return>
                    a string that mentions which class could not be serialized.                    
                </return>
            </javadoc>
            <method name="nonSerializableReplacement" type="String" line="251">
                <params>
                    <param name="obj" type="Object"/>
                </params>
            </method>
        </class>
    </source>