<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.ode.nonstiff">
        <import package="org.apache.commons.math3.util.FastMath"/>
        <class name="DormandPrince853Integrator" line="3">
            <extends class="EmbeddedRungeKuttaIntegrator"/>
            <javadoc line="3">
                This class implements the 8(5,3) Dormand-Prince integrator for Ordinary
                  Differential Equations.
                  &lt;p&gt;This integrator is an embedded Runge-Kutta integrator
                  of order 8(5,3) used in local extrapolation mode (i.e. the solution
                  is computed using the high order formula) with stepsize control
                  (and automatic step initialization) and continuous output. This
                  method uses 12 functions evaluations per step for integration and 4
                  evaluations for interpolation. However, since the first
                  interpolation evaluation is the same as the first integration
                  evaluation of the next step, we have included it in the integrator
                  rather than in the interpolator and specified the method was an
                  &lt;i&gt;fsal&lt;/i&gt;. Hence, despite we have 13 stages here, the cost is
                  really 12 evaluations per step even if no interpolation is done,
                  and the overcost of interpolation is only 3 evaluations.&lt;/p&gt;
                  &lt;p&gt;This method is based on an 8(6) method by Dormand and Prince
                  (i.e. order 8 for the integration and order 6 for error estimation)
                  modified by Hairer and Wanner to use a 5th order error estimator
                  with 3rd order correction. This modification was introduced because
                  the original method failed in some cases (wrong steps can be
                  accepted when step size is too large, for example in the
                  Brusselator problem) and also had &lt;i&gt;severe difficulties when
                  applied to problems with discontinuities&lt;/i&gt;. This modification is
                  explained in the second edition of the first volume (Nonstiff
                  Problems) of the reference book by Hairer, Norsett and Wanner:
                  &lt;i&gt;Solving Ordinary Differential Equations&lt;/i&gt; (Springer-Verlag,
                  ISBN 3-540-56670-8).&lt;/p&gt;                
                <version>
                    $Id: DormandPrince853Integrator.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <declaration name="METHOD_NAME" type="String" line="34"/>
            <javadoc line="34">
                Integrator method name.                
            </javadoc>
            <declaration name="STATIC_C" type="double[]" line="38"/>
            <javadoc line="38">
                Time steps Butcher array.                
            </javadoc>
            <declaration name="STATIC_A" type="double[][]" line="42"/>
            <javadoc line="42">
                Internal weights Butcher array.                
            </javadoc>
            <declaration name="STATIC_B" type="double[]" line="46"/>
            <javadoc line="46">
                Propagation weights Butcher array.                
            </javadoc>
            <declaration name="E1_01" type="double" line="50"/>
            <javadoc line="50">
                First error weights array, element 1.                
            </javadoc>
            <declaration name="E1_06" type="double" line="54"/>
            <javadoc line="54">
                First error weights array, element 6.                
            </javadoc>
            <declaration name="E1_07" type="double" line="58"/>
            <javadoc line="58">
                First error weights array, element 7.                
            </javadoc>
            <declaration name="E1_08" type="double" line="62"/>
            <javadoc line="62">
                First error weights array, element 8.                
            </javadoc>
            <declaration name="E1_09" type="double" line="66"/>
            <javadoc line="66">
                First error weights array, element 9.                
            </javadoc>
            <declaration name="E1_10" type="double" line="70"/>
            <javadoc line="70">
                First error weights array, element 10.                
            </javadoc>
            <declaration name="E1_11" type="double" line="74"/>
            <javadoc line="74">
                First error weights array, element 11.                
            </javadoc>
            <declaration name="E1_12" type="double" line="78"/>
            <javadoc line="78">
                First error weights array, element 12.                
            </javadoc>
            <declaration name="E2_01" type="double" line="82"/>
            <javadoc line="82">
                Second error weights array, element 1.                
            </javadoc>
            <declaration name="E2_06" type="double" line="86"/>
            <javadoc line="86">
                Second error weights array, element 6.                
            </javadoc>
            <declaration name="E2_07" type="double" line="90"/>
            <javadoc line="90">
                Second error weights array, element 7.                
            </javadoc>
            <declaration name="E2_08" type="double" line="94"/>
            <javadoc line="94">
                Second error weights array, element 8.                
            </javadoc>
            <declaration name="E2_09" type="double" line="98"/>
            <javadoc line="98">
                Second error weights array, element 9.                
            </javadoc>
            <declaration name="E2_10" type="double" line="102"/>
            <javadoc line="102">
                Second error weights array, element 10.                
            </javadoc>
            <declaration name="E2_11" type="double" line="106"/>
            <javadoc line="106">
                Second error weights array, element 11.                
            </javadoc>
            <declaration name="E2_12" type="double" line="110"/>
            <javadoc line="110">
                Second error weights array, element 12.                
            </javadoc>
            <javadoc line="114">
                Simple constructor.
                  Build an eighth order Dormand-Prince integrator with the given step bounds                
                <param>
                    minStep minimal step (sign is irrelevant, regardless of
                      integration direction, forward or backward), the last step can
                      be smaller than this                    
                </param>
                <param>
                    maxStep maximal step (sign is irrelevant, regardless of
                      integration direction, forward or backward), the last step can
                      be smaller than this                    
                </param>
                <param>
                    scalAbsoluteTolerance allowed absolute error                    
                </param>
                <param>
                    scalRelativeTolerance allowed relative error                    
                </param>
            </javadoc>
            <method name="DormandPrince853Integrator" type="constructor" line="126">
                <params>
                    <param name="minStep" type="double"/>
                    <param name="maxStep" type="double"/>
                    <param name="scalAbsoluteTolerance" type="double"/>
                    <param name="scalRelativeTolerance" type="double"/>
                </params>
            </method>
            <javadoc line="129">
                Simple constructor.
                  Build an eighth order Dormand-Prince integrator with the given step bounds                
                <param>
                    minStep minimal step (sign is irrelevant, regardless of
                      integration direction, forward or backward), the last step can
                      be smaller than this                    
                </param>
                <param>
                    maxStep maximal step (sign is irrelevant, regardless of
                      integration direction, forward or backward), the last step can
                      be smaller than this                    
                </param>
                <param>
                    vecAbsoluteTolerance allowed absolute error                    
                </param>
                <param>
                    vecRelativeTolerance allowed relative error                    
                </param>
            </javadoc>
            <method name="DormandPrince853Integrator" type="constructor" line="141">
                <params>
                    <param name="minStep" type="double"/>
                    <param name="maxStep" type="double"/>
                    <param name="vecAbsoluteTolerance" type="double[]"/>
                    <param name="vecRelativeTolerance" type="double[]"/>
                </params>
            </method>
            <javadoc line="144">
                {@inheritDoc}                
            </javadoc>
            <method name="getOrder" type="int" line="147"/>
            <javadoc line="150">
                {@inheritDoc}                
            </javadoc>
            <method name="estimateError" type="double" line="153">
                <params>
                    <param name="yDotK" type="double[][]"/>
                    <param name="y0" type="double[]"/>
                    <param name="y1" type="double[]"/>
                    <param name="h" type="double"/>
                </params>
                <declaration name="error1" type="double" line="154"/>
                <declaration name="error2" type="double" line="155"/>
                <scope line="156">
                    <declaration name="errSum1" type="double" line="157"/>
                    <declaration name="errSum2" type="double" line="158"/>
                    <declaration name="yScale" type="double" line="159"/>
                    <declaration name="tol" type="double" line="160"/>
                    <declaration name="ratio1" type="double" line="161"/>
                    <declaration name="ratio2" type="double" line="163"/>
                </scope>
                <declaration name="den" type="double" line="166"/>
                <scope line="167"/>
            </method>
        </class>
    </source>