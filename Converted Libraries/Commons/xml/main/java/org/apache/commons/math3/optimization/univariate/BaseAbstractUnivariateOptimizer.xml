<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optimization.univariate">
        <import package="org.apache.commons.math3.util.Incrementor"/>
        <import package="org.apache.commons.math3.exception.MaxCountExceededException"/>
        <import package="org.apache.commons.math3.exception.TooManyEvaluationsException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.analysis.UnivariateFunction"/>
        <import package="org.apache.commons.math3.optimization.GoalType"/>
        <import package="org.apache.commons.math3.optimization.ConvergenceChecker"/>
        <class name="BaseAbstractUnivariateOptimizer" line="9">
            <implements interface="UnivariateOptimizer"/>
            <javadoc line="9">
                Provide a default implementation for several functions useful to generic
                  optimizers.                
                <version>
                    $Id: BaseAbstractUnivariateOptimizer.java 1422230 2012-12-15 12:11:13Z erans $                    
                </version>
                <deprecated>
                    As of 3.1 (to be removed in 4.0).                    
                </deprecated>
                <since>
                    2.0                    
                </since>
            </javadoc>
            <declaration name="checker" type="ConvergenceChecker&lt;UnivariatePointValuePair&gt;" line="17"/>
            <javadoc line="17">
                Convergence checker.                
            </javadoc>
            <declaration name="evaluations" type="Incrementor" line="21"/>
            <javadoc line="21">
                Evaluations counter.                
            </javadoc>
            <declaration name="goal" type="GoalType" line="25"/>
            <javadoc line="25">
                Optimization type                
            </javadoc>
            <declaration name="searchMin" type="double" line="29"/>
            <javadoc line="29">
                Lower end of search interval.                
            </javadoc>
            <declaration name="searchMax" type="double" line="33"/>
            <javadoc line="33">
                Higher end of search interval.                
            </javadoc>
            <declaration name="searchStart" type="double" line="37"/>
            <javadoc line="37">
                Initial guess .                
            </javadoc>
            <declaration name="function" type="UnivariateFunction" line="41"/>
            <javadoc line="41">
                Function to optimize.                
            </javadoc>
            <javadoc line="45">
                @param checker Convergence checking procedure.                
            </javadoc>
            <method name="BaseAbstractUnivariateOptimizer" type="constructor" line="48">
                <params>
                    <param name="checker" type="ConvergenceChecker<UnivariatePointValuePair>"/>
                </params>
            </method>
            <javadoc line="51">
                {@inheritDoc}                
            </javadoc>
            <method name="getMaxEvaluations" type="int" line="54"/>
            <javadoc line="57">
                {@inheritDoc}                
            </javadoc>
            <method name="getEvaluations" type="int" line="60"/>
            <javadoc line="63">
                @return the optimization type.                
            </javadoc>
            <method name="getGoalType" type="GoalType" line="66"/>
            <javadoc line="69">
                @return the lower end of the search interval.                
            </javadoc>
            <method name="getMin" type="double" line="72"/>
            <javadoc line="75">
                @return the higher end of the search interval.                
            </javadoc>
            <method name="getMax" type="double" line="78"/>
            <javadoc line="81">
                @return the initial guess.                
            </javadoc>
            <method name="getStartValue" type="double" line="84"/>
            <javadoc line="87">
                Compute the objective function value.                
                <param>
                    point Point at which the objective function must be evaluated.                    
                </param>
                <return>
                    the objective function value at specified point.                    
                </return>
                <throws>
                    TooManyEvaluationsException if the maximal number of evaluations
                      is exceeded.                    
                </throws>
            </javadoc>
            <method name="computeObjectiveValue" type="double" line="94">
                <params>
                    <param name="point" type="double"/>
                </params>
                <scope line="95"/>
                <scope line="98"/>
            </method>
            <javadoc line="103">
                {@inheritDoc}                
            </javadoc>
            <method name="optimize" type="UnivariatePointValuePair" line="106">
                <params>
                    <param name="maxEval" type="int"/>
                    <param name="f" type="UnivariateFunction"/>
                    <param name="goalType" type="GoalType"/>
                    <param name="min" type="double"/>
                    <param name="max" type="double"/>
                    <param name="startValue" type="double"/>
                </params>
                <scope line="107"/>
                <scope line="110"/>
            </method>
            <javadoc line="122">
                {@inheritDoc}                
            </javadoc>
            <method name="optimize" type="UnivariatePointValuePair" line="125">
                <params>
                    <param name="maxEval" type="int"/>
                    <param name="f" type="UnivariateFunction"/>
                    <param name="goalType" type="GoalType"/>
                    <param name="min" type="double"/>
                    <param name="max" type="double"/>
                </params>
            </method>
            <javadoc line="128">
                {@inheritDoc}                
            </javadoc>
            <method name="getConvergenceChecker" type="ConvergenceChecker<UnivariatePointValuePair>" line="131"/>
            <method name="doOptimize" type="UnivariatePointValuePair" line="134"/>
            <javadoc line="134">
                Method for implementing actual optimization algorithms in derived
                  classes.                
                <return>
                    the optimum and its corresponding function value.                    
                </return>
                <throws>
                    TooManyEvaluationsException if the maximal number of evaluations
                      is exceeded.                    
                </throws>
            </javadoc>
        </class>
    </source>