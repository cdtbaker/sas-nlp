<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.ode.nonstiff">
        <import package="org.apache.commons.math3.util.FastMath"/>
        <class name="HighamHall54Integrator" line="3">
            <extends class="EmbeddedRungeKuttaIntegrator"/>
            <javadoc line="3">
                This class implements the 5(4) Higham and Hall integrator for
                  Ordinary Differential Equations.
                  &lt;p&gt;This integrator is an embedded Runge-Kutta integrator
                  of order 5(4) used in local extrapolation mode (i.e. the solution
                  is computed using the high order formula) with stepsize control
                  (and automatic step initialization) and continuous output. This
                  method uses 7 functions evaluations per step.&lt;/p&gt;                
                <version>
                    $Id: HighamHall54Integrator.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <declaration name="METHOD_NAME" type="String" line="15"/>
            <javadoc line="15">
                Integrator method name.                
            </javadoc>
            <declaration name="STATIC_C" type="double[]" line="19"/>
            <javadoc line="19">
                Time steps Butcher array.                
            </javadoc>
            <declaration name="STATIC_A" type="double[][]" line="23"/>
            <javadoc line="23">
                Internal weights Butcher array.                
            </javadoc>
            <declaration name="STATIC_B" type="double[]" line="27"/>
            <javadoc line="27">
                Propagation weights Butcher array.                
            </javadoc>
            <declaration name="STATIC_E" type="double[]" line="31"/>
            <javadoc line="31">
                Error weights Butcher array.                
            </javadoc>
            <javadoc line="35">
                Simple constructor.
                  Build a fifth order Higham and Hall integrator with the given step bounds                
                <param>
                    minStep minimal step (sign is irrelevant, regardless of
                      integration direction, forward or backward), the last step can
                      be smaller than this                    
                </param>
                <param>
                    maxStep maximal step (sign is irrelevant, regardless of
                      integration direction, forward or backward), the last step can
                      be smaller than this                    
                </param>
                <param>
                    scalAbsoluteTolerance allowed absolute error                    
                </param>
                <param>
                    scalRelativeTolerance allowed relative error                    
                </param>
            </javadoc>
            <method name="HighamHall54Integrator" type="constructor" line="47">
                <params>
                    <param name="minStep" type="double"/>
                    <param name="maxStep" type="double"/>
                    <param name="scalAbsoluteTolerance" type="double"/>
                    <param name="scalRelativeTolerance" type="double"/>
                </params>
            </method>
            <javadoc line="50">
                Simple constructor.
                  Build a fifth order Higham and Hall integrator with the given step bounds                
                <param>
                    minStep minimal step (sign is irrelevant, regardless of
                      integration direction, forward or backward), the last step can
                      be smaller than this                    
                </param>
                <param>
                    maxStep maximal step (sign is irrelevant, regardless of
                      integration direction, forward or backward), the last step can
                      be smaller than this                    
                </param>
                <param>
                    vecAbsoluteTolerance allowed absolute error                    
                </param>
                <param>
                    vecRelativeTolerance allowed relative error                    
                </param>
            </javadoc>
            <method name="HighamHall54Integrator" type="constructor" line="62">
                <params>
                    <param name="minStep" type="double"/>
                    <param name="maxStep" type="double"/>
                    <param name="vecAbsoluteTolerance" type="double[]"/>
                    <param name="vecRelativeTolerance" type="double[]"/>
                </params>
            </method>
            <javadoc line="65">
                {@inheritDoc}                
            </javadoc>
            <method name="getOrder" type="int" line="68"/>
            <javadoc line="71">
                {@inheritDoc}                
            </javadoc>
            <method name="estimateError" type="double" line="74">
                <params>
                    <param name="yDotK" type="double[][]"/>
                    <param name="y0" type="double[]"/>
                    <param name="y1" type="double[]"/>
                    <param name="h" type="double"/>
                </params>
                <declaration name="error" type="double" line="75"/>
                <scope line="76">
                    <declaration name="errSum" type="double" line="77"/>
                    <scope line="78"/>
                    <declaration name="yScale" type="double" line="81"/>
                    <declaration name="tol" type="double" line="82"/>
                    <declaration name="ratio" type="double" line="83"/>
                </scope>
            </method>
        </class>
    </source>