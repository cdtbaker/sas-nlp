<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optimization">
        <interface name="BaseOptimizer">
            <type_params>
                <type_param name="PAIR"/>
            </type_params>
            <javadoc line="20">
                This interface is mainly intended to enforce the internal coherence of
                  Commons-Math. Users of the API are advised to base their code on
                  the following interfaces:
                  &lt;ul&gt;
                  &lt;li&gt;{@link org.apache.commons.math3.optimization.MultivariateOptimizer}&lt;/li&gt;
                  &lt;li&gt;{@link org.apache.commons.math3.optimization.MultivariateDifferentiableOptimizer}&lt;/li&gt;
                  &lt;li&gt;{@link org.apache.commons.math3.optimization.MultivariateDifferentiableVectorOptimizer}&lt;/li&gt;
                  &lt;li&gt;{@link org.apache.commons.math3.optimization.univariate.UnivariateOptimizer}&lt;/li&gt;
                  &lt;/ul&gt;                
                <param>
                    &lt;PAIR&gt;
                       Type of the point/objective pair.                    
                </param>
                <version>
                    $Id: BaseOptimizer.java 1422230 2012-12-15 12:11:13Z erans $                    
                </version>
                <deprecated>
                    As of 3.1 (to be removed in 4.0).                    
                </deprecated>
                <since>
                    3.0                    
                </since>
            </javadoc>
            <method name="getMaxEvaluations" type="int" line="39"/>
            <javadoc line="39">
                Get the maximal number of function evaluations.                
                <return>
                    the maximal number of function evaluations.                    
                </return>
            </javadoc>
            <method name="getEvaluations" type="int" line="46"/>
            <javadoc line="46">
                Get the number of evaluations of the objective function.
                  The number of evaluations corresponds to the last call to the{@code optimize} method. It is 0 if the method has not been
                  called yet.                
                <return>
                    the number of evaluations of the objective function.                    
                </return>
            </javadoc>
            <method name="getConvergenceChecker" type="ConvergenceChecker<PAIR>" line="56"/>
            <javadoc line="56">
                Get the convergence checker.                
                <return>
                    the object used to check for convergence.                    
                </return>
            </javadoc>
        </interface>
    </source>