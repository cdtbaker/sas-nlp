<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry">
        <import package="java.text.FieldPosition"/>
        <import package="java.text.NumberFormat"/>
        <import package="java.text.ParsePosition"/>
        <import package="java.util.Locale"/>
        <import package="org.apache.commons.math3.util.CompositeFormat"/>
        <import package="org.apache.commons.math3.exception.MathParseException"/>
        <class name="VectorFormat" line="28">
            <type_params>
                <type_param name="S"/>
            </type_params>
            <javadoc line="28">
                Formats a vector in components list format &quot;{x; y; ...}&quot;.
                  &lt;p&gt;The prefix and suffix &quot;{&quot; and &quot;}&quot; and the separator &quot;; &quot; can be replaced by
                  any user-defined strings. The number format for components can be configured.&lt;/p&gt;
                  &lt;p&gt;White space is ignored at parse time, even if it is in the prefix, suffix
                  or separator specifications. So even if the default separator does include a space
                  character that is used at format time, both input string &quot;{1;1;1}&quot; and
                  &quot; { 1 ; 1 ; 1 } &quot; will be parsed without error and the same vector will be
                  returned. In the second case, however, the parse position after parsing will be
                  just after the closing curly brace, i.e. just before the trailing space.&lt;/p&gt;
                  &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; using &quot;,&quot; as a separator may interfere with the grouping separator
                  of the default {@link NumberFormat} for the current locale. Thus it is advised
                  to use a {@link NumberFormat} instance with disabled grouping in such a case.&lt;/p&gt;                
                <param>
                    &lt;S&gt;
                       Type of the space.                    
                </param>
                <version>
                    $Id: VectorFormat.java 1467801 2013-04-14 16:19:33Z tn $                    
                </version>
                <since>
                    3.0                    
                </since>
            </javadoc>
            <declaration name="DEFAULT_PREFIX" type="String" line="48"/>
            <javadoc line="48">
                The default prefix: &quot;{&quot;.                
            </javadoc>
            <declaration name="DEFAULT_SUFFIX" type="String" line="51"/>
            <javadoc line="51">
                The default suffix: &quot;}&quot;.                
            </javadoc>
            <declaration name="DEFAULT_SEPARATOR" type="String" line="54"/>
            <javadoc line="54">
                The default separator: &quot;, &quot;.                
            </javadoc>
            <declaration name="prefix" type="String" line="57"/>
            <javadoc line="57">
                Prefix.                
            </javadoc>
            <declaration name="suffix" type="String" line="60"/>
            <javadoc line="60">
                Suffix.                
            </javadoc>
            <declaration name="separator" type="String" line="63"/>
            <javadoc line="63">
                Separator.                
            </javadoc>
            <declaration name="trimmedPrefix" type="String" line="66"/>
            <javadoc line="66">
                Trimmed prefix.                
            </javadoc>
            <declaration name="trimmedSuffix" type="String" line="69"/>
            <javadoc line="69">
                Trimmed suffix.                
            </javadoc>
            <declaration name="trimmedSeparator" type="String" line="72"/>
            <javadoc line="72">
                Trimmed separator.                
            </javadoc>
            <declaration name="format" type="NumberFormat" line="75"/>
            <javadoc line="75">
                The format used for components.                
            </javadoc>
            <javadoc line="78">
                Create an instance with default settings.
                  &lt;p&gt;The instance uses the default prefix, suffix and separator:
                  &quot;{&quot;, &quot;}&quot;, and &quot;; &quot; and the default number format for components.&lt;/p&gt;                
            </javadoc>
            <method name="VectorFormat" type="constructor" line="83"/>
            <javadoc line="88">
                Create an instance with a custom number format for components.                
                <param>
                    format the custom format for components.                    
                </param>
            </javadoc>
            <method name="VectorFormat" type="constructor" line="92">
                <params>
                    <param name="format" type="NumberFormat"/>
                </params>
            </method>
            <javadoc line="96">
                Create an instance with custom prefix, suffix and separator.                
                <param>
                    prefix prefix to use instead of the default &quot;{&quot;                    
                </param>
                <param>
                    suffix suffix to use instead of the default &quot;}&quot;                    
                </param>
                <param>
                    separator separator to use instead of the default &quot;; &quot;                    
                </param>
            </javadoc>
            <method name="VectorFormat" type="constructor" line="103">
                <params>
                    <param name="prefix" type="String"/>
                    <param name="suffix" type="String"/>
                    <param name="separator" type="String"/>
                </params>
            </method>
            <javadoc line="107">
                Create an instance with custom prefix, suffix, separator and format
                  for components.                
                <param>
                    prefix prefix to use instead of the default &quot;{&quot;                    
                </param>
                <param>
                    suffix suffix to use instead of the default &quot;}&quot;                    
                </param>
                <param>
                    separator separator to use instead of the default &quot;; &quot;                    
                </param>
                <param>
                    format the custom format for components.                    
                </param>
            </javadoc>
            <method name="VectorFormat" type="constructor" line="116">
                <params>
                    <param name="prefix" type="String"/>
                    <param name="suffix" type="String"/>
                    <param name="separator" type="String"/>
                    <param name="format" type="NumberFormat"/>
                </params>
            </method>
            <javadoc line="126">
                Get the set of locales for which point/vector formats are available.
                  &lt;p&gt;This is the same set as the {@link NumberFormat} set.&lt;/p&gt;                
                <return>
                    available point/vector format locales.                    
                </return>
            </javadoc>
            <method name="getAvailableLocales" type="Locale[]" line="131"/>
            <javadoc line="135">
                Get the format prefix.                
                <return>
                    format prefix.                    
                </return>
            </javadoc>
            <method name="getPrefix" type="String" line="139"/>
            <javadoc line="143">
                Get the format suffix.                
                <return>
                    format suffix.                    
                </return>
            </javadoc>
            <method name="getSuffix" type="String" line="147"/>
            <javadoc line="151">
                Get the format separator between components.                
                <return>
                    format separator.                    
                </return>
            </javadoc>
            <method name="getSeparator" type="String" line="155"/>
            <javadoc line="159">
                Get the components format.                
                <return>
                    components format.                    
                </return>
            </javadoc>
            <method name="getFormat" type="NumberFormat" line="163"/>
            <javadoc line="167">
                Formats a {@link Vector} object to produce a string.                
                <param>
                    vector the object to format.                    
                </param>
                <return>
                    a formatted string.                    
                </return>
            </javadoc>
            <method name="format" type="String" line="172">
                <params>
                    <param name="vector" type="Vector&lt;S&gt;"/>
                </params>
            </method>
            <method name="format" type="StringBuffer" line="176"/>
            <javadoc line="176">
                Formats a {@link Vector} object to produce a string.                
                <param>
                    vector the object to format.                    
                </param>
                <param>
                    toAppendTo where the text is to be appended                    
                </param>
                <param>
                    pos On input: an alignment field, if desired. On output: the
                      offsets of the alignment field                    
                </param>
                <return>
                    the value passed in as toAppendTo.                    
                </return>
            </javadoc>
            <javadoc line="187">
                Formats the coordinates of a {@link Vector} to produce a string.                
                <param>
                    toAppendTo where the text is to be appended                    
                </param>
                <param>
                    pos On input: an alignment field, if desired. On output: the
                      offsets of the alignment field                    
                </param>
                <param>
                    coordinates coordinates of the object to format.                    
                </param>
                <return>
                    the value passed in as toAppendTo.                    
                </return>
            </javadoc>
            <method name="format" type="StringBuffer" line="196">
                <params>
                    <param name="toAppendTo" type="StringBuffer"/>
                    <param name="pos" type="FieldPosition"/>
                    <param name="coordinates" type="double"/>
                </params>
                <comment line="202">
                    format prefix                    
                </comment>
                <comment line="205">
                    format components                    
                </comment>
                <comment line="213">
                    format suffix                    
                </comment>
                <scope line="205">
                    <scope line="206"/>
                </scope>
            </method>
            <method name="parse" type="Vector&lt;S&gt;" line="219"/>
            <javadoc line="219">
                Parses a string to produce a {@link Vector} object.                
                <param>
                    source the string to parse                    
                </param>
                <return>
                    the parsed {@link Vector} object.                    
                </return>
                <throws>
                    MathParseException if the beginning of the specified string
                      cannot be parsed.                    
                </throws>
            </javadoc>
            <method name="parse" type="Vector&lt;S&gt;" line="228"/>
            <javadoc line="228">
                Parses a string to produce a {@link Vector} object.                
                <param>
                    source the string to parse                    
                </param>
                <param>
                    pos input/output parsing parameter.                    
                </param>
                <return>
                    the parsed {@link Vector} object.                    
                </return>
            </javadoc>
            <javadoc line="236">
                Parses a string to produce an array of coordinates.                
                <param>
                    dimension dimension of the space                    
                </param>
                <param>
                    source the string to parse                    
                </param>
                <param>
                    pos input/output parsing parameter.                    
                </param>
                <return>
                    coordinates array.                    
                </return>
            </javadoc>
            <method name="parseCoordinates" type="double[]" line="243">
                <params>
                    <param name="dimension" type="int"/>
                    <param name="source" type="String"/>
                    <param name="pos" type="ParsePosition"/>
                </params>
                <comment line="249">
                    parse prefix                    
                </comment>
                <comment line="257">
                    skip whitespace                    
                </comment>
                <comment line="260">
                    parse separator                    
                </comment>
                <comment line="265">
                    skip whitespace                    
                </comment>
                <comment line="268">
                    parse coordinate                    
                </comment>
                <comment line="271">
                    invalid coordinate
                     set index back to initial, error index should already be set                    
                </comment>
                <comment line="277">
                    store coordinate                    
                </comment>
                <comment line="282">
                    parse suffix                    
                </comment>
                <declaration name="initialIndex" type="int" line="245"/>
                <declaration name="coordinates" type="double[]" line="246"/>
                <scope line="250"/>
                <scope line="254">
                    <scope line="260"/>
                    <declaration name="c" type="Number" line="268"/>
                    <scope line="269"/>
                </scope>
                <scope line="283"/>
            </method>
        </class>
    </source>