<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.genetics">
        <import package="java.util.Collections"/>
        <import package="java.util.List"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooLargeException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <class name="ElitisticListPopulation" line="10">
            <extends class="ListPopulation"/>
            <javadoc line="10">
                Population of chromosomes which uses elitism (certain percentage of the best
                  chromosomes is directly copied to the next generation).                
                <version>
                    $Id: ElitisticListPopulation.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
                <since>
                    2.0                    
                </since>
            </javadoc>
            <declaration name="elitismRate" type="double" line="17"/>
            <javadoc line="17">
                percentage of chromosomes copied to the next generation                
            </javadoc>
            <javadoc line="21">
                Creates a new {@link ElitisticListPopulation} instance.                
                <param>
                    chromosomes list of chromosomes in the population                    
                </param>
                <param>
                    populationLimit maximal size of the population                    
                </param>
                <param>
                    elitismRate how many best chromosomes will be directly transferred to the next generation [in %]                    
                </param>
                <throws>
                    NullArgumentException if the list of chromosomes is {@code null}                    
                </throws>
                <throws>
                    NotPositiveException if the population limit is not a positive number (&lt; 1)                    
                </throws>
                <throws>
                    NumberIsTooLargeException if the list of chromosomes exceeds the population limit                    
                </throws>
                <throws>
                    OutOfRangeException if the elitism rate is outside the [0, 1] range                    
                </throws>
            </javadoc>
            <method name="ElitisticListPopulation" type="constructor" line="31">
                <params>
                    <param name="chromosomes" type="List<Chromosome>"/>
                    <param name="populationLimit" type="int"/>
                    <param name="elitismRate" type="double"/>
                </params>
            </method>
            <javadoc line="35">
                Creates a new {@link ElitisticListPopulation} instance and initializes its inner chromosome list.                
                <param>
                    populationLimit maximal size of the population                    
                </param>
                <param>
                    elitismRate how many best chromosomes will be directly transferred to the next generation [in %]                    
                </param>
                <throws>
                    NotPositiveException if the population limit is not a positive number (&lt; 1)                    
                </throws>
                <throws>
                    OutOfRangeException if the elitism rate is outside the [0, 1] range                    
                </throws>
            </javadoc>
            <method name="ElitisticListPopulation" type="constructor" line="42">
                <params>
                    <param name="populationLimit" type="int"/>
                    <param name="elitismRate" type="double"/>
                </params>
            </method>
            <javadoc line="46">
                Start the population for the next generation. The &lt;code&gt;{@link #elitismRate}&lt;/code&gt;
                  percents of the best chromosomes are directly copied to the next generation.                
                <return>
                    the beginnings of the next generation.                    
                </return>
            </javadoc>
            <method name="nextGeneration" type="Population" line="51">
                <declaration name="nextGeneration" type="ElitisticListPopulation" line="52"/>
                <declaration name="oldChromosomes" type="List&lt;Chromosome&gt;" line="53"/>
                <declaration name="boundIndex" type="int" line="55"/>
                <scope line="56"/>
            </method>
            <javadoc line="61">
                Sets the elitism rate, i.e. how many best chromosomes will be directly transferred to the next generation [in %].                
                <param>
                    elitismRate how many best chromosomes will be directly transferred to the next generation [in %]                    
                </param>
                <throws>
                    OutOfRangeException if the elitism rate is outside the [0, 1] range                    
                </throws>
            </javadoc>
            <method name="setElitismRate" type="void" line="66">
                <params>
                    <param name="elitismRate" type="double"/>
                </params>
                <scope line="67"/>
            </method>
            <javadoc line="72">
                Access the elitism rate.                
                <return>
                    the elitism rate                    
                </return>
            </javadoc>
            <method name="getElitismRate" type="double" line="76"/>
        </class>
    </source>