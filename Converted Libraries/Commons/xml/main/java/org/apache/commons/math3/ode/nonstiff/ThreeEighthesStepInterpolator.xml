<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.ode.nonstiff">
        <import package="org.apache.commons.math3.ode.sampling.StepInterpolator"/>
        <class name="ThreeEighthesStepInterpolator" line="22">
            <extends class="RungeKuttaStepInterpolator"/>
            <javadoc line="22">
                This class implements a step interpolator for the 3/8 fourth
                  order Runge-Kutta integrator.
                  &lt;p&gt;This interpolator allows to compute dense output inside the last
                  step computed. The interpolation equation is consistent with the
                  integration scheme :
                  &lt;ul&gt;
                  &lt;li&gt;Using reference point at step start:&lt;br&gt;
                  y(t&lt;sub&gt;n&lt;/sub&gt; + &amp;theta; h) = y (t&lt;sub&gt;n&lt;/sub&gt;)
                  + &amp;theta; (h/8) [ (8 - 15 &amp;theta; +  8 &amp;theta;&lt;sup&gt;2&lt;/sup&gt;) y&apos;&lt;sub&gt;1&lt;/sub&gt;
                  +  3  (15 &amp;theta; - 12 &amp;theta;&lt;sup&gt;2&lt;/sup&gt;) y&apos;&lt;sub&gt;2&lt;/sub&gt;
                  +        3 &amp;theta;                           y&apos;&lt;sub&gt;3&lt;/sub&gt;
                  +      (-3 &amp;theta; +  4 &amp;theta;&lt;sup&gt;2&lt;/sup&gt;) y&apos;&lt;sub&gt;4&lt;/sub&gt;
                  ]
                  &lt;/li&gt;
                  &lt;li&gt;Using reference point at step end:&lt;br&gt;
                  y(t&lt;sub&gt;n&lt;/sub&gt; + &amp;theta; h) = y (t&lt;sub&gt;n&lt;/sub&gt; + h)
                  - (1 - &amp;theta;) (h/8) [(1 - 7 &amp;theta; + 8 &amp;theta;&lt;sup&gt;2&lt;/sup&gt;) y&apos;&lt;sub&gt;1&lt;/sub&gt;
                  + 3 (1 +   &amp;theta; - 4 &amp;theta;&lt;sup&gt;2&lt;/sup&gt;) y&apos;&lt;sub&gt;2&lt;/sub&gt;
                  + 3 (1 +   &amp;theta;)                         y&apos;&lt;sub&gt;3&lt;/sub&gt;
                  +   (1 +   &amp;theta; + 4 &amp;theta;&lt;sup&gt;2&lt;/sup&gt;) y&apos;&lt;sub&gt;4&lt;/sub&gt;
                  ]
                  &lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  where &amp;theta; belongs to [0 ; 1] and where y&apos;&lt;sub&gt;1&lt;/sub&gt; to y&apos;&lt;sub&gt;4&lt;/sub&gt; are the four
                  evaluations of the derivatives already computed during the
                  step.&lt;/p&gt;                
                <see>
                    ThreeEighthesIntegrator                    
                </see>
                <version>
                    $Id: ThreeEighthesStepInterpolator.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="61"/>
            <javadoc line="61">
                Serializable version identifier                
            </javadoc>
            <javadoc line="64">
                Simple constructor.
                  This constructor builds an instance that is not usable yet, the{@link org.apache.commons.math3.ode.sampling.AbstractStepInterpolator#reinitialize}method should be called before using the instance in order to
                  initialize the internal arrays. This constructor is used only
                  in order to delay the initialization in some cases. The {@link RungeKuttaIntegrator} class uses the prototyping design pattern
                  to create the step interpolators by cloning an uninitialized model
                  and later initializing the copy.                
            </javadoc>
            <method name="ThreeEighthesStepInterpolator" type="constructor" line="75"/>
            <javadoc line="78">
                Copy constructor.                
                <param>
                    interpolator interpolator to copy from. The copy is a deep
                      copy: its arrays are separated from the original arrays of the
                      instance                    
                </param>
            </javadoc>
            <method name="ThreeEighthesStepInterpolator" type="constructor" line="83">
                <params>
                    <param name="interpolator" type="ThreeEighthesStepInterpolator"/>
                </params>
            </method>
            <javadoc line="87">
                {@inheritDoc}                
            </javadoc>
            <method name="doCopy" type="StepInterpolator" line="89"/>
            <javadoc line="94">
                {@inheritDoc}                
            </javadoc>
            <method name="computeInterpolatedStateAndDerivatives" type="void" line="97">
                <params>
                    <param name="theta" type="double"/>
                    <param name="oneMinusThetaH" type="double"/>
                </params>
                <declaration name="coeffDot3" type="double" line="99"/>
                <declaration name="coeffDot1" type="double" line="100"/>
                <declaration name="coeffDot2" type="double" line="101"/>
                <declaration name="coeffDot4" type="double" line="102"/>
                <scope line="104">
                    <declaration name="s" type="double" line="105"/>
                    <declaration name="fourTheta2" type="double" line="106"/>
                    <declaration name="coeff1" type="double" line="107"/>
                    <declaration name="coeff2" type="double" line="108"/>
                    <declaration name="coeff3" type="double" line="109"/>
                    <declaration name="coeff4" type="double" line="110"/>
                    <scope line="111">
                        <declaration name="yDot1" type="double" line="112"/>
                        <declaration name="yDot2" type="double" line="113"/>
                        <declaration name="yDot3" type="double" line="114"/>
                        <declaration name="yDot4" type="double" line="115"/>
                    </scope>
                </scope>
                <scope line="122">
                    <declaration name="s" type="double" line="123"/>
                    <declaration name="fourTheta2" type="double" line="124"/>
                    <declaration name="coeff1" type="double" line="125"/>
                    <declaration name="coeff2" type="double" line="126"/>
                    <declaration name="coeff3" type="double" line="127"/>
                    <declaration name="coeff4" type="double" line="128"/>
                    <scope line="129">
                        <declaration name="yDot1" type="double" line="130"/>
                        <declaration name="yDot2" type="double" line="131"/>
                        <declaration name="yDot3" type="double" line="132"/>
                        <declaration name="yDot4" type="double" line="133"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>