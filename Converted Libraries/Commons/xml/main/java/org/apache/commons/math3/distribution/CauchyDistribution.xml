<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.random.Well19937c"/>
        <class name="CauchyDistribution" line="26">
            <extends class="AbstractRealDistribution"/>
            <javadoc line="26">
                Implementation of the Cauchy distribution.                
                <see>
                    &lt;a href=&quot;http://en.wikipedia.org/wiki/Cauchy_distribution&quot;&gt;Cauchy distribution (Wikipedia)&lt;/a&gt;                    
                </see>
                <see>
                    &lt;a href=&quot;http://mathworld.wolfram.com/CauchyDistribution.html&quot;&gt;Cauchy Distribution (MathWorld)&lt;/a&gt;                    
                </see>
                <since>
                    1.1 (changed to concrete class in 3.0)                    
                </since>
                <version>
                    $Id: CauchyDistribution.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
            </javadoc>
            <declaration name="DEFAULT_INVERSE_ABSOLUTE_ACCURACY" type="double" line="35"/>
            <javadoc line="35">
                Default inverse cumulative probability accuracy.                
                <since>
                    2.1                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="40"/>
            <javadoc line="40">
                Serializable version identifier                
            </javadoc>
            <declaration name="median" type="double" line="42"/>
            <javadoc line="42">
                The median of this distribution.                
            </javadoc>
            <declaration name="scale" type="double" line="44"/>
            <javadoc line="44">
                The scale of this distribution.                
            </javadoc>
            <declaration name="solverAbsoluteAccuracy" type="double" line="46"/>
            <javadoc line="46">
                Inverse cumulative probability accuracy                
            </javadoc>
            <javadoc line="49">
                Creates a Cauchy distribution with the median equal to zero and scale
                  equal to one.                
            </javadoc>
            <method name="CauchyDistribution" type="constructor" line="53"/>
            <javadoc line="57">
                Creates a Cauchy distribution using the given median and scale.                
                <param>
                    median Median for this distribution.                    
                </param>
                <param>
                    scale Scale parameter for this distribution.                    
                </param>
            </javadoc>
            <method name="CauchyDistribution" type="constructor" line="63">
                <params>
                    <param name="median" type="double"/>
                    <param name="scale" type="double"/>
                </params>
            </method>
            <javadoc line="67">
                Creates a Cauchy distribution using the given median and scale.                
                <param>
                    median Median for this distribution.                    
                </param>
                <param>
                    scale Scale parameter for this distribution.                    
                </param>
                <param>
                    inverseCumAccuracy Maximum absolute error in inverse
                      cumulative probability estimates
                      (defaults to {@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).                    
                </param>
                <throws>
                    NotStrictlyPositiveException if {@code scale &lt;= 0}.                    
                </throws>
                <since>
                    2.1                    
                </since>
            </javadoc>
            <method name="CauchyDistribution" type="constructor" line="79">
                <params>
                    <param name="median" type="double"/>
                    <param name="scale" type="double"/>
                    <param name="inverseCumAccuracy" type="double"/>
                </params>
            </method>
            <javadoc line="83">
                Creates a Cauchy distribution.                
                <param>
                    rng Random number generator.                    
                </param>
                <param>
                    median Median for this distribution.                    
                </param>
                <param>
                    scale Scale parameter for this distribution.                    
                </param>
                <param>
                    inverseCumAccuracy Maximum absolute error in inverse
                      cumulative probability estimates
                      (defaults to {@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).                    
                </param>
                <throws>
                    NotStrictlyPositiveException if {@code scale &lt;= 0}.                    
                </throws>
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="CauchyDistribution" type="constructor" line="98">
                <params>
                    <param name="rng" type="RandomGenerator"/>
                    <param name="median" type="double"/>
                    <param name="scale" type="double"/>
                    <param name="inverseCumAccuracy" type="double"/>
                </params>
                <scope line="100"/>
            </method>
            <javadoc line="108">
                {@inheritDoc}                
            </javadoc>
            <method name="cumulativeProbability" type="double" line="109">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="113">
                Access the median.                
                <return>
                    the median for this distribution.                    
                </return>
            </javadoc>
            <method name="getMedian" type="double" line="118"/>
            <javadoc line="122">
                Access the scale parameter.                
                <return>
                    the scale parameter for this distribution.                    
                </return>
            </javadoc>
            <method name="getScale" type="double" line="127"/>
            <javadoc line="131">
                {@inheritDoc}                
            </javadoc>
            <method name="density" type="double" line="132">
                <params>
                    <param name="x" type="double"/>
                </params>
                <declaration name="dev" type="double" line="133"/>
            </method>
            <javadoc line="137">
                {@inheritDoc}Returns {@code Double.NEGATIVE_INFINITY} when {@code p == 0}and {@code Double.POSITIVE_INFINITY} when {@code p == 1}.                
            </javadoc>
            <method name="inverseCumulativeProbability" type="double" line="144">
                <params>
                    <param name="p" type="double"/>
                </params>
                <declaration name="ret" type="double" line="145"/>
                <scope line="146"/>
                <scope line="148"/>
                <scope line="150"/>
                <scope line="152"/>
            </method>
            <javadoc line="158">
                {@inheritDoc}                
            </javadoc>
            <method name="getSolverAbsoluteAccuracy" type="double" line="160"/>
            <javadoc line="164">
                {@inheritDoc}The mean is always undefined no matter the parameters.                
                <return>
                    mean (always Double.NaN)                    
                </return>
            </javadoc>
            <method name="getNumericalMean" type="double" line="171"/>
            <javadoc line="175">
                {@inheritDoc}The variance is always undefined no matter the parameters.                
                <return>
                    variance (always Double.NaN)                    
                </return>
            </javadoc>
            <method name="getNumericalVariance" type="double" line="182"/>
            <javadoc line="186">
                {@inheritDoc}The lower bound of the support is always negative infinity no matter
                  the parameters.                
                <return>
                    lower bound of the support (always Double.NEGATIVE_INFINITY)                    
                </return>
            </javadoc>
            <method name="getSupportLowerBound" type="double" line="194"/>
            <javadoc line="198">
                {@inheritDoc}The upper bound of the support is always positive infinity no matter
                  the parameters.                
                <return>
                    upper bound of the support (always Double.POSITIVE_INFINITY)                    
                </return>
            </javadoc>
            <method name="getSupportUpperBound" type="double" line="206"/>
            <javadoc line="210">
                {@inheritDoc}                
            </javadoc>
            <method name="isSupportLowerBoundInclusive" type="boolean" line="211"/>
            <javadoc line="215">
                {@inheritDoc}                
            </javadoc>
            <method name="isSupportUpperBoundInclusive" type="boolean" line="216"/>
            <javadoc line="220">
                {@inheritDoc}The support of this distribution is connected.                
                <return>
                    {@code true}                    
                </return>
            </javadoc>
            <method name="isSupportConnected" type="boolean" line="227"/>
        </class>
    </source>