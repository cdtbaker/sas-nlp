<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.partitioning">
        <import package="org.apache.commons.math3.geometry.Point"/>
        <import package="org.apache.commons.math3.geometry.Space"/>
        <interface name="Transform">
            <type_params>
                <type_param name="S"/>
                <type_param name="T"/>
            </type_params>
            <javadoc line="23">
                This interface represents an inversible affine transform in a space.
                  &lt;p&gt;Inversible affine transform include for example scalings,
                  translations, rotations.&lt;/p&gt;
                  &lt;p&gt;Transforms are dimension-specific. The consistency rules between
                  the three {@code apply} methods are the following ones for a
                  transformed defined for dimension D:&lt;/p&gt;
                  &lt;ul&gt;
                  &lt;li&gt;
                  the transform can be applied to a point in the
                  D-dimension space using its {@link #apply(Point)}method
                  &lt;/li&gt;
                  &lt;li&gt;
                  the transform can be applied to a (D-1)-dimension
                  hyperplane in the D-dimension space using its{@link #apply(Hyperplane)} method
                  &lt;/li&gt;
                  &lt;li&gt;
                  the transform can be applied to a (D-2)-dimension
                  sub-hyperplane in a (D-1)-dimension hyperplane using
                  its {@link #apply(SubHyperplane,Hyperplane,Hyperplane)}method
                  &lt;/li&gt;
                  &lt;/ul&gt;                
                <param>
                    &lt;S&gt;
                       Type of the embedding space.                    
                </param>
                <param>
                    &lt;T&gt;
                       Type of the embedded sub-space.                    
                </param>
                <version>
                    $Id: Transform.java 1554646 2014-01-01 17:22:53Z luc $                    
                </version>
                <since>
                    3.0                    
                </since>
            </javadoc>
            <method name="apply" type="Point&lt;S&gt;" line="57"/>
            <javadoc line="57">
                Transform a point of a space.                
                <param>
                    point point to transform                    
                </param>
                <return>
                    a new object representing the transformed point                    
                </return>
            </javadoc>
            <method name="apply" type="Hyperplane&lt;S&gt;" line="63"/>
            <javadoc line="63">
                Transform an hyperplane of a space.                
                <param>
                    hyperplane hyperplane to transform                    
                </param>
                <return>
                    a new object representing the transformed hyperplane                    
                </return>
            </javadoc>
            <method name="apply" type="SubHyperplane&lt;T&gt;" line="69"/>
            <javadoc line="69">
                Transform a sub-hyperplane embedded in an hyperplane.                
                <param>
                    sub sub-hyperplane to transform                    
                </param>
                <param>
                    original hyperplane in which the sub-hyperplane is
                      defined (this is the original hyperplane, the transform has
                      &lt;em&gt;not&lt;/em&gt; been applied to it)                    
                </param>
                <param>
                    transformed hyperplane in which the sub-hyperplane is
                      defined (this is the transformed hyperplane, the transform
                      &lt;em&gt;has&lt;/em&gt; been applied to it)                    
                </param>
                <return>
                    a new object representing the transformed sub-hyperplane                    
                </return>
            </javadoc>
        </interface>
    </source>