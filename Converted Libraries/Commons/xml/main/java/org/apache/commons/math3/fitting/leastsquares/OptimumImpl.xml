<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.fitting.leastsquares">
        <import package="org.apache.commons.math3.fitting.leastsquares.LeastSquaresOptimizer.Optimum"/>
        <import package="org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem.Evaluation"/>
        <import package="org.apache.commons.math3.linear.RealMatrix"/>
        <import package="org.apache.commons.math3.linear.RealVector"/>
        <class name="OptimumImpl" line="24">
            <comment line="53">
                                
            </comment>
            <implements interface="Optimum"/>
            <javadoc line="24">
                A pedantic implementation of {@link Optimum}.                
                <version>
                    $Id: OptimumImpl.java 1571306 2014-02-24 14:57:44Z luc $                    
                </version>
                <since>
                    3.3                    
                </since>
            </javadoc>
            <declaration name="value" type="Evaluation" line="32"/>
            <javadoc line="32">
                abscissa and ordinate                
            </javadoc>
            <declaration name="evaluations" type="int" line="34"/>
            <javadoc line="34">
                number of evaluations to compute this optimum                
            </javadoc>
            <declaration name="iterations" type="int" line="36"/>
            <javadoc line="36">
                number of iterations to compute this optimum                
            </javadoc>
            <javadoc line="39">
                Construct an optimum from an evaluation and the values of the counters.                
                <param>
                    value       the function value                    
                </param>
                <param>
                    evaluations number of times the function was evaluated                    
                </param>
                <param>
                    iterations  number of iterations of the algorithm                    
                </param>
            </javadoc>
            <method name="OptimumImpl" type="constructor" line="46">
                <params>
                    <param name="value" type="Evaluation"/>
                    <param name="evaluations" type="int"/>
                    <param name="iterations" type="int"/>
                </params>
            </method>
            <javadoc line="54">
                {@inheritDoc}                
            </javadoc>
            <method name="getEvaluations" type="int" line="55"/>
            <javadoc line="59">
                {@inheritDoc}                
            </javadoc>
            <method name="getIterations" type="int" line="60"/>
            <javadoc line="64">
                {@inheritDoc}                
            </javadoc>
            <method name="getCovariances" type="RealMatrix" line="65">
                <params>
                    <param name="threshold" type="double"/>
                </params>
            </method>
            <javadoc line="69">
                {@inheritDoc}                
            </javadoc>
            <method name="getSigma" type="RealVector" line="70">
                <params>
                    <param name="covarianceSingularityThreshold" type="double"/>
                </params>
            </method>
            <javadoc line="74">
                {@inheritDoc}                
            </javadoc>
            <method name="getRMS" type="double" line="75"/>
            <javadoc line="79">
                {@inheritDoc}                
            </javadoc>
            <method name="getJacobian" type="RealMatrix" line="80"/>
            <javadoc line="84">
                {@inheritDoc}                
            </javadoc>
            <method name="getCost" type="double" line="85"/>
            <javadoc line="89">
                {@inheritDoc}                
            </javadoc>
            <method name="getResiduals" type="RealVector" line="90"/>
            <javadoc line="94">
                {@inheritDoc}                
            </javadoc>
            <method name="getPoint" type="RealVector" line="95"/>
        </class>
    </source>