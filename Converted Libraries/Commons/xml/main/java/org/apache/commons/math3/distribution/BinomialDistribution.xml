<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.special.Beta"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.random.Well19937c"/>
        <class name="BinomialDistribution" line="27">
            <extends class="AbstractIntegerDistribution"/>
            <javadoc line="27">
                Implementation of the binomial distribution.                
                <see>
                    &lt;a href=&quot;http://en.wikipedia.org/wiki/Binomial_distribution&quot;&gt;Binomial distribution (Wikipedia)&lt;/a&gt;                    
                </see>
                <see>
                    &lt;a href=&quot;http://mathworld.wolfram.com/BinomialDistribution.html&quot;&gt;Binomial Distribution (MathWorld)&lt;/a&gt;                    
                </see>
                <version>
                    $Id: BinomialDistribution.java 1534358 2013-10-21 20:13:52Z tn $                    
                </version>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="35"/>
            <javadoc line="35">
                Serializable version identifier.                
            </javadoc>
            <declaration name="numberOfTrials" type="int" line="37"/>
            <javadoc line="37">
                The number of trials.                
            </javadoc>
            <declaration name="probabilityOfSuccess" type="double" line="39"/>
            <javadoc line="39">
                The probability of success.                
            </javadoc>
            <javadoc line="42">
                Create a binomial distribution with the given number of trials and
                  probability of success.                
                <param>
                    trials Number of trials.                    
                </param>
                <param>
                    p Probability of success.                    
                </param>
                <throws>
                    NotPositiveException if {@code trials &lt; 0}.                    
                </throws>
                <throws>
                    OutOfRangeException if {@code p &lt; 0} or {@code p &gt; 1}.                    
                </throws>
            </javadoc>
            <method name="BinomialDistribution" type="constructor" line="51">
                <params>
                    <param name="trials" type="int"/>
                    <param name="p" type="double"/>
                </params>
            </method>
            <javadoc line="55">
                Creates a binomial distribution.                
                <param>
                    rng Random number generator.                    
                </param>
                <param>
                    trials Number of trials.                    
                </param>
                <param>
                    p Probability of success.                    
                </param>
                <throws>
                    NotPositiveException if {@code trials &lt; 0}.                    
                </throws>
                <throws>
                    OutOfRangeException if {@code p &lt; 0} or {@code p &gt; 1}.                    
                </throws>
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="BinomialDistribution" type="constructor" line="67">
                <params>
                    <param name="rng" type="RandomGenerator"/>
                    <param name="trials" type="int"/>
                    <param name="p" type="double"/>
                </params>
                <scope line="70"/>
                <scope line="74"/>
            </method>
            <javadoc line="82">
                Access the number of trials for this distribution.                
                <return>
                    the number of trials.                    
                </return>
            </javadoc>
            <method name="getNumberOfTrials" type="int" line="87"/>
            <javadoc line="91">
                Access the probability of success for this distribution.                
                <return>
                    the probability of success.                    
                </return>
            </javadoc>
            <method name="getProbabilityOfSuccess" type="double" line="96"/>
            <javadoc line="100">
                {@inheritDoc}                
            </javadoc>
            <method name="probability" type="double" line="101">
                <params>
                    <param name="x" type="int"/>
                </params>
                <declaration name="logProbability" type="double" line="102"/>
            </method>
            <javadoc line="106">
                {@inheritDoc}                
            </javadoc>
            <method name="logProbability" type="double" line="108">
                <params>
                    <param name="x" type="int"/>
                </params>
                <declaration name="ret" type="double" line="109"/>
                <scope line="110"/>
                <scope line="112"/>
            </method>
            <javadoc line="120">
                {@inheritDoc}                
            </javadoc>
            <method name="cumulativeProbability" type="double" line="121">
                <params>
                    <param name="x" type="int"/>
                </params>
                <declaration name="ret" type="double" line="122"/>
                <scope line="123"/>
                <scope line="125"/>
                <scope line="127"/>
            </method>
            <javadoc line="134">
                {@inheritDoc}For {@code n} trials and probability parameter {@code p}, the mean is{@code n  p}.                
            </javadoc>
            <method name="getNumericalMean" type="double" line="140"/>
            <javadoc line="144">
                {@inheritDoc}For {@code n} trials and probability parameter {@code p}, the variance is{@code n  p  (1 - p)}.                
            </javadoc>
            <method name="getNumericalVariance" type="double" line="150">
                <declaration name="p" type="double" line="151"/>
            </method>
            <javadoc line="155">
                {@inheritDoc}The lower bound of the support is always 0 except for the probability
                  parameter {@code p = 1}.                
                <return>
                    lower bound of the support (0 or the number of trials)                    
                </return>
            </javadoc>
            <method name="getSupportLowerBound" type="int" line="163"/>
            <javadoc line="167">
                {@inheritDoc}The upper bound of the support is the number of trials except for the
                  probability parameter {@code p = 0}.                
                <return>
                    upper bound of the support (number of trials or 0)                    
                </return>
            </javadoc>
            <method name="getSupportUpperBound" type="int" line="175"/>
            <javadoc line="179">
                {@inheritDoc}The support of this distribution is connected.                
                <return>
                    {@code true}                    
                </return>
            </javadoc>
            <method name="isSupportConnected" type="boolean" line="186"/>
        </class>
    </source>