<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.genetics">
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <class name="RandomKeyMutation" line="6">
            <implements interface="MutationPolicy"/>
            <javadoc line="6">
                Mutation operator for {@link RandomKey}s. Changes a randomly chosen element
                  of the array representation to a random value uniformly distributed in [0,1].                
                <since>
                    2.0                    
                </since>
                <version>
                    $Id: RandomKeyMutation.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
            </javadoc>
            <javadoc line="13">
                {@inheritDoc}                
                <throws>
                    MathIllegalArgumentException if <code>original</code> is not a {@link RandomKey} instance                    
                </throws>
            </javadoc>
            <method name="mutate" type="Chromosome" line="17">
                <params>
                    <param name="original" type="Chromosome"/>
                </params>
                <scope line="18"/>
                <declaration name="originalRk" type="RandomKey&lt;?&gt;" line="21"/>
                <declaration name="repr" type="List&lt;Double&gt;" line="22"/>
                <declaration name="rInd" type="int" line="23"/>
                <declaration name="newRepr" type="List&lt;Double&gt;" line="24"/>
            </method>
        </class>
    </source>