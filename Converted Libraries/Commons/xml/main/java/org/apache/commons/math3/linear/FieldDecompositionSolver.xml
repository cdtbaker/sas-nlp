<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="org.apache.commons.math3.FieldElement"/>
        <interface name="FieldDecompositionSolver">
            <type_params>
                <type_param name="T"/>
            </type_params>
            <javadoc line="23">
                Interface handling decomposition algorithms that can solve A &amp;times; X = B.
                  &lt;p&gt;Decomposition algorithms decompose an A matrix has a product of several specific
                  matrices from which they can solve A &amp;times; X = B in least squares sense: they find X
                  such that ||A &amp;times; X - B|| is minimal.&lt;/p&gt;
                  &lt;p&gt;Some solvers like {@link FieldLUDecomposition} can only find the solution for
                  square matrices and when the solution is an exact linear solution, i.e. when
                  ||A &amp;times; X - B|| is exactly 0. Other solvers can also find solutions
                  with non-square matrix A and with non-null minimal norm. If an exact linear
                  solution exists it is also the minimal norm solution.&lt;/p&gt;                
                <param>
                    <T>
                       the type of the field elements                    
                </param>
                <version>
                    $Id: FieldDecompositionSolver.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
                <since>
                    2.0                    
                </since>
            </javadoc>
            <method name="solve" type="FieldVector<T>" line="40"/>
            <javadoc line="40">
                Solve the linear equation A &amp;times; X = B for matrices A.
                  &lt;p&gt;The A matrix is implicit, it is provided by the underlying
                  decomposition algorithm.&lt;/p&gt;                
                <param>
                    b right-hand side of the equation A &times; X = B                    
                </param>
                <return>
                    a vector X that minimizes the two norm of A &times; X - B                    
                </return>
                <throws>
                    org.apache.commons.math3.exception.DimensionMismatchExceptionif the matrices dimensions do not match.                    
                </throws>
                <throws>
                    SingularMatrixExceptionif the decomposed matrix is singular.                    
                </throws>
            </javadoc>
            <method name="solve" type="FieldMatrix<T>" line="52"/>
            <javadoc line="52">
                Solve the linear equation A &amp;times; X = B for matrices A.
                  &lt;p&gt;The A matrix is implicit, it is provided by the underlying
                  decomposition algorithm.&lt;/p&gt;                
                <param>
                    b right-hand side of the equation A &times; X = B                    
                </param>
                <return>
                    a matrix X that minimizes the two norm of A &times; X - B                    
                </return>
                <throws>
                    org.apache.commons.math3.exception.DimensionMismatchExceptionif the matrices dimensions do not match.                    
                </throws>
                <throws>
                    SingularMatrixExceptionif the decomposed matrix is singular.                    
                </throws>
            </javadoc>
            <method name="isNonSingular" type="boolean" line="64"/>
            <javadoc line="64">
                Check if the decomposed matrix is non-singular.                
                <return>
                    true if the decomposed matrix is non-singular                    
                </return>
            </javadoc>
            <method name="getInverse" type="FieldMatrix<T>" line="70"/>
            <javadoc line="70">
                Get the inverse (or pseudo-inverse) of the decomposed matrix.                
                <return>
                    inverse matrix                    
                </return>
                <throws>
                    SingularMatrixExceptionif the decomposed matrix is singular.                    
                </throws>
            </javadoc>
        </interface>
    </source>