<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.inference">
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collection"/>
        <import package="org.apache.commons.math3.distribution.FDistribution"/>
        <import package="org.apache.commons.math3.exception.ConvergenceException"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MaxCountExceededException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.stat.descriptive.SummaryStatistics"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <class name="OneWayAnova" line="32">
            <javadoc line="32">
                Implements one-way ANOVA (analysis of variance) statistics.
                  &lt;p&gt; Tests for differences between two or more categories of univariate data
                  (for example, the body mass index of accountants, lawyers, doctors and
                  computer programmers).  When two categories are given, this is equivalent to
                  the {@link org.apache.commons.math3.stat.inference.TTest}.
                  &lt;/p&gt;&lt;p&gt;
                  Uses the {@link org.apache.commons.math3.distribution.FDistributioncommons-math F Distribution implementation} to estimate exact p-values.&lt;/p&gt;
                  &lt;p&gt;This implementation is based on a description at
                  http://faculty.vassar.edu/lowry/ch13pt1.html&lt;/p&gt;
                  &lt;pre&gt;
                  Abbreviations: bg = between groups,
                  wg = within groups,
                  ss = sum squared deviations
                  &lt;/pre&gt;                
                <since>
                    1.2                    
                </since>
                <version>
                    $Id: OneWayAnova.java 1462423 2013-03-29 07:25:18Z luc $                    
                </version>
            </javadoc>
            <javadoc line="55">
                Default constructor.                
            </javadoc>
            <method name="OneWayAnova" type="constructor" line="58"/>
            <javadoc line="61">
                Computes the ANOVA F-value for a collection of &lt;code&gt;double[]&lt;/code&gt;
                  arrays.
                  &lt;p&gt;&lt;strong&gt;Preconditions&lt;/strong&gt;: &lt;ul&gt;
                  &lt;li&gt;The categoryData &lt;code&gt;Collection&lt;/code&gt; must contain
                  &lt;code&gt;double[]&lt;/code&gt; arrays.&lt;/li&gt;
                  &lt;li&gt; There must be at least two &lt;code&gt;double[]&lt;/code&gt; arrays in the
                  &lt;code&gt;categoryData&lt;/code&gt; collection and each of these arrays must
                  contain at least two values.&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;&lt;p&gt;
                  This implementation computes the F statistic using the definitional
                  formula&lt;pre&gt;
                  F = msbg/mswg&lt;/pre&gt;
                  where&lt;pre&gt;
                  msbg = between group mean square
                  mswg = within group mean square&lt;/pre&gt;
                  are as defined &lt;a href=&quot;http://faculty.vassar.edu/lowry/ch13pt1.html&quot;&gt;
                  here&lt;/a&gt;&lt;/p&gt;                
                <param>
                    categoryData &lt;code&gt;Collection&lt;/code&gt; of &lt;code&gt;double[]&lt;/code&gt;
                      arrays each containing data for one category                    
                </param>
                <return>
                    Fvalue                    
                </return>
                <throws>
                    NullArgumentException if &lt;code&gt;categoryData&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;                    
                </throws>
                <throws>
                    DimensionMismatchException if the length of the &lt;code&gt;categoryData&lt;/code&gt;
                      array is less than 2 or a contained &lt;code&gt;double[]&lt;/code&gt; array does not have
                      at least two values                    
                </throws>
            </javadoc>
            <method name="anovaFValue" type="double" line="89">
                <params>
                    <param name="categoryData" type="Collection<double[]>"/>
                </params>
                <declaration name="a" type="AnovaStats" line="91"/>
            </method>
            <javadoc line="96">
                Computes the ANOVA P-value for a collection of &lt;code&gt;double[]&lt;/code&gt;
                  arrays.
                  &lt;p&gt;&lt;strong&gt;Preconditions&lt;/strong&gt;: &lt;ul&gt;
                  &lt;li&gt;The categoryData &lt;code&gt;Collection&lt;/code&gt; must contain
                  &lt;code&gt;double[]&lt;/code&gt; arrays.&lt;/li&gt;
                  &lt;li&gt; There must be at least two &lt;code&gt;double[]&lt;/code&gt; arrays in the
                  &lt;code&gt;categoryData&lt;/code&gt; collection and each of these arrays must
                  contain at least two values.&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;&lt;p&gt;
                  This implementation uses the{@link org.apache.commons.math3.distribution.FDistributioncommons-math F Distribution implementation} to estimate the exact
                  p-value, using the formula&lt;pre&gt;
                  p = 1 - cumulativeProbability(F)&lt;/pre&gt;
                  where &lt;code&gt;F&lt;/code&gt; is the F value and &lt;code&gt;cumulativeProbability&lt;/code&gt;
                  is the commons-math implementation of the F distribution.&lt;/p&gt;                
                <param>
                    categoryData &lt;code&gt;Collection&lt;/code&gt; of &lt;code&gt;double[]&lt;/code&gt;
                      arrays each containing data for one category                    
                </param>
                <return>
                    Pvalue                    
                </return>
                <throws>
                    NullArgumentException if &lt;code&gt;categoryData&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;                    
                </throws>
                <throws>
                    DimensionMismatchException if the length of the &lt;code&gt;categoryData&lt;/code&gt;
                      array is less than 2 or a contained &lt;code&gt;double[]&lt;/code&gt; array does not have
                      at least two values                    
                </throws>
                <throws>
                    ConvergenceException if the p-value can not be computed due to a convergence error                    
                </throws>
                <throws>
                    MaxCountExceededException if the maximum number of iterations is exceeded                    
                </throws>
            </javadoc>
            <method name="anovaPValue" type="double" line="126">
                <params>
                    <param name="categoryData" type="Collection<double[]>"/>
                </params>
                <comment line="130">
                    No try-catch or advertised exception because args are valid                    
                </comment>
                <declaration name="a" type="AnovaStats" line="128"/>
                <declaration name="fdist" type="FDistribution" line="130"/>
            </method>
            <javadoc line="135">
                Computes the ANOVA P-value for a collection of {@link SummaryStatistics}.
                  &lt;p&gt;&lt;strong&gt;Preconditions&lt;/strong&gt;: &lt;ul&gt;
                  &lt;li&gt;The categoryData &lt;code&gt;Collection&lt;/code&gt; must contain{@link SummaryStatistics}.&lt;/li&gt;
                  &lt;li&gt; There must be at least two {@link SummaryStatistics} in the
                  &lt;code&gt;categoryData&lt;/code&gt; collection and each of these statistics must
                  contain at least two values.&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;&lt;p&gt;
                  This implementation uses the{@link org.apache.commons.math3.distribution.FDistributioncommons-math F Distribution implementation} to estimate the exact
                  p-value, using the formula&lt;pre&gt;
                  p = 1 - cumulativeProbability(F)&lt;/pre&gt;
                  where &lt;code&gt;F&lt;/code&gt; is the F value and &lt;code&gt;cumulativeProbability&lt;/code&gt;
                  is the commons-math implementation of the F distribution.&lt;/p&gt;                
                <param>
                    categoryData &lt;code&gt;Collection&lt;/code&gt; of {@link SummaryStatistics}each containing data for one category                    
                </param>
                <param>
                    allowOneElementData if true, allow computation for one catagory
                      only or for one data element per category                    
                </param>
                <return>
                    Pvalue                    
                </return>
                <throws>
                    NullArgumentException if &lt;code&gt;categoryData&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;                    
                </throws>
                <throws>
                    DimensionMismatchException if the length of the &lt;code&gt;categoryData&lt;/code&gt;
                      array is less than 2 or a contained {@link SummaryStatistics} does not have
                      at least two values                    
                </throws>
                <throws>
                    ConvergenceException if the p-value can not be computed due to a convergence error                    
                </throws>
                <throws>
                    MaxCountExceededException if the maximum number of iterations is exceeded                    
                </throws>
                <since>
                    3.2                    
                </since>
            </javadoc>
            <method name="anovaPValue" type="double" line="168">
                <params>
                    <param name="categoryData" type="Collection<SummaryStatistics>"/>
                    <param name="allowOneElementData" type="boolean"/>
                </params>
                <declaration name="a" type="AnovaStats" line="170"/>
                <declaration name="fdist" type="FDistribution" line="171"/>
            </method>
            <javadoc line="176">
                This method calls the method that actually does the calculations (except
                  P-value).                
                <param>
                    categoryData&lt;code&gt;Collection&lt;/code&gt; of &lt;code&gt;double[]&lt;/code&gt; arrays each
                      containing data for one category                    
                </param>
                <return>
                    computed AnovaStats                    
                </return>
                <throws>
                    NullArgumentExceptionif &lt;code&gt;categoryData&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;                    
                </throws>
                <throws>
                    DimensionMismatchExceptionif the length of the &lt;code&gt;categoryData&lt;/code&gt; array is less
                      than 2 or a contained &lt;code&gt;double[]&lt;/code&gt; array does not
                      contain at least two values                    
                </throws>
            </javadoc>
            <method name="anovaStats" type="AnovaStats" line="192">
                <params>
                    <param name="categoryData" type="Collection<double[]>"/>
                </params>
                <comment line="200">
                    convert arrays to SummaryStatistics                    
                </comment>
                <declaration name="categoryDataSummaryStatistics" type="Collection&lt;SummaryStatistics&gt;" line="196"/>
                <scope line="200">
                    <declaration name="dataSummaryStatistics" type="SummaryStatistics" line="201"/>
                    <scope line="203"/>
                </scope>
            </method>
            <javadoc line="212">
                Performs an ANOVA test, evaluating the null hypothesis that there
                  is no difference among the means of the data categories.
                  &lt;p&gt;&lt;strong&gt;Preconditions&lt;/strong&gt;: &lt;ul&gt;
                  &lt;li&gt;The categoryData &lt;code&gt;Collection&lt;/code&gt; must contain
                  &lt;code&gt;double[]&lt;/code&gt; arrays.&lt;/li&gt;
                  &lt;li&gt; There must be at least two &lt;code&gt;double[]&lt;/code&gt; arrays in the
                  &lt;code&gt;categoryData&lt;/code&gt; collection and each of these arrays must
                  contain at least two values.&lt;/li&gt;
                  &lt;li&gt;alpha must be strictly greater than 0 and less than or equal to 0.5.
                  &lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;&lt;p&gt;
                  This implementation uses the{@link org.apache.commons.math3.distribution.FDistributioncommons-math F Distribution implementation} to estimate the exact
                  p-value, using the formula&lt;pre&gt;
                  p = 1 - cumulativeProbability(F)&lt;/pre&gt;
                  where &lt;code&gt;F&lt;/code&gt; is the F value and &lt;code&gt;cumulativeProbability&lt;/code&gt;
                  is the commons-math implementation of the F distribution.&lt;/p&gt;
                  &lt;p&gt;True is returned iff the estimated p-value is less than alpha.&lt;/p&gt;                
                <param>
                    categoryData &lt;code&gt;Collection&lt;/code&gt; of &lt;code&gt;double[]&lt;/code&gt;
                      arrays each containing data for one category                    
                </param>
                <param>
                    alpha significance level of the test                    
                </param>
                <return>
                    true if the null hypothesis can be rejected with
                      confidence 1 - alpha                    
                </return>
                <throws>
                    NullArgumentException if &lt;code&gt;categoryData&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;                    
                </throws>
                <throws>
                    DimensionMismatchException if the length of the &lt;code&gt;categoryData&lt;/code&gt;
                      array is less than 2 or a contained &lt;code&gt;double[]&lt;/code&gt; array does not have
                      at least two values                    
                </throws>
                <throws>
                    OutOfRangeException if &lt;code&gt;alpha&lt;/code&gt; is not in the range (0, 0.5]                    
                </throws>
                <throws>
                    ConvergenceException if the p-value can not be computed due to a convergence error                    
                </throws>
                <throws>
                    MaxCountExceededException if the maximum number of iterations is exceeded                    
                </throws>
            </javadoc>
            <method name="anovaTest" type="boolean" line="249">
                <params>
                    <param name="categoryData" type="Collection<double[]>"/>
                    <param name="alpha" type="double"/>
                </params>
                <scope line="251"/>
            </method>
            <javadoc line="260">
                This method actually does the calculations (except P-value).                
                <param>
                    categoryData &lt;code&gt;Collection&lt;/code&gt; of &lt;code&gt;double[]&lt;/code&gt;
                      arrays each containing data for one category                    
                </param>
                <param>
                    allowOneElementData if true, allow computation for one catagory
                      only or for one data element per category                    
                </param>
                <return>
                    computed AnovaStats                    
                </return>
                <throws>
                    NullArgumentException if &lt;code&gt;categoryData&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;                    
                </throws>
                <throws>
                    DimensionMismatchException if &lt;code&gt;allowOneElementData&lt;/code&gt; is false and the number of
                      categories is less than 2 or a contained SummaryStatistics does not contain
                      at least two values                    
                </throws>
            </javadoc>
            <method name="anovaStats" type="AnovaStats" line="275">
                <params>
                    <param name="categoryData" type="Collection<SummaryStatistics>"/>
                    <param name="allowOneElementData" type="boolean"/>
                </params>
                <comment line="281">
                    check if we have enough categories                    
                </comment>
                <comment line="287">
                    check if each category has enough data                    
                </comment>
                <scope line="279">
                    <scope line="281"/>
                    <scope line="287">
                        <scope line="288"/>
                    </scope>
                </scope>
                <declaration name="dfwg" type="int" line="295"/>
                <declaration name="sswg" type="double" line="296"/>
                <declaration name="totsum" type="double" line="297"/>
                <declaration name="totsumsq" type="double" line="298"/>
                <declaration name="totnum" type="int" line="299"/>
                <scope line="301">
                    <declaration name="sum" type="double" line="303"/>
                    <declaration name="sumsq" type="double" line="304"/>
                    <declaration name="num" type="int" line="305"/>
                    <declaration name="ss" type="double" line="311"/>
                </scope>
                <declaration name="sst" type="double" line="315"/>
                <declaration name="ssbg" type="double" line="316"/>
                <declaration name="dfbg" type="int" line="317"/>
                <declaration name="msbg" type="double" line="318"/>
                <declaration name="mswg" type="double" line="319"/>
                <declaration name="F" type="double" line="320"/>
            </method>
            <class name="AnovaStats" line="326">
                <javadoc line="326">
                    Convenience class to pass dfbg,dfwg,F values around within OneWayAnova.
                      No get/set methods provided.                    
                </javadoc>
                <declaration name="dfbg" type="int" line="332"/>
                <javadoc line="332">
                    Degrees of freedom in numerator (between groups).                    
                </javadoc>
                <declaration name="dfwg" type="int" line="335"/>
                <javadoc line="335">
                    Degrees of freedom in denominator (within groups).                    
                </javadoc>
                <declaration name="F" type="double" line="338"/>
                <javadoc line="338">
                    Statistic.                    
                </javadoc>
                <javadoc line="341">
                    Constructor                    
                    <param>
                        dfbg degrees of freedom in numerator (between groups)                        
                    </param>
                    <param>
                        dfwg degrees of freedom in denominator (within groups)                        
                    </param>
                    <param>
                        F statistic                        
                    </param>
                </javadoc>
                <method name="AnovaStats" type="constructor" line="347">
                    <params>
                        <param name="dfbg" type="int"/>
                        <param name="dfwg" type="int"/>
                        <param name="F" type="double"/>
                    </params>
                </method>
            </class>
        </class>
    </source>