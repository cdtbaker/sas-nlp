<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="org.apache.commons.math3.exception.NumberIsTooLargeException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.random.Well19937c"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <class name="UniformIntegerDistribution" line="7">
            <extends class="AbstractIntegerDistribution"/>
            <javadoc line="7">
                Implementation of the uniform integer distribution.                
                <see>
                    <a href="http://en.wikipedia.org/wiki/Uniform_distribution_(discrete)"
                      >Uniform distribution (discrete), at Wikipedia</a>                    
                </see>
                <version>
                    $Id: UniformIntegerDistribution.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
                <since>
                    3.0                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="15"/>
            <javadoc line="15">
                Serializable version identifier.                
            </javadoc>
            <declaration name="lower" type="int" line="19"/>
            <javadoc line="19">
                Lower bound (inclusive) of this distribution.                
            </javadoc>
            <declaration name="upper" type="int" line="23"/>
            <javadoc line="23">
                Upper bound (inclusive) of this distribution.                
            </javadoc>
            <javadoc line="27">
                Creates a new uniform integer distribution using the given lower and
                  upper bounds (both inclusive).                
                <param>
                    lower Lower bound (inclusive) of this distribution.                    
                </param>
                <param>
                    upper Upper bound (inclusive) of this distribution.                    
                </param>
                <throws>
                    NumberIsTooLargeException if {@code lower >= upper}.                    
                </throws>
            </javadoc>
            <method name="UniformIntegerDistribution" type="constructor" line="34">
                <params>
                    <param name="lower" type="int"/>
                    <param name="upper" type="int"/>
                </params>
            </method>
            <javadoc line="37">
                Creates a new uniform integer distribution using the given lower and
                  upper bounds (both inclusive).                
                <param>
                    rng Random number generator.                    
                </param>
                <param>
                    lower Lower bound (inclusive) of this distribution.                    
                </param>
                <param>
                    upper Upper bound (inclusive) of this distribution.                    
                </param>
                <throws>
                    NumberIsTooLargeException if {@code lower >= upper}.                    
                </throws>
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="UniformIntegerDistribution" type="constructor" line="46">
                <params>
                    <param name="rng" type="RandomGenerator"/>
                    <param name="lower" type="int"/>
                    <param name="upper" type="int"/>
                </params>
                <scope line="48"/>
            </method>
            <javadoc line="54">
                {@inheritDoc}                
            </javadoc>
            <method name="probability" type="double" line="57">
                <params>
                    <param name="x" type="int"/>
                </params>
                <scope line="58"/>
            </method>
            <javadoc line="63">
                {@inheritDoc}                
            </javadoc>
            <method name="cumulativeProbability" type="double" line="66">
                <params>
                    <param name="x" type="int"/>
                </params>
                <scope line="67"/>
                <scope line="70"/>
            </method>
            <javadoc line="75">
                {@inheritDoc}For lower bound {@code lower} and upper bound {@code upper}, the mean is{@code 0.5  (lower + upper)}.                
            </javadoc>
            <method name="getNumericalMean" type="double" line="78"/>
            <javadoc line="81">
                {@inheritDoc}For lower bound {@code lower} and upper bound {@code upper}, and{@code n = upper - lower + 1}, the variance is {@code (n^2 - 1) / 12}.                
            </javadoc>
            <method name="getNumericalVariance" type="double" line="84">
                <declaration name="n" type="double" line="85"/>
            </method>
            <javadoc line="88">
                {@inheritDoc}The lower bound of the support is equal to the lower bound parameter
                  of the distribution.                
                <return>
                    lower bound of the support                    
                </return>
            </javadoc>
            <method name="getSupportLowerBound" type="int" line="93"/>
            <javadoc line="96">
                {@inheritDoc}The upper bound of the support is equal to the upper bound parameter
                  of the distribution.                
                <return>
                    upper bound of the support                    
                </return>
            </javadoc>
            <method name="getSupportUpperBound" type="int" line="101"/>
            <javadoc line="104">
                {@inheritDoc}The support of this distribution is connected.                
                <return>
                    {@code true}                    
                </return>
            </javadoc>
            <method name="isSupportConnected" type="boolean" line="108"/>
            <javadoc line="111">
                {@inheritDoc}                
            </javadoc>
            <method name="sample" type="int" line="114">
                <declaration name="r" type="double" line="115"/>
                <declaration name="scaled" type="double" line="116"/>
            </method>
        </class>
    </source>