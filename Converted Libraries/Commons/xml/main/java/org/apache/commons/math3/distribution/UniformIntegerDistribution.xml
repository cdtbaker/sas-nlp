<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="org.apache.commons.math3.exception.NumberIsTooLargeException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.random.Well19937c"/>
        <class name="UniformIntegerDistribution" line="25">
            <extends class="AbstractIntegerDistribution"/>
            <javadoc line="25">
                Implementation of the uniform integer distribution.                
                <see>
                    &lt;a href=&quot;http://en.wikipedia.org/wiki/Uniform_distribution_(discrete)&quot;
                      &gt;Uniform distribution (discrete), at Wikipedia&lt;/a&gt;                    
                </see>
                <version>
                    $Id: UniformIntegerDistribution.java 1510924 2013-08-06 12:22:47Z erans $                    
                </version>
                <since>
                    3.0                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="35"/>
            <javadoc line="35">
                Serializable version identifier.                
            </javadoc>
            <declaration name="lower" type="int" line="37"/>
            <javadoc line="37">
                Lower bound (inclusive) of this distribution.                
            </javadoc>
            <declaration name="upper" type="int" line="39"/>
            <javadoc line="39">
                Upper bound (inclusive) of this distribution.                
            </javadoc>
            <javadoc line="42">
                Creates a new uniform integer distribution using the given lower and
                  upper bounds (both inclusive).                
                <param>
                    lower Lower bound (inclusive) of this distribution.                    
                </param>
                <param>
                    upper Upper bound (inclusive) of this distribution.                    
                </param>
                <throws>
                    NumberIsTooLargeException if {@code lower &gt;= upper}.                    
                </throws>
            </javadoc>
            <method name="UniformIntegerDistribution" type="constructor" line="51">
                <params>
                    <param name="lower" type="int"/>
                    <param name="upper" type="int"/>
                </params>
            </method>
            <javadoc line="55">
                Creates a new uniform integer distribution using the given lower and
                  upper bounds (both inclusive).                
                <param>
                    rng Random number generator.                    
                </param>
                <param>
                    lower Lower bound (inclusive) of this distribution.                    
                </param>
                <param>
                    upper Upper bound (inclusive) of this distribution.                    
                </param>
                <throws>
                    NumberIsTooLargeException if {@code lower &gt;= upper}.                    
                </throws>
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="UniformIntegerDistribution" type="constructor" line="68">
                <params>
                    <param name="rng" type="RandomGenerator"/>
                    <param name="lower" type="int"/>
                    <param name="upper" type="int"/>
                </params>
                <scope line="71"/>
            </method>
            <javadoc line="80">
                {@inheritDoc}                
            </javadoc>
            <method name="probability" type="double" line="81">
                <params>
                    <param name="x" type="int"/>
                </params>
                <scope line="82"/>
            </method>
            <javadoc line="88">
                {@inheritDoc}                
            </javadoc>
            <method name="cumulativeProbability" type="double" line="89">
                <params>
                    <param name="x" type="int"/>
                </params>
                <scope line="90"/>
                <scope line="93"/>
            </method>
            <javadoc line="99">
                {@inheritDoc}For lower bound {@code lower} and upper bound {@code upper}, the mean is{@code 0.5  (lower + upper)}.                
            </javadoc>
            <method name="getNumericalMean" type="double" line="105"/>
            <javadoc line="109">
                {@inheritDoc}For lower bound {@code lower} and upper bound {@code upper}, and{@code n = upper - lower + 1}, the variance is {@code (n^2 - 1) / 12}.                
            </javadoc>
            <method name="getNumericalVariance" type="double" line="115">
                <declaration name="n" type="double" line="116"/>
            </method>
            <javadoc line="120">
                {@inheritDoc}The lower bound of the support is equal to the lower bound parameter
                  of the distribution.                
                <return>
                    lower bound of the support                    
                </return>
            </javadoc>
            <method name="getSupportLowerBound" type="int" line="128"/>
            <javadoc line="132">
                {@inheritDoc}The upper bound of the support is equal to the upper bound parameter
                  of the distribution.                
                <return>
                    upper bound of the support                    
                </return>
            </javadoc>
            <method name="getSupportUpperBound" type="int" line="140"/>
            <javadoc line="144">
                {@inheritDoc}The support of this distribution is connected.                
                <return>
                    {@code true}                    
                </return>
            </javadoc>
            <method name="isSupportConnected" type="boolean" line="151"/>
            <javadoc line="155">
                {@inheritDoc}                
            </javadoc>
            <method name="sample" type="int" line="157">
                <comment line="161">
                    The range is too wide to fit in a positive int (larger
                     than 2^31); as it covers more than half the integer range,
                     we use a simple rejection method.                    
                </comment>
                <comment line="172">
                    We can shift the range and directly generate a positive int.                    
                </comment>
                <declaration name="max" type="int" line="158"/>
                <scope line="159">
                    <scope line="163">
                        <declaration name="r" type="int" line="164"/>
                        <scope line="166"/>
                    </scope>
                </scope>
                <scope line="170"/>
            </method>
        </class>
    </source>