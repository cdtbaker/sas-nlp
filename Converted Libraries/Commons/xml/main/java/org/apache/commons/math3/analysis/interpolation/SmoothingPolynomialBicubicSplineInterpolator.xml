<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.interpolation">
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.NoDataException"/>
        <import package="org.apache.commons.math3.exception.NonMonotonicSequenceException"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.util.MathArrays"/>
        <import package="org.apache.commons.math3.util.Precision"/>
        <import package="org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer"/>
        <import package="org.apache.commons.math3.fitting.PolynomialFitter"/>
        <import package="org.apache.commons.math3.analysis.polynomials.PolynomialFunction"/>
        <import package="org.apache.commons.math3.optim.SimpleVectorValueChecker"/>
        <class name="SmoothingPolynomialBicubicSplineInterpolator" line="13">
            <extends class="BicubicSplineInterpolator"/>
            <javadoc line="13">
                Generates a bicubic interpolation function.
                  Prior to generating the interpolating function, the input is smoothed using
                  polynomial fitting.                
                <version>
                    $Id: SmoothingPolynomialBicubicSplineInterpolator.java 1455194 2013-03-11 15:45:54Z luc $                    
                </version>
                <since>
                    2.2                    
                </since>
            </javadoc>
            <declaration name="xFitter" type="PolynomialFitter" line="21"/>
            <javadoc line="21">
                Fitter for x.                
            </javadoc>
            <declaration name="xDegree" type="int" line="25"/>
            <javadoc line="25">
                Degree of the fitting polynomial.                
            </javadoc>
            <declaration name="yFitter" type="PolynomialFitter" line="29"/>
            <javadoc line="29">
                Fitter for y.                
            </javadoc>
            <declaration name="yDegree" type="int" line="33"/>
            <javadoc line="33">
                Degree of the fitting polynomial.                
            </javadoc>
            <javadoc line="37">
                Default constructor. The degree of the fitting polynomials is set to 3.                
            </javadoc>
            <method name="SmoothingPolynomialBicubicSplineInterpolator" type="constructor" line="40"/>
            <javadoc line="43">
                @param degree Degree of the polynomial fitting functions.                
                <exception>
                    NotPositiveException if degree is not positive                    
                </exception>
            </javadoc>
            <method name="SmoothingPolynomialBicubicSplineInterpolator" type="constructor" line="47">
                <params>
                    <param name="degree" type="int"/>
                </params>
            </method>
            <javadoc line="50">
                @param xDegree Degree of the polynomial fitting functions along the
                  x-dimension.                
                <param>
                    yDegree Degree of the polynomial fitting functions along the
                      y-dimension.                    
                </param>
                <exception>
                    NotPositiveException if degrees are not positive                    
                </exception>
            </javadoc>
            <method name="SmoothingPolynomialBicubicSplineInterpolator" type="constructor" line="57">
                <params>
                    <param name="xDegree" type="int"/>
                    <param name="yDegree" type="int"/>
                </params>
                <scope line="58"/>
                <scope line="61"/>
                <declaration name="safeFactor" type="double" line="66"/>
                <declaration name="checker" type="SimpleVectorValueChecker" line="67"/>
            </method>
            <javadoc line="71">
                {@inheritDoc}                
            </javadoc>
            <method name="interpolate" type="BicubicSplineInterpolatingFunction" line="74">
                <params>
                    <param name="xval" type="double[]"/>
                    <param name="yval" type="double[]"/>
                    <param name="fval" type="double[][]"/>
                </params>
                <scope line="75"/>
                <scope line="78"/>
                <declaration name="xLen" type="int" line="81"/>
                <declaration name="yLen" type="int" line="82"/>
                <scope line="83">
                    <scope line="84"/>
                </scope>
                <declaration name="yPolyX" type="PolynomialFunction[]" line="90"/>
                <scope line="91">
                    <scope line="93"/>
                </scope>
                <declaration name="fval_1" type="double[][]" line="98"/>
                <scope line="99">
                    <declaration name="f" type="PolynomialFunction" line="100"/>
                    <scope line="101"/>
                </scope>
                <declaration name="xPolyY" type="PolynomialFunction[]" line="105"/>
                <scope line="106">
                    <scope line="108"/>
                </scope>
                <declaration name="fval_2" type="double[][]" line="113"/>
                <scope line="114">
                    <declaration name="f" type="PolynomialFunction" line="115"/>
                    <scope line="116"/>
                </scope>
            </method>
        </class>
    </source>