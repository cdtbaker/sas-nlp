<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optimization.direct">
        <import package="org.apache.commons.math3.analysis.MultivariateFunction"/>
        <import package="org.apache.commons.math3.optimization.BaseMultivariateOptimizer"/>
        <import package="org.apache.commons.math3.optimization.BaseMultivariateSimpleBoundsOptimizer"/>
        <import package="org.apache.commons.math3.optimization.GoalType"/>
        <import package="org.apache.commons.math3.optimization.InitialGuess"/>
        <import package="org.apache.commons.math3.optimization.SimpleBounds"/>
        <import package="org.apache.commons.math3.optimization.PointValuePair"/>
        <import package="org.apache.commons.math3.optimization.ConvergenceChecker"/>
        <class name="BaseAbstractMultivariateSimpleBoundsOptimizer" line="29">
            <type_params>
                <type_param name="FUNC"/>
            </type_params>
            <extends class="BaseAbstractMultivariateOptimizer">
                <type_params>
                    <type_param name="FUNC"/>
                </type_params>
            </extends>
            <implements interface="BaseMultivariateOptimizer">
                <type_params>
                    <type_param name="FUNC"/>
                </type_params>
            </implements>
            <implements interface="BaseMultivariateSimpleBoundsOptimizer">
                <type_params>
                    <type_param name="FUNC"/>
                </type_params>
            </implements>
            <javadoc line="29">
                Base class for implementing optimizers for multivariate scalar functions,
                  subject to simple bounds: The valid range of the parameters is an interval.
                  The interval can possibly be infinite (in one or both directions).
                  This base class handles the boiler-plate methods associated to thresholds
                  settings, iterations and evaluations counting.                
                <param>
                    &lt;FUNC&gt;
                       Type of the objective function to be optimized.                    
                </param>
                <version>
                    $Id: BaseAbstractMultivariateSimpleBoundsOptimizer.java 1462503 2013-03-29 15:48:27Z luc $                    
                </version>
                <deprecated>
                    As of 3.1 (to be removed in 4.0).                    
                </deprecated>
                <since>
                    3.0                    
                </since>
                <deprecated>
                    As of 3.1 since the {@link BaseAbstractMultivariateOptimizerbase class} contains similar functionality.                    
                </deprecated>
            </javadoc>
            <javadoc line="49">
                Simple constructor with default settings.
                  The convergence checker is set to a{@link org.apache.commons.math3.optimization.SimpleValueChecker}.                
                <see>
                    BaseAbstractMultivariateOptimizer#BaseAbstractMultivariateOptimizer()                    
                </see>
                <deprecated>
                    See {@link org.apache.commons.math3.optimization.SimpleValueChecker#SimpleValueChecker()}                    
                </deprecated>
            </javadoc>
            <method name="BaseAbstractMultivariateSimpleBoundsOptimizer" type="constructor" line="58"/>
            <javadoc line="60">
                @param checker Convergence checker.                
            </javadoc>
            <method name="BaseAbstractMultivariateSimpleBoundsOptimizer" type="constructor" line="63">
                <params>
                    <param name="checker" type="ConvergenceChecker<PointValuePair>"/>
                </params>
            </method>
            <javadoc line="67">
                {@inheritDoc}                
            </javadoc>
            <method name="optimize" type="PointValuePair" line="70">
                <params>
                    <param name="maxEval" type="int"/>
                    <param name="f" type="FUNC"/>
                    <param name="goalType" type="GoalType"/>
                    <param name="startPoint" type="double[]"/>
                </params>
            </method>
            <javadoc line="75">
                {@inheritDoc}                
            </javadoc>
            <method name="optimize" type="PointValuePair" line="78">
                <params>
                    <param name="maxEval" type="int"/>
                    <param name="f" type="FUNC"/>
                    <param name="goalType" type="GoalType"/>
                    <param name="startPoint" type="double[]"/>
                    <param name="lower" type="double[]"/>
                    <param name="upper" type="double[]"/>
                </params>
            </method>
        </class>
    </source>