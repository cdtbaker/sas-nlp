<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.fitting.leastsquares">
        <import package="org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem.Evaluation"/>
        <import package="org.apache.commons.math3.linear.ArrayRealVector"/>
        <import package="org.apache.commons.math3.linear.DecompositionSolver"/>
        <import package="org.apache.commons.math3.linear.QRDecomposition"/>
        <import package="org.apache.commons.math3.linear.RealMatrix"/>
        <import package="org.apache.commons.math3.linear.RealVector"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <class name="AbstractEvaluation" line="27">
            <implements interface="Evaluation"/>
            <javadoc line="27">
                An implementation of {@link Evaluation} that is designed for extension. All of the
                  methods implemented here use the methods that are left unimplemented.
                  &lt;p/&gt;
                  TODO cache results?                
                <version>
                    $Id: AbstractEvaluation.java 1571307 2014-02-24 14:58:07Z luc $                    
                </version>
                <since>
                    3.3                    
                </since>
            </javadoc>
            <declaration name="observationSize" type="int" line="38"/>
            <javadoc line="38">
                number of observations                
            </javadoc>
            <javadoc line="41">
                Constructor.                
                <param>
                    observationSize the number of observation. Needed for {@link #getRMS()}.                    
                </param>
            </javadoc>
            <method name="AbstractEvaluation" type="constructor" line="47">
                <params>
                    <param name="observationSize" type="int"/>
                </params>
            </method>
            <javadoc line="51">
                {@inheritDoc}                
            </javadoc>
            <method name="getCovariances" type="RealMatrix" line="52">
                <params>
                    <param name="threshold" type="double"/>
                </params>
                <comment line="54">
                    Set up the Jacobian.                    
                </comment>
                <comment line="57">
                    Compute transpose(J)J.                    
                </comment>
                <comment line="60">
                    Compute the covariances matrix.                    
                </comment>
                <declaration name="j" type="RealMatrix" line="54"/>
                <declaration name="jTj" type="RealMatrix" line="57"/>
                <declaration name="solver" type="DecompositionSolver" line="60"/>
            </method>
            <javadoc line="65">
                {@inheritDoc}                
            </javadoc>
            <method name="getSigma" type="RealVector" line="66">
                <params>
                    <param name="covarianceSingularityThreshold" type="double"/>
                </params>
                <declaration name="cov" type="RealMatrix" line="67"/>
                <declaration name="nC" type="int" line="68"/>
                <declaration name="sig" type="RealVector" line="69"/>
                <scope line="70"/>
            </method>
            <javadoc line="76">
                {@inheritDoc}                
            </javadoc>
            <method name="getRMS" type="double" line="77">
                <declaration name="cost" type="double" line="78"/>
            </method>
            <javadoc line="82">
                {@inheritDoc}                
            </javadoc>
            <method name="getCost" type="double" line="83">
                <declaration name="r" type="ArrayRealVector" line="84"/>
            </method>
        </class>
    </source>