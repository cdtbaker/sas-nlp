<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.inference">
        <import package="org.apache.commons.math3.distribution.BinomialDistribution"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.exception.MathInternalError"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <class name="BinomialTest" line="27">
            <javadoc line="27">
                Implements binomial test statistics.
                  &lt;p&gt;
                  Exact test for the statistical significance of deviations from a
                  theoretically expected distribution of observations into two categories.                
                <see>
                    &lt;a href=&quot;http://en.wikipedia.org/wiki/Binomial_test&quot;&gt;Binomial test (Wikipedia)&lt;/a&gt;                    
                </see>
                <version>
                    $Id: BinomialTest.java 1532638 2013-10-16 04:29:31Z psteitz $                    
                </version>
                <since>
                    3.3                    
                </since>
            </javadoc>
            <javadoc line="39">
                Returns whether the null hypothesis can be rejected with the given confidence level.
                  &lt;p&gt;
                  &lt;strong&gt;Preconditions&lt;/strong&gt;:
                  &lt;ul&gt;
                  &lt;li&gt;Number of trials must be &amp;ge; 0.&lt;/li&gt;
                  &lt;li&gt;Number of successes must be &amp;ge; 0.&lt;/li&gt;
                  &lt;li&gt;Number of successes must be &amp;le; number of trials.&lt;/li&gt;
                  &lt;li&gt;Probability must be &amp;ge; 0 and &amp;le; 1.&lt;/li&gt;
                  &lt;/ul&gt;                
                <param>
                    numberOfTrials number of trials performed                    
                </param>
                <param>
                    numberOfSuccesses number of successes observed                    
                </param>
                <param>
                    probability assumed probability of a single trial under the null hypothesis                    
                </param>
                <param>
                    alternativeHypothesis type of hypothesis being evaluated (one- or two-sided)                    
                </param>
                <param>
                    alpha significance level of the test                    
                </param>
                <return>
                    true if the null hypothesis can be rejected with confidence {@code 1 - alpha}                    
                </return>
                <throws>
                    NotPositiveException if {@code numberOfTrials} or {@code numberOfSuccesses} is negative                    
                </throws>
                <throws>
                    OutOfRangeException if {@code probability} is not between 0 and 1                    
                </throws>
                <throws>
                    MathIllegalArgumentException if {@code numberOfTrials} &amp;lt; {@code numberOfSuccesses} or
                      if {@code alternateHypothesis} is null.                    
                </throws>
                <see>
                    AlternativeHypothesis                    
                </see>
            </javadoc>
            <method name="binomialTest" type="boolean" line="63">
                <params>
                    <param name="numberOfTrials" type="int"/>
                    <param name="numberOfSuccesses" type="int"/>
                    <param name="probability" type="double"/>
                    <param name="alternativeHypothesis" type="AlternativeHypothesis"/>
                    <param name="alpha" type="double"/>
                </params>
                <declaration name="pValue" type="double" line="64"/>
            </method>
            <javadoc line="68">
                Returns the &lt;i&gt;observed significance level&lt;/i&gt;, or
                  &lt;a href=&quot;http://www.cas.lancs.ac.uk/glossary_v1.1/hyptest.html#pvalue&quot;&gt;p-value&lt;/a&gt;,
                  associated with a &lt;a href=&quot;http://en.wikipedia.org/wiki/Binomial_test&quot;&gt; Binomial test&lt;/a&gt;.
                  &lt;p&gt;
                  The number returned is the smallest significance level at which one can reject the null hypothesis.
                  The form of the hypothesis depends on {@code alternativeHypothesis}.&lt;/p&gt;
                  &lt;p&gt;
                  The p-Value represents the likelihood of getting a result at least as extreme as the sample,
                  given the provided {@code probability} of success on a single trial. For single-sided tests,
                  this value can be directly derived from the Binomial distribution. For the two-sided test,
                  the implementation works as follows: we start by looking at the most extreme cases
                  (0 success and n success where n is the number of trials from the sample) and determine their likelihood.
                  The lower value is added to the p-Value (if both values are equal, both are added). Then we continue with
                  the next extreme value, until we added the value for the actual observed sample.&lt;/p&gt;
                  &lt;p&gt;
                  &lt;strong&gt;Preconditions&lt;/strong&gt;:
                  &lt;ul&gt;
                  &lt;li&gt;Number of trials must be &amp;ge; 0.&lt;/li&gt;
                  &lt;li&gt;Number of successes must be &amp;ge; 0.&lt;/li&gt;
                  &lt;li&gt;Number of successes must be &amp;le; number of trials.&lt;/li&gt;
                  &lt;li&gt;Probability must be &amp;ge; 0 and &amp;le; 1.&lt;/li&gt;
                  &lt;/ul&gt;&lt;/p&gt;                
                <param>
                    numberOfTrials number of trials performed                    
                </param>
                <param>
                    numberOfSuccesses number of successes observed                    
                </param>
                <param>
                    probability assumed probability of a single trial under the null hypothesis                    
                </param>
                <param>
                    alternativeHypothesis type of hypothesis being evaluated (one- or two-sided)                    
                </param>
                <return>
                    p-value                    
                </return>
                <throws>
                    NotPositiveException if {@code numberOfTrials} or {@code numberOfSuccesses} is negative                    
                </throws>
                <throws>
                    OutOfRangeException if {@code probability} is not between 0 and 1                    
                </throws>
                <throws>
                    MathIllegalArgumentException if {@code numberOfTrials} &amp;lt; {@code numberOfSuccesses} or
                      if {@code alternateHypothesis} is null.                    
                </throws>
                <see>
                    AlternativeHypothesis                    
                </see>
            </javadoc>
            <method name="binomialTest" type="double" line="104">
                <params>
                    <param name="numberOfTrials" type="int"/>
                    <param name="numberOfSuccesses" type="int"/>
                    <param name="probability" type="double"/>
                    <param name="alternativeHypothesis" type="AlternativeHypothesis"/>
                </params>
                <scope line="105"/>
                <scope line="108"/>
                <scope line="111"/>
                <scope line="114"/>
                <scope line="119"/>
                <declaration name="distribution" type="BinomialDistribution" line="123"/>
                <declaration name="criticalValueLow" type="int" line="130"/>
                <declaration name="criticalValueHigh" type="int" line="131"/>
                <declaration name="pTotal" type="double" line="132"/>
                <scope line="134">
                    <declaration name="pLow" type="double" line="135"/>
                    <declaration name="pHigh" type="double" line="136"/>
                    <scope line="138"/>
                    <scope line="142"/>
                    <scope line="145"/>
                    <scope line="150"/>
                </scope>
            </method>
        </class>
    </source>