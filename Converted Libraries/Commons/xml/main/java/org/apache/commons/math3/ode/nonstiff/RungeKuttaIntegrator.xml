<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.ode.nonstiff">
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MaxCountExceededException"/>
        <import package="org.apache.commons.math3.exception.NoBracketingException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.ode.AbstractIntegrator"/>
        <import package="org.apache.commons.math3.ode.ExpandableStatefulODE"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <class name="RungeKuttaIntegrator" line="9">
            <extends class="AbstractIntegrator"/>
            <javadoc line="9">
                This class implements the common part of all fixed step Runge-Kutta
                  integrators for Ordinary Differential Equations.
                  &lt;p&gt;These methods are explicit Runge-Kutta methods, their Butcher
                  arrays are as follows :
                  &lt;pre&gt;
                  0  |
                  c2  | a21
                  c3  | a31  a32
                  ... |        ...
                  cs  | as1  as2  ...  ass-1
                  |--------------------------
                  |  b1   b2  ...   bs-1  bs
                  &lt;/pre&gt;
                  &lt;/p&gt;                
                <see>
                    EulerIntegrator                    
                </see>
                <see>
                    ClassicalRungeKuttaIntegrator                    
                </see>
                <see>
                    GillIntegrator                    
                </see>
                <see>
                    MidpointIntegrator                    
                </see>
                <version>
                    $Id: RungeKuttaIntegrator.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <declaration name="c" type="double[]" line="32"/>
            <javadoc line="32">
                Time steps from Butcher array (without the first zero).                
            </javadoc>
            <declaration name="a" type="double[][]" line="36"/>
            <javadoc line="36">
                Internal weights from Butcher array (without the first empty row).                
            </javadoc>
            <declaration name="b" type="double[]" line="40"/>
            <javadoc line="40">
                External weights for the high order method from Butcher array.                
            </javadoc>
            <declaration name="prototype" type="RungeKuttaStepInterpolator" line="44"/>
            <javadoc line="44">
                Prototype of the step interpolator.                
            </javadoc>
            <declaration name="step" type="double" line="48"/>
            <javadoc line="48">
                Integration step.                
            </javadoc>
            <javadoc line="52">
                Simple constructor.
                  Build a Runge-Kutta integrator with the given
                  step. The default step handler does nothing.                
                <param>
                    name name of the method                    
                </param>
                <param>
                    c time steps from Butcher array (without the first zero)                    
                </param>
                <param>
                    a internal weights from Butcher array (without the first empty row)                    
                </param>
                <param>
                    b propagation weights for the high order method from Butcher array                    
                </param>
                <param>
                    prototype prototype of the step interpolator to use                    
                </param>
                <param>
                    step integration step                    
                </param>
            </javadoc>
            <method name="RungeKuttaIntegrator" type="constructor" line="63">
                <params>
                    <param name="name" type="String"/>
                    <param name="c" type="double[]"/>
                    <param name="a" type="double[][]"/>
                    <param name="b" type="double[]"/>
                    <param name="prototype" type="RungeKuttaStepInterpolator"/>
                    <param name="step" type="double"/>
                </params>
            </method>
            <javadoc line="71">
                {@inheritDoc}                
            </javadoc>
            <method name="integrate" type="void" line="74">
                <params>
                    <param name="equations" type="ExpandableStatefulODE"/>
                    <param name="t" type="double"/>
                </params>
                <declaration name="forward" type="boolean" line="77"/>
                <declaration name="y0" type="double[]" line="78"/>
                <declaration name="y" type="double[]" line="79"/>
                <declaration name="stages" type="int" line="80"/>
                <declaration name="yDotK" type="double[][]" line="81"/>
                <scope line="82"/>
                <declaration name="yTmp" type="double[]" line="85"/>
                <declaration name="yDotTmp" type="double[]" line="86"/>
                <declaration name="interpolator" type="RungeKuttaStepInterpolator" line="87"/>
                <scope line="94">
                    <scope line="97">
                        <scope line="98">
                            <declaration name="sum" type="double" line="99"/>
                            <scope line="100"/>
                        </scope>
                    </scope>
                    <scope line="107">
                        <declaration name="sum" type="double" line="108"/>
                        <scope line="109"/>
                    </scope>
                    <scope line="118">
                        <declaration name="nextT" type="double" line="120"/>
                        <declaration name="nextIsLast" type="boolean" line="121"/>
                        <scope line="122"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>