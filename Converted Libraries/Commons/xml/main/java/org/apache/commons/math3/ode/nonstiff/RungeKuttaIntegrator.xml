<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.ode.nonstiff">
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MaxCountExceededException"/>
        <import package="org.apache.commons.math3.exception.NoBracketingException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.ode.AbstractIntegrator"/>
        <import package="org.apache.commons.math3.ode.ExpandableStatefulODE"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <class name="RungeKuttaIntegrator" line="29">
            <extends class="AbstractIntegrator"/>
            <javadoc line="29">
                This class implements the common part of all fixed step Runge-Kutta
                  integrators for Ordinary Differential Equations.
                  &lt;p&gt;These methods are explicit Runge-Kutta methods, their Butcher
                  arrays are as follows :
                  &lt;pre&gt;
                  0  |
                  c2  | a21
                  c3  | a31  a32
                  ... |        ...
                  cs  | as1  as2  ...  ass-1
                  |--------------------------
                  |  b1   b2  ...   bs-1  bs
                  &lt;/pre&gt;
                  &lt;/p&gt;                
                <see>
                    EulerIntegrator                    
                </see>
                <see>
                    ClassicalRungeKuttaIntegrator                    
                </see>
                <see>
                    GillIntegrator                    
                </see>
                <see>
                    MidpointIntegrator                    
                </see>
                <version>
                    $Id: RungeKuttaIntegrator.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <declaration name="c" type="double[]" line="56"/>
            <javadoc line="56">
                Time steps from Butcher array (without the first zero).                
            </javadoc>
            <declaration name="a" type="double[][]" line="59"/>
            <javadoc line="59">
                Internal weights from Butcher array (without the first empty row).                
            </javadoc>
            <declaration name="b" type="double[]" line="62"/>
            <javadoc line="62">
                External weights for the high order method from Butcher array.                
            </javadoc>
            <declaration name="prototype" type="RungeKuttaStepInterpolator" line="65"/>
            <javadoc line="65">
                Prototype of the step interpolator.                
            </javadoc>
            <declaration name="step" type="double" line="68"/>
            <javadoc line="68">
                Integration step.                
            </javadoc>
            <javadoc line="71">
                Simple constructor.
                  Build a Runge-Kutta integrator with the given
                  step. The default step handler does nothing.                
                <param>
                    name name of the method                    
                </param>
                <param>
                    c time steps from Butcher array (without the first zero)                    
                </param>
                <param>
                    a internal weights from Butcher array (without the first empty row)                    
                </param>
                <param>
                    b propagation weights for the high order method from Butcher array                    
                </param>
                <param>
                    prototype prototype of the step interpolator to use                    
                </param>
                <param>
                    step integration step                    
                </param>
            </javadoc>
            <method name="RungeKuttaIntegrator" type="constructor" line="84">
                <params>
                    <param name="name" type="String"/>
                    <param name="c" type="double[]"/>
                    <param name="a" type="double[][]"/>
                    <param name="b" type="double[]"/>
                    <param name="prototype" type="RungeKuttaStepInterpolator"/>
                    <param name="step" type="double"/>
                </params>
            </method>
            <javadoc line="93">
                {@inheritDoc}                
            </javadoc>
            <method name="integrate" type="void" line="97">
                <params>
                    <param name="equations" type="ExpandableStatefulODE"/>
                    <param name="t" type="double"/>
                </params>
                <comment line="103">
                    create some internal working arrays                    
                </comment>
                <comment line="114">
                    set up an interpolator sharing the integrator arrays                    
                </comment>
                <comment line="120">
                    set up integration control objects                    
                </comment>
                <comment line="125">
                    main integration loop                    
                </comment>
                <comment line="131">
                    first stage                    
                </comment>
                <comment line="134">
                    next stages                    
                </comment>
                <comment line="149">
                    estimate the state at the end of the step                    
                </comment>
                <comment line="158">
                    discrete events handling                    
                </comment>
                <comment line="166">
                    prepare next step                    
                </comment>
                <comment line="169">
                    stepsize control for next step                    
                </comment>
                <comment line="179">
                    dispatch results                    
                </comment>
                <declaration name="forward" type="boolean" line="101"/>
                <declaration name="y0" type="double[]" line="104"/>
                <declaration name="y" type="double[]" line="105"/>
                <declaration name="stages" type="int" line="106"/>
                <declaration name="yDotK" type="double[][]" line="107"/>
                <scope line="108"/>
                <declaration name="yTmp" type="double[]" line="111"/>
                <declaration name="yDotTmp" type="double[]" line="112"/>
                <declaration name="interpolator" type="RungeKuttaStepInterpolator" line="115"/>
                <scope line="127">
                    <scope line="135">
                        <scope line="137">
                            <declaration name="sum" type="double" line="138"/>
                            <scope line="139"/>
                        </scope>
                    </scope>
                    <scope line="150">
                        <declaration name="sum" type="double" line="151"/>
                        <scope line="152"/>
                    </scope>
                    <scope line="164">
                        <declaration name="nextT" type="double" line="170"/>
                        <declaration name="nextIsLast" type="boolean" line="171"/>
                        <scope line="172"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>