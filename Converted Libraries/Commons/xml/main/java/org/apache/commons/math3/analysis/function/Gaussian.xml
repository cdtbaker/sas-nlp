<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.function">
        <import package="java.util.Arrays"/>
        <import package="org.apache.commons.math3.analysis.FunctionUtils"/>
        <import package="org.apache.commons.math3.analysis.UnivariateFunction"/>
        <import package="org.apache.commons.math3.analysis.DifferentiableUnivariateFunction"/>
        <import package="org.apache.commons.math3.analysis.ParametricUnivariateFunction"/>
        <import package="org.apache.commons.math3.analysis.differentiation.DerivativeStructure"/>
        <import package="org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.Precision"/>
        <class name="Gaussian" line="14">
            <implements interface="UnivariateDifferentiableFunction"/>
            <implements interface="DifferentiableUnivariateFunction"/>
            <javadoc line="14">
                &lt;a href=&quot;http://en.wikipedia.org/wiki/Gaussian_function&quot;&gt;
                  Gaussian&lt;/a&gt; function.                
                <since>
                    3.0                    
                </since>
                <version>
                    $Id: Gaussian.java 1455194 2013-03-11 15:45:54Z luc $                    
                </version>
            </javadoc>
            <declaration name="mean" type="double" line="21"/>
            <javadoc line="21">
                Mean.                
            </javadoc>
            <declaration name="is" type="double" line="25"/>
            <javadoc line="25">
                Inverse of the standard deviation.                
            </javadoc>
            <declaration name="i2s2" type="double" line="29"/>
            <javadoc line="29">
                Inverse of twice the square of the standard deviation.                
            </javadoc>
            <declaration name="norm" type="double" line="33"/>
            <javadoc line="33">
                Normalization factor.                
            </javadoc>
            <javadoc line="37">
                Gaussian with given normalization factor, mean and standard deviation.                
                <param>
                    norm Normalization factor.                    
                </param>
                <param>
                    mean Mean.                    
                </param>
                <param>
                    sigma Standard deviation.                    
                </param>
                <throws>
                    NotStrictlyPositiveException if {@code sigma <= 0}.                    
                </throws>
            </javadoc>
            <method name="Gaussian" type="constructor" line="44">
                <params>
                    <param name="norm" type="double"/>
                    <param name="mean" type="double"/>
                    <param name="sigma" type="double"/>
                </params>
                <scope line="45"/>
            </method>
            <javadoc line="53">
                Normalized gaussian with given mean and standard deviation.                
                <param>
                    mean Mean.                    
                </param>
                <param>
                    sigma Standard deviation.                    
                </param>
                <throws>
                    NotStrictlyPositiveException if {@code sigma <= 0}.                    
                </throws>
            </javadoc>
            <method name="Gaussian" type="constructor" line="59">
                <params>
                    <param name="mean" type="double"/>
                    <param name="sigma" type="double"/>
                </params>
            </method>
            <javadoc line="62">
                Normalized gaussian with zero mean and unit standard deviation.                
            </javadoc>
            <method name="Gaussian" type="constructor" line="65"/>
            <javadoc line="68">
                {@inheritDoc}                
            </javadoc>
            <method name="value" type="double" line="71">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="74">
                {@inheritDoc}                
                <deprecated>
                    as of 3.1, replaced by {@link #value(DerivativeStructure)}                    
                </deprecated>
            </javadoc>
            <method name="derivative" type="UnivariateFunction" line="78"/>
            <class name="Parametric" line="81">
                <implements interface="ParametricUnivariateFunction"/>
                <javadoc line="81">
                    Parametric function where the input array contains the parameters of
                      the Gaussian, ordered as follows:
                      &lt;ul&gt;
                      &lt;li&gt;Norm&lt;/li&gt;
                      &lt;li&gt;Mean&lt;/li&gt;
                      &lt;li&gt;Standard deviation&lt;/li&gt;
                      &lt;/ul&gt;                    
                </javadoc>
                <javadoc line="91">
                    Computes the value of the Gaussian at {@code x}.                    
                    <param>
                        x Value for which the function must be computed.                        
                    </param>
                    <param>
                        param Values of norm, mean and standard deviation.                        
                    </param>
                    <return>
                        the value of the function.                        
                    </return>
                    <throws>
                        NullArgumentException if {@code param} is {@code null}.                        
                    </throws>
                    <throws>
                        DimensionMismatchException if the size of {@code param} is
                          not 3.                        
                    </throws>
                    <throws>
                        NotStrictlyPositiveException if {@code param[2]} is negative.                        
                    </throws>
                </javadoc>
                <method name="value" type="double" line="101">
                    <params>
                        <param name="x" type="double"/>
                        <param name="param" type="double"/>
                    </params>
                    <declaration name="diff" type="double" line="103"/>
                    <declaration name="i2s2" type="double" line="104"/>
                </method>
                <javadoc line="107">
                    Computes the value of the gradient at {@code x}.
                      The components of the gradient vector are the partial
                      derivatives of the function with respect to each of the
                      &lt;em&gt;parameters&lt;/em&gt; (norm, mean and standard deviation).                    
                    <param>
                        x Value at which the gradient must be computed.                        
                    </param>
                    <param>
                        param Values of norm, mean and standard deviation.                        
                    </param>
                    <return>
                        the gradient vector at {@code x}.                        
                    </return>
                    <throws>
                        NullArgumentException if {@code param} is {@code null}.                        
                    </throws>
                    <throws>
                        DimensionMismatchException if the size of {@code param} is
                          not 3.                        
                    </throws>
                    <throws>
                        NotStrictlyPositiveException if {@code param[2]} is negative.                        
                    </throws>
                </javadoc>
                <method name="gradient" type="double[]" line="120">
                    <params>
                        <param name="x" type="double"/>
                        <param name="param" type="double"/>
                    </params>
                    <declaration name="norm" type="double" line="122"/>
                    <declaration name="diff" type="double" line="123"/>
                    <declaration name="sigma" type="double" line="124"/>
                    <declaration name="i2s2" type="double" line="125"/>
                    <declaration name="n" type="double" line="126"/>
                    <declaration name="m" type="double" line="127"/>
                    <declaration name="s" type="double" line="128"/>
                </method>
                <javadoc line="131">
                    Validates parameters to ensure they are appropriate for the evaluation of
                      the {@link #value(double,double[])} and {@link #gradient(double,double[])}methods.                    
                    <param>
                        param Values of norm, mean and standard deviation.                        
                    </param>
                    <throws>
                        NullArgumentException if {@code param} is {@code null}.                        
                    </throws>
                    <throws>
                        DimensionMismatchException if the size of {@code param} is
                          not 3.                        
                    </throws>
                    <throws>
                        NotStrictlyPositiveException if {@code param[2]} is negative.                        
                    </throws>
                </javadoc>
                <method name="validateParameters" type="void" line="140">
                    <params>
                        <param name="param" type="double[]"/>
                    </params>
                    <scope line="141"/>
                    <scope line="144"/>
                    <scope line="147"/>
                </method>
            </class>
            <javadoc line="152">
                @param xMinusMean {@code x - mean}.                
                <param>
                    norm Normalization factor.                    
                </param>
                <param>
                    i2s2 Inverse of twice the square of the standard deviation.                    
                </param>
                <return>
                    the value of the Gaussian at {@code x}.                    
                </return>
            </javadoc>
            <method name="value" type="double" line="158">
                <params>
                    <param name="xMinusMean" type="double"/>
                    <param name="norm" type="double"/>
                    <param name="i2s2" type="double"/>
                </params>
            </method>
            <javadoc line="161">
                {@inheritDoc}                
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="value" type="DerivativeStructure" line="165">
                <params>
                    <param name="t" type="DerivativeStructure"/>
                </params>
                <declaration name="u" type="double" line="166"/>
                <declaration name="f" type="double[]" line="167"/>
                <declaration name="p" type="double[]" line="168"/>
                <declaration name="u2" type="double" line="170"/>
                <declaration name="coeff" type="double" line="171"/>
                <scope line="172"/>
                <scope line="175">
                    <scope line="177">
                        <declaration name="v" type="double" line="178"/>
                        <scope line="180">
                            <scope line="182"/>
                            <scope line="185"/>
                        </scope>
                        <scope line="189"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>