<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.random.Well19937c"/>
        <class name="ChiSquaredDistribution" line="4">
            <extends class="AbstractRealDistribution"/>
            <javadoc line="4">
                Implementation of the chi-squared distribution.                
                <see>
                    <a href="http://en.wikipedia.org/wiki/Chi-squared_distribution">Chi-squared distribution (Wikipedia)</a>                    
                </see>
                <see>
                    <a href="http://mathworld.wolfram.com/Chi-SquaredDistribution.html">Chi-squared Distribution (MathWorld)</a>                    
                </see>
                <version>
                    $Id: ChiSquaredDistribution.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
            </javadoc>
            <declaration name="DEFAULT_INVERSE_ABSOLUTE_ACCURACY" type="double" line="11"/>
            <javadoc line="11">
                Default inverse cumulative probability accuracy                
                <since>
                    2.1                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="16"/>
            <javadoc line="16">
                Serializable version identifier                
            </javadoc>
            <declaration name="gamma" type="GammaDistribution" line="20"/>
            <javadoc line="20">
                Internal Gamma distribution.                
            </javadoc>
            <declaration name="solverAbsoluteAccuracy" type="double" line="24"/>
            <javadoc line="24">
                Inverse cumulative probability accuracy                
            </javadoc>
            <javadoc line="28">
                Create a Chi-Squared distribution with the given degrees of freedom.                
                <param>
                    degreesOfFreedom Degrees of freedom.                    
                </param>
            </javadoc>
            <method name="ChiSquaredDistribution" type="constructor" line="32">
                <params>
                    <param name="degreesOfFreedom" type="double"/>
                </params>
            </method>
            <javadoc line="35">
                Create a Chi-Squared distribution with the given degrees of freedom and
                  inverse cumulative probability accuracy.                
                <param>
                    degreesOfFreedom Degrees of freedom.                    
                </param>
                <param>
                    inverseCumAccuracy the maximum absolute error in inverse
                      cumulative probability estimates (defaults to{@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).                    
                </param>
                <since>
                    2.1                    
                </since>
            </javadoc>
            <method name="ChiSquaredDistribution" type="constructor" line="43">
                <params>
                    <param name="degreesOfFreedom" type="double"/>
                    <param name="inverseCumAccuracy" type="double"/>
                </params>
            </method>
            <javadoc line="46">
                Create a Chi-Squared distribution with the given degrees of freedom and
                  inverse cumulative probability accuracy.                
                <param>
                    rng Random number generator.                    
                </param>
                <param>
                    degreesOfFreedom Degrees of freedom.                    
                </param>
                <param>
                    inverseCumAccuracy the maximum absolute error in inverse
                      cumulative probability estimates (defaults to{@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).                    
                </param>
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="ChiSquaredDistribution" type="constructor" line="55">
                <params>
                    <param name="rng" type="RandomGenerator"/>
                    <param name="degreesOfFreedom" type="double"/>
                    <param name="inverseCumAccuracy" type="double"/>
                </params>
            </method>
            <javadoc line="60">
                Access the number of degrees of freedom.                
                <return>
                    the degrees of freedom.                    
                </return>
            </javadoc>
            <method name="getDegreesOfFreedom" type="double" line="64"/>
            <javadoc line="67">
                {@inheritDoc}                
            </javadoc>
            <method name="density" type="double" line="70">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="73">
                {@inheritDoc}                
            </javadoc>
            <method name="cumulativeProbability" type="double" line="76">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="79">
                {@inheritDoc}                
            </javadoc>
            <method name="getSolverAbsoluteAccuracy" type="double" line="82"/>
            <javadoc line="85">
                {@inheritDoc}For {@code k} degrees of freedom, the mean is {@code k}.                
            </javadoc>
            <method name="getNumericalMean" type="double" line="88"/>
            <javadoc line="91">
                {@inheritDoc}                
                <return>
                    {@code 2  k}, where {@code k} is the number of degrees of freedom.                    
                </return>
            </javadoc>
            <method name="getNumericalVariance" type="double" line="95"/>
            <javadoc line="98">
                {@inheritDoc}The lower bound of the support is always 0 no matter the
                  degrees of freedom.                
                <return>
                    zero.                    
                </return>
            </javadoc>
            <method name="getSupportLowerBound" type="double" line="103"/>
            <javadoc line="106">
                {@inheritDoc}The upper bound of the support is always positive infinity no matter the
                  degrees of freedom.                
                <return>
                    {@code Double.POSITIVE_INFINITY}.                    
                </return>
            </javadoc>
            <method name="getSupportUpperBound" type="double" line="111"/>
            <javadoc line="114">
                {@inheritDoc}                
            </javadoc>
            <method name="isSupportLowerBoundInclusive" type="boolean" line="117"/>
            <javadoc line="120">
                {@inheritDoc}                
            </javadoc>
            <method name="isSupportUpperBoundInclusive" type="boolean" line="123"/>
            <javadoc line="126">
                {@inheritDoc}The support of this distribution is connected.                
                <return>
                    {@code true}                    
                </return>
            </javadoc>
            <method name="isSupportConnected" type="boolean" line="130"/>
        </class>
    </source>