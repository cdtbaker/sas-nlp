<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optim.linear">
        <import package="org.apache.commons.math3.optim.OptimizationData"/>
        <import package="org.apache.commons.math3.optim.PointValuePair"/>
        <class name="SolutionCallback" line="22">
            <implements interface="OptimizationData"/>
            <javadoc line="22">
                A constraint for a linear optimization problem indicating whether all
                  variables must be restricted to non-negative values.                
                <version>
                    $Id: SolutionCallback.java 1560541 2014-01-22 22:12:42Z tn $                    
                </version>
                <since>
                    3.3                    
                </since>
            </javadoc>
            <declaration name="tableau" type="SimplexTableau" line="30"/>
            <javadoc line="30">
                The SimplexTableau used by the SimplexSolver.                
            </javadoc>
            <javadoc line="33">
                Set the simplex tableau used during the optimization once a feasible
                  solution has been found.                
                <param>
                    tableau the simplex tableau containing a feasible solution                    
                </param>
            </javadoc>
            <method name="setTableau" type="void" line="39">
                <params>
                    <param name="tableau" type="SimplexTableau"/>
                </params>
            </method>
            <javadoc line="43">
                Retrieve the best solution found so far.
                  &lt;p&gt;
                  &lt;b&gt;Note:&lt;/b&gt; the returned solution may not be optimal, e.g. in case
                  the optimizer did reach the iteration limits.                
                <return>
                    the best solution found so far by the optimizer, or {@code null} if
                      no feasible solution could be found                    
                </return>
            </javadoc>
            <method name="getSolution" type="PointValuePair" line="52"/>
            <javadoc line="56">
                Returns if the found solution is optimal.                
                <return>
                    {@code true} if the solution is optimal, {@code false} otherwise                    
                </return>
            </javadoc>
            <method name="isSolutionOptimal" type="boolean" line="60"/>
        </class>
    </source>