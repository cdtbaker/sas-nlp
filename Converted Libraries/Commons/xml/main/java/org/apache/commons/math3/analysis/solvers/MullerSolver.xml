<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.solvers">
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooLargeException"/>
        <import package="org.apache.commons.math3.exception.NoBracketingException"/>
        <import package="org.apache.commons.math3.exception.TooManyEvaluationsException"/>
        <class name="MullerSolver" line="6">
            <extends class="AbstractUnivariateSolver"/>
            <javadoc line="6">
                This class implements the &lt;a href=&quot;http://mathworld.wolfram.com/MullersMethod.html&quot;&gt;
                  Muller&apos;s Method&lt;/a&gt; for root finding of real univariate functions. For
                  reference, see &lt;b&gt;Elementary Numerical Analysis&lt;/b&gt;, ISBN 0070124477,
                  chapter 3.
                  &lt;p&gt;
                  Muller&apos;s method applies to both real and complex functions, but here we
                  restrict ourselves to real functions.
                  This class differs from {@link MullerSolver} in the way it avoids complex
                  operations.&lt;/p&gt;
                  Muller&apos;s original method would have function evaluation at complex point.
                  Since our f(x) is real, we have to find ways to avoid that. Bracketing
                  condition is one way to go: by requiring bracketing in every iteration,
                  the newly computed approximation is guaranteed to be real.&lt;/p&gt;
                  &lt;p&gt;
                  Normally Muller&apos;s method converges quadratically in the vicinity of a
                  zero, however it may be very slow in regions far away from zeros. For
                  example, f(x) = exp(x) - 1, min = -50, max = 100. In such case we use
                  bisection as a safety backup if it performs very poorly.&lt;/p&gt;
                  &lt;p&gt;
                  The formulas here use divided differences directly.&lt;/p&gt;                
                <version>
                    $Id: MullerSolver.java 1391927 2012-09-30 00:03:30Z erans $                    
                </version>
                <since>
                    1.2                    
                </since>
                <see>
                    MullerSolver2                    
                </see>
            </javadoc>
            <declaration name="DEFAULT_ABSOLUTE_ACCURACY" type="double" line="32"/>
            <javadoc line="32">
                Default absolute accuracy.                
            </javadoc>
            <javadoc line="36">
                Construct a solver with default accuracy (1e-6).                
            </javadoc>
            <method name="MullerSolver" type="constructor" line="39"/>
            <javadoc line="42">
                Construct a solver.                
                <param>
                    absoluteAccuracy Absolute accuracy.                    
                </param>
            </javadoc>
            <method name="MullerSolver" type="constructor" line="46">
                <params>
                    <param name="absoluteAccuracy" type="double"/>
                </params>
            </method>
            <javadoc line="49">
                Construct a solver.                
                <param>
                    relativeAccuracy Relative accuracy.                    
                </param>
                <param>
                    absoluteAccuracy Absolute accuracy.                    
                </param>
            </javadoc>
            <method name="MullerSolver" type="constructor" line="54">
                <params>
                    <param name="relativeAccuracy" type="double"/>
                    <param name="absoluteAccuracy" type="double"/>
                </params>
            </method>
            <javadoc line="57">
                {@inheritDoc}                
            </javadoc>
            <method name="doSolve" type="double" line="60">
                <declaration name="min" type="double" line="61"/>
                <declaration name="max" type="double" line="62"/>
                <declaration name="initial" type="double" line="63"/>
                <declaration name="functionValueAccuracy" type="double" line="64"/>
                <declaration name="fMin" type="double" line="66"/>
                <scope line="67"/>
                <declaration name="fMax" type="double" line="70"/>
                <scope line="71"/>
                <declaration name="fInitial" type="double" line="74"/>
                <scope line="75"/>
                <scope line="79"/>
                <scope line="82"/>
            </method>
            <javadoc line="86">
                Find a real root in the given interval.                
                <param>
                    min Lower bound for the interval.                    
                </param>
                <param>
                    max Upper bound for the interval.                    
                </param>
                <param>
                    fMin function value at the lower bound.                    
                </param>
                <param>
                    fMax function value at the upper bound.                    
                </param>
                <return>
                    the point at which the function value is zero.                    
                </return>
                <throws>
                    TooManyEvaluationsException if the allowed number of calls to
                      the function to be solved has been exhausted.                    
                </throws>
            </javadoc>
            <method name="solve" type="double" line="96">
                <params>
                    <param name="min" type="double"/>
                    <param name="max" type="double"/>
                    <param name="fMin" type="double"/>
                    <param name="fMax" type="double"/>
                </params>
                <declaration name="relativeAccuracy" type="double" line="97"/>
                <declaration name="absoluteAccuracy" type="double" line="98"/>
                <declaration name="functionValueAccuracy" type="double" line="99"/>
                <declaration name="x0" type="double" line="100"/>
                <declaration name="y0" type="double" line="101"/>
                <declaration name="x2" type="double" line="102"/>
                <declaration name="y2" type="double" line="103"/>
                <declaration name="x1" type="double" line="104"/>
                <declaration name="y1" type="double" line="105"/>
                <declaration name="oldx" type="double" line="106"/>
                <scope line="107">
                    <declaration name="d01" type="double" line="108"/>
                    <declaration name="d12" type="double" line="109"/>
                    <declaration name="d012" type="double" line="110"/>
                    <declaration name="c1" type="double" line="111"/>
                    <declaration name="delta" type="double" line="112"/>
                    <declaration name="xplus" type="double" line="113"/>
                    <declaration name="xminus" type="double" line="114"/>
                    <declaration name="x" type="double" line="115"/>
                    <declaration name="y" type="double" line="116"/>
                    <declaration name="tolerance" type="double" line="117"/>
                    <scope line="118"/>
                    <declaration name="bisect" type="boolean" line="121"/>
                    <scope line="122"/>
                    <scope line="131">
                        <declaration name="xm" type="double" line="132"/>
                        <declaration name="ym" type="double" line="133"/>
                        <scope line="134"/>
                        <scope line="138"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>