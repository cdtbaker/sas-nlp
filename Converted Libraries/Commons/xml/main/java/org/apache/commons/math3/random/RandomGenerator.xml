<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.random">
        <interface name="RandomGenerator">
            <javadoc line="20">
                Interface extracted from &lt;code&gt;java.util.Random&lt;/code&gt;.  This interface is
                  implemented by {@link AbstractRandomGenerator}.                
                <since>
                    1.1                    
                </since>
                <version>
                    $Id: RandomGenerator.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
            </javadoc>
            <method name="setSeed" type="void" line="29"/>
            <javadoc line="29">
                Sets the seed of the underlying random number generator using an
                  &lt;code&gt;int&lt;/code&gt; seed.
                  &lt;p&gt;Sequences of values generated starting with the same seeds
                  should be identical.
                  &lt;/p&gt;                
                <param>
                    seed the seed value                    
                </param>
            </javadoc>
            <method name="setSeed" type="void" line="39"/>
            <javadoc line="39">
                Sets the seed of the underlying random number generator using an
                  &lt;code&gt;int&lt;/code&gt; array seed.
                  &lt;p&gt;Sequences of values generated starting with the same seeds
                  should be identical.
                  &lt;/p&gt;                
                <param>
                    seed the seed value                    
                </param>
            </javadoc>
            <method name="setSeed" type="void" line="49"/>
            <javadoc line="49">
                Sets the seed of the underlying random number generator using a
                  &lt;code&gt;long&lt;/code&gt; seed.
                  &lt;p&gt;Sequences of values generated starting with the same seeds
                  should be identical.
                  &lt;/p&gt;                
                <param>
                    seed the seed value                    
                </param>
            </javadoc>
            <method name="nextBytes" type="void" line="59"/>
            <javadoc line="59">
                Generates random bytes and places them into a user-supplied
                  byte array.  The number of random bytes produced is equal to
                  the length of the byte array.                
                <param>
                    bytes the non-null byte array in which to put the
                      random bytes                    
                </param>
            </javadoc>
            <method name="nextInt" type="int" line="69"/>
            <javadoc line="69">
                Returns the next pseudorandom, uniformly distributed &lt;code&gt;int&lt;/code&gt;
                  value from this random number generator&apos;s sequence.
                  All 2&lt;font size=&quot;-1&quot;&gt;&lt;sup&gt;32&lt;/sup&gt;&lt;/font&gt; possible &lt;tt&gt;int&lt;/tt&gt; values
                  should be produced with  (approximately) equal probability.                
                <return>
                    the next pseudorandom, uniformly distributed &lt;code&gt;int&lt;/code&gt;
                      value from this random number generator&apos;s sequence                    
                </return>
            </javadoc>
            <method name="nextInt" type="int" line="80"/>
            <javadoc line="80">
                Returns a pseudorandom, uniformly distributed &lt;tt&gt;int&lt;/tt&gt; value
                  between 0 (inclusive) and the specified value (exclusive), drawn from
                  this random number generator&apos;s sequence.                
                <param>
                    n the bound on the random number to be returned.  Must be
                      positive.                    
                </param>
                <return>
                    a pseudorandom, uniformly distributed &lt;tt&gt;int&lt;/tt&gt;
                      value between 0 (inclusive) and n (exclusive).                    
                </return>
                <throws>
                    IllegalArgumentException  if n is not positive.                    
                </throws>
            </javadoc>
            <method name="nextLong" type="long" line="93"/>
            <javadoc line="93">
                Returns the next pseudorandom, uniformly distributed &lt;code&gt;long&lt;/code&gt;
                  value from this random number generator&apos;s sequence.  All
                  2&lt;font size=&quot;-1&quot;&gt;&lt;sup&gt;64&lt;/sup&gt;&lt;/font&gt; possible &lt;tt&gt;long&lt;/tt&gt; values
                  should be produced with (approximately) equal probability.                
                <return>
                    the next pseudorandom, uniformly distributed &lt;code&gt;long&lt;/code&gt;
                      value from this random number generator&apos;s sequence                    
                </return>
            </javadoc>
            <method name="nextBoolean" type="boolean" line="104"/>
            <javadoc line="104">
                Returns the next pseudorandom, uniformly distributed
                  &lt;code&gt;boolean&lt;/code&gt; value from this random number generator&apos;s
                  sequence.                
                <return>
                    the next pseudorandom, uniformly distributed
                      &lt;code&gt;boolean&lt;/code&gt; value from this random number generator&apos;s
                      sequence                    
                </return>
            </javadoc>
            <method name="nextFloat" type="float" line="115"/>
            <javadoc line="115">
                Returns the next pseudorandom, uniformly distributed &lt;code&gt;float&lt;/code&gt;
                  value between &lt;code&gt;0.0&lt;/code&gt; and &lt;code&gt;1.0&lt;/code&gt; from this random
                  number generator&apos;s sequence.                
                <return>
                    the next pseudorandom, uniformly distributed &lt;code&gt;float&lt;/code&gt;
                      value between &lt;code&gt;0.0&lt;/code&gt; and &lt;code&gt;1.0&lt;/code&gt; from this
                      random number generator&apos;s sequence                    
                </return>
            </javadoc>
            <method name="nextDouble" type="double" line="126"/>
            <javadoc line="126">
                Returns the next pseudorandom, uniformly distributed
                  &lt;code&gt;double&lt;/code&gt; value between &lt;code&gt;0.0&lt;/code&gt; and
                  &lt;code&gt;1.0&lt;/code&gt; from this random number generator&apos;s sequence.                
                <return>
                    the next pseudorandom, uniformly distributed
                      &lt;code&gt;double&lt;/code&gt; value between &lt;code&gt;0.0&lt;/code&gt; and
                      &lt;code&gt;1.0&lt;/code&gt; from this random number generator&apos;s sequence                    
                </return>
            </javadoc>
            <method name="nextGaussian" type="double" line="137"/>
            <javadoc line="137">
                Returns the next pseudorandom, Gaussian (&quot;normally&quot;) distributed
                  &lt;code&gt;double&lt;/code&gt; value with mean &lt;code&gt;0.0&lt;/code&gt; and standard
                  deviation &lt;code&gt;1.0&lt;/code&gt; from this random number generator&apos;s sequence.                
                <return>
                    the next pseudorandom, Gaussian (&quot;normally&quot;) distributed
                      &lt;code&gt;double&lt;/code&gt; value with mean &lt;code&gt;0.0&lt;/code&gt; and
                      standard deviation &lt;code&gt;1.0&lt;/code&gt; from this random number
                      generator&apos;s sequence                    
                </return>
            </javadoc>
        </interface>
    </source>