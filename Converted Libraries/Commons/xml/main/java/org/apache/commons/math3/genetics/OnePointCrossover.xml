<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.genetics">
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <class name="OnePointCrossover" line="27">
            <type_params>
                <type_param name="T"/>
            </type_params>
            <implements interface="CrossoverPolicy"/>
            <javadoc line="27">
                One point crossover policy. A random crossover point is selected and the
                  first part from each parent is copied to the corresponding child, and the
                  second parts are copied crosswise.
                  Example:
                  &lt;pre&gt;
                  -C- denotes a crossover point
                  -C-                                 -C-
                  p1 = (1 0 1 0 0 1  | 0 1 1)    X    p2 = (0 1 1 0 1 0  | 1 1 1)
                  \------------/ \-----/              \------------/ \-----/
                  ||         ()                       ||        ()
                  VV         ()                      VV        ()
                  /------------\ /-----\              /------------\ /-----\
                  c1 = (1 0 1 0 0 1  | 1 1 1)    X    c2 = (0 1 1 0 1 0  | 0 1 1)
                  &lt;/pre&gt;
                  This policy works only on {@link AbstractListChromosome}, and therefore it
                  is parameterized by T. Moreover, the chromosomes must have same lengths.                
                <param>
                    &lt;T&gt;
                       generic type of the {@link AbstractListChromosome}s for crossover                    
                </param>
                <since>
                    2.0                    
                </since>
                <version>
                    $Id: OnePointCrossover.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
            </javadoc>
            <javadoc line="54">
                Performs one point crossover. A random crossover point is selected and the
                  first part from each parent is copied to the corresponding child, and the
                  second parts are copied crosswise.
                  Example:
                  &lt;pre&gt;
                  -C- denotes a crossover point
                  -C-                                 -C-
                  p1 = (1 0 1 0 0 1  | 0 1 1)    X    p2 = (0 1 1 0 1 0  | 1 1 1)
                  \------------/ \-----/              \------------/ \-----/
                  ||         ()                       ||        ()
                  VV         ()                      VV        ()
                  /------------\ /-----\              /------------\ /-----\
                  c1 = (1 0 1 0 0 1  | 1 1 1)    X    c2 = (0 1 1 0 1 0  | 0 1 1)
                  &lt;/pre&gt;                
                <param>
                    first first parent (p1)                    
                </param>
                <param>
                    second second parent (p2)                    
                </param>
                <return>
                    pair of two children (c1,c2)                    
                </return>
                <throws>
                    MathIllegalArgumentException iff one of the chromosomes is
                      not an instance of {@link AbstractListChromosome}                    
                </throws>
                <throws>
                    DimensionMismatchException if the length of the two chromosomes is different                    
                </throws>
            </javadoc>
            <method name="crossover" type="ChromosomePair" line="80">
                <params>
                    <param name="first" type="Chromosome"/>
                    <param name="second" type="Chromosome"/>
                </params>
                <comment line="79">
                    OK because of instanceof checks                    
                </comment>
                <scope line="82"/>
            </method>
            <javadoc line="89">
                Helper for {@link #crossover(Chromosome,Chromosome)}. Performs the actual crossover.                
                <param>
                    first the first chromosome.                    
                </param>
                <param>
                    second the second chromosome.                    
                </param>
                <return>
                    the pair of new chromosomes that resulted from the crossover.                    
                </return>
                <throws>
                    DimensionMismatchException if the length of the two chromosomes is different                    
                </throws>
            </javadoc>
            <method name="crossover" type="ChromosomePair" line="98">
                <params>
                    <param name="first" type="AbstractListChromosome<T>"/>
                    <param name="second" type="AbstractListChromosome<T>"/>
                </params>
                <comment line="105">
                    array representations of the parents                    
                </comment>
                <comment line="108">
                    and of the children                    
                </comment>
                <comment line="112">
                    select a crossover point at random (0 and length makes no sense)                    
                </comment>
                <comment line="115">
                    copy the first part                    
                </comment>
                <comment line="120">
                    and switch the second part                    
                </comment>
                <declaration name="length" type="int" line="99"/>
                <scope line="100"/>
                <declaration name="parent1Rep" type="List&lt;T&gt;" line="105"/>
                <declaration name="parent2Rep" type="List&lt;T&gt;" line="106"/>
                <declaration name="child1Rep" type="ArrayList&lt;T&gt;" line="108"/>
                <declaration name="child2Rep" type="ArrayList&lt;T&gt;" line="109"/>
                <declaration name="crossoverIndex" type="int" line="112"/>
                <scope line="115"/>
                <scope line="120"/>
            </method>
        </class>
    </source>