<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.integration">
        <import package="org.apache.commons.math3.analysis.UnivariateFunction"/>
        <import package="org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory"/>
        <import package="org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.exception.MaxCountExceededException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.exception.TooManyEvaluationsException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <class name="IterativeLegendreGaussIntegrator" line="30">
            <extends class="BaseAbstractUnivariateIntegrator"/>
            <javadoc line="30">
                This algorithm divides the integration interval into equally-sized
                  sub-interval and on each of them performs a
                  &lt;a href=&quot;http://mathworld.wolfram.com/Legendre-GaussQuadrature.html&quot;&gt;
                  Legendre-Gauss&lt;/a&gt; quadrature.                
                <version>
                    $Id: IterativeLegendreGaussIntegrator.java 1455194 2013-03-11 15:45:54Z luc $                    
                </version>
                <since>
                    3.1                    
                </since>
            </javadoc>
            <declaration name="FACTORY" type="GaussIntegratorFactory" line="42"/>
            <javadoc line="42">
                Factory that computes the points and weights.                
            </javadoc>
            <declaration name="numberOfPoints" type="int" line="45"/>
            <javadoc line="45">
                Number of integration points (per interval).                
            </javadoc>
            <javadoc line="48">
                Builds an integrator with given accuracies and iterations counts.                
                <param>
                    n Number of integration points.                    
                </param>
                <param>
                    relativeAccuracy Relative accuracy of the result.                    
                </param>
                <param>
                    absoluteAccuracy Absolute accuracy of the result.                    
                </param>
                <param>
                    minimalIterationCount Minimum number of iterations.                    
                </param>
                <param>
                    maximalIterationCount Maximum number of iterations.                    
                </param>
                <throws>
                    NotStrictlyPositiveException if minimal number of iterations
                      or number of points are not strictly positive.                    
                </throws>
                <throws>
                    NumberIsTooSmallException if maximal number of iterations
                      is smaller than or equal to the minimal number of iterations.                    
                </throws>
            </javadoc>
            <method name="IterativeLegendreGaussIntegrator" type="constructor" line="66">
                <params>
                    <param name="n" type="int"/>
                    <param name="relativeAccuracy" type="double"/>
                    <param name="absoluteAccuracy" type="double"/>
                    <param name="minimalIterationCount" type="int"/>
                    <param name="maximalIterationCount" type="int"/>
                </params>
                <scope line="68"/>
            </method>
            <javadoc line="74">
                Builds an integrator with given accuracies.                
                <param>
                    n Number of integration points.                    
                </param>
                <param>
                    relativeAccuracy Relative accuracy of the result.                    
                </param>
                <param>
                    absoluteAccuracy Absolute accuracy of the result.                    
                </param>
                <throws>
                    NotStrictlyPositiveException if {@code n < 1}.                    
                </throws>
            </javadoc>
            <method name="IterativeLegendreGaussIntegrator" type="constructor" line="85">
                <params>
                    <param name="n" type="int"/>
                    <param name="relativeAccuracy" type="double"/>
                    <param name="absoluteAccuracy" type="double"/>
                </params>
            </method>
            <javadoc line="90">
                Builds an integrator with given iteration counts.                
                <param>
                    n Number of integration points.                    
                </param>
                <param>
                    minimalIterationCount Minimum number of iterations.                    
                </param>
                <param>
                    maximalIterationCount Maximum number of iterations.                    
                </param>
                <throws>
                    NotStrictlyPositiveException if minimal number of iterations
                      is not strictly positive.                    
                </throws>
                <throws>
                    NumberIsTooSmallException if maximal number of iterations
                      is smaller than or equal to the minimal number of iterations.                    
                </throws>
                <throws>
                    NotStrictlyPositiveException if {@code n < 1}.                    
                </throws>
            </javadoc>
            <method name="IterativeLegendreGaussIntegrator" type="constructor" line="105">
                <params>
                    <param name="n" type="int"/>
                    <param name="minimalIterationCount" type="int"/>
                    <param name="maximalIterationCount" type="int"/>
                </params>
            </method>
            <javadoc line="110">
                {@inheritDoc}                
            </javadoc>
            <method name="doIntegrate" type="double" line="113">
                <comment line="115">
                    Compute first estimate with a single step.                    
                </comment>
                <comment line="120">
                    Improve integral with a larger number of steps.                    
                </comment>
                <comment line="123">
                    Estimate the error.                    
                </comment>
                <comment line="129">
                    check convergence                    
                </comment>
                <comment line="135">
                    Prepare next iteration.                    
                </comment>
                <declaration name="oldt" type="double" line="115"/>
                <declaration name="n" type="int" line="117"/>
                <scope line="118">
                    <declaration name="t" type="double" line="120"/>
                    <declaration name="delta" type="double" line="123"/>
                    <declaration name="limit" type="double" line="124"/>
                    <scope line="130"/>
                    <declaration name="ratio" type="double" line="135"/>
                </scope>
            </method>
            <javadoc line="142">
                Compute the n-th stage integral.                
                <param>
                    n Number of steps.                    
                </param>
                <return>
                    the value of n-th stage integral.                    
                </return>
                <throws>
                    TooManyEvaluationsException if the maximum number of evaluations
                      is exceeded.                    
                </throws>
            </javadoc>
            <method name="stage" type="double" line="151">
                <params>
                    <param name="n" type="int"/>
                </params>
                <comment line="153">
                    Function to be integrated is stored in the base class.                    
                </comment>
                <comment line="167">
                    Integrate over each sub-interval [a, b].                    
                </comment>
                <anonymous_class line="153">
                    <method name="value" type="double" line="155">
                        <params>
                            <param name="x" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="f" type="UnivariateFunction" line="153"/>
                <declaration name="min" type="double" line="160"/>
                <declaration name="max" type="double" line="161"/>
                <declaration name="step" type="double" line="162"/>
                <declaration name="sum" type="double" line="164"/>
                <scope line="165">
                    <declaration name="a" type="double" line="167"/>
                    <declaration name="b" type="double" line="168"/>
                    <declaration name="g" type="GaussIntegrator" line="169"/>
                </scope>
            </method>
        </class>
    </source>