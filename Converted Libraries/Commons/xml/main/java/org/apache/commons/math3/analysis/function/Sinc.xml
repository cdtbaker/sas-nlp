<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.function">
        <import package="org.apache.commons.math3.analysis.DifferentiableUnivariateFunction"/>
        <import package="org.apache.commons.math3.analysis.FunctionUtils"/>
        <import package="org.apache.commons.math3.analysis.UnivariateFunction"/>
        <import package="org.apache.commons.math3.analysis.differentiation.DerivativeStructure"/>
        <import package="org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <class name="Sinc" line="9">
            <implements interface="UnivariateDifferentiableFunction"/>
            <implements interface="DifferentiableUnivariateFunction"/>
            <javadoc line="9">
                &lt;a href=&quot;http://en.wikipedia.org/wiki/Sinc_function&quot;&gt;Sinc&lt;/a&gt; function,
                  defined by
                  &lt;pre&gt;&lt;code&gt;
                  sinc(x) = 1            if x = 0,
                  sin(x) / x   otherwise.
                  &lt;/code&gt;&lt;/pre&gt;                
                <since>
                    3.0                    
                </since>
                <version>
                    $Id: Sinc.java 1455194 2013-03-11 15:45:54Z luc $                    
                </version>
            </javadoc>
            <declaration name="SHORTCUT" type="double" line="20"/>
            <javadoc line="20">
                Value below which the computations are done using Taylor series.
                  &lt;p&gt;
                  The Taylor series for sinc even order derivatives are:
                  &lt;pre&gt;
                  d^(2n)sinc/dx^(2n)     = Sum_(k&gt;=0) (-1)^(n+k) / ((2k)!(2n+2k+1)) x^(2k)
                  = (-1)^n     [ 1/(2n+1) - x^2/(4n+6) + x^4/(48n+120) - x^6/(1440n+5040) + O(x^8) ]
                  &lt;/pre&gt;
                  &lt;/p&gt;
                  &lt;p&gt;
                  The Taylor series for sinc odd order derivatives are:
                  &lt;pre&gt;
                  d^(2n+1)sinc/dx^(2n+1) = Sum_(k&gt;=0) (-1)^(n+k+1) / ((2k+1)!(2n+2k+3)) x^(2k+1)
                  = (-1)^(n+1) [ x/(2n+3) - x^3/(12n+30) + x^5/(240n+840) - x^7/(10080n+45360) + O(x^9) ]
                  &lt;/pre&gt;
                  &lt;/p&gt;
                  &lt;p&gt;
                  So the ratio of the fourth term with respect to the first term
                  is always smaller than x^6/720, for all derivative orders.
                  This implies that neglecting this term and using only the first three terms induces
                  a relative error bounded by x^6/720. The SHORTCUT value is chosen such that this
                  relative error is below double precision accuracy when |x| &lt;= SHORTCUT.
                  &lt;/p&gt;                
            </javadoc>
            <declaration name="normalized" type="boolean" line="45"/>
            <javadoc line="45">
                For normalized sinc function.                
            </javadoc>
            <javadoc line="49">
                The sinc function, {@code sin(x) / x}.                
            </javadoc>
            <method name="Sinc" type="constructor" line="52"/>
            <javadoc line="55">
                Instantiates the sinc function.                
                <param>
                    normalized If {@code true}, the function is
                      <code> sin(&pi;x) / &pi;x</code>, otherwise {@code sin(x) / x}.                    
                </param>
            </javadoc>
            <method name="Sinc" type="constructor" line="60">
                <params>
                    <param name="normalized" type="boolean"/>
                </params>
            </method>
            <javadoc line="63">
                {@inheritDoc}                
            </javadoc>
            <method name="value" type="double" line="66">
                <params>
                    <param name="x" type="double"/>
                </params>
                <declaration name="scaledX" type="double" line="67"/>
                <scope line="68">
                    <declaration name="scaledX2" type="double" line="69"/>
                </scope>
                <scope line="72"/>
            </method>
            <javadoc line="76">
                {@inheritDoc}                
                <deprecated>
                    as of 3.1, replaced by {@link #value(DerivativeStructure)}                    
                </deprecated>
            </javadoc>
            <method name="derivative" type="UnivariateFunction" line="80"/>
            <javadoc line="83">
                {@inheritDoc}                
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="value" type="DerivativeStructure" line="87">
                <params>
                    <param name="t" type="DerivativeStructure"/>
                </params>
                <declaration name="scaledX" type="double" line="88"/>
                <declaration name="scaledX2" type="double" line="89"/>
                <declaration name="f" type="double[]" line="90"/>
                <scope line="91">
                    <scope line="92">
                        <declaration name="k" type="int" line="93"/>
                        <scope line="94"/>
                        <scope line="97"/>
                    </scope>
                </scope>
                <scope line="102">
                    <declaration name="inv" type="double" line="103"/>
                    <declaration name="cos" type="double" line="104"/>
                    <declaration name="sin" type="double" line="105"/>
                    <declaration name="sc" type="double[]" line="107"/>
                    <declaration name="coeff" type="double" line="109"/>
                    <scope line="110">
                        <declaration name="s" type="double" line="111"/>
                        <declaration name="c" type="double" line="112"/>
                        <declaration name="kStart" type="int" line="113"/>
                        <scope line="114"/>
                        <scope line="118"/>
                        <scope line="123"/>
                    </scope>
                </scope>
                <scope line="135">
                    <declaration name="scale" type="double" line="136"/>
                    <scope line="137"/>
                </scope>
            </method>
        </class>
    </source>