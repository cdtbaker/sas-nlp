<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.util">
        <import package="java.io.Serializable"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <class name="DefaultTransformer" line="6">
            <implements interface="NumberTransformer"/>
            <implements interface="Serializable"/>
            <javadoc line="6">
                A Default NumberTransformer for java.lang.Numbers and Numeric Strings. This
                  provides some simple conversion capabilities to turn any java.lang.Number
                  into a primitive double or to turn a String representation of a Number into
                  a double.                
                <version>
                    $Id: DefaultTransformer.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="14"/>
            <javadoc line="14">
                Serializable version identifier                
            </javadoc>
            <javadoc line="18">
                @param o  the object that gets transformed.                
                <return>
                    a double primitive representation of the Object o.                    
                </return>
                <throws>
                    NullArgumentException if Object <code>o</code> is {@code null}.                    
                </throws>
                <throws>
                    MathIllegalArgumentException if Object <code>o</code>
                      cannot successfully be transformed                    
                </throws>
                <see>
                    <a href="http://commons.apache.org/collections/api-release/org/apache/commons/collections/Transformer.html">Commons Collections Transformer</a>                    
                </see>
            </javadoc>
            <method name="transform" type="double" line="26">
                <params>
                    <param name="o" type="Object"/>
                </params>
                <scope line="27"/>
                <scope line="30"/>
                <scope line="33"/>
                <scope line="36"/>
            </method>
            <javadoc line="40">
                {@inheritDoc}                
            </javadoc>
            <method name="equals" type="boolean" line="43">
                <params>
                    <param name="other" type="Object"/>
                </params>
                <scope line="44"/>
            </method>
            <javadoc line="49">
                {@inheritDoc}                
            </javadoc>
            <method name="hashCode" type="int" line="52"/>
        </class>
    </source>