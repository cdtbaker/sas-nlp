<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3">
        <import package="org.apache.commons.math3.exception.MathArithmeticException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <interface name="FieldElement">
            <type_params>
                <type_param name="T"/>
            </type_params>
            <javadoc line="4">
                Interface representing &lt;a href=&quot;http://mathworld.wolfram.com/Field.html&quot;&gt;field&lt;/a&gt; elements.                
                <param>
                    <T>
                      the type of the field elements                    
                </param>
                <see>
                    Field                    
                </see>
                <version>
                    $Id: FieldElement.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
                <since>
                    2.0                    
                </since>
            </javadoc>
            <method name="add" type="T" line="13"/>
            <javadoc line="13">
                Compute this + a.                
                <param>
                    a element to add                    
                </param>
                <return>
                    a new element representing this + a                    
                </return>
                <throws>
                    NullArgumentException if {@code addend} is {@code null}.                    
                </throws>
            </javadoc>
            <method name="subtract" type="T" line="20"/>
            <javadoc line="20">
                Compute this - a.                
                <param>
                    a element to subtract                    
                </param>
                <return>
                    a new element representing this - a                    
                </return>
                <throws>
                    NullArgumentException if {@code a} is {@code null}.                    
                </throws>
            </javadoc>
            <method name="negate" type="T" line="27"/>
            <javadoc line="27">
                Returns the additive inverse of {@code this} element.                
                <return>
                    the opposite of {@code this}.                    
                </return>
            </javadoc>
            <method name="multiply" type="T" line="32"/>
            <javadoc line="32">
                Compute n &amp;times; this. Multiplication by an integer number is defined
                  as the following sum
                  &lt;center&gt;
                  n &amp;times; this = &amp;sum;&lt;sub&gt;i=1&lt;/sub&gt;&lt;sup&gt;n&lt;/sup&gt; this.
                  &lt;/center&gt;                
                <param>
                    n Number of times {@code this} must be added to itself.                    
                </param>
                <return>
                    A new element representing n &times; this.                    
                </return>
            </javadoc>
            <method name="multiply" type="T" line="42"/>
            <javadoc line="42">
                Compute this &amp;times; a.                
                <param>
                    a element to multiply                    
                </param>
                <return>
                    a new element representing this &times; a                    
                </return>
                <throws>
                    NullArgumentException if {@code a} is {@code null}.                    
                </throws>
            </javadoc>
            <method name="divide" type="T" line="49"/>
            <javadoc line="49">
                Compute this &amp;divide; a.                
                <param>
                    a element to add                    
                </param>
                <return>
                    a new element representing this &divide; a                    
                </return>
                <throws>
                    NullArgumentException if {@code a} is {@code null}.                    
                </throws>
                <throws>
                    MathArithmeticException if {@code a} is zero                    
                </throws>
            </javadoc>
            <method name="reciprocal" type="T" line="57"/>
            <javadoc line="57">
                Returns the multiplicative inverse of {@code this} element.                
                <return>
                    the inverse of {@code this}.                    
                </return>
                <throws>
                    MathArithmeticException if {@code this} is zero                    
                </throws>
            </javadoc>
            <method name="getField" type="Field<T>" line="63"/>
            <javadoc line="63">
                Get the {@link Field} to which the instance belongs.                
                <return>
                    {@link Field} to which the instance belongs                    
                </return>
            </javadoc>
        </interface>
    </source>