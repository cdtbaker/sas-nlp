<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.spherical.oned">
        <import package="java.io.Serializable"/>
        <import package="org.apache.commons.math3.exception.MathUnsupportedOperationException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.geometry.Space"/>
        <class name="Sphere1D" line="26">
            <comment line="72">
                CHECKSTYLE: stop HideUtilityClassConstructor                
            </comment>
            <comment line="80">
                CHECKSTYLE: resume HideUtilityClassConstructor                
            </comment>
            <implements interface="Serializable"/>
            <implements interface="Space"/>
            <javadoc line="26">
                This class implements a one-dimensional sphere (i.e. a circle).
                  &lt;p&gt;
                  We use here the topologists definition of the 1-sphere (see
                  &lt;a href=&quot;http://mathworld.wolfram.com/Sphere.html&quot;&gt;Sphere&lt;/a&gt; on
                  MathWorld), i.e. the 1-sphere is the one-dimensional closed curve
                  defined in 2D as x&lt;sup&gt;2&lt;/sup&gt;+y&lt;sup&gt;2&lt;/sup&gt;=1.
                  &lt;/p&gt;                
                <version>
                    $Id: Sphere1D.java 1571737 2014-02-25 16:42:07Z luc $                    
                </version>
                <since>
                    3.3                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="39"/>
            <javadoc line="39">
                Serializable version identifier.                
            </javadoc>
            <javadoc line="42">
                Private constructor for the singleton.                
            </javadoc>
            <method name="Sphere1D" type="constructor" line="44"/>
            <javadoc line="47">
                Get the unique instance.                
                <return>
                    the unique instance                    
                </return>
            </javadoc>
            <method name="getInstance" type="Sphere1D" line="50"/>
            <javadoc line="54">
                {@inheritDoc}                
            </javadoc>
            <method name="getDimension" type="int" line="55"/>
            <javadoc line="59">
                {@inheritDoc}&lt;p&gt;
                  As the 1-dimension sphere does not have proper sub-spaces,
                  this method always throws a {@link NoSubSpaceException}&lt;/p&gt;                
                <return>
                    nothing                    
                </return>
                <throws>
                    NoSubSpaceException in all cases                    
                </throws>
            </javadoc>
            <method name="getSubSpace" type="Space" line="67"/>
            <class name="LazyHolder" line="72">
                <javadoc line="72">
                    Holder for the instance.
                      &lt;p&gt;We use here the Initialization On Demand Holder Idiom.&lt;/p&gt;                    
                </javadoc>
                <declaration name="INSTANCE" type="Sphere1D" line="76"/>
                <javadoc line="76">
                    Cached field instance.                    
                </javadoc>
            </class>
            <javadoc line="81">
                Handle deserialization of the singleton.                
                <return>
                    the singleton instance                    
                </return>
            </javadoc>
            <method name="readResolve" type="Object" line="84">
                <comment line="86">
                    return the singleton instance                    
                </comment>
            </method>
            <class name="NoSubSpaceException" line="89">
                <extends class="MathUnsupportedOperationException"/>
                <javadoc line="89">
                    Specialized exception for inexistent sub-space.
                      &lt;p&gt;
                      This exception is thrown when attempting to get the sub-space of a one-dimensional space
                      &lt;/p&gt;                    
                </javadoc>
                <declaration name="serialVersionUID" type="long" line="96"/>
                <javadoc line="96">
                    Serializable UID.                    
                </javadoc>
                <javadoc line="99">
                    Simple constructor.                    
                </javadoc>
                <method name="NoSubSpaceException" type="constructor" line="101"/>
            </class>
        </class>
    </source>