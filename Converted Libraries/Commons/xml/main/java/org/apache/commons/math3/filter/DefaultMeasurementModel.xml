<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.filter">
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.NoDataException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.linear.Array2DRowRealMatrix"/>
        <import package="org.apache.commons.math3.linear.RealMatrix"/>
        <class name="DefaultMeasurementModel" line="25">
            <implements interface="MeasurementModel"/>
            <javadoc line="25">
                Default implementation of a {@link MeasurementModel} for the use with a {@link KalmanFilter}.                
                <since>
                    3.0                    
                </since>
                <version>
                    $Id: DefaultMeasurementModel.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
            </javadoc>
            <declaration name="measurementMatrix" type="RealMatrix" line="33"/>
            <javadoc line="33">
                The measurement matrix, used to associate the measurement vector to the
                  internal state estimation vector.                
            </javadoc>
            <declaration name="measurementNoise" type="RealMatrix" line="39"/>
            <javadoc line="39">
                The measurement noise covariance matrix.                
            </javadoc>
            <javadoc line="44">
                Create a new {@link MeasurementModel}, taking double arrays as input parameters for the
                  respective measurement matrix and noise.                
                <param>
                    measMatrixthe measurement matrix                    
                </param>
                <param>
                    measNoisethe measurement noise matrix                    
                </param>
                <throws>
                    NullArgumentExceptionif any of the input matrices is {@code null}                    
                </throws>
                <throws>
                    NoDataExceptionif any row / column dimension of the input matrices is zero                    
                </throws>
                <throws>
                    DimensionMismatchExceptionif any of the input matrices is non-rectangular                    
                </throws>
            </javadoc>
            <method name="DefaultMeasurementModel" type="constructor" line="60">
                <params>
                    <param name="measMatrix" type="double[][]"/>
                    <param name="measNoise" type="double[][]"/>
                </params>
            </method>
            <javadoc line="64">
                Create a new {@link MeasurementModel}, taking {@link RealMatrix} objects
                  as input parameters for the respective measurement matrix and noise.                
                <param>
                    measMatrix the measurement matrix                    
                </param>
                <param>
                    measNoise the measurement noise matrix                    
                </param>
            </javadoc>
            <method name="DefaultMeasurementModel" type="constructor" line="71">
                <params>
                    <param name="measMatrix" type="RealMatrix"/>
                    <param name="measNoise" type="RealMatrix"/>
                </params>
            </method>
            <javadoc line="76">
                {@inheritDoc}                
            </javadoc>
            <method name="getMeasurementMatrix" type="RealMatrix" line="77"/>
            <javadoc line="81">
                {@inheritDoc}                
            </javadoc>
            <method name="getMeasurementNoise" type="RealMatrix" line="82"/>
        </class>
    </source>