<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.euclidean.oned">
        <import package="org.apache.commons.math3.geometry.Vector"/>
        <import package="org.apache.commons.math3.geometry.partitioning.Hyperplane"/>
        <class name="OrientedPoint" line="4">
            <implements interface="Hyperplane">
                <type_params>
                    <type_param name="Euclidean1D"/>
                </type_params>
            </implements>
            <javadoc line="4">
                This class represents a 1D oriented hyperplane.
                  &lt;p&gt;An hyperplane in 1D is a simple point, its orientation being a
                  boolean.&lt;/p&gt;
                  &lt;p&gt;Instances of this class are guaranteed to be immutable.&lt;/p&gt;                
                <version>
                    $Id: OrientedPoint.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
                <since>
                    3.0                    
                </since>
            </javadoc>
            <declaration name="location" type="Vector1D" line="13"/>
            <javadoc line="13">
                Vector location.                
            </javadoc>
            <declaration name="direct" type="boolean" line="17"/>
            <javadoc line="17">
                Orientation.                
            </javadoc>
            <javadoc line="21">
                Simple constructor.                
                <param>
                    location location of the hyperplane                    
                </param>
                <param>
                    direct if true, the plus side of the hyperplane is towards
                      abscissas greater than {@code location}                    
                </param>
            </javadoc>
            <method name="OrientedPoint" type="constructor" line="27">
                <params>
                    <param name="location" type="Vector1D"/>
                    <param name="direct" type="boolean"/>
                </params>
            </method>
            <javadoc line="31">
                Copy the instance.
                  &lt;p&gt;Since instances are immutable, this method directly returns
                  the instance.&lt;/p&gt;                
                <return>
                    the instance itself                    
                </return>
            </javadoc>
            <method name="copySelf" type="OrientedPoint" line="37"/>
            <javadoc line="40">
                {@inheritDoc}                
            </javadoc>
            <method name="getOffset" type="double" line="43">
                <params>
                    <param name="point" type="Vector<Euclidean1D>"/>
                </params>
                <declaration name="delta" type="double" line="44"/>
            </method>
            <javadoc line="47">
                Build a region covering the whole hyperplane.
                  &lt;p&gt;Since this class represent zero dimension spaces which does
                  not have lower dimension sub-spaces, this method returns a dummy
                  implementation of a {@link org.apache.commons.math3.geometry.partitioning.SubHyperplane SubHyperplane}.
                  This implementation is only used to allow the {@link org.apache.commons.math3.geometry.partitioning.SubHyperplaneSubHyperplane} class implementation to work properly, it should
                  &lt;em&gt;not&lt;/em&gt; be used otherwise.&lt;/p&gt;                
                <return>
                    a dummy sub hyperplane                    
                </return>
            </javadoc>
            <method name="wholeHyperplane" type="SubOrientedPoint" line="56"/>
            <javadoc line="59">
                Build a region covering the whole space.                
                <return>
                    a region containing the instance (really an {@link IntervalsSet IntervalsSet} instance)                    
                </return>
            </javadoc>
            <method name="wholeSpace" type="IntervalsSet" line="63"/>
            <javadoc line="66">
                {@inheritDoc}                
            </javadoc>
            <method name="sameOrientationAs" type="boolean" line="69">
                <params>
                    <param name="other" type="Hyperplane<Euclidean1D>"/>
                </params>
            </method>
            <javadoc line="72">
                Get the hyperplane location on the real line.                
                <return>
                    the hyperplane location                    
                </return>
            </javadoc>
            <method name="getLocation" type="Vector1D" line="76"/>
            <javadoc line="79">
                Check if the hyperplane orientation is direct.                
                <return>
                    true if the plus side of the hyperplane is towards
                      abscissae greater than hyperplane location                    
                </return>
            </javadoc>
            <method name="isDirect" type="boolean" line="84"/>
            <javadoc line="87">
                Revert the instance.                
            </javadoc>
            <method name="revertSelf" type="void" line="90"/>
        </class>
    </source>