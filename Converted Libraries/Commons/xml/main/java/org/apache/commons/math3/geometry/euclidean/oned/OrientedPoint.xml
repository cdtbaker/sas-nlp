<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.euclidean.oned">
        <import package="org.apache.commons.math3.geometry.Point"/>
        <import package="org.apache.commons.math3.geometry.Vector"/>
        <import package="org.apache.commons.math3.geometry.partitioning.Hyperplane"/>
        <class name="OrientedPoint" line="23">
            <implements interface="Hyperplane">
                <type_params>
                    <type_param name="Euclidean1D"/>
                </type_params>
            </implements>
            <javadoc line="23">
                This class represents a 1D oriented hyperplane.
                  &lt;p&gt;An hyperplane in 1D is a simple point, its orientation being a
                  boolean.&lt;/p&gt;
                  &lt;p&gt;Instances of this class are guaranteed to be immutable.&lt;/p&gt;                
                <version>
                    $Id: OrientedPoint.java 1560115 2014-01-21 17:49:13Z luc $                    
                </version>
                <since>
                    3.0                    
                </since>
            </javadoc>
            <declaration name="DEFAULT_TOLERANCE" type="double" line="32"/>
            <javadoc line="32">
                Default value for tolerance.                
            </javadoc>
            <declaration name="location" type="Vector1D" line="35"/>
            <javadoc line="35">
                Vector location.                
            </javadoc>
            <declaration name="direct" type="boolean" line="38"/>
            <javadoc line="38">
                Orientation.                
            </javadoc>
            <declaration name="tolerance" type="double" line="41"/>
            <javadoc line="41">
                Tolerance below which points are considered to belong to the hyperplane.                
            </javadoc>
            <javadoc line="44">
                Simple constructor.                
                <param>
                    location location of the hyperplane                    
                </param>
                <param>
                    direct if true, the plus side of the hyperplane is towards
                      abscissas greater than {@code location}                    
                </param>
                <param>
                    tolerance tolerance below which points are considered to belong to the hyperplane                    
                </param>
                <since>
                    3.3                    
                </since>
            </javadoc>
            <method name="OrientedPoint" type="constructor" line="51">
                <params>
                    <param name="location" type="Vector1D"/>
                    <param name="direct" type="boolean"/>
                    <param name="tolerance" type="double"/>
                </params>
            </method>
            <javadoc line="57">
                Simple constructor.                
                <param>
                    location location of the hyperplane                    
                </param>
                <param>
                    direct if true, the plus side of the hyperplane is towards
                      abscissas greater than {@code location}                    
                </param>
                <deprecated>
                    as of 3.3, replaced with {@link #OrientedPoint(Vector1D,boolean,double)}                    
                </deprecated>
            </javadoc>
            <method name="OrientedPoint" type="constructor" line="64">
                <params>
                    <param name="location" type="Vector1D"/>
                    <param name="direct" type="boolean"/>
                </params>
            </method>
            <javadoc line="68">
                Copy the instance.
                  &lt;p&gt;Since instances are immutable, this method directly returns
                  the instance.&lt;/p&gt;                
                <return>
                    the instance itself                    
                </return>
            </javadoc>
            <method name="copySelf" type="OrientedPoint" line="73"/>
            <javadoc line="77">
                Get the offset (oriented distance) of a vector.                
                <param>
                    vector vector to check                    
                </param>
                <return>
                    offset of the vector                    
                </return>
            </javadoc>
            <method name="getOffset" type="double" line="81">
                <params>
                    <param name="vector" type="Vector&lt;Euclidean1D&gt;"/>
                </params>
            </method>
            <javadoc line="85">
                {@inheritDoc}                
            </javadoc>
            <method name="getOffset" type="double" line="86">
                <params>
                    <param name="point" type="Point&lt;Euclidean1D&gt;"/>
                </params>
                <declaration name="delta" type="double" line="87"/>
            </method>
            <javadoc line="91">
                Build a region covering the whole hyperplane.
                  &lt;p&gt;Since this class represent zero dimension spaces which does
                  not have lower dimension sub-spaces, this method returns a dummy
                  implementation of a {@link org.apache.commons.math3.geometry.partitioning.SubHyperplane SubHyperplane}.
                  This implementation is only used to allow the {@link org.apache.commons.math3.geometry.partitioning.SubHyperplaneSubHyperplane} class implementation to work properly, it should
                  &lt;em&gt;not&lt;/em&gt; be used otherwise.&lt;/p&gt;                
                <return>
                    a dummy sub hyperplane                    
                </return>
            </javadoc>
            <method name="wholeHyperplane" type="SubOrientedPoint" line="102"/>
            <javadoc line="106">
                Build a region covering the whole space.                
                <return>
                    a region containing the instance (really an {@link IntervalsSet IntervalsSet} instance)                    
                </return>
            </javadoc>
            <method name="wholeSpace" type="IntervalsSet" line="110"/>
            <javadoc line="114">
                {@inheritDoc}                
            </javadoc>
            <method name="sameOrientationAs" type="boolean" line="115">
                <params>
                    <param name="other" type="Hyperplane&lt;Euclidean1D&gt;"/>
                </params>
            </method>
            <javadoc line="119">
                {@inheritDoc}                
                <since>
                    3.3                    
                </since>
            </javadoc>
            <method name="project" type="Point&lt;Euclidean1D&gt;" line="122">
                <params>
                    <param name="point" type="Point&lt;Euclidean1D&gt;"/>
                </params>
            </method>
            <javadoc line="126">
                {@inheritDoc}                
                <since>
                    3.3                    
                </since>
            </javadoc>
            <method name="getTolerance" type="double" line="129"/>
            <javadoc line="133">
                Get the hyperplane location on the real line.                
                <return>
                    the hyperplane location                    
                </return>
            </javadoc>
            <method name="getLocation" type="Vector1D" line="136"/>
            <javadoc line="140">
                Check if the hyperplane orientation is direct.                
                <return>
                    true if the plus side of the hyperplane is towards
                      abscissae greater than hyperplane location                    
                </return>
            </javadoc>
            <method name="isDirect" type="boolean" line="144"/>
            <javadoc line="148">
                Revert the instance.                
            </javadoc>
            <method name="revertSelf" type="void" line="150"/>
        </class>
    </source>