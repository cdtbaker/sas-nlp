<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.special.Beta"/>
        <import package="org.apache.commons.math3.special.Gamma"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.random.Well19937c"/>
        <class name="TDistribution" line="9">
            <extends class="AbstractRealDistribution"/>
            <javadoc line="9">
                Implementation of Student&apos;s t-distribution.                
                <see>
                    "<a href='http://en.wikipedia.org/wiki/Student&apos;s_t-distribution'>Student's t-distribution (Wikipedia)</a>"                    
                </see>
                <see>
                    "<a href='http://mathworld.wolfram.com/Studentst-Distribution.html'>Student's t-distribution (MathWorld)</a>"                    
                </see>
                <version>
                    $Id: TDistribution.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
            </javadoc>
            <declaration name="DEFAULT_INVERSE_ABSOLUTE_ACCURACY" type="double" line="16"/>
            <javadoc line="16">
                Default inverse cumulative probability accuracy.                
                <since>
                    2.1                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="21"/>
            <javadoc line="21">
                Serializable version identifier                
            </javadoc>
            <declaration name="degreesOfFreedom" type="double" line="25"/>
            <javadoc line="25">
                The degrees of freedom.                
            </javadoc>
            <declaration name="solverAbsoluteAccuracy" type="double" line="29"/>
            <javadoc line="29">
                Inverse cumulative probability accuracy.                
            </javadoc>
            <javadoc line="33">
                Create a t distribution using the given degrees of freedom.                
                <param>
                    degreesOfFreedom Degrees of freedom.                    
                </param>
                <throws>
                    NotStrictlyPositiveException if {@code degreesOfFreedom <= 0}                    
                </throws>
            </javadoc>
            <method name="TDistribution" type="constructor" line="38">
                <params>
                    <param name="degreesOfFreedom" type="double"/>
                </params>
            </method>
            <javadoc line="41">
                Create a t distribution using the given degrees of freedom and the
                  specified inverse cumulative probability absolute accuracy.                
                <param>
                    degreesOfFreedom Degrees of freedom.                    
                </param>
                <param>
                    inverseCumAccuracy the maximum absolute error in inverse
                      cumulative probability estimates
                      (defaults to {@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).                    
                </param>
                <throws>
                    NotStrictlyPositiveException if {@code degreesOfFreedom <= 0}                    
                </throws>
                <since>
                    2.1                    
                </since>
            </javadoc>
            <method name="TDistribution" type="constructor" line="51">
                <params>
                    <param name="degreesOfFreedom" type="double"/>
                    <param name="inverseCumAccuracy" type="double"/>
                </params>
            </method>
            <javadoc line="54">
                Creates a t distribution.                
                <param>
                    rng Random number generator.                    
                </param>
                <param>
                    degreesOfFreedom Degrees of freedom.                    
                </param>
                <param>
                    inverseCumAccuracy the maximum absolute error in inverse
                      cumulative probability estimates
                      (defaults to {@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).                    
                </param>
                <throws>
                    NotStrictlyPositiveException if {@code degreesOfFreedom <= 0}                    
                </throws>
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="TDistribution" type="constructor" line="64">
                <params>
                    <param name="rng" type="RandomGenerator"/>
                    <param name="degreesOfFreedom" type="double"/>
                    <param name="inverseCumAccuracy" type="double"/>
                </params>
                <scope line="66"/>
            </method>
            <javadoc line="72">
                Access the degrees of freedom.                
                <return>
                    the degrees of freedom.                    
                </return>
            </javadoc>
            <method name="getDegreesOfFreedom" type="double" line="76"/>
            <javadoc line="79">
                {@inheritDoc}                
            </javadoc>
            <method name="density" type="double" line="82">
                <params>
                    <param name="x" type="double"/>
                </params>
                <declaration name="n" type="double" line="83"/>
                <declaration name="nPlus1Over2" type="double" line="84"/>
            </method>
            <javadoc line="87">
                {@inheritDoc}                
            </javadoc>
            <method name="cumulativeProbability" type="double" line="90">
                <params>
                    <param name="x" type="double"/>
                </params>
                <declaration name="ret" type="double" line="91"/>
                <scope line="92"/>
                <scope line="95">
                    <declaration name="t" type="double" line="96"/>
                    <scope line="97"/>
                    <scope line="100"/>
                </scope>
            </method>
            <javadoc line="106">
                {@inheritDoc}                
            </javadoc>
            <method name="getSolverAbsoluteAccuracy" type="double" line="109"/>
            <javadoc line="112">
                {@inheritDoc}For degrees of freedom parameter {@code df}, the mean is
                  &lt;ul&gt;
                  &lt;li&gt;if {@code df &gt; 1} then {@code 0},&lt;/li&gt;
                  &lt;li&gt;else undefined ({@code Double.NaN}).&lt;/li&gt;
                  &lt;/ul&gt;                
            </javadoc>
            <method name="getNumericalMean" type="double" line="119">
                <declaration name="df" type="double" line="120"/>
                <scope line="121"/>
            </method>
            <javadoc line="126">
                {@inheritDoc}For degrees of freedom parameter {@code df}, the variance is
                  &lt;ul&gt;
                  &lt;li&gt;if {@code df &gt; 2} then {@code df / (df - 2)},&lt;/li&gt;
                  &lt;li&gt;if {@code 1 &lt; df &lt;= 2} then positive infinity
                  ({@code Double.POSITIVE_INFINITY}),&lt;/li&gt;
                  &lt;li&gt;else undefined ({@code Double.NaN}).&lt;/li&gt;
                  &lt;/ul&gt;                
            </javadoc>
            <method name="getNumericalVariance" type="double" line="135">
                <declaration name="df" type="double" line="136"/>
                <scope line="137"/>
                <scope line="140"/>
            </method>
            <javadoc line="145">
                {@inheritDoc}The lower bound of the support is always negative infinity no matter the
                  parameters.                
                <return>
                    lower bound of the support (always{@code Double.NEGATIVE_INFINITY})                    
                </return>
            </javadoc>
            <method name="getSupportLowerBound" type="double" line="150"/>
            <javadoc line="153">
                {@inheritDoc}The upper bound of the support is always positive infinity no matter the
                  parameters.                
                <return>
                    upper bound of the support (always{@code Double.POSITIVE_INFINITY})                    
                </return>
            </javadoc>
            <method name="getSupportUpperBound" type="double" line="158"/>
            <javadoc line="161">
                {@inheritDoc}                
            </javadoc>
            <method name="isSupportLowerBoundInclusive" type="boolean" line="164"/>
            <javadoc line="167">
                {@inheritDoc}                
            </javadoc>
            <method name="isSupportUpperBoundInclusive" type="boolean" line="170"/>
            <javadoc line="173">
                {@inheritDoc}The support of this distribution is connected.                
                <return>
                    {@code true}                    
                </return>
            </javadoc>
            <method name="isSupportConnected" type="boolean" line="177"/>
        </class>
    </source>