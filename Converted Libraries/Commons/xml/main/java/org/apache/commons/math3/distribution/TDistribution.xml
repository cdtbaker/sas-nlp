<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.special.Beta"/>
        <import package="org.apache.commons.math3.special.Gamma"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.random.Well19937c"/>
        <class name="TDistribution" line="27">
            <extends class="AbstractRealDistribution"/>
            <javadoc line="27">
                Implementation of Student&apos;s t-distribution.                
                <see>
                    &quot;&lt;a href=&apos;http://en.wikipedia.org/wiki/Student&amp;apos;s_t-distribution&apos;&gt;Student&apos;s t-distribution (Wikipedia)&lt;/a&gt;&quot;                    
                </see>
                <see>
                    &quot;&lt;a href=&apos;http://mathworld.wolfram.com/Studentst-Distribution.html&apos;&gt;Student&apos;s t-distribution (MathWorld)&lt;/a&gt;&quot;                    
                </see>
                <version>
                    $Id: TDistribution.java 1534358 2013-10-21 20:13:52Z tn $                    
                </version>
            </javadoc>
            <declaration name="DEFAULT_INVERSE_ABSOLUTE_ACCURACY" type="double" line="35"/>
            <javadoc line="35">
                Default inverse cumulative probability accuracy.                
                <since>
                    2.1                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="40"/>
            <javadoc line="40">
                Serializable version identifier                
            </javadoc>
            <declaration name="degreesOfFreedom" type="double" line="42"/>
            <javadoc line="42">
                The degrees of freedom.                
            </javadoc>
            <declaration name="solverAbsoluteAccuracy" type="double" line="44"/>
            <javadoc line="44">
                Inverse cumulative probability accuracy.                
            </javadoc>
            <javadoc line="47">
                Create a t distribution using the given degrees of freedom.                
                <param>
                    degreesOfFreedom Degrees of freedom.                    
                </param>
                <throws>
                    NotStrictlyPositiveException if {@code degreesOfFreedom &lt;= 0}                    
                </throws>
            </javadoc>
            <method name="TDistribution" type="constructor" line="54">
                <params>
                    <param name="degreesOfFreedom" type="double"/>
                </params>
            </method>
            <javadoc line="58">
                Create a t distribution using the given degrees of freedom and the
                  specified inverse cumulative probability absolute accuracy.                
                <param>
                    degreesOfFreedom Degrees of freedom.                    
                </param>
                <param>
                    inverseCumAccuracy the maximum absolute error in inverse
                      cumulative probability estimates
                      (defaults to {@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).                    
                </param>
                <throws>
                    NotStrictlyPositiveException if {@code degreesOfFreedom &lt;= 0}                    
                </throws>
                <since>
                    2.1                    
                </since>
            </javadoc>
            <method name="TDistribution" type="constructor" line="70">
                <params>
                    <param name="degreesOfFreedom" type="double"/>
                    <param name="inverseCumAccuracy" type="double"/>
                </params>
            </method>
            <javadoc line="74">
                Creates a t distribution.                
                <param>
                    rng Random number generator.                    
                </param>
                <param>
                    degreesOfFreedom Degrees of freedom.                    
                </param>
                <throws>
                    NotStrictlyPositiveException if {@code degreesOfFreedom &lt;= 0}                    
                </throws>
                <since>
                    3.3                    
                </since>
            </javadoc>
            <method name="TDistribution" type="constructor" line="83">
                <params>
                    <param name="rng" type="RandomGenerator"/>
                    <param name="degreesOfFreedom" type="double"/>
                </params>
            </method>
            <javadoc line="87">
                Creates a t distribution.                
                <param>
                    rng Random number generator.                    
                </param>
                <param>
                    degreesOfFreedom Degrees of freedom.                    
                </param>
                <param>
                    inverseCumAccuracy the maximum absolute error in inverse
                      cumulative probability estimates
                      (defaults to {@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY}).                    
                </param>
                <throws>
                    NotStrictlyPositiveException if {@code degreesOfFreedom &lt;= 0}                    
                </throws>
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="TDistribution" type="constructor" line="101">
                <params>
                    <param name="rng" type="RandomGenerator"/>
                    <param name="degreesOfFreedom" type="double"/>
                    <param name="inverseCumAccuracy" type="double"/>
                </params>
                <scope line="104"/>
            </method>
            <javadoc line="112">
                Access the degrees of freedom.                
                <return>
                    the degrees of freedom.                    
                </return>
            </javadoc>
            <method name="getDegreesOfFreedom" type="double" line="117"/>
            <javadoc line="121">
                {@inheritDoc}                
            </javadoc>
            <method name="density" type="double" line="122">
                <params>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="126">
                {@inheritDoc}                
            </javadoc>
            <method name="logDensity" type="double" line="128">
                <params>
                    <param name="x" type="double"/>
                </params>
                <declaration name="n" type="double" line="129"/>
                <declaration name="nPlus1Over2" type="double" line="130"/>
            </method>
            <javadoc line="138">
                {@inheritDoc}                
            </javadoc>
            <method name="cumulativeProbability" type="double" line="139">
                <params>
                    <param name="x" type="double"/>
                </params>
                <declaration name="ret" type="double" line="140"/>
                <scope line="141"/>
                <scope line="143">
                    <declaration name="t" type="double" line="144"/>
                    <scope line="149"/>
                    <scope line="151"/>
                </scope>
            </method>
            <javadoc line="159">
                {@inheritDoc}                
            </javadoc>
            <method name="getSolverAbsoluteAccuracy" type="double" line="161"/>
            <javadoc line="165">
                {@inheritDoc}For degrees of freedom parameter {@code df}, the mean is
                  &lt;ul&gt;
                  &lt;li&gt;if {@code df &gt; 1} then {@code 0},&lt;/li&gt;
                  &lt;li&gt;else undefined ({@code Double.NaN}).&lt;/li&gt;
                  &lt;/ul&gt;                
            </javadoc>
            <method name="getNumericalMean" type="double" line="174">
                <declaration name="df" type="double" line="175"/>
                <scope line="177"/>
            </method>
            <javadoc line="184">
                {@inheritDoc}For degrees of freedom parameter {@code df}, the variance is
                  &lt;ul&gt;
                  &lt;li&gt;if {@code df &gt; 2} then {@code df / (df - 2)},&lt;/li&gt;
                  &lt;li&gt;if {@code 1 &lt; df &lt;= 2} then positive infinity
                  ({@code Double.POSITIVE_INFINITY}),&lt;/li&gt;
                  &lt;li&gt;else undefined ({@code Double.NaN}).&lt;/li&gt;
                  &lt;/ul&gt;                
            </javadoc>
            <method name="getNumericalVariance" type="double" line="195">
                <declaration name="df" type="double" line="196"/>
                <scope line="198"/>
                <scope line="202"/>
            </method>
            <javadoc line="209">
                {@inheritDoc}The lower bound of the support is always negative infinity no matter the
                  parameters.                
                <return>
                    lower bound of the support (always{@code Double.NEGATIVE_INFINITY})                    
                </return>
            </javadoc>
            <method name="getSupportLowerBound" type="double" line="218"/>
            <javadoc line="222">
                {@inheritDoc}The upper bound of the support is always positive infinity no matter the
                  parameters.                
                <return>
                    upper bound of the support (always{@code Double.POSITIVE_INFINITY})                    
                </return>
            </javadoc>
            <method name="getSupportUpperBound" type="double" line="231"/>
            <javadoc line="235">
                {@inheritDoc}                
            </javadoc>
            <method name="isSupportLowerBoundInclusive" type="boolean" line="236"/>
            <javadoc line="240">
                {@inheritDoc}                
            </javadoc>
            <method name="isSupportUpperBoundInclusive" type="boolean" line="241"/>
            <javadoc line="245">
                {@inheritDoc}The support of this distribution is connected.                
                <return>
                    {@code true}                    
                </return>
            </javadoc>
            <method name="isSupportConnected" type="boolean" line="252"/>
        </class>
    </source>