<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.correlation">
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.linear.RealMatrix"/>
        <import package="org.apache.commons.math3.linear.BlockRealMatrix"/>
        <import package="org.apache.commons.math3.stat.descriptive.moment.Mean"/>
        <import package="org.apache.commons.math3.stat.descriptive.moment.Variance"/>
        <class name="Covariance" line="9">
            <javadoc line="9">
                Computes covariances for pairs of arrays or columns of a matrix.
                  &lt;p&gt;The constructors that take &lt;code&gt;RealMatrix&lt;/code&gt; or
                  &lt;code&gt;double[][]&lt;/code&gt; arguments generate covariance matrices.  The
                  columns of the input matrices are assumed to represent variable values.&lt;/p&gt;
                  &lt;p&gt;The constructor argument &lt;code&gt;biasCorrected&lt;/code&gt; determines whether or
                  not computed covariances are bias-corrected.&lt;/p&gt;
                  &lt;p&gt;Unbiased covariances are given by the formula&lt;/p&gt;
                  &lt;code&gt;cov(X, Y) = &amp;Sigma;[(x&lt;sub&gt;i&lt;/sub&gt; - E(X))(y&lt;sub&gt;i&lt;/sub&gt; - E(Y))] / (n - 1)&lt;/code&gt;
                  where &lt;code&gt;E(X)&lt;/code&gt; is the mean of &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;E(Y)&lt;/code&gt;
                  is the mean of the &lt;code&gt;Y&lt;/code&gt; values.
                  &lt;p&gt;Non-bias-corrected estimates use &lt;code&gt;n&lt;/code&gt; in place of &lt;code&gt;n - 1&lt;/code&gt;                
                <version>
                    $Id: Covariance.java 1453271 2013-03-06 10:29:51Z luc $                    
                </version>
                <since>
                    2.0                    
                </since>
            </javadoc>
            <declaration name="covarianceMatrix" type="RealMatrix" line="25"/>
            <javadoc line="25">
                covariance matrix                
            </javadoc>
            <declaration name="n" type="int" line="29"/>
            <javadoc line="29">
                Number of observations (length of covariate vectors)                
            </javadoc>
            <javadoc line="33">
                Create a Covariance with no data                
            </javadoc>
            <method name="Covariance" type="constructor" line="36"/>
            <javadoc line="41">
                Create a Covariance matrix from a rectangular array
                  whose columns represent covariates.
                  &lt;p&gt;The &lt;code&gt;biasCorrected&lt;/code&gt; parameter determines whether or not
                  covariance estimates are bias-corrected.&lt;/p&gt;
                  &lt;p&gt;The input array must be rectangular with at least one column
                  and two rows.&lt;/p&gt;                
                <param>
                    data rectangular array with columns representing covariates                    
                </param>
                <param>
                    biasCorrected true means covariances are bias-corrected                    
                </param>
                <throws>
                    MathIllegalArgumentException if the input data array is not
                      rectangular with at least two rows and one column.                    
                </throws>
                <throws>
                    NotStrictlyPositiveException if the input data array is not
                      rectangular with at least one row and one column.                    
                </throws>
            </javadoc>
            <method name="Covariance" type="constructor" line="55">
                <params>
                    <param name="data" type="double[][]"/>
                    <param name="biasCorrected" type="boolean"/>
                </params>
            </method>
            <javadoc line="58">
                Create a Covariance matrix from a rectangular array
                  whose columns represent covariates.
                  &lt;p&gt;The input array must be rectangular with at least one column
                  and two rows&lt;/p&gt;                
                <param>
                    data rectangular array with columns representing covariates                    
                </param>
                <throws>
                    MathIllegalArgumentException if the input data array is not
                      rectangular with at least two rows and one column.                    
                </throws>
                <throws>
                    NotStrictlyPositiveException if the input data array is not
                      rectangular with at least one row and one column.                    
                </throws>
            </javadoc>
            <method name="Covariance" type="constructor" line="69">
                <params>
                    <param name="data" type="double[][]"/>
                </params>
            </method>
            <javadoc line="72">
                Create a covariance matrix from a matrix whose columns
                  represent covariates.
                  &lt;p&gt;The &lt;code&gt;biasCorrected&lt;/code&gt; parameter determines whether or not
                  covariance estimates are bias-corrected.&lt;/p&gt;
                  &lt;p&gt;The matrix must have at least one column and two rows&lt;/p&gt;                
                <param>
                    matrix matrix with columns representing covariates                    
                </param>
                <param>
                    biasCorrected true means covariances are bias-corrected                    
                </param>
                <throws>
                    MathIllegalArgumentException if the input matrix does not have
                      at least two rows and one column                    
                </throws>
            </javadoc>
            <method name="Covariance" type="constructor" line="83">
                <params>
                    <param name="matrix" type="RealMatrix"/>
                    <param name="biasCorrected" type="boolean"/>
                </params>
            </method>
            <javadoc line="88">
                Create a covariance matrix from a matrix whose columns
                  represent covariates.
                  &lt;p&gt;The matrix must have at least one column and two rows&lt;/p&gt;                
                <param>
                    matrix matrix with columns representing covariates                    
                </param>
                <throws>
                    MathIllegalArgumentException if the input matrix does not have
                      at least two rows and one column                    
                </throws>
            </javadoc>
            <method name="Covariance" type="constructor" line="96">
                <params>
                    <param name="matrix" type="RealMatrix"/>
                </params>
            </method>
            <javadoc line="99">
                Returns the covariance matrix                
                <return>
                    covariance matrix                    
                </return>
            </javadoc>
            <method name="getCovarianceMatrix" type="RealMatrix" line="103"/>
            <javadoc line="106">
                Returns the number of observations (length of covariate vectors)                
                <return>
                    number of observations                    
                </return>
            </javadoc>
            <method name="getN" type="int" line="110"/>
            <javadoc line="113">
                Compute a covariance matrix from a matrix whose columns represent
                  covariates.                
                <param>
                    matrix input matrix (must have at least one column and two rows)                    
                </param>
                <param>
                    biasCorrected determines whether or not covariance estimates are bias-corrected                    
                </param>
                <return>
                    covariance matrix                    
                </return>
                <throws>
                    MathIllegalArgumentException if the matrix does not contain sufficient data                    
                </throws>
            </javadoc>
            <method name="computeCovarianceMatrix" type="RealMatrix" line="121">
                <params>
                    <param name="matrix" type="RealMatrix"/>
                    <param name="biasCorrected" type="boolean"/>
                </params>
                <declaration name="dimension" type="int" line="122"/>
                <declaration name="variance" type="Variance" line="123"/>
                <declaration name="outMatrix" type="RealMatrix" line="124"/>
                <scope line="125">
                    <scope line="126">
                        <declaration name="cov" type="double" line="127"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="135">
                Create a covariance matrix from a matrix whose columns represent
                  covariates. Covariances are computed using the bias-corrected formula.                
                <param>
                    matrix input matrix (must have at least one column and two rows)                    
                </param>
                <return>
                    covariance matrix                    
                </return>
                <throws>
                    MathIllegalArgumentException if matrix does not contain sufficient data                    
                </throws>
                <see>
                    #Covariance                    
                </see>
            </javadoc>
            <method name="computeCovarianceMatrix" type="RealMatrix" line="143">
                <params>
                    <param name="matrix" type="RealMatrix"/>
                </params>
            </method>
            <javadoc line="146">
                Compute a covariance matrix from a rectangular array whose columns represent
                  covariates.                
                <param>
                    data input array (must have at least one column and two rows)                    
                </param>
                <param>
                    biasCorrected determines whether or not covariance estimates are bias-corrected                    
                </param>
                <return>
                    covariance matrix                    
                </return>
                <throws>
                    MathIllegalArgumentException if the data array does not contain sufficient
                      data                    
                </throws>
                <throws>
                    NotStrictlyPositiveException if the input data array is not
                      rectangular with at least one row and one column.                    
                </throws>
            </javadoc>
            <method name="computeCovarianceMatrix" type="RealMatrix" line="157">
                <params>
                    <param name="data" type="double[][]"/>
                    <param name="biasCorrected" type="boolean"/>
                </params>
            </method>
            <javadoc line="160">
                Create a covariance matrix from a rectangular array whose columns represent
                  covariates. Covariances are computed using the bias-corrected formula.                
                <param>
                    data input array (must have at least one column and two rows)                    
                </param>
                <return>
                    covariance matrix                    
                </return>
                <throws>
                    MathIllegalArgumentException if the data array does not contain sufficient data                    
                </throws>
                <throws>
                    NotStrictlyPositiveException if the input data array is not
                      rectangular with at least one row and one column.                    
                </throws>
                <see>
                    #Covariance                    
                </see>
            </javadoc>
            <method name="computeCovarianceMatrix" type="RealMatrix" line="170">
                <params>
                    <param name="data" type="double[][]"/>
                </params>
            </method>
            <javadoc line="173">
                Computes the covariance between the two arrays.
                  &lt;p&gt;Array lengths must match and the common length must be at least 2.&lt;/p&gt;                
                <param>
                    xArray first data array                    
                </param>
                <param>
                    yArray second data array                    
                </param>
                <param>
                    biasCorrected if true, returned value will be bias-corrected                    
                </param>
                <return>
                    returns the covariance for the two arrays                    
                </return>
                <throws>
                    MathIllegalArgumentException if the arrays lengths do not match or
                      there is insufficient data                    
                </throws>
            </javadoc>
            <method name="covariance" type="double" line="183">
                <params>
                    <param name="xArray" type="double[]"/>
                    <param name="yArray" type="double[]"/>
                    <param name="biasCorrected" type="boolean"/>
                </params>
                <declaration name="mean" type="Mean" line="184"/>
                <declaration name="result" type="double" line="185"/>
                <declaration name="length" type="int" line="186"/>
                <scope line="187"/>
                <scope line="190"/>
                <scope line="193">
                    <declaration name="xMean" type="double" line="194"/>
                    <declaration name="yMean" type="double" line="195"/>
                    <scope line="196">
                        <declaration name="xDev" type="double" line="197"/>
                        <declaration name="yDev" type="double" line="198"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="204">
                Computes the covariance between the two arrays, using the bias-corrected
                  formula.
                  &lt;p&gt;Array lengths must match and the common length must be at least 2.&lt;/p&gt;                
                <param>
                    xArray first data array                    
                </param>
                <param>
                    yArray second data array                    
                </param>
                <return>
                    returns the covariance for the two arrays                    
                </return>
                <throws>
                    MathIllegalArgumentException if the arrays lengths do not match or
                      there is insufficient data                    
                </throws>
            </javadoc>
            <method name="covariance" type="double" line="214">
                <params>
                    <param name="xArray" type="double[]"/>
                    <param name="yArray" type="double[]"/>
                </params>
            </method>
            <javadoc line="217">
                Throws MathIllegalArgumentException if the matrix does not have at least
                  one column and two rows.                
                <param>
                    matrix matrix to check                    
                </param>
                <throws>
                    MathIllegalArgumentException if the matrix does not contain sufficient data
                      to compute covariance                    
                </throws>
            </javadoc>
            <method name="checkSufficientData" type="void" line="224">
                <params>
                    <param name="matrix" type="RealMatrix"/>
                </params>
                <declaration name="nRows" type="int" line="225"/>
                <declaration name="nCols" type="int" line="226"/>
                <scope line="227"/>
            </method>
        </class>
    </source>