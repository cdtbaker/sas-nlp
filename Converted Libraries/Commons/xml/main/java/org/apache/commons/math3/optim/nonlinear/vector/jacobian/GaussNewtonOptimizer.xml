<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optim.nonlinear.vector.jacobian">
        <import package="org.apache.commons.math3.exception.ConvergenceException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.MathInternalError"/>
        <import package="org.apache.commons.math3.exception.MathUnsupportedOperationException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.linear.ArrayRealVector"/>
        <import package="org.apache.commons.math3.linear.BlockRealMatrix"/>
        <import package="org.apache.commons.math3.linear.DecompositionSolver"/>
        <import package="org.apache.commons.math3.linear.LUDecomposition"/>
        <import package="org.apache.commons.math3.linear.QRDecomposition"/>
        <import package="org.apache.commons.math3.linear.RealMatrix"/>
        <import package="org.apache.commons.math3.linear.SingularMatrixException"/>
        <import package="org.apache.commons.math3.optim.ConvergenceChecker"/>
        <import package="org.apache.commons.math3.optim.PointVectorValuePair"/>
        <class name="GaussNewtonOptimizer" line="34">
            <extends class="AbstractLeastSquaresOptimizer"/>
            <javadoc line="34">
                Gauss-Newton least-squares solver.
                  &lt;br/&gt;
                  Constraints are not supported: the call to{@link #optimize(OptimizationData[]) optimize} will throw{@link MathUnsupportedOperationException} if bounds are passed to it.
                  &lt;p&gt;
                  This class solve a least-square problem by solving the normal equations
                  of the linearized problem at each iteration. Either LU decomposition or
                  QR decomposition can be used to solve the normal equations. LU decomposition
                  is faster but QR decomposition is more robust for difficult problems.
                  &lt;/p&gt;                
                <version>
                    $Id: GaussNewtonOptimizer.java 1515242 2013-08-18 23:27:29Z erans $                    
                </version>
                <since>
                    2.0                    
                </since>
                <deprecated>
                    All classes and interfaces in this package are deprecated.
                      The optimizers that were provided here were moved to the{@link org.apache.commons.math3.fitting.leastsquares} package
                      (cf. MATH-1008).                    
                </deprecated>
            </javadoc>
            <declaration name="useLU" type="boolean" line="57"/>
            <javadoc line="57">
                Indicator for using LU decomposition.                
            </javadoc>
            <javadoc line="60">
                Simple constructor with default settings.
                  The normal equations will be solved using LU decomposition.                
                <param>
                    checker Convergence checker.                    
                </param>
            </javadoc>
            <method name="GaussNewtonOptimizer" type="constructor" line="66">
                <params>
                    <param name="checker" type="ConvergenceChecker&lt;PointVectorValuePair&gt;"/>
                </params>
            </method>
            <javadoc line="70">
                @param useLU If {@code true}, the normal equations will be solved
                  using LU decomposition, otherwise they will be solved using QR
                  decomposition.                
                <param>
                    checker Convergence checker.                    
                </param>
            </javadoc>
            <method name="GaussNewtonOptimizer" type="constructor" line="77">
                <params>
                    <param name="useLU" type="boolean"/>
                    <param name="checker" type="ConvergenceChecker&lt;PointVectorValuePair&gt;"/>
                </params>
            </method>
            <javadoc line="82">
                {@inheritDoc}                
            </javadoc>
            <method name="doOptimize" type="PointVectorValuePair" line="84">
                <comment line="91">
                    Computation will be useless without a checker (see &quot;for-loop&quot;).                    
                </comment>
                <comment line="97">
                    Number of observed data.                    
                </comment>
                <comment line="100">
                    Diagonal of the weight matrix.                    
                </comment>
                <comment line="109">
                    iterate until convergence is reached                    
                </comment>
                <comment line="114">
                    evaluate the objective function and its jacobian                    
                </comment>
                <comment line="116">
                    Value of the objective function at &quot;currentPoint&quot;.                    
                </comment>
                <comment line="122">
                    build the linear problem                    
                </comment>
                <comment line="131">
                    compute the normal equation                    
                </comment>
                <comment line="137">
                    build the contribution matrix for measurement i                    
                </comment>
                <comment line="147">
                    Check convergence.                    
                </comment>
                <comment line="157">
                    solve the linearized least squares problem                    
                </comment>
                <comment line="163">
                    update the estimated parameters                    
                </comment>
                <comment line="171">
                    Must never happen.                    
                </comment>
                <declaration name="checker" type="ConvergenceChecker&amp;lt;PointVectorValuePair&amp;gt;" line="87"/>
                <scope line="91"/>
                <declaration name="targetValues" type="double[]" line="95"/>
                <declaration name="nR" type="int" line="96"/>
                <declaration name="weightMatrix" type="RealMatrix" line="98"/>
                <declaration name="residualsWeights" type="double[]" line="100"/>
                <scope line="101"/>
                <declaration name="currentPoint" type="double[]" line="105"/>
                <declaration name="nC" type="int" line="106"/>
                <declaration name="current" type="PointVectorValuePair" line="109"/>
                <scope line="110">
                    <declaration name="previous" type="PointVectorValuePair" line="114"/>
                    <declaration name="currentObjective" type="double[]" line="116"/>
                    <declaration name="currentResiduals" type="double[]" line="117"/>
                    <declaration name="weightedJacobian" type="RealMatrix" line="118"/>
                    <declaration name="b" type="double[]" line="122"/>
                    <declaration name="a" type="double[][]" line="123"/>
                    <scope line="124">
                        <declaration name="grad" type="double[]" line="126"/>
                        <declaration name="weight" type="double" line="127"/>
                        <declaration name="residual" type="double" line="128"/>
                        <declaration name="wr" type="double" line="131"/>
                        <scope line="132"/>
                        <scope line="137">
                            <declaration name="ak" type="double[]" line="138"/>
                            <declaration name="wgk" type="double" line="139"/>
                            <scope line="140"/>
                        </scope>
                    </scope>
                    <scope line="147">
                        <scope line="149"/>
                    </scope>
                    <scope line="155">
                        <declaration name="mA" type="RealMatrix" line="157"/>
                        <declaration name="solver" type="DecompositionSolver" line="158"/>
                        <declaration name="dX" type="double[]" line="161"/>
                        <scope line="163"/>
                    </scope>
                    <scope line="166"/>
                </scope>
            </method>
            <javadoc line="174">
                @throws MathUnsupportedOperationException if bounds were passed to the{@link #optimize(OptimizationData[]) optimize} method.                
            </javadoc>
            <method name="checkParameters" type="void" line="178">
                <scope line="180"/>
            </method>
        </class>
    </source>