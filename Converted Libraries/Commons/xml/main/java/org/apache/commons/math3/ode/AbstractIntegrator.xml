<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.ode">
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collection"/>
        <import package="java.util.Collections"/>
        <import package="java.util.Comparator"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="java.util.SortedSet"/>
        <import package="java.util.TreeSet"/>
        <import package="org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver"/>
        <import package="org.apache.commons.math3.analysis.solvers.UnivariateSolver"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MaxCountExceededException"/>
        <import package="org.apache.commons.math3.exception.NoBracketingException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.ode.events.EventHandler"/>
        <import package="org.apache.commons.math3.ode.events.EventState"/>
        <import package="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator"/>
        <import package="org.apache.commons.math3.ode.sampling.StepHandler"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.Incrementor"/>
        <import package="org.apache.commons.math3.util.Precision"/>
        <class name="AbstractIntegrator" line="24">
            <implements interface="FirstOrderIntegrator"/>
            <javadoc line="24">
                Base class managing common boilerplate for all integrators.                
                <version>
                    $Id: AbstractIntegrator.java 1463684 2013-04-02 19:04:13Z luc $                    
                </version>
                <since>
                    2.0                    
                </since>
            </javadoc>
            <declaration name="stepHandlers" type="Collection&lt;StepHandler&gt;" line="30"/>
            <javadoc line="30">
                Step handler.                
            </javadoc>
            <declaration name="stepStart" type="double" line="34"/>
            <javadoc line="34">
                Current step start time.                
            </javadoc>
            <declaration name="stepSize" type="double" line="38"/>
            <javadoc line="38">
                Current stepsize.                
            </javadoc>
            <declaration name="isLastStep" type="boolean" line="42"/>
            <javadoc line="42">
                Indicator for last step.                
            </javadoc>
            <declaration name="resetOccurred" type="boolean" line="46"/>
            <javadoc line="46">
                Indicator that a state or derivative reset was triggered by some event.                
            </javadoc>
            <declaration name="eventsStates" type="Collection&lt;EventState&gt;" line="50"/>
            <javadoc line="50">
                Events states.                
            </javadoc>
            <declaration name="statesInitialized" type="boolean" line="54"/>
            <javadoc line="54">
                Initialization indicator of events states.                
            </javadoc>
            <declaration name="name" type="String" line="58"/>
            <javadoc line="58">
                Name of the method.                
            </javadoc>
            <declaration name="evaluations" type="Incrementor" line="62"/>
            <javadoc line="62">
                Counter for number of evaluations.                
            </javadoc>
            <declaration name="expandable" type="ExpandableStatefulODE" line="66"/>
            <javadoc line="66">
                Differential equations to integrate.                
            </javadoc>
            <javadoc line="70">
                Build an instance.                
                <param>
                    name name of the method                    
                </param>
            </javadoc>
            <method name="AbstractIntegrator" type="constructor" line="74">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <javadoc line="85">
                Build an instance with a null name.                
            </javadoc>
            <method name="AbstractIntegrator" type="constructor" line="88"/>
            <javadoc line="91">
                {@inheritDoc}                
            </javadoc>
            <method name="getName" type="String" line="94"/>
            <javadoc line="97">
                {@inheritDoc}                
            </javadoc>
            <method name="addStepHandler" type="void" line="100">
                <params>
                    <param name="handler" type="StepHandler"/>
                </params>
            </method>
            <javadoc line="103">
                {@inheritDoc}                
            </javadoc>
            <method name="getStepHandlers" type="Collection<StepHandler>" line="106"/>
            <javadoc line="109">
                {@inheritDoc}                
            </javadoc>
            <method name="clearStepHandlers" type="void" line="112"/>
            <javadoc line="115">
                {@inheritDoc}                
            </javadoc>
            <method name="addEventHandler" type="void" line="118">
                <params>
                    <param name="handler" type="EventHandler"/>
                    <param name="maxCheckInterval" type="double"/>
                    <param name="convergence" type="double"/>
                    <param name="maxIterationCount" type="int"/>
                </params>
            </method>
            <javadoc line="121">
                {@inheritDoc}                
            </javadoc>
            <method name="addEventHandler" type="void" line="124">
                <params>
                    <param name="handler" type="EventHandler"/>
                    <param name="maxCheckInterval" type="double"/>
                    <param name="convergence" type="double"/>
                    <param name="maxIterationCount" type="int"/>
                    <param name="solver" type="UnivariateSolver"/>
                </params>
            </method>
            <javadoc line="127">
                {@inheritDoc}                
            </javadoc>
            <method name="getEventHandlers" type="Collection<EventHandler>" line="130">
                <declaration name="list" type="List&lt;EventHandler&gt;" line="131"/>
                <scope line="132"/>
            </method>
            <javadoc line="137">
                {@inheritDoc}                
            </javadoc>
            <method name="clearEventHandlers" type="void" line="140"/>
            <javadoc line="143">
                {@inheritDoc}                
            </javadoc>
            <method name="getCurrentStepStart" type="double" line="146"/>
            <javadoc line="149">
                {@inheritDoc}                
            </javadoc>
            <method name="getCurrentSignedStepsize" type="double" line="152"/>
            <javadoc line="155">
                {@inheritDoc}                
            </javadoc>
            <method name="setMaxEvaluations" type="void" line="158">
                <params>
                    <param name="maxEvaluations" type="int"/>
                </params>
            </method>
            <javadoc line="161">
                {@inheritDoc}                
            </javadoc>
            <method name="getMaxEvaluations" type="int" line="164"/>
            <javadoc line="167">
                {@inheritDoc}                
            </javadoc>
            <method name="getEvaluations" type="int" line="170"/>
            <javadoc line="173">
                Prepare the start of an integration.                
                <param>
                    t0 start value of the independent <i>time</i> variable                    
                </param>
                <param>
                    y0 array containing the start value of the state vector                    
                </param>
                <param>
                    t target time for the integration                    
                </param>
            </javadoc>
            <method name="initIntegration" type="void" line="179">
                <params>
                    <param name="t0" type="double"/>
                    <param name="y0" type="double[]"/>
                    <param name="t" type="double"/>
                </params>
                <scope line="181"/>
                <scope line="184"/>
            </method>
            <javadoc line="189">
                Set the equations.                
                <param>
                    equations equations to set                    
                </param>
            </javadoc>
            <method name="setEquations" type="void" line="193">
                <params>
                    <param name="equations" type="ExpandableStatefulODE"/>
                </params>
            </method>
            <javadoc line="196">
                Get the differential equations to integrate.                
                <return>
                    differential equations to integrate                    
                </return>
                <since>
                    3.2                    
                </since>
            </javadoc>
            <method name="getExpandable" type="ExpandableStatefulODE" line="201"/>
            <javadoc line="204">
                Get the evaluations counter.                
                <return>
                    evaluations counter                    
                </return>
                <since>
                    3.2                    
                </since>
            </javadoc>
            <method name="getEvaluationsCounter" type="Incrementor" line="209"/>
            <javadoc line="212">
                {@inheritDoc}                
            </javadoc>
            <method name="integrate" type="double" line="215">
                <params>
                    <param name="equations" type="FirstOrderDifferentialEquations"/>
                    <param name="t0" type="double"/>
                    <param name="y0" type="double[]"/>
                    <param name="t" type="double"/>
                    <param name="y" type="double[]"/>
                </params>
                <scope line="216"/>
                <scope line="219"/>
                <declaration name="expandableODE" type="ExpandableStatefulODE" line="222"/>
            </method>
            <method name="integrate" type="void" line="229"/>
            <javadoc line="229">
                Integrate a set of differential equations up to the given time.
                  &lt;p&gt;This method solves an Initial Value Problem (IVP).&lt;/p&gt;
                  &lt;p&gt;The set of differential equations is composed of a main set, which
                  can be extended by some sets of secondary equations. The set of
                  equations must be already set up with initial time and partial states.
                  At integration completion, the final time and partial states will be
                  available in the same object.&lt;/p&gt;
                  &lt;p&gt;Since this method stores some internal state variables made
                  available in its public interface during integration ({@link #getCurrentSignedStepsize()}), it is &lt;em&gt;not&lt;/em&gt; thread-safe.&lt;/p&gt;                
                <param>
                    equations complete set of differential equations to integrate                    
                </param>
                <param>
                    t target time for the integration
                      (can be set to a value smaller than <code>t0</code> for backward integration)                    
                </param>
                <exception>
                    NumberIsTooSmallException if integration step is too small                    
                </exception>
                <throws>
                    DimensionMismatchException if the dimension of the complete state does not
                      match the complete equations sets dimension                    
                </throws>
                <exception>
                    MaxCountExceededException if the number of functions evaluations is exceeded                    
                </exception>
                <exception>
                    NoBracketingException if the location of an event cannot be bracketed                    
                </exception>
            </javadoc>
            <javadoc line="249">
                Compute the derivatives and check the number of evaluations.                
                <param>
                    t current value of the independent <I>time</I> variable                    
                </param>
                <param>
                    y array containing the current value of the state vector                    
                </param>
                <param>
                    yDot placeholder array where to put the time derivative of the state vector                    
                </param>
                <exception>
                    MaxCountExceededException if the number of functions evaluations is exceeded                    
                </exception>
                <exception>
                    DimensionMismatchException if arrays dimensions do not match equations settings                    
                </exception>
            </javadoc>
            <method name="computeDerivatives" type="void" line="257">
                <params>
                    <param name="t" type="double"/>
                    <param name="y" type="double[]"/>
                    <param name="yDot" type="double[]"/>
                </params>
            </method>
            <javadoc line="261">
                Set the stateInitialized flag.
                  &lt;p&gt;This method must be called by integrators with the value{@code false} before they start integration, so a proper lazy
                  initialization is done automatically on the first step.&lt;/p&gt;                
                <param>
                    stateInitialized new value for the flag                    
                </param>
                <since>
                    2.2                    
                </since>
            </javadoc>
            <method name="setStateInitialized" type="void" line="268">
                <params>
                    <param name="stateInitialized" type="boolean"/>
                </params>
            </method>
            <javadoc line="271">
                Accept a step, triggering events and step handlers.                
                <param>
                    interpolator step interpolator                    
                </param>
                <param>
                    y state vector at step end time, must be reset if an event
                      asks for resetting or if an events stops integration during the step                    
                </param>
                <param>
                    yDot placeholder array where to put the time derivative of the state vector                    
                </param>
                <param>
                    tEnd final integration time                    
                </param>
                <return>
                    time at end of step                    
                </return>
                <exception>
                    MaxCountExceededException if the interpolator throws one because
                      the number of functions evaluations is exceeded                    
                </exception>
                <exception>
                    NoBracketingException if the location of an event cannot be bracketed                    
                </exception>
                <exception>
                    DimensionMismatchException if arrays dimensions do not match equations settings                    
                </exception>
                <since>
                    2.2                    
                </since>
            </javadoc>
            <method name="acceptStep" type="double" line="285">
                <params>
                    <param name="interpolator" type="AbstractStepInterpolator"/>
                    <param name="y" type="double[]"/>
                    <param name="yDot" type="double[]"/>
                    <param name="tEnd" type="double"/>
                </params>
                <declaration name="previousT" type="double" line="286"/>
                <declaration name="currentT" type="double" line="287"/>
                <scope line="288">
                    <scope line="289"/>
                </scope>
                <declaration name="orderingSign" type="int" line="294"/>
                <anonymous_class line="295">
                    <javadoc line="296">
                        {@inheritDoc}                        
                    </javadoc>
                    <method name="compare" type="int" line="299">
                        <params>
                            <param name="es0" type="EventState"/>
                            <param name="es1" type="EventState"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="occuringEvents" type="SortedSet&lt;EventState&gt;" line="295"/>
                <scope line="304">
                    <scope line="305"/>
                </scope>
                <scope line="309">
                    <declaration name="iterator" type="Iterator&lt;EventState&gt;" line="310"/>
                    <declaration name="currentEvent" type="EventState" line="311"/>
                    <declaration name="eventT" type="double" line="313"/>
                    <declaration name="eventYPrimary" type="double[]" line="317"/>
                    <declaration name="eventYComplete" type="double[]" line="318"/>
                    <declaration name="index" type="int" line="320"/>
                    <scope line="321"/>
                    <scope line="324"/>
                    <scope line="328"/>
                    <scope line="331"/>
                    <declaration name="needReset" type="boolean" line="335"/>
                    <scope line="336"/>
                    <scope line="339"/>
                    <scope line="349"/>
                </scope>
                <declaration name="currentY" type="double[]" line="354"/>
                <scope line="355"/>
                <scope line="360"/>
            </method>
            <javadoc line="365">
                Check the integration span.                
                <param>
                    equations set of differential equations                    
                </param>
                <param>
                    t target time for the integration                    
                </param>
                <exception>
                    NumberIsTooSmallException if integration span is too small                    
                </exception>
                <exception>
                    DimensionMismatchException if adaptive step size integrators
                      tolerance arrays dimensions are not compatible with equations settings                    
                </exception>
            </javadoc>
            <method name="sanityChecks" type="void" line="373">
                <params>
                    <param name="equations" type="ExpandableStatefulODE"/>
                    <param name="t" type="double"/>
                </params>
                <declaration name="threshold" type="double" line="374"/>
                <declaration name="dt" type="double" line="375"/>
                <scope line="376"/>
            </method>
        </class>
    </source>