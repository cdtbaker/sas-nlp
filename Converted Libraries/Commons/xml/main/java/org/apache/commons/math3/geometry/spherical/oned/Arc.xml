<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.spherical.oned">
        <import package="org.apache.commons.math3.exception.NumberIsTooLargeException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.geometry.partitioning.Region.Location"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <import package="org.apache.commons.math3.util.Precision"/>
        <class name="Arc" line="27">
            <javadoc line="27">
                This class represents an arc on a circle.                
                <see>
                    ArcsSet                    
                </see>
                <version>
                    $Id: Arc.java 1554654 2014-01-01 17:30:06Z luc $                    
                </version>
                <since>
                    3.3                    
                </since>
            </javadoc>
            <declaration name="lower" type="double" line="34"/>
            <javadoc line="34">
                The lower angular bound of the arc.                
            </javadoc>
            <declaration name="upper" type="double" line="37"/>
            <javadoc line="37">
                The upper angular bound of the arc.                
            </javadoc>
            <declaration name="middle" type="double" line="40"/>
            <javadoc line="40">
                Middle point of the arc.                
            </javadoc>
            <declaration name="tolerance" type="double" line="43"/>
            <javadoc line="43">
                Tolerance below which angles are considered identical.                
            </javadoc>
            <javadoc line="46">
                Simple constructor.
                  &lt;p&gt;
                  If either {@code lower} is equals to {@code upper} or
                  the interval exceeds \( 2 \pi \), the arc is considered
                  to be the full circle and its initial defining boundaries
                  will be forgotten. {@code lower} is not allowed to be
                  greater than {@code upper} (an exception is thrown in this case).{@code lower} will be canonicalized between 0 and \( 2 \pi \), and
                  upper shifted accordingly, so the {@link #getInf()} and {@link #getSup()}may not return the value used at instance construction.
                  &lt;/p&gt;                
                <param>
                    lower lower angular bound of the arc                    
                </param>
                <param>
                    upper upper angular bound of the arc                    
                </param>
                <param>
                    tolerance tolerance below which angles are considered identical                    
                </param>
                <exception>
                    NumberIsTooLargeException if lower is greater than upper                    
                </exception>
            </javadoc>
            <method name="Arc" type="constructor" line="63">
                <params>
                    <param name="lower" type="double"/>
                    <param name="upper" type="double"/>
                    <param name="tolerance" type="double"/>
                </params>
                <comment line="67">
                    the arc must cover the whole circle                    
                </comment>
                <scope line="65"/>
                <scope line="70"/>
                <scope line="74"/>
            </method>
            <javadoc line="80">
                Get the lower angular bound of the arc.                
                <return>
                    lower angular bound of the arc,
                      always between 0 and \( 2 \pi \)                    
                </return>
            </javadoc>
            <method name="getInf" type="double" line="84"/>
            <javadoc line="88">
                Get the upper angular bound of the arc.                
                <return>
                    upper angular bound of the arc,
                      always between {@link #getInf()} and {@link #getInf()} \( + 2 \pi \)                    
                </return>
            </javadoc>
            <method name="getSup" type="double" line="92"/>
            <javadoc line="96">
                Get the angular size of the arc.                
                <return>
                    angular size of the arc                    
                </return>
            </javadoc>
            <method name="getSize" type="double" line="99"/>
            <javadoc line="103">
                Get the barycenter of the arc.                
                <return>
                    barycenter of the arc                    
                </return>
            </javadoc>
            <method name="getBarycenter" type="double" line="106"/>
            <javadoc line="110">
                Get the tolerance below which angles are considered identical.                
                <return>
                    tolerance below which angles are considered identical                    
                </return>
            </javadoc>
            <method name="getTolerance" type="double" line="113"/>
            <javadoc line="117">
                Check a point with respect to the arc.                
                <param>
                    point point to check                    
                </param>
                <return>
                    a code representing the point status: either {@link Location#INSIDE}, {@link Location#OUTSIDE} or {@link Location#BOUNDARY}                    
                </return>
            </javadoc>
            <method name="checkPoint" type="Location" line="122">
                <params>
                    <param name="point" type="double"/>
                </params>
                <declaration name="normalizedPoint" type="double" line="123"/>
                <scope line="124"/>
                <scope line="126"/>
                <scope line="128"/>
            </method>
        </class>
    </source>