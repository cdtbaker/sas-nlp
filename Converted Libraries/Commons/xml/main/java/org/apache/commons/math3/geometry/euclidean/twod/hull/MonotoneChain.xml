<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.euclidean.twod.hull">
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collection"/>
        <import package="java.util.Collections"/>
        <import package="java.util.Comparator"/>
        <import package="java.util.List"/>
        <import package="org.apache.commons.math3.geometry.euclidean.twod.Line"/>
        <import package="org.apache.commons.math3.geometry.euclidean.twod.Vector2D"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <class name="MonotoneChain" line="29">
            <extends class="AbstractConvexHullGenerator2D"/>
            <javadoc line="29">
                Implements Andrew&apos;s monotone chain method to generate the convex hull of a finite set of
                  points in the two-dimensional euclidean space.
                  &lt;p&gt;
                  The runtime complexity is O(n log n), with n being the number of input points. If the
                  point set is already sorted (by x-coordinate), the runtime complexity is O(n).
                  &lt;p&gt;
                  The implementation is not sensitive to collinear points on the hull. The parameter{@code includeCollinearPoints} allows to control the behavior with regard to collinear points.
                  If {@code true}, all points on the boundary of the hull will be added to the hull vertices,
                  otherwise only the extreme points will be present. By default, collinear points are not added
                  as hull vertices.
                  &lt;p&gt;
                  The {@code tolerance} parameter (default: 1e-10) is used as epsilon criteria to determine
                  identical and collinear points.                
                <see>
                    &lt;a href=&quot;http://en.wikibooks.org/wiki/Algorithm_Implementation/Geometry/Convex_hull/Monotone_chain&quot;&gt;
                      Andrew&apos;s monotone chain algorithm (Wikibooks)&lt;/a&gt;                    
                </see>
                <since>
                    3.3                    
                </since>
                <version>
                    $Id: MonotoneChain.java 1568752 2014-02-16 12:19:51Z tn $                    
                </version>
            </javadoc>
            <javadoc line="52">
                Create a new MonotoneChain instance.                
            </javadoc>
            <method name="MonotoneChain" type="constructor" line="55"/>
            <javadoc line="59">
                Create a new MonotoneChain instance.                
                <param>
                    includeCollinearPoints whether collinear points shall be added as hull vertices                    
                </param>
            </javadoc>
            <method name="MonotoneChain" type="constructor" line="63">
                <params>
                    <param name="includeCollinearPoints" type="boolean"/>
                </params>
            </method>
            <javadoc line="67">
                Create a new MonotoneChain instance.                
                <param>
                    includeCollinearPoints whether collinear points shall be added as hull vertices                    
                </param>
                <param>
                    tolerance tolerance below which points are considered identical                    
                </param>
            </javadoc>
            <method name="MonotoneChain" type="constructor" line="72">
                <params>
                    <param name="includeCollinearPoints" type="boolean"/>
                    <param name="tolerance" type="double"/>
                </params>
            </method>
            <method name="findHullVertices" type="Collection&lt;Vector2D&gt;" line="77">
                <params>
                    <param name="points" type="Collection&lt;Vector2D&gt;"/>
                </params>
                <comment line="82">
                    sort the points in increasing order on the x-axis                    
                </comment>
                <comment line="94">
                    build lower hull                    
                </comment>
                <comment line="100">
                    build upper hull                    
                </comment>
                <comment line="107">
                    concatenate the lower and upper hulls
                     the last point of each list is omitted as it is repeated at the beginning of the other list                    
                </comment>
                <comment line="117">
                    special case: if the lower and upper hull may contain only 1 point if all are identical                    
                </comment>
                <declaration name="pointsSortedByXAxis" type="List&amp;lt;Vector2D&amp;gt;" line="79"/>
                <anonymous_class line="82">
                    <method name="compare" type="int" line="83">
                        <params>
                            <param name="o1" type="Vector2D"/>
                            <param name="o2" type="Vector2D"/>
                        </params>
                        <declaration name="diff" type="int" line="84"/>
                        <scope line="85"/>
                        <scope line="87"/>
                    </method>
                </anonymous_class>
                <declaration name="lowerHull" type="List&amp;lt;Vector2D&amp;gt;" line="94"/>
                <scope line="95"/>
                <declaration name="upperHull" type="List&amp;lt;Vector2D&amp;gt;" line="100"/>
                <scope line="101">
                    <declaration name="p" type="Vector2D" line="102"/>
                </scope>
                <declaration name="hullVertices" type="List&amp;lt;Vector2D&amp;gt;" line="108"/>
                <scope line="109"/>
                <scope line="112"/>
                <scope line="117"/>
            </method>
            <javadoc line="124">
                Update the partial hull with the current point.                
                <param>
                    point the current point                    
                </param>
                <param>
                    hull the partial hull                    
                </param>
            </javadoc>
            <method name="updateHull" type="void" line="130">
                <params>
                    <param name="point" type="Vector2D"/>
                    <param name="hull" type="List&lt;Vector2D&gt;"/>
                </params>
                <comment line="135">
                    ensure that we do not add an identical point                    
                </comment>
                <comment line="149">
                    the point is collinear to the line (p1, p2)                    
                </comment>
                <comment line="153">
                    the point is assumed to be identical to either p1 or p2                    
                </comment>
                <declaration name="tolerance" type="double" line="131"/>
                <scope line="133">
                    <declaration name="p1" type="Vector2D" line="135"/>
                    <scope line="136"/>
                </scope>
                <scope line="141">
                    <declaration name="size" type="int" line="142"/>
                    <declaration name="p1" type="Vector2D" line="143"/>
                    <declaration name="p2" type="Vector2D" line="144"/>
                    <declaration name="offset" type="double" line="146"/>
                    <scope line="147">
                        <declaration name="distanceToCurrent" type="double" line="150"/>
                        <scope line="151"/>
                        <declaration name="distanceToLast" type="double" line="156"/>
                        <scope line="157">
                            <declaration name="index" type="int" line="158"/>
                        </scope>
                        <scope line="160">
                            <scope line="161"/>
                        </scope>
                    </scope>
                    <scope line="167"/>
                    <scope line="169"/>
                </scope>
            </method>
        </class>
    </source>