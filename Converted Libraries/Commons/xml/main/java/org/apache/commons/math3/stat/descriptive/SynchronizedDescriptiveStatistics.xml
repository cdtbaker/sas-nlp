<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.descriptive">
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <class name="SynchronizedDescriptiveStatistics" line="5">
            <extends class="DescriptiveStatistics"/>
            <javadoc line="5">
                Implementation of{@link org.apache.commons.math3.stat.descriptive.DescriptiveStatistics} that
                  is safe to use in a multithreaded environment.  Multiple threads can safely
                  operate on a single instance without causing runtime exceptions due to race
                  conditions.  In effect, this implementation makes modification and access
                  methods atomic operations for a single instance.  That is to say, as one
                  thread is computing a statistic from the instance, no other thread can modify
                  the instance nor compute another statistic.                
                <since>
                    1.2                    
                </since>
                <version>
                    $Id: SynchronizedDescriptiveStatistics.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="17"/>
            <javadoc line="17">
                Serialization UID                
            </javadoc>
            <javadoc line="21">
                Construct an instance with infinite window                
            </javadoc>
            <method name="SynchronizedDescriptiveStatistics" type="constructor" line="24"/>
            <javadoc line="27">
                Construct an instance with finite window                
                <param>
                    window the finite window size.                    
                </param>
                <throws>
                    MathIllegalArgumentException if window size is less than 1 but
                      not equal to {@link #INFINITE_WINDOW}                    
                </throws>
            </javadoc>
            <method name="SynchronizedDescriptiveStatistics" type="constructor" line="33">
                <params>
                    <param name="window" type="int"/>
                </params>
            </method>
            <javadoc line="36">
                A copy constructor. Creates a deep-copy of the {@code original}.                
                <param>
                    original the {@code SynchronizedDescriptiveStatistics} instance to copy                    
                </param>
                <throws>
                    NullArgumentException if original is null                    
                </throws>
            </javadoc>
            <method name="SynchronizedDescriptiveStatistics" type="constructor" line="41">
                <params>
                    <param name="original" type="SynchronizedDescriptiveStatistics"/>
                </params>
            </method>
            <javadoc line="44">
                {@inheritDoc}                
            </javadoc>
            <method name="addValue" type="void" line="47">
                <params>
                    <param name="v" type="double"/>
                </params>
            </method>
            <javadoc line="50">
                {@inheritDoc}                
            </javadoc>
            <method name="apply" type="double" line="53">
                <params>
                    <param name="stat" type="UnivariateStatistic"/>
                </params>
            </method>
            <javadoc line="56">
                {@inheritDoc}                
            </javadoc>
            <method name="clear" type="void" line="59"/>
            <javadoc line="62">
                {@inheritDoc}                
            </javadoc>
            <method name="getElement" type="double" line="65">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <javadoc line="68">
                {@inheritDoc}                
            </javadoc>
            <method name="getN" type="long" line="71"/>
            <javadoc line="74">
                {@inheritDoc}                
            </javadoc>
            <method name="getStandardDeviation" type="double" line="77"/>
            <javadoc line="80">
                {@inheritDoc}                
            </javadoc>
            <method name="getValues" type="double[]" line="83"/>
            <javadoc line="86">
                {@inheritDoc}                
            </javadoc>
            <method name="getWindowSize" type="int" line="89"/>
            <javadoc line="92">
                {@inheritDoc}                
            </javadoc>
            <method name="setWindowSize" type="void" line="95">
                <params>
                    <param name="windowSize" type="int"/>
                </params>
            </method>
            <javadoc line="98">
                {@inheritDoc}                
            </javadoc>
            <method name="toString" type="String" line="101"/>
            <javadoc line="104">
                Returns a copy of this SynchronizedDescriptiveStatistics instance with the
                  same internal state.                
                <return>
                    a copy of this                    
                </return>
            </javadoc>
            <method name="copy" type="SynchronizedDescriptiveStatistics" line="109">
                <declaration name="result" type="SynchronizedDescriptiveStatistics" line="110"/>
            </method>
            <javadoc line="114">
                Copies source to dest.
                  &lt;p&gt;Neither source nor dest can be null.&lt;/p&gt;
                  &lt;p&gt;Acquires synchronization lock on source, then dest before copying.&lt;/p&gt;                
                <param>
                    source SynchronizedDescriptiveStatistics to copy                    
                </param>
                <param>
                    dest SynchronizedDescriptiveStatistics to copy to                    
                </param>
                <throws>
                    NullArgumentException if either source or dest is null                    
                </throws>
            </javadoc>
            <method name="copy" type="void" line="122">
                <params>
                    <param name="source" type="SynchronizedDescriptiveStatistics"/>
                    <param name="dest" type="SynchronizedDescriptiveStatistics"/>
                </params>
                <scope line="125">
                    <scope line="126"/>
                </scope>
            </method>
        </class>
    </source>