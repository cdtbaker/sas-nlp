<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="java.io.Serializable"/>
        <import package="org.apache.commons.math3.Field"/>
        <import package="org.apache.commons.math3.FieldElement"/>
        <import package="org.apache.commons.math3.exception.NoDataException"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalStateException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.util.MathArrays"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <class name="Array2DRowFieldMatrix" line="15">
            <type_params>
                <type_param name="T"/>
            </type_params>
            <extends class="AbstractFieldMatrix">
                <type_params>
                    <type_param name="T"/>
                </type_params>
            </extends>
            <implements interface="Serializable"/>
            <javadoc line="15">
                Implementation of FieldMatrix&lt;T&gt; using a {@link FieldElement}[][] array to store entries.
                  &lt;p&gt;
                  As specified in the {@link FieldMatrix} interface, matrix element indexing
                  is 0-based -- e.g., &lt;code&gt;getEntry(0, 0)&lt;/code&gt;
                  returns the element in the first row, first column of the matrix.&lt;/li&gt;&lt;/ul&gt;
                  &lt;/p&gt;                
                <param>
                    <T>
                      the type of the field elements                    
                </param>
                <version>
                    $Id: Array2DRowFieldMatrix.java 1449528 2013-02-24 19:06:20Z luc $                    
                </version>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="27"/>
            <javadoc line="27">
                Serializable version identifier                
            </javadoc>
            <declaration name="data" type="T[][]" line="31"/>
            <javadoc line="31">
                Entries of the matrix                
            </javadoc>
            <javadoc line="35">
                Creates a matrix with no data                
                <param>
                    field field to which the elements belong                    
                </param>
            </javadoc>
            <method name="Array2DRowFieldMatrix" type="constructor" line="39">
                <params>
                    <param name="field" type="Field<T>"/>
                </params>
            </method>
            <javadoc line="42">
                Create a new {@code FieldMatrix&lt;T&gt;} with the supplied row and column dimensions.                
                <param>
                    field Field to which the elements belong.                    
                </param>
                <param>
                    rowDimension Number of rows in the new matrix.                    
                </param>
                <param>
                    columnDimension Number of columns in the new matrix.                    
                </param>
                <throws>
                    NotStrictlyPositiveException if row or column dimension is not positive.                    
                </throws>
            </javadoc>
            <method name="Array2DRowFieldMatrix" type="constructor" line="49">
                <params>
                    <param name="field" type="Field<T>"/>
                    <param name="rowDimension" type="int"/>
                    <param name="columnDimension" type="int"/>
                </params>
            </method>
            <javadoc line="53">
                Create a new {@code FieldMatrix&lt;T&gt;} using the input array as the underlying
                  data array.
                  &lt;p&gt;The input array is copied, not referenced. This constructor has
                  the same effect as calling {@link #Array2DRowFieldMatrix(FieldElement[][],boolean)}with the second argument set to {@code true}.&lt;/p&gt;                
                <param>
                    d Data for the new matrix.                    
                </param>
                <throws>
                    DimensionMismatchException if {@code d} is not rectangular.                    
                </throws>
                <throws>
                    NullArgumentException if {@code d} is {@code null}.                    
                </throws>
                <throws>
                    NoDataException if there are not at least one row and one column.                    
                </throws>
                <see>
                    #Array2DRowFieldMatrix(FieldElement[][],boolean)                    
                </see>
            </javadoc>
            <method name="Array2DRowFieldMatrix" type="constructor" line="64">
                <params>
                    <param name="d" type="T[][]"/>
                </params>
            </method>
            <javadoc line="67">
                Create a new {@code FieldMatrix&lt;T&gt;} using the input array as the underlying
                  data array.
                  &lt;p&gt;The input array is copied, not referenced. This constructor has
                  the same effect as calling {@link #Array2DRowFieldMatrix(FieldElement[][],boolean)}with the second argument set to {@code true}.&lt;/p&gt;                
                <param>
                    field Field to which the elements belong.                    
                </param>
                <param>
                    d Data for the new matrix.                    
                </param>
                <throws>
                    DimensionMismatchException if {@code d} is not rectangular.                    
                </throws>
                <throws>
                    NullArgumentException if {@code d} is {@code null}.                    
                </throws>
                <throws>
                    NoDataException if there are not at least one row and one column.                    
                </throws>
                <see>
                    #Array2DRowFieldMatrix(FieldElement[][],boolean)                    
                </see>
            </javadoc>
            <method name="Array2DRowFieldMatrix" type="constructor" line="79">
                <params>
                    <param name="field" type="Field<T>"/>
                    <param name="d" type="T[][]"/>
                </params>
            </method>
            <javadoc line="83">
                Create a new {@code FieldMatrix&lt;T&gt;} using the input array as the underlying
                  data array.
                  &lt;p&gt;If an array is built specially in order to be embedded in a{@code FieldMatrix&lt;T&gt;} and not used directly, the {@code copyArray} may be
                  set to {@code false}. This will prevent the copying and improve
                  performance as no new array will be built and no data will be copied.&lt;/p&gt;                
                <param>
                    d Data for the new matrix.                    
                </param>
                <param>
                    copyArray Whether to copy or reference the input array.                    
                </param>
                <throws>
                    DimensionMismatchException if {@code d} is not rectangular.                    
                </throws>
                <throws>
                    NoDataException if there are not at least one row and one column.                    
                </throws>
                <throws>
                    NullArgumentException if {@code d} is {@code null}.                    
                </throws>
                <see>
                    #Array2DRowFieldMatrix(FieldElement[][])                    
                </see>
            </javadoc>
            <method name="Array2DRowFieldMatrix" type="constructor" line="96">
                <params>
                    <param name="d" type="T[][]"/>
                    <param name="copyArray" type="boolean"/>
                </params>
            </method>
            <javadoc line="99">
                Create a new {@code FieldMatrix&lt;T&gt;} using the input array as the underlying
                  data array.
                  &lt;p&gt;If an array is built specially in order to be embedded in a{@code FieldMatrix&lt;T&gt;} and not used directly, the {@code copyArray} may be
                  set to {@code false}. This will prevent the copying and improve
                  performance as no new array will be built and no data will be copied.&lt;/p&gt;                
                <param>
                    field Field to which the elements belong.                    
                </param>
                <param>
                    d Data for the new matrix.                    
                </param>
                <param>
                    copyArray Whether to copy or reference the input array.                    
                </param>
                <throws>
                    DimensionMismatchException if {@code d} is not rectangular.                    
                </throws>
                <throws>
                    NoDataException if there are not at least one row and one column.                    
                </throws>
                <throws>
                    NullArgumentException if {@code d} is {@code null}.                    
                </throws>
                <see>
                    #Array2DRowFieldMatrix(FieldElement[][])                    
                </see>
            </javadoc>
            <method name="Array2DRowFieldMatrix" type="constructor" line="113">
                <params>
                    <param name="field" type="Field<T>"/>
                    <param name="d" type="T[][]"/>
                    <param name="copyArray" type="boolean"/>
                </params>
                <scope line="115"/>
                <scope line="118">
                    <declaration name="nRows" type="int" line="120"/>
                    <scope line="121"/>
                    <declaration name="nCols" type="int" line="124"/>
                    <scope line="125"/>
                    <scope line="128">
                        <scope line="129"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="136">
                Create a new (column) {@code FieldMatrix&lt;T&gt;} using {@code v} as the
                  data for the unique column of the created matrix.
                  The input array is copied.                
                <param>
                    v Column vector holding data for new matrix.                    
                </param>
                <throws>
                    NoDataException if v is empty                    
                </throws>
            </javadoc>
            <method name="Array2DRowFieldMatrix" type="constructor" line="143">
                <params>
                    <param name="v" type="T[]"/>
                </params>
            </method>
            <javadoc line="146">
                Create a new (column) {@code FieldMatrix&lt;T&gt;} using {@code v} as the
                  data for the unique column of the created matrix.
                  The input array is copied.                
                <param>
                    field Field to which the elements belong.                    
                </param>
                <param>
                    v Column vector holding data for new matrix.                    
                </param>
            </javadoc>
            <method name="Array2DRowFieldMatrix" type="constructor" line="153">
                <params>
                    <param name="field" type="Field<T>"/>
                    <param name="v" type="T[]"/>
                </params>
                <declaration name="nRows" type="int" line="155"/>
                <scope line="157"/>
            </method>
            <javadoc line="161">
                {@inheritDoc}                
            </javadoc>
            <method name="createMatrix" type="FieldMatrix<T>" line="164">
                <params>
                    <param name="rowDimension" type="int"/>
                    <param name="columnDimension" type="int"/>
                </params>
            </method>
            <javadoc line="167">
                {@inheritDoc}                
            </javadoc>
            <method name="copy" type="FieldMatrix<T>" line="170"/>
            <javadoc line="173">
                Add {@code m} to this matrix.                
                <param>
                    m Matrix to be added.                    
                </param>
                <return>
                    {@code this} + m.                    
                </return>
                <throws>
                    MatrixDimensionMismatchException if {@code m} is not the same
                      size as this matrix.                    
                </throws>
            </javadoc>
            <method name="add" type="Array2DRowFieldMatrix<T>" line="180">
                <params>
                    <param name="m" type="Array2DRowFieldMatrix<T>"/>
                </params>
                <declaration name="rowCount" type="int" line="182"/>
                <declaration name="columnCount" type="int" line="183"/>
                <declaration name="outData" type="T[][]" line="184"/>
                <scope line="185">
                    <declaration name="dataRow" type="T[]" line="186"/>
                    <declaration name="mRow" type="T[]" line="187"/>
                    <declaration name="outDataRow" type="T[]" line="188"/>
                    <scope line="189"/>
                </scope>
            </method>
            <javadoc line="195">
                Subtract {@code m} from this matrix.                
                <param>
                    m Matrix to be subtracted.                    
                </param>
                <return>
                    {@code this} + m.                    
                </return>
                <throws>
                    MatrixDimensionMismatchException if {@code m} is not the same
                      size as this matrix.                    
                </throws>
            </javadoc>
            <method name="subtract" type="Array2DRowFieldMatrix<T>" line="202">
                <params>
                    <param name="m" type="Array2DRowFieldMatrix<T>"/>
                </params>
                <declaration name="rowCount" type="int" line="204"/>
                <declaration name="columnCount" type="int" line="205"/>
                <declaration name="outData" type="T[][]" line="206"/>
                <scope line="207">
                    <declaration name="dataRow" type="T[]" line="208"/>
                    <declaration name="mRow" type="T[]" line="209"/>
                    <declaration name="outDataRow" type="T[]" line="210"/>
                    <scope line="211"/>
                </scope>
            </method>
            <javadoc line="217">
                Postmultiplying this matrix by {@code m}.                
                <param>
                    m Matrix to postmultiply by.                    
                </param>
                <return>
                    {@code this}  m.                    
                </return>
                <throws>
                    DimensionMismatchException if the number of columns of this
                      matrix is not equal to the number of rows of {@code m}.                    
                </throws>
            </javadoc>
            <method name="multiply" type="Array2DRowFieldMatrix<T>" line="224">
                <params>
                    <param name="m" type="Array2DRowFieldMatrix<T>"/>
                </params>
                <declaration name="nRows" type="int" line="226"/>
                <declaration name="nCols" type="int" line="227"/>
                <declaration name="nSum" type="int" line="228"/>
                <declaration name="outData" type="T[][]" line="229"/>
                <scope line="230">
                    <declaration name="dataRow" type="T[]" line="231"/>
                    <declaration name="outDataRow" type="T[]" line="232"/>
                    <scope line="233">
                        <declaration name="sum" type="T" line="234"/>
                        <scope line="235"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="243">
                {@inheritDoc}                
            </javadoc>
            <method name="getData" type="T[][]" line="246"/>
            <javadoc line="249">
                Get a reference to the underlying data array.
                  This methods returns internal data, &lt;strong&gt;not&lt;/strong&gt; fresh copy of it.                
                <return>
                    the 2-dimensional array of entries.                    
                </return>
            </javadoc>
            <method name="getDataRef" type="T[][]" line="254"/>
            <javadoc line="257">
                {@inheritDoc}                
            </javadoc>
            <method name="setSubMatrix" type="void" line="260">
                <params>
                    <param name="subMatrix" type="T[][]"/>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <scope line="261">
                    <scope line="262"/>
                    <scope line="265"/>
                    <declaration name="nRows" type="int" line="268"/>
                    <scope line="269"/>
                    <declaration name="nCols" type="int" line="272"/>
                    <scope line="273"/>
                    <scope line="277">
                        <scope line="278"/>
                    </scope>
                </scope>
                <scope line="284"/>
            </method>
            <javadoc line="288">
                {@inheritDoc}                
            </javadoc>
            <method name="getEntry" type="T" line="291">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <javadoc line="296">
                {@inheritDoc}                
            </javadoc>
            <method name="setEntry" type="void" line="299">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="value" type="T"/>
                </params>
            </method>
            <javadoc line="304">
                {@inheritDoc}                
            </javadoc>
            <method name="addToEntry" type="void" line="307">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="increment" type="T"/>
                </params>
            </method>
            <javadoc line="312">
                {@inheritDoc}                
            </javadoc>
            <method name="multiplyEntry" type="void" line="315">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="factor" type="T"/>
                </params>
            </method>
            <javadoc line="320">
                {@inheritDoc}                
            </javadoc>
            <method name="getRowDimension" type="int" line="323"/>
            <javadoc line="326">
                {@inheritDoc}                
            </javadoc>
            <method name="getColumnDimension" type="int" line="329"/>
            <javadoc line="332">
                {@inheritDoc}                
            </javadoc>
            <method name="operate" type="T[]" line="335">
                <params>
                    <param name="v" type="T[]"/>
                </params>
                <declaration name="nRows" type="int" line="336"/>
                <declaration name="nCols" type="int" line="337"/>
                <scope line="338"/>
                <declaration name="out" type="T[]" line="341"/>
                <scope line="342">
                    <declaration name="dataRow" type="T[]" line="343"/>
                    <declaration name="sum" type="T" line="344"/>
                    <scope line="345"/>
                </scope>
            </method>
            <javadoc line="352">
                {@inheritDoc}                
            </javadoc>
            <method name="preMultiply" type="T[]" line="355">
                <params>
                    <param name="v" type="T[]"/>
                </params>
                <declaration name="nRows" type="int" line="356"/>
                <declaration name="nCols" type="int" line="357"/>
                <scope line="358"/>
                <declaration name="out" type="T[]" line="361"/>
                <scope line="362">
                    <declaration name="sum" type="T" line="363"/>
                    <scope line="364"/>
                </scope>
            </method>
            <javadoc line="371">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="T" line="374">
                <params>
                    <param name="visitor" type="FieldMatrixChangingVisitor<T>"/>
                </params>
                <declaration name="rows" type="int" line="375"/>
                <declaration name="columns" type="int" line="376"/>
                <scope line="378">
                    <declaration name="rowI" type="T[]" line="379"/>
                    <scope line="380"/>
                </scope>
            </method>
            <javadoc line="386">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="T" line="389">
                <params>
                    <param name="visitor" type="FieldMatrixPreservingVisitor<T>"/>
                </params>
                <declaration name="rows" type="int" line="390"/>
                <declaration name="columns" type="int" line="391"/>
                <scope line="393">
                    <declaration name="rowI" type="T[]" line="394"/>
                    <scope line="395"/>
                </scope>
            </method>
            <javadoc line="401">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="T" line="404">
                <params>
                    <param name="visitor" type="FieldMatrixChangingVisitor<T>"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="407">
                    <declaration name="rowI" type="T[]" line="408"/>
                    <scope line="409"/>
                </scope>
            </method>
            <javadoc line="415">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="T" line="418">
                <params>
                    <param name="visitor" type="FieldMatrixPreservingVisitor<T>"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="421">
                    <declaration name="rowI" type="T[]" line="422"/>
                    <scope line="423"/>
                </scope>
            </method>
            <javadoc line="429">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInColumnOrder" type="T" line="432">
                <params>
                    <param name="visitor" type="FieldMatrixChangingVisitor<T>"/>
                </params>
                <declaration name="rows" type="int" line="433"/>
                <declaration name="columns" type="int" line="434"/>
                <scope line="436">
                    <scope line="437">
                        <declaration name="rowI" type="T[]" line="438"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="444">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInColumnOrder" type="T" line="447">
                <params>
                    <param name="visitor" type="FieldMatrixPreservingVisitor<T>"/>
                </params>
                <declaration name="rows" type="int" line="448"/>
                <declaration name="columns" type="int" line="449"/>
                <scope line="451">
                    <scope line="452"/>
                </scope>
            </method>
            <javadoc line="458">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInColumnOrder" type="T" line="461">
                <params>
                    <param name="visitor" type="FieldMatrixChangingVisitor<T>"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="464">
                    <scope line="465">
                        <declaration name="rowI" type="T[]" line="466"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="472">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInColumnOrder" type="T" line="475">
                <params>
                    <param name="visitor" type="FieldMatrixPreservingVisitor<T>"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="478">
                    <scope line="479"/>
                </scope>
            </method>
            <javadoc line="485">
                Get a fresh copy of the underlying data array.                
                <return>
                    a copy of the underlying data array.                    
                </return>
            </javadoc>
            <method name="copyOut" type="T[][]" line="489">
                <declaration name="nRows" type="int" line="490"/>
                <declaration name="out" type="T[][]" line="491"/>
                <scope line="492"/>
            </method>
            <javadoc line="497">
                Replace data with a fresh copy of the input array.                
                <param>
                    in Data to copy.                    
                </param>
                <throws>
                    NoDataException if the input array is empty.                    
                </throws>
                <throws>
                    DimensionMismatchException if the input array is not rectangular.                    
                </throws>
                <throws>
                    NullArgumentException if the input array is {@code null}.                    
                </throws>
            </javadoc>
            <method name="copyIn" type="void" line="504">
                <params>
                    <param name="in" type="T[][]"/>
                </params>
            </method>
        </class>
    </source>