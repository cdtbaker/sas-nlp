<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.fraction">
        <import package="java.io.Serializable"/>
        <import package="org.apache.commons.math3.Field"/>
        <import package="org.apache.commons.math3.FieldElement"/>
        <class name="FractionField" line="25">
            <comment line="66">
                CHECKSTYLE: stop HideUtilityClassConstructor                
            </comment>
            <comment line="74">
                CHECKSTYLE: resume HideUtilityClassConstructor                
            </comment>
            <implements interface="Field">
                <type_params>
                    <type_param name="Fraction"/>
                </type_params>
            </implements>
            <implements interface="Serializable"/>
            <javadoc line="25">
                Representation of the fractional numbers field.
                  &lt;p&gt;
                  This class is a singleton.
                  &lt;/p&gt;                
                <see>
                    Fraction                    
                </see>
                <version>
                    $Id: FractionField.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
                <since>
                    2.0                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="36"/>
            <javadoc line="36">
                Serializable version identifier                
            </javadoc>
            <javadoc line="39">
                Private constructor for the singleton.                
            </javadoc>
            <method name="FractionField" type="constructor" line="41"/>
            <javadoc line="44">
                Get the unique instance.                
                <return>
                    the unique instance                    
                </return>
            </javadoc>
            <method name="getInstance" type="FractionField" line="47"/>
            <javadoc line="51">
                {@inheritDoc}                
            </javadoc>
            <method name="getOne" type="Fraction" line="52"/>
            <javadoc line="56">
                {@inheritDoc}                
            </javadoc>
            <method name="getZero" type="Fraction" line="57"/>
            <javadoc line="61">
                {@inheritDoc}                
            </javadoc>
            <method name="getRuntimeClass" type="Class<? extends FieldElement<Fraction>>" line="62"/>
            <class name="LazyHolder" line="66">
                <javadoc line="66">
                    Holder for the instance.
                      &lt;p&gt;We use here the Initialization On Demand Holder Idiom.&lt;/p&gt;                    
                </javadoc>
                <declaration name="INSTANCE" type="FractionField" line="70"/>
                <javadoc line="70">
                    Cached field instance.                    
                </javadoc>
            </class>
            <javadoc line="75">
                Handle deserialization of the singleton.                
                <return>
                    the singleton instance                    
                </return>
            </javadoc>
            <method name="readResolve" type="Object" line="78">
                <comment line="80">
                    return the singleton instance                    
                </comment>
            </method>
        </class>
    </source>