<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.fraction">
        <import package="java.text.FieldPosition"/>
        <import package="java.text.NumberFormat"/>
        <import package="java.text.ParsePosition"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <class name="ProperFractionFormat" line="27">
            <extends class="FractionFormat"/>
            <javadoc line="27">
                Formats a Fraction number in proper format.  The number format for each of
                  the whole number, numerator and, denominator can be configured.
                  &lt;p&gt;
                  Minus signs are only allowed in the whole number part - i.e.,
                  &quot;-3 1/2&quot; is legitimate and denotes -7/2, but &quot;-3 -1/2&quot; is invalid and
                  will result in a &lt;code&gt;ParseException&lt;/code&gt;.&lt;/p&gt;                
                <since>
                    1.1                    
                </since>
                <version>
                    $Id: ProperFractionFormat.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="40"/>
            <javadoc line="40">
                Serializable version identifier                
            </javadoc>
            <declaration name="wholeFormat" type="NumberFormat" line="43"/>
            <javadoc line="43">
                The format used for the whole number.                
            </javadoc>
            <javadoc line="46">
                Create a proper formatting instance with the default number format for
                  the whole, numerator, and denominator.                
            </javadoc>
            <method name="ProperFractionFormat" type="constructor" line="50"/>
            <javadoc line="54">
                Create a proper formatting instance with a custom number format for the
                  whole, numerator, and denominator.                
                <param>
                    format the custom format for the whole, numerator, and
                      denominator.                    
                </param>
            </javadoc>
            <method name="ProperFractionFormat" type="constructor" line="60">
                <params>
                    <param name="format" type="NumberFormat"/>
                </params>
            </method>
            <javadoc line="64">
                Create a proper formatting instance with a custom number format for each
                  of the whole, numerator, and denominator.                
                <param>
                    wholeFormat the custom format for the whole.                    
                </param>
                <param>
                    numeratorFormat the custom format for the numerator.                    
                </param>
                <param>
                    denominatorFormat the custom format for the denominator.                    
                </param>
            </javadoc>
            <method name="ProperFractionFormat" type="constructor" line="74">
                <params>
                    <param name="wholeFormat" type="NumberFormat"/>
                    <param name="numeratorFormat" type="NumberFormat"/>
                    <param name="denominatorFormat" type="NumberFormat"/>
                </params>
            </method>
            <javadoc line="79">
                Formats a {@link Fraction} object to produce a string.  The fraction
                  is output in proper format.                
                <param>
                    fraction the object to format.                    
                </param>
                <param>
                    toAppendTo where the text is to be appended                    
                </param>
                <param>
                    pos On input: an alignment field, if desired. On output: the
                      offsets of the alignment field                    
                </param>
                <return>
                    the value passed in as toAppendTo.                    
                </return>
            </javadoc>
            <method name="format" type="StringBuffer" line="91">
                <params>
                    <param name="fraction" type="Fraction"/>
                    <param name="toAppendTo" type="StringBuffer"/>
                    <param name="pos" type="FieldPosition"/>
                </params>
                <declaration name="num" type="int" line="96"/>
                <declaration name="den" type="int" line="97"/>
                <declaration name="whole" type="int" line="98"/>
                <scope line="101"/>
            </method>
            <javadoc line="114">
                Access the whole format.                
                <return>
                    the whole format.                    
                </return>
            </javadoc>
            <method name="getWholeFormat" type="NumberFormat" line="118"/>
            <javadoc line="122">
                Parses a string to produce a {@link Fraction} object.  This method
                  expects the string to be formatted as a proper fraction.
                  &lt;p&gt;
                  Minus signs are only allowed in the whole number part - i.e.,
                  &quot;-3 1/2&quot; is legitimate and denotes -7/2, but &quot;-3 -1/2&quot; is invalid and
                  will result in a &lt;code&gt;ParseException&lt;/code&gt;.&lt;/p&gt;                
                <param>
                    source the string to parse                    
                </param>
                <param>
                    pos input/ouput parsing parameter.                    
                </param>
                <return>
                    the parsed {@link Fraction} object.                    
                </return>
            </javadoc>
            <method name="parse" type="Fraction" line="135">
                <params>
                    <param name="source" type="String"/>
                    <param name="pos" type="ParsePosition"/>
                </params>
                <comment line="137">
                    try to parse improper fraction                    
                </comment>
                <comment line="145">
                    parse whitespace                    
                </comment>
                <comment line="148">
                    parse whole                    
                </comment>
                <comment line="151">
                    invalid integer number
                     set index back to initial, error index should already be set
                     character examined.                    
                </comment>
                <comment line="158">
                    parse whitespace                    
                </comment>
                <comment line="161">
                    parse numerator                    
                </comment>
                <comment line="164">
                    invalid integer number
                     set index back to initial, error index should already be set
                     character examined.                    
                </comment>
                <comment line="172">
                    minus signs should be leading, invalid expression                    
                </comment>
                <comment line="177">
                    parse &apos;/&apos;                    
                </comment>
                <comment line="182">
                    no &apos;/&apos;
                     return num as a fraction                    
                </comment>
                <comment line="186">
                    found &apos;/&apos;, continue parsing denominator                    
                </comment>
                <comment line="189">
                    invalid &apos;/&apos;
                     set index back to initial, error index should be the last
                     character examined.                    
                </comment>
                <comment line="197">
                    parse whitespace                    
                </comment>
                <comment line="200">
                    parse denominator                    
                </comment>
                <comment line="203">
                    invalid integer number
                     set index back to initial, error index should already be set
                     character examined.                    
                </comment>
                <comment line="211">
                    minus signs must be leading, invalid                    
                </comment>
                <declaration name="ret" type="Fraction" line="137"/>
                <scope line="138"/>
                <declaration name="initialIndex" type="int" line="142"/>
                <declaration name="whole" type="Number" line="148"/>
                <scope line="149"/>
                <declaration name="num" type="Number" line="161"/>
                <scope line="162"/>
                <scope line="170"/>
                <declaration name="startIndex" type="int" line="177"/>
                <declaration name="c" type="char" line="178"/>
                <declaration name="den" type="Number" line="200"/>
                <scope line="201"/>
                <scope line="209"/>
                <declaration name="w" type="int" line="215"/>
                <declaration name="n" type="int" line="216"/>
                <declaration name="d" type="int" line="217"/>
            </method>
            <javadoc line="221">
                Modify the whole format.                
                <param>
                    format The new whole format value.                    
                </param>
                <throws>
                    NullArgumentException if {@code format} is {@code null}.                    
                </throws>
            </javadoc>
            <method name="setWholeFormat" type="void" line="226">
                <params>
                    <param name="format" type="NumberFormat"/>
                </params>
                <scope line="227"/>
            </method>
        </class>
    </source>