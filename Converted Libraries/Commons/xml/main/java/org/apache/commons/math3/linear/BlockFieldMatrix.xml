<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="java.io.Serializable"/>
        <import package="org.apache.commons.math3.Field"/>
        <import package="org.apache.commons.math3.FieldElement"/>
        <import package="org.apache.commons.math3.exception.NoDataException"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.MathArrays"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <class name="BlockFieldMatrix" line="15">
            <type_params>
                <type_param name="T"/>
            </type_params>
            <extends class="AbstractFieldMatrix">
                <type_params>
                    <type_param name="T"/>
                </type_params>
            </extends>
            <implements interface="Serializable"/>
            <javadoc line="15">
                Cache-friendly implementation of FieldMatrix using a flat arrays to store
                  square blocks of the matrix.
                  &lt;p&gt;
                  This implementation is specially designed to be cache-friendly. Square blocks are
                  stored as small arrays and allow efficient traversal of data both in row major direction
                  and columns major direction, one block at a time. This greatly increases performances
                  for algorithms that use crossed directions loops like multiplication or transposition.
                  &lt;/p&gt;
                  &lt;p&gt;
                  The size of square blocks is a static parameter. It may be tuned according to the cache
                  size of the target computer processor. As a rule of thumbs, it should be the largest
                  value that allows three blocks to be simultaneously cached (this is necessary for example
                  for matrix multiplication). The default value is to use 36x36 blocks.
                  &lt;/p&gt;
                  &lt;p&gt;
                  The regular blocks represent {@link #BLOCK_SIZE} x {@link #BLOCK_SIZE} squares. Blocks
                  at right hand side and bottom side which may be smaller to fit matrix dimensions. The square
                  blocks are flattened in row major order in single dimension arrays which are therefore{@link #BLOCK_SIZE}&lt;sup&gt;2&lt;/sup&gt; elements long for regular blocks. The blocks are themselves
                  organized in row major order.
                  &lt;/p&gt;
                  &lt;p&gt;
                  As an example, for a block size of 36x36, a 100x60 matrix would be stored in 6 blocks.
                  Block 0 would be a Field[1296] array holding the upper left 36x36 square, block 1 would be
                  a Field[1296] array holding the upper center 36x36 square, block 2 would be a Field[1008]
                  array holding the upper right 36x28 rectangle, block 3 would be a Field[864] array holding
                  the lower left 24x36 rectangle, block 4 would be a Field[864] array holding the lower center
                  24x36 rectangle and block 5 would be a Field[672] array holding the lower right 24x28
                  rectangle.
                  &lt;/p&gt;
                  &lt;p&gt;
                  The layout complexity overhead versus simple mapping of matrices to java
                  arrays is negligible for small matrices (about 1%). The gain from cache efficiency leads
                  to up to 3-fold improvements for matrices of moderate to large size.
                  &lt;/p&gt;                
                <param>
                    <T>
                      the type of the field elements                    
                </param>
                <version>
                    $Id: BlockFieldMatrix.java 1449528 2013-02-24 19:06:20Z luc $                    
                </version>
                <since>
                    2.0                    
                </since>
            </javadoc>
            <declaration name="BLOCK_SIZE" type="int" line="56"/>
            <javadoc line="56">
                Block size.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="60"/>
            <javadoc line="60">
                Serializable version identifier.                
            </javadoc>
            <declaration name="blocks" type="T" line="64"/>
            <javadoc line="64">
                Blocks of matrix entries.                
            </javadoc>
            <declaration name="rows" type="int" line="68"/>
            <javadoc line="68">
                Number of rows of the matrix.                
            </javadoc>
            <declaration name="columns" type="int" line="72"/>
            <javadoc line="72">
                Number of columns of the matrix.                
            </javadoc>
            <declaration name="blockRows" type="int" line="76"/>
            <javadoc line="76">
                Number of block rows of the matrix.                
            </javadoc>
            <declaration name="blockColumns" type="int" line="80"/>
            <javadoc line="80">
                Number of block columns of the matrix.                
            </javadoc>
            <javadoc line="84">
                Create a new matrix with the supplied row and column dimensions.                
                <param>
                    field Field to which the elements belong.                    
                </param>
                <param>
                    rows Number of rows in the new matrix.                    
                </param>
                <param>
                    columns Number of columns in the new matrix.                    
                </param>
                <throws>
                    NotStrictlyPositiveException if row or column dimension is not
                      positive.                    
                </throws>
            </javadoc>
            <method name="BlockFieldMatrix" type="constructor" line="92">
                <params>
                    <param name="field" type="Field<T>"/>
                    <param name="rows" type="int"/>
                    <param name="columns" type="int"/>
                </params>
            </method>
            <javadoc line="100">
                Create a new dense matrix copying entries from raw layout data.
                  &lt;p&gt;The input array &lt;em&gt;must&lt;/em&gt; already be in raw layout.&lt;/p&gt;
                  &lt;p&gt;Calling this constructor is equivalent to call:
                  &lt;pre&gt;matrix = new BlockFieldMatrix&lt;T&gt;(getField(), rawData.length, rawData[0].length,
                  toBlocksLayout(rawData), false);&lt;/pre&gt;
                  &lt;/p&gt;                
                <param>
                    rawData Data for the new matrix, in raw layout.                    
                </param>
                <throws>
                    DimensionMismatchException if the {@code blockData} shape is
                      inconsistent with block layout.                    
                </throws>
                <see>
                    #BlockFieldMatrix(int,int,FieldElement[][],boolean)                    
                </see>
            </javadoc>
            <method name="BlockFieldMatrix" type="constructor" line="112">
                <params>
                    <param name="rawData" type="T[][]"/>
                </params>
            </method>
            <javadoc line="115">
                Create a new dense matrix copying entries from block layout data.
                  &lt;p&gt;The input array &lt;em&gt;must&lt;/em&gt; already be in blocks layout.&lt;/p&gt;                
                <param>
                    rows  the number of rows in the new matrix                    
                </param>
                <param>
                    columns  the number of columns in the new matrix                    
                </param>
                <param>
                    blockData data for new matrix                    
                </param>
                <param>
                    copyArray if true, the input array will be copied, otherwise
                      it will be referenced                    
                </param>
                <throws>
                    DimensionMismatchException if the {@code blockData} shape is
                      inconsistent with block layout.                    
                </throws>
                <throws>
                    NotStrictlyPositiveException if row or column dimension is not
                      positive.                    
                </throws>
                <see>
                    #createBlocksLayout(Field,int,int)                    
                </see>
                <see>
                    #toBlocksLayout(FieldElement[][])                    
                </see>
                <see>
                    #BlockFieldMatrix(FieldElement[][])                    
                </see>
            </javadoc>
            <method name="BlockFieldMatrix" type="constructor" line="131">
                <params>
                    <param name="rows" type="int"/>
                    <param name="columns" type="int"/>
                    <param name="blockData" type="T[][]"/>
                    <param name="copyArray" type="boolean"/>
                </params>
                <scope line="137"/>
                <scope line="140"/>
                <declaration name="index" type="int" line="143"/>
                <scope line="144">
                    <declaration name="iHeight" type="int" line="145"/>
                    <scope line="146">
                        <scope line="147"/>
                        <scope line="150"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="156">
                Convert a data array from raw layout to blocks layout.
                  &lt;p&gt;
                  Raw layout is the straightforward layout where element at row i and
                  column j is in array element &lt;code&gt;rawData[i][j]&lt;/code&gt;. Blocks layout
                  is the layout used in {@link BlockFieldMatrix} instances, where the matrix
                  is split in square blocks (except at right and bottom side where blocks may
                  be rectangular to fit matrix size) and each block is stored in a flattened
                  one-dimensional array.
                  &lt;/p&gt;
                  &lt;p&gt;
                  This method creates an array in blocks layout from an input array in raw layout.
                  It can be used to provide the array argument of the {@link #BlockFieldMatrix(int,int,FieldElement[][],boolean)}constructor.
                  &lt;/p&gt;                
                <param>
                    <T>
                      Type of the field elements.                    
                </param>
                <param>
                    rawData Data array in raw layout.                    
                </param>
                <return>
                    a new data array containing the same entries but in blocks layout                    
                </return>
                <throws>
                    DimensionMismatchException if {@code rawData} is not rectangular
                      (not all rows have the same length).                    
                </throws>
                <see>
                    #createBlocksLayout(Field,int,int)                    
                </see>
                <see>
                    #BlockFieldMatrix(int,int,FieldElement[][],boolean)                    
                </see>
            </javadoc>
            <method name="toBlocksLayout" type="T[][]" line="179">
                <params>
                    <param name="rawData" type="T[][]"/>
                </params>
                <declaration name="rows" type="int" line="180"/>
                <declaration name="columns" type="int" line="181"/>
                <declaration name="blockRows" type="int" line="182"/>
                <declaration name="blockColumns" type="int" line="183"/>
                <scope line="184">
                    <declaration name="length" type="int" line="185"/>
                    <scope line="186"/>
                </scope>
                <declaration name="field" type="Field&lt;T&gt;" line="190"/>
                <declaration name="blocks" type="T[][]" line="191"/>
                <declaration name="blockIndex" type="int" line="192"/>
                <scope line="193">
                    <declaration name="pStart" type="int" line="194"/>
                    <declaration name="pEnd" type="int" line="195"/>
                    <declaration name="iHeight" type="int" line="196"/>
                    <scope line="197">
                        <declaration name="qStart" type="int" line="198"/>
                        <declaration name="qEnd" type="int" line="199"/>
                        <declaration name="jWidth" type="int" line="200"/>
                        <declaration name="block" type="T[]" line="201"/>
                        <declaration name="index" type="int" line="203"/>
                        <scope line="204"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="213">
                Create a data array in blocks layout.
                  &lt;p&gt;
                  This method can be used to create the array argument of the {@link #BlockFieldMatrix(int,int,FieldElement[][],boolean)}constructor.
                  &lt;/p&gt;                
                <param>
                    <T>
                      Type of the field elements.                    
                </param>
                <param>
                    field Field to which the elements belong.                    
                </param>
                <param>
                    rows Number of rows in the new matrix.                    
                </param>
                <param>
                    columns Number of columns in the new matrix.                    
                </param>
                <return>
                    a new data array in blocks layout.                    
                </return>
                <see>
                    #toBlocksLayout(FieldElement[][])                    
                </see>
                <see>
                    #BlockFieldMatrix(int,int,FieldElement[][],boolean)                    
                </see>
            </javadoc>
            <method name="createBlocksLayout" type="T[][]" line="227">
                <params>
                    <param name="field" type="Field<T>"/>
                    <param name="rows" type="int"/>
                    <param name="columns" type="int"/>
                </params>
                <declaration name="blockRows" type="int" line="228"/>
                <declaration name="blockColumns" type="int" line="229"/>
                <declaration name="blocks" type="T[][]" line="230"/>
                <declaration name="blockIndex" type="int" line="231"/>
                <scope line="232">
                    <declaration name="pStart" type="int" line="233"/>
                    <declaration name="pEnd" type="int" line="234"/>
                    <declaration name="iHeight" type="int" line="235"/>
                    <scope line="236">
                        <declaration name="qStart" type="int" line="237"/>
                        <declaration name="qEnd" type="int" line="238"/>
                        <declaration name="jWidth" type="int" line="239"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="246">
                {@inheritDoc}                
            </javadoc>
            <method name="createMatrix" type="FieldMatrix<T>" line="249">
                <params>
                    <param name="rowDimension" type="int"/>
                    <param name="columnDimension" type="int"/>
                </params>
            </method>
            <javadoc line="252">
                {@inheritDoc}                
            </javadoc>
            <method name="copy" type="FieldMatrix<T>" line="255">
                <declaration name="copied" type="BlockFieldMatrix&lt;T&gt;" line="256"/>
                <scope line="257"/>
            </method>
            <javadoc line="262">
                {@inheritDoc}                
            </javadoc>
            <method name="add" type="FieldMatrix<T>" line="265">
                <params>
                    <param name="m" type="FieldMatrix<T>"/>
                </params>
                <scope line="266"/>
                <scope line="269">
                    <declaration name="out" type="BlockFieldMatrix&lt;T&gt;" line="271"/>
                    <declaration name="blockIndex" type="int" line="272"/>
                    <scope line="273">
                        <scope line="274">
                            <declaration name="outBlock" type="T[]" line="275"/>
                            <declaration name="tBlock" type="T[]" line="276"/>
                            <declaration name="pStart" type="int" line="277"/>
                            <declaration name="pEnd" type="int" line="278"/>
                            <declaration name="qStart" type="int" line="279"/>
                            <declaration name="qEnd" type="int" line="280"/>
                            <declaration name="k" type="int" line="281"/>
                            <scope line="282">
                                <scope line="283"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="294">
                Compute the sum of {@code this} and {@code m}.                
                <param>
                    m matrix to be added                    
                </param>
                <return>
                    {@code this + m}                    
                </return>
                <throws>
                    MatrixDimensionMismatchException if {@code m} is not the same
                      size as {@code this}                    
                </throws>
            </javadoc>
            <method name="add" type="BlockFieldMatrix<T>" line="301">
                <params>
                    <param name="m" type="BlockFieldMatrix<T>"/>
                </params>
                <declaration name="out" type="BlockFieldMatrix&lt;T&gt;" line="303"/>
                <scope line="304">
                    <declaration name="outBlock" type="T[]" line="305"/>
                    <declaration name="tBlock" type="T[]" line="306"/>
                    <declaration name="mBlock" type="T[]" line="307"/>
                    <scope line="308"/>
                </scope>
            </method>
            <javadoc line="314">
                {@inheritDoc}                
            </javadoc>
            <method name="subtract" type="FieldMatrix<T>" line="317">
                <params>
                    <param name="m" type="FieldMatrix<T>"/>
                </params>
                <scope line="318"/>
                <scope line="321">
                    <declaration name="out" type="BlockFieldMatrix&lt;T&gt;" line="323"/>
                    <declaration name="blockIndex" type="int" line="324"/>
                    <scope line="325">
                        <scope line="326">
                            <declaration name="outBlock" type="T[]" line="327"/>
                            <declaration name="tBlock" type="T[]" line="328"/>
                            <declaration name="pStart" type="int" line="329"/>
                            <declaration name="pEnd" type="int" line="330"/>
                            <declaration name="qStart" type="int" line="331"/>
                            <declaration name="qEnd" type="int" line="332"/>
                            <declaration name="k" type="int" line="333"/>
                            <scope line="334">
                                <scope line="335"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="346">
                Compute {@code this - m}.                
                <param>
                    m matrix to be subtracted                    
                </param>
                <return>
                    {@code this - m}                    
                </return>
                <throws>
                    MatrixDimensionMismatchException if {@code m} is not the same
                      size as {@code this}                    
                </throws>
            </javadoc>
            <method name="subtract" type="BlockFieldMatrix<T>" line="353">
                <params>
                    <param name="m" type="BlockFieldMatrix<T>"/>
                </params>
                <declaration name="out" type="BlockFieldMatrix&lt;T&gt;" line="355"/>
                <scope line="356">
                    <declaration name="outBlock" type="T[]" line="357"/>
                    <declaration name="tBlock" type="T[]" line="358"/>
                    <declaration name="mBlock" type="T[]" line="359"/>
                    <scope line="360"/>
                </scope>
            </method>
            <javadoc line="366">
                {@inheritDoc}                
            </javadoc>
            <method name="scalarAdd" type="FieldMatrix<T>" line="369">
                <params>
                    <param name="d" type="T"/>
                </params>
                <declaration name="out" type="BlockFieldMatrix&lt;T&gt;" line="370"/>
                <scope line="371">
                    <declaration name="outBlock" type="T[]" line="372"/>
                    <declaration name="tBlock" type="T[]" line="373"/>
                    <scope line="374"/>
                </scope>
            </method>
            <javadoc line="380">
                {@inheritDoc}                
            </javadoc>
            <method name="scalarMultiply" type="FieldMatrix<T>" line="383">
                <params>
                    <param name="d" type="T"/>
                </params>
                <declaration name="out" type="BlockFieldMatrix&lt;T&gt;" line="384"/>
                <scope line="385">
                    <declaration name="outBlock" type="T[]" line="386"/>
                    <declaration name="tBlock" type="T[]" line="387"/>
                    <scope line="388"/>
                </scope>
            </method>
            <javadoc line="394">
                {@inheritDoc}                
            </javadoc>
            <method name="multiply" type="FieldMatrix<T>" line="397">
                <params>
                    <param name="m" type="FieldMatrix<T>"/>
                </params>
                <scope line="398"/>
                <scope line="401">
                    <declaration name="out" type="BlockFieldMatrix&lt;T&gt;" line="403"/>
                    <declaration name="zero" type="T" line="404"/>
                    <declaration name="blockIndex" type="int" line="405"/>
                    <scope line="406">
                        <declaration name="pStart" type="int" line="407"/>
                        <declaration name="pEnd" type="int" line="408"/>
                        <scope line="409">
                            <declaration name="qStart" type="int" line="410"/>
                            <declaration name="qEnd" type="int" line="411"/>
                            <declaration name="outBlock" type="T[]" line="412"/>
                            <scope line="413">
                                <declaration name="kWidth" type="int" line="414"/>
                                <declaration name="tBlock" type="T[]" line="415"/>
                                <declaration name="rStart" type="int" line="416"/>
                                <declaration name="k" type="int" line="417"/>
                                <scope line="418">
                                    <declaration name="lStart" type="int" line="419"/>
                                    <declaration name="lEnd" type="int" line="420"/>
                                    <scope line="421">
                                        <declaration name="sum" type="T" line="422"/>
                                        <declaration name="r" type="int" line="423"/>
                                        <scope line="424"/>
                                    </scope>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="439">
                Returns the result of postmultiplying {@code this} by {@code m}.                
                <param>
                    m matrix to postmultiply by                    
                </param>
                <return>
                    {@code this  m}                    
                </return>
                <throws>
                    DimensionMismatchException if the matrices are not compatible.                    
                </throws>
            </javadoc>
            <method name="multiply" type="BlockFieldMatrix<T>" line="445">
                <params>
                    <param name="m" type="BlockFieldMatrix<T>"/>
                </params>
                <declaration name="out" type="BlockFieldMatrix&lt;T&gt;" line="447"/>
                <declaration name="zero" type="T" line="448"/>
                <declaration name="blockIndex" type="int" line="449"/>
                <scope line="450">
                    <declaration name="pStart" type="int" line="451"/>
                    <declaration name="pEnd" type="int" line="452"/>
                    <scope line="453">
                        <declaration name="jWidth" type="int" line="454"/>
                        <declaration name="jWidth2" type="int" line="455"/>
                        <declaration name="jWidth3" type="int" line="456"/>
                        <declaration name="jWidth4" type="int" line="457"/>
                        <declaration name="outBlock" type="T[]" line="458"/>
                        <scope line="459">
                            <declaration name="kWidth" type="int" line="460"/>
                            <declaration name="tBlock" type="T[]" line="461"/>
                            <declaration name="mBlock" type="T[]" line="462"/>
                            <declaration name="k" type="int" line="463"/>
                            <scope line="464">
                                <declaration name="lStart" type="int" line="465"/>
                                <declaration name="lEnd" type="int" line="466"/>
                                <scope line="467">
                                    <declaration name="sum" type="T" line="468"/>
                                    <declaration name="l" type="int" line="469"/>
                                    <declaration name="n" type="int" line="470"/>
                                    <scope line="471"/>
                                    <scope line="476"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="490">
                {@inheritDoc}                
            </javadoc>
            <method name="getData" type="T[][]" line="493">
                <declaration name="data" type="T[][]" line="494"/>
                <declaration name="lastColumns" type="int" line="495"/>
                <scope line="496">
                    <declaration name="pStart" type="int" line="497"/>
                    <declaration name="pEnd" type="int" line="498"/>
                    <declaration name="regularPos" type="int" line="499"/>
                    <declaration name="lastPos" type="int" line="500"/>
                    <scope line="501">
                        <declaration name="dataP" type="T[]" line="502"/>
                        <declaration name="blockIndex" type="int" line="503"/>
                        <declaration name="dataPos" type="int" line="504"/>
                        <scope line="505"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="516">
                {@inheritDoc}                
            </javadoc>
            <method name="getSubMatrix" type="FieldMatrix<T>" line="519">
                <params>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <declaration name="out" type="BlockFieldMatrix&lt;T&gt;" line="521"/>
                <declaration name="blockStartRow" type="int" line="522"/>
                <declaration name="rowsShift" type="int" line="523"/>
                <declaration name="blockStartColumn" type="int" line="524"/>
                <declaration name="columnsShift" type="int" line="525"/>
                <declaration name="pBlock" type="int" line="526"/>
                <scope line="527">
                    <declaration name="iHeight" type="int" line="528"/>
                    <declaration name="qBlock" type="int" line="529"/>
                    <scope line="530">
                        <declaration name="jWidth" type="int" line="531"/>
                        <declaration name="outIndex" type="int" line="532"/>
                        <declaration name="outBlock" type="T[]" line="533"/>
                        <declaration name="index" type="int" line="534"/>
                        <declaration name="width" type="int" line="535"/>
                        <declaration name="heightExcess" type="int" line="536"/>
                        <declaration name="widthExcess" type="int" line="537"/>
                        <scope line="538">
                            <scope line="539">
                                <declaration name="width2" type="int" line="540"/>
                            </scope>
                            <scope line="546"/>
                        </scope>
                        <scope line="551">
                            <scope line="552">
                                <declaration name="width2" type="int" line="553"/>
                            </scope>
                            <scope line="557"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="567">
                Copy a part of a block into another one
                  &lt;p&gt;This method can be called only when the specified part fits in both
                  blocks, no verification is done here.&lt;/p&gt;                
                <param>
                    srcBlock source block                    
                </param>
                <param>
                    srcWidth source block width ({@link #BLOCK_SIZE} or smaller)                    
                </param>
                <param>
                    srcStartRow start row in the source block                    
                </param>
                <param>
                    srcEndRow end row (exclusive) in the source block                    
                </param>
                <param>
                    srcStartColumn start column in the source block                    
                </param>
                <param>
                    srcEndColumn end column (exclusive) in the source block                    
                </param>
                <param>
                    dstBlock destination block                    
                </param>
                <param>
                    dstWidth destination block width ({@link #BLOCK_SIZE} or smaller)                    
                </param>
                <param>
                    dstStartRow start row in the destination block                    
                </param>
                <param>
                    dstStartColumn start column in the destination block                    
                </param>
            </javadoc>
            <method name="copyBlockPart" type="void" line="582">
                <params>
                    <param name="srcBlock" type="T[]"/>
                    <param name="srcWidth" type="int"/>
                    <param name="srcStartRow" type="int"/>
                    <param name="srcEndRow" type="int"/>
                    <param name="srcStartColumn" type="int"/>
                    <param name="srcEndColumn" type="int"/>
                    <param name="dstBlock" type="T[]"/>
                    <param name="dstWidth" type="int"/>
                    <param name="dstStartRow" type="int"/>
                    <param name="dstStartColumn" type="int"/>
                </params>
                <declaration name="length" type="int" line="583"/>
                <declaration name="srcPos" type="int" line="584"/>
                <declaration name="dstPos" type="int" line="585"/>
                <scope line="586"/>
            </method>
            <javadoc line="592">
                {@inheritDoc}                
            </javadoc>
            <method name="setSubMatrix" type="void" line="595">
                <params>
                    <param name="subMatrix" type="T[][]"/>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <declaration name="refLength" type="int" line="597"/>
                <scope line="598"/>
                <declaration name="endRow" type="int" line="601"/>
                <declaration name="endColumn" type="int" line="602"/>
                <scope line="604">
                    <scope line="605"/>
                </scope>
                <declaration name="blockStartRow" type="int" line="609"/>
                <declaration name="blockEndRow" type="int" line="610"/>
                <declaration name="blockStartColumn" type="int" line="611"/>
                <declaration name="blockEndColumn" type="int" line="612"/>
                <scope line="613">
                    <declaration name="iHeight" type="int" line="614"/>
                    <declaration name="firstRow" type="int" line="615"/>
                    <declaration name="iStart" type="int" line="616"/>
                    <declaration name="iEnd" type="int" line="617"/>
                    <scope line="618">
                        <declaration name="jWidth" type="int" line="619"/>
                        <declaration name="firstColumn" type="int" line="620"/>
                        <declaration name="jStart" type="int" line="621"/>
                        <declaration name="jEnd" type="int" line="622"/>
                        <declaration name="jLength" type="int" line="623"/>
                        <declaration name="block" type="T[]" line="624"/>
                        <scope line="625"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="631">
                {@inheritDoc}                
            </javadoc>
            <method name="getRowMatrix" type="FieldMatrix<T>" line="634">
                <params>
                    <param name="row" type="int"/>
                </params>
                <declaration name="out" type="BlockFieldMatrix&lt;T&gt;" line="636"/>
                <declaration name="iBlock" type="int" line="637"/>
                <declaration name="iRow" type="int" line="638"/>
                <declaration name="outBlockIndex" type="int" line="639"/>
                <declaration name="outIndex" type="int" line="640"/>
                <declaration name="outBlock" type="T[]" line="641"/>
                <scope line="642">
                    <declaration name="jWidth" type="int" line="643"/>
                    <declaration name="block" type="T[]" line="644"/>
                    <declaration name="available" type="int" line="645"/>
                    <scope line="646"/>
                    <scope line="652"/>
                </scope>
            </method>
            <javadoc line="659">
                {@inheritDoc}                
            </javadoc>
            <method name="setRowMatrix" type="void" line="662">
                <params>
                    <param name="row" type="int"/>
                    <param name="matrix" type="FieldMatrix<T>"/>
                </params>
                <scope line="663"/>
                <scope line="666"/>
            </method>
            <javadoc line="670">
                Sets the entries in row number &lt;code&gt;row&lt;/code&gt;
                  as a row matrix.  Row indices start at 0.                
                <param>
                    row the row to be set                    
                </param>
                <param>
                    matrix row matrix (must have one row and the same number of columns
                      as the instance)                    
                </param>
                <throws>
                    MatrixDimensionMismatchException if the matrix dimensions do
                      not match one instance row.                    
                </throws>
                <throws>
                    OutOfRangeException if the specified row index is invalid.                    
                </throws>
            </javadoc>
            <method name="setRowMatrix" type="void" line="680">
                <params>
                    <param name="row" type="int"/>
                    <param name="matrix" type="BlockFieldMatrix<T>"/>
                </params>
                <declaration name="nCols" type="int" line="682"/>
                <scope line="683"/>
                <declaration name="iBlock" type="int" line="686"/>
                <declaration name="iRow" type="int" line="687"/>
                <declaration name="mBlockIndex" type="int" line="688"/>
                <declaration name="mIndex" type="int" line="689"/>
                <declaration name="mBlock" type="T[]" line="690"/>
                <scope line="691">
                    <declaration name="jWidth" type="int" line="692"/>
                    <declaration name="block" type="T[]" line="693"/>
                    <declaration name="available" type="int" line="694"/>
                    <scope line="695"/>
                    <scope line="701"/>
                </scope>
            </method>
            <javadoc line="707">
                {@inheritDoc}                
            </javadoc>
            <method name="getColumnMatrix" type="FieldMatrix<T>" line="710">
                <params>
                    <param name="column" type="int"/>
                </params>
                <declaration name="out" type="BlockFieldMatrix&lt;T&gt;" line="712"/>
                <declaration name="jBlock" type="int" line="713"/>
                <declaration name="jColumn" type="int" line="714"/>
                <declaration name="jWidth" type="int" line="715"/>
                <declaration name="outBlockIndex" type="int" line="716"/>
                <declaration name="outIndex" type="int" line="717"/>
                <declaration name="outBlock" type="T[]" line="718"/>
                <scope line="719">
                    <declaration name="iHeight" type="int" line="720"/>
                    <declaration name="block" type="T[]" line="721"/>
                    <scope line="722">
                        <scope line="723"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="732">
                {@inheritDoc}                
            </javadoc>
            <method name="setColumnMatrix" type="void" line="735">
                <params>
                    <param name="column" type="int"/>
                    <param name="matrix" type="FieldMatrix<T>"/>
                </params>
                <scope line="736"/>
                <scope line="739"/>
            </method>
            <javadoc line="743">
                Sets the entries in column number {@code column}as a column matrix.  Column indices start at 0.                
                <param>
                    column Column to be set.                    
                </param>
                <param>
                    matrix Column matrix (must have one column and the same number of rows
                      as the instance).                    
                </param>
                <throws>
                    MatrixDimensionMismatchException if the matrix dimensions do
                      not match one instance column.                    
                </throws>
                <throws>
                    OutOfRangeException if the specified column index is invalid.                    
                </throws>
            </javadoc>
            <method name="setColumnMatrix" type="void" line="752">
                <params>
                    <param name="column" type="int"/>
                    <param name="matrix" type="BlockFieldMatrix<T>"/>
                </params>
                <declaration name="nRows" type="int" line="754"/>
                <scope line="755"/>
                <declaration name="jBlock" type="int" line="758"/>
                <declaration name="jColumn" type="int" line="759"/>
                <declaration name="jWidth" type="int" line="760"/>
                <declaration name="mBlockIndex" type="int" line="761"/>
                <declaration name="mIndex" type="int" line="762"/>
                <declaration name="mBlock" type="T[]" line="763"/>
                <scope line="764">
                    <declaration name="iHeight" type="int" line="765"/>
                    <declaration name="block" type="T[]" line="766"/>
                    <scope line="767">
                        <scope line="768"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="776">
                {@inheritDoc}                
            </javadoc>
            <method name="getRowVector" type="FieldVector<T>" line="779">
                <params>
                    <param name="row" type="int"/>
                </params>
                <declaration name="outData" type="T[]" line="781"/>
                <declaration name="iBlock" type="int" line="782"/>
                <declaration name="iRow" type="int" line="783"/>
                <declaration name="outIndex" type="int" line="784"/>
                <scope line="785">
                    <declaration name="jWidth" type="int" line="786"/>
                    <declaration name="block" type="T[]" line="787"/>
                </scope>
            </method>
            <javadoc line="793">
                {@inheritDoc}                
            </javadoc>
            <method name="setRowVector" type="void" line="796">
                <params>
                    <param name="row" type="int"/>
                    <param name="vector" type="FieldVector<T>"/>
                </params>
                <scope line="797"/>
                <scope line="800"/>
            </method>
            <javadoc line="804">
                {@inheritDoc}                
            </javadoc>
            <method name="getColumnVector" type="FieldVector<T>" line="807">
                <params>
                    <param name="column" type="int"/>
                </params>
                <declaration name="outData" type="T[]" line="809"/>
                <declaration name="jBlock" type="int" line="810"/>
                <declaration name="jColumn" type="int" line="811"/>
                <declaration name="jWidth" type="int" line="812"/>
                <declaration name="outIndex" type="int" line="813"/>
                <scope line="814">
                    <declaration name="iHeight" type="int" line="815"/>
                    <declaration name="block" type="T[]" line="816"/>
                    <scope line="817"/>
                </scope>
            </method>
            <javadoc line="823">
                {@inheritDoc}                
            </javadoc>
            <method name="setColumnVector" type="void" line="826">
                <params>
                    <param name="column" type="int"/>
                    <param name="vector" type="FieldVector<T>"/>
                </params>
                <scope line="827"/>
                <scope line="830"/>
            </method>
            <javadoc line="834">
                {@inheritDoc}                
            </javadoc>
            <method name="getRow" type="T[]" line="837">
                <params>
                    <param name="row" type="int"/>
                </params>
                <declaration name="out" type="T[]" line="839"/>
                <declaration name="iBlock" type="int" line="840"/>
                <declaration name="iRow" type="int" line="841"/>
                <declaration name="outIndex" type="int" line="842"/>
                <scope line="843">
                    <declaration name="jWidth" type="int" line="844"/>
                    <declaration name="block" type="T[]" line="845"/>
                </scope>
            </method>
            <javadoc line="851">
                {@inheritDoc}                
            </javadoc>
            <method name="setRow" type="void" line="854">
                <params>
                    <param name="row" type="int"/>
                    <param name="array" type="T[]"/>
                </params>
                <declaration name="nCols" type="int" line="856"/>
                <scope line="857"/>
                <declaration name="iBlock" type="int" line="860"/>
                <declaration name="iRow" type="int" line="861"/>
                <declaration name="outIndex" type="int" line="862"/>
                <scope line="863">
                    <declaration name="jWidth" type="int" line="864"/>
                    <declaration name="block" type="T[]" line="865"/>
                </scope>
            </method>
            <javadoc line="870">
                {@inheritDoc}                
            </javadoc>
            <method name="getColumn" type="T[]" line="873">
                <params>
                    <param name="column" type="int"/>
                </params>
                <declaration name="out" type="T[]" line="875"/>
                <declaration name="jBlock" type="int" line="876"/>
                <declaration name="jColumn" type="int" line="877"/>
                <declaration name="jWidth" type="int" line="878"/>
                <declaration name="outIndex" type="int" line="879"/>
                <scope line="880">
                    <declaration name="iHeight" type="int" line="881"/>
                    <declaration name="block" type="T[]" line="882"/>
                    <scope line="883"/>
                </scope>
            </method>
            <javadoc line="889">
                {@inheritDoc}                
            </javadoc>
            <method name="setColumn" type="void" line="892">
                <params>
                    <param name="column" type="int"/>
                    <param name="array" type="T[]"/>
                </params>
                <declaration name="nRows" type="int" line="894"/>
                <scope line="895"/>
                <declaration name="jBlock" type="int" line="898"/>
                <declaration name="jColumn" type="int" line="899"/>
                <declaration name="jWidth" type="int" line="900"/>
                <declaration name="outIndex" type="int" line="901"/>
                <scope line="902">
                    <declaration name="iHeight" type="int" line="903"/>
                    <declaration name="block" type="T[]" line="904"/>
                    <scope line="905"/>
                </scope>
            </method>
            <javadoc line="910">
                {@inheritDoc}                
            </javadoc>
            <method name="getEntry" type="T" line="913">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <declaration name="iBlock" type="int" line="916"/>
                <declaration name="jBlock" type="int" line="917"/>
                <declaration name="k" type="int" line="918"/>
            </method>
            <javadoc line="921">
                {@inheritDoc}                
            </javadoc>
            <method name="setEntry" type="void" line="924">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="value" type="T"/>
                </params>
                <declaration name="iBlock" type="int" line="927"/>
                <declaration name="jBlock" type="int" line="928"/>
                <declaration name="k" type="int" line="929"/>
            </method>
            <javadoc line="932">
                {@inheritDoc}                
            </javadoc>
            <method name="addToEntry" type="void" line="935">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="increment" type="T"/>
                </params>
                <declaration name="iBlock" type="int" line="938"/>
                <declaration name="jBlock" type="int" line="939"/>
                <declaration name="k" type="int" line="940"/>
                <declaration name="blockIJ" type="T[]" line="941"/>
            </method>
            <javadoc line="944">
                {@inheritDoc}                
            </javadoc>
            <method name="multiplyEntry" type="void" line="947">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="factor" type="T"/>
                </params>
                <declaration name="iBlock" type="int" line="950"/>
                <declaration name="jBlock" type="int" line="951"/>
                <declaration name="k" type="int" line="952"/>
                <declaration name="blockIJ" type="T[]" line="953"/>
            </method>
            <javadoc line="956">
                {@inheritDoc}                
            </javadoc>
            <method name="transpose" type="FieldMatrix<T>" line="959">
                <declaration name="nRows" type="int" line="960"/>
                <declaration name="nCols" type="int" line="961"/>
                <declaration name="out" type="BlockFieldMatrix&lt;T&gt;" line="962"/>
                <declaration name="blockIndex" type="int" line="963"/>
                <scope line="964">
                    <scope line="965">
                        <declaration name="outBlock" type="T[]" line="966"/>
                        <declaration name="tBlock" type="T[]" line="967"/>
                        <declaration name="pStart" type="int" line="968"/>
                        <declaration name="pEnd" type="int" line="969"/>
                        <declaration name="qStart" type="int" line="970"/>
                        <declaration name="qEnd" type="int" line="971"/>
                        <declaration name="k" type="int" line="972"/>
                        <scope line="973">
                            <declaration name="lInc" type="int" line="974"/>
                            <declaration name="l" type="int" line="975"/>
                            <scope line="976"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="987">
                {@inheritDoc}                
            </javadoc>
            <method name="getRowDimension" type="int" line="990"/>
            <javadoc line="993">
                {@inheritDoc}                
            </javadoc>
            <method name="getColumnDimension" type="int" line="996"/>
            <javadoc line="999">
                {@inheritDoc}                
            </javadoc>
            <method name="operate" type="T[]" line="1002">
                <params>
                    <param name="v" type="T[]"/>
                </params>
                <scope line="1003"/>
                <declaration name="out" type="T[]" line="1006"/>
                <declaration name="zero" type="T" line="1007"/>
                <scope line="1008">
                    <declaration name="pStart" type="int" line="1009"/>
                    <declaration name="pEnd" type="int" line="1010"/>
                    <scope line="1011">
                        <declaration name="block" type="T[]" line="1012"/>
                        <declaration name="qStart" type="int" line="1013"/>
                        <declaration name="qEnd" type="int" line="1014"/>
                        <declaration name="k" type="int" line="1015"/>
                        <scope line="1016">
                            <declaration name="sum" type="T" line="1017"/>
                            <declaration name="q" type="int" line="1018"/>
                            <scope line="1019"/>
                            <scope line="1024"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1033">
                {@inheritDoc}                
            </javadoc>
            <method name="preMultiply" type="T[]" line="1036">
                <params>
                    <param name="v" type="T[]"/>
                </params>
                <scope line="1037"/>
                <declaration name="out" type="T[]" line="1040"/>
                <declaration name="zero" type="T" line="1041"/>
                <scope line="1042">
                    <declaration name="jWidth" type="int" line="1043"/>
                    <declaration name="jWidth2" type="int" line="1044"/>
                    <declaration name="jWidth3" type="int" line="1045"/>
                    <declaration name="jWidth4" type="int" line="1046"/>
                    <declaration name="qStart" type="int" line="1047"/>
                    <declaration name="qEnd" type="int" line="1048"/>
                    <scope line="1049">
                        <declaration name="block" type="T[]" line="1050"/>
                        <declaration name="pStart" type="int" line="1051"/>
                        <declaration name="pEnd" type="int" line="1052"/>
                        <scope line="1053">
                            <declaration name="k" type="int" line="1054"/>
                            <declaration name="sum" type="T" line="1055"/>
                            <declaration name="p" type="int" line="1056"/>
                            <scope line="1057"/>
                            <scope line="1062"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1072">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="T" line="1075">
                <params>
                    <param name="visitor" type="FieldMatrixChangingVisitor<T>"/>
                </params>
                <scope line="1077">
                    <declaration name="pStart" type="int" line="1078"/>
                    <declaration name="pEnd" type="int" line="1079"/>
                    <scope line="1080">
                        <scope line="1081">
                            <declaration name="jWidth" type="int" line="1082"/>
                            <declaration name="qStart" type="int" line="1083"/>
                            <declaration name="qEnd" type="int" line="1084"/>
                            <declaration name="block" type="T[]" line="1085"/>
                            <declaration name="k" type="int" line="1086"/>
                            <scope line="1087"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1096">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="T" line="1099">
                <params>
                    <param name="visitor" type="FieldMatrixPreservingVisitor<T>"/>
                </params>
                <scope line="1101">
                    <declaration name="pStart" type="int" line="1102"/>
                    <declaration name="pEnd" type="int" line="1103"/>
                    <scope line="1104">
                        <scope line="1105">
                            <declaration name="jWidth" type="int" line="1106"/>
                            <declaration name="qStart" type="int" line="1107"/>
                            <declaration name="qEnd" type="int" line="1108"/>
                            <declaration name="block" type="T[]" line="1109"/>
                            <declaration name="k" type="int" line="1110"/>
                            <scope line="1111"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1120">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="T" line="1123">
                <params>
                    <param name="visitor" type="FieldMatrixChangingVisitor<T>"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="1126">
                    <declaration name="p0" type="int" line="1127"/>
                    <declaration name="pStart" type="int" line="1128"/>
                    <declaration name="pEnd" type="int" line="1129"/>
                    <scope line="1130">
                        <scope line="1131">
                            <declaration name="jWidth" type="int" line="1132"/>
                            <declaration name="q0" type="int" line="1133"/>
                            <declaration name="qStart" type="int" line="1134"/>
                            <declaration name="qEnd" type="int" line="1135"/>
                            <declaration name="block" type="T[]" line="1136"/>
                            <declaration name="k" type="int" line="1137"/>
                            <scope line="1138"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1147">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="T" line="1150">
                <params>
                    <param name="visitor" type="FieldMatrixPreservingVisitor<T>"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="1153">
                    <declaration name="p0" type="int" line="1154"/>
                    <declaration name="pStart" type="int" line="1155"/>
                    <declaration name="pEnd" type="int" line="1156"/>
                    <scope line="1157">
                        <scope line="1158">
                            <declaration name="jWidth" type="int" line="1159"/>
                            <declaration name="q0" type="int" line="1160"/>
                            <declaration name="qStart" type="int" line="1161"/>
                            <declaration name="qEnd" type="int" line="1162"/>
                            <declaration name="block" type="T[]" line="1163"/>
                            <declaration name="k" type="int" line="1164"/>
                            <scope line="1165"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1174">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInOptimizedOrder" type="T" line="1177">
                <params>
                    <param name="visitor" type="FieldMatrixChangingVisitor<T>"/>
                </params>
                <declaration name="blockIndex" type="int" line="1179"/>
                <scope line="1180">
                    <declaration name="pStart" type="int" line="1181"/>
                    <declaration name="pEnd" type="int" line="1182"/>
                    <scope line="1183">
                        <declaration name="qStart" type="int" line="1184"/>
                        <declaration name="qEnd" type="int" line="1185"/>
                        <declaration name="block" type="T[]" line="1186"/>
                        <declaration name="k" type="int" line="1187"/>
                        <scope line="1188">
                            <scope line="1189"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1199">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInOptimizedOrder" type="T" line="1202">
                <params>
                    <param name="visitor" type="FieldMatrixPreservingVisitor<T>"/>
                </params>
                <declaration name="blockIndex" type="int" line="1204"/>
                <scope line="1205">
                    <declaration name="pStart" type="int" line="1206"/>
                    <declaration name="pEnd" type="int" line="1207"/>
                    <scope line="1208">
                        <declaration name="qStart" type="int" line="1209"/>
                        <declaration name="qEnd" type="int" line="1210"/>
                        <declaration name="block" type="T[]" line="1211"/>
                        <declaration name="k" type="int" line="1212"/>
                        <scope line="1213">
                            <scope line="1214"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1224">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInOptimizedOrder" type="T" line="1227">
                <params>
                    <param name="visitor" type="FieldMatrixChangingVisitor<T>"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="1230">
                    <declaration name="p0" type="int" line="1231"/>
                    <declaration name="pStart" type="int" line="1232"/>
                    <declaration name="pEnd" type="int" line="1233"/>
                    <scope line="1234">
                        <declaration name="jWidth" type="int" line="1235"/>
                        <declaration name="q0" type="int" line="1236"/>
                        <declaration name="qStart" type="int" line="1237"/>
                        <declaration name="qEnd" type="int" line="1238"/>
                        <declaration name="block" type="T[]" line="1239"/>
                        <scope line="1240">
                            <declaration name="k" type="int" line="1241"/>
                            <scope line="1242"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1251">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInOptimizedOrder" type="T" line="1254">
                <params>
                    <param name="visitor" type="FieldMatrixPreservingVisitor<T>"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="1257">
                    <declaration name="p0" type="int" line="1258"/>
                    <declaration name="pStart" type="int" line="1259"/>
                    <declaration name="pEnd" type="int" line="1260"/>
                    <scope line="1261">
                        <declaration name="jWidth" type="int" line="1262"/>
                        <declaration name="q0" type="int" line="1263"/>
                        <declaration name="qStart" type="int" line="1264"/>
                        <declaration name="qEnd" type="int" line="1265"/>
                        <declaration name="block" type="T[]" line="1266"/>
                        <scope line="1267">
                            <declaration name="k" type="int" line="1268"/>
                            <scope line="1269"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1278">
                Get the height of a block.                
                <param>
                    blockRow row index (in block sense) of the block                    
                </param>
                <return>
                    height (number of rows) of the block                    
                </return>
            </javadoc>
            <method name="blockHeight" type="int" line="1283">
                <params>
                    <param name="blockRow" type="int"/>
                </params>
            </method>
            <javadoc line="1286">
                Get the width of a block.                
                <param>
                    blockColumn column index (in block sense) of the block                    
                </param>
                <return>
                    width (number of columns) of the block                    
                </return>
            </javadoc>
            <method name="blockWidth" type="int" line="1291">
                <params>
                    <param name="blockColumn" type="int"/>
                </params>
            </method>
        </class>
    </source>