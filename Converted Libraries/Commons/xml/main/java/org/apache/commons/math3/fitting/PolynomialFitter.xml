<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.fitting">
        <import package="org.apache.commons.math3.analysis.polynomials.PolynomialFunction"/>
        <import package="org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer"/>
        <class name="PolynomialFitter" line="22">
            <extends class="CurveFitter">
                <type_params>
                    <type_param name="PolynomialFunction.Parametric"/>
                </type_params>
            </extends>
            <javadoc line="22">
                Polynomial fitting is a very simple case of {@link CurveFitter curve fitting}.
                  The estimated coefficients are the polynomial coefficients (see the{@link #fit(double[]) fit} method).                
                <version>
                    $Id: PolynomialFitter.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
                <since>
                    2.0                    
                </since>
            </javadoc>
            <javadoc line="31">
                Simple constructor.                
                <param>
                    optimizer Optimizer to use for the fitting.                    
                </param>
            </javadoc>
            <method name="PolynomialFitter" type="constructor" line="36">
                <params>
                    <param name="optimizer" type="MultivariateVectorOptimizer"/>
                </params>
            </method>
            <javadoc line="40">
                Get the coefficients of the polynomial fitting the weighted data points.
                  The degree of the fitting polynomial is {@code guess.length - 1}.                
                <param>
                    guess First guess for the coefficients. They must be sorted in
                      increasing order of the polynomial's degree.                    
                </param>
                <param>
                    maxEval Maximum number of evaluations of the polynomial.                    
                </param>
                <return>
                    the coefficients of the polynomial that best fits the observed points.                    
                </return>
                <throws>
                    org.apache.commons.math3.exception.TooManyEvaluationsException if
                      the number of evaluations exceeds {@code maxEval}.                    
                </throws>
                <throws>
                    org.apache.commons.math3.exception.ConvergenceExceptionif the algorithm failed to converge.                    
                </throws>
            </javadoc>
            <method name="fit" type="double[]" line="53">
                <params>
                    <param name="maxEval" type="int"/>
                    <param name="guess" type="double[]"/>
                </params>
            </method>
            <javadoc line="57">
                Get the coefficients of the polynomial fitting the weighted data points.
                  The degree of the fitting polynomial is {@code guess.length - 1}.                
                <param>
                    guess First guess for the coefficients. They must be sorted in
                      increasing order of the polynomial's degree.                    
                </param>
                <return>
                    the coefficients of the polynomial that best fits the observed points.                    
                </return>
                <throws>
                    org.apache.commons.math3.exception.ConvergenceExceptionif the algorithm failed to converge.                    
                </throws>
            </javadoc>
            <method name="fit" type="double[]" line="67">
                <params>
                    <param name="guess" type="double[]"/>
                </params>
            </method>
        </class>
    </source>