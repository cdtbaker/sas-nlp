<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.transform">
        <import package="org.apache.commons.math3.analysis.UnivariateFunction"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.exception.NonMonotonicSequenceException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <interface name="RealTransformer">
            <javadoc line="6">
                Interface for one-dimensional data sets transformations producing real results.
                  &lt;p&gt;
                  Such transforms include {@link FastSineTransformer sine transform},{@link FastCosineTransformer cosine transform} or {@link FastHadamardTransformer Hadamard transform}. {@link FastFourierTransformerFourier transform} is of a different kind and does not implement this
                  interface since it produces {@link org.apache.commons.math3.complex.Complex}results instead of real ones.                
                <version>
                    $Id: RealTransformer.java 1385310 2012-09-16 16:32:10Z tn $                    
                </version>
                <since>
                    2.0                    
                </since>
            </javadoc>
            <method name="transform" type="double[]" line="15"/>
            <javadoc line="15">
                Returns the (forward, inverse) transform of the specified real data set.                
                <param>
                    f the real data array to be transformed (signal)                    
                </param>
                <param>
                    type the type of transform (forward, inverse) to be performed                    
                </param>
                <return>
                    the real transformed array (spectrum)                    
                </return>
                <throws>
                    MathIllegalArgumentException if the array cannot be transformed
                      with the given type (this may be for example due to array size, which is
                      constrained in some transforms)                    
                </throws>
            </javadoc>
            <method name="transform" type="double[]" line="25"/>
            <javadoc line="25">
                Returns the (forward, inverse) transform of the specified real function,
                  sampled on the specified interval.                
                <param>
                    f the function to be sampled and transformed                    
                </param>
                <param>
                    min the (inclusive) lower bound for the interval                    
                </param>
                <param>
                    max the (exclusive) upper bound for the interval                    
                </param>
                <param>
                    n the number of sample points                    
                </param>
                <param>
                    type the type of transform (forward, inverse) to be performed                    
                </param>
                <return>
                    the real transformed array                    
                </return>
                <throws>
                    NonMonotonicSequenceException if the lower bound is greater than, or equal to the upper bound                    
                </throws>
                <throws>
                    NotStrictlyPositiveException if the number of sample points is negative                    
                </throws>
                <throws>
                    MathIllegalArgumentException if the sample cannot be transformed
                      with the given type (this may be for example due to sample size, which is
                      constrained in some transforms)                    
                </throws>
            </javadoc>
        </interface>
    </source>