<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.fitting">
        <import package="java.util.Collection"/>
        <import package="org.apache.commons.math3.analysis.polynomials.PolynomialFunction"/>
        <import package="org.apache.commons.math3.exception.MathInternalError"/>
        <import package="org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder"/>
        <import package="org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem"/>
        <import package="org.apache.commons.math3.linear.DiagonalMatrix"/>
        <class name="PolynomialCurveFitter" line="27">
            <extends class="AbstractCurveFitter"/>
            <javadoc line="27">
                Fits points to a {@link org.apache.commons.math3.analysis.polynomials.PolynomialFunction.Parametric polynomial}function.
                  &lt;br/&gt;
                  The size of the {@link #withStartPoint(double[]) initial guess} array defines the
                  degree of the polynomial to be fitted.
                  They must be sorted in increasing order of the polynomial&apos;s degree.
                  The optimal values of the coefficients will be returned in the same order.                
                <version>
                    $Id: PolynomialCurveFitter.java 1571640 2014-02-25 10:27:21Z erans $                    
                </version>
                <since>
                    3.3                    
                </since>
            </javadoc>
            <declaration name="FUNCTION" type="PolynomialFunction.Parametric" line="41"/>
            <javadoc line="41">
                Parametric function to be fitted.                
            </javadoc>
            <declaration name="initialGuess" type="double[]" line="43"/>
            <javadoc line="43">
                Initial guess.                
            </javadoc>
            <declaration name="maxIter" type="int" line="45"/>
            <javadoc line="45">
                Maximum number of iterations of the optimization algorithm.                
            </javadoc>
            <javadoc line="48">
                Contructor used by the factory methods.                
                <param>
                    initialGuess Initial guess.                    
                </param>
                <param>
                    maxIter Maximum number of iterations of the optimization algorithm.                    
                </param>
                <throws>
                    MathInternalError if {@code initialGuess} is {@code null}.                    
                </throws>
            </javadoc>
            <method name="PolynomialCurveFitter" type="constructor" line="56">
                <params>
                    <param name="initialGuess" type="double[]"/>
                    <param name="maxIter" type="int"/>
                </params>
            </method>
            <javadoc line="61">
                Creates a default curve fitter.
                  Zero will be used as initial guess for the coefficients, and the maximum
                  number of iterations of the optimization algorithm is set to{@link Integer#MAX_VALUE}.                
                <param>
                    degree Degree of the polynomial to be fitted.                    
                </param>
                <return>
                    a curve fitter.                    
                </return>
                <see>
                    #withStartPoint(double[])                    
                </see>
                <see>
                    #withMaxIterations(int)                    
                </see>
            </javadoc>
            <method name="create" type="PolynomialCurveFitter" line="73">
                <params>
                    <param name="degree" type="int"/>
                </params>
            </method>
            <javadoc line="77">
                Configure the start point (initial guess).                
                <param>
                    newStart new start point (initial guess)                    
                </param>
                <return>
                    a new instance.                    
                </return>
            </javadoc>
            <method name="withStartPoint" type="PolynomialCurveFitter" line="82">
                <params>
                    <param name="newStart" type="double[]"/>
                </params>
            </method>
            <javadoc line="87">
                Configure the maximum number of iterations.                
                <param>
                    newMaxIter maximum number of iterations                    
                </param>
                <return>
                    a new instance.                    
                </return>
            </javadoc>
            <method name="withMaxIterations" type="PolynomialCurveFitter" line="92">
                <params>
                    <param name="newMaxIter" type="int"/>
                </params>
            </method>
            <javadoc line="97">
                {@inheritDoc}                
            </javadoc>
            <method name="getProblem" type="LeastSquaresProblem" line="99">
                <params>
                    <param name="observations" type="Collection&lt;WeightedObservedPoint&gt;"/>
                </params>
                <comment line="101">
                    Prepare least-squares problem.                    
                </comment>
                <comment line="120">
                    Return a new least squares problem set up to fit a polynomial curve to the
                     observed points.                    
                </comment>
                <declaration name="len" type="int" line="101"/>
                <declaration name="target" type="double[]" line="102"/>
                <declaration name="weights" type="double[]" line="103"/>
                <declaration name="i" type="int" line="105"/>
                <scope line="106"/>
                <declaration name="model" type="AbstractCurveFitter.TheoreticalValuesFunction" line="112"/>
                <scope line="115"/>
            </method>
        </class>
    </source>