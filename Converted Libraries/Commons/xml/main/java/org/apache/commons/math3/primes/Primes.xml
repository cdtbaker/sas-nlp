<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.primes">
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="java.util.List"/>
        <class name="Primes" line="5">
            <javadoc line="5">
                Methods related to prime numbers in the range of &lt;code&gt;int&lt;/code&gt;:
                  &lt;ul&gt;
                  &lt;li&gt;primality test&lt;/li&gt;
                  &lt;li&gt;prime number generation&lt;/li&gt;
                  &lt;li&gt;factorization&lt;/li&gt;
                  &lt;/ul&gt;                
                <version>
                    $Id: Primes.java 1462702 2013-03-30 04:45:52Z psteitz $                    
                </version>
                <since>
                    3.2                    
                </since>
            </javadoc>
            <javadoc line="16">
                Hide utility class.                
            </javadoc>
            <method name="Primes" type="constructor" line="19"/>
            <javadoc line="21">
                Primality test: tells if the argument is a (provable) prime or not.
                  &lt;p&gt;
                  It uses the Miller-Rabin probabilistic test in such a way that a result is guaranteed:
                  it uses the firsts prime numbers as successive base (see Handbook of applied cryptography
                  by Menezes, table 4.1).                
                <param>
                    n number to test.                    
                </param>
                <return>
                    true if n is prime. (All numbers &lt; 2 return false).                    
                </return>
            </javadoc>
            <method name="isPrime" type="boolean" line="30">
                <params>
                    <param name="n" type="int"/>
                </params>
                <scope line="31"/>
                <scope line="34">
                    <scope line="35"/>
                </scope>
            </method>
            <javadoc line="41">
                Return the smallest prime greater than or equal to n.                
                <param>
                    n a positive number.                    
                </param>
                <return>
                    the smallest prime greater than or equal to n.                    
                </return>
                <throws>
                    MathIllegalArgumentException if n &lt; 0.                    
                </throws>
            </javadoc>
            <method name="nextPrime" type="int" line="47">
                <params>
                    <param name="n" type="int"/>
                </params>
                <scope line="48"/>
                <scope line="51"/>
                <scope line="55"/>
                <scope line="58"/>
                <declaration name="rem" type="int" line="61"/>
                <scope line="62"/>
                <scope line="65"/>
                <scope line="68">
                    <scope line="69"/>
                    <scope line="73"/>
                </scope>
            </method>
            <javadoc line="79">
                Prime factors decomposition                
                <param>
                    n number to factorize: must be &ge; 2                    
                </param>
                <return>
                    list of prime factors of n                    
                </return>
                <throws>
                    MathIllegalArgumentException if n &lt; 2.                    
                </throws>
            </javadoc>
            <method name="primeFactors" type="List<Integer>" line="85">
                <params>
                    <param name="n" type="int"/>
                </params>
                <scope line="86"/>
            </method>
        </class>
    </source>