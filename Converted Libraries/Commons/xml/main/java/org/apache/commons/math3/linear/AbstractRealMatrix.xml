<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="java.util.ArrayList"/>
        <import package="java.util.Locale"/>
        <import package="org.apache.commons.math3.exception.NoDataException"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <class name="AbstractRealMatrix" line="34">
            <extends class="RealLinearOperator"/>
            <comment line="975">
                Empty implementations of these methods are provided in order to allow for
                 the use of the @Override tag with Java 1.5.                
            </comment>
            <implements interface="RealMatrix"/>
            <javadoc line="34">
                Basic implementation of RealMatrix methods regardless of the underlying storage.
                  &lt;p&gt;All the methods implemented here use {@link #getEntry(int,int)} to access
                  matrix elements. Derived class can provide faster implementations.&lt;/p&gt;                
                <version>
                    $Id: AbstractRealMatrix.java 1459534 2013-03-21 21:24:45Z tn $                    
                </version>
                <since>
                    2.0                    
                </since>
            </javadoc>
            <declaration name="DEFAULT_FORMAT" type="RealMatrixFormat" line="46"/>
            <javadoc line="46">
                Default format.                
            </javadoc>
            <scope line="48"/>
            <javadoc line="53">
                Creates a matrix with no data                
            </javadoc>
            <method name="AbstractRealMatrix" type="constructor" line="56"/>
            <javadoc line="58">
                Create a new RealMatrix with the supplied row and column dimensions.                
                <param>
                    rowDimension  the number of rows in the new matrix                    
                </param>
                <param>
                    columnDimension  the number of columns in the new matrix                    
                </param>
                <throws>
                    NotStrictlyPositiveException if row or column dimension is not positive                    
                </throws>
            </javadoc>
            <method name="AbstractRealMatrix" type="constructor" line="67">
                <params>
                    <param name="rowDimension" type="int"/>
                    <param name="columnDimension" type="int"/>
                </params>
                <scope line="68"/>
                <scope line="71"/>
            </method>
            <javadoc line="76">
                {@inheritDoc}                
            </javadoc>
            <method name="add" type="RealMatrix" line="78">
                <params>
                    <param name="m" type="RealMatrix"/>
                </params>
                <declaration name="rowCount" type="int" line="81"/>
                <declaration name="columnCount" type="int" line="82"/>
                <declaration name="out" type="RealMatrix" line="83"/>
                <scope line="84">
                    <scope line="85"/>
                </scope>
            </method>
            <javadoc line="93">
                {@inheritDoc}                
            </javadoc>
            <method name="subtract" type="RealMatrix" line="95">
                <params>
                    <param name="m" type="RealMatrix"/>
                </params>
                <declaration name="rowCount" type="int" line="98"/>
                <declaration name="columnCount" type="int" line="99"/>
                <declaration name="out" type="RealMatrix" line="100"/>
                <scope line="101">
                    <scope line="102"/>
                </scope>
            </method>
            <javadoc line="110">
                {@inheritDoc}                
            </javadoc>
            <method name="scalarAdd" type="RealMatrix" line="111">
                <params>
                    <param name="d" type="double"/>
                </params>
                <declaration name="rowCount" type="int" line="112"/>
                <declaration name="columnCount" type="int" line="113"/>
                <declaration name="out" type="RealMatrix" line="114"/>
                <scope line="115">
                    <scope line="116"/>
                </scope>
            </method>
            <javadoc line="124">
                {@inheritDoc}                
            </javadoc>
            <method name="scalarMultiply" type="RealMatrix" line="125">
                <params>
                    <param name="d" type="double"/>
                </params>
                <declaration name="rowCount" type="int" line="126"/>
                <declaration name="columnCount" type="int" line="127"/>
                <declaration name="out" type="RealMatrix" line="128"/>
                <scope line="129">
                    <scope line="130"/>
                </scope>
            </method>
            <javadoc line="138">
                {@inheritDoc}                
            </javadoc>
            <method name="multiply" type="RealMatrix" line="140">
                <params>
                    <param name="m" type="RealMatrix"/>
                </params>
                <declaration name="nRows" type="int" line="143"/>
                <declaration name="nCols" type="int" line="144"/>
                <declaration name="nSum" type="int" line="145"/>
                <declaration name="out" type="RealMatrix" line="146"/>
                <scope line="147">
                    <scope line="148">
                        <declaration name="sum" type="double" line="149"/>
                        <scope line="150"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="160">
                {@inheritDoc}                
            </javadoc>
            <method name="preMultiply" type="RealMatrix" line="162">
                <params>
                    <param name="m" type="RealMatrix"/>
                </params>
            </method>
            <javadoc line="166">
                {@inheritDoc}                
            </javadoc>
            <method name="power" type="RealMatrix" line="168">
                <params>
                    <param name="p" type="int"/>
                </params>
                <comment line="188">
                    Only log_2(p) operations is used by doing as follows:
                     5^214 = 5^128  5^64  5^16  5^4  5^2
                    
                     In general, the same approach is used for A^p.                    
                </comment>
                <comment line="204">
                    The positions are taken in turn, so maxI is only changed once                    
                </comment>
                <scope line="169"/>
                <scope line="173"/>
                <scope line="177"/>
                <scope line="181"/>
                <declaration name="power" type="int" line="185"/>
                <declaration name="binaryRepresentation" type="char[]" line="194"/>
                <declaration name="nonZeroPositions" type="ArrayList&lt;Integer&gt;" line="195"/>
                <declaration name="maxI" type="int" line="196"/>
                <scope line="198">
                    <scope line="199">
                        <declaration name="pos" type="int" line="200"/>
                        <scope line="204"/>
                    </scope>
                </scope>
                <declaration name="results" type="RealMatrix[]" line="210"/>
                <scope line="213"/>
                <declaration name="result" type="RealMatrix" line="217"/>
                <scope line="219"/>
            </method>
            <javadoc line="226">
                {@inheritDoc}                
            </javadoc>
            <method name="getData" type="double[][]" line="227">
                <declaration name="data" type="double[][]" line="228"/>
                <scope line="230">
                    <declaration name="dataI" type="double[]" line="231"/>
                    <scope line="232"/>
                </scope>
            </method>
            <javadoc line="240">
                {@inheritDoc}                
            </javadoc>
            <method name="getNorm" type="double" line="241">
                <anonymous_class line="242">
                    <declaration name="endRow" type="double" line="244"/>
                    <javadoc line="244">
                        Last row index.                        
                    </javadoc>
                    <declaration name="columnSum" type="double" line="247"/>
                    <javadoc line="247">
                        Sum of absolute values on one column.                        
                    </javadoc>
                    <declaration name="maxColSum" type="double" line="250"/>
                    <javadoc line="250">
                        Maximal sum across all columns.                        
                    </javadoc>
                    <javadoc line="253">
                        {@inheritDoc}                        
                    </javadoc>
                    <method name="start" type="void" line="256">
                        <params>
                            <param name="rows" type="int"/>
                            <param name="columns" type="int"/>
                            <param name="startRow" type="int"/>
                            <param name="endRow" type="int"/>
                            <param name="startColumn" type="int"/>
                            <param name="endColumn" type="int"/>
                        </params>
                    </method>
                    <javadoc line="262">
                        {@inheritDoc}                        
                    </javadoc>
                    <method name="visit" type="void" line="263">
                        <params>
                            <param name="row" type="int"/>
                            <param name="column" type="int"/>
                            <param name="value" type="double"/>
                        </params>
                        <scope line="265"/>
                    </method>
                    <javadoc line="271">
                        {@inheritDoc}                        
                    </javadoc>
                    <method name="end" type="double" line="272"/>
                </anonymous_class>
            </method>
            <javadoc line="278">
                {@inheritDoc}                
            </javadoc>
            <method name="getFrobeniusNorm" type="double" line="279">
                <anonymous_class line="280">
                    <declaration name="sum" type="double" line="282"/>
                    <javadoc line="282">
                        Sum of squared entries.                        
                    </javadoc>
                    <javadoc line="285">
                        {@inheritDoc}                        
                    </javadoc>
                    <method name="start" type="void" line="288">
                        <params>
                            <param name="rows" type="int"/>
                            <param name="columns" type="int"/>
                            <param name="startRow" type="int"/>
                            <param name="endRow" type="int"/>
                            <param name="startColumn" type="int"/>
                            <param name="endColumn" type="int"/>
                        </params>
                    </method>
                    <javadoc line="292">
                        {@inheritDoc}                        
                    </javadoc>
                    <method name="visit" type="void" line="293">
                        <params>
                            <param name="row" type="int"/>
                            <param name="column" type="int"/>
                            <param name="value" type="double"/>
                        </params>
                    </method>
                    <javadoc line="297">
                        {@inheritDoc}                        
                    </javadoc>
                    <method name="end" type="double" line="298"/>
                </anonymous_class>
            </method>
            <javadoc line="304">
                {@inheritDoc}                
            </javadoc>
            <method name="getSubMatrix" type="RealMatrix" line="307">
                <params>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <declaration name="subMatrix" type="RealMatrix" line="310"/>
                <scope line="312">
                    <scope line="313"/>
                </scope>
            </method>
            <javadoc line="321">
                {@inheritDoc}                
            </javadoc>
            <method name="getSubMatrix" type="RealMatrix" line="324">
                <params>
                    <param name="selectedRows" type="int[]"/>
                    <param name="selectedColumns" type="int[]"/>
                </params>
                <declaration name="subMatrix" type="RealMatrix" line="327"/>
                <anonymous_class line="329">
                    <javadoc line="331">
                        {@inheritDoc}                        
                    </javadoc>
                    <method name="visit" type="double" line="333">
                        <params>
                            <param name="row" type="int"/>
                            <param name="column" type="int"/>
                            <param name="value" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="342">
                {@inheritDoc}                
            </javadoc>
            <method name="copySubMatrix" type="void" line="347">
                <params>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                    <param name="destination" type="double[][]"/>
                </params>
                <declaration name="rowsCount" type="int" line="349"/>
                <declaration name="columnsCount" type="int" line="350"/>
                <scope line="351"/>
                <scope line="356">
                    <scope line="357"/>
                </scope>
                <anonymous_class line="363">
                    <declaration name="startRow" type="int" line="365"/>
                    <javadoc line="365">
                        Initial row index.                        
                    </javadoc>
                    <declaration name="startColumn" type="int" line="368"/>
                    <javadoc line="368">
                        Initial column index.                        
                    </javadoc>
                    <javadoc line="371">
                        {@inheritDoc}                        
                    </javadoc>
                    <method name="start" type="void" line="375">
                        <params>
                            <param name="rows" type="int"/>
                            <param name="columns" type="int"/>
                            <param name="startRow" type="int"/>
                            <param name="endRow" type="int"/>
                            <param name="startColumn" type="int"/>
                            <param name="endColumn" type="int"/>
                        </params>
                    </method>
                    <javadoc line="380">
                        {@inheritDoc}                        
                    </javadoc>
                    <method name="visit" type="void" line="382">
                        <params>
                            <param name="row" type="int"/>
                            <param name="column" type="int"/>
                            <param name="value" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="389">
                {@inheritDoc}                
            </javadoc>
            <method name="copySubMatrix" type="void" line="393">
                <params>
                    <param name="selectedRows" type="int[]"/>
                    <param name="selectedColumns" type="int[]"/>
                    <param name="destination" type="double[][]"/>
                </params>
                <declaration name="nCols" type="int" line="395"/>
                <scope line="397"/>
                <scope line="402">
                    <declaration name="destinationI" type="double[]" line="403"/>
                    <scope line="404"/>
                    <scope line="408"/>
                </scope>
            </method>
            <javadoc line="414">
                {@inheritDoc}                
            </javadoc>
            <method name="setSubMatrix" type="void" line="417">
                <params>
                    <param name="subMatrix" type="double[][]"/>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <declaration name="nRows" type="int" line="419"/>
                <scope line="420"/>
                <declaration name="nCols" type="int" line="424"/>
                <scope line="425"/>
                <scope line="429">
                    <scope line="430"/>
                </scope>
                <scope line="440">
                    <scope line="441"/>
                </scope>
            </method>
            <javadoc line="447">
                {@inheritDoc}                
            </javadoc>
            <method name="getRowMatrix" type="RealMatrix" line="448">
                <params>
                    <param name="row" type="int"/>
                </params>
                <declaration name="nCols" type="int" line="450"/>
                <declaration name="out" type="RealMatrix" line="451"/>
                <scope line="452"/>
            </method>
            <javadoc line="459">
                {@inheritDoc}                
            </javadoc>
            <method name="setRowMatrix" type="void" line="461">
                <params>
                    <param name="row" type="int"/>
                    <param name="matrix" type="RealMatrix"/>
                </params>
                <declaration name="nCols" type="int" line="463"/>
                <scope line="465"/>
                <scope line="470"/>
            </method>
            <javadoc line="475">
                {@inheritDoc}                
            </javadoc>
            <method name="getColumnMatrix" type="RealMatrix" line="477">
                <params>
                    <param name="column" type="int"/>
                </params>
                <declaration name="nRows" type="int" line="479"/>
                <declaration name="out" type="RealMatrix" line="480"/>
                <scope line="481"/>
            </method>
            <javadoc line="488">
                {@inheritDoc}                
            </javadoc>
            <method name="setColumnMatrix" type="void" line="490">
                <params>
                    <param name="column" type="int"/>
                    <param name="matrix" type="RealMatrix"/>
                </params>
                <declaration name="nRows" type="int" line="492"/>
                <scope line="494"/>
                <scope line="499"/>
            </method>
            <javadoc line="504">
                {@inheritDoc}                
            </javadoc>
            <method name="getRowVector" type="RealVector" line="506">
                <params>
                    <param name="row" type="int"/>
                </params>
            </method>
            <javadoc line="510">
                {@inheritDoc}                
            </javadoc>
            <method name="setRowVector" type="void" line="512">
                <params>
                    <param name="row" type="int"/>
                    <param name="vector" type="RealVector"/>
                </params>
                <declaration name="nCols" type="int" line="514"/>
                <scope line="515"/>
                <scope line="519"/>
            </method>
            <javadoc line="524">
                {@inheritDoc}                
            </javadoc>
            <method name="getColumnVector" type="RealVector" line="526">
                <params>
                    <param name="column" type="int"/>
                </params>
            </method>
            <javadoc line="530">
                {@inheritDoc}                
            </javadoc>
            <method name="setColumnVector" type="void" line="532">
                <params>
                    <param name="column" type="int"/>
                    <param name="vector" type="RealVector"/>
                </params>
                <declaration name="nRows" type="int" line="534"/>
                <scope line="535"/>
                <scope line="539"/>
            </method>
            <javadoc line="544">
                {@inheritDoc}                
            </javadoc>
            <method name="getRow" type="double[]" line="545">
                <params>
                    <param name="row" type="int"/>
                </params>
                <declaration name="nCols" type="int" line="547"/>
                <declaration name="out" type="double[]" line="548"/>
                <scope line="549"/>
            </method>
            <javadoc line="556">
                {@inheritDoc}                
            </javadoc>
            <method name="setRow" type="void" line="558">
                <params>
                    <param name="row" type="int"/>
                    <param name="array" type="double[]"/>
                </params>
                <declaration name="nCols" type="int" line="560"/>
                <scope line="561"/>
                <scope line="564"/>
            </method>
            <javadoc line="569">
                {@inheritDoc}                
            </javadoc>
            <method name="getColumn" type="double[]" line="570">
                <params>
                    <param name="column" type="int"/>
                </params>
                <declaration name="nRows" type="int" line="572"/>
                <declaration name="out" type="double[]" line="573"/>
                <scope line="574"/>
            </method>
            <javadoc line="581">
                {@inheritDoc}                
            </javadoc>
            <method name="setColumn" type="void" line="583">
                <params>
                    <param name="column" type="int"/>
                    <param name="array" type="double[]"/>
                </params>
                <declaration name="nRows" type="int" line="585"/>
                <scope line="586"/>
                <scope line="589"/>
            </method>
            <javadoc line="594">
                {@inheritDoc}                
            </javadoc>
            <method name="addToEntry" type="void" line="596">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="increment" type="double"/>
                </params>
            </method>
            <javadoc line="601">
                {@inheritDoc}                
            </javadoc>
            <method name="multiplyEntry" type="void" line="603">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="factor" type="double"/>
                </params>
            </method>
            <javadoc line="608">
                {@inheritDoc}                
            </javadoc>
            <method name="transpose" type="RealMatrix" line="609">
                <declaration name="nRows" type="int" line="610"/>
                <declaration name="nCols" type="int" line="611"/>
                <declaration name="out" type="RealMatrix" line="612"/>
                <anonymous_class line="613">
                    <javadoc line="615">
                        {@inheritDoc}                        
                    </javadoc>
                    <method name="visit" type="void" line="617">
                        <params>
                            <param name="row" type="int"/>
                            <param name="column" type="int"/>
                            <param name="value" type="double"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="626">
                {@inheritDoc}                
            </javadoc>
            <method name="isSquare" type="boolean" line="627"/>
            <method name="getRowDimension" type="int" line="631"/>
            <javadoc line="631">
                Returns the number of rows of this matrix.                
                <return>
                    the number of rows.                    
                </return>
            </javadoc>
            <method name="getColumnDimension" type="int" line="639"/>
            <javadoc line="639">
                Returns the number of columns of this matrix.                
                <return>
                    the number of columns.                    
                </return>
            </javadoc>
            <javadoc line="647">
                {@inheritDoc}                
            </javadoc>
            <method name="getTrace" type="double" line="648">
                <declaration name="nRows" type="int" line="649"/>
                <declaration name="nCols" type="int" line="650"/>
                <scope line="651"/>
                <declaration name="trace" type="double" line="654"/>
                <scope line="655"/>
            </method>
            <javadoc line="661">
                {@inheritDoc}                
            </javadoc>
            <method name="operate" type="double[]" line="663">
                <params>
                    <param name="v" type="double[]"/>
                </params>
                <declaration name="nRows" type="int" line="664"/>
                <declaration name="nCols" type="int" line="665"/>
                <scope line="666"/>
                <declaration name="out" type="double[]" line="670"/>
                <scope line="671">
                    <declaration name="sum" type="double" line="672"/>
                    <scope line="673"/>
                </scope>
            </method>
            <javadoc line="682">
                {@inheritDoc}                
            </javadoc>
            <method name="operate" type="RealVector" line="685">
                <params>
                    <param name="v" type="RealVector"/>
                </params>
                <scope line="686"/>
                <scope line="688">
                    <declaration name="nRows" type="int" line="689"/>
                    <declaration name="nCols" type="int" line="690"/>
                    <scope line="691"/>
                    <declaration name="out" type="double[]" line="695"/>
                    <scope line="696">
                        <declaration name="sum" type="double" line="697"/>
                        <scope line="698"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="708">
                {@inheritDoc}                
            </javadoc>
            <method name="preMultiply" type="double[]" line="709">
                <params>
                    <param name="v" type="double[]"/>
                </params>
                <declaration name="nRows" type="int" line="711"/>
                <declaration name="nCols" type="int" line="712"/>
                <scope line="713"/>
                <declaration name="out" type="double[]" line="717"/>
                <scope line="718">
                    <declaration name="sum" type="double" line="719"/>
                    <scope line="720"/>
                </scope>
            </method>
            <javadoc line="729">
                {@inheritDoc}                
            </javadoc>
            <method name="preMultiply" type="RealVector" line="730">
                <params>
                    <param name="v" type="RealVector"/>
                </params>
                <scope line="731"/>
                <scope line="733">
                    <declaration name="nRows" type="int" line="735"/>
                    <declaration name="nCols" type="int" line="736"/>
                    <scope line="737"/>
                    <declaration name="out" type="double[]" line="741"/>
                    <scope line="742">
                        <declaration name="sum" type="double" line="743"/>
                        <scope line="744"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="754">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="double" line="755">
                <params>
                    <param name="visitor" type="RealMatrixChangingVisitor"/>
                </params>
                <declaration name="rows" type="int" line="756"/>
                <declaration name="columns" type="int" line="757"/>
                <scope line="759">
                    <scope line="760">
                        <declaration name="oldValue" type="double" line="761"/>
                        <declaration name="newValue" type="double" line="762"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="769">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="double" line="770">
                <params>
                    <param name="visitor" type="RealMatrixPreservingVisitor"/>
                </params>
                <declaration name="rows" type="int" line="771"/>
                <declaration name="columns" type="int" line="772"/>
                <scope line="774">
                    <scope line="775"/>
                </scope>
            </method>
            <javadoc line="782">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="double" line="786">
                <params>
                    <param name="visitor" type="RealMatrixChangingVisitor"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="790">
                    <scope line="791">
                        <declaration name="oldValue" type="double" line="792"/>
                        <declaration name="newValue" type="double" line="793"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="800">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="double" line="804">
                <params>
                    <param name="visitor" type="RealMatrixPreservingVisitor"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="808">
                    <scope line="809"/>
                </scope>
            </method>
            <javadoc line="816">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInColumnOrder" type="double" line="817">
                <params>
                    <param name="visitor" type="RealMatrixChangingVisitor"/>
                </params>
                <declaration name="rows" type="int" line="818"/>
                <declaration name="columns" type="int" line="819"/>
                <scope line="821">
                    <scope line="822">
                        <declaration name="oldValue" type="double" line="823"/>
                        <declaration name="newValue" type="double" line="824"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="831">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInColumnOrder" type="double" line="832">
                <params>
                    <param name="visitor" type="RealMatrixPreservingVisitor"/>
                </params>
                <declaration name="rows" type="int" line="833"/>
                <declaration name="columns" type="int" line="834"/>
                <scope line="836">
                    <scope line="837"/>
                </scope>
            </method>
            <javadoc line="844">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInColumnOrder" type="double" line="848">
                <params>
                    <param name="visitor" type="RealMatrixChangingVisitor"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="852">
                    <scope line="853">
                        <declaration name="oldValue" type="double" line="854"/>
                        <declaration name="newValue" type="double" line="855"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="862">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInColumnOrder" type="double" line="866">
                <params>
                    <param name="visitor" type="RealMatrixPreservingVisitor"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="870">
                    <scope line="871"/>
                </scope>
            </method>
            <javadoc line="878">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInOptimizedOrder" type="double" line="879">
                <params>
                    <param name="visitor" type="RealMatrixChangingVisitor"/>
                </params>
            </method>
            <javadoc line="883">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInOptimizedOrder" type="double" line="884">
                <params>
                    <param name="visitor" type="RealMatrixPreservingVisitor"/>
                </params>
            </method>
            <javadoc line="888">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInOptimizedOrder" type="double" line="893">
                <params>
                    <param name="visitor" type="RealMatrixChangingVisitor"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
            </method>
            <javadoc line="897">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInOptimizedOrder" type="double" line="902">
                <params>
                    <param name="visitor" type="RealMatrixPreservingVisitor"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
            </method>
            <javadoc line="906">
                Get a string representation for this matrix.                
                <return>
                    a string representation for this matrix                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="911">
                <declaration name="res" type="StringBuilder" line="912"/>
                <declaration name="fullClassName" type="String" line="913"/>
                <declaration name="shortClassName" type="String" line="914"/>
            </method>
            <javadoc line="920">
                Returns true iff &lt;code&gt;object&lt;/code&gt; is a
                  &lt;code&gt;RealMatrix&lt;/code&gt; instance with the same dimensions as this
                  and all corresponding matrix entries are equal.                
                <param>
                    object the object to test equality against.                    
                </param>
                <return>
                    true if object equals this                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="929">
                <params>
                    <param name="object" type="Object"/>
                </params>
                <scope line="930"/>
                <scope line="933"/>
                <declaration name="m" type="RealMatrix" line="936"/>
                <declaration name="nRows" type="int" line="937"/>
                <declaration name="nCols" type="int" line="938"/>
                <scope line="939"/>
                <scope line="942">
                    <scope line="943">
                        <scope line="944"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="952">
                Computes a hashcode for the matrix.                
                <return>
                    hashcode for matrix                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="958">
                <declaration name="ret" type="int" line="959"/>
                <declaration name="nRows" type="int" line="960"/>
                <declaration name="nCols" type="int" line="961"/>
                <scope line="964">
                    <scope line="965"/>
                </scope>
            </method>
            <method name="createMatrix" type="RealMatrix" line="979"/>
            <javadoc line="979">
                {@inheritDoc}                
            </javadoc>
            <method name="copy" type="RealMatrix" line="983"/>
            <javadoc line="983">
                {@inheritDoc}                
            </javadoc>
            <method name="getEntry" type="double" line="986"/>
            <javadoc line="986">
                {@inheritDoc}                
            </javadoc>
            <method name="setEntry" type="void" line="990"/>
            <javadoc line="990">
                {@inheritDoc}                
            </javadoc>
        </class>
    </source>