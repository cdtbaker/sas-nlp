<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="java.util.ArrayList"/>
        <import package="org.apache.commons.math3.Field"/>
        <import package="org.apache.commons.math3.FieldElement"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.NoDataException"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.util.MathArrays"/>
        <class name="AbstractFieldMatrix" line="14">
            <type_params>
                <type_param name="T"/>
            </type_params>
            <implements interface="FieldMatrix">
                <type_params>
                    <type_param name="T"/>
                </type_params>
            </implements>
            <javadoc line="14">
                Basic implementation of {@link FieldMatrix} methods regardless of the underlying storage.
                  &lt;p&gt;All the methods implemented here use {@link #getEntry(int,int)} to access
                  matrix elements. Derived class can provide faster implementations. &lt;/p&gt;                
                <param>
                    <T>
                      Type of the field elements.                    
                </param>
                <version>
                    $Id: AbstractFieldMatrix.java 1454876 2013-03-10 16:41:08Z luc $                    
                </version>
                <since>
                    2.0                    
                </since>
            </javadoc>
            <declaration name="field" type="Field&lt;T&gt;" line="24"/>
            <javadoc line="24">
                Field to which the elements belong.                
            </javadoc>
            <javadoc line="28">
                Constructor for use with Serializable                
            </javadoc>
            <method name="AbstractFieldMatrix" type="constructor" line="31"/>
            <javadoc line="34">
                Creates a matrix with no data                
                <param>
                    field field to which the elements belong                    
                </param>
            </javadoc>
            <method name="AbstractFieldMatrix" type="constructor" line="38">
                <params>
                    <param name="field" type="Field<T>"/>
                </params>
            </method>
            <javadoc line="41">
                Create a new FieldMatrix&lt;T&gt; with the supplied row and column dimensions.                
                <param>
                    field Field to which the elements belong.                    
                </param>
                <param>
                    rowDimension Number of rows in the new matrix.                    
                </param>
                <param>
                    columnDimension Number of columns in the new matrix.                    
                </param>
                <throws>
                    NotStrictlyPositiveException if row or column dimension is not
                      positive.                    
                </throws>
            </javadoc>
            <method name="AbstractFieldMatrix" type="constructor" line="49">
                <params>
                    <param name="field" type="Field<T>"/>
                    <param name="rowDimension" type="int"/>
                    <param name="columnDimension" type="int"/>
                </params>
                <scope line="50"/>
                <scope line="53"/>
            </method>
            <javadoc line="58">
                Get the elements type from an array.                
                <param>
                    <T>
                      Type of the field elements.                    
                </param>
                <param>
                    d Data array.                    
                </param>
                <return>
                    the field to which the array elements belong.                    
                </return>
                <throws>
                    NullArgumentException if the array is {@code null}.                    
                </throws>
                <throws>
                    NoDataException if the array is empty.                    
                </throws>
            </javadoc>
            <method name="extractField" type="Field<T>" line="67">
                <params>
                    <param name="d" type="T[][]"/>
                </params>
                <scope line="68"/>
                <scope line="71"/>
                <scope line="74"/>
            </method>
            <javadoc line="79">
                Get the elements type from an array.                
                <param>
                    <T>
                      Type of the field elements.                    
                </param>
                <param>
                    d Data array.                    
                </param>
                <return>
                    the field to which the array elements belong.                    
                </return>
                <throws>
                    NoDataException if array is empty.                    
                </throws>
            </javadoc>
            <method name="extractField" type="Field<T>" line="87">
                <params>
                    <param name="d" type="T[]"/>
                </params>
                <scope line="88"/>
            </method>
            <javadoc line="93">
                Build an array of elements.
                  &lt;p&gt;
                  Complete arrays are filled with field.getZero()
                  &lt;/p&gt;                
                <param>
                    <T>
                      Type of the field elements                    
                </param>
                <param>
                    field field to which array elements belong                    
                </param>
                <param>
                    rows number of rows                    
                </param>
                <param>
                    columns number of columns (may be negative to build partial
                      arrays in the same way <code>new Field[rows][]</code> works)                    
                </param>
                <return>
                    a new array                    
                </return>
                <deprecated>
                    as of 3.2, replaced by {@link MathArrays#buildArray(Field,int,int)}                    
                </deprecated>
            </javadoc>
            <method name="buildArray" type="T[][]" line="107">
                <params>
                    <param name="field" type="Field<T>"/>
                    <param name="rows" type="int"/>
                    <param name="columns" type="int"/>
                </params>
            </method>
            <javadoc line="110">
                Build an array of elements.
                  &lt;p&gt;
                  Arrays are filled with field.getZero()
                  &lt;/p&gt;                
                <param>
                    <T>
                      the type of the field elements                    
                </param>
                <param>
                    field field to which array elements belong                    
                </param>
                <param>
                    length of the array                    
                </param>
                <return>
                    a new array                    
                </return>
                <deprecated>
                    as of 3.2, replaced by {@link MathArrays#buildArray(Field,int)}                    
                </deprecated>
            </javadoc>
            <method name="buildArray" type="T[]" line="122">
                <params>
                    <param name="field" type="Field<T>"/>
                    <param name="length" type="int"/>
                </params>
            </method>
            <javadoc line="125">
                {@inheritDoc}                
            </javadoc>
            <method name="getField" type="Field<T>" line="128"/>
            <method name="createMatrix" type="FieldMatrix<T>" line="131"/>
            <javadoc line="131">
                {@inheritDoc}                
            </javadoc>
            <method name="copy" type="FieldMatrix<T>" line="135"/>
            <javadoc line="135">
                {@inheritDoc}                
            </javadoc>
            <javadoc line="139">
                {@inheritDoc}                
            </javadoc>
            <method name="add" type="FieldMatrix<T>" line="142">
                <params>
                    <param name="m" type="FieldMatrix<T>"/>
                </params>
                <declaration name="rowCount" type="int" line="144"/>
                <declaration name="columnCount" type="int" line="145"/>
                <declaration name="out" type="FieldMatrix&lt;T&gt;" line="146"/>
                <scope line="147">
                    <scope line="148"/>
                </scope>
            </method>
            <javadoc line="154">
                {@inheritDoc}                
            </javadoc>
            <method name="subtract" type="FieldMatrix<T>" line="157">
                <params>
                    <param name="m" type="FieldMatrix<T>"/>
                </params>
                <declaration name="rowCount" type="int" line="159"/>
                <declaration name="columnCount" type="int" line="160"/>
                <declaration name="out" type="FieldMatrix&lt;T&gt;" line="161"/>
                <scope line="162">
                    <scope line="163"/>
                </scope>
            </method>
            <javadoc line="169">
                {@inheritDoc}                
            </javadoc>
            <method name="scalarAdd" type="FieldMatrix<T>" line="172">
                <params>
                    <param name="d" type="T"/>
                </params>
                <declaration name="rowCount" type="int" line="173"/>
                <declaration name="columnCount" type="int" line="174"/>
                <declaration name="out" type="FieldMatrix&lt;T&gt;" line="175"/>
                <scope line="176">
                    <scope line="177"/>
                </scope>
            </method>
            <javadoc line="183">
                {@inheritDoc}                
            </javadoc>
            <method name="scalarMultiply" type="FieldMatrix<T>" line="186">
                <params>
                    <param name="d" type="T"/>
                </params>
                <declaration name="rowCount" type="int" line="187"/>
                <declaration name="columnCount" type="int" line="188"/>
                <declaration name="out" type="FieldMatrix&lt;T&gt;" line="189"/>
                <scope line="190">
                    <scope line="191"/>
                </scope>
            </method>
            <javadoc line="197">
                {@inheritDoc}                
            </javadoc>
            <method name="multiply" type="FieldMatrix<T>" line="200">
                <params>
                    <param name="m" type="FieldMatrix<T>"/>
                </params>
                <declaration name="nRows" type="int" line="202"/>
                <declaration name="nCols" type="int" line="203"/>
                <declaration name="nSum" type="int" line="204"/>
                <declaration name="out" type="FieldMatrix&lt;T&gt;" line="205"/>
                <scope line="206">
                    <scope line="207">
                        <declaration name="sum" type="T" line="208"/>
                        <scope line="209"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="217">
                {@inheritDoc}                
            </javadoc>
            <method name="preMultiply" type="FieldMatrix<T>" line="220">
                <params>
                    <param name="m" type="FieldMatrix<T>"/>
                </params>
            </method>
            <javadoc line="223">
                {@inheritDoc}                
            </javadoc>
            <method name="power" type="FieldMatrix<T>" line="226">
                <params>
                    <param name="p" type="int"/>
                </params>
                <scope line="227"/>
                <scope line="230"/>
                <scope line="233"/>
                <scope line="236"/>
                <declaration name="power" type="int" line="239"/>
                <declaration name="binaryRepresentation" type="char[]" line="240"/>
                <declaration name="nonZeroPositions" type="ArrayList&lt;Integer&gt;" line="241"/>
                <scope line="242">
                    <scope line="243">
                        <declaration name="pos" type="int" line="244"/>
                    </scope>
                </scope>
                <declaration name="results" type="ArrayList&lt;FieldMatrix&lt;T&gt;&gt;" line="248"/>
                <scope line="250">
                    <declaration name="s" type="FieldMatrix&lt;T&gt;" line="251"/>
                    <declaration name="r" type="FieldMatrix&lt;T&gt;" line="252"/>
                </scope>
                <declaration name="result" type="FieldMatrix&lt;T&gt;" line="255"/>
                <scope line="256"/>
            </method>
            <javadoc line="261">
                {@inheritDoc}                
            </javadoc>
            <method name="getData" type="T[][]" line="264">
                <declaration name="data" type="T[][]" line="265"/>
                <scope line="266">
                    <declaration name="dataI" type="T[]" line="267"/>
                    <scope line="268"/>
                </scope>
            </method>
            <javadoc line="274">
                {@inheritDoc}                
            </javadoc>
            <method name="getSubMatrix" type="FieldMatrix<T>" line="277">
                <params>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <declaration name="subMatrix" type="FieldMatrix&lt;T&gt;" line="279"/>
                <scope line="280">
                    <scope line="281"/>
                </scope>
            </method>
            <javadoc line="287">
                {@inheritDoc}                
            </javadoc>
            <method name="getSubMatrix" type="FieldMatrix<T>" line="290">
                <params>
                    <param name="selectedRows" type="int[]"/>
                    <param name="selectedColumns" type="int[]"/>
                </params>
                <declaration name="subMatrix" type="FieldMatrix&lt;T&gt;" line="292"/>
                <anonymous_class line="293">
                    <javadoc line="294">
                        {@inheritDoc}                        
                    </javadoc>
                    <method name="visit" type="T" line="297">
                        <params>
                            <param name="row" type="int"/>
                            <param name="column" type="int"/>
                            <param name="value" type="T"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="304">
                {@inheritDoc}                
            </javadoc>
            <method name="copySubMatrix" type="void" line="307">
                <params>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                    <param name="destination" type="T[][]"/>
                </params>
                <declaration name="rowsCount" type="int" line="309"/>
                <declaration name="columnsCount" type="int" line="310"/>
                <scope line="311"/>
                <anonymous_class line="314">
                    <declaration name="startRow" type="int" line="315"/>
                    <javadoc line="315">
                        Initial row index.                        
                    </javadoc>
                    <declaration name="startColumn" type="int" line="319"/>
                    <javadoc line="319">
                        Initial column index.                        
                    </javadoc>
                    <javadoc line="323">
                        {@inheritDoc}                        
                    </javadoc>
                    <method name="start" type="void" line="326">
                        <params>
                            <param name="rows" type="int"/>
                            <param name="columns" type="int"/>
                            <param name="startRow" type="int"/>
                            <param name="endRow" type="int"/>
                            <param name="startColumn" type="int"/>
                            <param name="endColumn" type="int"/>
                        </params>
                    </method>
                    <javadoc line="330">
                        {@inheritDoc}                        
                    </javadoc>
                    <method name="visit" type="void" line="333">
                        <params>
                            <param name="row" type="int"/>
                            <param name="column" type="int"/>
                            <param name="value" type="T"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="339">
                {@inheritDoc}                
            </javadoc>
            <method name="copySubMatrix" type="void" line="342">
                <params>
                    <param name="selectedRows" type="int[]"/>
                    <param name="selectedColumns" type="int[]"/>
                    <param name="destination" type="T[][]"/>
                </params>
                <scope line="344"/>
                <scope line="347">
                    <declaration name="destinationI" type="T[]" line="348"/>
                    <scope line="349"/>
                </scope>
            </method>
            <javadoc line="354">
                {@inheritDoc}                
            </javadoc>
            <method name="setSubMatrix" type="void" line="357">
                <params>
                    <param name="subMatrix" type="T[][]"/>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <scope line="358"/>
                <declaration name="nRows" type="int" line="361"/>
                <scope line="362"/>
                <declaration name="nCols" type="int" line="365"/>
                <scope line="366"/>
                <scope line="369">
                    <scope line="370"/>
                </scope>
                <scope line="378">
                    <scope line="379"/>
                </scope>
            </method>
            <javadoc line="384">
                {@inheritDoc}                
            </javadoc>
            <method name="getRowMatrix" type="FieldMatrix<T>" line="387">
                <params>
                    <param name="row" type="int"/>
                </params>
                <declaration name="nCols" type="int" line="389"/>
                <declaration name="out" type="FieldMatrix&lt;T&gt;" line="390"/>
                <scope line="391"/>
            </method>
            <javadoc line="396">
                {@inheritDoc}                
            </javadoc>
            <method name="setRowMatrix" type="void" line="399">
                <params>
                    <param name="row" type="int"/>
                    <param name="matrix" type="FieldMatrix<T>"/>
                </params>
                <declaration name="nCols" type="int" line="401"/>
                <scope line="402"/>
                <scope line="405"/>
            </method>
            <javadoc line="409">
                {@inheritDoc}                
            </javadoc>
            <method name="getColumnMatrix" type="FieldMatrix<T>" line="412">
                <params>
                    <param name="column" type="int"/>
                </params>
                <declaration name="nRows" type="int" line="414"/>
                <declaration name="out" type="FieldMatrix&lt;T&gt;" line="415"/>
                <scope line="416"/>
            </method>
            <javadoc line="421">
                {@inheritDoc}                
            </javadoc>
            <method name="setColumnMatrix" type="void" line="424">
                <params>
                    <param name="column" type="int"/>
                    <param name="matrix" type="FieldMatrix<T>"/>
                </params>
                <declaration name="nRows" type="int" line="426"/>
                <scope line="427"/>
                <scope line="430"/>
            </method>
            <javadoc line="434">
                {@inheritDoc}                
            </javadoc>
            <method name="getRowVector" type="FieldVector<T>" line="437">
                <params>
                    <param name="row" type="int"/>
                </params>
            </method>
            <javadoc line="440">
                {@inheritDoc}                
            </javadoc>
            <method name="setRowVector" type="void" line="443">
                <params>
                    <param name="row" type="int"/>
                    <param name="vector" type="FieldVector<T>"/>
                </params>
                <declaration name="nCols" type="int" line="445"/>
                <scope line="446"/>
                <scope line="449"/>
            </method>
            <javadoc line="453">
                {@inheritDoc}                
            </javadoc>
            <method name="getColumnVector" type="FieldVector<T>" line="456">
                <params>
                    <param name="column" type="int"/>
                </params>
            </method>
            <javadoc line="459">
                {@inheritDoc}                
            </javadoc>
            <method name="setColumnVector" type="void" line="462">
                <params>
                    <param name="column" type="int"/>
                    <param name="vector" type="FieldVector<T>"/>
                </params>
                <declaration name="nRows" type="int" line="464"/>
                <scope line="465"/>
                <scope line="468"/>
            </method>
            <javadoc line="472">
                {@inheritDoc}                
            </javadoc>
            <method name="getRow" type="T[]" line="475">
                <params>
                    <param name="row" type="int"/>
                </params>
                <declaration name="nCols" type="int" line="477"/>
                <declaration name="out" type="T[]" line="478"/>
                <scope line="479"/>
            </method>
            <javadoc line="484">
                {@inheritDoc}                
            </javadoc>
            <method name="setRow" type="void" line="487">
                <params>
                    <param name="row" type="int"/>
                    <param name="array" type="T[]"/>
                </params>
                <declaration name="nCols" type="int" line="489"/>
                <scope line="490"/>
                <scope line="493"/>
            </method>
            <javadoc line="497">
                {@inheritDoc}                
            </javadoc>
            <method name="getColumn" type="T[]" line="500">
                <params>
                    <param name="column" type="int"/>
                </params>
                <declaration name="nRows" type="int" line="502"/>
                <declaration name="out" type="T[]" line="503"/>
                <scope line="504"/>
            </method>
            <javadoc line="509">
                {@inheritDoc}                
            </javadoc>
            <method name="setColumn" type="void" line="512">
                <params>
                    <param name="column" type="int"/>
                    <param name="array" type="T[]"/>
                </params>
                <declaration name="nRows" type="int" line="514"/>
                <scope line="515"/>
                <scope line="518"/>
            </method>
            <method name="getEntry" type="T" line="522"/>
            <javadoc line="522">
                {@inheritDoc}                
            </javadoc>
            <method name="setEntry" type="void" line="526"/>
            <javadoc line="526">
                {@inheritDoc}                
            </javadoc>
            <method name="addToEntry" type="void" line="530"/>
            <javadoc line="530">
                {@inheritDoc}                
            </javadoc>
            <method name="multiplyEntry" type="void" line="534"/>
            <javadoc line="534">
                {@inheritDoc}                
            </javadoc>
            <javadoc line="538">
                {@inheritDoc}                
            </javadoc>
            <method name="transpose" type="FieldMatrix<T>" line="541">
                <declaration name="nRows" type="int" line="542"/>
                <declaration name="nCols" type="int" line="543"/>
                <declaration name="out" type="FieldMatrix&lt;T&gt;" line="544"/>
                <anonymous_class line="545">
                    <javadoc line="546">
                        {@inheritDoc}                        
                    </javadoc>
                    <method name="visit" type="void" line="549">
                        <params>
                            <param name="row" type="int"/>
                            <param name="column" type="int"/>
                            <param name="value" type="T"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="556">
                {@inheritDoc}                
            </javadoc>
            <method name="isSquare" type="boolean" line="559"/>
            <method name="getRowDimension" type="int" line="562"/>
            <javadoc line="562">
                {@inheritDoc}                
            </javadoc>
            <method name="getColumnDimension" type="int" line="566"/>
            <javadoc line="566">
                {@inheritDoc}                
            </javadoc>
            <javadoc line="570">
                {@inheritDoc}                
            </javadoc>
            <method name="getTrace" type="T" line="573">
                <declaration name="nRows" type="int" line="574"/>
                <declaration name="nCols" type="int" line="575"/>
                <scope line="576"/>
                <declaration name="trace" type="T" line="579"/>
                <scope line="580"/>
            </method>
            <javadoc line="585">
                {@inheritDoc}                
            </javadoc>
            <method name="operate" type="T[]" line="588">
                <params>
                    <param name="v" type="T[]"/>
                </params>
                <declaration name="nRows" type="int" line="589"/>
                <declaration name="nCols" type="int" line="590"/>
                <scope line="591"/>
                <declaration name="out" type="T[]" line="594"/>
                <scope line="595">
                    <declaration name="sum" type="T" line="596"/>
                    <scope line="597"/>
                </scope>
            </method>
            <javadoc line="604">
                {@inheritDoc}                
            </javadoc>
            <method name="operate" type="FieldVector<T>" line="607">
                <params>
                    <param name="v" type="FieldVector<T>"/>
                </params>
                <scope line="608"/>
                <scope line="611">
                    <declaration name="nRows" type="int" line="612"/>
                    <declaration name="nCols" type="int" line="613"/>
                    <scope line="614"/>
                    <declaration name="out" type="T[]" line="617"/>
                    <scope line="618">
                        <declaration name="sum" type="T" line="619"/>
                        <scope line="620"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="628">
                {@inheritDoc}                
            </javadoc>
            <method name="preMultiply" type="T[]" line="631">
                <params>
                    <param name="v" type="T[]"/>
                </params>
                <declaration name="nRows" type="int" line="632"/>
                <declaration name="nCols" type="int" line="633"/>
                <scope line="634"/>
                <declaration name="out" type="T[]" line="637"/>
                <scope line="638">
                    <declaration name="sum" type="T" line="639"/>
                    <scope line="640"/>
                </scope>
            </method>
            <javadoc line="647">
                {@inheritDoc}                
            </javadoc>
            <method name="preMultiply" type="FieldVector<T>" line="650">
                <params>
                    <param name="v" type="FieldVector<T>"/>
                </params>
                <scope line="651"/>
                <scope line="654">
                    <declaration name="nRows" type="int" line="655"/>
                    <declaration name="nCols" type="int" line="656"/>
                    <scope line="657"/>
                    <declaration name="out" type="T[]" line="660"/>
                    <scope line="661">
                        <declaration name="sum" type="T" line="662"/>
                        <scope line="663"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="671">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="T" line="674">
                <params>
                    <param name="visitor" type="FieldMatrixChangingVisitor<T>"/>
                </params>
                <declaration name="rows" type="int" line="675"/>
                <declaration name="columns" type="int" line="676"/>
                <scope line="678">
                    <scope line="679">
                        <declaration name="oldValue" type="T" line="680"/>
                        <declaration name="newValue" type="T" line="681"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="687">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="T" line="690">
                <params>
                    <param name="visitor" type="FieldMatrixPreservingVisitor<T>"/>
                </params>
                <declaration name="rows" type="int" line="691"/>
                <declaration name="columns" type="int" line="692"/>
                <scope line="694">
                    <scope line="695"/>
                </scope>
            </method>
            <javadoc line="701">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="T" line="704">
                <params>
                    <param name="visitor" type="FieldMatrixChangingVisitor<T>"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="707">
                    <scope line="708">
                        <declaration name="oldValue" type="T" line="709"/>
                        <declaration name="newValue" type="T" line="710"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="716">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="T" line="719">
                <params>
                    <param name="visitor" type="FieldMatrixPreservingVisitor<T>"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="722">
                    <scope line="723"/>
                </scope>
            </method>
            <javadoc line="729">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInColumnOrder" type="T" line="732">
                <params>
                    <param name="visitor" type="FieldMatrixChangingVisitor<T>"/>
                </params>
                <declaration name="rows" type="int" line="733"/>
                <declaration name="columns" type="int" line="734"/>
                <scope line="736">
                    <scope line="737">
                        <declaration name="oldValue" type="T" line="738"/>
                        <declaration name="newValue" type="T" line="739"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="745">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInColumnOrder" type="T" line="748">
                <params>
                    <param name="visitor" type="FieldMatrixPreservingVisitor<T>"/>
                </params>
                <declaration name="rows" type="int" line="749"/>
                <declaration name="columns" type="int" line="750"/>
                <scope line="752">
                    <scope line="753"/>
                </scope>
            </method>
            <javadoc line="759">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInColumnOrder" type="T" line="762">
                <params>
                    <param name="visitor" type="FieldMatrixChangingVisitor<T>"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="765">
                    <scope line="766">
                        <declaration name="oldValue" type="T" line="767"/>
                        <declaration name="newValue" type="T" line="768"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="774">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInColumnOrder" type="T" line="777">
                <params>
                    <param name="visitor" type="FieldMatrixPreservingVisitor<T>"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="780">
                    <scope line="781"/>
                </scope>
            </method>
            <javadoc line="787">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInOptimizedOrder" type="T" line="790">
                <params>
                    <param name="visitor" type="FieldMatrixChangingVisitor<T>"/>
                </params>
            </method>
            <javadoc line="793">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInOptimizedOrder" type="T" line="796">
                <params>
                    <param name="visitor" type="FieldMatrixPreservingVisitor<T>"/>
                </params>
            </method>
            <javadoc line="799">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInOptimizedOrder" type="T" line="802">
                <params>
                    <param name="visitor" type="FieldMatrixChangingVisitor<T>"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
            </method>
            <javadoc line="805">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInOptimizedOrder" type="T" line="808">
                <params>
                    <param name="visitor" type="FieldMatrixPreservingVisitor<T>"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
            </method>
            <javadoc line="811">
                Get a string representation for this matrix.                
                <return>
                    a string representation for this matrix                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="815">
                <declaration name="nRows" type="int" line="816"/>
                <declaration name="nCols" type="int" line="817"/>
                <declaration name="res" type="StringBuffer" line="818"/>
                <declaration name="fullClassName" type="String" line="819"/>
                <declaration name="shortClassName" type="String" line="820"/>
                <scope line="822">
                    <scope line="823"/>
                    <scope line="827">
                        <scope line="828"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="838">
                Returns true iff &lt;code&gt;object&lt;/code&gt; is a
                  &lt;code&gt;FieldMatrix&lt;/code&gt; instance with the same dimensions as this
                  and all corresponding matrix entries are equal.                
                <param>
                    object the object to test equality against.                    
                </param>
                <return>
                    true if object equals this                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="845">
                <params>
                    <param name="object" type="Object"/>
                </params>
                <scope line="846"/>
                <scope line="849"/>
                <declaration name="m" type="FieldMatrix&lt;?&gt;" line="852"/>
                <declaration name="nRows" type="int" line="853"/>
                <declaration name="nCols" type="int" line="854"/>
                <scope line="855"/>
                <scope line="858">
                    <scope line="859">
                        <scope line="860"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="867">
                Computes a hashcode for the matrix.                
                <return>
                    hashcode for matrix                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="871">
                <declaration name="ret" type="int" line="872"/>
                <declaration name="nRows" type="int" line="873"/>
                <declaration name="nCols" type="int" line="874"/>
                <scope line="877">
                    <scope line="878"/>
                </scope>
            </method>
            <javadoc line="884">
                Check if a row index is valid.                
                <param>
                    row Row index to check.                    
                </param>
                <throws>
                    OutOfRangeException if {@code index} is not valid.                    
                </throws>
            </javadoc>
            <method name="checkRowIndex" type="void" line="889">
                <params>
                    <param name="row" type="int"/>
                </params>
                <scope line="890"/>
            </method>
            <javadoc line="894">
                Check if a column index is valid.                
                <param>
                    column Column index to check.                    
                </param>
                <throws>
                    OutOfRangeException if {@code index} is not valid.                    
                </throws>
            </javadoc>
            <method name="checkColumnIndex" type="void" line="899">
                <params>
                    <param name="column" type="int"/>
                </params>
                <scope line="900"/>
            </method>
            <javadoc line="904">
                Check if submatrix ranges indices are valid.
                  Rows and columns are indicated counting from 0 to n-1.                
                <param>
                    startRow Initial row index.                    
                </param>
                <param>
                    endRow Final row index.                    
                </param>
                <param>
                    startColumn Initial column index.                    
                </param>
                <param>
                    endColumn Final column index.                    
                </param>
                <throws>
                    OutOfRangeException if the indices are not valid.                    
                </throws>
                <throws>
                    NumberIsTooSmallException if {@code endRow < startRow} or{@code endColumn < startColumn}.                    
                </throws>
            </javadoc>
            <method name="checkSubMatrixIndex" type="void" line="914">
                <params>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="917"/>
                <scope line="922"/>
            </method>
            <javadoc line="926">
                Check if submatrix ranges indices are valid.
                  Rows and columns are indicated counting from 0 to n-1.                
                <param>
                    selectedRows Array of row indices.                    
                </param>
                <param>
                    selectedColumns Array of column indices.                    
                </param>
                <throws>
                    NullArgumentException if the arrays are {@code null}.                    
                </throws>
                <throws>
                    NoDataException if the arrays have zero length.                    
                </throws>
                <throws>
                    OutOfRangeException if row or column selections are not valid.                    
                </throws>
            </javadoc>
            <method name="checkSubMatrixIndex" type="void" line="935">
                <params>
                    <param name="selectedRows" type="int[]"/>
                    <param name="selectedColumns" type="int[]"/>
                </params>
                <scope line="936"/>
                <scope line="939"/>
                <scope line="942"/>
                <scope line="945"/>
            </method>
            <javadoc line="949">
                Check if a matrix is addition compatible with the instance.                
                <param>
                    m Matrix to check.                    
                </param>
                <throws>
                    MatrixDimensionMismatchException if the matrix is not
                      addition-compatible with instance.                    
                </throws>
            </javadoc>
            <method name="checkAdditionCompatible" type="void" line="955">
                <params>
                    <param name="m" type="FieldMatrix<T>"/>
                </params>
                <scope line="956"/>
            </method>
            <javadoc line="960">
                Check if a matrix is subtraction compatible with the instance.                
                <param>
                    m Matrix to check.                    
                </param>
                <throws>
                    MatrixDimensionMismatchException if the matrix is not
                      subtraction-compatible with instance.                    
                </throws>
            </javadoc>
            <method name="checkSubtractionCompatible" type="void" line="966">
                <params>
                    <param name="m" type="FieldMatrix<T>"/>
                </params>
                <scope line="967"/>
            </method>
            <javadoc line="971">
                Check if a matrix is multiplication compatible with the instance.                
                <param>
                    m Matrix to check.                    
                </param>
                <throws>
                    DimensionMismatchException if the matrix is not
                      multiplication-compatible with instance.                    
                </throws>
            </javadoc>
            <method name="checkMultiplicationCompatible" type="void" line="977">
                <params>
                    <param name="m" type="FieldMatrix<T>"/>
                </params>
                <scope line="978"/>
            </method>
        </class>
    </source>