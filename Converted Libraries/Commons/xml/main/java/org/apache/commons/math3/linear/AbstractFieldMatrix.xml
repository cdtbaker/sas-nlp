<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="java.util.ArrayList"/>
        <import package="org.apache.commons.math3.Field"/>
        <import package="org.apache.commons.math3.FieldElement"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.NoDataException"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.util.MathArrays"/>
        <class name="AbstractFieldMatrix" line="34">
            <type_params>
                <type_param name="T"/>
            </type_params>
            <implements interface="FieldMatrix">
                <type_params>
                    <type_param name="T"/>
                </type_params>
            </implements>
            <javadoc line="34">
                Basic implementation of {@link FieldMatrix} methods regardless of the underlying storage.
                  &lt;p&gt;All the methods implemented here use {@link #getEntry(int,int)} to access
                  matrix elements. Derived class can provide faster implementations. &lt;/p&gt;                
                <param>
                    &lt;T&gt;
                       Type of the field elements.                    
                </param>
                <version>
                    $Id: AbstractFieldMatrix.java 1454876 2013-03-10 16:41:08Z luc $                    
                </version>
                <since>
                    2.0                    
                </since>
            </javadoc>
            <declaration name="field" type="Field&amp;lt;T&amp;gt;" line="46"/>
            <javadoc line="46">
                Field to which the elements belong.                
            </javadoc>
            <javadoc line="49">
                Constructor for use with Serializable                
            </javadoc>
            <method name="AbstractFieldMatrix" type="constructor" line="52"/>
            <javadoc line="56">
                Creates a matrix with no data                
                <param>
                    field field to which the elements belong                    
                </param>
            </javadoc>
            <method name="AbstractFieldMatrix" type="constructor" line="60">
                <params>
                    <param name="field" type="Field&lt;T&gt;"/>
                </params>
            </method>
            <javadoc line="64">
                Create a new FieldMatrix&lt;T&gt; with the supplied row and column dimensions.                
                <param>
                    field Field to which the elements belong.                    
                </param>
                <param>
                    rowDimension Number of rows in the new matrix.                    
                </param>
                <param>
                    columnDimension Number of columns in the new matrix.                    
                </param>
                <throws>
                    NotStrictlyPositiveException if row or column dimension is not
                      positive.                    
                </throws>
            </javadoc>
            <method name="AbstractFieldMatrix" type="constructor" line="76">
                <params>
                    <param name="field" type="Field&lt;T&gt;"/>
                    <param name="rowDimension" type="int"/>
                    <param name="columnDimension" type="int"/>
                </params>
                <scope line="77"/>
                <scope line="81"/>
            </method>
            <javadoc line="88">
                Get the elements type from an array.                
                <param>
                    &lt;T&gt;
                       Type of the field elements.                    
                </param>
                <param>
                    d Data array.                    
                </param>
                <return>
                    the field to which the array elements belong.                    
                </return>
                <throws>
                    NullArgumentException if the array is {@code null}.                    
                </throws>
                <throws>
                    NoDataException if the array is empty.                    
                </throws>
            </javadoc>
            <method name="extractField" type="Field&lt;T&gt;" line="98">
                <params>
                    <param name="d" type="T[][]"/>
                </params>
                <scope line="99"/>
                <scope line="102"/>
                <scope line="105"/>
            </method>
            <javadoc line="111">
                Get the elements type from an array.                
                <param>
                    &lt;T&gt;
                       Type of the field elements.                    
                </param>
                <param>
                    d Data array.                    
                </param>
                <return>
                    the field to which the array elements belong.                    
                </return>
                <throws>
                    NoDataException if array is empty.                    
                </throws>
            </javadoc>
            <method name="extractField" type="Field&lt;T&gt;" line="120">
                <params>
                    <param name="d" type="T[]"/>
                </params>
                <scope line="121"/>
            </method>
            <javadoc line="127">
                Build an array of elements.
                  &lt;p&gt;
                  Complete arrays are filled with field.getZero()
                  &lt;/p&gt;                
                <param>
                    &lt;T&gt;
                       Type of the field elements                    
                </param>
                <param>
                    field field to which array elements belong                    
                </param>
                <param>
                    rows number of rows                    
                </param>
                <param>
                    columns number of columns (may be negative to build partial
                      arrays in the same way &lt;code&gt;new Field[rows][]&lt;/code&gt; works)                    
                </param>
                <return>
                    a new array                    
                </return>
                <deprecated>
                    as of 3.2, replaced by {@link MathArrays#buildArray(Field,int,int)}                    
                </deprecated>
            </javadoc>
            <method name="buildArray" type="T[][]" line="142">
                <params>
                    <param name="field" type="Field&lt;T&gt;"/>
                    <param name="rows" type="int"/>
                    <param name="columns" type="int"/>
                </params>
            </method>
            <javadoc line="146">
                Build an array of elements.
                  &lt;p&gt;
                  Arrays are filled with field.getZero()
                  &lt;/p&gt;                
                <param>
                    &lt;T&gt;
                       the type of the field elements                    
                </param>
                <param>
                    field field to which array elements belong                    
                </param>
                <param>
                    length of the array                    
                </param>
                <return>
                    a new array                    
                </return>
                <deprecated>
                    as of 3.2, replaced by {@link MathArrays#buildArray(Field,int)}                    
                </deprecated>
            </javadoc>
            <method name="buildArray" type="T[]" line="158">
                <params>
                    <param name="field" type="Field&lt;T&gt;"/>
                    <param name="length" type="int"/>
                </params>
            </method>
            <javadoc line="162">
                {@inheritDoc}                
            </javadoc>
            <method name="getField" type="Field&lt;T&gt;" line="163"/>
            <method name="createMatrix" type="FieldMatrix&lt;T&gt;" line="167"/>
            <javadoc line="167">
                {@inheritDoc}                
            </javadoc>
            <method name="copy" type="FieldMatrix&lt;T&gt;" line="172"/>
            <javadoc line="172">
                {@inheritDoc}                
            </javadoc>
            <javadoc line="175">
                {@inheritDoc}                
            </javadoc>
            <method name="add" type="FieldMatrix&lt;T&gt;" line="177">
                <params>
                    <param name="m" type="FieldMatrix&lt;T&gt;"/>
                </params>
                <comment line="179">
                    safety check                    
                </comment>
                <declaration name="rowCount" type="int" line="181"/>
                <declaration name="columnCount" type="int" line="182"/>
                <declaration name="out" type="FieldMatrix&amp;lt;T&amp;gt;" line="183"/>
                <scope line="184">
                    <scope line="185"/>
                </scope>
            </method>
            <javadoc line="193">
                {@inheritDoc}                
            </javadoc>
            <method name="subtract" type="FieldMatrix&lt;T&gt;" line="195">
                <params>
                    <param name="m" type="FieldMatrix&lt;T&gt;"/>
                </params>
                <comment line="197">
                    safety check                    
                </comment>
                <declaration name="rowCount" type="int" line="199"/>
                <declaration name="columnCount" type="int" line="200"/>
                <declaration name="out" type="FieldMatrix&amp;lt;T&amp;gt;" line="201"/>
                <scope line="202">
                    <scope line="203"/>
                </scope>
            </method>
            <javadoc line="211">
                {@inheritDoc}                
            </javadoc>
            <method name="scalarAdd" type="FieldMatrix&lt;T&gt;" line="212">
                <params>
                    <param name="d" type="T"/>
                </params>
                <declaration name="rowCount" type="int" line="214"/>
                <declaration name="columnCount" type="int" line="215"/>
                <declaration name="out" type="FieldMatrix&amp;lt;T&amp;gt;" line="216"/>
                <scope line="217">
                    <scope line="218"/>
                </scope>
            </method>
            <javadoc line="226">
                {@inheritDoc}                
            </javadoc>
            <method name="scalarMultiply" type="FieldMatrix&lt;T&gt;" line="227">
                <params>
                    <param name="d" type="T"/>
                </params>
                <declaration name="rowCount" type="int" line="228"/>
                <declaration name="columnCount" type="int" line="229"/>
                <declaration name="out" type="FieldMatrix&amp;lt;T&amp;gt;" line="230"/>
                <scope line="231">
                    <scope line="232"/>
                </scope>
            </method>
            <javadoc line="240">
                {@inheritDoc}                
            </javadoc>
            <method name="multiply" type="FieldMatrix&lt;T&gt;" line="242">
                <params>
                    <param name="m" type="FieldMatrix&lt;T&gt;"/>
                </params>
                <comment line="244">
                    safety check                    
                </comment>
                <declaration name="nRows" type="int" line="246"/>
                <declaration name="nCols" type="int" line="247"/>
                <declaration name="nSum" type="int" line="248"/>
                <declaration name="out" type="FieldMatrix&amp;lt;T&amp;gt;" line="249"/>
                <scope line="250">
                    <scope line="251">
                        <declaration name="sum" type="T" line="252"/>
                        <scope line="253"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="263">
                {@inheritDoc}                
            </javadoc>
            <method name="preMultiply" type="FieldMatrix&lt;T&gt;" line="265">
                <params>
                    <param name="m" type="FieldMatrix&lt;T&gt;"/>
                </params>
            </method>
            <javadoc line="269">
                {@inheritDoc}                
            </javadoc>
            <method name="power" type="FieldMatrix&lt;T&gt;" line="271">
                <params>
                    <param name="p" type="int"/>
                </params>
                <comment line="291">
                    Only log_2(p) operations is used by doing as follows:
                     5^214 = 5^128  5^64  5^16  5^4  5^2
                    
                     In general, the same approach is used for A^p.                    
                </comment>
                <scope line="272"/>
                <scope line="276"/>
                <scope line="280"/>
                <scope line="284"/>
                <declaration name="power" type="int" line="288"/>
                <declaration name="binaryRepresentation" type="char[]" line="297"/>
                <declaration name="nonZeroPositions" type="ArrayList&amp;lt;Integer&amp;gt;" line="299"/>
                <scope line="301">
                    <scope line="302">
                        <declaration name="pos" type="int" line="303"/>
                    </scope>
                </scope>
                <declaration name="results" type="ArrayList&amp;lt;FieldMatrix&amp;lt;T&amp;gt;&amp;gt;" line="308"/>
                <scope line="313">
                    <declaration name="s" type="FieldMatrix&amp;lt;T&amp;gt;" line="314"/>
                    <declaration name="r" type="FieldMatrix&amp;lt;T&amp;gt;" line="315"/>
                </scope>
                <declaration name="result" type="FieldMatrix&amp;lt;T&amp;gt;" line="319"/>
                <scope line="321"/>
            </method>
            <javadoc line="328">
                {@inheritDoc}                
            </javadoc>
            <method name="getData" type="T[][]" line="329">
                <declaration name="data" type="T[][]" line="330"/>
                <scope line="332">
                    <declaration name="dataI" type="T[]" line="333"/>
                    <scope line="334"/>
                </scope>
            </method>
            <javadoc line="342">
                {@inheritDoc}                
            </javadoc>
            <method name="getSubMatrix" type="FieldMatrix&lt;T&gt;" line="345">
                <params>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <declaration name="subMatrix" type="FieldMatrix&amp;lt;T&amp;gt;" line="348"/>
                <scope line="350">
                    <scope line="351"/>
                </scope>
            </method>
            <javadoc line="360">
                {@inheritDoc}                
            </javadoc>
            <method name="getSubMatrix" type="FieldMatrix&lt;T&gt;" line="363">
                <params>
                    <param name="selectedRows" type="int[]"/>
                    <param name="selectedColumns" type="int[]"/>
                </params>
                <comment line="366">
                    safety checks                    
                </comment>
                <comment line="369">
                    copy entries                    
                </comment>
                <declaration name="subMatrix" type="FieldMatrix&amp;lt;T&amp;gt;" line="369"/>
                <anonymous_class line="371">
                    <javadoc line="373">
                        {@inheritDoc}                        
                    </javadoc>
                    <method name="visit" type="T" line="375">
                        <params>
                            <param name="row" type="int"/>
                            <param name="column" type="int"/>
                            <param name="value" type="T"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="385">
                {@inheritDoc}                
            </javadoc>
            <method name="copySubMatrix" type="void" line="390">
                <params>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                    <param name="destination" type="T[][]"/>
                </params>
                <comment line="392">
                    safety checks                    
                </comment>
                <comment line="403">
                    copy entries                    
                </comment>
                <declaration name="rowsCount" type="int" line="393"/>
                <declaration name="columnsCount" type="int" line="394"/>
                <scope line="395"/>
                <anonymous_class line="403">
                    <declaration name="startRow" type="int" line="405"/>
                    <javadoc line="405">
                        Initial row index.                        
                    </javadoc>
                    <declaration name="startColumn" type="int" line="408"/>
                    <javadoc line="408">
                        Initial column index.                        
                    </javadoc>
                    <javadoc line="411">
                        {@inheritDoc}                        
                    </javadoc>
                    <method name="start" type="void" line="415">
                        <params>
                            <param name="rows" type="int"/>
                            <param name="columns" type="int"/>
                            <param name="startRow" type="int"/>
                            <param name="endRow" type="int"/>
                            <param name="startColumn" type="int"/>
                            <param name="endColumn" type="int"/>
                        </params>
                    </method>
                    <javadoc line="420">
                        {@inheritDoc}                        
                    </javadoc>
                    <method name="visit" type="void" line="422">
                        <params>
                            <param name="row" type="int"/>
                            <param name="column" type="int"/>
                            <param name="value" type="T"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="430">
                {@inheritDoc}                
            </javadoc>
            <method name="copySubMatrix" type="void" line="433">
                <params>
                    <param name="selectedRows" type="int[]"/>
                    <param name="selectedColumns" type="int[]"/>
                    <param name="destination" type="T[][]"/>
                </params>
                <comment line="435">
                    safety checks                    
                </comment>
                <comment line="445">
                    copy entries                    
                </comment>
                <scope line="437"/>
                <scope line="445">
                    <declaration name="destinationI" type="T[]" line="446"/>
                    <scope line="447"/>
                </scope>
            </method>
            <javadoc line="454">
                {@inheritDoc}                
            </javadoc>
            <method name="setSubMatrix" type="void" line="458">
                <params>
                    <param name="subMatrix" type="T[][]"/>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <scope line="459"/>
                <declaration name="nRows" type="int" line="462"/>
                <scope line="463"/>
                <declaration name="nCols" type="int" line="467"/>
                <scope line="468"/>
                <scope line="472">
                    <scope line="473"/>
                </scope>
                <scope line="483">
                    <scope line="484"/>
                </scope>
            </method>
            <javadoc line="490">
                {@inheritDoc}                
            </javadoc>
            <method name="getRowMatrix" type="FieldMatrix&lt;T&gt;" line="491">
                <params>
                    <param name="row" type="int"/>
                </params>
                <declaration name="nCols" type="int" line="493"/>
                <declaration name="out" type="FieldMatrix&amp;lt;T&amp;gt;" line="494"/>
                <scope line="495"/>
            </method>
            <javadoc line="503">
                {@inheritDoc}                
            </javadoc>
            <method name="setRowMatrix" type="void" line="505">
                <params>
                    <param name="row" type="int"/>
                    <param name="matrix" type="FieldMatrix&lt;T&gt;"/>
                </params>
                <declaration name="nCols" type="int" line="507"/>
                <scope line="509"/>
                <scope line="514"/>
            </method>
            <javadoc line="520">
                {@inheritDoc}                
            </javadoc>
            <method name="getColumnMatrix" type="FieldMatrix&lt;T&gt;" line="522">
                <params>
                    <param name="column" type="int"/>
                </params>
                <declaration name="nRows" type="int" line="525"/>
                <declaration name="out" type="FieldMatrix&amp;lt;T&amp;gt;" line="526"/>
                <scope line="527"/>
            </method>
            <javadoc line="535">
                {@inheritDoc}                
            </javadoc>
            <method name="setColumnMatrix" type="void" line="537">
                <params>
                    <param name="column" type="int"/>
                    <param name="matrix" type="FieldMatrix&lt;T&gt;"/>
                </params>
                <declaration name="nRows" type="int" line="539"/>
                <scope line="541"/>
                <scope line="546"/>
            </method>
            <javadoc line="552">
                {@inheritDoc}                
            </javadoc>
            <method name="getRowVector" type="FieldVector&lt;T&gt;" line="554">
                <params>
                    <param name="row" type="int"/>
                </params>
            </method>
            <javadoc line="558">
                {@inheritDoc}                
            </javadoc>
            <method name="setRowVector" type="void" line="560">
                <params>
                    <param name="row" type="int"/>
                    <param name="vector" type="FieldVector&lt;T&gt;"/>
                </params>
                <declaration name="nCols" type="int" line="562"/>
                <scope line="563"/>
                <scope line="567"/>
            </method>
            <javadoc line="573">
                {@inheritDoc}                
            </javadoc>
            <method name="getColumnVector" type="FieldVector&lt;T&gt;" line="575">
                <params>
                    <param name="column" type="int"/>
                </params>
            </method>
            <javadoc line="579">
                {@inheritDoc}                
            </javadoc>
            <method name="setColumnVector" type="void" line="581">
                <params>
                    <param name="column" type="int"/>
                    <param name="vector" type="FieldVector&lt;T&gt;"/>
                </params>
                <declaration name="nRows" type="int" line="584"/>
                <scope line="585"/>
                <scope line="589"/>
            </method>
            <javadoc line="595">
                {@inheritDoc}                
            </javadoc>
            <method name="getRow" type="T[]" line="596">
                <params>
                    <param name="row" type="int"/>
                </params>
                <declaration name="nCols" type="int" line="598"/>
                <declaration name="out" type="T[]" line="599"/>
                <scope line="600"/>
            </method>
            <javadoc line="608">
                {@inheritDoc}                
            </javadoc>
            <method name="setRow" type="void" line="610">
                <params>
                    <param name="row" type="int"/>
                    <param name="array" type="T[]"/>
                </params>
                <declaration name="nCols" type="int" line="612"/>
                <scope line="613"/>
                <scope line="616"/>
            </method>
            <javadoc line="622">
                {@inheritDoc}                
            </javadoc>
            <method name="getColumn" type="T[]" line="623">
                <params>
                    <param name="column" type="int"/>
                </params>
                <declaration name="nRows" type="int" line="625"/>
                <declaration name="out" type="T[]" line="626"/>
                <scope line="627"/>
            </method>
            <javadoc line="635">
                {@inheritDoc}                
            </javadoc>
            <method name="setColumn" type="void" line="637">
                <params>
                    <param name="column" type="int"/>
                    <param name="array" type="T[]"/>
                </params>
                <declaration name="nRows" type="int" line="639"/>
                <scope line="640"/>
                <scope line="643"/>
            </method>
            <method name="getEntry" type="T" line="648"/>
            <javadoc line="648">
                {@inheritDoc}                
            </javadoc>
            <method name="setEntry" type="void" line="651"/>
            <javadoc line="651">
                {@inheritDoc}                
            </javadoc>
            <method name="addToEntry" type="void" line="654"/>
            <javadoc line="654">
                {@inheritDoc}                
            </javadoc>
            <method name="multiplyEntry" type="void" line="657"/>
            <javadoc line="657">
                {@inheritDoc}                
            </javadoc>
            <javadoc line="660">
                {@inheritDoc}                
            </javadoc>
            <method name="transpose" type="FieldMatrix&lt;T&gt;" line="661">
                <declaration name="nRows" type="int" line="662"/>
                <declaration name="nCols" type="int" line="663"/>
                <declaration name="out" type="FieldMatrix&amp;lt;T&amp;gt;" line="664"/>
                <anonymous_class line="665">
                    <javadoc line="666">
                        {@inheritDoc}                        
                    </javadoc>
                    <method name="visit" type="void" line="668">
                        <params>
                            <param name="row" type="int"/>
                            <param name="column" type="int"/>
                            <param name="value" type="T"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="676">
                {@inheritDoc}                
            </javadoc>
            <method name="isSquare" type="boolean" line="677"/>
            <method name="getRowDimension" type="int" line="681"/>
            <javadoc line="681">
                {@inheritDoc}                
            </javadoc>
            <method name="getColumnDimension" type="int" line="684"/>
            <javadoc line="684">
                {@inheritDoc}                
            </javadoc>
            <javadoc line="687">
                {@inheritDoc}                
            </javadoc>
            <method name="getTrace" type="T" line="688">
                <declaration name="nRows" type="int" line="689"/>
                <declaration name="nCols" type="int" line="690"/>
                <scope line="691"/>
                <declaration name="trace" type="T" line="694"/>
                <scope line="695"/>
            </method>
            <javadoc line="701">
                {@inheritDoc}                
            </javadoc>
            <method name="operate" type="T[]" line="702">
                <params>
                    <param name="v" type="T[]"/>
                </params>
                <declaration name="nRows" type="int" line="704"/>
                <declaration name="nCols" type="int" line="705"/>
                <scope line="706"/>
                <declaration name="out" type="T[]" line="710"/>
                <scope line="711">
                    <declaration name="sum" type="T" line="712"/>
                    <scope line="713"/>
                </scope>
            </method>
            <javadoc line="722">
                {@inheritDoc}                
            </javadoc>
            <method name="operate" type="FieldVector&lt;T&gt;" line="724">
                <params>
                    <param name="v" type="FieldVector&lt;T&gt;"/>
                </params>
                <scope line="725"/>
                <scope line="727">
                    <declaration name="nRows" type="int" line="728"/>
                    <declaration name="nCols" type="int" line="729"/>
                    <scope line="730"/>
                    <declaration name="out" type="T[]" line="734"/>
                    <scope line="735">
                        <declaration name="sum" type="T" line="736"/>
                        <scope line="737"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="747">
                {@inheritDoc}                
            </javadoc>
            <method name="preMultiply" type="T[]" line="748">
                <params>
                    <param name="v" type="T[]"/>
                </params>
                <declaration name="nRows" type="int" line="750"/>
                <declaration name="nCols" type="int" line="751"/>
                <scope line="752"/>
                <declaration name="out" type="T[]" line="756"/>
                <scope line="757">
                    <declaration name="sum" type="T" line="758"/>
                    <scope line="759"/>
                </scope>
            </method>
            <javadoc line="768">
                {@inheritDoc}                
            </javadoc>
            <method name="preMultiply" type="FieldVector&lt;T&gt;" line="770">
                <params>
                    <param name="v" type="FieldVector&lt;T&gt;"/>
                </params>
                <scope line="771"/>
                <scope line="773">
                    <declaration name="nRows" type="int" line="774"/>
                    <declaration name="nCols" type="int" line="775"/>
                    <scope line="776"/>
                    <declaration name="out" type="T[]" line="780"/>
                    <scope line="781">
                        <declaration name="sum" type="T" line="782"/>
                        <scope line="783"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="793">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="T" line="794">
                <params>
                    <param name="visitor" type="FieldMatrixChangingVisitor&lt;T&gt;"/>
                </params>
                <declaration name="rows" type="int" line="795"/>
                <declaration name="columns" type="int" line="796"/>
                <scope line="798">
                    <scope line="799">
                        <declaration name="oldValue" type="T" line="800"/>
                        <declaration name="newValue" type="T" line="801"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="808">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="T" line="809">
                <params>
                    <param name="visitor" type="FieldMatrixPreservingVisitor&lt;T&gt;"/>
                </params>
                <declaration name="rows" type="int" line="810"/>
                <declaration name="columns" type="int" line="811"/>
                <scope line="813">
                    <scope line="814"/>
                </scope>
            </method>
            <javadoc line="821">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="T" line="825">
                <params>
                    <param name="visitor" type="FieldMatrixChangingVisitor&lt;T&gt;"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="829">
                    <scope line="830">
                        <declaration name="oldValue" type="T" line="831"/>
                        <declaration name="newValue" type="T" line="832"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="839">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="T" line="843">
                <params>
                    <param name="visitor" type="FieldMatrixPreservingVisitor&lt;T&gt;"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="847">
                    <scope line="848"/>
                </scope>
            </method>
            <javadoc line="855">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInColumnOrder" type="T" line="856">
                <params>
                    <param name="visitor" type="FieldMatrixChangingVisitor&lt;T&gt;"/>
                </params>
                <declaration name="rows" type="int" line="857"/>
                <declaration name="columns" type="int" line="858"/>
                <scope line="860">
                    <scope line="861">
                        <declaration name="oldValue" type="T" line="862"/>
                        <declaration name="newValue" type="T" line="863"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="870">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInColumnOrder" type="T" line="871">
                <params>
                    <param name="visitor" type="FieldMatrixPreservingVisitor&lt;T&gt;"/>
                </params>
                <declaration name="rows" type="int" line="872"/>
                <declaration name="columns" type="int" line="873"/>
                <scope line="875">
                    <scope line="876"/>
                </scope>
            </method>
            <javadoc line="883">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInColumnOrder" type="T" line="887">
                <params>
                    <param name="visitor" type="FieldMatrixChangingVisitor&lt;T&gt;"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="891">
                    <scope line="892">
                        <declaration name="oldValue" type="T" line="893"/>
                        <declaration name="newValue" type="T" line="894"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="901">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInColumnOrder" type="T" line="905">
                <params>
                    <param name="visitor" type="FieldMatrixPreservingVisitor&lt;T&gt;"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="909">
                    <scope line="910"/>
                </scope>
            </method>
            <javadoc line="917">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInOptimizedOrder" type="T" line="918">
                <params>
                    <param name="visitor" type="FieldMatrixChangingVisitor&lt;T&gt;"/>
                </params>
            </method>
            <javadoc line="922">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInOptimizedOrder" type="T" line="923">
                <params>
                    <param name="visitor" type="FieldMatrixPreservingVisitor&lt;T&gt;"/>
                </params>
            </method>
            <javadoc line="927">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInOptimizedOrder" type="T" line="931">
                <params>
                    <param name="visitor" type="FieldMatrixChangingVisitor&lt;T&gt;"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
            </method>
            <javadoc line="935">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInOptimizedOrder" type="T" line="939">
                <params>
                    <param name="visitor" type="FieldMatrixPreservingVisitor&lt;T&gt;"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
            </method>
            <javadoc line="943">
                Get a string representation for this matrix.                
                <return>
                    a string representation for this matrix                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="948">
                <declaration name="nRows" type="int" line="949"/>
                <declaration name="nCols" type="int" line="950"/>
                <declaration name="res" type="StringBuffer" line="951"/>
                <declaration name="fullClassName" type="String" line="952"/>
                <declaration name="shortClassName" type="String" line="953"/>
                <scope line="956">
                    <scope line="957"/>
                    <scope line="961">
                        <scope line="962"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="974">
                Returns true iff &lt;code&gt;object&lt;/code&gt; is a
                  &lt;code&gt;FieldMatrix&lt;/code&gt; instance with the same dimensions as this
                  and all corresponding matrix entries are equal.                
                <param>
                    object the object to test equality against.                    
                </param>
                <return>
                    true if object equals this                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="983">
                <params>
                    <param name="object" type="Object"/>
                </params>
                <scope line="984"/>
                <scope line="987"/>
                <declaration name="m" type="FieldMatrix&amp;lt;?&amp;gt;" line="990"/>
                <declaration name="nRows" type="int" line="991"/>
                <declaration name="nCols" type="int" line="992"/>
                <scope line="993"/>
                <scope line="996">
                    <scope line="997">
                        <scope line="998"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="1006">
                Computes a hashcode for the matrix.                
                <return>
                    hashcode for matrix                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="1012">
                <declaration name="ret" type="int" line="1013"/>
                <declaration name="nRows" type="int" line="1014"/>
                <declaration name="nCols" type="int" line="1015"/>
                <scope line="1018">
                    <scope line="1019"/>
                </scope>
            </method>
            <javadoc line="1026">
                Check if a row index is valid.                
                <param>
                    row Row index to check.                    
                </param>
                <throws>
                    OutOfRangeException if {@code index} is not valid.                    
                </throws>
            </javadoc>
            <method name="checkRowIndex" type="void" line="1032">
                <params>
                    <param name="row" type="int"/>
                </params>
                <scope line="1033"/>
            </method>
            <javadoc line="1039">
                Check if a column index is valid.                
                <param>
                    column Column index to check.                    
                </param>
                <throws>
                    OutOfRangeException if {@code index} is not valid.                    
                </throws>
            </javadoc>
            <method name="checkColumnIndex" type="void" line="1046">
                <params>
                    <param name="column" type="int"/>
                </params>
                <scope line="1047"/>
            </method>
            <javadoc line="1053">
                Check if submatrix ranges indices are valid.
                  Rows and columns are indicated counting from 0 to n-1.                
                <param>
                    startRow Initial row index.                    
                </param>
                <param>
                    endRow Final row index.                    
                </param>
                <param>
                    startColumn Initial column index.                    
                </param>
                <param>
                    endColumn Final column index.                    
                </param>
                <throws>
                    OutOfRangeException if the indices are not valid.                    
                </throws>
                <throws>
                    NumberIsTooSmallException if {@code endRow &lt; startRow} or{@code endColumn &lt; startColumn}.                    
                </throws>
            </javadoc>
            <method name="checkSubMatrixIndex" type="void" line="1067">
                <params>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="1070"/>
                <scope line="1077"/>
            </method>
            <javadoc line="1083">
                Check if submatrix ranges indices are valid.
                  Rows and columns are indicated counting from 0 to n-1.                
                <param>
                    selectedRows Array of row indices.                    
                </param>
                <param>
                    selectedColumns Array of column indices.                    
                </param>
                <throws>
                    NullArgumentException if the arrays are {@code null}.                    
                </throws>
                <throws>
                    NoDataException if the arrays have zero length.                    
                </throws>
                <throws>
                    OutOfRangeException if row or column selections are not valid.                    
                </throws>
            </javadoc>
            <method name="checkSubMatrixIndex" type="void" line="1094">
                <params>
                    <param name="selectedRows" type="int[]"/>
                    <param name="selectedColumns" type="int[]"/>
                </params>
                <scope line="1096"/>
                <scope line="1100"/>
                <scope line="1104"/>
                <scope line="1107"/>
            </method>
            <javadoc line="1112">
                Check if a matrix is addition compatible with the instance.                
                <param>
                    m Matrix to check.                    
                </param>
                <throws>
                    MatrixDimensionMismatchException if the matrix is not
                      addition-compatible with instance.                    
                </throws>
            </javadoc>
            <method name="checkAdditionCompatible" type="void" line="1120">
                <params>
                    <param name="m" type="FieldMatrix&lt;T&gt;"/>
                </params>
                <scope line="1122"/>
            </method>
            <javadoc line="1128">
                Check if a matrix is subtraction compatible with the instance.                
                <param>
                    m Matrix to check.                    
                </param>
                <throws>
                    MatrixDimensionMismatchException if the matrix is not
                      subtraction-compatible with instance.                    
                </throws>
            </javadoc>
            <method name="checkSubtractionCompatible" type="void" line="1136">
                <params>
                    <param name="m" type="FieldMatrix&lt;T&gt;"/>
                </params>
                <scope line="1138"/>
            </method>
            <javadoc line="1144">
                Check if a matrix is multiplication compatible with the instance.                
                <param>
                    m Matrix to check.                    
                </param>
                <throws>
                    DimensionMismatchException if the matrix is not
                      multiplication-compatible with instance.                    
                </throws>
            </javadoc>
            <method name="checkMultiplicationCompatible" type="void" line="1152">
                <params>
                    <param name="m" type="FieldMatrix&lt;T&gt;"/>
                </params>
                <scope line="1153"/>
            </method>
        </class>
    </source>