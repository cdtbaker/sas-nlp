<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.enclosing">
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="org.apache.commons.math3.exception.MathInternalError"/>
        <import package="org.apache.commons.math3.geometry.Point"/>
        <import package="org.apache.commons.math3.geometry.Space"/>
        <class name="WelzlEncloser" line="26">
            <type_params>
                <type_param name="S"/>
                <type_param name="P"/>
            </type_params>
            <implements interface="Encloser">
                <type_params>
                    <type_param name="S"/>
                    <type_param name="P"/>
                </type_params>
            </implements>
            <javadoc line="26">
                Class implementing Emo Welzl algorithm to find the smallest enclosing ball in linear time.
                  &lt;p&gt;
                  The class implements the algorithm described in paper &lt;a
                  href=&quot;http://www.inf.ethz.ch/personal/emo/PublFiles/SmallEnclDisk_LNCS555_91.pdf&quot;&gt;Smallest
                  Enclosing Disks (Balls and Ellipsoids)&lt;/a&gt; by Emo Welzl, Lecture Notes in Computer Science
                  555 (1991) 359-370. The pivoting improvement published in the paper &lt;a
                  href=&quot;http://www.inf.ethz.ch/personal/gaertner/texts/own_work/esa99_final.pdf&quot;&gt;Fast and
                  Robust Smallest Enclosing Balls&lt;/a&gt;, by Bernd Gärtner and further modified in
                  paper &lt;a
                  href=http://www.idt.mdh.se/kurser/ct3340/ht12/MINICONFERENCE/FinalPapers/ircse12_submission_30.pdf&quot;&gt;
                  Efficient Computation of Smallest Enclosing Balls in Three Dimensions&lt;/a&gt; by Linus Källberg
                  to avoid performing local copies of data have been included.
                  &lt;/p&gt;                
                <param>
                    &lt;S&gt;
                       Space type.                    
                </param>
                <param>
                    &lt;P&gt;
                       Point type.                    
                </param>
                <version>
                    $Id: WelzlEncloser.java 1591835 2014-05-02 09:04:01Z tn $                    
                </version>
                <since>
                    3.3                    
                </since>
            </javadoc>
            <declaration name="tolerance" type="double" line="46"/>
            <javadoc line="46">
                Tolerance below which points are consider to be identical.                
            </javadoc>
            <declaration name="generator" type="SupportBallGenerator&amp;lt;S,P&amp;gt;" line="49"/>
            <javadoc line="49">
                Generator for balls on support.                
            </javadoc>
            <javadoc line="52">
                Simple constructor.                
                <param>
                    tolerance below which points are consider to be identical                    
                </param>
                <param>
                    generator generator for balls on support                    
                </param>
            </javadoc>
            <method name="WelzlEncloser" type="constructor" line="56">
                <params>
                    <param name="tolerance" type="double"/>
                    <param name="generator" type="SupportBallGenerator&lt;S,P&gt;"/>
                </params>
            </method>
            <javadoc line="61">
                {@inheritDoc}                
            </javadoc>
            <method name="enclose" type="EnclosingBall&lt;S,P&gt;" line="62">
                <params>
                    <param name="points" type="Iterable&lt;P&gt;"/>
                </params>
                <comment line="66">
                    return an empty ball                    
                </comment>
                <comment line="70">
                    Emo Welzl algorithm with Bernd Gärtner and Linus Källberg improvements                    
                </comment>
                <scope line="64"/>
            </method>
            <javadoc line="74">
                Compute enclosing ball using Gärtner&apos;s pivoting heuristic.                
                <param>
                    points points to be enclosed                    
                </param>
                <return>
                    enclosing ball                    
                </return>
            </javadoc>
            <method name="pivotingBall" type="EnclosingBall&lt;S,P&gt;" line="78">
                <params>
                    <param name="points" type="Iterable&lt;P&gt;"/>
                </params>
                <comment line="85">
                    start with only first point selected as a candidate support                    
                </comment>
                <comment line="91">
                    select the point farthest to current ball                    
                </comment>
                <comment line="95">
                    we have found a ball containing all points                    
                </comment>
                <comment line="99">
                    recurse search, restricted to the small subset containing support and farthest point                    
                </comment>
                <comment line="105">
                    this should never happen                    
                </comment>
                <comment line="109">
                    it was an interesting point, move it to the front
                     according to Gärtner&apos;s heuristic                    
                </comment>
                <comment line="113">
                    prune the least interesting points                    
                </comment>
                <declaration name="first" type="P" line="80"/>
                <declaration name="extreme" type="List&amp;lt;P&amp;gt;" line="81"/>
                <declaration name="support" type="List&amp;lt;P&amp;gt;" line="82"/>
                <declaration name="ball" type="EnclosingBall&amp;lt;S,P&amp;gt;" line="86"/>
                <scope line="88">
                    <declaration name="farthest" type="P" line="91"/>
                    <scope line="93"/>
                    <declaration name="savedBall" type="EnclosingBall&amp;lt;S,P&amp;gt;" line="101"/>
                    <scope line="103"/>
                </scope>
            </method>
            <javadoc line="119">
                Compute enclosing ball using Welzl&apos;s move to front heuristic.                
                <param>
                    extreme subset of extreme points                    
                </param>
                <param>
                    nbExtreme number of extreme points to consider                    
                </param>
                <param>
                    support points that must belong to the ball support                    
                </param>
                <return>
                    enclosing ball, for the extreme subset only                    
                </return>
            </javadoc>
            <method name="moveToFrontBall" type="EnclosingBall&lt;S,P&gt;" line="126">
                <params>
                    <param name="extreme" type="List&lt;P&gt;"/>
                    <param name="nbExtreme" type="int"/>
                    <param name="support" type="List&lt;P&gt;"/>
                </params>
                <comment line="129">
                    create a new ball on the prescribed support                    
                </comment>
                <comment line="138">
                    we have found an outside point,
                     enlarge the ball by adding it to the support                    
                </comment>
                <comment line="144">
                    it was an interesting point, move it to the front
                     according to Welzl&apos;s heuristic                    
                </comment>
                <declaration name="ball" type="EnclosingBall&amp;lt;S,P&amp;gt;" line="129"/>
                <scope line="131">
                    <scope line="133">
                        <declaration name="pi" type="P" line="134"/>
                        <scope line="135">
                            <scope line="145"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="159">
                Select the point farthest to the current ball.                
                <param>
                    points points to be enclosed                    
                </param>
                <param>
                    ball current ball                    
                </param>
                <return>
                    farthest point                    
                </return>
            </javadoc>
            <method name="selectFarthest" type="P" line="164">
                <params>
                    <param name="points" type="Iterable&lt;P&gt;"/>
                    <param name="ball" type="EnclosingBall&lt;S,P&gt;"/>
                </params>
                <declaration name="center" type="P" line="166"/>
                <declaration name="farthest" type="P" line="167"/>
                <declaration name="dMax" type="double" line="168"/>
                <scope line="170">
                    <declaration name="d" type="double" line="171"/>
                    <scope line="172"/>
                </scope>
            </method>
        </class>
    </source>