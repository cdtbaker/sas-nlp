<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.spherical.oned">
        <import package="org.apache.commons.math3.geometry.Point"/>
        <import package="org.apache.commons.math3.geometry.partitioning.Hyperplane"/>
        <class name="LimitAngle" line="22">
            <implements interface="Hyperplane">
                <type_params>
                    <type_param name="Sphere1D"/>
                </type_params>
            </implements>
            <javadoc line="22">
                This class represents a 1D oriented hyperplane on the circle.
                  &lt;p&gt;An hyperplane on the 1-sphere is an angle with an orientation.&lt;/p&gt;
                  &lt;p&gt;Instances of this class are guaranteed to be immutable.&lt;/p&gt;                
                <version>
                    $Id: LimitAngle.java 1560115 2014-01-21 17:49:13Z luc $                    
                </version>
                <since>
                    3.3                    
                </since>
            </javadoc>
            <declaration name="location" type="S1Point" line="30"/>
            <javadoc line="30">
                Angle location.                
            </javadoc>
            <declaration name="direct" type="boolean" line="33"/>
            <javadoc line="33">
                Orientation.                
            </javadoc>
            <declaration name="tolerance" type="double" line="36"/>
            <javadoc line="36">
                Tolerance below which angles are considered identical.                
            </javadoc>
            <javadoc line="39">
                Simple constructor.                
                <param>
                    location location of the hyperplane                    
                </param>
                <param>
                    direct if true, the plus side of the hyperplane is towards
                      angles greater than {@code location}                    
                </param>
                <param>
                    tolerance tolerance below which angles are considered identical                    
                </param>
            </javadoc>
            <method name="LimitAngle" type="constructor" line="45">
                <params>
                    <param name="location" type="S1Point"/>
                    <param name="direct" type="boolean"/>
                    <param name="tolerance" type="double"/>
                </params>
            </method>
            <javadoc line="51">
                Copy the instance.
                  &lt;p&gt;Since instances are immutable, this method directly returns
                  the instance.&lt;/p&gt;                
                <return>
                    the instance itself                    
                </return>
            </javadoc>
            <method name="copySelf" type="LimitAngle" line="56"/>
            <javadoc line="60">
                {@inheritDoc}                
            </javadoc>
            <method name="getOffset" type="double" line="61">
                <params>
                    <param name="point" type="Point&lt;Sphere1D&gt;"/>
                </params>
                <declaration name="delta" type="double" line="62"/>
            </method>
            <javadoc line="66">
                Check if the hyperplane orientation is direct.                
                <return>
                    true if the plus side of the hyperplane is towards
                      angles greater than hyperplane location                    
                </return>
            </javadoc>
            <method name="isDirect" type="boolean" line="70"/>
            <javadoc line="74">
                Get the reverse of the instance.
                  &lt;p&gt;Get a limit angle with reversed orientation with respect to the
                  instance. A new object is built, the instance is untouched.&lt;/p&gt;                
                <return>
                    a new limit angle, with orientation opposite to the instance orientation                    
                </return>
            </javadoc>
            <method name="getReverse" type="LimitAngle" line="79"/>
            <javadoc line="83">
                Build a region covering the whole hyperplane.
                  &lt;p&gt;Since this class represent zero dimension spaces which does
                  not have lower dimension sub-spaces, this method returns a dummy
                  implementation of a {@link org.apache.commons.math3.geometry.partitioning.SubHyperplane SubHyperplane}.
                  This implementation is only used to allow the {@link org.apache.commons.math3.geometry.partitioning.SubHyperplaneSubHyperplane} class implementation to work properly, it should
                  &lt;em&gt;not&lt;/em&gt; be used otherwise.&lt;/p&gt;                
                <return>
                    a dummy sub hyperplane                    
                </return>
            </javadoc>
            <method name="wholeHyperplane" type="SubLimitAngle" line="94"/>
            <javadoc line="98">
                Build a region covering the whole space.                
                <return>
                    a region containing the instance (really an {@link ArcsSet IntervalsSet} instance)                    
                </return>
            </javadoc>
            <method name="wholeSpace" type="ArcsSet" line="102"/>
            <javadoc line="106">
                {@inheritDoc}                
            </javadoc>
            <method name="sameOrientationAs" type="boolean" line="107">
                <params>
                    <param name="other" type="Hyperplane&lt;Sphere1D&gt;"/>
                </params>
            </method>
            <javadoc line="111">
                Get the hyperplane location on the circle.                
                <return>
                    the hyperplane location                    
                </return>
            </javadoc>
            <method name="getLocation" type="S1Point" line="114"/>
            <javadoc line="118">
                {@inheritDoc}                
            </javadoc>
            <method name="project" type="Point&lt;Sphere1D&gt;" line="119">
                <params>
                    <param name="point" type="Point&lt;Sphere1D&gt;"/>
                </params>
            </method>
            <javadoc line="123">
                {@inheritDoc}                
            </javadoc>
            <method name="getTolerance" type="double" line="124"/>
        </class>
    </source>