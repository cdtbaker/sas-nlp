<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.solvers">
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.exception.NoBracketingException"/>
        <import package="org.apache.commons.math3.exception.TooManyEvaluationsException"/>
        <class name="RiddersSolver" line="23">
            <extends class="AbstractUnivariateSolver"/>
            <javadoc line="23">
                Implements the &lt;a href=&quot;http://mathworld.wolfram.com/RiddersMethod.html&quot;&gt;
                  Ridders&apos; Method&lt;/a&gt; for root finding of real univariate functions. For
                  reference, see C. Ridders, &lt;i&gt;A new algorithm for computing a single root
                  of a real continuous function &lt;/i&gt;, IEEE Transactions on Circuits and
                  Systems, 26 (1979), 979 - 980.
                  &lt;p&gt;
                  The function should be continuous but not necessarily smooth.&lt;/p&gt;                
                <version>
                    $Id: RiddersSolver.java 1379560 2012-08-31 19:40:30Z erans $                    
                </version>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <declaration name="DEFAULT_ABSOLUTE_ACCURACY" type="double" line="36"/>
            <javadoc line="36">
                Default absolute accuracy.                
            </javadoc>
            <javadoc line="39">
                Construct a solver with default accuracy (1e-6).                
            </javadoc>
            <method name="RiddersSolver" type="constructor" line="42"/>
            <javadoc line="45">
                Construct a solver.                
                <param>
                    absoluteAccuracy Absolute accuracy.                    
                </param>
            </javadoc>
            <method name="RiddersSolver" type="constructor" line="50">
                <params>
                    <param name="absoluteAccuracy" type="double"/>
                </params>
            </method>
            <javadoc line="53">
                Construct a solver.                
                <param>
                    relativeAccuracy Relative accuracy.                    
                </param>
                <param>
                    absoluteAccuracy Absolute accuracy.                    
                </param>
            </javadoc>
            <method name="RiddersSolver" type="constructor" line="60">
                <params>
                    <param name="relativeAccuracy" type="double"/>
                    <param name="absoluteAccuracy" type="double"/>
                </params>
            </method>
            <javadoc line="64">
                {@inheritDoc}                
            </javadoc>
            <method name="doSolve" type="double" line="70">
                <comment line="73">
                    [x1, x2] is the bracketing interval in each iteration                    
                </comment>
                <comment line="74">
                    x3 is the midpoint of [x1, x2]                    
                </comment>
                <comment line="75">
                    x is the new root approximation and an endpoint of the new interval                    
                </comment>
                <comment line="81">
                    check for zeros before verifying bracketing                    
                </comment>
                <comment line="96">
                    calculate the new root approximation                    
                </comment>
                <comment line="102">
                    delta &gt; 1 due to bracketing                    
                </comment>
                <comment line="105">
                    correction != 0                    
                </comment>
                <comment line="108">
                    check for convergence                    
                </comment>
                <comment line="117">
                    prepare the new interval for next iteration                    
                </comment>
                <comment line="118">
                    Ridders&apos; method guarantees x1 &lt; x &lt; x2                    
                </comment>
                <comment line="119">
                    x1 &lt; x &lt; x3                    
                </comment>
                <comment line="129">
                    x3 &lt; x &lt; x2                    
                </comment>
                <declaration name="min" type="double" line="71"/>
                <declaration name="max" type="double" line="72"/>
                <declaration name="x1" type="double" line="76"/>
                <declaration name="y1" type="double" line="77"/>
                <declaration name="x2" type="double" line="78"/>
                <declaration name="y2" type="double" line="79"/>
                <scope line="82"/>
                <scope line="85"/>
                <declaration name="absoluteAccuracy" type="double" line="90"/>
                <declaration name="functionValueAccuracy" type="double" line="91"/>
                <declaration name="relativeAccuracy" type="double" line="92"/>
                <declaration name="oldx" type="double" line="94"/>
                <scope line="95">
                    <declaration name="x3" type="double" line="97"/>
                    <declaration name="y3" type="double" line="98"/>
                    <scope line="99"/>
                    <declaration name="delta" type="double" line="102"/>
                    <declaration name="correction" type="double" line="103"/>
                    <declaration name="x" type="double" line="105"/>
                    <declaration name="y" type="double" line="106"/>
                    <declaration name="tolerance" type="double" line="109"/>
                    <scope line="110"/>
                    <scope line="113"/>
                    <scope line="119">
                        <scope line="120"/>
                        <scope line="123"/>
                    </scope>
                    <scope line="129">
                        <scope line="130"/>
                        <scope line="133"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>