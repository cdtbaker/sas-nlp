<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="org.apache.commons.math3.util.IterationEvent"/>
        <import package="org.apache.commons.math3.exception.MathUnsupportedOperationException"/>
        <class name="IterativeLinearSolverEvent" line="4">
            <extends class="IterationEvent"/>
            <javadoc line="4">
                This is the base class for all events occuring during the iterations of a{@link IterativeLinearSolver}.                
                <version>
                    $Id: IterativeLinearSolverEvent.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
                <since>
                    3.0                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="10"/>
            <javadoc line="10">
                Serialization identifier.                
            </javadoc>
            <javadoc line="14">
                Creates a new instance of this class.                
                <param>
                    source the iterative algorithm on which the event initially
                      occurred                    
                </param>
                <param>
                    iterations the number of iterations performed at the time{@code this} event is created                    
                </param>
            </javadoc>
            <method name="IterativeLinearSolverEvent" type="constructor" line="20">
                <params>
                    <param name="source" type="Object"/>
                    <param name="iterations" type="int"/>
                </params>
            </method>
            <method name="getRightHandSideVector" type="RealVector" line="23"/>
            <javadoc line="23">
                Returns the current right-hand side of the linear system to be solved.
                  This method should return an unmodifiable view, or a deep copy of the
                  actual right-hand side vector, in order not to compromise subsequent
                  iterations of the source {@link IterativeLinearSolver}.                
                <return>
                    the right-hand side vector, b                    
                </return>
            </javadoc>
            <method name="getNormOfResidual" type="double" line="31"/>
            <javadoc line="31">
                Returns the norm of the residual. The returned value is not required to
                  be &lt;em&gt;exact&lt;/em&gt;. Instead, the norm of the so-called &lt;em&gt;updated&lt;/em&gt;
                  residual (if available) should be returned. For example, the{@link ConjugateGradient conjugate gradient} method computes a sequence
                  of residuals, the norm of which is cheap to compute. However, due to
                  accumulation of round-off errors, this residual might differ from the
                  true residual after some iterations. See e.g. A. Greenbaum and
                  Z. Strakos, &lt;em&gt;Predicting the Behavior of Finite Precision Lanzos and
                  Conjugate Gradient Computations&lt;/em&gt;, Technical Report 538, Department of
                  Computer Science, New York University, 1991 (available
                  &lt;a href=&quot;http://www.archive.org/details/predictingbehavi00gree&quot;&gt;here&lt;/a&gt;).                
                <return>
                    the norm of the residual, ||r||                    
                </return>
            </javadoc>
            <javadoc line="45">
                &lt;p&gt;
                  Returns the residual. This is an optional operation, as all iterative
                  linear solvers do not provide cheap estimate of the updated residual
                  vector, in which case
                  &lt;/p&gt;
                  &lt;ul&gt;
                  &lt;li&gt;this method should throw a{@link MathUnsupportedOperationException},&lt;/li&gt;
                  &lt;li&gt;{@link #providesResidual()} returns {@code false}.&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;p&gt;
                  The default implementation throws a{@link MathUnsupportedOperationException}. If this method is overriden,
                  then {@link #providesResidual()} should be overriden as well.
                  &lt;/p&gt;                
                <return>
                    the updated residual, r                    
                </return>
            </javadoc>
            <method name="getResidual" type="RealVector" line="61"/>
            <method name="getSolution" type="RealVector" line="64"/>
            <javadoc line="64">
                Returns the current estimate of the solution to the linear system to be
                  solved. This method should return an unmodifiable view, or a deep copy of
                  the actual current solution, in order not to compromise subsequent
                  iterations of the source {@link IterativeLinearSolver}.                
                <return>
                    the solution, x                    
                </return>
            </javadoc>
            <javadoc line="72">
                Returns {@code true} if {@link #getResidual()} is supported. The default
                  implementation returns {@code false}.                
                <return>
                    {@code false} if {@link #getResidual()} throws a{@link MathUnsupportedOperationException}                    
                </return>
            </javadoc>
            <method name="providesResidual" type="boolean" line="77"/>
        </class>
    </source>