<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.genetics">
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <class name="TournamentSelection" line="6">
            <implements interface="SelectionPolicy"/>
            <javadoc line="6">
                Tournament selection scheme. Each of the two selected chromosomes is selected
                  based on n-ary tournament -- this is done by drawing {@link #arity} random
                  chromosomes without replacement from the population, and then selecting the
                  fittest chromosome among them.                
                <since>
                    2.0                    
                </since>
                <version>
                    $Id: TournamentSelection.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
            </javadoc>
            <declaration name="arity" type="int" line="15"/>
            <javadoc line="15">
                number of chromosomes included in the tournament selections                
            </javadoc>
            <javadoc line="19">
                Creates a new TournamentSelection instance.                
                <param>
                    arity how many chromosomes will be drawn to the tournament                    
                </param>
            </javadoc>
            <method name="TournamentSelection" type="constructor" line="23">
                <params>
                    <param name="arity" type="int"/>
                </params>
            </method>
            <javadoc line="26">
                Select two chromosomes from the population. Each of the two selected
                  chromosomes is selected based on n-ary tournament -- this is done by
                  drawing {@link #arity} random chromosomes without replacement from the
                  population, and then selecting the fittest chromosome among them.                
                <param>
                    population the population from which the chromosomes are chosen.                    
                </param>
                <return>
                    the selected chromosomes.                    
                </return>
                <throws>
                    MathIllegalArgumentException if the tournament arity is bigger than the population size                    
                </throws>
            </javadoc>
            <method name="select" type="ChromosomePair" line="35">
                <params>
                    <param name="population" type="Population"/>
                </params>
            </method>
            <javadoc line="38">
                Helper for {@link #select(Population)}. Draw {@link #arity} random chromosomes without replacement from the
                  population, and then select the fittest chromosome among them.                
                <param>
                    population the population from which the chromosomes are choosen.                    
                </param>
                <return>
                    the selected chromosome.                    
                </return>
                <throws>
                    MathIllegalArgumentException if the tournament arity is bigger than the population size                    
                </throws>
            </javadoc>
            <method name="tournament" type="Chromosome" line="45">
                <params>
                    <param name="population" type="ListPopulation"/>
                </params>
                <scope line="46"/>
                <anonymous_class line="49">
                    <method name="nextGeneration" type="Population" line="50"/>
                </anonymous_class>
                <declaration name="tournamentPopulation" type="ListPopulation" line="49"/>
                <declaration name="chromosomes" type="List&lt;Chromosome&gt;" line="55"/>
                <scope line="56">
                    <declaration name="rind" type="int" line="57"/>
                </scope>
            </method>
            <javadoc line="63">
                Gets the arity (number of chromosomes drawn to the tournament).                
                <return>
                    arity of the tournament                    
                </return>
            </javadoc>
            <method name="getArity" type="int" line="67"/>
            <javadoc line="70">
                Sets the arity (number of chromosomes drawn to the tournament).                
                <param>
                    arity arity of the tournament                    
                </param>
            </javadoc>
            <method name="setArity" type="void" line="74">
                <params>
                    <param name="arity" type="int"/>
                </params>
            </method>
        </class>
    </source>