<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.ml.clustering.evaluation">
        <import package="java.util.List"/>
        <import package="org.apache.commons.math3.ml.clustering.CentroidCluster"/>
        <import package="org.apache.commons.math3.ml.clustering.Cluster"/>
        <import package="org.apache.commons.math3.ml.clustering.Clusterable"/>
        <import package="org.apache.commons.math3.ml.clustering.DoublePoint"/>
        <import package="org.apache.commons.math3.ml.distance.DistanceMeasure"/>
        <import package="org.apache.commons.math3.ml.distance.EuclideanDistance"/>
        <class name="ClusterEvaluator" line="29">
            <type_params>
                <type_param name="T"/>
            </type_params>
            <javadoc line="29">
                Base class for cluster evaluation methods.                
                <param>
                    &lt;T&gt;
                       type of the clustered points                    
                </param>
                <version>
                    $Id: ClusterEvaluator.java 1542545 2013-11-16 18:48:48Z tn $                    
                </version>
                <since>
                    3.3                    
                </since>
            </javadoc>
            <declaration name="measure" type="DistanceMeasure" line="38"/>
            <javadoc line="38">
                The distance measure to use when evaluating the cluster.                
            </javadoc>
            <javadoc line="41">
                Creates a new cluster evaluator with an {@link EuclideanDistance}as distance measure.                
            </javadoc>
            <method name="ClusterEvaluator" type="constructor" line="45"/>
            <javadoc line="49">
                Creates a new cluster evaluator with the given distance measure.                
                <param>
                    measure the distance measure to use                    
                </param>
            </javadoc>
            <method name="ClusterEvaluator" type="constructor" line="53">
                <params>
                    <param name="measure" type="DistanceMeasure"/>
                </params>
            </method>
            <method name="score" type="double" line="57"/>
            <javadoc line="57">
                Computes the evaluation score for the given list of clusters.                
                <param>
                    clusters the clusters to evaluate                    
                </param>
                <return>
                    the computed score                    
                </return>
            </javadoc>
            <javadoc line="64">
                Returns whether the first evaluation score is considered to be better
                  than the second one by this evaluator.
                  &lt;p&gt;
                  Specific implementations shall override this method if the returned scores
                  do not follow the same ordering, i.e. smaller score is better.                
                <param>
                    score1 the first score                    
                </param>
                <param>
                    score2 the second score                    
                </param>
                <return>
                    {@code true} if the first score is considered to be better, {@code false} otherwise                    
                </return>
            </javadoc>
            <method name="isBetterScore" type="boolean" line="75">
                <params>
                    <param name="score1" type="double"/>
                    <param name="score2" type="double"/>
                </params>
            </method>
            <javadoc line="79">
                Calculates the distance between two {@link Clusterable} instances
                  with the configured {@link DistanceMeasure}.                
                <param>
                    p1 the first clusterable                    
                </param>
                <param>
                    p2 the second clusterable                    
                </param>
                <return>
                    the distance between the two clusterables                    
                </return>
            </javadoc>
            <method name="distance" type="double" line="87">
                <params>
                    <param name="p1" type="Clusterable"/>
                    <param name="p2" type="Clusterable"/>
                </params>
            </method>
            <javadoc line="91">
                Computes the centroid for a cluster.                
                <param>
                    cluster the cluster                    
                </param>
                <return>
                    the computed centroid for the cluster,
                      or {@code null} if the cluster does not contain any points                    
                </return>
            </javadoc>
            <method name="centroidOf" type="Clusterable" line="98">
                <params>
                    <param name="cluster" type="Cluster&lt;T&gt;"/>
                </params>
                <comment line="105">
                    in case the cluster is of type CentroidCluster, no need to compute the centroid                    
                </comment>
                <declaration name="points" type="List&amp;lt;T&amp;gt;" line="99"/>
                <scope line="100"/>
                <scope line="105"/>
                <declaration name="dimension" type="int" line="109"/>
                <declaration name="centroid" type="double[]" line="110"/>
                <scope line="111">
                    <declaration name="point" type="double[]" line="112"/>
                    <scope line="113"/>
                </scope>
                <scope line="117"/>
            </method>
        </class>
    </source>