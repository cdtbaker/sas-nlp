<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="java.io.Serializable"/>
        <import package="java.util.Arrays"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.NoDataException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <class name="BlockRealMatrix" line="13">
            <extends class="AbstractRealMatrix"/>
            <implements interface="Serializable"/>
            <javadoc line="13">
                Cache-friendly implementation of RealMatrix using a flat arrays to store
                  square blocks of the matrix.
                  &lt;p&gt;
                  This implementation is specially designed to be cache-friendly. Square blocks are
                  stored as small arrays and allow efficient traversal of data both in row major direction
                  and columns major direction, one block at a time. This greatly increases performances
                  for algorithms that use crossed directions loops like multiplication or transposition.
                  &lt;/p&gt;
                  &lt;p&gt;
                  The size of square blocks is a static parameter. It may be tuned according to the cache
                  size of the target computer processor. As a rule of thumbs, it should be the largest
                  value that allows three blocks to be simultaneously cached (this is necessary for example
                  for matrix multiplication). The default value is to use 52x52 blocks which is well suited
                  for processors with 64k L1 cache (one block holds 2704 values or 21632 bytes). This value
                  could be lowered to 36x36 for processors with 32k L1 cache.
                  &lt;/p&gt;
                  &lt;p&gt;
                  The regular blocks represent {@link #BLOCK_SIZE} x {@link #BLOCK_SIZE} squares. Blocks
                  at right hand side and bottom side which may be smaller to fit matrix dimensions. The square
                  blocks are flattened in row major order in single dimension arrays which are therefore{@link #BLOCK_SIZE}&lt;sup&gt;2&lt;/sup&gt; elements long for regular blocks. The blocks are themselves
                  organized in row major order.
                  &lt;/p&gt;
                  &lt;p&gt;
                  As an example, for a block size of 52x52, a 100x60 matrix would be stored in 4 blocks.
                  Block 0 would be a double[2704] array holding the upper left 52x52 square, block 1 would be
                  a double[416] array holding the upper right 52x8 rectangle, block 2 would be a double[2496]
                  array holding the lower left 48x52 rectangle and block 3 would be a double[384] array
                  holding the lower right 48x8 rectangle.
                  &lt;/p&gt;
                  &lt;p&gt;
                  The layout complexity overhead versus simple mapping of matrices to java
                  arrays is negligible for small matrices (about 1%). The gain from cache efficiency leads
                  to up to 3-fold improvements for matrices of moderate to large size.
                  &lt;/p&gt;                
                <version>
                    $Id: BlockRealMatrix.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
                <since>
                    2.0                    
                </since>
            </javadoc>
            <declaration name="BLOCK_SIZE" type="int" line="52"/>
            <javadoc line="52">
                Block size.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="56"/>
            <javadoc line="56">
                Serializable version identifier                
            </javadoc>
            <declaration name="blocks" type="double" line="60"/>
            <javadoc line="60">
                Blocks of matrix entries.                
            </javadoc>
            <declaration name="rows" type="int" line="64"/>
            <javadoc line="64">
                Number of rows of the matrix.                
            </javadoc>
            <declaration name="columns" type="int" line="68"/>
            <javadoc line="68">
                Number of columns of the matrix.                
            </javadoc>
            <declaration name="blockRows" type="int" line="72"/>
            <javadoc line="72">
                Number of block rows of the matrix.                
            </javadoc>
            <declaration name="blockColumns" type="int" line="76"/>
            <javadoc line="76">
                Number of block columns of the matrix.                
            </javadoc>
            <javadoc line="80">
                Create a new matrix with the supplied row and column dimensions.                
                <param>
                    rows  the number of rows in the new matrix                    
                </param>
                <param>
                    columns  the number of columns in the new matrix                    
                </param>
                <throws>
                    NotStrictlyPositiveException if row or column dimension is not
                      positive.                    
                </throws>
            </javadoc>
            <method name="BlockRealMatrix" type="constructor" line="87">
                <params>
                    <param name="rows" type="int"/>
                    <param name="columns" type="int"/>
                </params>
            </method>
            <javadoc line="95">
                Create a new dense matrix copying entries from raw layout data.
                  &lt;p&gt;The input array &lt;em&gt;must&lt;/em&gt; already be in raw layout.&lt;/p&gt;
                  &lt;p&gt;Calling this constructor is equivalent to call:
                  &lt;pre&gt;matrix = new BlockRealMatrix(rawData.length, rawData[0].length,
                  toBlocksLayout(rawData), false);&lt;/pre&gt;
                  &lt;/p&gt;                
                <param>
                    rawData data for new matrix, in raw layout                    
                </param>
                <throws>
                    DimensionMismatchException if the shape of {@code blockData} is
                      inconsistent with block layout.                    
                </throws>
                <throws>
                    NotStrictlyPositiveException if row or column dimension is not
                      positive.                    
                </throws>
                <see>
                    #BlockRealMatrix(int,int,double[][],boolean)                    
                </see>
            </javadoc>
            <method name="BlockRealMatrix" type="constructor" line="109">
                <params>
                    <param name="rawData" type="double[][]"/>
                </params>
            </method>
            <javadoc line="112">
                Create a new dense matrix copying entries from block layout data.
                  &lt;p&gt;The input array &lt;em&gt;must&lt;/em&gt; already be in blocks layout.&lt;/p&gt;                
                <param>
                    rows Number of rows in the new matrix.                    
                </param>
                <param>
                    columns Number of columns in the new matrix.                    
                </param>
                <param>
                    blockData data for new matrix                    
                </param>
                <param>
                    copyArray Whether the input array will be copied or referenced.                    
                </param>
                <throws>
                    DimensionMismatchException if the shape of {@code blockData} is
                      inconsistent with block layout.                    
                </throws>
                <throws>
                    NotStrictlyPositiveException if row or column dimension is not
                      positive.                    
                </throws>
                <see>
                    #createBlocksLayout(int,int)                    
                </see>
                <see>
                    #toBlocksLayout(double[][])                    
                </see>
                <see>
                    #BlockRealMatrix(double[][])                    
                </see>
            </javadoc>
            <method name="BlockRealMatrix" type="constructor" line="127">
                <params>
                    <param name="rows" type="int"/>
                    <param name="columns" type="int"/>
                    <param name="blockData" type="double[][]"/>
                    <param name="copyArray" type="boolean"/>
                </params>
                <scope line="133"/>
                <scope line="136"/>
                <declaration name="index" type="int" line="139"/>
                <scope line="140">
                    <declaration name="iHeight" type="int" line="141"/>
                    <scope line="142">
                        <scope line="143"/>
                        <scope line="146"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="152">
                Convert a data array from raw layout to blocks layout.
                  &lt;p&gt;
                  Raw layout is the straightforward layout where element at row i and
                  column j is in array element &lt;code&gt;rawData[i][j]&lt;/code&gt;. Blocks layout
                  is the layout used in {@link BlockRealMatrix} instances, where the matrix
                  is split in square blocks (except at right and bottom side where blocks may
                  be rectangular to fit matrix size) and each block is stored in a flattened
                  one-dimensional array.
                  &lt;/p&gt;
                  &lt;p&gt;
                  This method creates an array in blocks layout from an input array in raw layout.
                  It can be used to provide the array argument of the {@link #BlockRealMatrix(int,int,double[][],boolean)} constructor.
                  &lt;/p&gt;                
                <param>
                    rawData Data array in raw layout.                    
                </param>
                <return>
                    a new data array containing the same entries but in blocks layout.                    
                </return>
                <throws>
                    DimensionMismatchException if {@code rawData} is not rectangular.                    
                </throws>
                <see>
                    #createBlocksLayout(int,int)                    
                </see>
                <see>
                    #BlockRealMatrix(int,int,double[][],boolean)                    
                </see>
            </javadoc>
            <method name="toBlocksLayout" type="double[][]" line="172">
                <params>
                    <param name="rawData" type="double[][]"/>
                </params>
                <declaration name="rows" type="int" line="173"/>
                <declaration name="columns" type="int" line="174"/>
                <declaration name="blockRows" type="int" line="175"/>
                <declaration name="blockColumns" type="int" line="176"/>
                <scope line="177">
                    <declaration name="length" type="int" line="178"/>
                    <scope line="179"/>
                </scope>
                <declaration name="blocks" type="double[][]" line="183"/>
                <declaration name="blockIndex" type="int" line="184"/>
                <scope line="185">
                    <declaration name="pStart" type="int" line="186"/>
                    <declaration name="pEnd" type="int" line="187"/>
                    <declaration name="iHeight" type="int" line="188"/>
                    <scope line="189">
                        <declaration name="qStart" type="int" line="190"/>
                        <declaration name="qEnd" type="int" line="191"/>
                        <declaration name="jWidth" type="int" line="192"/>
                        <declaration name="block" type="double[]" line="193"/>
                        <declaration name="index" type="int" line="195"/>
                        <scope line="196"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="205">
                Create a data array in blocks layout.
                  &lt;p&gt;
                  This method can be used to create the array argument of the {@link #BlockRealMatrix(int,int,double[][],boolean)} constructor.
                  &lt;/p&gt;                
                <param>
                    rows Number of rows in the new matrix.                    
                </param>
                <param>
                    columns Number of columns in the new matrix.                    
                </param>
                <return>
                    a new data array in blocks layout.                    
                </return>
                <see>
                    #toBlocksLayout(double[][])                    
                </see>
                <see>
                    #BlockRealMatrix(int,int,double[][],boolean)                    
                </see>
            </javadoc>
            <method name="createBlocksLayout" type="double[][]" line="216">
                <params>
                    <param name="rows" type="int"/>
                    <param name="columns" type="int"/>
                </params>
                <declaration name="blockRows" type="int" line="217"/>
                <declaration name="blockColumns" type="int" line="218"/>
                <declaration name="blocks" type="double[][]" line="219"/>
                <declaration name="blockIndex" type="int" line="220"/>
                <scope line="221">
                    <declaration name="pStart" type="int" line="222"/>
                    <declaration name="pEnd" type="int" line="223"/>
                    <declaration name="iHeight" type="int" line="224"/>
                    <scope line="225">
                        <declaration name="qStart" type="int" line="226"/>
                        <declaration name="qEnd" type="int" line="227"/>
                        <declaration name="jWidth" type="int" line="228"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="235">
                {@inheritDoc}                
            </javadoc>
            <method name="createMatrix" type="BlockRealMatrix" line="238">
                <params>
                    <param name="rowDimension" type="int"/>
                    <param name="columnDimension" type="int"/>
                </params>
            </method>
            <javadoc line="241">
                {@inheritDoc}                
            </javadoc>
            <method name="copy" type="BlockRealMatrix" line="244">
                <declaration name="copied" type="BlockRealMatrix" line="245"/>
                <scope line="246"/>
            </method>
            <javadoc line="251">
                {@inheritDoc}                
            </javadoc>
            <method name="add" type="BlockRealMatrix" line="254">
                <params>
                    <param name="m" type="RealMatrix"/>
                </params>
                <scope line="255"/>
                <scope line="258">
                    <declaration name="out" type="BlockRealMatrix" line="260"/>
                    <declaration name="blockIndex" type="int" line="261"/>
                    <scope line="262">
                        <scope line="263">
                            <declaration name="outBlock" type="double[]" line="264"/>
                            <declaration name="tBlock" type="double[]" line="265"/>
                            <declaration name="pStart" type="int" line="266"/>
                            <declaration name="pEnd" type="int" line="267"/>
                            <declaration name="qStart" type="int" line="268"/>
                            <declaration name="qEnd" type="int" line="269"/>
                            <declaration name="k" type="int" line="270"/>
                            <scope line="271">
                                <scope line="272"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="283">
                Compute the sum of this matrix and {@code m}.                
                <param>
                    m Matrix to be added.                    
                </param>
                <return>
                    {@code this} + m.                    
                </return>
                <throws>
                    MatrixDimensionMismatchException if {@code m} is not the same
                      size as this matrix.                    
                </throws>
            </javadoc>
            <method name="add" type="BlockRealMatrix" line="290">
                <params>
                    <param name="m" type="BlockRealMatrix"/>
                </params>
                <declaration name="out" type="BlockRealMatrix" line="292"/>
                <scope line="293">
                    <declaration name="outBlock" type="double[]" line="294"/>
                    <declaration name="tBlock" type="double[]" line="295"/>
                    <declaration name="mBlock" type="double[]" line="296"/>
                    <scope line="297"/>
                </scope>
            </method>
            <javadoc line="303">
                {@inheritDoc}                
            </javadoc>
            <method name="subtract" type="BlockRealMatrix" line="306">
                <params>
                    <param name="m" type="RealMatrix"/>
                </params>
                <scope line="307"/>
                <scope line="310">
                    <declaration name="out" type="BlockRealMatrix" line="312"/>
                    <declaration name="blockIndex" type="int" line="313"/>
                    <scope line="314">
                        <scope line="315">
                            <declaration name="outBlock" type="double[]" line="316"/>
                            <declaration name="tBlock" type="double[]" line="317"/>
                            <declaration name="pStart" type="int" line="318"/>
                            <declaration name="pEnd" type="int" line="319"/>
                            <declaration name="qStart" type="int" line="320"/>
                            <declaration name="qEnd" type="int" line="321"/>
                            <declaration name="k" type="int" line="322"/>
                            <scope line="323">
                                <scope line="324"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="335">
                Subtract {@code m} from this matrix.                
                <param>
                    m Matrix to be subtracted.                    
                </param>
                <return>
                    {@code this} - m.                    
                </return>
                <throws>
                    MatrixDimensionMismatchException if {@code m} is not the
                      same size as this matrix.                    
                </throws>
            </javadoc>
            <method name="subtract" type="BlockRealMatrix" line="342">
                <params>
                    <param name="m" type="BlockRealMatrix"/>
                </params>
                <declaration name="out" type="BlockRealMatrix" line="344"/>
                <scope line="345">
                    <declaration name="outBlock" type="double[]" line="346"/>
                    <declaration name="tBlock" type="double[]" line="347"/>
                    <declaration name="mBlock" type="double[]" line="348"/>
                    <scope line="349"/>
                </scope>
            </method>
            <javadoc line="355">
                {@inheritDoc}                
            </javadoc>
            <method name="scalarAdd" type="BlockRealMatrix" line="358">
                <params>
                    <param name="d" type="double"/>
                </params>
                <declaration name="out" type="BlockRealMatrix" line="359"/>
                <scope line="360">
                    <declaration name="outBlock" type="double[]" line="361"/>
                    <declaration name="tBlock" type="double[]" line="362"/>
                    <scope line="363"/>
                </scope>
            </method>
            <javadoc line="369">
                {@inheritDoc}                
            </javadoc>
            <method name="scalarMultiply" type="RealMatrix" line="372">
                <params>
                    <param name="d" type="double"/>
                </params>
                <declaration name="out" type="BlockRealMatrix" line="373"/>
                <scope line="374">
                    <declaration name="outBlock" type="double[]" line="375"/>
                    <declaration name="tBlock" type="double[]" line="376"/>
                    <scope line="377"/>
                </scope>
            </method>
            <javadoc line="383">
                {@inheritDoc}                
            </javadoc>
            <method name="multiply" type="BlockRealMatrix" line="386">
                <params>
                    <param name="m" type="RealMatrix"/>
                </params>
                <scope line="387"/>
                <scope line="390">
                    <declaration name="out" type="BlockRealMatrix" line="392"/>
                    <declaration name="blockIndex" type="int" line="393"/>
                    <scope line="394">
                        <declaration name="pStart" type="int" line="395"/>
                        <declaration name="pEnd" type="int" line="396"/>
                        <scope line="397">
                            <declaration name="qStart" type="int" line="398"/>
                            <declaration name="qEnd" type="int" line="399"/>
                            <declaration name="outBlock" type="double[]" line="400"/>
                            <scope line="401">
                                <declaration name="kWidth" type="int" line="402"/>
                                <declaration name="tBlock" type="double[]" line="403"/>
                                <declaration name="rStart" type="int" line="404"/>
                                <declaration name="k" type="int" line="405"/>
                                <scope line="406">
                                    <declaration name="lStart" type="int" line="407"/>
                                    <declaration name="lEnd" type="int" line="408"/>
                                    <scope line="409">
                                        <declaration name="sum" type="double" line="410"/>
                                        <declaration name="r" type="int" line="411"/>
                                        <scope line="412"/>
                                    </scope>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="427">
                Returns the result of postmultiplying this by {@code m}.                
                <param>
                    m Matrix to postmultiply by.                    
                </param>
                <return>
                    {@code this}  m.                    
                </return>
                <throws>
                    DimensionMismatchException if the matrices are not compatible.                    
                </throws>
            </javadoc>
            <method name="multiply" type="BlockRealMatrix" line="433">
                <params>
                    <param name="m" type="BlockRealMatrix"/>
                </params>
                <declaration name="out" type="BlockRealMatrix" line="435"/>
                <declaration name="blockIndex" type="int" line="436"/>
                <scope line="437">
                    <declaration name="pStart" type="int" line="438"/>
                    <declaration name="pEnd" type="int" line="439"/>
                    <scope line="440">
                        <declaration name="jWidth" type="int" line="441"/>
                        <declaration name="jWidth2" type="int" line="442"/>
                        <declaration name="jWidth3" type="int" line="443"/>
                        <declaration name="jWidth4" type="int" line="444"/>
                        <declaration name="outBlock" type="double[]" line="445"/>
                        <scope line="446">
                            <declaration name="kWidth" type="int" line="447"/>
                            <declaration name="tBlock" type="double[]" line="448"/>
                            <declaration name="mBlock" type="double[]" line="449"/>
                            <declaration name="k" type="int" line="450"/>
                            <scope line="451">
                                <declaration name="lStart" type="int" line="452"/>
                                <declaration name="lEnd" type="int" line="453"/>
                                <scope line="454">
                                    <declaration name="sum" type="double" line="455"/>
                                    <declaration name="l" type="int" line="456"/>
                                    <declaration name="n" type="int" line="457"/>
                                    <scope line="458"/>
                                    <scope line="463"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="477">
                {@inheritDoc}                
            </javadoc>
            <method name="getData" type="double[][]" line="480">
                <declaration name="data" type="double[][]" line="481"/>
                <declaration name="lastColumns" type="int" line="482"/>
                <scope line="483">
                    <declaration name="pStart" type="int" line="484"/>
                    <declaration name="pEnd" type="int" line="485"/>
                    <declaration name="regularPos" type="int" line="486"/>
                    <declaration name="lastPos" type="int" line="487"/>
                    <scope line="488">
                        <declaration name="dataP" type="double[]" line="489"/>
                        <declaration name="blockIndex" type="int" line="490"/>
                        <declaration name="dataPos" type="int" line="491"/>
                        <scope line="492"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="503">
                {@inheritDoc}                
            </javadoc>
            <method name="getNorm" type="double" line="506">
                <declaration name="colSums" type="double[]" line="507"/>
                <declaration name="maxColSum" type="double" line="508"/>
                <scope line="509">
                    <declaration name="jWidth" type="int" line="510"/>
                    <scope line="512">
                        <declaration name="iHeight" type="int" line="513"/>
                        <declaration name="block" type="double[]" line="514"/>
                        <scope line="515">
                            <declaration name="sum" type="double" line="516"/>
                            <scope line="517"/>
                        </scope>
                    </scope>
                    <scope line="523"/>
                </scope>
            </method>
            <javadoc line="529">
                {@inheritDoc}                
            </javadoc>
            <method name="getFrobeniusNorm" type="double" line="532">
                <declaration name="sum2" type="double" line="533"/>
                <scope line="534">
                    <scope line="535"/>
                </scope>
            </method>
            <javadoc line="541">
                {@inheritDoc}                
            </javadoc>
            <method name="getSubMatrix" type="BlockRealMatrix" line="544">
                <params>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <declaration name="out" type="BlockRealMatrix" line="546"/>
                <declaration name="blockStartRow" type="int" line="547"/>
                <declaration name="rowsShift" type="int" line="548"/>
                <declaration name="blockStartColumn" type="int" line="549"/>
                <declaration name="columnsShift" type="int" line="550"/>
                <declaration name="pBlock" type="int" line="551"/>
                <scope line="552">
                    <declaration name="iHeight" type="int" line="553"/>
                    <declaration name="qBlock" type="int" line="554"/>
                    <scope line="555">
                        <declaration name="jWidth" type="int" line="556"/>
                        <declaration name="outIndex" type="int" line="557"/>
                        <declaration name="outBlock" type="double[]" line="558"/>
                        <declaration name="index" type="int" line="559"/>
                        <declaration name="width" type="int" line="560"/>
                        <declaration name="heightExcess" type="int" line="561"/>
                        <declaration name="widthExcess" type="int" line="562"/>
                        <scope line="563">
                            <scope line="564">
                                <declaration name="width2" type="int" line="565"/>
                            </scope>
                            <scope line="571"/>
                        </scope>
                        <scope line="576">
                            <scope line="577">
                                <declaration name="width2" type="int" line="578"/>
                            </scope>
                            <scope line="582"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="592">
                Copy a part of a block into another one
                  &lt;p&gt;This method can be called only when the specified part fits in both
                  blocks, no verification is done here.&lt;/p&gt;                
                <param>
                    srcBlock source block                    
                </param>
                <param>
                    srcWidth source block width ({@link #BLOCK_SIZE} or smaller)                    
                </param>
                <param>
                    srcStartRow start row in the source block                    
                </param>
                <param>
                    srcEndRow end row (exclusive) in the source block                    
                </param>
                <param>
                    srcStartColumn start column in the source block                    
                </param>
                <param>
                    srcEndColumn end column (exclusive) in the source block                    
                </param>
                <param>
                    dstBlock destination block                    
                </param>
                <param>
                    dstWidth destination block width ({@link #BLOCK_SIZE} or smaller)                    
                </param>
                <param>
                    dstStartRow start row in the destination block                    
                </param>
                <param>
                    dstStartColumn start column in the destination block                    
                </param>
            </javadoc>
            <method name="copyBlockPart" type="void" line="607">
                <params>
                    <param name="srcBlock" type="double[]"/>
                    <param name="srcWidth" type="int"/>
                    <param name="srcStartRow" type="int"/>
                    <param name="srcEndRow" type="int"/>
                    <param name="srcStartColumn" type="int"/>
                    <param name="srcEndColumn" type="int"/>
                    <param name="dstBlock" type="double[]"/>
                    <param name="dstWidth" type="int"/>
                    <param name="dstStartRow" type="int"/>
                    <param name="dstStartColumn" type="int"/>
                </params>
                <declaration name="length" type="int" line="608"/>
                <declaration name="srcPos" type="int" line="609"/>
                <declaration name="dstPos" type="int" line="610"/>
                <scope line="611"/>
            </method>
            <javadoc line="617">
                {@inheritDoc}                
            </javadoc>
            <method name="setSubMatrix" type="void" line="620">
                <params>
                    <param name="subMatrix" type="double[][]"/>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <declaration name="refLength" type="int" line="622"/>
                <scope line="623"/>
                <declaration name="endRow" type="int" line="626"/>
                <declaration name="endColumn" type="int" line="627"/>
                <scope line="629">
                    <scope line="630"/>
                </scope>
                <declaration name="blockStartRow" type="int" line="634"/>
                <declaration name="blockEndRow" type="int" line="635"/>
                <declaration name="blockStartColumn" type="int" line="636"/>
                <declaration name="blockEndColumn" type="int" line="637"/>
                <scope line="638">
                    <declaration name="iHeight" type="int" line="639"/>
                    <declaration name="firstRow" type="int" line="640"/>
                    <declaration name="iStart" type="int" line="641"/>
                    <declaration name="iEnd" type="int" line="642"/>
                    <scope line="643">
                        <declaration name="jWidth" type="int" line="644"/>
                        <declaration name="firstColumn" type="int" line="645"/>
                        <declaration name="jStart" type="int" line="646"/>
                        <declaration name="jEnd" type="int" line="647"/>
                        <declaration name="jLength" type="int" line="648"/>
                        <declaration name="block" type="double[]" line="649"/>
                        <scope line="650"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="656">
                {@inheritDoc}                
            </javadoc>
            <method name="getRowMatrix" type="BlockRealMatrix" line="659">
                <params>
                    <param name="row" type="int"/>
                </params>
                <declaration name="out" type="BlockRealMatrix" line="661"/>
                <declaration name="iBlock" type="int" line="662"/>
                <declaration name="iRow" type="int" line="663"/>
                <declaration name="outBlockIndex" type="int" line="664"/>
                <declaration name="outIndex" type="int" line="665"/>
                <declaration name="outBlock" type="double[]" line="666"/>
                <scope line="667">
                    <declaration name="jWidth" type="int" line="668"/>
                    <declaration name="block" type="double[]" line="669"/>
                    <declaration name="available" type="int" line="670"/>
                    <scope line="671"/>
                    <scope line="677"/>
                </scope>
            </method>
            <javadoc line="684">
                {@inheritDoc}                
            </javadoc>
            <method name="setRowMatrix" type="void" line="687">
                <params>
                    <param name="row" type="int"/>
                    <param name="matrix" type="RealMatrix"/>
                </params>
                <scope line="688"/>
                <scope line="691"/>
            </method>
            <javadoc line="695">
                Sets the entries in row number &lt;code&gt;row&lt;/code&gt;
                  as a row matrix.  Row indices start at 0.                
                <param>
                    row the row to be set                    
                </param>
                <param>
                    matrix row matrix (must have one row and the same number of columns
                      as the instance)                    
                </param>
                <throws>
                    OutOfRangeException if the specified row index is invalid.                    
                </throws>
                <throws>
                    MatrixDimensionMismatchException if the matrix dimensions do
                      not match one instance row.                    
                </throws>
            </javadoc>
            <method name="setRowMatrix" type="void" line="705">
                <params>
                    <param name="row" type="int"/>
                    <param name="matrix" type="BlockRealMatrix"/>
                </params>
                <declaration name="nCols" type="int" line="707"/>
                <scope line="708"/>
                <declaration name="iBlock" type="int" line="711"/>
                <declaration name="iRow" type="int" line="712"/>
                <declaration name="mBlockIndex" type="int" line="713"/>
                <declaration name="mIndex" type="int" line="714"/>
                <declaration name="mBlock" type="double[]" line="715"/>
                <scope line="716">
                    <declaration name="jWidth" type="int" line="717"/>
                    <declaration name="block" type="double[]" line="718"/>
                    <declaration name="available" type="int" line="719"/>
                    <scope line="720"/>
                    <scope line="726"/>
                </scope>
            </method>
            <javadoc line="732">
                {@inheritDoc}                
            </javadoc>
            <method name="getColumnMatrix" type="BlockRealMatrix" line="735">
                <params>
                    <param name="column" type="int"/>
                </params>
                <declaration name="out" type="BlockRealMatrix" line="737"/>
                <declaration name="jBlock" type="int" line="738"/>
                <declaration name="jColumn" type="int" line="739"/>
                <declaration name="jWidth" type="int" line="740"/>
                <declaration name="outBlockIndex" type="int" line="741"/>
                <declaration name="outIndex" type="int" line="742"/>
                <declaration name="outBlock" type="double[]" line="743"/>
                <scope line="744">
                    <declaration name="iHeight" type="int" line="745"/>
                    <declaration name="block" type="double[]" line="746"/>
                    <scope line="747">
                        <scope line="748"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="757">
                {@inheritDoc}                
            </javadoc>
            <method name="setColumnMatrix" type="void" line="760">
                <params>
                    <param name="column" type="int"/>
                    <param name="matrix" type="RealMatrix"/>
                </params>
                <scope line="761"/>
                <scope line="764"/>
            </method>
            <javadoc line="768">
                Sets the entries in column number &lt;code&gt;column&lt;/code&gt;
                  as a column matrix.  Column indices start at 0.                
                <param>
                    column the column to be set                    
                </param>
                <param>
                    matrix column matrix (must have one column and the same number of rows
                      as the instance)                    
                </param>
                <throws>
                    OutOfRangeException if the specified column index is invalid.                    
                </throws>
                <throws>
                    MatrixDimensionMismatchException if the matrix dimensions do
                      not match one instance column.                    
                </throws>
            </javadoc>
            <method name="setColumnMatrix" type="void" line="778">
                <params>
                    <param name="column" type="int"/>
                    <param name="matrix" type="BlockRealMatrix"/>
                </params>
                <declaration name="nRows" type="int" line="780"/>
                <scope line="781"/>
                <declaration name="jBlock" type="int" line="784"/>
                <declaration name="jColumn" type="int" line="785"/>
                <declaration name="jWidth" type="int" line="786"/>
                <declaration name="mBlockIndex" type="int" line="787"/>
                <declaration name="mIndex" type="int" line="788"/>
                <declaration name="mBlock" type="double[]" line="789"/>
                <scope line="790">
                    <declaration name="iHeight" type="int" line="791"/>
                    <declaration name="block" type="double[]" line="792"/>
                    <scope line="793">
                        <scope line="794"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="802">
                {@inheritDoc}                
            </javadoc>
            <method name="getRowVector" type="RealVector" line="805">
                <params>
                    <param name="row" type="int"/>
                </params>
                <declaration name="outData" type="double[]" line="807"/>
                <declaration name="iBlock" type="int" line="808"/>
                <declaration name="iRow" type="int" line="809"/>
                <declaration name="outIndex" type="int" line="810"/>
                <scope line="811">
                    <declaration name="jWidth" type="int" line="812"/>
                    <declaration name="block" type="double[]" line="813"/>
                </scope>
            </method>
            <javadoc line="819">
                {@inheritDoc}                
            </javadoc>
            <method name="setRowVector" type="void" line="822">
                <params>
                    <param name="row" type="int"/>
                    <param name="vector" type="RealVector"/>
                </params>
                <scope line="823"/>
                <scope line="826"/>
            </method>
            <javadoc line="830">
                {@inheritDoc}                
            </javadoc>
            <method name="getColumnVector" type="RealVector" line="833">
                <params>
                    <param name="column" type="int"/>
                </params>
                <declaration name="outData" type="double[]" line="835"/>
                <declaration name="jBlock" type="int" line="836"/>
                <declaration name="jColumn" type="int" line="837"/>
                <declaration name="jWidth" type="int" line="838"/>
                <declaration name="outIndex" type="int" line="839"/>
                <scope line="840">
                    <declaration name="iHeight" type="int" line="841"/>
                    <declaration name="block" type="double[]" line="842"/>
                    <scope line="843"/>
                </scope>
            </method>
            <javadoc line="849">
                {@inheritDoc}                
            </javadoc>
            <method name="setColumnVector" type="void" line="852">
                <params>
                    <param name="column" type="int"/>
                    <param name="vector" type="RealVector"/>
                </params>
                <scope line="853"/>
                <scope line="856"/>
            </method>
            <javadoc line="860">
                {@inheritDoc}                
            </javadoc>
            <method name="getRow" type="double[]" line="863">
                <params>
                    <param name="row" type="int"/>
                </params>
                <declaration name="out" type="double[]" line="865"/>
                <declaration name="iBlock" type="int" line="866"/>
                <declaration name="iRow" type="int" line="867"/>
                <declaration name="outIndex" type="int" line="868"/>
                <scope line="869">
                    <declaration name="jWidth" type="int" line="870"/>
                    <declaration name="block" type="double[]" line="871"/>
                </scope>
            </method>
            <javadoc line="877">
                {@inheritDoc}                
            </javadoc>
            <method name="setRow" type="void" line="880">
                <params>
                    <param name="row" type="int"/>
                    <param name="array" type="double[]"/>
                </params>
                <declaration name="nCols" type="int" line="882"/>
                <scope line="883"/>
                <declaration name="iBlock" type="int" line="886"/>
                <declaration name="iRow" type="int" line="887"/>
                <declaration name="outIndex" type="int" line="888"/>
                <scope line="889">
                    <declaration name="jWidth" type="int" line="890"/>
                    <declaration name="block" type="double[]" line="891"/>
                </scope>
            </method>
            <javadoc line="896">
                {@inheritDoc}                
            </javadoc>
            <method name="getColumn" type="double[]" line="899">
                <params>
                    <param name="column" type="int"/>
                </params>
                <declaration name="out" type="double[]" line="901"/>
                <declaration name="jBlock" type="int" line="902"/>
                <declaration name="jColumn" type="int" line="903"/>
                <declaration name="jWidth" type="int" line="904"/>
                <declaration name="outIndex" type="int" line="905"/>
                <scope line="906">
                    <declaration name="iHeight" type="int" line="907"/>
                    <declaration name="block" type="double[]" line="908"/>
                    <scope line="909"/>
                </scope>
            </method>
            <javadoc line="915">
                {@inheritDoc}                
            </javadoc>
            <method name="setColumn" type="void" line="918">
                <params>
                    <param name="column" type="int"/>
                    <param name="array" type="double[]"/>
                </params>
                <declaration name="nRows" type="int" line="920"/>
                <scope line="921"/>
                <declaration name="jBlock" type="int" line="924"/>
                <declaration name="jColumn" type="int" line="925"/>
                <declaration name="jWidth" type="int" line="926"/>
                <declaration name="outIndex" type="int" line="927"/>
                <scope line="928">
                    <declaration name="iHeight" type="int" line="929"/>
                    <declaration name="block" type="double[]" line="930"/>
                    <scope line="931"/>
                </scope>
            </method>
            <javadoc line="936">
                {@inheritDoc}                
            </javadoc>
            <method name="getEntry" type="double" line="939">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
                <declaration name="iBlock" type="int" line="941"/>
                <declaration name="jBlock" type="int" line="942"/>
                <declaration name="k" type="int" line="943"/>
            </method>
            <javadoc line="946">
                {@inheritDoc}                
            </javadoc>
            <method name="setEntry" type="void" line="949">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="value" type="double"/>
                </params>
                <declaration name="iBlock" type="int" line="951"/>
                <declaration name="jBlock" type="int" line="952"/>
                <declaration name="k" type="int" line="953"/>
            </method>
            <javadoc line="956">
                {@inheritDoc}                
            </javadoc>
            <method name="addToEntry" type="void" line="959">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="increment" type="double"/>
                </params>
                <declaration name="iBlock" type="int" line="961"/>
                <declaration name="jBlock" type="int" line="962"/>
                <declaration name="k" type="int" line="963"/>
            </method>
            <javadoc line="966">
                {@inheritDoc}                
            </javadoc>
            <method name="multiplyEntry" type="void" line="969">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="factor" type="double"/>
                </params>
                <declaration name="iBlock" type="int" line="971"/>
                <declaration name="jBlock" type="int" line="972"/>
                <declaration name="k" type="int" line="973"/>
            </method>
            <javadoc line="976">
                {@inheritDoc}                
            </javadoc>
            <method name="transpose" type="BlockRealMatrix" line="979">
                <declaration name="nRows" type="int" line="980"/>
                <declaration name="nCols" type="int" line="981"/>
                <declaration name="out" type="BlockRealMatrix" line="982"/>
                <declaration name="blockIndex" type="int" line="983"/>
                <scope line="984">
                    <scope line="985">
                        <declaration name="outBlock" type="double[]" line="986"/>
                        <declaration name="tBlock" type="double[]" line="987"/>
                        <declaration name="pStart" type="int" line="988"/>
                        <declaration name="pEnd" type="int" line="989"/>
                        <declaration name="qStart" type="int" line="990"/>
                        <declaration name="qEnd" type="int" line="991"/>
                        <declaration name="k" type="int" line="992"/>
                        <scope line="993">
                            <declaration name="lInc" type="int" line="994"/>
                            <declaration name="l" type="int" line="995"/>
                            <scope line="996"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1007">
                {@inheritDoc}                
            </javadoc>
            <method name="getRowDimension" type="int" line="1010"/>
            <javadoc line="1013">
                {@inheritDoc}                
            </javadoc>
            <method name="getColumnDimension" type="int" line="1016"/>
            <javadoc line="1019">
                {@inheritDoc}                
            </javadoc>
            <method name="operate" type="double[]" line="1022">
                <params>
                    <param name="v" type="double[]"/>
                </params>
                <scope line="1023"/>
                <declaration name="out" type="double[]" line="1026"/>
                <scope line="1027">
                    <declaration name="pStart" type="int" line="1028"/>
                    <declaration name="pEnd" type="int" line="1029"/>
                    <scope line="1030">
                        <declaration name="block" type="double[]" line="1031"/>
                        <declaration name="qStart" type="int" line="1032"/>
                        <declaration name="qEnd" type="int" line="1033"/>
                        <declaration name="k" type="int" line="1034"/>
                        <scope line="1035">
                            <declaration name="sum" type="double" line="1036"/>
                            <declaration name="q" type="int" line="1037"/>
                            <scope line="1038"/>
                            <scope line="1043"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1052">
                {@inheritDoc}                
            </javadoc>
            <method name="preMultiply" type="double[]" line="1055">
                <params>
                    <param name="v" type="double[]"/>
                </params>
                <scope line="1056"/>
                <declaration name="out" type="double[]" line="1059"/>
                <scope line="1060">
                    <declaration name="jWidth" type="int" line="1061"/>
                    <declaration name="jWidth2" type="int" line="1062"/>
                    <declaration name="jWidth3" type="int" line="1063"/>
                    <declaration name="jWidth4" type="int" line="1064"/>
                    <declaration name="qStart" type="int" line="1065"/>
                    <declaration name="qEnd" type="int" line="1066"/>
                    <scope line="1067">
                        <declaration name="block" type="double[]" line="1068"/>
                        <declaration name="pStart" type="int" line="1069"/>
                        <declaration name="pEnd" type="int" line="1070"/>
                        <scope line="1071">
                            <declaration name="k" type="int" line="1072"/>
                            <declaration name="sum" type="double" line="1073"/>
                            <declaration name="p" type="int" line="1074"/>
                            <scope line="1075"/>
                            <scope line="1080"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1090">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="double" line="1093">
                <params>
                    <param name="visitor" type="RealMatrixChangingVisitor"/>
                </params>
                <scope line="1095">
                    <declaration name="pStart" type="int" line="1096"/>
                    <declaration name="pEnd" type="int" line="1097"/>
                    <scope line="1098">
                        <scope line="1099">
                            <declaration name="jWidth" type="int" line="1100"/>
                            <declaration name="qStart" type="int" line="1101"/>
                            <declaration name="qEnd" type="int" line="1102"/>
                            <declaration name="block" type="double[]" line="1103"/>
                            <declaration name="k" type="int" line="1104"/>
                            <scope line="1105"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1114">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="double" line="1117">
                <params>
                    <param name="visitor" type="RealMatrixPreservingVisitor"/>
                </params>
                <scope line="1119">
                    <declaration name="pStart" type="int" line="1120"/>
                    <declaration name="pEnd" type="int" line="1121"/>
                    <scope line="1122">
                        <scope line="1123">
                            <declaration name="jWidth" type="int" line="1124"/>
                            <declaration name="qStart" type="int" line="1125"/>
                            <declaration name="qEnd" type="int" line="1126"/>
                            <declaration name="block" type="double[]" line="1127"/>
                            <declaration name="k" type="int" line="1128"/>
                            <scope line="1129"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1138">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="double" line="1141">
                <params>
                    <param name="visitor" type="RealMatrixChangingVisitor"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="1144">
                    <declaration name="p0" type="int" line="1145"/>
                    <declaration name="pStart" type="int" line="1146"/>
                    <declaration name="pEnd" type="int" line="1147"/>
                    <scope line="1148">
                        <scope line="1149">
                            <declaration name="jWidth" type="int" line="1150"/>
                            <declaration name="q0" type="int" line="1151"/>
                            <declaration name="qStart" type="int" line="1152"/>
                            <declaration name="qEnd" type="int" line="1153"/>
                            <declaration name="block" type="double[]" line="1154"/>
                            <declaration name="k" type="int" line="1155"/>
                            <scope line="1156"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1165">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInRowOrder" type="double" line="1168">
                <params>
                    <param name="visitor" type="RealMatrixPreservingVisitor"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="1171">
                    <declaration name="p0" type="int" line="1172"/>
                    <declaration name="pStart" type="int" line="1173"/>
                    <declaration name="pEnd" type="int" line="1174"/>
                    <scope line="1175">
                        <scope line="1176">
                            <declaration name="jWidth" type="int" line="1177"/>
                            <declaration name="q0" type="int" line="1178"/>
                            <declaration name="qStart" type="int" line="1179"/>
                            <declaration name="qEnd" type="int" line="1180"/>
                            <declaration name="block" type="double[]" line="1181"/>
                            <declaration name="k" type="int" line="1182"/>
                            <scope line="1183"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1192">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInOptimizedOrder" type="double" line="1195">
                <params>
                    <param name="visitor" type="RealMatrixChangingVisitor"/>
                </params>
                <declaration name="blockIndex" type="int" line="1197"/>
                <scope line="1198">
                    <declaration name="pStart" type="int" line="1199"/>
                    <declaration name="pEnd" type="int" line="1200"/>
                    <scope line="1201">
                        <declaration name="qStart" type="int" line="1202"/>
                        <declaration name="qEnd" type="int" line="1203"/>
                        <declaration name="block" type="double[]" line="1204"/>
                        <declaration name="k" type="int" line="1205"/>
                        <scope line="1206">
                            <scope line="1207"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1217">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInOptimizedOrder" type="double" line="1220">
                <params>
                    <param name="visitor" type="RealMatrixPreservingVisitor"/>
                </params>
                <declaration name="blockIndex" type="int" line="1222"/>
                <scope line="1223">
                    <declaration name="pStart" type="int" line="1224"/>
                    <declaration name="pEnd" type="int" line="1225"/>
                    <scope line="1226">
                        <declaration name="qStart" type="int" line="1227"/>
                        <declaration name="qEnd" type="int" line="1228"/>
                        <declaration name="block" type="double[]" line="1229"/>
                        <declaration name="k" type="int" line="1230"/>
                        <scope line="1231">
                            <scope line="1232"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1242">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInOptimizedOrder" type="double" line="1245">
                <params>
                    <param name="visitor" type="RealMatrixChangingVisitor"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="1248">
                    <declaration name="p0" type="int" line="1249"/>
                    <declaration name="pStart" type="int" line="1250"/>
                    <declaration name="pEnd" type="int" line="1251"/>
                    <scope line="1252">
                        <declaration name="jWidth" type="int" line="1253"/>
                        <declaration name="q0" type="int" line="1254"/>
                        <declaration name="qStart" type="int" line="1255"/>
                        <declaration name="qEnd" type="int" line="1256"/>
                        <declaration name="block" type="double[]" line="1257"/>
                        <scope line="1258">
                            <declaration name="k" type="int" line="1259"/>
                            <scope line="1260"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1269">
                {@inheritDoc}                
            </javadoc>
            <method name="walkInOptimizedOrder" type="double" line="1272">
                <params>
                    <param name="visitor" type="RealMatrixPreservingVisitor"/>
                    <param name="startRow" type="int"/>
                    <param name="endRow" type="int"/>
                    <param name="startColumn" type="int"/>
                    <param name="endColumn" type="int"/>
                </params>
                <scope line="1275">
                    <declaration name="p0" type="int" line="1276"/>
                    <declaration name="pStart" type="int" line="1277"/>
                    <declaration name="pEnd" type="int" line="1278"/>
                    <scope line="1279">
                        <declaration name="jWidth" type="int" line="1280"/>
                        <declaration name="q0" type="int" line="1281"/>
                        <declaration name="qStart" type="int" line="1282"/>
                        <declaration name="qEnd" type="int" line="1283"/>
                        <declaration name="block" type="double[]" line="1284"/>
                        <scope line="1285">
                            <declaration name="k" type="int" line="1286"/>
                            <scope line="1287"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="1296">
                Get the height of a block.                
                <param>
                    blockRow row index (in block sense) of the block                    
                </param>
                <return>
                    height (number of rows) of the block                    
                </return>
            </javadoc>
            <method name="blockHeight" type="int" line="1301">
                <params>
                    <param name="blockRow" type="int"/>
                </params>
            </method>
            <javadoc line="1304">
                Get the width of a block.                
                <param>
                    blockColumn column index (in block sense) of the block                    
                </param>
                <return>
                    width (number of columns) of the block                    
                </return>
            </javadoc>
            <method name="blockWidth" type="int" line="1309">
                <params>
                    <param name="blockColumn" type="int"/>
                </params>
            </method>
        </class>
    </source>