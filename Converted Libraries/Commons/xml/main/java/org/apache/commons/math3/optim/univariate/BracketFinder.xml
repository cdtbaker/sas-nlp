<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optim.univariate">
        <import package="org.apache.commons.math3.util.Incrementor"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.TooManyEvaluationsException"/>
        <import package="org.apache.commons.math3.exception.MaxCountExceededException"/>
        <import package="org.apache.commons.math3.analysis.UnivariateFunction"/>
        <import package="org.apache.commons.math3.optim.nonlinear.scalar.GoalType"/>
        <class name="BracketFinder" line="8">
            <javadoc line="8">
                Provide an interval that brackets a local optimum of a function.
                  This code is based on a Python implementation (from &lt;em&gt;SciPy&lt;/em&gt;,
                  module {@code optimize.py} v0.5).                
                <version>
                    $Id: BracketFinder.java 1435539 2013-01-19 13:27:24Z tn $                    
                </version>
                <since>
                    2.2                    
                </since>
            </javadoc>
            <declaration name="EPS_MIN" type="double" line="16"/>
            <javadoc line="16">
                Tolerance to avoid division by zero.                
            </javadoc>
            <declaration name="GOLD" type="double" line="20"/>
            <javadoc line="20">
                Golden section.                
            </javadoc>
            <declaration name="growLimit" type="double" line="24"/>
            <javadoc line="24">
                Factor for expanding the interval.                
            </javadoc>
            <declaration name="evaluations" type="Incrementor" line="28"/>
            <javadoc line="28">
                Counter for function evaluations.                
            </javadoc>
            <declaration name="lo" type="double" line="32"/>
            <javadoc line="32">
                Lower bound of the bracket.                
            </javadoc>
            <declaration name="hi" type="double" line="36"/>
            <javadoc line="36">
                Higher bound of the bracket.                
            </javadoc>
            <declaration name="mid" type="double" line="40"/>
            <javadoc line="40">
                Point inside the bracket.                
            </javadoc>
            <declaration name="fLo" type="double" line="44"/>
            <javadoc line="44">
                Function value at {@link #lo}.                
            </javadoc>
            <declaration name="fHi" type="double" line="48"/>
            <javadoc line="48">
                Function value at {@link #hi}.                
            </javadoc>
            <declaration name="fMid" type="double" line="52"/>
            <javadoc line="52">
                Function value at {@link #mid}.                
            </javadoc>
            <javadoc line="56">
                Constructor with default values {@code 100, 50} (see the{@link #BracketFinder(double,int) other constructor}).                
            </javadoc>
            <method name="BracketFinder" type="constructor" line="59"/>
            <javadoc line="62">
                Create a bracketing interval finder.                
                <param>
                    growLimit Expanding factor.                    
                </param>
                <param>
                    maxEvaluations Maximum number of evaluations allowed for finding
                      a bracketing interval.                    
                </param>
            </javadoc>
            <method name="BracketFinder" type="constructor" line="68">
                <params>
                    <param name="growLimit" type="double"/>
                    <param name="maxEvaluations" type="int"/>
                </params>
                <scope line="69"/>
                <scope line="72"/>
            </method>
            <javadoc line="78">
                Search new points that bracket a local optimum of the function.                
                <param>
                    func Function whose optimum should be bracketed.                    
                </param>
                <param>
                    goal {@link GoalType Goal type}.                    
                </param>
                <param>
                    xA Initial point.                    
                </param>
                <param>
                    xB Initial point.                    
                </param>
                <throws>
                    TooManyEvaluationsException if the maximum number of evaluations
                      is exceeded.                    
                </throws>
            </javadoc>
            <method name="search" type="void" line="87">
                <params>
                    <param name="func" type="UnivariateFunction"/>
                    <param name="goal" type="GoalType"/>
                    <param name="xA" type="double"/>
                    <param name="xB" type="double"/>
                </params>
                <declaration name="isMinim" type="boolean" line="89"/>
                <declaration name="fA" type="double" line="90"/>
                <declaration name="fB" type="double" line="91"/>
                <scope line="92">
                    <declaration name="tmp" type="double" line="93"/>
                </scope>
                <declaration name="xC" type="double" line="100"/>
                <declaration name="fC" type="double" line="101"/>
                <scope line="102">
                    <declaration name="tmp1" type="double" line="103"/>
                    <declaration name="tmp2" type="double" line="104"/>
                    <declaration name="val" type="double" line="105"/>
                    <declaration name="denom" type="double" line="106"/>
                    <declaration name="w" type="double" line="107"/>
                    <declaration name="wLim" type="double" line="108"/>
                    <declaration name="fW" type="double" line="109"/>
                    <scope line="110">
                        <scope line="112"/>
                        <scope line="119"/>
                    </scope>
                    <scope line="127"/>
                    <scope line="131">
                        <scope line="133"/>
                    </scope>
                    <scope line="142"/>
                </scope>
                <scope line="159">
                    <declaration name="tmp" type="double" line="160"/>
                </scope>
            </method>
            <javadoc line="168">
                @return the number of evalutations.                
            </javadoc>
            <method name="getMaxEvaluations" type="int" line="171"/>
            <javadoc line="174">
                @return the number of evalutations.                
            </javadoc>
            <method name="getEvaluations" type="int" line="177"/>
            <javadoc line="180">
                @return the lower bound of the bracket.                
                <see>
                    #getFLo()                    
                </see>
            </javadoc>
            <method name="getLo" type="double" line="184"/>
            <javadoc line="187">
                Get function value at {@link #getLo()}.                
                <return>
                    function value at {@link #getLo()}                    
                </return>
            </javadoc>
            <method name="getFLo" type="double" line="191"/>
            <javadoc line="194">
                @return the higher bound of the bracket.                
                <see>
                    #getFHi()                    
                </see>
            </javadoc>
            <method name="getHi" type="double" line="198"/>
            <javadoc line="201">
                Get function value at {@link #getHi()}.                
                <return>
                    function value at {@link #getHi()}                    
                </return>
            </javadoc>
            <method name="getFHi" type="double" line="205"/>
            <javadoc line="208">
                @return a point in the middle of the bracket.                
                <see>
                    #getFMid()                    
                </see>
            </javadoc>
            <method name="getMid" type="double" line="212"/>
            <javadoc line="215">
                Get function value at {@link #getMid()}.                
                <return>
                    function value at {@link #getMid()}                    
                </return>
            </javadoc>
            <method name="getFMid" type="double" line="219"/>
            <javadoc line="222">
                @param f Function.                
                <param>
                    x Argument.                    
                </param>
                <return>
                    {@code f(x)}                    
                </return>
                <throws>
                    TooManyEvaluationsException if the maximal number of evaluations is
                      exceeded.                    
                </throws>
            </javadoc>
            <method name="eval" type="double" line="229">
                <params>
                    <param name="f" type="UnivariateFunction"/>
                    <param name="x" type="double"/>
                </params>
                <scope line="230"/>
                <scope line="233"/>
            </method>
        </class>
    </source>