<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.correlation">
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.linear.BlockRealMatrix"/>
        <import package="org.apache.commons.math3.linear.MatrixUtils"/>
        <import package="org.apache.commons.math3.linear.RealMatrix"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.util.Pair"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.Comparator"/>
        <class name="KendallsCorrelation" line="29">
            <javadoc line="29">
                Implementation of Kendall&apos;s Tau-b rank correlation&lt;/a&gt;.
                  &lt;p&gt;
                  A pair of observations (x&lt;sub&gt;1&lt;/sub&gt;, y&lt;sub&gt;1&lt;/sub&gt;) and
                  (x&lt;sub&gt;2&lt;/sub&gt;, y&lt;sub&gt;2&lt;/sub&gt;) are considered &lt;i&gt;concordant&lt;/i&gt; if
                  x&lt;sub&gt;1&lt;/sub&gt; &amp;lt; x&lt;sub&gt;2&lt;/sub&gt; and y&lt;sub&gt;1&lt;/sub&gt; &amp;lt; y&lt;sub&gt;2&lt;/sub&gt;
                  or x&lt;sub&gt;2&lt;/sub&gt; &amp;lt; x&lt;sub&gt;1&lt;/sub&gt; and y&lt;sub&gt;2&lt;/sub&gt; &amp;lt; y&lt;sub&gt;1&lt;/sub&gt;.
                  The pair is &lt;i&gt;discordant&lt;/i&gt; if x&lt;sub&gt;1&lt;/sub&gt; &amp;lt; x&lt;sub&gt;2&lt;/sub&gt; and
                  y&lt;sub&gt;2&lt;/sub&gt; &amp;lt; y&lt;sub&gt;1&lt;/sub&gt; or x&lt;sub&gt;2&lt;/sub&gt; &amp;lt; x&lt;sub&gt;1&lt;/sub&gt; and
                  y&lt;sub&gt;1&lt;/sub&gt; &amp;lt; y&lt;sub&gt;2&lt;/sub&gt;.  If either x&lt;sub&gt;1&lt;/sub&gt; = x&lt;sub&gt;2&lt;/sub&gt;
                  or y&lt;sub&gt;1&lt;/sub&gt; = y&lt;sub&gt;2&lt;/sub&gt;, the pair is neither concordant nor
                  discordant.
                  &lt;p&gt;
                  Kendall&apos;s Tau-b is defined as:
                  &lt;pre&gt;
                  tau&lt;sub&gt;b&lt;/sub&gt; = (n&lt;sub&gt;c&lt;/sub&gt; - n&lt;sub&gt;d&lt;/sub&gt;) / sqrt((n&lt;sub&gt;0&lt;/sub&gt; - n&lt;sub&gt;1&lt;/sub&gt;)  (n&lt;sub&gt;0&lt;/sub&gt; - n&lt;sub&gt;2&lt;/sub&gt;))
                  &lt;/pre&gt;
                  &lt;p&gt;
                  where:
                  &lt;ul&gt;
                  &lt;li&gt;n&lt;sub&gt;0&lt;/sub&gt; = n  (n - 1) / 2&lt;/li&gt;
                  &lt;li&gt;n&lt;sub&gt;c&lt;/sub&gt; = Number of concordant pairs&lt;/li&gt;
                  &lt;li&gt;n&lt;sub&gt;d&lt;/sub&gt; = Number of discordant pairs&lt;/li&gt;
                  &lt;li&gt;n&lt;sub&gt;1&lt;/sub&gt; = sum of t&lt;sub&gt;i&lt;/sub&gt;  (t&lt;sub&gt;i&lt;/sub&gt; - 1) / 2 for all i&lt;/li&gt;
                  &lt;li&gt;n&lt;sub&gt;2&lt;/sub&gt; = sum of u&lt;sub&gt;j&lt;/sub&gt;  (u&lt;sub&gt;j&lt;/sub&gt; - 1) / 2 for all j&lt;/li&gt;
                  &lt;li&gt;t&lt;sub&gt;i&lt;/sub&gt; = Number of tied values in the i&lt;sup&gt;th&lt;/sup&gt; group of ties in x&lt;/li&gt;
                  &lt;li&gt;u&lt;sub&gt;j&lt;/sub&gt; = Number of tied values in the j&lt;sup&gt;th&lt;/sup&gt; group of ties in y&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;p&gt;
                  This implementation uses the O(n log n) algorithm described in
                  William R. Knight&apos;s 1966 paper &quot;A Computer Method for Calculating
                  Kendall&apos;s Tau with Ungrouped Data&quot; in the Journal of the American
                  Statistical Association.                
                <see>
                    &lt;a href=&quot;http://en.wikipedia.org/wiki/Kendall_tau_rank_correlation_coefficient&quot;&gt;
                      Kendall tau rank correlation coefficient (Wikipedia)&lt;/a&gt;                    
                </see>
                <see>
                    &lt;a href=&quot;http://www.jstor.org/stable/2282833&quot;&gt;A Computer
                      Method for Calculating Kendall&apos;s Tau with Ungrouped Data&lt;/a&gt;                    
                </see>
                <version>
                    $Id: KendallsCorrelation.java 1548907 2013-12-07 13:08:06Z tn $                    
                </version>
                <since>
                    3.3                    
                </since>
            </javadoc>
            <declaration name="correlationMatrix" type="RealMatrix" line="73"/>
            <javadoc line="73">
                correlation matrix                
            </javadoc>
            <javadoc line="76">
                Create a KendallsCorrelation instance without data.                
            </javadoc>
            <method name="KendallsCorrelation" type="constructor" line="79"/>
            <javadoc line="83">
                Create a KendallsCorrelation from a rectangular array
                  whose columns represent values of variables to be correlated.                
                <param>
                    data rectangular array with columns representing variables                    
                </param>
                <throws>
                    IllegalArgumentException if the input data array is not
                      rectangular with at least two rows and two columns.                    
                </throws>
            </javadoc>
            <method name="KendallsCorrelation" type="constructor" line="91">
                <params>
                    <param name="data" type="double[][]"/>
                </params>
            </method>
            <javadoc line="95">
                Create a KendallsCorrelation from a RealMatrix whose columns
                  represent variables to be correlated.                
                <param>
                    matrix matrix with columns representing variables to correlate                    
                </param>
            </javadoc>
            <method name="KendallsCorrelation" type="constructor" line="101">
                <params>
                    <param name="matrix" type="RealMatrix"/>
                </params>
            </method>
            <javadoc line="105">
                Returns the correlation matrix.                
                <return>
                    correlation matrix                    
                </return>
            </javadoc>
            <method name="getCorrelationMatrix" type="RealMatrix" line="110"/>
            <javadoc line="114">
                Computes the Kendall&apos;s Tau rank correlation matrix for the columns of
                  the input matrix.                
                <param>
                    matrix matrix with columns representing variables to correlate                    
                </param>
                <return>
                    correlation matrix                    
                </return>
            </javadoc>
            <method name="computeCorrelationMatrix" type="RealMatrix" line="121">
                <params>
                    <param name="matrix" type="RealMatrix"/>
                </params>
                <declaration name="nVars" type="int" line="122"/>
                <declaration name="outMatrix" type="RealMatrix" line="123"/>
                <scope line="124">
                    <scope line="125">
                        <declaration name="corr" type="double" line="126"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="135">
                Computes the Kendall&apos;s Tau rank correlation matrix for the columns of
                  the input rectangular array.  The columns of the array represent values
                  of variables to be correlated.                
                <param>
                    matrix matrix with columns representing variables to correlate                    
                </param>
                <return>
                    correlation matrix                    
                </return>
            </javadoc>
            <method name="computeCorrelationMatrix" type="RealMatrix" line="143">
                <params>
                    <param name="matrix" type="double[][]"/>
                </params>
            </method>
            <javadoc line="147">
                Computes the Kendall&apos;s Tau rank correlation coefficient between the two arrays.                
                <param>
                    xArray first data array                    
                </param>
                <param>
                    yArray second data array                    
                </param>
                <return>
                    Returns Kendall&apos;s Tau rank correlation coefficient for the two arrays                    
                </return>
                <throws>
                    DimensionMismatchException if the arrays lengths do not match                    
                </throws>
            </javadoc>
            <method name="correlation" type="double" line="156">
                <params>
                    <param name="xArray" type="double[]"/>
                    <param name="yArray" type="double[]"/>
                </params>
                <scope line="158"/>
                <declaration name="n" type="int" line="162"/>
                <declaration name="numPairs" type="long" line="163"/>
                <declaration name="pairs" type="Pair&amp;lt;Double,Double&amp;gt;[]" line="165"/>
                <scope line="167"/>
                <anonymous_class line="171">
                    <method name="compare" type="int" line="172">
                        <params>
                            <param name="pair1" type="Pair&lt;Double,Double&gt;"/>
                            <param name="pair2" type="Pair&lt;Double,Double&gt;"/>
                        </params>
                        <declaration name="compareFirst" type="int" line="173"/>
                    </method>
                </anonymous_class>
                <declaration name="tiedXPairs" type="long" line="178"/>
                <declaration name="tiedXYPairs" type="long" line="179"/>
                <declaration name="consecutiveXTies" type="long" line="180"/>
                <declaration name="consecutiveXYTies" type="long" line="181"/>
                <declaration name="prev" type="Pair&amp;lt;Double,Double&amp;gt;" line="182"/>
                <scope line="183">
                    <declaration name="curr" type="Pair&amp;lt;Double,Double&amp;gt;" line="184"/>
                    <scope line="185">
                        <scope line="187"/>
                        <scope line="189"/>
                    </scope>
                    <scope line="193"/>
                </scope>
                <declaration name="swaps" type="int" line="204"/>
                <declaration name="pairsDestination" type="Pair&amp;lt;Double,Double&amp;gt;[]" line="205"/>
                <scope line="207">
                    <scope line="208">
                        <declaration name="i" type="int" line="209"/>
                        <declaration name="iEnd" type="int" line="210"/>
                        <declaration name="j" type="int" line="211"/>
                        <declaration name="jEnd" type="int" line="212"/>
                        <declaration name="copyLocation" type="int" line="214"/>
                        <scope line="215">
                            <scope line="216">
                                <scope line="217">
                                    <scope line="218"/>
                                    <scope line="221"/>
                                </scope>
                                <scope line="226"/>
                            </scope>
                            <scope line="230"/>
                        </scope>
                    </scope>
                    <declaration name="pairsTemp" type="Pair&amp;lt;Double,Double&amp;gt;[]" line="237"/>
                </scope>
                <declaration name="tiedYPairs" type="long" line="242"/>
                <declaration name="consecutiveYTies" type="long" line="243"/>
                <scope line="245">
                    <declaration name="curr" type="Pair&amp;lt;Double,Double&amp;gt;" line="246"/>
                    <scope line="247"/>
                    <scope line="249"/>
                </scope>
                <declaration name="concordantMinusDiscordant" type="long" line="257"/>
                <declaration name="nonTiedPairsMultiplied" type="double" line="258"/>
            </method>
            <javadoc line="262">
                Returns the sum of the number from 1 .. n according to Gauss&apos; summation formula:
                  \[ \sum\limits_{k=1}^n k = \frac{n(n + 1)}{2} \]                
                <param>
                    n the summation end                    
                </param>
                <return>
                    the sum of the number from 1 to n                    
                </return>
            </javadoc>
            <method name="sum" type="long" line="269">
                <params>
                    <param name="n" type="long"/>
                </params>
            </method>
        </class>
    </source>