<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optim.linear">
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.io.ObjectOutputStream"/>
        <import package="java.io.Serializable"/>
        <import package="org.apache.commons.math3.analysis.MultivariateFunction"/>
        <import package="org.apache.commons.math3.linear.MatrixUtils"/>
        <import package="org.apache.commons.math3.linear.RealVector"/>
        <import package="org.apache.commons.math3.linear.ArrayRealVector"/>
        <import package="org.apache.commons.math3.optim.OptimizationData"/>
        <class name="LinearObjectiveFunction" line="29">
            <implements interface="MultivariateFunction"/>
            <implements interface="OptimizationData"/>
            <implements interface="Serializable"/>
            <javadoc line="29">
                An objective function for a linear optimization problem.
                  &lt;p&gt;
                  A linear objective function has one the form:
                  &lt;pre&gt;
                  c&lt;sub&gt;1&lt;/sub&gt;x&lt;sub&gt;1&lt;/sub&gt; + ... c&lt;sub&gt;n&lt;/sub&gt;x&lt;sub&gt;n&lt;/sub&gt; + d
                  &lt;/pre&gt;
                  The c&lt;sub&gt;i&lt;/sub&gt; and d are the coefficients of the equation,
                  the x&lt;sub&gt;i&lt;/sub&gt; are the coordinates of the current point.
                  &lt;/p&gt;                
                <version>
                    $Id: LinearObjectiveFunction.java 1435539 2013-01-19 13:27:24Z tn $                    
                </version>
                <since>
                    2.0                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="47"/>
            <javadoc line="47">
                Serializable version identifier.                
            </javadoc>
            <declaration name="coefficients" type="RealVector" line="49"/>
            <javadoc line="49">
                Coefficients of the linear equation (c&lt;sub&gt;i&lt;/sub&gt;).                
            </javadoc>
            <declaration name="constantTerm" type="double" line="51"/>
            <javadoc line="51">
                Constant term of the linear equation.                
            </javadoc>
            <javadoc line="54">
                @param coefficients Coefficients for the linear equation being optimized.                
                <param>
                    constantTerm Constant term of the linear equation.                    
                </param>
            </javadoc>
            <method name="LinearObjectiveFunction" type="constructor" line="58">
                <params>
                    <param name="coefficients" type="double[]"/>
                    <param name="constantTerm" type="double"/>
                </params>
            </method>
            <javadoc line="62">
                @param coefficients Coefficients for the linear equation being optimized.                
                <param>
                    constantTerm Constant term of the linear equation.                    
                </param>
            </javadoc>
            <method name="LinearObjectiveFunction" type="constructor" line="66">
                <params>
                    <param name="coefficients" type="RealVector"/>
                    <param name="constantTerm" type="double"/>
                </params>
            </method>
            <javadoc line="71">
                Gets the coefficients of the linear equation being optimized.                
                <return>
                    coefficients of the linear equation being optimized.                    
                </return>
            </javadoc>
            <method name="getCoefficients" type="RealVector" line="76"/>
            <javadoc line="80">
                Gets the constant of the linear equation being optimized.                
                <return>
                    constant of the linear equation being optimized.                    
                </return>
            </javadoc>
            <method name="getConstantTerm" type="double" line="85"/>
            <javadoc line="89">
                Computes the value of the linear equation at the current point.                
                <param>
                    point Point at which linear equation must be evaluated.                    
                </param>
                <return>
                    the value of the linear equation at the current point.                    
                </return>
            </javadoc>
            <method name="value" type="double" line="95">
                <params>
                    <param name="point" type="double[]"/>
                </params>
            </method>
            <javadoc line="99">
                Computes the value of the linear equation at the current point.                
                <param>
                    point Point at which linear equation must be evaluated.                    
                </param>
                <return>
                    the value of the linear equation at the current point.                    
                </return>
            </javadoc>
            <method name="value" type="double" line="105">
                <params>
                    <param name="point" type="RealVector"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="110">
                <params>
                    <param name="other" type="Object"/>
                </params>
                <scope line="111"/>
                <scope line="114">
                    <declaration name="rhs" type="LinearObjectiveFunction" line="115"/>
                </scope>
            </method>
            <method name="hashCode" type="int" line="123"/>
            <javadoc line="127">
                Serialize the instance.                
                <param>
                    oos stream where object should be written                    
                </param>
                <throws>
                    IOException if object cannot be written to stream                    
                </throws>
            </javadoc>
            <method name="writeObject" type="void" line="133">
                <params>
                    <param name="oos" type="ObjectOutputStream"/>
                </params>
            </method>
            <javadoc line="138">
                Deserialize the instance.                
                <param>
                    ois stream from which the object should be read                    
                </param>
                <throws>
                    ClassNotFoundException if a class in the stream cannot be found                    
                </throws>
                <throws>
                    IOException if object cannot be read from the stream                    
                </throws>
            </javadoc>
            <method name="readObject" type="void" line="145">
                <params>
                    <param name="ois" type="ObjectInputStream"/>
                </params>
            </method>
        </class>
    </source>