<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.integration.gauss">
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.util.Pair"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <class name="HermiteRuleFactory" line="23">
            <extends class="BaseRuleFactory">
                <type_params>
                    <type_param name="Double"/>
                </type_params>
            </extends>
            <javadoc line="23">
                Factory that creates a
                  &lt;a href=&quot;http://en.wikipedia.org/wiki/Gauss-Hermite_quadrature&quot;&gt;
                  Gauss-type quadrature rule using Hermite polynomials&lt;/a&gt;
                  of the first kind.
                  Such a quadrature rule allows the calculation of improper integrals
                  of a function
                  &lt;code&gt;
                  f(x) e&lt;sup&gt;-x&lt;sup&gt;2&lt;/sup&gt;&lt;/sup&gt;
                  &lt;/code&gt;
                  &lt;br/&gt;
                  Recurrence relation and weights computation follow
                  &lt;a href=&quot;http://en.wikipedia.org/wiki/Abramowitz_and_Stegun&quot;
                  Abramowitz and Stegun, 1964&lt;/a&gt;.
                  &lt;br/&gt;
                  The coefficients of the standard Hermite polynomials grow very rapidly;
                  in order to avoid overflows, each Hermite polynomial is normalized with
                  respect to the underlying scalar product.
                  The initial interval for the application of the bisection method is
                  based on the roots of the previous Hermite polynomial (interlacing).
                  Upper and lower bounds of these roots are provided by
                  &lt;quote&gt;
                  I. Krasikov,
                  &lt;em&gt;Nonnegative quadratic forms and bounds on orthogonal polynomials&lt;/em&gt;,
                  Journal of Approximation theory &lt;b&gt;111&lt;/b&gt;, 31-49
                  &lt;/quote&gt;                
                <since>
                    3.3                    
                </since>
                <version>
                    $Id: HermiteRuleFactory.java 1500018 2013-07-05 14:20:19Z erans $                    
                </version>
            </javadoc>
            <declaration name="SQRT_PI" type="double" line="54"/>
            <javadoc line="54">
                &amp;pi;&lt;sup&gt;1/2&lt;/sup&gt;                
            </javadoc>
            <declaration name="H0" type="double" line="56"/>
            <javadoc line="56">
                &amp;pi;&lt;sup&gt;-1/4&lt;/sup&gt;                
            </javadoc>
            <declaration name="H1" type="double" line="58"/>
            <javadoc line="58">
                &amp;pi;&lt;sup&gt;-1/4&lt;/sup&gt; &amp;radic;2                
            </javadoc>
            <javadoc line="61">
                {@inheritDoc}                
            </javadoc>
            <method name="computeRule" type="Pair&lt;Double[],Double[]&gt;" line="64">
                <params>
                    <param name="numberOfPoints" type="int"/>
                </params>
                <comment line="68">
                    Break recursion.                    
                </comment>
                <comment line="73">
                    Get previous rule.
                     If it has not been computed yet it will trigger a recursive call
                     to this method.                    
                </comment>
                <comment line="79">
                    Compute next rule.                    
                </comment>
                <comment line="86">
                    Find i-th root of H[n+1] by bracketing.                    
                </comment>
                <comment line="89">
                    Lower-bound of the interval.                    
                </comment>
                <comment line="91">
                    Upper-bound of the interval.                    
                </comment>
                <comment line="94">
                    H[j-1](a)                    
                </comment>
                <comment line="96">
                    H[j](a)                    
                </comment>
                <comment line="98">
                    H[j-1](b)                    
                </comment>
                <comment line="100">
                    H[j](b)                    
                </comment>
                <comment line="103">
                    Compute H[j+1](a) and H[j+1](b)                    
                </comment>
                <comment line="115">
                    Now ha = H[n+1](a), and hma = H[n](a) (same holds for b).
                     Middle of the interval.                    
                </comment>
                <comment line="118">
                    P[j-1](c)                    
                </comment>
                <comment line="120">
                    P[j](c)                    
                </comment>
                <comment line="128">
                    Compute H[j+1](c)                    
                </comment>
                <comment line="136">
                    Now h = H[n+1](c) and hm = H[n](c).                    
                </comment>
                <comment line="161">
                    If &quot;numberOfPoints&quot; is odd, 0 is a root.
                     Note: as written, the test for oddness will work for negative
                     integers too (although it is not necessary here), preventing
                     a FindBugs warning.                    
                </comment>
                <scope line="66"/>
                <declaration name="lastNumPoints" type="int" line="75"/>
                <declaration name="previousPoints" type="Double[]" line="76"/>
                <declaration name="points" type="Double[]" line="79"/>
                <declaration name="weights" type="Double[]" line="80"/>
                <declaration name="sqrtTwoTimesLastNumPoints" type="double" line="82"/>
                <declaration name="sqrtTwoTimesNumPoints" type="double" line="83"/>
                <declaration name="iMax" type="int" line="86"/>
                <scope line="87">
                    <declaration name="a" type="double" line="89"/>
                    <declaration name="b" type="double" line="91"/>
                    <declaration name="hma" type="double" line="94"/>
                    <declaration name="ha" type="double" line="96"/>
                    <declaration name="hmb" type="double" line="98"/>
                    <declaration name="hb" type="double" line="100"/>
                    <scope line="101">
                        <declaration name="jp1" type="double" line="103"/>
                        <declaration name="s" type="double" line="104"/>
                        <declaration name="sm" type="double" line="105"/>
                        <declaration name="hpa" type="double" line="106"/>
                        <declaration name="hpb" type="double" line="107"/>
                    </scope>
                    <declaration name="c" type="double" line="116"/>
                    <declaration name="hmc" type="double" line="118"/>
                    <declaration name="hc" type="double" line="120"/>
                    <declaration name="done" type="boolean" line="121"/>
                    <scope line="122">
                        <scope line="126">
                            <declaration name="jp1" type="double" line="128"/>
                            <declaration name="s" type="double" line="129"/>
                            <declaration name="sm" type="double" line="130"/>
                            <declaration name="hpc" type="double" line="131"/>
                        </scope>
                        <scope line="136">
                            <scope line="137"/>
                            <scope line="141"/>
                        </scope>
                    </scope>
                    <declaration name="d" type="double" line="149"/>
                    <declaration name="w" type="double" line="150"/>
                    <declaration name="idx" type="int" line="155"/>
                </scope>
                <scope line="164">
                    <declaration name="hm" type="double" line="165"/>
                    <scope line="166">
                        <declaration name="jp1" type="double" line="167"/>
                    </scope>
                    <declaration name="d" type="double" line="170"/>
                    <declaration name="w" type="double" line="171"/>
                </scope>
            </method>
        </class>
    </source>