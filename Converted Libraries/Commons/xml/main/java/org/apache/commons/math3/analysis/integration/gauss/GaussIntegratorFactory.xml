<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.integration.gauss">
        <import package="java.math.BigDecimal"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.util.Pair"/>
        <class name="GaussIntegratorFactory" line="25">
            <javadoc line="25">
                Class that provides different ways to compute the nodes and weights to be
                  used by the {@link GaussIntegrator Gaussian integration rule}.                
                <since>
                    3.1                    
                </since>
                <version>
                    $Id: GaussIntegratorFactory.java 1500601 2013-07-08 08:20:26Z luc $                    
                </version>
            </javadoc>
            <declaration name="legendre" type="BaseRuleFactory&amp;lt;Double&amp;gt;" line="33"/>
            <javadoc line="33">
                Generator of Gauss-Legendre integrators.                
            </javadoc>
            <declaration name="legendreHighPrecision" type="BaseRuleFactory&amp;lt;BigDecimal&amp;gt;" line="35"/>
            <javadoc line="35">
                Generator of Gauss-Legendre integrators.                
            </javadoc>
            <declaration name="hermite" type="BaseRuleFactory&amp;lt;Double&amp;gt;" line="37"/>
            <javadoc line="37">
                Generator of Gauss-Hermite integrators.                
            </javadoc>
            <javadoc line="40">
                Creates a Gauss-Legendre integrator of the given order.
                  The call to the{@link GaussIntegrator#integrate(org.apache.commons.math3.analysis.UnivariateFunction)integrate} method will perform an integration on the natural interval{@code [-1 , 1]}.                
                <param>
                    numberOfPoints Order of the integration rule.                    
                </param>
                <return>
                    a Gauss-Legendre integrator.                    
                </return>
            </javadoc>
            <method name="legendre" type="GaussIntegrator" line="50">
                <params>
                    <param name="numberOfPoints" type="int"/>
                </params>
            </method>
            <javadoc line="54">
                Creates a Gauss-Legendre integrator of the given order.
                  The call to the{@link GaussIntegrator#integrate(org.apache.commons.math3.analysis.UnivariateFunction)integrate} method will perform an integration on the given interval.                
                <param>
                    numberOfPoints Order of the integration rule.                    
                </param>
                <param>
                    lowerBound Lower bound of the integration interval.                    
                </param>
                <param>
                    upperBound Upper bound of the integration interval.                    
                </param>
                <return>
                    a Gauss-Legendre integrator.                    
                </return>
                <throws>
                    NotStrictlyPositiveException if number of points is not positive                    
                </throws>
            </javadoc>
            <method name="legendre" type="GaussIntegrator" line="69">
                <params>
                    <param name="numberOfPoints" type="int"/>
                    <param name="lowerBound" type="double"/>
                    <param name="upperBound" type="double"/>
                </params>
            </method>
            <javadoc line="74">
                Creates a Gauss-Legendre integrator of the given order.
                  The call to the{@link GaussIntegrator#integrate(org.apache.commons.math3.analysis.UnivariateFunction)integrate} method will perform an integration on the natural interval{@code [-1 , 1]}.                
                <param>
                    numberOfPoints Order of the integration rule.                    
                </param>
                <return>
                    a Gauss-Legendre integrator.                    
                </return>
                <throws>
                    NotStrictlyPositiveException if number of points is not positive                    
                </throws>
            </javadoc>
            <method name="legendreHighPrecision" type="GaussIntegrator" line="86">
                <params>
                    <param name="numberOfPoints" type="int"/>
                </params>
            </method>
            <javadoc line="90">
                Creates an integrator of the given order, and whose call to the{@link GaussIntegrator#integrate(org.apache.commons.math3.analysis.UnivariateFunction)integrate} method will perform an integration on the given interval.                
                <param>
                    numberOfPoints Order of the integration rule.                    
                </param>
                <param>
                    lowerBound Lower bound of the integration interval.                    
                </param>
                <param>
                    upperBound Upper bound of the integration interval.                    
                </param>
                <return>
                    a Gauss-Legendre integrator.                    
                </return>
                <throws>
                    NotStrictlyPositiveException if number of points is not positive                    
                </throws>
            </javadoc>
            <method name="legendreHighPrecision" type="GaussIntegrator" line="104">
                <params>
                    <param name="numberOfPoints" type="int"/>
                    <param name="lowerBound" type="double"/>
                    <param name="upperBound" type="double"/>
                </params>
            </method>
            <javadoc line="109">
                Creates a Gauss-Hermite integrator of the given order.
                  The call to the{@link SymmetricGaussIntegrator#integrate(org.apache.commons.math3.analysis.UnivariateFunction)integrate} method will perform a weighted integration on the interval{@code [-&amp;inf;, +&amp;inf;]}: the computed value is the improper integral of
                  &lt;code&gt;
                  e&lt;sup&gt;-x&lt;sup&gt;2&lt;/sup&gt;&lt;/sup&gt; f(x)
                  &lt;/code&gt;
                  where {@code f(x)} is the function passed to the{@link SymmetricGaussIntegrator#integrate(org.apache.commons.math3.analysis.UnivariateFunction)integrate} method.                
                <param>
                    numberOfPoints Order of the integration rule.                    
                </param>
                <return>
                    a Gauss-Hermite integrator.                    
                </return>
            </javadoc>
            <method name="hermite" type="SymmetricGaussIntegrator" line="125">
                <params>
                    <param name="numberOfPoints" type="int"/>
                </params>
            </method>
            <javadoc line="129">
                @param factory Integration rule factory.                
                <param>
                    numberOfPoints Order of the integration rule.                    
                </param>
                <return>
                    the integration nodes and weights.                    
                </return>
                <throws>
                    NotStrictlyPositiveException if number of points is not positive                    
                </throws>
                <throws>
                    DimensionMismatchException if the elements of the rule pair do not
                      have the same length.                    
                </throws>
            </javadoc>
            <method name="getRule" type="Pair&lt;double[],double[]&gt;" line="139">
                <params>
                    <param name="factory" type="BaseRuleFactory&lt;? extends Number&gt;"/>
                    <param name="numberOfPoints" type="int"/>
                </params>
            </method>
            <javadoc line="143">
                Performs a change of variable so that the integration can be performed
                  on an arbitrary interval {@code [a, b]}.
                  It is assumed that the natural interval is {@code [-1, 1]}.                
                <param>
                    rule Original points and weights.                    
                </param>
                <param>
                    a Lower bound of the integration interval.                    
                </param>
                <param>
                    b Lower bound of the integration interval.                    
                </param>
                <return>
                    the points and weights adapted to the new interval.                    
                </return>
            </javadoc>
            <method name="transform" type="Pair&lt;double[],double[]&gt;" line="155">
                <params>
                    <param name="rule" type="Pair&lt;double[],double[]&gt;"/>
                    <param name="a" type="double"/>
                    <param name="b" type="double"/>
                </params>
                <comment line="160">
                    Scaling                    
                </comment>
                <declaration name="points" type="double[]" line="156"/>
                <declaration name="weights" type="double[]" line="157"/>
                <declaration name="scale" type="double" line="160"/>
                <declaration name="shift" type="double" line="161"/>
                <scope line="163"/>
            </method>
        </class>
    </source>