<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.integration.gauss">
        <import package="java.math.BigDecimal"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.util.Pair"/>
        <class name="GaussIntegratorFactory" line="6">
            <javadoc line="6">
                Class that provides different ways to compute the nodes and weights to be
                  used by the {@link GaussIntegrator Gaussian integration rule}.                
                <since>
                    3.1                    
                </since>
                <version>
                    $Id: GaussIntegratorFactory.java 1455194 2013-03-11 15:45:54Z luc $                    
                </version>
            </javadoc>
            <declaration name="legendre" type="BaseRuleFactory&lt;Double&gt;" line="13"/>
            <javadoc line="13">
                Generator of Gauss-Legendre integrators.                
            </javadoc>
            <declaration name="legendreHighPrecision" type="BaseRuleFactory&lt;BigDecimal&gt;" line="17"/>
            <javadoc line="17">
                Generator of Gauss-Legendre integrators.                
            </javadoc>
            <javadoc line="21">
                Creates an integrator of the given order, and whose call to the{@link GaussIntegrator#integrate(org.apache.commons.math3.analysis.UnivariateFunction)integrate} method will perform an integration on the natural interval{@code [-1 , 1]}.                
                <param>
                    numberOfPoints Order of the integration rule.                    
                </param>
                <return>
                    a Gauss-Legendre integrator.                    
                </return>
            </javadoc>
            <method name="legendre" type="GaussIntegrator" line="26">
                <params>
                    <param name="numberOfPoints" type="int"/>
                </params>
            </method>
            <javadoc line="29">
                Creates an integrator of the given order, and whose call to the{@link GaussIntegrator#integrate(org.apache.commons.math3.analysis.UnivariateFunction)integrate} method will perform an integration on the given interval.                
                <param>
                    numberOfPoints Order of the integration rule.                    
                </param>
                <param>
                    lowerBound Lower bound of the integration interval.                    
                </param>
                <param>
                    upperBound Upper bound of the integration interval.                    
                </param>
                <return>
                    a Gauss-Legendre integrator.                    
                </return>
                <throws>
                    NotStrictlyPositiveException if number of points is not positive                    
                </throws>
            </javadoc>
            <method name="legendre" type="GaussIntegrator" line="37">
                <params>
                    <param name="numberOfPoints" type="int"/>
                    <param name="lowerBound" type="double"/>
                    <param name="upperBound" type="double"/>
                </params>
            </method>
            <javadoc line="40">
                Creates an integrator of the given order, and whose call to the{@link GaussIntegrator#integrate(org.apache.commons.math3.analysis.UnivariateFunction)integrate} method will perform an integration on the natural interval{@code [-1 , 1]}.                
                <param>
                    numberOfPoints Order of the integration rule.                    
                </param>
                <return>
                    a Gauss-Legendre integrator.                    
                </return>
                <throws>
                    NotStrictlyPositiveException if number of points is not positive                    
                </throws>
            </javadoc>
            <method name="legendreHighPrecision" type="GaussIntegrator" line="46">
                <params>
                    <param name="numberOfPoints" type="int"/>
                </params>
            </method>
            <javadoc line="49">
                Creates an integrator of the given order, and whose call to the{@link GaussIntegrator#integrate(org.apache.commons.math3.analysis.UnivariateFunction)integrate} method will perform an integration on the given interval.                
                <param>
                    numberOfPoints Order of the integration rule.                    
                </param>
                <param>
                    lowerBound Lower bound of the integration interval.                    
                </param>
                <param>
                    upperBound Upper bound of the integration interval.                    
                </param>
                <return>
                    a Gauss-Legendre integrator.                    
                </return>
                <throws>
                    NotStrictlyPositiveException if number of points is not positive                    
                </throws>
            </javadoc>
            <method name="legendreHighPrecision" type="GaussIntegrator" line="57">
                <params>
                    <param name="numberOfPoints" type="int"/>
                    <param name="lowerBound" type="double"/>
                    <param name="upperBound" type="double"/>
                </params>
            </method>
            <javadoc line="60">
                @param factory Integration rule factory.                
                <param>
                    numberOfPoints Order of the integration rule.                    
                </param>
                <return>
                    the integration nodes and weights.                    
                </return>
                <throws>
                    NotStrictlyPositiveException if number of points is not positive                    
                </throws>
                <throws>
                    DimensionMismatchException if the elements of the rule pair do not
                      have the same length.                    
                </throws>
            </javadoc>
            <method name="getRule" type="Pair<double[],double[]>" line="68">
                <params>
                    <param name="factory" type="BaseRuleFactory<? extends Number>"/>
                    <param name="numberOfPoints" type="int"/>
                </params>
            </method>
            <javadoc line="71">
                Performs a change of variable so that the integration can be performed
                  on an arbitrary interval {@code [a, b]}.
                  It is assumed that the natural interval is {@code [-1, 1]}.                
                <param>
                    rule Original points and weights.                    
                </param>
                <param>
                    a Lower bound of the integration interval.                    
                </param>
                <param>
                    b Lower bound of the integration interval.                    
                </param>
                <return>
                    the points and weights adapted to the new interval.                    
                </return>
            </javadoc>
            <method name="transform" type="Pair<double[],double[]>" line="80">
                <params>
                    <param name="rule" type="Pair<double[],double[]>"/>
                    <param name="a" type="double"/>
                    <param name="b" type="double"/>
                </params>
                <declaration name="points" type="double[]" line="81"/>
                <declaration name="weights" type="double[]" line="82"/>
                <declaration name="scale" type="double" line="83"/>
                <declaration name="shift" type="double" line="84"/>
                <scope line="85"/>
            </method>
        </class>
    </source>