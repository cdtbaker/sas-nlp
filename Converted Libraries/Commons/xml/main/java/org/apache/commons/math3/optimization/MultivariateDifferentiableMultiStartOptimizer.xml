<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.optimization">
        <import package="org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction"/>
        <import package="org.apache.commons.math3.random.RandomVectorGenerator"/>
        <class name="MultivariateDifferentiableMultiStartOptimizer" line="4">
            <extends class="BaseMultivariateMultiStartOptimizer">
                <type_params>
                    <type_param name="MultivariateDifferentiableFunction"/>
                </type_params>
            </extends>
            <implements interface="MultivariateDifferentiableOptimizer"/>
            <javadoc line="4">
                Special implementation of the {@link MultivariateDifferentiableOptimizer}interface adding multi-start features to an existing optimizer.
                  This class wraps a classical optimizer to use it several times in
                  turn with different starting points in order to avoid being trapped
                  into a local extremum when looking for a global one.                
                <version>
                    $Id: MultivariateDifferentiableMultiStartOptimizer.java 1422230 2012-12-15 12:11:13Z erans $                    
                </version>
                <deprecated>
                    As of 3.1 (to be removed in 4.0).                    
                </deprecated>
                <since>
                    3.1                    
                </since>
            </javadoc>
            <javadoc line="14">
                Create a multi-start optimizer from a single-start optimizer.                
                <param>
                    optimizer Single-start optimizer to wrap.                    
                </param>
                <param>
                    starts Number of starts to perform (including the
                      first one), multi-start is disabled if value is less than or
                      equal to 1.                    
                </param>
                <param>
                    generator Random vector generator to use for restarts.                    
                </param>
            </javadoc>
            <method name="MultivariateDifferentiableMultiStartOptimizer" type="constructor" line="22">
                <params>
                    <param name="optimizer" type="MultivariateDifferentiableOptimizer"/>
                    <param name="starts" type="int"/>
                    <param name="generator" type="RandomVectorGenerator"/>
                </params>
            </method>
        </class>
    </source>