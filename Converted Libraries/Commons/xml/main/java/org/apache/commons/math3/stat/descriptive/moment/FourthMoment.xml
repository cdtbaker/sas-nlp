<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.descriptive.moment">
        <import package="java.io.Serializable"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <class name="FourthMoment" line="5">
            <extends class="ThirdMoment"/>
            <implements interface="Serializable"/>
            <javadoc line="5">
                Computes a statistic related to the Fourth Central Moment.  Specifically,
                  what is computed is the sum of
                  &lt;p&gt;
                  (x_i - xbar) ^ 4, &lt;/p&gt;
                  &lt;p&gt;
                  where the x_i are the
                  sample observations and xbar is the sample mean. &lt;/p&gt;
                  &lt;p&gt;
                  The following recursive updating formula is used: &lt;/p&gt;
                  &lt;p&gt;
                  Let &lt;ul&gt;
                  &lt;li&gt; dev = (current obs - previous mean) &lt;/li&gt;
                  &lt;li&gt; m2 = previous value of {@link SecondMoment} &lt;/li&gt;
                  &lt;li&gt; m2 = previous value of {@link ThirdMoment} &lt;/li&gt;
                  &lt;li&gt; n = number of observations (including current obs) &lt;/li&gt;
                  &lt;/ul&gt;
                  Then &lt;/p&gt;
                  &lt;p&gt;
                  new value = old value - 4  (dev/n)  m3 + 6  (dev/n)^2  m2 + &lt;br&gt;
                  [n^2 - 3  (n-1)]  dev^4  (n-1) / n^3 &lt;/p&gt;
                  &lt;p&gt;
                  Returns &lt;code&gt;Double.NaN&lt;/code&gt; if no data values have been added and
                  returns &lt;code&gt;0&lt;/code&gt; if there is just one value in the data set. &lt;/p&gt;
                  &lt;p&gt;
                  &lt;strong&gt;Note that this implementation is not synchronized.&lt;/strong&gt; If
                  multiple threads access an instance of this class concurrently, and at least
                  one of the threads invokes the &lt;code&gt;increment()&lt;/code&gt; or
                  &lt;code&gt;clear()&lt;/code&gt; method, it must be synchronized externally. &lt;/p&gt;                
                <version>
                    $Id: FourthMoment.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="37"/>
            <javadoc line="37">
                Serializable version identifier                
            </javadoc>
            <declaration name="m4" type="double" line="41"/>
            <javadoc line="41">
                fourth moment of values that have been added                
            </javadoc>
            <javadoc line="45">
                Create a FourthMoment instance                
            </javadoc>
            <method name="FourthMoment" type="constructor" line="48"/>
            <javadoc line="52">
                Copy constructor, creates a new {@code FourthMoment} identical
                  to the {@code original}                
                <param>
                    original the {@code FourthMoment} instance to copy                    
                </param>
                <throws>
                    NullArgumentException if original is null                    
                </throws>
            </javadoc>
            <method name="FourthMoment" type="constructor" line="58">
                <params>
                    <param name="original" type="FourthMoment"/>
                </params>
            </method>
            <javadoc line="62">
                {@inheritDoc}                
            </javadoc>
            <method name="increment" type="void" line="65">
                <params>
                    <param name="d" type="double"/>
                </params>
                <scope line="66"/>
                <declaration name="prevM3" type="double" line="72"/>
                <declaration name="prevM2" type="double" line="73"/>
                <declaration name="n0" type="double" line="75"/>
            </method>
            <javadoc line="78">
                {@inheritDoc}                
            </javadoc>
            <method name="getResult" type="double" line="81"/>
            <javadoc line="84">
                {@inheritDoc}                
            </javadoc>
            <method name="clear" type="void" line="87"/>
            <javadoc line="91">
                {@inheritDoc}                
            </javadoc>
            <method name="copy" type="FourthMoment" line="94">
                <declaration name="result" type="FourthMoment" line="95"/>
            </method>
            <javadoc line="99">
                Copies source to dest.
                  &lt;p&gt;Neither source nor dest can be null.&lt;/p&gt;                
                <param>
                    source FourthMoment to copy                    
                </param>
                <param>
                    dest FourthMoment to copy to                    
                </param>
                <throws>
                    NullArgumentException if either source or dest is null                    
                </throws>
            </javadoc>
            <method name="copy" type="void" line="106">
                <params>
                    <param name="source" type="FourthMoment"/>
                    <param name="dest" type="FourthMoment"/>
                </params>
            </method>
        </class>
    </source>