<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.util">
        <import package="java.io.Serializable"/>
        <import package="java.math.BigDecimal"/>
        <import package="java.math.BigInteger"/>
        <import package="java.math.MathContext"/>
        <import package="java.math.RoundingMode"/>
        <import package="org.apache.commons.math3.Field"/>
        <import package="org.apache.commons.math3.FieldElement"/>
        <import package="org.apache.commons.math3.exception.MathArithmeticException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <class name="BigReal" line="31">
            <implements interface="FieldElement">
                <type_params>
                    <type_param name="BigReal"/>
                </type_params>
            </implements>
            <implements interface="Comparable">
                <type_params>
                    <type_param name="BigReal"/>
                </type_params>
            </implements>
            <implements interface="Serializable"/>
            <javadoc line="31">
                Arbitrary precision decimal number.
                  &lt;p&gt;
                  This class is a simple wrapper around the standard &lt;code&gt;BigDecimal&lt;/code&gt;
                  in order to implement the {@link FieldElement} interface.
                  &lt;/p&gt;                
                <since>
                    2.0                    
                </since>
                <version>
                    $Id: BigReal.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
            </javadoc>
            <declaration name="ZERO" type="BigReal" line="42"/>
            <javadoc line="42">
                A big real representing 0.                
            </javadoc>
            <declaration name="ONE" type="BigReal" line="45"/>
            <javadoc line="45">
                A big real representing 1.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="48"/>
            <javadoc line="48">
                Serializable version identifier.                
            </javadoc>
            <declaration name="d" type="BigDecimal" line="51"/>
            <javadoc line="51">
                Underlying BigDecimal.                
            </javadoc>
            <declaration name="roundingMode" type="RoundingMode" line="54"/>
            <javadoc line="54">
                Rounding mode for divisions.                
            </javadoc>
            <declaration name="scale" type="int" line="57"/>
            <javadoc line="57">
                BigDecimal scale                
            </javadoc>
            <javadoc line="60">
                Build an instance from a BigDecimal.                
                <param>
                    val value of the instance                    
                </param>
            </javadoc>
            <method name="BigReal" type="constructor" line="63">
                <params>
                    <param name="val" type="BigDecimal"/>
                </params>
            </method>
            <javadoc line="67">
                Build an instance from a BigInteger.                
                <param>
                    val value of the instance                    
                </param>
            </javadoc>
            <method name="BigReal" type="constructor" line="70">
                <params>
                    <param name="val" type="BigInteger"/>
                </params>
            </method>
            <javadoc line="74">
                Build an instance from an unscaled BigInteger.                
                <param>
                    unscaledVal unscaled value                    
                </param>
                <param>
                    scale scale to use                    
                </param>
            </javadoc>
            <method name="BigReal" type="constructor" line="78">
                <params>
                    <param name="unscaledVal" type="BigInteger"/>
                    <param name="scale" type="int"/>
                </params>
            </method>
            <javadoc line="82">
                Build an instance from an unscaled BigInteger.                
                <param>
                    unscaledVal unscaled value                    
                </param>
                <param>
                    scale scale to use                    
                </param>
                <param>
                    mc to used                    
                </param>
            </javadoc>
            <method name="BigReal" type="constructor" line="87">
                <params>
                    <param name="unscaledVal" type="BigInteger"/>
                    <param name="scale" type="int"/>
                    <param name="mc" type="MathContext"/>
                </params>
            </method>
            <javadoc line="91">
                Build an instance from a BigInteger.                
                <param>
                    val value of the instance                    
                </param>
                <param>
                    mc context to use                    
                </param>
            </javadoc>
            <method name="BigReal" type="constructor" line="95">
                <params>
                    <param name="val" type="BigInteger"/>
                    <param name="mc" type="MathContext"/>
                </params>
            </method>
            <javadoc line="99">
                Build an instance from a characters representation.                
                <param>
                    in character representation of the value                    
                </param>
            </javadoc>
            <method name="BigReal" type="constructor" line="102">
                <params>
                    <param name="in" type="char[]"/>
                </params>
            </method>
            <javadoc line="106">
                Build an instance from a characters representation.                
                <param>
                    in character representation of the value                    
                </param>
                <param>
                    offset offset of the first character to analyze                    
                </param>
                <param>
                    len length of the array slice to analyze                    
                </param>
            </javadoc>
            <method name="BigReal" type="constructor" line="111">
                <params>
                    <param name="in" type="char[]"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <javadoc line="115">
                Build an instance from a characters representation.                
                <param>
                    in character representation of the value                    
                </param>
                <param>
                    offset offset of the first character to analyze                    
                </param>
                <param>
                    len length of the array slice to analyze                    
                </param>
                <param>
                    mc context to use                    
                </param>
            </javadoc>
            <method name="BigReal" type="constructor" line="121">
                <params>
                    <param name="in" type="char[]"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                    <param name="mc" type="MathContext"/>
                </params>
            </method>
            <javadoc line="125">
                Build an instance from a characters representation.                
                <param>
                    in character representation of the value                    
                </param>
                <param>
                    mc context to use                    
                </param>
            </javadoc>
            <method name="BigReal" type="constructor" line="129">
                <params>
                    <param name="in" type="char[]"/>
                    <param name="mc" type="MathContext"/>
                </params>
            </method>
            <javadoc line="133">
                Build an instance from a double.                
                <param>
                    val value of the instance                    
                </param>
            </javadoc>
            <method name="BigReal" type="constructor" line="136">
                <params>
                    <param name="val" type="double"/>
                </params>
            </method>
            <javadoc line="140">
                Build an instance from a double.                
                <param>
                    val value of the instance                    
                </param>
                <param>
                    mc context to use                    
                </param>
            </javadoc>
            <method name="BigReal" type="constructor" line="144">
                <params>
                    <param name="val" type="double"/>
                    <param name="mc" type="MathContext"/>
                </params>
            </method>
            <javadoc line="148">
                Build an instance from an int.                
                <param>
                    val value of the instance                    
                </param>
            </javadoc>
            <method name="BigReal" type="constructor" line="151">
                <params>
                    <param name="val" type="int"/>
                </params>
            </method>
            <javadoc line="155">
                Build an instance from an int.                
                <param>
                    val value of the instance                    
                </param>
                <param>
                    mc context to use                    
                </param>
            </javadoc>
            <method name="BigReal" type="constructor" line="159">
                <params>
                    <param name="val" type="int"/>
                    <param name="mc" type="MathContext"/>
                </params>
            </method>
            <javadoc line="163">
                Build an instance from a long.                
                <param>
                    val value of the instance                    
                </param>
            </javadoc>
            <method name="BigReal" type="constructor" line="166">
                <params>
                    <param name="val" type="long"/>
                </params>
            </method>
            <javadoc line="170">
                Build an instance from a long.                
                <param>
                    val value of the instance                    
                </param>
                <param>
                    mc context to use                    
                </param>
            </javadoc>
            <method name="BigReal" type="constructor" line="174">
                <params>
                    <param name="val" type="long"/>
                    <param name="mc" type="MathContext"/>
                </params>
            </method>
            <javadoc line="178">
                Build an instance from a String representation.                
                <param>
                    val character representation of the value                    
                </param>
            </javadoc>
            <method name="BigReal" type="constructor" line="181">
                <params>
                    <param name="val" type="String"/>
                </params>
            </method>
            <javadoc line="185">
                Build an instance from a String representation.                
                <param>
                    val character representation of the value                    
                </param>
                <param>
                    mc context to use                    
                </param>
            </javadoc>
            <method name="BigReal" type="constructor" line="189">
                <params>
                    <param name="val" type="String"/>
                    <param name="mc" type="MathContext"/>
                </params>
            </method>
            <javadoc line="193">
                Gets the rounding mode for division operations
                  The default is {@code RoundingMode.HALF_UP}                
                <return>
                    the rounding mode.                    
                </return>
                <since>
                    2.1                    
                </since>
            </javadoc>
            <method name="getRoundingMode" type="RoundingMode" line="199"/>
            <javadoc line="203">
                Sets the rounding mode for decimal divisions.                
                <param>
                    roundingMode rounding mode for decimal divisions                    
                </param>
                <since>
                    2.1                    
                </since>
            </javadoc>
            <method name="setRoundingMode" type="void" line="208">
                <params>
                    <param name="roundingMode" type="RoundingMode"/>
                </params>
            </method>
            <javadoc line="212">
                Sets the scale for division operations.
                  The default is 64                
                <return>
                    the scale                    
                </return>
                <since>
                    2.1                    
                </since>
            </javadoc>
            <method name="getScale" type="int" line="218"/>
            <javadoc line="222">
                Sets the scale for division operations.                
                <param>
                    scale scale for division operations                    
                </param>
                <since>
                    2.1                    
                </since>
            </javadoc>
            <method name="setScale" type="void" line="227">
                <params>
                    <param name="scale" type="int"/>
                </params>
            </method>
            <javadoc line="231">
                {@inheritDoc}                
            </javadoc>
            <method name="add" type="BigReal" line="232">
                <params>
                    <param name="a" type="BigReal"/>
                </params>
            </method>
            <javadoc line="236">
                {@inheritDoc}                
            </javadoc>
            <method name="subtract" type="BigReal" line="237">
                <params>
                    <param name="a" type="BigReal"/>
                </params>
            </method>
            <javadoc line="241">
                {@inheritDoc}                
            </javadoc>
            <method name="negate" type="BigReal" line="242"/>
            <javadoc line="246">
                {@inheritDoc}                
                <throws>
                    MathArithmeticException if {@code a} is zero                    
                </throws>
            </javadoc>
            <method name="divide" type="BigReal" line="251">
                <params>
                    <param name="a" type="BigReal"/>
                </params>
                <comment line="255">
                    Division by zero has occured                    
                </comment>
                <scope line="252"/>
                <scope line="254"/>
            </method>
            <javadoc line="260">
                {@inheritDoc}                
                <throws>
                    MathArithmeticException if {@code this} is zero                    
                </throws>
            </javadoc>
            <method name="reciprocal" type="BigReal" line="265">
                <comment line="269">
                    Division by zero has occured                    
                </comment>
                <scope line="266"/>
                <scope line="268"/>
            </method>
            <javadoc line="274">
                {@inheritDoc}                
            </javadoc>
            <method name="multiply" type="BigReal" line="275">
                <params>
                    <param name="a" type="BigReal"/>
                </params>
            </method>
            <javadoc line="279">
                {@inheritDoc}                
            </javadoc>
            <method name="multiply" type="BigReal" line="280">
                <params>
                    <param name="n" type="int"/>
                </params>
            </method>
            <javadoc line="284">
                {@inheritDoc}                
            </javadoc>
            <method name="compareTo" type="int" line="285">
                <params>
                    <param name="a" type="BigReal"/>
                </params>
            </method>
            <javadoc line="289">
                Get the double value corresponding to the instance.                
                <return>
                    double value corresponding to the instance                    
                </return>
            </javadoc>
            <method name="doubleValue" type="double" line="292"/>
            <javadoc line="296">
                Get the BigDecimal value corresponding to the instance.                
                <return>
                    BigDecimal value corresponding to the instance                    
                </return>
            </javadoc>
            <method name="bigDecimalValue" type="BigDecimal" line="299"/>
            <javadoc line="303">
                {@inheritDoc}                
            </javadoc>
            <method name="equals" type="boolean" line="305">
                <params>
                    <param name="other" type="Object"/>
                </params>
                <scope line="306"/>
                <scope line="310"/>
            </method>
            <javadoc line="316">
                {@inheritDoc}                
            </javadoc>
            <method name="hashCode" type="int" line="318"/>
            <javadoc line="322">
                {@inheritDoc}                
            </javadoc>
            <method name="getField" type="Field<BigReal>" line="323"/>
        </class>
    </source>