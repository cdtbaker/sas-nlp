<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.fraction">
        <import package="java.math.BigInteger"/>
        <import package="java.text.FieldPosition"/>
        <import package="java.text.NumberFormat"/>
        <import package="java.text.ParsePosition"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <class name="ProperBigFractionFormat" line="8">
            <extends class="BigFractionFormat"/>
            <javadoc line="8">
                Formats a BigFraction number in proper format.  The number format for each of
                  the whole number, numerator and, denominator can be configured.
                  &lt;p&gt;
                  Minus signs are only allowed in the whole number part - i.e.,
                  &quot;-3 1/2&quot; is legitimate and denotes -7/2, but &quot;-3 -1/2&quot; is invalid and
                  will result in a &lt;code&gt;ParseException&lt;/code&gt;.&lt;/p&gt;                
                <since>
                    1.1                    
                </since>
                <version>
                    $Id: ProperBigFractionFormat.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="19"/>
            <javadoc line="19">
                Serializable version identifier                
            </javadoc>
            <declaration name="wholeFormat" type="NumberFormat" line="23"/>
            <javadoc line="23">
                The format used for the whole number.                
            </javadoc>
            <javadoc line="27">
                Create a proper formatting instance with the default number format for
                  the whole, numerator, and denominator.                
            </javadoc>
            <method name="ProperBigFractionFormat" type="constructor" line="31"/>
            <javadoc line="34">
                Create a proper formatting instance with a custom number format for the
                  whole, numerator, and denominator.                
                <param>
                    format the custom format for the whole, numerator, and
                      denominator.                    
                </param>
            </javadoc>
            <method name="ProperBigFractionFormat" type="constructor" line="40">
                <params>
                    <param name="format" type="NumberFormat"/>
                </params>
            </method>
            <javadoc line="43">
                Create a proper formatting instance with a custom number format for each
                  of the whole, numerator, and denominator.                
                <param>
                    wholeFormat the custom format for the whole.                    
                </param>
                <param>
                    numeratorFormat the custom format for the numerator.                    
                </param>
                <param>
                    denominatorFormat the custom format for the denominator.                    
                </param>
            </javadoc>
            <method name="ProperBigFractionFormat" type="constructor" line="50">
                <params>
                    <param name="wholeFormat" type="NumberFormat"/>
                    <param name="numeratorFormat" type="NumberFormat"/>
                    <param name="denominatorFormat" type="NumberFormat"/>
                </params>
            </method>
            <javadoc line="54">
                Formats a {@link BigFraction} object to produce a string.  The BigFraction
                  is output in proper format.                
                <param>
                    fraction the object to format.                    
                </param>
                <param>
                    toAppendTo where the text is to be appended                    
                </param>
                <param>
                    pos On input: an alignment field, if desired. On output: the
                      offsets of the alignment field                    
                </param>
                <return>
                    the value passed in as toAppendTo.                    
                </return>
            </javadoc>
            <method name="format" type="StringBuffer" line="63">
                <params>
                    <param name="fraction" type="BigFraction"/>
                    <param name="toAppendTo" type="StringBuffer"/>
                    <param name="pos" type="FieldPosition"/>
                </params>
                <declaration name="num" type="BigInteger" line="66"/>
                <declaration name="den" type="BigInteger" line="67"/>
                <declaration name="whole" type="BigInteger" line="68"/>
                <scope line="70">
                    <scope line="73"/>
                </scope>
            </method>
            <javadoc line="82">
                Access the whole format.                
                <return>
                    the whole format.                    
                </return>
            </javadoc>
            <method name="getWholeFormat" type="NumberFormat" line="86"/>
            <javadoc line="89">
                Parses a string to produce a {@link BigFraction} object.  This method
                  expects the string to be formatted as a proper BigFraction.
                  &lt;p&gt;
                  Minus signs are only allowed in the whole number part - i.e.,
                  &quot;-3 1/2&quot; is legitimate and denotes -7/2, but &quot;-3 -1/2&quot; is invalid and
                  will result in a &lt;code&gt;ParseException&lt;/code&gt;.&lt;/p&gt;                
                <param>
                    source the string to parse                    
                </param>
                <param>
                    pos input/ouput parsing parameter.                    
                </param>
                <return>
                    the parsed {@link BigFraction} object.                    
                </return>
            </javadoc>
            <method name="parse" type="BigFraction" line="100">
                <params>
                    <param name="source" type="String"/>
                    <param name="pos" type="ParsePosition"/>
                </params>
                <declaration name="ret" type="BigFraction" line="101"/>
                <scope line="102"/>
                <declaration name="initialIndex" type="int" line="105"/>
                <declaration name="whole" type="BigInteger" line="107"/>
                <scope line="108"/>
                <declaration name="num" type="BigInteger" line="113"/>
                <scope line="114"/>
                <scope line="118"/>
                <declaration name="startIndex" type="int" line="122"/>
                <declaration name="c" type="char" line="123"/>
                <declaration name="den" type="BigInteger" line="135"/>
                <scope line="136"/>
                <scope line="140"/>
                <declaration name="wholeIsNeg" type="boolean" line="144"/>
                <scope line="145"/>
                <scope line="149"/>
            </method>
            <javadoc line="154">
                Modify the whole format.                
                <param>
                    format The new whole format value.                    
                </param>
                <throws>
                    NullArgumentException if {@code format} is {@code null}.                    
                </throws>
            </javadoc>
            <method name="setWholeFormat" type="void" line="159">
                <params>
                    <param name="format" type="NumberFormat"/>
                </params>
                <scope line="160"/>
            </method>
        </class>
    </source>