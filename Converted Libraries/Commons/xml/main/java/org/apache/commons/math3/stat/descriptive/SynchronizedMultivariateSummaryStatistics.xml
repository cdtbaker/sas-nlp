<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.descriptive">
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalStateException"/>
        <import package="org.apache.commons.math3.linear.RealMatrix"/>
        <class name="SynchronizedMultivariateSummaryStatistics" line="5">
            <extends class="MultivariateSummaryStatistics"/>
            <javadoc line="5">
                Implementation of{@link org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics} that
                  is safe to use in a multithreaded environment.  Multiple threads can safely
                  operate on a single instance without causing runtime exceptions due to race
                  conditions.  In effect, this implementation makes modification and access
                  methods atomic operations for a single instance.  That is to say, as one
                  thread is computing a statistic from the instance, no other thread can modify
                  the instance nor compute another statistic.                
                <since>
                    1.2                    
                </since>
                <version>
                    $Id: SynchronizedMultivariateSummaryStatistics.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="17"/>
            <javadoc line="17">
                Serialization UID                
            </javadoc>
            <javadoc line="21">
                Construct a SynchronizedMultivariateSummaryStatistics instance                
                <param>
                    k dimension of the data                    
                </param>
                <param>
                    isCovarianceBiasCorrected if true, the unbiased sample
                      covariance is computed, otherwise the biased population covariance
                      is computed                    
                </param>
            </javadoc>
            <method name="SynchronizedMultivariateSummaryStatistics" type="constructor" line="28">
                <params>
                    <param name="k" type="int"/>
                    <param name="isCovarianceBiasCorrected" type="boolean"/>
                </params>
            </method>
            <javadoc line="31">
                {@inheritDoc}                
            </javadoc>
            <method name="addValue" type="void" line="34">
                <params>
                    <param name="value" type="double[]"/>
                </params>
            </method>
            <javadoc line="37">
                {@inheritDoc}                
            </javadoc>
            <method name="getDimension" type="int" line="40"/>
            <javadoc line="43">
                {@inheritDoc}                
            </javadoc>
            <method name="getN" type="long" line="46"/>
            <javadoc line="49">
                {@inheritDoc}                
            </javadoc>
            <method name="getSum" type="double[]" line="52"/>
            <javadoc line="55">
                {@inheritDoc}                
            </javadoc>
            <method name="getSumSq" type="double[]" line="58"/>
            <javadoc line="61">
                {@inheritDoc}                
            </javadoc>
            <method name="getSumLog" type="double[]" line="64"/>
            <javadoc line="67">
                {@inheritDoc}                
            </javadoc>
            <method name="getMean" type="double[]" line="70"/>
            <javadoc line="73">
                {@inheritDoc}                
            </javadoc>
            <method name="getStandardDeviation" type="double[]" line="76"/>
            <javadoc line="79">
                {@inheritDoc}                
            </javadoc>
            <method name="getCovariance" type="RealMatrix" line="82"/>
            <javadoc line="85">
                {@inheritDoc}                
            </javadoc>
            <method name="getMax" type="double[]" line="88"/>
            <javadoc line="91">
                {@inheritDoc}                
            </javadoc>
            <method name="getMin" type="double[]" line="94"/>
            <javadoc line="97">
                {@inheritDoc}                
            </javadoc>
            <method name="getGeometricMean" type="double[]" line="100"/>
            <javadoc line="103">
                {@inheritDoc}                
            </javadoc>
            <method name="toString" type="String" line="106"/>
            <javadoc line="109">
                {@inheritDoc}                
            </javadoc>
            <method name="clear" type="void" line="112"/>
            <javadoc line="115">
                {@inheritDoc}                
            </javadoc>
            <method name="equals" type="boolean" line="118">
                <params>
                    <param name="object" type="Object"/>
                </params>
            </method>
            <javadoc line="121">
                {@inheritDoc}                
            </javadoc>
            <method name="hashCode" type="int" line="124"/>
            <javadoc line="127">
                {@inheritDoc}                
            </javadoc>
            <method name="getSumImpl" type="StorelessUnivariateStatistic[]" line="130"/>
            <javadoc line="133">
                {@inheritDoc}                
            </javadoc>
            <method name="setSumImpl" type="void" line="136">
                <params>
                    <param name="sumImpl" type="StorelessUnivariateStatistic[]"/>
                </params>
            </method>
            <javadoc line="139">
                {@inheritDoc}                
            </javadoc>
            <method name="getSumsqImpl" type="StorelessUnivariateStatistic[]" line="142"/>
            <javadoc line="145">
                {@inheritDoc}                
            </javadoc>
            <method name="setSumsqImpl" type="void" line="148">
                <params>
                    <param name="sumsqImpl" type="StorelessUnivariateStatistic[]"/>
                </params>
            </method>
            <javadoc line="151">
                {@inheritDoc}                
            </javadoc>
            <method name="getMinImpl" type="StorelessUnivariateStatistic[]" line="154"/>
            <javadoc line="157">
                {@inheritDoc}                
            </javadoc>
            <method name="setMinImpl" type="void" line="160">
                <params>
                    <param name="minImpl" type="StorelessUnivariateStatistic[]"/>
                </params>
            </method>
            <javadoc line="163">
                {@inheritDoc}                
            </javadoc>
            <method name="getMaxImpl" type="StorelessUnivariateStatistic[]" line="166"/>
            <javadoc line="169">
                {@inheritDoc}                
            </javadoc>
            <method name="setMaxImpl" type="void" line="172">
                <params>
                    <param name="maxImpl" type="StorelessUnivariateStatistic[]"/>
                </params>
            </method>
            <javadoc line="175">
                {@inheritDoc}                
            </javadoc>
            <method name="getSumLogImpl" type="StorelessUnivariateStatistic[]" line="178"/>
            <javadoc line="181">
                {@inheritDoc}                
            </javadoc>
            <method name="setSumLogImpl" type="void" line="184">
                <params>
                    <param name="sumLogImpl" type="StorelessUnivariateStatistic[]"/>
                </params>
            </method>
            <javadoc line="187">
                {@inheritDoc}                
            </javadoc>
            <method name="getGeoMeanImpl" type="StorelessUnivariateStatistic[]" line="190"/>
            <javadoc line="193">
                {@inheritDoc}                
            </javadoc>
            <method name="setGeoMeanImpl" type="void" line="196">
                <params>
                    <param name="geoMeanImpl" type="StorelessUnivariateStatistic[]"/>
                </params>
            </method>
            <javadoc line="199">
                {@inheritDoc}                
            </javadoc>
            <method name="getMeanImpl" type="StorelessUnivariateStatistic[]" line="202"/>
            <javadoc line="205">
                {@inheritDoc}                
            </javadoc>
            <method name="setMeanImpl" type="void" line="208">
                <params>
                    <param name="meanImpl" type="StorelessUnivariateStatistic[]"/>
                </params>
            </method>
        </class>
    </source>