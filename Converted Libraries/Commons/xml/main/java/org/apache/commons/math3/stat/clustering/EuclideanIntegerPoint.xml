<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.clustering">
        <import package="java.io.Serializable"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.Collection"/>
        <import package="org.apache.commons.math3.util.MathArrays"/>
        <class name="EuclideanIntegerPoint" line="6">
            <implements interface="Clusterable">
                <type_params>
                    <type_param name="EuclideanIntegerPoint"/>
                </type_params>
            </implements>
            <implements interface="Serializable"/>
            <javadoc line="6">
                A simple implementation of {@link Clusterable} for points with integer coordinates.                
                <version>
                    $Id: EuclideanIntegerPoint.java 1461871 2013-03-27 22:01:25Z tn $                    
                </version>
                <since>
                    2.0                    
                </since>
                <deprecated>
                    As of 3.2 (to be removed in 4.0),
                      use {@link org.apache.commons.math3.ml.clustering.DoublePoint} instead                    
                </deprecated>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="14"/>
            <javadoc line="14">
                Serializable version identifier.                
            </javadoc>
            <declaration name="point" type="int[]" line="18"/>
            <javadoc line="18">
                Point coordinates.                
            </javadoc>
            <javadoc line="22">
                Build an instance wrapping an integer array.
                  &lt;p&gt;The wrapped array is referenced, it is &lt;em&gt;not&lt;/em&gt; copied.&lt;/p&gt;                
                <param>
                    point the n-dimensional point in integer space                    
                </param>
            </javadoc>
            <method name="EuclideanIntegerPoint" type="constructor" line="27">
                <params>
                    <param name="point" type="int[]"/>
                </params>
            </method>
            <javadoc line="30">
                Get the n-dimensional point in integer space.                
                <return>
                    a reference (not a copy!) to the wrapped array                    
                </return>
            </javadoc>
            <method name="getPoint" type="int[]" line="34"/>
            <javadoc line="37">
                {@inheritDoc}                
            </javadoc>
            <method name="distanceFrom" type="double" line="40">
                <params>
                    <param name="p" type="EuclideanIntegerPoint"/>
                </params>
            </method>
            <javadoc line="43">
                {@inheritDoc}                
            </javadoc>
            <method name="centroidOf" type="EuclideanIntegerPoint" line="46">
                <params>
                    <param name="points" type="Collection<EuclideanIntegerPoint>"/>
                </params>
                <declaration name="centroid" type="int[]" line="47"/>
                <scope line="48">
                    <scope line="49"/>
                </scope>
                <scope line="53"/>
            </method>
            <javadoc line="58">
                {@inheritDoc}                
            </javadoc>
            <method name="equals" type="boolean" line="61">
                <params>
                    <param name="other" type="Object"/>
                </params>
                <scope line="62"/>
            </method>
            <javadoc line="67">
                {@inheritDoc}                
            </javadoc>
            <method name="hashCode" type="int" line="70"/>
            <javadoc line="73">
                {@inheritDoc}                
                <since>
                    2.1                    
                </since>
            </javadoc>
            <method name="toString" type="String" line="77"/>
        </class>
    </source>