<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.euclidean.twod.hull">
        <import package="java.util.Collection"/>
        <import package="org.apache.commons.math3.exception.ConvergenceException"/>
        <import package="org.apache.commons.math3.exception.MathIllegalArgumentException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.geometry.euclidean.twod.Vector2D"/>
        <import package="org.apache.commons.math3.util.MathUtils"/>
        <class name="AbstractConvexHullGenerator2D" line="27">
            <implements interface="ConvexHullGenerator2D"/>
            <javadoc line="27">
                Abstract base class for convex hull generators in the two-dimensional euclidean space.                
                <since>
                    3.3                    
                </since>
                <version>
                    $Id: AbstractConvexHullGenerator2D.java 1568752 2014-02-16 12:19:51Z tn $                    
                </version>
            </javadoc>
            <declaration name="DEFAULT_TOLERANCE" type="double" line="35"/>
            <javadoc line="35">
                Default value for tolerance.                
            </javadoc>
            <declaration name="tolerance" type="double" line="38"/>
            <javadoc line="38">
                Tolerance below which points are considered identical.                
            </javadoc>
            <declaration name="includeCollinearPoints" type="boolean" line="41"/>
            <javadoc line="41">
                Indicates if collinear points on the hull shall be present in the output.
                  If {@code false}, only the extreme points are added to the hull.                
            </javadoc>
            <javadoc line="47">
                Simple constructor.
                  &lt;p&gt;
                  The default tolerance (1e-10) will be used to determine identical points.                
                <param>
                    includeCollinearPoints indicates if collinear points on the hull shall be
                      added as hull vertices                    
                </param>
            </javadoc>
            <method name="AbstractConvexHullGenerator2D" type="constructor" line="55">
                <params>
                    <param name="includeCollinearPoints" type="boolean"/>
                </params>
            </method>
            <javadoc line="59">
                Simple constructor.                
                <param>
                    includeCollinearPoints indicates if collinear points on the hull shall be
                      added as hull vertices                    
                </param>
                <param>
                    tolerance tolerance below which points are considered identical                    
                </param>
            </javadoc>
            <method name="AbstractConvexHullGenerator2D" type="constructor" line="66">
                <params>
                    <param name="includeCollinearPoints" type="boolean"/>
                    <param name="tolerance" type="double"/>
                </params>
            </method>
            <javadoc line="71">
                Get the tolerance below which points are considered identical.                
                <return>
                    the tolerance below which points are considered identical                    
                </return>
            </javadoc>
            <method name="getTolerance" type="double" line="75"/>
            <javadoc line="79">
                Returns if collinear points on the hull will be added as hull vertices.                
                <return>
                    {@code true} if collinear points are added as hull vertices, or {@code false}if only extreme points are present.                    
                </return>
            </javadoc>
            <method name="isIncludeCollinearPoints" type="boolean" line="84"/>
            <javadoc line="88">
                {@inheritDoc}                
            </javadoc>
            <method name="generate" type="ConvexHull2D" line="90">
                <params>
                    <param name="points" type="Collection&lt;Vector2D&gt;"/>
                </params>
                <comment line="92">
                    check for null points                    
                </comment>
                <comment line="106">
                    the hull vertices may not form a convex hull if the tolerance value is to large                    
                </comment>
                <declaration name="hullVertices" type="Collection&amp;lt;Vector2D&amp;gt;" line="94"/>
                <scope line="95"/>
                <scope line="97"/>
                <scope line="101"/>
                <scope line="104"/>
            </method>
            <method name="findHullVertices" type="Collection&lt;Vector2D&gt;" line="110"/>
            <javadoc line="110">
                Find the convex hull vertices from the set of input points.                
                <param>
                    points the set of input points                    
                </param>
                <return>
                    the convex hull vertices in CCW winding                    
                </return>
            </javadoc>
        </class>
    </source>