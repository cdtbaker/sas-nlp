<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.partitioning">
        <import package="org.apache.commons.math3.geometry.Point"/>
        <import package="org.apache.commons.math3.geometry.Space"/>
        <class name="BoundaryProjection" line="22">
            <type_params>
                <type_param name="S"/>
            </type_params>
            <javadoc line="22">
                Class holding the result of point projection on region boundary.
                  &lt;p&gt;This class is a simple placeholder, it does not provide any
                  processing methods.&lt;/p&gt;
                  &lt;p&gt;Instances of this class are guaranteed to be immutable&lt;/p&gt;                
                <param>
                    &lt;S&gt;
                       Type of the space.                    
                </param>
                <version>
                    $Id: BoundaryProjection.java 1560335 2014-01-22 12:39:06Z luc $                    
                </version>
                <since>
                    3.3                    
                </since>
                <see>
                    AbstractRegion#projectToBoundary(Point)                    
                </see>
            </javadoc>
            <declaration name="original" type="Point&amp;lt;S&amp;gt;" line="33"/>
            <javadoc line="33">
                Original point.                
            </javadoc>
            <declaration name="projected" type="Point&amp;lt;S&amp;gt;" line="36"/>
            <javadoc line="36">
                Projected point.                
            </javadoc>
            <declaration name="offset" type="double" line="39"/>
            <javadoc line="39">
                Offset of the point with respect to the boundary it is projected on.                
            </javadoc>
            <javadoc line="42">
                Constructor from raw elements.                
                <param>
                    original original point                    
                </param>
                <param>
                    projected projected point                    
                </param>
                <param>
                    offset offset of the point with respect to the boundary it is projected on                    
                </param>
            </javadoc>
            <method name="BoundaryProjection" type="constructor" line="47">
                <params>
                    <param name="original" type="Point&lt;S&gt;"/>
                    <param name="projected" type="Point&lt;S&gt;"/>
                    <param name="offset" type="double"/>
                </params>
            </method>
            <javadoc line="53">
                Get the original point.                
                <return>
                    original point                    
                </return>
            </javadoc>
            <method name="getOriginal" type="Point&lt;S&gt;" line="56"/>
            <javadoc line="60">
                Projected point.                
                <return>
                    projected point, or null if there are no boundary                    
                </return>
            </javadoc>
            <method name="getProjected" type="Point&lt;S&gt;" line="63"/>
            <javadoc line="67">
                Offset of the point with respect to the boundary it is projected on.
                  &lt;p&gt;
                  The offset with respect to the boundary is negative if the {@link #getOriginal() original point} is inside the region, and positive otherwise.
                  &lt;/p&gt;
                  &lt;p&gt;
                  If there are no boundary, the value is set to either {@codeDouble.POSITIVE_INFINITY} if the region is empty (i.e. all points are
                  outside of the region) or {@code Double.NEGATIVE_INFINITY} if the region
                  covers the whole space (i.e. all points are inside of the region).
                  &lt;/p&gt;                
                <return>
                    offset of the point with respect to the boundary it is projected on                    
                </return>
            </javadoc>
            <method name="getOffset" type="double" line="80"/>
        </class>
    </source>