<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.spherical.twod">
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <class name="Vertex" line="22">
            <javadoc line="22">
                Spherical polygons boundary vertex.                
                <see>
                    SphericalPolygonsSet#getBoundaryLoops()                    
                </see>
                <see>
                    Edge                    
                </see>
                <version>
                    $Id: Vertex.java 1561506 2014-01-26 15:31:18Z luc $                    
                </version>
                <since>
                    3.3                    
                </since>
            </javadoc>
            <declaration name="location" type="S2Point" line="30"/>
            <javadoc line="30">
                Vertex location.                
            </javadoc>
            <declaration name="incoming" type="Edge" line="33"/>
            <javadoc line="33">
                Incoming edge.                
            </javadoc>
            <declaration name="outgoing" type="Edge" line="36"/>
            <javadoc line="36">
                Outgoing edge.                
            </javadoc>
            <declaration name="circles" type="List&amp;lt;Circle&amp;gt;" line="39"/>
            <javadoc line="39">
                Circles bound with this vertex.                
            </javadoc>
            <javadoc line="42">
                Build a non-processed vertex not owned by any node yet.                
                <param>
                    location vertex location                    
                </param>
            </javadoc>
            <method name="Vertex" type="constructor" line="45">
                <params>
                    <param name="location" type="S2Point"/>
                </params>
            </method>
            <javadoc line="52">
                Get Vertex location.                
                <return>
                    vertex location                    
                </return>
            </javadoc>
            <method name="getLocation" type="S2Point" line="55"/>
            <javadoc line="59">
                Bind a circle considered to contain this vertex.                
                <param>
                    circle circle to bind with this vertex                    
                </param>
            </javadoc>
            <method name="bindWith" type="void" line="62">
                <params>
                    <param name="circle" type="Circle"/>
                </params>
            </method>
            <javadoc line="66">
                Get the common circle bound with both the instance and another vertex, if any.
                  &lt;p&gt;
                  When two vertices are both bound to the same circle, this means they are
                  already handled by node associated with this circle, so there is no need
                  to create a cut hyperplane for them.
                  &lt;/p&gt;                
                <param>
                    vertex other vertex to check instance against                    
                </param>
                <return>
                    circle bound with both the instance and another vertex, or null if the
                      two vertices do not share a circle yet                    
                </return>
            </javadoc>
            <method name="sharedCircleWith" type="Circle" line="76">
                <params>
                    <param name="vertex" type="Vertex"/>
                </params>
                <scope line="77">
                    <scope line="78">
                        <scope line="79"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="87">
                Set incoming edge.
                  &lt;p&gt;
                  The circle supporting the incoming edge is automatically bound
                  with the instance.
                  &lt;/p&gt;                
                <param>
                    incoming incoming edge                    
                </param>
            </javadoc>
            <method name="setIncoming" type="void" line="94">
                <params>
                    <param name="incoming" type="Edge"/>
                </params>
            </method>
            <javadoc line="99">
                Get incoming edge.                
                <return>
                    incoming edge                    
                </return>
            </javadoc>
            <method name="getIncoming" type="Edge" line="102"/>
            <javadoc line="106">
                Set outgoing edge.
                  &lt;p&gt;
                  The circle supporting the outgoing edge is automatically bound
                  with the instance.
                  &lt;/p&gt;                
                <param>
                    outgoing outgoing edge                    
                </param>
            </javadoc>
            <method name="setOutgoing" type="void" line="113">
                <params>
                    <param name="outgoing" type="Edge"/>
                </params>
            </method>
            <javadoc line="118">
                Get outgoing edge.                
                <return>
                    outgoing edge                    
                </return>
            </javadoc>
            <method name="getOutgoing" type="Edge" line="121"/>
        </class>
    </source>