<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.spherical.twod">
        <import package="java.io.Serializable"/>
        <import package="org.apache.commons.math3.geometry.Space"/>
        <import package="org.apache.commons.math3.geometry.spherical.oned.Sphere1D"/>
        <class name="Sphere2D" line="25">
            <comment line="64">
                CHECKSTYLE: stop HideUtilityClassConstructor                
            </comment>
            <comment line="72">
                CHECKSTYLE: resume HideUtilityClassConstructor                
            </comment>
            <implements interface="Serializable"/>
            <implements interface="Space"/>
            <javadoc line="25">
                This class implements a two-dimensional sphere (i.e. the regular sphere).
                  &lt;p&gt;
                  We use here the topologists definition of the 2-sphere (see
                  &lt;a href=&quot;http://mathworld.wolfram.com/Sphere.html&quot;&gt;Sphere&lt;/a&gt; on
                  MathWorld), i.e. the 2-sphere is the two-dimensional surface
                  defined in 3D as x&lt;sup&gt;2&lt;/sup&gt;+y&lt;sup&gt;2&lt;/sup&gt;+z&lt;sup&gt;2&lt;/sup&gt;=1.
                  &lt;/p&gt;                
                <version>
                    $Id: Sphere2D.java 1554648 2014-01-01 17:24:37Z luc $                    
                </version>
                <since>
                    3.3                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="38"/>
            <javadoc line="38">
                Serializable version identifier.                
            </javadoc>
            <javadoc line="41">
                Private constructor for the singleton.                
            </javadoc>
            <method name="Sphere2D" type="constructor" line="43"/>
            <javadoc line="46">
                Get the unique instance.                
                <return>
                    the unique instance                    
                </return>
            </javadoc>
            <method name="getInstance" type="Sphere2D" line="49"/>
            <javadoc line="53">
                {@inheritDoc}                
            </javadoc>
            <method name="getDimension" type="int" line="54"/>
            <javadoc line="58">
                {@inheritDoc}                
            </javadoc>
            <method name="getSubSpace" type="Sphere1D" line="59"/>
            <class name="LazyHolder" line="64">
                <javadoc line="64">
                    Holder for the instance.
                      &lt;p&gt;We use here the Initialization On Demand Holder Idiom.&lt;/p&gt;                    
                </javadoc>
                <declaration name="INSTANCE" type="Sphere2D" line="68"/>
                <javadoc line="68">
                    Cached field instance.                    
                </javadoc>
            </class>
            <javadoc line="73">
                Handle deserialization of the singleton.                
                <return>
                    the singleton instance                    
                </return>
            </javadoc>
            <method name="readResolve" type="Object" line="76">
                <comment line="78">
                    return the singleton instance                    
                </comment>
            </method>
        </class>
    </source>