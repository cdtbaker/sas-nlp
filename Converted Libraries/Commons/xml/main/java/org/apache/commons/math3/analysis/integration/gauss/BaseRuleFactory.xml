<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.analysis.integration.gauss">
        <import package="java.util.Map"/>
        <import package="java.util.TreeMap"/>
        <import package="org.apache.commons.math3.util.Pair"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <class name="BaseRuleFactory" line="26">
            <type_params>
                <type_param name="T"/>
            </type_params>
            <javadoc line="26">
                Base class for rules that determines the integration nodes and their
                  weights.
                  Subclasses must implement the {@link #computeRule(int) computeRule} method.                
                <param>
                    <T>
                       Type of the number used to represent the points and weights of
                      the quadrature rules.                    
                </param>
                <since>
                    3.1                    
                </since>
                <version>
                    $Id: BaseRuleFactory.java 1455194 2013-03-11 15:45:54Z luc $                    
                </version>
            </javadoc>
            <declaration name="pointsAndWeights" type="Map&lt;Integer,Pair&lt;T[],T[]&gt;&gt;" line="38"/>
            <javadoc line="38">
                List of points and weights, indexed by the order of the rule.                
            </javadoc>
            <declaration name="pointsAndWeightsDouble" type="Map&lt;Integer,Pair&lt;double[],double[]&gt;&gt;" line="41"/>
            <javadoc line="41">
                Cache for double-precision rules.                
            </javadoc>
            <javadoc line="45">
                Gets a copy of the quadrature rule with the given number of integration
                  points.                
                <param>
                    numberOfPoints Number of integration points.                    
                </param>
                <return>
                    a copy of the integration rule.                    
                </return>
                <throws>
                    NotStrictlyPositiveException if {@code numberOfPoints < 1}.                    
                </throws>
                <throws>
                    DimensionMismatchException if the elements of the rule pair do not
                      have the same length.                    
                </throws>
            </javadoc>
            <method name="getRule" type="Pair<double[],double[]>" line="56">
                <params>
                    <param name="numberOfPoints" type="int"/>
                </params>
                <comment line="64">
                    Try to obtain the rule from the cache.                    
                </comment>
                <comment line="68">
                    Rule not computed yet.                    
                </comment>
                <comment line="70">
                    Compute the rule.                    
                </comment>
                <comment line="74">
                    Cache it.                    
                </comment>
                <comment line="78">
                    Return a copy.                    
                </comment>
                <scope line="58"/>
                <declaration name="cached" type="Pair&lt;double[],double[]&gt;" line="64"/>
                <scope line="66">
                    <declaration name="rule" type="Pair&lt;T[],T[]&gt;" line="70"/>
                </scope>
            </method>
            <javadoc line="82">
                Gets a rule.
                  Synchronization ensures that rules will be computed and added to the
                  cache at most once.
                  The returned rule is a reference into the cache.                
                <param>
                    numberOfPoints Order of the rule to be retrieved.                    
                </param>
                <return>
                    the points and weights corresponding to the given order.                    
                </return>
                <throws>
                    DimensionMismatchException if the elements of the rule pair do not
                      have the same length.                    
                </throws>
            </javadoc>
            <method name="getRuleInternal" type="Pair<T[],T[]>" line="94">
                <params>
                    <param name="numberOfPoints" type="int"/>
                </params>
                <comment line="99">
                    The rule should be available now.                    
                </comment>
                <declaration name="rule" type="Pair&lt;T[],T[]&gt;" line="95"/>
                <scope line="96"/>
            </method>
            <javadoc line="104">
                Stores a rule.                
                <param>
                    rule Rule to be stored.                    
                </param>
                <throws>
                    DimensionMismatchException if the elements of the pair do not
                      have the same length.                    
                </throws>
            </javadoc>
            <method name="addRule" type="void" line="111">
                <params>
                    <param name="rule" type="Pair<T[],T[]>"/>
                </params>
                <scope line="112"/>
            </method>
            <method name="computeRule" type="Pair<T[],T[]>" line="120"/>
            <javadoc line="120">
                Computes the rule for the given order.                
                <param>
                    numberOfPoints Order of the rule to be computed.                    
                </param>
                <return>
                    the computed rule.                    
                </return>
                <throws>
                    DimensionMismatchException if the elements of the pair do not
                      have the same length.                    
                </throws>
            </javadoc>
            <javadoc line="131">
                Converts the from the actual {@code Number} type to {@code double}                
                <param>
                    <T>
                       Type of the number used to represent the points and
                      weights of the quadrature rules.                    
                </param>
                <param>
                    rule Points and weights.                    
                </param>
                <return>
                    points and weights as {@code double}s.                    
                </return>
            </javadoc>
            <method name="convertToDouble" type="Pair<double[],double[]>" line="139">
                <params>
                    <param name="rule" type="Pair<T[],T[]>"/>
                </params>
                <declaration name="pT" type="T[]" line="140"/>
                <declaration name="wT" type="T[]" line="141"/>
                <declaration name="len" type="int" line="143"/>
                <declaration name="pD" type="double[]" line="144"/>
                <declaration name="wD" type="double[]" line="145"/>
                <scope line="147"/>
            </method>
        </class>
    </source>