<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.inference">
        <import package="java.util.Collection"/>
        <import package="org.apache.commons.math3.distribution.RealDistribution"/>
        <import package="org.apache.commons.math3.exception.ConvergenceException"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.InsufficientDataException"/>
        <import package="org.apache.commons.math3.exception.MaxCountExceededException"/>
        <import package="org.apache.commons.math3.exception.NoDataException"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.exception.ZeroException"/>
        <import package="org.apache.commons.math3.stat.descriptive.StatisticalSummary"/>
        <class name="TestUtils" line="35">
            <comment line="67">
                CHECKSTYLE: stop JavadocMethodCheck                
            </comment>
            <comment line="547">
                CHECKSTYLE: resume JavadocMethodCheck                
            </comment>
            <javadoc line="35">
                A collection of static methods to create inference test instances or to
                  perform inference tests.                
                <since>
                    1.1                    
                </since>
                <version>
                    $Id: TestUtils.java 1592430 2014-05-04 23:19:43Z psteitz $                    
                </version>
            </javadoc>
            <declaration name="T_TEST" type="TTest" line="44"/>
            <javadoc line="44">
                Singleton TTest instance.                
            </javadoc>
            <declaration name="CHI_SQUARE_TEST" type="ChiSquareTest" line="47"/>
            <javadoc line="47">
                Singleton ChiSquareTest instance.                
            </javadoc>
            <declaration name="ONE_WAY_ANANOVA" type="OneWayAnova" line="50"/>
            <javadoc line="50">
                Singleton OneWayAnova instance.                
            </javadoc>
            <declaration name="G_TEST" type="GTest" line="53"/>
            <javadoc line="53">
                Singleton G-Test instance.                
            </javadoc>
            <declaration name="KS_TEST" type="KolmogorovSmirnovTest" line="56"/>
            <javadoc line="56">
                Singleton K-S test instance                
            </javadoc>
            <javadoc line="59">
                Prevent instantiation.                
            </javadoc>
            <method name="TestUtils" type="constructor" line="62"/>
            <javadoc line="68">
                @see org.apache.commons.math3.stat.inference.TTest#homoscedasticT(double[],double[])                
            </javadoc>
            <method name="homoscedasticT" type="double" line="72">
                <params>
                    <param name="sample1" type="double[]"/>
                    <param name="sample2" type="double[]"/>
                </params>
            </method>
            <javadoc line="76">
                @see org.apache.commons.math3.stat.inference.TTest#homoscedasticT(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary)                
            </javadoc>
            <method name="homoscedasticT" type="double" line="81">
                <params>
                    <param name="sampleStats1" type="StatisticalSummary"/>
                    <param name="sampleStats2" type="StatisticalSummary"/>
                </params>
            </method>
            <javadoc line="85">
                @see org.apache.commons.math3.stat.inference.TTest#homoscedasticTTest(double[],double[],double)                
            </javadoc>
            <method name="homoscedasticTTest" type="boolean" line="91">
                <params>
                    <param name="sample1" type="double[]"/>
                    <param name="sample2" type="double[]"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="95">
                @see org.apache.commons.math3.stat.inference.TTest#homoscedasticTTest(double[],double[])                
            </javadoc>
            <method name="homoscedasticTTest" type="double" line="99">
                <params>
                    <param name="sample1" type="double[]"/>
                    <param name="sample2" type="double[]"/>
                </params>
            </method>
            <javadoc line="103">
                @see org.apache.commons.math3.stat.inference.TTest#homoscedasticTTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary)                
            </javadoc>
            <method name="homoscedasticTTest" type="double" line="108">
                <params>
                    <param name="sampleStats1" type="StatisticalSummary"/>
                    <param name="sampleStats2" type="StatisticalSummary"/>
                </params>
            </method>
            <javadoc line="112">
                @see org.apache.commons.math3.stat.inference.TTest#pairedT(double[],double[])                
            </javadoc>
            <method name="pairedT" type="double" line="117">
                <params>
                    <param name="sample1" type="double[]"/>
                    <param name="sample2" type="double[]"/>
                </params>
            </method>
            <javadoc line="121">
                @see org.apache.commons.math3.stat.inference.TTest#pairedTTest(double[],double[],double)                
            </javadoc>
            <method name="pairedTTest" type="boolean" line="127">
                <params>
                    <param name="sample1" type="double[]"/>
                    <param name="sample2" type="double[]"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="131">
                @see org.apache.commons.math3.stat.inference.TTest#pairedTTest(double[],double[])                
            </javadoc>
            <method name="pairedTTest" type="double" line="136">
                <params>
                    <param name="sample1" type="double[]"/>
                    <param name="sample2" type="double[]"/>
                </params>
            </method>
            <javadoc line="140">
                @see org.apache.commons.math3.stat.inference.TTest#t(double,double[])                
            </javadoc>
            <method name="t" type="double" line="144">
                <params>
                    <param name="mu" type="double"/>
                    <param name="observed" type="double[]"/>
                </params>
            </method>
            <javadoc line="148">
                @see org.apache.commons.math3.stat.inference.TTest#t(double,org.apache.commons.math3.stat.descriptive.StatisticalSummary)                
            </javadoc>
            <method name="t" type="double" line="152">
                <params>
                    <param name="mu" type="double"/>
                    <param name="sampleStats" type="StatisticalSummary"/>
                </params>
            </method>
            <javadoc line="156">
                @see org.apache.commons.math3.stat.inference.TTest#t(double[],double[])                
            </javadoc>
            <method name="t" type="double" line="160">
                <params>
                    <param name="sample1" type="double[]"/>
                    <param name="sample2" type="double[]"/>
                </params>
            </method>
            <javadoc line="164">
                @see org.apache.commons.math3.stat.inference.TTest#t(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary)                
            </javadoc>
            <method name="t" type="double" line="169">
                <params>
                    <param name="sampleStats1" type="StatisticalSummary"/>
                    <param name="sampleStats2" type="StatisticalSummary"/>
                </params>
            </method>
            <javadoc line="173">
                @see org.apache.commons.math3.stat.inference.TTest#tTest(double,double[],double)                
            </javadoc>
            <method name="tTest" type="boolean" line="178">
                <params>
                    <param name="mu" type="double"/>
                    <param name="sample" type="double[]"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="182">
                @see org.apache.commons.math3.stat.inference.TTest#tTest(double,double[])                
            </javadoc>
            <method name="tTest" type="double" line="187">
                <params>
                    <param name="mu" type="double"/>
                    <param name="sample" type="double[]"/>
                </params>
            </method>
            <javadoc line="191">
                @see org.apache.commons.math3.stat.inference.TTest#tTest(double,org.apache.commons.math3.stat.descriptive.StatisticalSummary,double)                
            </javadoc>
            <method name="tTest" type="boolean" line="197">
                <params>
                    <param name="mu" type="double"/>
                    <param name="sampleStats" type="StatisticalSummary"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="201">
                @see org.apache.commons.math3.stat.inference.TTest#tTest(double,org.apache.commons.math3.stat.descriptive.StatisticalSummary)                
            </javadoc>
            <method name="tTest" type="double" line="206">
                <params>
                    <param name="mu" type="double"/>
                    <param name="sampleStats" type="StatisticalSummary"/>
                </params>
            </method>
            <javadoc line="210">
                @see org.apache.commons.math3.stat.inference.TTest#tTest(double[],double[],double)                
            </javadoc>
            <method name="tTest" type="boolean" line="216">
                <params>
                    <param name="sample1" type="double[]"/>
                    <param name="sample2" type="double[]"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="220">
                @see org.apache.commons.math3.stat.inference.TTest#tTest(double[],double[])                
            </javadoc>
            <method name="tTest" type="double" line="225">
                <params>
                    <param name="sample1" type="double[]"/>
                    <param name="sample2" type="double[]"/>
                </params>
            </method>
            <javadoc line="229">
                @see org.apache.commons.math3.stat.inference.TTest#tTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary,double)                
            </javadoc>
            <method name="tTest" type="boolean" line="236">
                <params>
                    <param name="sampleStats1" type="StatisticalSummary"/>
                    <param name="sampleStats2" type="StatisticalSummary"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="240">
                @see org.apache.commons.math3.stat.inference.TTest#tTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary)                
            </javadoc>
            <method name="tTest" type="double" line="246">
                <params>
                    <param name="sampleStats1" type="StatisticalSummary"/>
                    <param name="sampleStats2" type="StatisticalSummary"/>
                </params>
            </method>
            <javadoc line="250">
                @see org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquare(double[],long[])                
            </javadoc>
            <method name="chiSquare" type="double" line="255">
                <params>
                    <param name="expected" type="double[]"/>
                    <param name="observed" type="long[]"/>
                </params>
            </method>
            <javadoc line="259">
                @see org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquare(long[][])                
            </javadoc>
            <method name="chiSquare" type="double" line="264">
                <params>
                    <param name="counts" type="long[][]"/>
                </params>
            </method>
            <javadoc line="268">
                @see org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquareTest(double[],long[],double)                
            </javadoc>
            <method name="chiSquareTest" type="boolean" line="274">
                <params>
                    <param name="expected" type="double[]"/>
                    <param name="observed" type="long[]"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="278">
                @see org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquareTest(double[],long[])                
            </javadoc>
            <method name="chiSquareTest" type="double" line="283">
                <params>
                    <param name="expected" type="double[]"/>
                    <param name="observed" type="long[]"/>
                </params>
            </method>
            <javadoc line="287">
                @see org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquareTest(long[][],double)                
            </javadoc>
            <method name="chiSquareTest" type="boolean" line="292">
                <params>
                    <param name="counts" type="long[][]"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="296">
                @see org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquareTest(long[][])                
            </javadoc>
            <method name="chiSquareTest" type="double" line="301">
                <params>
                    <param name="counts" type="long[][]"/>
                </params>
            </method>
            <javadoc line="305">
                @see org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquareDataSetsComparison(long[],long[])                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="chiSquareDataSetsComparison" type="double" line="312">
                <params>
                    <param name="observed1" type="long[]"/>
                    <param name="observed2" type="long[]"/>
                </params>
            </method>
            <javadoc line="316">
                @see org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquareTestDataSetsComparison(long[],long[])                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="chiSquareTestDataSetsComparison" type="double" line="324">
                <params>
                    <param name="observed1" type="long[]"/>
                    <param name="observed2" type="long[]"/>
                </params>
            </method>
            <javadoc line="328">
                @see org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquareTestDataSetsComparison(long[],long[],double)                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="chiSquareTestDataSetsComparison" type="boolean" line="337">
                <params>
                    <param name="observed1" type="long[]"/>
                    <param name="observed2" type="long[]"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="341">
                @see org.apache.commons.math3.stat.inference.OneWayAnova#anovaFValue(Collection)                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="oneWayAnovaFValue" type="double" line="347">
                <params>
                    <param name="categoryData" type="Collection&lt;double[]&gt;"/>
                </params>
            </method>
            <javadoc line="351">
                @see org.apache.commons.math3.stat.inference.OneWayAnova#anovaPValue(Collection)                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="oneWayAnovaPValue" type="double" line="358">
                <params>
                    <param name="categoryData" type="Collection&lt;double[]&gt;"/>
                </params>
            </method>
            <javadoc line="362">
                @see org.apache.commons.math3.stat.inference.OneWayAnova#anovaTest(Collection,double)                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="oneWayAnovaTest" type="boolean" line="370">
                <params>
                    <param name="categoryData" type="Collection&lt;double[]&gt;"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="374">
                @see org.apache.commons.math3.stat.inference.GTest#g(double[],long[])                
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="g" type="double" line="380">
                <params>
                    <param name="expected" type="double[]"/>
                    <param name="observed" type="long[]"/>
                </params>
            </method>
            <javadoc line="384">
                @see org.apache.commons.math3.stat.inference.GTest#gTest(double[],long[])                
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="gTest" type="double" line="390">
                <params>
                    <param name="expected" type="double[]"/>
                    <param name="observed" type="long[]"/>
                </params>
            </method>
            <javadoc line="394">
                @see org.apache.commons.math3.stat.inference.GTest#gTestIntrinsic(double[],long[])                
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="gTestIntrinsic" type="double" line="400">
                <params>
                    <param name="expected" type="double[]"/>
                    <param name="observed" type="long[]"/>
                </params>
            </method>
            <javadoc line="404">
                @see org.apache.commons.math3.stat.inference.GTest#gTest(double[],long[],double)                
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="gTest" type="boolean" line="411">
                <params>
                    <param name="expected" type="double[]"/>
                    <param name="observed" type="long[]"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="415">
                @see org.apache.commons.math3.stat.inference.GTest#gDataSetsComparison(long[],long[])                
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="gDataSetsComparison" type="double" line="421">
                <params>
                    <param name="observed1" type="long[]"/>
                    <param name="observed2" type="long[]"/>
                </params>
            </method>
            <javadoc line="425">
                @see org.apache.commons.math3.stat.inference.GTest#rootLogLikelihoodRatio(long,long,long,long)                
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="rootLogLikelihoodRatio" type="double" line="430">
                <params>
                    <param name="k11" type="long"/>
                    <param name="k12" type="long"/>
                    <param name="k21" type="long"/>
                    <param name="k22" type="long"/>
                </params>
            </method>
            <javadoc line="435">
                @see org.apache.commons.math3.stat.inference.GTest#gTestDataSetsComparison(long[],long[])                
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="gTestDataSetsComparison" type="double" line="442">
                <params>
                    <param name="observed1" type="long[]"/>
                    <param name="observed2" type="long[]"/>
                </params>
            </method>
            <javadoc line="446">
                @see org.apache.commons.math3.stat.inference.GTest#gTestDataSetsComparison(long[],long[],double)                
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="gTestDataSetsComparison" type="boolean" line="454">
                <params>
                    <param name="observed1" type="long[]"/>
                    <param name="observed2" type="long[]"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="458">
                @see org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest#kolmogorovSmirnovStatistic(RealDistribution,double[])                
                <since>
                    3.3                    
                </since>
            </javadoc>
            <method name="kolmogorovSmirnovStatistic" type="double" line="463">
                <params>
                    <param name="dist" type="RealDistribution"/>
                    <param name="data" type="double[]"/>
                </params>
            </method>
            <javadoc line="467">
                @see org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest#kolmogorovSmirnovTest(RealDistribution,double[])                
                <since>
                    3.3                    
                </since>
            </javadoc>
            <method name="kolmogorovSmirnovTest" type="double" line="472">
                <params>
                    <param name="dist" type="RealDistribution"/>
                    <param name="data" type="double[]"/>
                </params>
            </method>
            <javadoc line="476">
                @see org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest#kolmogorovSmirnovTest(RealDistribution,double[],boolean)                
                <since>
                    3.3                    
                </since>
            </javadoc>
            <method name="kolmogorovSmirnovTest" type="double" line="481">
                <params>
                    <param name="dist" type="RealDistribution"/>
                    <param name="data" type="double[]"/>
                    <param name="strict" type="boolean"/>
                </params>
            </method>
            <javadoc line="485">
                @see org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest#kolmogorovSmirnovTest(RealDistribution,double[],double)                
                <since>
                    3.3                    
                </since>
            </javadoc>
            <method name="kolmogorovSmirnovTest" type="boolean" line="490">
                <params>
                    <param name="dist" type="RealDistribution"/>
                    <param name="data" type="double[]"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="494">
                @see org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest#kolmogorovSmirnovStatistic(double[],double[])                
                <since>
                    3.3                    
                </since>
            </javadoc>
            <method name="kolmogorovSmirnovStatistic" type="double" line="499">
                <params>
                    <param name="x" type="double[]"/>
                    <param name="y" type="double[]"/>
                </params>
            </method>
            <javadoc line="503">
                @see kolmogorovSmirnovTest(double[], double[])                
                <since>
                    3.3                    
                </since>
            </javadoc>
            <method name="kolmogorovSmirnovTest" type="double" line="508">
                <params>
                    <param name="x" type="double[]"/>
                    <param name="y" type="double[]"/>
                </params>
            </method>
            <javadoc line="512">
                @see org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest#kolmogorovSmirnovTest(double[],double[],boolean)                
                <since>
                    3.3                    
                </since>
            </javadoc>
            <method name="kolmogorovSmirnovTest" type="double" line="517">
                <params>
                    <param name="x" type="double[]"/>
                    <param name="y" type="double[]"/>
                    <param name="strict" type="boolean"/>
                </params>
            </method>
            <javadoc line="521">
                @see org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest#exactP(double,int,int,boolean)                
                <since>
                    3.3                    
                </since>
            </javadoc>
            <method name="exactP" type="double" line="525">
                <params>
                    <param name="d" type="double"/>
                    <param name="m" type="int"/>
                    <param name="n" type="int"/>
                    <param name="strict" type="boolean"/>
                </params>
            </method>
            <javadoc line="529">
                @see org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest#approximateP(double,int,int)                
                <since>
                    3.3                    
                </since>
            </javadoc>
            <method name="approximateP" type="double" line="533">
                <params>
                    <param name="d" type="double"/>
                    <param name="n" type="int"/>
                    <param name="m" type="int"/>
                </params>
            </method>
            <javadoc line="537">
                @see org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest#monteCarloP(double,int,int,boolean,int)                
                <since>
                    3.3                    
                </since>
            </javadoc>
            <method name="monteCarloP" type="double" line="541">
                <params>
                    <param name="d" type="double"/>
                    <param name="n" type="int"/>
                    <param name="m" type="int"/>
                    <param name="strict" type="boolean"/>
                    <param name="iterations" type="int"/>
                </params>
            </method>
        </class>
    </source>