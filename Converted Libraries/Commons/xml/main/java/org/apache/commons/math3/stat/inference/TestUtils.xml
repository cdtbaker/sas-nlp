<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.inference">
        <import package="java.util.Collection"/>
        <import package="org.apache.commons.math3.exception.ConvergenceException"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.MaxCountExceededException"/>
        <import package="org.apache.commons.math3.exception.NoDataException"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.NullArgumentException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.exception.ZeroException"/>
        <import package="org.apache.commons.math3.stat.descriptive.StatisticalSummary"/>
        <class name="TestUtils" line="14">
            <javadoc line="14">
                A collection of static methods to create inference test instances or to
                  perform inference tests.                
                <since>
                    1.1                    
                </since>
                <version>
                    $Id: TestUtils.java 1422313 2012-12-15 18:53:41Z psteitz $                    
                </version>
            </javadoc>
            <declaration name="T_TEST" type="TTest" line="21"/>
            <javadoc line="21">
                Singleton TTest instance.                
            </javadoc>
            <declaration name="CHI_SQUARE_TEST" type="ChiSquareTest" line="25"/>
            <javadoc line="25">
                Singleton ChiSquareTest instance.                
            </javadoc>
            <declaration name="ONE_WAY_ANANOVA" type="OneWayAnova" line="29"/>
            <javadoc line="29">
                Singleton OneWayAnova instance.                
            </javadoc>
            <declaration name="G_TEST" type="GTest" line="33"/>
            <javadoc line="33">
                Singleton G-Test instance.                
            </javadoc>
            <javadoc line="37">
                Prevent instantiation.                
            </javadoc>
            <method name="TestUtils" type="constructor" line="40"/>
            <javadoc line="43">
                @see org.apache.commons.math3.stat.inference.TTest#homoscedasticT(double[],double[])                
            </javadoc>
            <method name="homoscedasticT" type="double" line="46">
                <params>
                    <param name="sample1" type="double[]"/>
                    <param name="sample2" type="double[]"/>
                </params>
            </method>
            <javadoc line="49">
                @see org.apache.commons.math3.stat.inference.TTest#homoscedasticT(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary)                
            </javadoc>
            <method name="homoscedasticT" type="double" line="52">
                <params>
                    <param name="sampleStats1" type="StatisticalSummary"/>
                    <param name="sampleStats2" type="StatisticalSummary"/>
                </params>
            </method>
            <javadoc line="55">
                @see org.apache.commons.math3.stat.inference.TTest#homoscedasticTTest(double[],double[],double)                
            </javadoc>
            <method name="homoscedasticTTest" type="boolean" line="58">
                <params>
                    <param name="sample1" type="double[]"/>
                    <param name="sample2" type="double[]"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="61">
                @see org.apache.commons.math3.stat.inference.TTest#homoscedasticTTest(double[],double[])                
            </javadoc>
            <method name="homoscedasticTTest" type="double" line="64">
                <params>
                    <param name="sample1" type="double[]"/>
                    <param name="sample2" type="double[]"/>
                </params>
            </method>
            <javadoc line="67">
                @see org.apache.commons.math3.stat.inference.TTest#homoscedasticTTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary)                
            </javadoc>
            <method name="homoscedasticTTest" type="double" line="70">
                <params>
                    <param name="sampleStats1" type="StatisticalSummary"/>
                    <param name="sampleStats2" type="StatisticalSummary"/>
                </params>
            </method>
            <javadoc line="73">
                @see org.apache.commons.math3.stat.inference.TTest#pairedT(double[],double[])                
            </javadoc>
            <method name="pairedT" type="double" line="76">
                <params>
                    <param name="sample1" type="double[]"/>
                    <param name="sample2" type="double[]"/>
                </params>
            </method>
            <javadoc line="79">
                @see org.apache.commons.math3.stat.inference.TTest#pairedTTest(double[],double[],double)                
            </javadoc>
            <method name="pairedTTest" type="boolean" line="82">
                <params>
                    <param name="sample1" type="double[]"/>
                    <param name="sample2" type="double[]"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="85">
                @see org.apache.commons.math3.stat.inference.TTest#pairedTTest(double[],double[])                
            </javadoc>
            <method name="pairedTTest" type="double" line="88">
                <params>
                    <param name="sample1" type="double[]"/>
                    <param name="sample2" type="double[]"/>
                </params>
            </method>
            <javadoc line="91">
                @see org.apache.commons.math3.stat.inference.TTest#t(double,double[])                
            </javadoc>
            <method name="t" type="double" line="94">
                <params>
                    <param name="mu" type="double"/>
                    <param name="observed" type="double[]"/>
                </params>
            </method>
            <javadoc line="97">
                @see org.apache.commons.math3.stat.inference.TTest#t(double,org.apache.commons.math3.stat.descriptive.StatisticalSummary)                
            </javadoc>
            <method name="t" type="double" line="100">
                <params>
                    <param name="mu" type="double"/>
                    <param name="sampleStats" type="StatisticalSummary"/>
                </params>
            </method>
            <javadoc line="103">
                @see org.apache.commons.math3.stat.inference.TTest#t(double[],double[])                
            </javadoc>
            <method name="t" type="double" line="106">
                <params>
                    <param name="sample1" type="double[]"/>
                    <param name="sample2" type="double[]"/>
                </params>
            </method>
            <javadoc line="109">
                @see org.apache.commons.math3.stat.inference.TTest#t(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary)                
            </javadoc>
            <method name="t" type="double" line="112">
                <params>
                    <param name="sampleStats1" type="StatisticalSummary"/>
                    <param name="sampleStats2" type="StatisticalSummary"/>
                </params>
            </method>
            <javadoc line="115">
                @see org.apache.commons.math3.stat.inference.TTest#tTest(double,double[],double)                
            </javadoc>
            <method name="tTest" type="boolean" line="118">
                <params>
                    <param name="mu" type="double"/>
                    <param name="sample" type="double[]"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="121">
                @see org.apache.commons.math3.stat.inference.TTest#tTest(double,double[])                
            </javadoc>
            <method name="tTest" type="double" line="124">
                <params>
                    <param name="mu" type="double"/>
                    <param name="sample" type="double[]"/>
                </params>
            </method>
            <javadoc line="127">
                @see org.apache.commons.math3.stat.inference.TTest#tTest(double,org.apache.commons.math3.stat.descriptive.StatisticalSummary,double)                
            </javadoc>
            <method name="tTest" type="boolean" line="130">
                <params>
                    <param name="mu" type="double"/>
                    <param name="sampleStats" type="StatisticalSummary"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="133">
                @see org.apache.commons.math3.stat.inference.TTest#tTest(double,org.apache.commons.math3.stat.descriptive.StatisticalSummary)                
            </javadoc>
            <method name="tTest" type="double" line="136">
                <params>
                    <param name="mu" type="double"/>
                    <param name="sampleStats" type="StatisticalSummary"/>
                </params>
            </method>
            <javadoc line="139">
                @see org.apache.commons.math3.stat.inference.TTest#tTest(double[],double[],double)                
            </javadoc>
            <method name="tTest" type="boolean" line="142">
                <params>
                    <param name="sample1" type="double[]"/>
                    <param name="sample2" type="double[]"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="145">
                @see org.apache.commons.math3.stat.inference.TTest#tTest(double[],double[])                
            </javadoc>
            <method name="tTest" type="double" line="148">
                <params>
                    <param name="sample1" type="double[]"/>
                    <param name="sample2" type="double[]"/>
                </params>
            </method>
            <javadoc line="151">
                @see org.apache.commons.math3.stat.inference.TTest#tTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary,double)                
            </javadoc>
            <method name="tTest" type="boolean" line="154">
                <params>
                    <param name="sampleStats1" type="StatisticalSummary"/>
                    <param name="sampleStats2" type="StatisticalSummary"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="157">
                @see org.apache.commons.math3.stat.inference.TTest#tTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary)                
            </javadoc>
            <method name="tTest" type="double" line="160">
                <params>
                    <param name="sampleStats1" type="StatisticalSummary"/>
                    <param name="sampleStats2" type="StatisticalSummary"/>
                </params>
            </method>
            <javadoc line="163">
                @see org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquare(double[],long[])                
            </javadoc>
            <method name="chiSquare" type="double" line="166">
                <params>
                    <param name="expected" type="double[]"/>
                    <param name="observed" type="long[]"/>
                </params>
            </method>
            <javadoc line="169">
                @see org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquare(long[][])                
            </javadoc>
            <method name="chiSquare" type="double" line="172">
                <params>
                    <param name="counts" type="long[][]"/>
                </params>
            </method>
            <javadoc line="175">
                @see org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquareTest(double[],long[],double)                
            </javadoc>
            <method name="chiSquareTest" type="boolean" line="178">
                <params>
                    <param name="expected" type="double[]"/>
                    <param name="observed" type="long[]"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="181">
                @see org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquareTest(double[],long[])                
            </javadoc>
            <method name="chiSquareTest" type="double" line="184">
                <params>
                    <param name="expected" type="double[]"/>
                    <param name="observed" type="long[]"/>
                </params>
            </method>
            <javadoc line="187">
                @see org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquareTest(long[][],double)                
            </javadoc>
            <method name="chiSquareTest" type="boolean" line="190">
                <params>
                    <param name="counts" type="long[][]"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="193">
                @see org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquareTest(long[][])                
            </javadoc>
            <method name="chiSquareTest" type="double" line="196">
                <params>
                    <param name="counts" type="long[][]"/>
                </params>
            </method>
            <javadoc line="199">
                @see org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquareDataSetsComparison(long[],long[])                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="chiSquareDataSetsComparison" type="double" line="203">
                <params>
                    <param name="observed1" type="long[]"/>
                    <param name="observed2" type="long[]"/>
                </params>
            </method>
            <javadoc line="206">
                @see org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquareTestDataSetsComparison(long[],long[])                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="chiSquareTestDataSetsComparison" type="double" line="210">
                <params>
                    <param name="observed1" type="long[]"/>
                    <param name="observed2" type="long[]"/>
                </params>
            </method>
            <javadoc line="213">
                @see org.apache.commons.math3.stat.inference.ChiSquareTest#chiSquareTestDataSetsComparison(long[],long[],double)                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="chiSquareTestDataSetsComparison" type="boolean" line="217">
                <params>
                    <param name="observed1" type="long[]"/>
                    <param name="observed2" type="long[]"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="220">
                @see org.apache.commons.math3.stat.inference.OneWayAnova#anovaFValue(Collection)                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="oneWayAnovaFValue" type="double" line="224">
                <params>
                    <param name="categoryData" type="Collection<double[]>"/>
                </params>
            </method>
            <javadoc line="227">
                @see org.apache.commons.math3.stat.inference.OneWayAnova#anovaPValue(Collection)                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="oneWayAnovaPValue" type="double" line="231">
                <params>
                    <param name="categoryData" type="Collection<double[]>"/>
                </params>
            </method>
            <javadoc line="234">
                @see org.apache.commons.math3.stat.inference.OneWayAnova#anovaTest(Collection,double)                
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="oneWayAnovaTest" type="boolean" line="238">
                <params>
                    <param name="categoryData" type="Collection<double[]>"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="241">
                @see org.apache.commons.math3.stat.inference.GTest#g(double[],long[])                
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="g" type="double" line="245">
                <params>
                    <param name="expected" type="double[]"/>
                    <param name="observed" type="long[]"/>
                </params>
            </method>
            <javadoc line="248">
                @see org.apache.commons.math3.stat.inference.GTest#gTest(double[],long[])                
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="gTest" type="double" line="252">
                <params>
                    <param name="expected" type="double[]"/>
                    <param name="observed" type="long[]"/>
                </params>
            </method>
            <javadoc line="255">
                @see org.apache.commons.math3.stat.inference.GTest#gTestIntrinsic(double[],long[])                
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="gTestIntrinsic" type="double" line="259">
                <params>
                    <param name="expected" type="double[]"/>
                    <param name="observed" type="long[]"/>
                </params>
            </method>
            <javadoc line="262">
                @see org.apache.commons.math3.stat.inference.GTest#gTest(double[],long[],double)                
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="gTest" type="boolean" line="266">
                <params>
                    <param name="expected" type="double[]"/>
                    <param name="observed" type="long[]"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
            <javadoc line="269">
                @see org.apache.commons.math3.stat.inference.GTest#gDataSetsComparison(long[],long[])                
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="gDataSetsComparison" type="double" line="273">
                <params>
                    <param name="observed1" type="long[]"/>
                    <param name="observed2" type="long[]"/>
                </params>
            </method>
            <javadoc line="276">
                @see org.apache.commons.math3.stat.inference.GTest#rootLogLikelihoodRatio(long,long,long,long)                
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="rootLogLikelihoodRatio" type="double" line="280">
                <params>
                    <param name="k11" type="long"/>
                    <param name="k12" type="long"/>
                    <param name="k21" type="long"/>
                    <param name="k22" type="long"/>
                </params>
            </method>
            <javadoc line="283">
                @see org.apache.commons.math3.stat.inference.GTest#gTestDataSetsComparison(long[],long[])                
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="gTestDataSetsComparison" type="double" line="287">
                <params>
                    <param name="observed1" type="long[]"/>
                    <param name="observed2" type="long[]"/>
                </params>
            </method>
            <javadoc line="290">
                @see org.apache.commons.math3.stat.inference.GTest#gTestDataSetsComparison(long[],long[],double)                
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="gTestDataSetsComparison" type="boolean" line="294">
                <params>
                    <param name="observed1" type="long[]"/>
                    <param name="observed2" type="long[]"/>
                    <param name="alpha" type="double"/>
                </params>
            </method>
        </class>
    </source>