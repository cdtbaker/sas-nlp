<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.geometry.euclidean.twod">
        <import package="org.apache.commons.math3.util.FastMath"/>
        <class name="Segment" line="3">
            <javadoc line="3">
                Simple container for a two-points segment.                
                <version>
                    $Id: Segment.java 1422195 2012-12-15 06:45:18Z psteitz $                    
                </version>
                <since>
                    3.0                    
                </since>
            </javadoc>
            <declaration name="start" type="Vector2D" line="9"/>
            <javadoc line="9">
                Start point of the segment.                
            </javadoc>
            <declaration name="end" type="Vector2D" line="13"/>
            <javadoc line="13">
                End point of the segments.                
            </javadoc>
            <declaration name="line" type="Line" line="17"/>
            <javadoc line="17">
                Line containing the segment.                
            </javadoc>
            <javadoc line="21">
                Build a segment.                
                <param>
                    start start point of the segment                    
                </param>
                <param>
                    end end point of the segment                    
                </param>
                <param>
                    line line containing the segment                    
                </param>
            </javadoc>
            <method name="Segment" type="constructor" line="27">
                <params>
                    <param name="start" type="Vector2D"/>
                    <param name="end" type="Vector2D"/>
                    <param name="line" type="Line"/>
                </params>
            </method>
            <javadoc line="32">
                Get the start point of the segment.                
                <return>
                    start point of the segment                    
                </return>
            </javadoc>
            <method name="getStart" type="Vector2D" line="36"/>
            <javadoc line="39">
                Get the end point of the segment.                
                <return>
                    end point of the segment                    
                </return>
            </javadoc>
            <method name="getEnd" type="Vector2D" line="43"/>
            <javadoc line="46">
                Get the line containing the segment.                
                <return>
                    line containing the segment                    
                </return>
            </javadoc>
            <method name="getLine" type="Line" line="50"/>
            <javadoc line="53">
                Calculates the shortest distance from a point to this line segment.
                  &lt;p&gt;
                  If the perpendicular extension from the point to the line does not
                  cross in the bounds of the line segment, the shortest distance to
                  the two end points will be returned.
                  &lt;/p&gt;
                  Algorithm adapted from:
                  &lt;a href=&quot;http://www.codeguru.com/forum/printthread.php?s=cc8cf0596231f9a7dba4da6e77c29db3&amp;t=194400&amp;pp=15&amp;page=1&quot;&gt;
                  Thread @ Codeguru&lt;/a&gt;                
                <param>
                    p to check                    
                </param>
                <return>
                    distance between the instance and the point                    
                </return>
                <since>
                    3.1                    
                </since>
            </javadoc>
            <method name="distance" type="double" line="67">
                <params>
                    <param name="p" type="Vector2D"/>
                </params>
                <declaration name="deltaX" type="double" line="68"/>
                <declaration name="deltaY" type="double" line="69"/>
                <declaration name="r" type="double" line="70"/>
                <scope line="71">
                    <declaration name="dist1" type="double" line="72"/>
                    <declaration name="dist2" type="double" line="73"/>
                </scope>
                <scope line="76">
                    <declaration name="px" type="double" line="77"/>
                    <declaration name="py" type="double" line="78"/>
                    <declaration name="interPt" type="Vector2D" line="79"/>
                </scope>
            </method>
        </class>
    </source>