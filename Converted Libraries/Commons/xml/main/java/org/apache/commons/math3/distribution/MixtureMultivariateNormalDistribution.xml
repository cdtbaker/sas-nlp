<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="java.util.List"/>
        <import package="java.util.ArrayList"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.NotPositiveException"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.util.Pair"/>
        <class name="MixtureMultivariateNormalDistribution" line="8">
            <extends class="MixtureMultivariateRealDistribution">
                <type_params>
                    <type_param name="MultivariateNormalDistribution"/>
                </type_params>
            </extends>
            <javadoc line="8">
                Multivariate normal mixture distribution.
                  This class is mainly syntactic sugar.                
                <see>
                    MixtureMultivariateRealDistribution                    
                </see>
                <version>
                    $Id: MixtureMultivariateNormalDistribution.java 1459551 2013-03-21 22:17:44Z tn $                    
                </version>
                <since>
                    3.2                    
                </since>
            </javadoc>
            <javadoc line="16">
                Creates a multivariate normal mixture distribution.                
                <param>
                    weights Weights of each component.                    
                </param>
                <param>
                    means Mean vector for each component.                    
                </param>
                <param>
                    covariances Covariance matrix for each component.                    
                </param>
            </javadoc>
            <method name="MixtureMultivariateNormalDistribution" type="constructor" line="22">
                <params>
                    <param name="weights" type="double[]"/>
                    <param name="means" type="double[][]"/>
                    <param name="covariances" type="double[][][]"/>
                </params>
            </method>
            <javadoc line="25">
                Creates a mixture model from a list of distributions and their
                  associated weights.                
                <param>
                    components List of (weight, distribution) pairs from which to sample.                    
                </param>
            </javadoc>
            <method name="MixtureMultivariateNormalDistribution" type="constructor" line="30">
                <params>
                    <param name="components" type="List<Pair<Double,MultivariateNormalDistribution>>"/>
                </params>
            </method>
            <javadoc line="33">
                Creates a mixture model from a list of distributions and their
                  associated weights.                
                <param>
                    rng Random number generator.                    
                </param>
                <param>
                    components Distributions from which to sample.                    
                </param>
                <throws>
                    NotPositiveException if any of the weights is negative.                    
                </throws>
                <throws>
                    DimensionMismatchException if not all components have the same
                      number of variables.                    
                </throws>
            </javadoc>
            <method name="MixtureMultivariateNormalDistribution" type="constructor" line="42">
                <params>
                    <param name="rng" type="RandomGenerator"/>
                    <param name="components" type="List<Pair<Double,MultivariateNormalDistribution>>"/>
                </params>
            </method>
            <javadoc line="45">
                @param weights Weights of each component.                
                <param>
                    means Mean vector for each component.                    
                </param>
                <param>
                    covariances Covariance matrix for each component.                    
                </param>
                <return>
                    the list of components.                    
                </return>
            </javadoc>
            <method name="createComponents" type="List<Pair<Double,MultivariateNormalDistribution>>" line="51">
                <params>
                    <param name="weights" type="double[]"/>
                    <param name="means" type="double[][]"/>
                    <param name="covariances" type="double[][][]"/>
                </params>
                <declaration name="mvns" type="List&lt;Pair&lt;Double,MultivariateNormalDistribution&gt;&gt;" line="52"/>
                <scope line="53">
                    <declaration name="dist" type="MultivariateNormalDistribution" line="54"/>
                </scope>
            </method>
        </class>
    </source>