<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.stat.correlation">
        <import package="org.apache.commons.math3.exception.NumberIsTooSmallException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <class name="StorelessBivariateCovariance" line="22">
            <javadoc line="22">
                Bivariate Covariance implementation that does not require input data to be
                  stored in memory.
                  &lt;p&gt;This class is based on a paper written by Philippe P&amp;eacute;bay:
                  &lt;a href=&quot;http://prod.sandia.gov/techlib/access-control.cgi/2008/086212.pdf&quot;&gt;
                  Formulas for Robust, One-Pass Parallel Computation of Covariances and
                  Arbitrary-Order Statistical Moments&lt;/a&gt;, 2008, Technical Report SAND2008-6212,
                  Sandia National Laboratories. It computes the covariance for a pair of variables.
                  Use {@link StorelessCovariance} to estimate an entire covariance matrix.&lt;/p&gt;
                  &lt;p&gt;Note: This class is package private as it is only used internally in
                  the {@link StorelessCovariance} class.&lt;/p&gt;                
                <version>
                    $Id: StorelessBivariateCovariance.java 1488337 2013-05-31 17:47:53Z psteitz $                    
                </version>
                <since>
                    3.0                    
                </since>
            </javadoc>
            <declaration name="meanX" type="double" line="41"/>
            <javadoc line="41">
                the mean of variable x                
            </javadoc>
            <declaration name="meanY" type="double" line="44"/>
            <javadoc line="44">
                the mean of variable y                
            </javadoc>
            <declaration name="n" type="double" line="47"/>
            <javadoc line="47">
                number of observations                
            </javadoc>
            <declaration name="covarianceNumerator" type="double" line="50"/>
            <javadoc line="50">
                the running covariance estimate                
            </javadoc>
            <declaration name="biasCorrected" type="boolean" line="53"/>
            <javadoc line="53">
                flag for bias correction                
            </javadoc>
            <javadoc line="56">
                Create an empty {@link StorelessBivariateCovariance} instance with
                  bias correction.                
            </javadoc>
            <method name="StorelessBivariateCovariance" type="constructor" line="60"/>
            <javadoc line="64">
                Create an empty {@link StorelessBivariateCovariance} instance.                
                <param>
                    biasCorrection if &lt;code&gt;true&lt;/code&gt; the covariance estimate is corrected
                      for bias, i.e. n-1 in the denominator, otherwise there is no bias correction,
                      i.e. n in the denominator.                    
                </param>
            </javadoc>
            <method name="StorelessBivariateCovariance" type="constructor" line="71">
                <params>
                    <param name="biasCorrection" type="boolean"/>
                </params>
            </method>
            <javadoc line="78">
                Update the covariance estimation with a pair of variables (x, y).                
                <param>
                    x the x value                    
                </param>
                <param>
                    y the y value                    
                </param>
            </javadoc>
            <method name="increment" type="void" line="84">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                </params>
                <declaration name="deltaX" type="double" line="86"/>
                <declaration name="deltaY" type="double" line="87"/>
            </method>
            <javadoc line="93">
                Appends another bivariate covariance calculation to this.
                  After this operation, statistics returned should be close to what would
                  have been obtained by by performing all of the {@link #increment(double,double)}operations in {@code cov} directly on this.                
                <param>
                    cov StorelessBivariateCovariance instance to append.                    
                </param>
            </javadoc>
            <method name="append" type="void" line="101">
                <params>
                    <param name="cov" type="StorelessBivariateCovariance"/>
                </params>
                <declaration name="oldN" type="double" line="102"/>
                <declaration name="deltaX" type="double" line="104"/>
                <declaration name="deltaY" type="double" line="105"/>
            </method>
            <javadoc line="111">
                Returns the number of observations.                
                <return>
                    number of observations                    
                </return>
            </javadoc>
            <method name="getN" type="double" line="116"/>
            <javadoc line="120">
                Return the current covariance estimate.                
                <return>
                    the current covariance                    
                </return>
                <throws>
                    NumberIsTooSmallException if the number of observations
                      is &amp;lt; 2                    
                </throws>
            </javadoc>
            <method name="getResult" type="double" line="127">
                <scope line="128"/>
                <scope line="132"/>
                <scope line="134"/>
            </method>
        </class>
    </source>