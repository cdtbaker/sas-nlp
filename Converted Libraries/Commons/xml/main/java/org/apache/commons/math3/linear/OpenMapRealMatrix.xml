<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="java.io.Serializable"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooLargeException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.util.OpenIntToDoubleHashMap"/>
        <class name="OpenMapRealMatrix" line="28">
            <extends class="AbstractRealMatrix"/>
            <implements interface="SparseRealMatrix"/>
            <implements interface="Serializable"/>
            <javadoc line="28">
                Sparse matrix implementation based on an open addressed map.
                  &lt;p&gt;
                  Caveat: This implementation assumes that, for any {@code x},
                  the equality {@code x  0d == 0d} holds. But it is is not true for{@code NaN}. Moreover, zero entries will lose their sign.
                  Some operations (that involve {@code NaN} and/or infinities) may
                  thus give incorrect results.
                  &lt;/p&gt;                
                <version>
                    $Id: OpenMapRealMatrix.java 1569825 2014-02-19 17:19:59Z luc $                    
                </version>
                <since>
                    2.0                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="43"/>
            <javadoc line="43">
                Serializable version identifier.                
            </javadoc>
            <declaration name="rows" type="int" line="45"/>
            <javadoc line="45">
                Number of rows of the matrix.                
            </javadoc>
            <declaration name="columns" type="int" line="47"/>
            <javadoc line="47">
                Number of columns of the matrix.                
            </javadoc>
            <declaration name="entries" type="OpenIntToDoubleHashMap" line="49"/>
            <javadoc line="49">
                Storage for (sparse) matrix elements.                
            </javadoc>
            <javadoc line="52">
                Build a sparse matrix with the supplied row and column dimensions.                
                <param>
                    rowDimension Number of rows of the matrix.                    
                </param>
                <param>
                    columnDimension Number of columns of the matrix.                    
                </param>
                <throws>
                    NotStrictlyPositiveException if row or column dimension is not
                      positive.                    
                </throws>
                <throws>
                    NumberIsTooLargeException if the total number of entries of the
                      matrix is larger than {@code Integer.MAX_VALUE}.                    
                </throws>
            </javadoc>
            <method name="OpenMapRealMatrix" type="constructor" line="63">
                <params>
                    <param name="rowDimension" type="int"/>
                    <param name="columnDimension" type="int"/>
                </params>
                <declaration name="lRow" type="long" line="65"/>
                <declaration name="lCol" type="long" line="66"/>
                <scope line="67"/>
            </method>
            <javadoc line="75">
                Build a matrix by copying another one.                
                <param>
                    matrix matrix to copy.                    
                </param>
            </javadoc>
            <method name="OpenMapRealMatrix" type="constructor" line="80">
                <params>
                    <param name="matrix" type="OpenMapRealMatrix"/>
                </params>
            </method>
            <javadoc line="86">
                {@inheritDoc}                
            </javadoc>
            <method name="copy" type="OpenMapRealMatrix" line="88"/>
            <javadoc line="92">
                {@inheritDoc}                
                <throws>
                    NumberIsTooLargeException if the total number of entries of the
                      matrix is larger than {@code Integer.MAX_VALUE}.                    
                </throws>
            </javadoc>
            <method name="createMatrix" type="OpenMapRealMatrix" line="100">
                <params>
                    <param name="rowDimension" type="int"/>
                    <param name="columnDimension" type="int"/>
                </params>
            </method>
            <javadoc line="104">
                {@inheritDoc}                
            </javadoc>
            <method name="getColumnDimension" type="int" line="106"/>
            <javadoc line="110">
                Compute the sum of this matrix and {@code m}.                
                <param>
                    m Matrix to be added.                    
                </param>
                <return>
                    {@code this} + {@code m}.                    
                </return>
                <throws>
                    MatrixDimensionMismatchException if {@code m} is not the same
                      size as {@code this}.                    
                </throws>
            </javadoc>
            <method name="add" type="OpenMapRealMatrix" line="119">
                <params>
                    <param name="m" type="OpenMapRealMatrix"/>
                </params>
                <declaration name="out" type="OpenMapRealMatrix" line="123"/>
                <scope line="124">
                    <declaration name="row" type="int" line="126"/>
                    <declaration name="col" type="int" line="127"/>
                </scope>
            </method>
            <javadoc line="135">
                {@inheritDoc}                
            </javadoc>
            <method name="subtract" type="OpenMapRealMatrix" line="138">
                <params>
                    <param name="m" type="RealMatrix"/>
                </params>
                <scope line="139"/>
                <scope line="141"/>
            </method>
            <javadoc line="146">
                Subtract {@code m} from this matrix.                
                <param>
                    m Matrix to be subtracted.                    
                </param>
                <return>
                    {@code this} - {@code m}.                    
                </return>
                <throws>
                    MatrixDimensionMismatchException if {@code m} is not the same
                      size as {@code this}.                    
                </throws>
            </javadoc>
            <method name="subtract" type="OpenMapRealMatrix" line="155">
                <params>
                    <param name="m" type="OpenMapRealMatrix"/>
                </params>
                <declaration name="out" type="OpenMapRealMatrix" line="158"/>
                <scope line="159">
                    <declaration name="row" type="int" line="161"/>
                    <declaration name="col" type="int" line="162"/>
                </scope>
            </method>
            <javadoc line="169">
                {@inheritDoc}                
                <throws>
                    NumberIsTooLargeException if {@code m} is an{@code OpenMapRealMatrix}, and the total number of entries of the product
                      is larger than {@code Integer.MAX_VALUE}.                    
                </throws>
            </javadoc>
            <method name="multiply" type="RealMatrix" line="178">
                <params>
                    <param name="m" type="RealMatrix"/>
                </params>
                <scope line="179"/>
                <scope line="181">
                    <declaration name="outCols" type="int" line="185"/>
                    <declaration name="out" type="BlockRealMatrix" line="186"/>
                    <scope line="187">
                        <declaration name="value" type="double" line="189"/>
                        <declaration name="key" type="int" line="190"/>
                        <declaration name="i" type="int" line="191"/>
                        <declaration name="k" type="int" line="192"/>
                        <scope line="193"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="202">
                Postmultiply this matrix by {@code m}.                
                <param>
                    m Matrix to postmultiply by.                    
                </param>
                <return>
                    {@code this}  {@code m}.                    
                </return>
                <throws>
                    DimensionMismatchException if the number of rows of {@code m}differ from the number of columns of {@code this} matrix.                    
                </throws>
                <throws>
                    NumberIsTooLargeException if the total number of entries of the
                      product is larger than {@code Integer.MAX_VALUE}.                    
                </throws>
            </javadoc>
            <method name="multiply" type="OpenMapRealMatrix" line="213">
                <params>
                    <param name="m" type="OpenMapRealMatrix"/>
                </params>
                <comment line="215">
                    Safety check.                    
                </comment>
                <declaration name="outCols" type="int" line="217"/>
                <declaration name="out" type="OpenMapRealMatrix" line="218"/>
                <scope line="219">
                    <declaration name="value" type="double" line="221"/>
                    <declaration name="key" type="int" line="222"/>
                    <declaration name="i" type="int" line="223"/>
                    <declaration name="k" type="int" line="224"/>
                    <scope line="225">
                        <declaration name="rightKey" type="int" line="226"/>
                        <scope line="227">
                            <declaration name="outKey" type="int" line="228"/>
                            <declaration name="outValue" type="double" line="229"/>
                            <scope line="231"/>
                            <scope line="233"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="243">
                {@inheritDoc}                
            </javadoc>
            <method name="getEntry" type="double" line="245">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <javadoc line="251">
                {@inheritDoc}                
            </javadoc>
            <method name="getRowDimension" type="int" line="253"/>
            <javadoc line="257">
                {@inheritDoc}                
            </javadoc>
            <method name="setEntry" type="void" line="260">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="value" type="double"/>
                </params>
                <scope line="263"/>
                <scope line="265"/>
            </method>
            <javadoc line="270">
                {@inheritDoc}                
            </javadoc>
            <method name="addToEntry" type="void" line="273">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="increment" type="double"/>
                </params>
                <declaration name="key" type="int" line="276"/>
                <declaration name="value" type="double" line="277"/>
                <scope line="278"/>
                <scope line="280"/>
            </method>
            <javadoc line="285">
                {@inheritDoc}                
            </javadoc>
            <method name="multiplyEntry" type="void" line="288">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="factor" type="double"/>
                </params>
                <declaration name="key" type="int" line="291"/>
                <declaration name="value" type="double" line="292"/>
                <scope line="293"/>
                <scope line="295"/>
            </method>
            <javadoc line="300">
                Compute the key to access a matrix element                
                <param>
                    row row index of the matrix element                    
                </param>
                <param>
                    column column index of the matrix element                    
                </param>
                <return>
                    key within the map to access the matrix element                    
                </return>
            </javadoc>
            <method name="computeKey" type="int" line="306">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
        </class>
    </source>