<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.linear">
        <import package="java.io.Serializable"/>
        <import package="org.apache.commons.math3.exception.DimensionMismatchException"/>
        <import package="org.apache.commons.math3.exception.NotStrictlyPositiveException"/>
        <import package="org.apache.commons.math3.exception.NumberIsTooLargeException"/>
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.util.OpenIntToDoubleHashMap"/>
        <class name="OpenMapRealMatrix" line="8">
            <extends class="AbstractRealMatrix"/>
            <implements interface="SparseRealMatrix"/>
            <implements interface="Serializable"/>
            <javadoc line="8">
                Sparse matrix implementation based on an open addressed map.                
                <version>
                    $Id: OpenMapRealMatrix.java 1416643 2012-12-03 19:37:14Z tn $                    
                </version>
                <since>
                    2.0                    
                </since>
                <deprecated>
                    As of version 3.1, this class is deprecated, for reasons exposed
                      in this JIRA
                      <a href="https://issues.apache.org/jira/browse/MATH-870">ticket</a>. This
                      class will be removed in version 4.0.                    
                </deprecated>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="18"/>
            <javadoc line="18">
                Serializable version identifier.                
            </javadoc>
            <declaration name="rows" type="int" line="22"/>
            <javadoc line="22">
                Number of rows of the matrix.                
            </javadoc>
            <declaration name="columns" type="int" line="26"/>
            <javadoc line="26">
                Number of columns of the matrix.                
            </javadoc>
            <declaration name="entries" type="OpenIntToDoubleHashMap" line="30"/>
            <javadoc line="30">
                Storage for (sparse) matrix elements.                
            </javadoc>
            <javadoc line="34">
                Build a sparse matrix with the supplied row and column dimensions.                
                <param>
                    rowDimension Number of rows of the matrix.                    
                </param>
                <param>
                    columnDimension Number of columns of the matrix.                    
                </param>
                <throws>
                    NotStrictlyPositiveException if row or column dimension is not
                      positive.                    
                </throws>
                <throws>
                    NumberIsTooLargeException if the total number of entries of the
                      matrix is larger than {@code Integer.MAX_VALUE}.                    
                </throws>
            </javadoc>
            <method name="OpenMapRealMatrix" type="constructor" line="43">
                <params>
                    <param name="rowDimension" type="int"/>
                    <param name="columnDimension" type="int"/>
                </params>
                <declaration name="lRow" type="long" line="45"/>
                <declaration name="lCol" type="long" line="46"/>
                <scope line="47"/>
            </method>
            <javadoc line="54">
                Build a matrix by copying another one.                
                <param>
                    matrix matrix to copy.                    
                </param>
            </javadoc>
            <method name="OpenMapRealMatrix" type="constructor" line="58">
                <params>
                    <param name="matrix" type="OpenMapRealMatrix"/>
                </params>
            </method>
            <javadoc line="63">
                {@inheritDoc}                
            </javadoc>
            <method name="copy" type="OpenMapRealMatrix" line="66"/>
            <javadoc line="69">
                {@inheritDoc}                
                <throws>
                    NumberIsTooLargeException if the total number of entries of the
                      matrix is larger than {@code Integer.MAX_VALUE}.                    
                </throws>
            </javadoc>
            <method name="createMatrix" type="OpenMapRealMatrix" line="74">
                <params>
                    <param name="rowDimension" type="int"/>
                    <param name="columnDimension" type="int"/>
                </params>
            </method>
            <javadoc line="77">
                {@inheritDoc}                
            </javadoc>
            <method name="getColumnDimension" type="int" line="80"/>
            <javadoc line="83">
                Compute the sum of this matrix and {@code m}.                
                <param>
                    m Matrix to be added.                    
                </param>
                <return>
                    {@code this} + {@code m}.                    
                </return>
                <throws>
                    MatrixDimensionMismatchException if {@code m} is not the same
                      size as {@code this}.                    
                </throws>
            </javadoc>
            <method name="add" type="OpenMapRealMatrix" line="90">
                <params>
                    <param name="m" type="OpenMapRealMatrix"/>
                </params>
                <declaration name="out" type="OpenMapRealMatrix" line="92"/>
                <scope line="93">
                    <declaration name="row" type="int" line="95"/>
                    <declaration name="col" type="int" line="96"/>
                </scope>
            </method>
            <javadoc line="101">
                {@inheritDoc}                
            </javadoc>
            <method name="subtract" type="OpenMapRealMatrix" line="104">
                <params>
                    <param name="m" type="RealMatrix"/>
                </params>
                <scope line="105"/>
                <scope line="108"/>
            </method>
            <javadoc line="112">
                Subtract {@code m} from this matrix.                
                <param>
                    m Matrix to be subtracted.                    
                </param>
                <return>
                    {@code this} - {@code m}.                    
                </return>
                <throws>
                    MatrixDimensionMismatchException if {@code m} is not the same
                      size as {@code this}.                    
                </throws>
            </javadoc>
            <method name="subtract" type="OpenMapRealMatrix" line="119">
                <params>
                    <param name="m" type="OpenMapRealMatrix"/>
                </params>
                <declaration name="out" type="OpenMapRealMatrix" line="121"/>
                <scope line="122">
                    <declaration name="row" type="int" line="124"/>
                    <declaration name="col" type="int" line="125"/>
                </scope>
            </method>
            <javadoc line="130">
                {@inheritDoc}                
                <throws>
                    NumberIsTooLargeException if {@code m} is an{@code OpenMapRealMatrix}, and the total number of entries of the product
                      is larger than {@code Integer.MAX_VALUE}.                    
                </throws>
            </javadoc>
            <method name="multiply" type="RealMatrix" line="135">
                <params>
                    <param name="m" type="RealMatrix"/>
                </params>
                <scope line="136"/>
                <scope line="139">
                    <declaration name="outCols" type="int" line="141"/>
                    <declaration name="out" type="BlockRealMatrix" line="142"/>
                    <scope line="143">
                        <declaration name="value" type="double" line="145"/>
                        <declaration name="key" type="int" line="146"/>
                        <declaration name="i" type="int" line="147"/>
                        <declaration name="k" type="int" line="148"/>
                        <scope line="149"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="156">
                Postmultiply this matrix by {@code m}.                
                <param>
                    m Matrix to postmultiply by.                    
                </param>
                <return>
                    {@code this}  {@code m}.                    
                </return>
                <throws>
                    DimensionMismatchException if the number of rows of {@code m}differ from the number of columns of {@code this} matrix.                    
                </throws>
                <throws>
                    NumberIsTooLargeException if the total number of entries of the
                      product is larger than {@code Integer.MAX_VALUE}.                    
                </throws>
            </javadoc>
            <method name="multiply" type="OpenMapRealMatrix" line="164">
                <params>
                    <param name="m" type="OpenMapRealMatrix"/>
                </params>
                <declaration name="outCols" type="int" line="166"/>
                <declaration name="out" type="OpenMapRealMatrix" line="167"/>
                <scope line="168">
                    <declaration name="value" type="double" line="170"/>
                    <declaration name="key" type="int" line="171"/>
                    <declaration name="i" type="int" line="172"/>
                    <declaration name="k" type="int" line="173"/>
                    <scope line="174">
                        <declaration name="rightKey" type="int" line="175"/>
                        <scope line="176">
                            <declaration name="outKey" type="int" line="177"/>
                            <declaration name="outValue" type="double" line="178"/>
                            <scope line="179"/>
                            <scope line="182"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="190">
                {@inheritDoc}                
            </javadoc>
            <method name="getEntry" type="double" line="193">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
            <javadoc line="198">
                {@inheritDoc}                
            </javadoc>
            <method name="getRowDimension" type="int" line="201"/>
            <javadoc line="204">
                {@inheritDoc}                
            </javadoc>
            <method name="setEntry" type="void" line="207">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="value" type="double"/>
                </params>
                <scope line="210"/>
                <scope line="213"/>
            </method>
            <javadoc line="217">
                {@inheritDoc}                
            </javadoc>
            <method name="addToEntry" type="void" line="220">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="increment" type="double"/>
                </params>
                <declaration name="key" type="int" line="223"/>
                <declaration name="value" type="double" line="224"/>
                <scope line="225"/>
                <scope line="228"/>
            </method>
            <javadoc line="232">
                {@inheritDoc}                
            </javadoc>
            <method name="multiplyEntry" type="void" line="235">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                    <param name="factor" type="double"/>
                </params>
                <declaration name="key" type="int" line="238"/>
                <declaration name="value" type="double" line="239"/>
                <scope line="240"/>
                <scope line="243"/>
            </method>
            <javadoc line="247">
                Compute the key to access a matrix element                
                <param>
                    row row index of the matrix element                    
                </param>
                <param>
                    column column index of the matrix element                    
                </param>
                <return>
                    key within the map to access the matrix element                    
                </return>
            </javadoc>
            <method name="computeKey" type="int" line="253">
                <params>
                    <param name="row" type="int"/>
                    <param name="column" type="int"/>
                </params>
            </method>
        </class>
    </source>