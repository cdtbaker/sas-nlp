<?xml version="1.0" encoding="UTF-8"?>
    <source package="org.apache.commons.math3.distribution">
        <import package="org.apache.commons.math3.exception.OutOfRangeException"/>
        <import package="org.apache.commons.math3.exception.util.LocalizedFormats"/>
        <import package="org.apache.commons.math3.util.FastMath"/>
        <import package="org.apache.commons.math3.random.RandomGenerator"/>
        <import package="org.apache.commons.math3.random.Well19937c"/>
        <class name="GeometricDistribution" line="25">
            <extends class="AbstractIntegerDistribution"/>
            <javadoc line="25">
                Implementation of the geometric distribution.                
                <see>
                    &lt;a href=&quot;http://en.wikipedia.org/wiki/Geometric_distribution&quot;&gt;Geometric distribution (Wikipedia)&lt;/a&gt;                    
                </see>
                <see>
                    &lt;a href=&quot;http://mathworld.wolfram.com/GeometricDistribution.html&quot;&gt;Geometric Distribution (MathWorld)&lt;/a&gt;                    
                </see>
                <version>
                    $Id: GeometricDistribution.java 1533974 2013-10-20 20:42:41Z psteitz $                    
                </version>
                <since>
                    3.3                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="35"/>
            <javadoc line="35">
                Serializable version identifier.                
            </javadoc>
            <declaration name="probabilityOfSuccess" type="double" line="37"/>
            <javadoc line="37">
                The probability of success.                
            </javadoc>
            <javadoc line="40">
                Create a geometric distribution with the given probability of success.                
                <param>
                    p probability of success.                    
                </param>
                <throws>
                    OutOfRangeException if {@code p &lt;= 0} or {@code p &gt; 1}.                    
                </throws>
            </javadoc>
            <method name="GeometricDistribution" type="constructor" line="46">
                <params>
                    <param name="p" type="double"/>
                </params>
            </method>
            <javadoc line="50">
                Creates a geometric distribution.                
                <param>
                    rng Random number generator.                    
                </param>
                <param>
                    p Probability of success.                    
                </param>
                <throws>
                    OutOfRangeException if {@code p &lt;= 0} or {@code p &gt; 1}.                    
                </throws>
            </javadoc>
            <method name="GeometricDistribution" type="constructor" line="57">
                <params>
                    <param name="rng" type="RandomGenerator"/>
                    <param name="p" type="double"/>
                </params>
                <scope line="60"/>
            </method>
            <javadoc line="67">
                Access the probability of success for this distribution.                
                <return>
                    the probability of success.                    
                </return>
            </javadoc>
            <method name="getProbabilityOfSuccess" type="double" line="72"/>
            <javadoc line="76">
                {@inheritDoc}                
            </javadoc>
            <method name="probability" type="double" line="77">
                <params>
                    <param name="x" type="int"/>
                </params>
                <declaration name="ret" type="double" line="78"/>
                <scope line="79"/>
                <scope line="81">
                    <declaration name="p" type="double" line="82"/>
                </scope>
            </method>
            <javadoc line="88">
                {@inheritDoc}                
            </javadoc>
            <method name="logProbability" type="double" line="90">
                <params>
                    <param name="x" type="int"/>
                </params>
                <declaration name="ret" type="double" line="91"/>
                <scope line="92"/>
                <scope line="94">
                    <declaration name="p" type="double" line="95"/>
                </scope>
            </method>
            <javadoc line="101">
                {@inheritDoc}                
            </javadoc>
            <method name="cumulativeProbability" type="double" line="102">
                <params>
                    <param name="x" type="int"/>
                </params>
                <declaration name="ret" type="double" line="103"/>
                <scope line="104"/>
                <scope line="106">
                    <declaration name="p" type="double" line="107"/>
                </scope>
            </method>
            <javadoc line="113">
                {@inheritDoc}For probability parameter {@code p}, the mean is {@code (1 - p) / p}.                
            </javadoc>
            <method name="getNumericalMean" type="double" line="118">
                <declaration name="p" type="double" line="119"/>
            </method>
            <javadoc line="123">
                {@inheritDoc}For probability parameter {@code p}, the variance is{@code (1 - p) / (p  p)}.                
            </javadoc>
            <method name="getNumericalVariance" type="double" line="129">
                <declaration name="p" type="double" line="130"/>
            </method>
            <javadoc line="134">
                {@inheritDoc}The lower bound of the support is always 0.                
                <return>
                    lower bound of the support (always 0)                    
                </return>
            </javadoc>
            <method name="getSupportLowerBound" type="int" line="141"/>
            <javadoc line="145">
                {@inheritDoc}The upper bound of the support is infinite (which we approximate as{@code Integer.MAX_VALUE}).                
                <return>
                    upper bound of the support (always Integer.MAX_VALUE)                    
                </return>
            </javadoc>
            <method name="getSupportUpperBound" type="int" line="153"/>
            <javadoc line="157">
                {@inheritDoc}The support of this distribution is connected.                
                <return>
                    {@code true}                    
                </return>
            </javadoc>
            <method name="isSupportConnected" type="boolean" line="164"/>
        </class>
    </source>