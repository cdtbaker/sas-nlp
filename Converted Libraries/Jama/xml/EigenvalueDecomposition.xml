<?xml version="1.0" encoding="UTF-8"?>
    <source package="Jama">
        <import package="Jama.util"/>
        <class name="EigenvalueDecomposition" line="3">
            <implements interface="java.io.Serializable"/>
            <javadoc line="3">
                Eigenvalues and eigenvectors of a real matrix. 
                  &lt;P&gt;
                  If A is symmetric, then A = VDV&apos; where the eigenvalue matrix D is
                  diagonal and the eigenvector matrix V is orthogonal.
                  I.e. A = V.times(D.times(V.transpose())) and 
                  V.times(V.transpose()) equals the identity matrix.
                  &lt;P&gt;
                  If A is not symmetric, then the eigenvalue matrix D is block diagonal
                  with the real eigenvalues in 1-by-1 blocks and any complex eigenvalues,
                  lambda + imu, in 2-by-2 blocks, [lambda, mu; -mu, lambda].  The
                  columns of V represent the eigenvectors in the sense that AV = VD,
                  i.e. A.times(V) equals V.times(D).  The matrix V may be badly
                  conditioned, or even singular, so the validity of the equation
                  A = VDinverse(V) depends upon V.cond().                
            </javadoc>
            <declaration name="n" type="int" line="20"/>
            <javadoc line="20">
                Row and column dimension (square matrix).                
                <serial>
                    matrix dimension.                    
                </serial>
            </javadoc>
            <declaration name="issymmetric" type="boolean" line="25"/>
            <javadoc line="25">
                Symmetry flag.                
                <serial>
                    internal symmetry flag.                    
                </serial>
            </javadoc>
            <declaration name="d" type="double[]" line="30"/>
            <javadoc line="30">
                Arrays for internal storage of eigenvalues.                
                <serial>
                    internal storage of eigenvalues.                    
                </serial>
            </javadoc>
            <declaration name="V" type="double[][]" line="35"/>
            <javadoc line="35">
                Array for internal storage of eigenvectors.                
                <serial>
                    internal storage of eigenvectors.                    
                </serial>
            </javadoc>
            <declaration name="H" type="double[][]" line="40"/>
            <javadoc line="40">
                Array for internal storage of nonsymmetric Hessenberg form.                
                <serial>
                    internal storage of nonsymmetric Hessenberg form.                    
                </serial>
            </javadoc>
            <declaration name="ort" type="double[]" line="45"/>
            <javadoc line="45">
                Working storage for nonsymmetric algorithm.                
                <serial>
                    working storage for nonsymmetric algorithm.                    
                </serial>
            </javadoc>
            <method name="tred2" type="void" line="50">
                <scope line="51"/>
                <scope line="54">
                    <declaration name="scale" type="double" line="55"/>
                    <declaration name="h" type="double" line="56"/>
                    <scope line="57"/>
                    <scope line="60">
                        <scope line="62"/>
                    </scope>
                    <scope line="68">
                        <scope line="69"/>
                        <declaration name="f" type="double" line="73"/>
                        <declaration name="g" type="double" line="74"/>
                        <scope line="75"/>
                        <scope line="81"/>
                        <scope line="84">
                            <scope line="88"/>
                        </scope>
                        <scope line="95"/>
                        <declaration name="hh" type="double" line="99"/>
                        <scope line="100"/>
                        <scope line="103">
                            <scope line="106"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="115">
                    <declaration name="h" type="double" line="118"/>
                    <scope line="119">
                        <scope line="120"/>
                        <scope line="123">
                            <declaration name="g" type="double" line="124"/>
                            <scope line="125"/>
                            <scope line="128"/>
                        </scope>
                    </scope>
                    <scope line="133"/>
                </scope>
                <scope line="137"/>
            </method>
            <method name="tql2" type="void" line="144">
                <scope line="145"/>
                <declaration name="f" type="double" line="149"/>
                <declaration name="tst1" type="double" line="150"/>
                <declaration name="eps" type="double" line="151"/>
                <scope line="152">
                    <declaration name="m" type="int" line="154"/>
                    <scope line="155">
                        <scope line="156"/>
                    </scope>
                    <scope line="161">
                        <declaration name="iter" type="int" line="162"/>
                        <scope line="163">
                            <declaration name="g" type="double" line="165"/>
                            <declaration name="p" type="double" line="166"/>
                            <declaration name="r" type="double" line="167"/>
                            <scope line="168"/>
                            <declaration name="dl1" type="double" line="173"/>
                            <declaration name="h" type="double" line="174"/>
                            <scope line="175"/>
                            <declaration name="c" type="double" line="180"/>
                            <declaration name="c2" type="double" line="181"/>
                            <declaration name="c3" type="double" line="182"/>
                            <declaration name="el1" type="double" line="183"/>
                            <declaration name="s" type="double" line="184"/>
                            <declaration name="s2" type="double" line="185"/>
                            <scope line="186">
                                <scope line="198"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="213">
                    <declaration name="k" type="int" line="214"/>
                    <declaration name="p" type="double" line="215"/>
                    <scope line="216">
                        <scope line="217"/>
                    </scope>
                    <scope line="222">
                        <scope line="225"/>
                    </scope>
                </scope>
            </method>
            <method name="orthes" type="void" line="233">
                <declaration name="low" type="int" line="234"/>
                <declaration name="high" type="int" line="235"/>
                <scope line="236">
                    <declaration name="scale" type="double" line="237"/>
                    <scope line="238"/>
                    <scope line="241">
                        <declaration name="h" type="double" line="242"/>
                        <scope line="243"/>
                        <declaration name="g" type="double" line="247"/>
                        <scope line="248"/>
                        <scope line="253">
                            <declaration name="f" type="double" line="254"/>
                            <scope line="255"/>
                            <scope line="259"/>
                        </scope>
                        <scope line="263">
                            <declaration name="f" type="double" line="264"/>
                            <scope line="265"/>
                            <scope line="269"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="277">
                    <scope line="278"/>
                </scope>
                <scope line="282">
                    <scope line="283">
                        <scope line="284"/>
                        <scope line="287">
                            <declaration name="g" type="double" line="288"/>
                            <scope line="289"/>
                            <scope line="293"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <declaration name="cdivr" type="double" line="300"/>
            <method name="cdiv" type="void" line="301">
                <params>
                    <param name="xr" type="double"/>
                    <param name="xi" type="double"/>
                    <param name="yr" type="double"/>
                    <param name="yi" type="double"/>
                </params>
                <declaration name="r" type="double" line="302"/>
                <scope line="303"/>
                <scope line="309"/>
            </method>
            <method name="hqr2" type="void" line="316">
                <declaration name="nn" type="int" line="317"/>
                <declaration name="n" type="int" line="318"/>
                <declaration name="low" type="int" line="319"/>
                <declaration name="high" type="int" line="320"/>
                <declaration name="eps" type="double" line="321"/>
                <declaration name="exshift" type="double" line="322"/>
                <declaration name="p" type="double" line="323"/>
                <declaration name="norm" type="double" line="324"/>
                <scope line="325">
                    <scope line="326"/>
                    <scope line="330"/>
                </scope>
                <declaration name="iter" type="int" line="334"/>
                <scope line="335">
                    <declaration name="l" type="int" line="336"/>
                    <scope line="337">
                        <scope line="339"/>
                        <scope line="342"/>
                    </scope>
                    <scope line="347"/>
                    <scope line="354">
                        <scope line="362">
                            <scope line="363"/>
                            <scope line="366"/>
                            <scope line="371"/>
                            <scope line="383"/>
                            <scope line="388"/>
                            <scope line="393"/>
                        </scope>
                        <scope line="399"/>
                    </scope>
                    <scope line="408">
                        <scope line="412"/>
                        <scope line="416">
                            <scope line="418"/>
                        </scope>
                        <scope line="425">
                            <scope line="428">
                                <scope line="430"/>
                                <scope line="434"/>
                            </scope>
                        </scope>
                        <declaration name="m" type="int" line="442"/>
                        <scope line="443">
                            <scope line="454"/>
                            <scope line="457"/>
                        </scope>
                        <scope line="462">
                            <scope line="464"/>
                        </scope>
                        <scope line="468">
                            <declaration name="notlast" type="boolean" line="469"/>
                            <scope line="470">
                                <scope line="475"/>
                            </scope>
                            <scope line="483"/>
                            <scope line="486">
                                <scope line="487"/>
                                <scope line="490"/>
                                <scope line="499">
                                    <scope line="501"/>
                                </scope>
                                <scope line="508">
                                    <scope line="510"/>
                                </scope>
                                <scope line="517">
                                    <scope line="519"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="530"/>
                <scope line="533">
                    <scope line="536">
                        <declaration name="l" type="int" line="537"/>
                        <scope line="539">
                            <scope line="542"/>
                            <scope line="545"/>
                            <scope line="549">
                                <scope line="551">
                                    <scope line="552"/>
                                    <scope line="555"/>
                                </scope>
                                <scope line="559">
                                    <scope line="565"/>
                                    <scope line="568"/>
                                </scope>
                                <scope line="573">
                                    <scope line="574"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="581">
                        <declaration name="l" type="int" line="582"/>
                        <scope line="583"/>
                        <scope line="587"/>
                        <scope line="594">
                            <declaration name="ra" type="double" line="595"/>
                            <scope line="598"/>
                            <scope line="603"/>
                            <scope line="608">
                                <scope line="610"/>
                                <scope line="615">
                                    <scope line="620"/>
                                    <scope line="626"/>
                                    <scope line="630"/>
                                </scope>
                                <scope line="637">
                                    <scope line="638"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="647">
                    <scope line="648">
                        <scope line="649"/>
                    </scope>
                </scope>
                <scope line="654">
                    <scope line="655">
                        <scope line="657"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="664">
                Check for symmetry, then construct the eigenvalue decomposition
                  Structure to access D and V.                
                <param>
                    Arg    Square matrix                    
                </param>
            </javadoc>
            <method name="EigenvalueDecomposition" type="constructor" line="669">
                <params>
                    <param name="Arg" type="Matrix"/>
                </params>
                <declaration name="A" type="double[][]" line="670"/>
                <scope line="676">
                    <scope line="677"/>
                </scope>
                <scope line="681">
                    <scope line="682">
                        <scope line="683"/>
                    </scope>
                </scope>
                <scope line="690">
                    <scope line="693">
                        <scope line="694"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="702">
                Return the eigenvector matrix                
                <return>
                    V                    
                </return>
            </javadoc>
            <method name="getV" type="Matrix" line="706"/>
            <javadoc line="709">
                Return the real parts of the eigenvalues                
                <return>
                    real(diag(D))                    
                </return>
            </javadoc>
            <method name="getRealEigenvalues" type="double[]" line="713"/>
            <javadoc line="716">
                Return the imaginary parts of the eigenvalues                
                <return>
                    imag(diag(D))                    
                </return>
            </javadoc>
            <method name="getImagEigenvalues" type="double[]" line="720"/>
            <javadoc line="723">
                Return the block diagonal eigenvalue matrix                
                <return>
                    D                    
                </return>
            </javadoc>
            <method name="getD" type="Matrix" line="727">
                <declaration name="X" type="Matrix" line="728"/>
                <declaration name="D" type="double[][]" line="729"/>
                <scope line="730">
                    <scope line="731"/>
                    <scope line="735"/>
                    <scope line="738"/>
                </scope>
            </method>
            <declaration name="serialVersionUID" type="long" line="744"/>
        </class>
    </source>