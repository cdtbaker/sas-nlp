<?xml version="1.0" encoding="UTF-8"?>
    <source package="Jama">
        <class name="CholeskyDecomposition" line="2">
            <implements interface="java.io.Serializable"/>
            <javadoc line="2">
                Cholesky Decomposition.
                  &lt;P&gt;
                  For a symmetric, positive definite matrix A, the Cholesky decomposition
                  is an lower triangular matrix L so that A = LL&apos;.
                  &lt;P&gt;
                  If the matrix is not symmetric or positive definite, the constructor
                  returns a partial decomposition and sets an internal flag that may
                  be queried by the isSPD() method.                
            </javadoc>
            <declaration name="L" type="double[][]" line="13"/>
            <javadoc line="13">
                Array for internal storage of decomposition.                
                <serial>
                    internal array storage.                    
                </serial>
            </javadoc>
            <declaration name="n" type="int" line="18"/>
            <javadoc line="18">
                Row and column dimension (square matrix).                
                <serial>
                    matrix dimension.                    
                </serial>
            </javadoc>
            <declaration name="isspd" type="boolean" line="23"/>
            <javadoc line="23">
                Symmetric and positive definite flag.                
                <serial>
                    is symmetric and positive definite flag.                    
                </serial>
            </javadoc>
            <javadoc line="28">
                Cholesky algorithm for symmetric and positive definite matrix.
                  Structure to access L and isspd flag.                
                <param>
                    Arg   Square, symmetric matrix.                    
                </param>
            </javadoc>
            <method name="CholeskyDecomposition" type="constructor" line="33">
                <params>
                    <param name="Arg" type="Matrix"/>
                </params>
                <declaration name="A" type="double[][]" line="34"/>
                <scope line="38">
                    <declaration name="Lrowj" type="double[]" line="39"/>
                    <declaration name="d" type="double" line="40"/>
                    <scope line="41">
                        <declaration name="Lrowk" type="double[]" line="42"/>
                        <declaration name="s" type="double" line="43"/>
                        <scope line="44"/>
                    </scope>
                    <scope line="54"/>
                </scope>
            </method>
            <javadoc line="59">
                Is the matrix symmetric and positive definite?                
                <return>
                    true if A is symmetric and positive definite.                    
                </return>
            </javadoc>
            <method name="isSPD" type="boolean" line="63"/>
            <javadoc line="66">
                Return triangular factor.                
                <return>
                    L                    
                </return>
            </javadoc>
            <method name="getL" type="Matrix" line="70"/>
            <javadoc line="73">
                Solve AX = B                
                <param>
                    B   A Matrix with as many rows as A and any number of columns.                    
                </param>
                <return>
                    X so that LL'X = B                    
                </return>
                <exception>
                    IllegalArgumentException  Matrix row dimensions must agree.                    
                </exception>
                <exception>
                    RuntimeException  Matrix is not symmetric positive definite.                    
                </exception>
            </javadoc>
            <method name="solve" type="Matrix" line="80">
                <params>
                    <param name="B" type="Matrix"/>
                </params>
                <scope line="81"/>
                <scope line="84"/>
                <declaration name="X" type="double[][]" line="87"/>
                <declaration name="nx" type="int" line="88"/>
                <scope line="89">
                    <scope line="90">
                        <scope line="91"/>
                    </scope>
                </scope>
                <scope line="97">
                    <scope line="98">
                        <scope line="99"/>
                    </scope>
                </scope>
            </method>
            <declaration name="serialVersionUID" type="long" line="107"/>
        </class>
    </source>