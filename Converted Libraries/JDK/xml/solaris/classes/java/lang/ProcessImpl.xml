<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang">
        <import package="java.io.IOException"/>
        <import package="java.io.FileInputStream"/>
        <import package="java.io.FileOutputStream"/>
        <import package="java.lang.ProcessBuilder.Redirect"/>
        <import package="java.lang.ProcessBuilder.Redirect"/>
        <class name="ProcessImpl" line="34">
            <comment line="46">
                Not instantiable                
            </comment>
            <comment line="60">
                Only for use by ProcessBuilder.start()                
            </comment>
            <javadoc line="34">
                This class is for the exclusive use of ProcessBuilder.start() to
                  create new processes.                
                <author>
                    Martin Buchholz                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="fdAccess" type="sun.misc.JavaIOFileDescriptorAccess" line="42"/>
            <method name="ProcessImpl" type="constructor" line="45"/>
            <method name="toCString" type="byte[]" line="47">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="bytes" type="byte[]" line="50"/>
                <declaration name="result" type="byte[]" line="51"/>
            </method>
            <method name="start" type="Process" line="66">
                <params>
                    <param name="cmdarray" type="String[]"/>
                    <param name="environment" type="java.util.Map<String,String>"/>
                    <param name="dir" type="String"/>
                    <param name="redirects" type="ProcessBuilder.Redirect[]"/>
                    <param name="redirectErrorStream" type="boolean"/>
                </params>
                <comment line="69">
                    Convert arguments to a contiguous block; it&apos;s easier to do                    
                </comment>
                <comment line="70">
                    memory management in Java than in C.                    
                </comment>
                <comment line="72">
                    For added NUL bytes                    
                </comment>
                <comment line="82">
                    No need to write NUL bytes explicitly                    
                </comment>
                <comment line="138">
                    In theory, close() can throw IOException                    
                </comment>
                <comment line="139">
                    (although it is rather unlikely to happen here)                    
                </comment>
                <declaration name="args" type="byte[][]" line="71"/>
                <declaration name="size" type="int" line="72"/>
                <scope line="73"/>
                <declaration name="argBlock" type="byte[]" line="77"/>
                <declaration name="i" type="int" line="78"/>
                <scope line="79"/>
                <declaration name="envc" type="int[]" line="85"/>
                <declaration name="envBlock" type="byte[]" line="86"/>
                <declaration name="std_fds" type="int[]" line="88"/>
                <declaration name="f0" type="FileInputStream" line="90"/>
                <declaration name="f1" type="FileOutputStream" line="91"/>
                <declaration name="f2" type="FileOutputStream" line="92"/>
                <scope line="94">
                    <scope line="95"/>
                    <scope line="97">
                        <scope line="104"/>
                        <scope line="113"/>
                        <scope line="123"/>
                    </scope>
                </scope>
                <scope line="137">
                    <scope line="140"/>
                    <scope line="141">
                        <scope line="142"/>
                        <scope line="143"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>