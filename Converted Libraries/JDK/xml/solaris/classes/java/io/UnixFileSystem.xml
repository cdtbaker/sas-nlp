<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.io">
        <import package="java.security.AccessController"/>
        <import package="sun.security.action.GetPropertyAction"/>
        <class name="UnixFileSystem" line="32">
            <extends class="FileSystem"/>
            <comment line="49">
                                
            </comment>
            <comment line="59">
                A normal Unix pathname contains no duplicate slashes and does not end                
            </comment>
            <comment line="62">
                Normalize the given pathname, whose length is len, starting at the given                
            </comment>
            <comment line="81">
                Check that the given pathname is normal.  If not, invoke the real
                normalizer on the part of the pathname that requires normalization.                
            </comment>
            <comment line="126">
                                
            </comment>
            <comment line="137">
                Caches for canonicalization results to improve startup performance.                
            </comment>
            <comment line="138">
                The first cache handles repeated canonicalizations of the same path                
            </comment>
            <comment line="139">
                name. The prefix cache handles repeated canonicalizations within the                
            </comment>
            <comment line="140">
                same directory, and must not create results differing from the true                
            </comment>
            <comment line="141">
                canonicalization algorithm in canonicalize_md.c. For this reason the                
            </comment>
            <comment line="142">
                prefix cache is conservative and is not used for complex path names.                
            </comment>
            <comment line="144">
                On Unix symlinks can jump anywhere in the file system, so we only                
            </comment>
            <comment line="145">
                treat prefixes in java.home as trusted and cacheable in the                
            </comment>
            <comment line="146">
                canonicalization algorithm                
            </comment>
            <comment line="195">
                Best-effort attempt to get parent of this path; used for                
            </comment>
            <comment line="196">
                optimization of filename canonicalization. This must return null for                
            </comment>
            <comment line="197">
                any cases where the code in canonicalize_md.c would throw an                
            </comment>
            <comment line="198">
                exception or otherwise deal with non-simple pathnames like handling                
            </comment>
            <comment line="199">
                of &quot;.&quot; and &quot;..&quot;. It may conservatively return null in other                
            </comment>
            <comment line="200">
                situations as well. Returning null will cause the underlying                
            </comment>
            <comment line="201">
                (expensive) canonicalization routine to be called.                
            </comment>
            <comment line="238">
                                
            </comment>
            <comment line="254">
                                
            </comment>
            <comment line="286">
                                
            </comment>
            <comment line="300">
                                
            </comment>
            <comment line="303">
                                
            </comment>
            <declaration name="slash" type="char" line="34"/>
            <declaration name="colon" type="char" line="35"/>
            <declaration name="javaHome" type="String" line="36"/>
            <method name="UnixFileSystem" type="constructor" line="38"/>
            <method name="getSeparator" type="char" line="50"/>
            <method name="getPathSeparator" type="char" line="54"/>
            <method name="normalize" type="String" line="63">
                <params>
                    <param name="pathname" type="String"/>
                    <param name="len" type="int"/>
                    <param name="off" type="int"/>
                </params>
                <declaration name="n" type="int" line="65"/>
                <declaration name="sb" type="StringBuffer" line="68"/>
                <declaration name="prevChar" type="char" line="70"/>
                <scope line="71">
                    <declaration name="c" type="char" line="72"/>
                </scope>
            </method>
            <method name="normalize" type="String" line="83">
                <params>
                    <param name="pathname" type="String"/>
                </params>
                <declaration name="n" type="int" line="84"/>
                <declaration name="prevChar" type="char" line="85"/>
                <scope line="86">
                    <declaration name="c" type="char" line="87"/>
                </scope>
            </method>
            <method name="prefixLength" type="int" line="96">
                <params>
                    <param name="pathname" type="String"/>
                </params>
            </method>
            <method name="resolve" type="String" line="101">
                <params>
                    <param name="parent" type="String"/>
                    <param name="child" type="String"/>
                </params>
                <scope line="103"/>
            </method>
            <method name="getDefaultParent" type="String" line="111"/>
            <method name="fromURIPath" type="String" line="115">
                <params>
                    <param name="path" type="String"/>
                </params>
                <comment line="118">
                    &quot;/foo/&quot; --&gt; &quot;/foo&quot;, but &quot;/&quot; --&gt; &quot;/&quot;                    
                </comment>
                <declaration name="p" type="String" line="116"/>
                <scope line="117"/>
            </method>
            <method name="isAbsolute" type="boolean" line="127">
                <params>
                    <param name="f" type="File"/>
                </params>
            </method>
            <method name="resolve" type="String" line="131">
                <params>
                    <param name="f" type="File"/>
                </params>
            </method>
            <declaration name="cache" type="ExpiringCache" line="142"/>
            <declaration name="javaHomePrefixCache" type="ExpiringCache" line="146"/>
            <method name="canonicalize" type="String" line="148">
                <params>
                    <param name="path" type="String"/>
                </params>
                <comment line="157">
                    Note that this can cause symlinks that should                    
                </comment>
                <comment line="158">
                    be resolved to a destination directory to be                    
                </comment>
                <comment line="159">
                    resolved to the directory they&apos;re contained in                    
                </comment>
                <comment line="164">
                    Hit only in prefix cache; full path is canonical                    
                </comment>
                <comment line="177">
                    Note that we don&apos;t allow a resolved symlink                    
                </comment>
                <comment line="178">
                    to elsewhere in java.home to pollute the                    
                </comment>
                <comment line="179">
                    prefix cache (java.home prefix cache could                    
                </comment>
                <comment line="180">
                    just as easily be a set at this point)                    
                </comment>
                <scope line="149"/>
                <scope line="151">
                    <declaration name="res" type="String" line="152"/>
                    <scope line="153">
                        <declaration name="dir" type="String" line="154"/>
                        <declaration name="resDir" type="String" line="155"/>
                        <scope line="156">
                            <scope line="161">
                                <scope line="163">
                                    <declaration name="filename" type="String" line="165"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="171">
                            <scope line="175">
                                <scope line="181">
                                    <declaration name="f" type="File" line="182"/>
                                    <scope line="183"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="canonicalize0" type="String" line="193"/>
            <method name="parentOrNull" type="String" line="201">
                <params>
                    <param name="path" type="String"/>
                </params>
                <comment line="212">
                    Punt on pathnames containing . and ..                    
                </comment>
                <comment line="217">
                    Punt on pathnames containing . and ..                    
                </comment>
                <comment line="223">
                    Punt on pathnames containing adjacent slashes                    
                </comment>
                <comment line="224">
                    toward the end                    
                </comment>
                <declaration name="sep" type="char" line="203"/>
                <declaration name="last" type="int" line="204"/>
                <declaration name="idx" type="int" line="205"/>
                <declaration name="adjacentDots" type="int" line="206"/>
                <declaration name="nonDotCount" type="int" line="207"/>
                <scope line="208">
                    <declaration name="c" type="char" line="209"/>
                    <scope line="210">
                        <scope line="211"/>
                    </scope>
                    <scope line="215">
                        <scope line="216"/>
                        <scope line="222"/>
                    </scope>
                    <scope line="228"/>
                </scope>
            </method>
            <method name="getBooleanAttributes0" type="int" line="239"/>
            <method name="getBooleanAttributes" type="int" line="241">
                <params>
                    <param name="f" type="File"/>
                </params>
                <declaration name="rv" type="int" line="242"/>
                <declaration name="name" type="String" line="243"/>
                <declaration name="hidden" type="boolean" line="244"/>
            </method>
            <method name="checkAccess" type="boolean" line="248"/>
            <method name="getLastModifiedTime" type="long" line="249"/>
            <method name="getLength" type="long" line="250"/>
            <method name="setPermission" type="boolean" line="251"/>
            <method name="createFileExclusively" type="boolean" line="255"/>
            <method name="delete" type="boolean" line="257">
                <params>
                    <param name="f" type="File"/>
                </params>
                <comment line="258">
                    Keep canonicalization caches in sync after file deletion                    
                </comment>
                <comment line="259">
                    and renaming operations. Could be more clever than this                    
                </comment>
                <comment line="260">
                    (i.e., only remove/update affected entries) but probably                    
                </comment>
                <comment line="261">
                    not worth it since these entries expire after 30 seconds                    
                </comment>
                <comment line="262">
                    anyway.                    
                </comment>
            </method>
            <method name="delete0" type="boolean" line="267"/>
            <method name="list" type="String[]" line="268"/>
            <method name="createDirectory" type="boolean" line="269"/>
            <method name="rename" type="boolean" line="270">
                <params>
                    <param name="f1" type="File"/>
                    <param name="f2" type="File"/>
                </params>
                <comment line="271">
                    Keep canonicalization caches in sync after file deletion                    
                </comment>
                <comment line="272">
                    and renaming operations. Could be more clever than this                    
                </comment>
                <comment line="273">
                    (i.e., only remove/update affected entries) but probably                    
                </comment>
                <comment line="274">
                    not worth it since these entries expire after 30 seconds                    
                </comment>
                <comment line="275">
                    anyway.                    
                </comment>
            </method>
            <method name="rename0" type="boolean" line="280"/>
            <method name="setLastModifiedTime" type="boolean" line="281"/>
            <method name="setReadOnly" type="boolean" line="282"/>
            <method name="listRoots" type="File[]" line="287">
                <scope line="288">
                    <declaration name="security" type="SecurityManager" line="289"/>
                    <scope line="290"/>
                </scope>
                <scope line="294"/>
            </method>
            <method name="getSpace" type="long" line="300"/>
            <method name="compare" type="int" line="304">
                <params>
                    <param name="f1" type="File"/>
                    <param name="f2" type="File"/>
                </params>
            </method>
            <method name="hashCode" type="int" line="308">
                <params>
                    <param name="f" type="File"/>
                </params>
            </method>
            <method name="initIDs" type="void" line="313"/>
            <scope line="315"/>
        </class>
    </source>