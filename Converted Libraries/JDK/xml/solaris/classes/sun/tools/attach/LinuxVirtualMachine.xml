<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.attach">
        <import package="com.sun.tools.attach.VirtualMachine"/>
        <import package="com.sun.tools.attach.AgentLoadException"/>
        <import package="com.sun.tools.attach.AttachNotSupportedException"/>
        <import package="com.sun.tools.attach.spi.AttachProvider"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.File"/>
        <import package="java.util.Properties"/>
        <class name="LinuxVirtualMachine" line="39">
            <extends class="HotSpotVirtualMachine"/>
            <comment line="41">
                temp directory for socket file                
            </comment>
            <comment line="44">
                Indicates if this machine uses the old LinuxThreads                
            </comment>
            <comment line="47">
                The patch to the socket file created by the target VM                
            </comment>
            <comment line="138">
                protocol version                
            </comment>
            <comment line="141">
                known errors                
            </comment>
            <comment line="229">
                InputStream for the socket connection to get target VM                
            </comment>
            <comment line="264">
                Return the socket file for the given process.                
            </comment>
            <comment line="265">
                Checks working directory of process for .java_pid&lt;pid&gt;. If not                
            </comment>
            <comment line="266">
                found it looks in temp directory.                
            </comment>
            <comment line="281">
                On Solaris/Linux a simple handshake is used to start the attach mechanism                
            </comment>
            <comment line="282">
                if not already started. The client creates a .attach_pid&lt;pid&gt; file in the                
            </comment>
            <comment line="283">
                target VM&apos;s working directory (or temp directory), and the SIGQUIT handler                
            </comment>
            <comment line="284">
                checks for the file.                
            </comment>
            <comment line="298">
                Writesends the given to the target VM. String is transmitted in
                 UTF-8 encoding.                
            </comment>
            <comment line="318">
                -- native methods                
            </comment>
            <declaration name="tmpdir" type="String" line="41"/>
            <declaration name="isLinuxThreads" type="boolean" line="44"/>
            <declaration name="path" type="String" line="47"/>
            <javadoc line="49">
                Attaches to the target VM                
            </javadoc>
            <method name="LinuxVirtualMachine" type="constructor" line="54">
                <params>
                    <param name="provider" type="AttachProvider"/>
                    <param name="vmid" type="String"/>
                </params>
                <comment line="57">
                    This provider only understands pids                    
                </comment>
                <comment line="65">
                    Find the socket file. If not found then we attempt to start the                    
                </comment>
                <comment line="66">
                    attach mechanism in the target VM by sending it a QUIT signal.                    
                </comment>
                <comment line="67">
                    Then we attempt to find the socket file again.                    
                </comment>
                <comment line="72">
                    On LinuxThreads each thread is a process and we don&apos;t have the                    
                </comment>
                <comment line="73">
                    pid of the VMThread which has SIGQUIT unblocked. To workaround                    
                </comment>
                <comment line="74">
                    this we get the pid of the &quot;manager thread&quot; that is created                    
                </comment>
                <comment line="75">
                    by the first call to pthread_create. This is parent of all                    
                </comment>
                <comment line="76">
                    threads (except the initial thread).                    
                </comment>
                <comment line="90">
                    give the target VM time to start the attach mechanism                    
                </comment>
                <comment line="111">
                    Check that the file owner/permission to avoid attaching to                    
                </comment>
                <comment line="112">
                    bogus process                    
                </comment>
                <comment line="115">
                    Check that we can connect to the process                    
                </comment>
                <comment line="116">
                    - this ensures we throw the permission denied error now rather than                    
                </comment>
                <comment line="117">
                    later when we attempt to enqueue a command.                    
                </comment>
                <declaration name="pid" type="int" line="58"/>
                <scope line="59"/>
                <scope line="61"/>
                <scope line="69">
                    <declaration name="f" type="File" line="70"/>
                    <scope line="71">
                        <scope line="77">
                            <declaration name="mpid" type="int" line="78"/>
                            <scope line="79"/>
                            <scope line="81"/>
                        </scope>
                        <scope line="86"/>
                        <declaration name="i" type="int" line="91"/>
                        <declaration name="delay" type="long" line="92"/>
                        <declaration name="retries" type="int" line="93"/>
                        <scope line="94">
                            <scope line="95"/>
                            <scope line="97"/>
                        </scope>
                        <scope line="101"/>
                    </scope>
                    <scope line="106"/>
                </scope>
                <declaration name="s" type="int" line="118"/>
                <scope line="119"/>
                <scope line="121"/>
            </method>
            <javadoc line="126">
                Detach from the target VM                
            </javadoc>
            <method name="detach" type="void" line="129">
                <scope line="130">
                    <scope line="131"/>
                </scope>
            </method>
            <declaration name="PROTOCOL_VERSION" type="String" line="138"/>
            <declaration name="ATTACH_ERROR_BADVERSION" type="int" line="141"/>
            <javadoc line="143">
                Execute the given command in the target VM.                
            </javadoc>
            <method name="execute" type="InputStream" line="146">
                <params>
                    <param name="cmd" type="String"/>
                    <param name="args" type="Object"/>
                </params>
                <comment line="147">
                    includes null                    
                </comment>
                <comment line="149">
                    did we detach?                    
                </comment>
                <comment line="158">
                    create UNIX socket                    
                </comment>
                <comment line="161">
                    connect to target VM                    
                </comment>
                <comment line="171">
                    connected - write request                    
                </comment>
                <comment line="172">
                    &lt;ver&gt; &lt;cmd&gt; &lt;args...&gt;                    
                </comment>
                <comment line="189">
                    Create an input stream to read reply                    
                </comment>
                <comment line="192">
                    Read the command completion status                    
                </comment>
                <comment line="208">
                    In the event of a protocol mismatch then the target VM                    
                </comment>
                <comment line="209">
                    returns a known error so that we can throw a reasonable                    
                </comment>
                <comment line="210">
                    error.                    
                </comment>
                <comment line="215">
                    Special-case the &quot;load&quot; command so that the right exception is                    
                </comment>
                <comment line="216">
                    thrown.                    
                </comment>
                <comment line="224">
                    Return the input stream so that the command output can be read                    
                </comment>
                <declaration name="p" type="String" line="150"/>
                <scope line="151">
                    <scope line="152"/>
                </scope>
                <declaration name="s" type="int" line="159"/>
                <scope line="162"/>
                <scope line="164"/>
                <declaration name="ioe" type="IOException" line="169"/>
                <scope line="173">
                    <scope line="177">
                        <scope line="178"/>
                        <scope line="180"/>
                    </scope>
                </scope>
                <scope line="184"/>
                <declaration name="sis" type="SocketInputStream" line="190"/>
                <declaration name="completionStatus" type="int" line="193"/>
                <scope line="194"/>
                <scope line="196">
                    <scope line="198"/>
                    <scope line="200"/>
                </scope>
                <scope line="205">
                    <scope line="211"/>
                    <scope line="217"/>
                    <scope line="219"/>
                </scope>
            </method>
            <class name="SocketInputStream" line="231">
                <extends class="InputStream"/>
                <declaration name="s" type="int" line="232"/>
                <method name="SocketInputStream" type="constructor" line="234">
                    <params>
                        <param name="s" type="int"/>
                    </params>
                </method>
                <method name="read" type="int" line="238">
                    <declaration name="b" type="byte" line="239"/>
                    <declaration name="n" type="int" line="240"/>
                    <scope line="241"/>
                    <scope line="243"/>
                </method>
                <method name="read" type="int" line="248">
                    <params>
                        <param name="bs" type="byte[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                    <scope line="250"/>
                </method>
                <method name="close" type="void" line="258"/>
            </class>
            <method name="findSocketFile" type="String" line="266">
                <params>
                    <param name="pid" type="int"/>
                </params>
                <comment line="267">
                    First check for a .java_pid&lt;pid&gt; file in the working directory                    
                </comment>
                <comment line="268">
                    of the target process                    
                </comment>
                <comment line="273">
                    Not found, so try temp directory                    
                </comment>
                <declaration name="fn" type="String" line="269"/>
                <declaration name="path" type="String" line="270"/>
                <declaration name="f" type="File" line="271"/>
                <scope line="272"/>
            </method>
            <method name="createAttachFile" type="File" line="284">
                <params>
                    <param name="pid" type="int"/>
                </params>
                <declaration name="fn" type="String" line="285"/>
                <declaration name="path" type="String" line="286"/>
                <declaration name="f" type="File" line="287"/>
                <scope line="288"/>
                <scope line="290"/>
            </method>
            <method name="writeString" type="void" line="301">
                <params>
                    <param name="fd" type="int"/>
                    <param name="s" type="String"/>
                </params>
                <scope line="302">
                    <declaration name="b" type="byte" line="303"/>
                    <scope line="304"/>
                    <scope line="306"/>
                </scope>
                <declaration name="b" type="byte" line="311"/>
            </method>
            <method name="isLinuxThreads" type="boolean" line="319"/>
            <method name="getLinuxThreadsManager" type="int" line="321"/>
            <method name="sendQuitToChildrenOf" type="void" line="323"/>
            <method name="sendQuitTo" type="void" line="325"/>
            <method name="checkPermissions" type="void" line="327"/>
            <method name="socket" type="int" line="329"/>
            <method name="connect" type="void" line="331"/>
            <method name="close" type="void" line="333"/>
            <method name="read" type="int" line="335"/>
            <method name="write" type="void" line="337"/>
            <scope line="339"/>
        </class>
    </source>