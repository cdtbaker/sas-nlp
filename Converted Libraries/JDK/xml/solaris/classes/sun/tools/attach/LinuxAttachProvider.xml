<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tools.attach">
        <import package="com.sun.tools.attach.VirtualMachine"/>
        <import package="com.sun.tools.attach.VirtualMachineDescriptor"/>
        <import package="com.sun.tools.attach.AttachNotSupportedException"/>
        <import package="com.sun.tools.attach.spi.AttachProvider"/>
        <import package="java.io.IOException"/>
        <class name="LinuxAttachProvider" line="38">
            <extends class="HotSpotAttachProvider"/>
            <comment line="41">
                perf counter for the JVM version                
            </comment>
            <declaration name="JVM_VERSION" type="String" line="41"/>
            <method name="LinuxAttachProvider" type="constructor" line="43"/>
            <method name="name" type="String" line="46"/>
            <method name="type" type="String" line="50"/>
            <method name="attachVirtualMachine" type="VirtualMachine" line="56">
                <params>
                    <param name="vmid" type="String"/>
                </params>
                <comment line="60">
                    AttachNotSupportedException will be thrown if the target VM can be determined
                     to be not attachable.                    
                </comment>
            </method>
            <method name="attachVirtualMachine" type="VirtualMachine" line="68">
                <params>
                    <param name="vmd" type="VirtualMachineDescriptor"/>
                </params>
                <comment line="73">
                    To avoid re-checking if the VM if attachable, we check if the descriptor
                     is for a hotspot VM - these descriptors are created by the listVirtualMachines
                     implementation which only returns a list of attachable VMs.                    
                </comment>
                <scope line="69"/>
                <scope line="75"/>
                <scope line="79"/>
            </method>
        </class>
    </source>