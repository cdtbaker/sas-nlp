<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.xr">
        <import package="java.awt"/>
        <import package="java.awt.MultipleGradientPaint"/>
        <import package="java.awt.image"/>
        <import package="sun.java2d.loops"/>
        <import package="java.awt.AlphaComposite"/>
        <class name="XRUtils" line="7">
            <javadoc line="7">
                XRender constants and utility methods.                
                <author>
                    Clemens Eisserer                    
                </author>
            </javadoc>
            <declaration name="None" type="int" line="12"/>
            <declaration name="PictOpClear" type="byte" line="13"/>
            <declaration name="PictOpSrc" type="byte" line="14"/>
            <declaration name="PictOpDst" type="byte" line="15"/>
            <declaration name="PictOpOver" type="byte" line="16"/>
            <declaration name="PictOpOverReverse" type="byte" line="17"/>
            <declaration name="PictOpIn" type="byte" line="18"/>
            <declaration name="PictOpInReverse" type="byte" line="19"/>
            <declaration name="PictOpOut" type="byte" line="20"/>
            <declaration name="PictOpOutReverse" type="byte" line="21"/>
            <declaration name="PictOpAtop" type="byte" line="22"/>
            <declaration name="PictOpAtopReverse" type="byte" line="23"/>
            <declaration name="PictOpXor" type="byte" line="24"/>
            <declaration name="PictOpAdd" type="byte" line="25"/>
            <declaration name="PictOpSaturate" type="byte" line="26"/>
            <declaration name="RepeatNone" type="int" line="27"/>
            <declaration name="RepeatNormal" type="int" line="28"/>
            <declaration name="RepeatPad" type="int" line="29"/>
            <declaration name="RepeatReflect" type="int" line="30"/>
            <declaration name="FAST" type="int" line="31"/>
            <declaration name="GOOD" type="int" line="32"/>
            <declaration name="BEST" type="int" line="33"/>
            <declaration name="FAST_NAME" type="byte[]" line="34"/>
            <declaration name="GOOD_NAME" type="byte[]" line="35"/>
            <declaration name="BEST_NAME" type="byte[]" line="36"/>
            <declaration name="PictStandardARGB32" type="int" line="37"/>
            <declaration name="PictStandardRGB24" type="int" line="38"/>
            <declaration name="PictStandardA8" type="int" line="39"/>
            <declaration name="PictStandardA4" type="int" line="40"/>
            <declaration name="PictStandardA1" type="int" line="41"/>
            <javadoc line="42">
                Maps the specified affineTransformOp to the corresponding XRender image
                  filter.                
            </javadoc>
            <method name="ATransOpToXRQuality" type="int" line="46">
                <params>
                    <param name="affineTranformOp" type="int"/>
                </params>
            </method>
            <javadoc line="57">
                Maps the specified affineTransformOp to the corresponding XRender image
                  filter.                
            </javadoc>
            <method name="ATransOpToXRQualityName" type="byte[]" line="61">
                <params>
                    <param name="affineTranformOp" type="int"/>
                </params>
            </method>
            <method name="getFilterName" type="byte[]" line="72">
                <params>
                    <param name="filterType" type="int"/>
                </params>
            </method>
            <javadoc line="83">
                Returns the XRender picture Format which is required to fullfill the
                  Java2D transparency requirement.                
            </javadoc>
            <method name="getPictureFormatForTransparency" type="int" line="87">
                <params>
                    <param name="transparency" type="int"/>
                </params>
            </method>
            <method name="getXRSurfaceTypeForTransparency" type="SurfaceType" line="97">
                <params>
                    <param name="transparency" type="int"/>
                </params>
                <scope line="98"/>
                <scope line="101"/>
            </method>
            <javadoc line="105">
                Maps Java2D CycleMethod to XRender&apos;s Repeat property.                
            </javadoc>
            <method name="getRepeatForCycleMethod" type="int" line="108">
                <params>
                    <param name="cycleMethod" type="CycleMethod"/>
                </params>
                <scope line="109"/>
                <scope line="112"/>
                <scope line="115"/>
            </method>
            <javadoc line="120">
                Converts a double into an XFixed.                
            </javadoc>
            <method name="XDoubleToFixed" type="int" line="123">
                <params>
                    <param name="dbl" type="double"/>
                </params>
            </method>
            <method name="XFixedToDouble" type="double" line="126">
                <params>
                    <param name="fixed" type="int"/>
                </params>
            </method>
            <method name="convertFloatsToFixed" type="int[]" line="129">
                <params>
                    <param name="values" type="float[]"/>
                </params>
                <declaration name="fixed" type="int[]" line="130"/>
                <scope line="131"/>
            </method>
            <method name="intToULong" type="long" line="136">
                <params>
                    <param name="signed" type="int"/>
                </params>
                <scope line="137"/>
            </method>
            <javadoc line="142">
                Maps the specified Java2D composition rule, to the corresponding XRender
                  composition rule.                
            </javadoc>
            <method name="j2dAlphaCompToXR" type="byte" line="146">
                <params>
                    <param name="j2dRule" type="int"/>
                </params>
            </method>
            <method name="clampToShort" type="short" line="175">
                <params>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="clampToUShort" type="short" line="178">
                <params>
                    <param name="x" type="int"/>
                </params>
            </method>
        </class>
    </source>