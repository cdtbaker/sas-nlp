<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.xr">
        <import package="java.awt"/>
        <import package="java.awt.geom"/>
        <import package="sun.font"/>
        <import package="sun.java2d"/>
        <import package="sun.java2d.jules"/>
        <import package="sun.java2d.loops"/>
        <class name="XRCompositeManager" line="36">
            <javadoc line="36">
                Manages per-application resources, e.g. the 1x1 pixmap used for solid color
                  fill as well as per-application state e.g. the currently set source picture
                  used for composition .                
                <author>
                    Clemens Eisserer                    
                </author>
            </javadoc>
            <declaration name="enableGradCache" type="boolean" line="45"/>
            <declaration name="instance" type="XRCompositeManager" line="46"/>
            <declaration name="src" type="XRSurfaceData" line="48"/>
            <declaration name="texture" type="XRSurfaceData" line="49"/>
            <declaration name="gradient" type="XRSurfaceData" line="50"/>
            <declaration name="alphaMask" type="int" line="51"/>
            <declaration name="solidColor" type="XRColor" line="53"/>
            <declaration name="extraAlpha" type="float" line="54"/>
            <declaration name="compRule" type="byte" line="55"/>
            <declaration name="alphaColor" type="XRColor" line="56"/>
            <declaration name="solidSrcPict" type="XRSurfaceData" line="58"/>
            <declaration name="alphaMaskPict" type="int" line="59"/>
            <declaration name="gradCachePixmap" type="int" line="60"/>
            <declaration name="gradCachePicture" type="int" line="61"/>
            <declaration name="xorEnabled" type="boolean" line="63"/>
            <declaration name="validatedPixel" type="int" line="64"/>
            <declaration name="validatedComp" type="Composite" line="65"/>
            <declaration name="validatedPaint" type="Paint" line="66"/>
            <declaration name="validatedExtraAlpha" type="float" line="67"/>
            <declaration name="con" type="XRBackend" line="69"/>
            <declaration name="maskBuffer" type="MaskTileManager" line="70"/>
            <declaration name="textRenderer" type="XRTextRenderer" line="71"/>
            <declaration name="maskImage" type="XRMaskImage" line="72"/>
            <method name="getInstance" type="XRCompositeManager" line="75">
                <params>
                    <param name="surface" type="XRSurfaceData"/>
                </params>
                <scope line="76"/>
            </method>
            <method name="XRCompositeManager" type="constructor" line="82">
                <params>
                    <param name="surface" type="XRSurfaceData"/>
                </params>
                <comment line="84">
                    con = XRBackendJava.getInstance();                    
                </comment>
                <declaration name="gradProp" type="String" line="86"/>
            </method>
            <method name="initResources" type="void" line="100">
                <params>
                    <param name="surface" type="XRSurfaceData"/>
                </params>
                <declaration name="parentXid" type="int" line="101"/>
                <declaration name="solidPixmap" type="int" line="103"/>
                <declaration name="solidSrcPictXID" type="int" line="104"/>
                <declaration name="extraAlphaMask" type="int" line="113"/>
                <scope line="120"/>
            </method>
            <method name="setForeground" type="void" line="128">
                <params>
                    <param name="pixel" type="int"/>
                </params>
            </method>
            <method name="setGradientPaint" type="void" line="134">
                <params>
                    <param name="gradient" type="XRSurfaceData"/>
                </params>
                <scope line="135"/>
            </method>
            <method name="setTexturePaint" type="void" line="142">
                <params>
                    <param name="texture" type="XRSurfaceData"/>
                </params>
            </method>
            <method name="XRResetPaint" type="void" line="147"/>
            <method name="validateCompositeState" type="void" line="152">
                <params>
                    <param name="comp" type="Composite"/>
                    <param name="xform" type="AffineTransform"/>
                    <param name="paint" type="Paint"/>
                    <param name="sg2d" type="SunGraphics2D"/>
                </params>
                <comment line="155">
                    validate composite                    
                </comment>
                <comment line="163">
                    the paint state is dependent on the composite state, so make                    
                </comment>
                <comment line="164">
                    sure we update the color below                    
                </comment>
                <comment line="174">
                    validate paint                    
                </comment>
                <declaration name="updatePaint" type="boolean" line="153"/>
                <scope line="156">
                    <scope line="157"/>
                    <scope line="159"/>
                </scope>
                <scope line="169"/>
                <scope line="175">
                    <scope line="177"/>
                    <scope line="179"/>
                </scope>
                <scope line="185">
                    <declaration name="at" type="AffineTransform" line="186"/>
                    <scope line="187"/>
                    <scope line="189"/>
                </scope>
            </method>
            <method name="setComposite" type="void" line="196">
                <params>
                    <param name="comp" type="Composite"/>
                </params>
                <comment line="217">
                                        
                </comment>
                <scope line="197">
                    <declaration name="aComp" type="AlphaComposite" line="198"/>
                    <scope line="204"/>
                    <scope line="207"/>
                </scope>
                <scope line="216"/>
                <scope line="219"/>
            </method>
            <method name="maskRequired" type="boolean" line="226"/>
            <method name="XRComposite" type="void" line="233">
                <params>
                    <param name="src" type="int"/>
                    <param name="mask" type="int"/>
                    <param name="dst" type="int"/>
                    <param name="srcX" type="int"/>
                    <param name="srcY" type="int"/>
                    <param name="maskX" type="int"/>
                    <param name="maskY" type="int"/>
                    <param name="dstX" type="int"/>
                    <param name="dstY" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="cachedSrc" type="int" line="234"/>
                <declaration name="cachedX" type="int" line="235"/>
                <declaration name="cachedY" type="int" line="236"/>
                <scope line="239"/>
            </method>
            <method name="XRCompositeTraps" type="void" line="253">
                <params>
                    <param name="dst" type="int"/>
                    <param name="srcX" type="int"/>
                    <param name="srcY" type="int"/>
                    <param name="trapList" type="TrapezoidList"/>
                </params>
                <declaration name="renderReferenceX" type="int" line="254"/>
                <declaration name="renderReferenceY" type="int" line="255"/>
                <scope line="257"/>
                <scope line="260"/>
            </method>
            <method name="XRRenderRectangles" type="void" line="275">
                <params>
                    <param name="dst" type="XRSurfaceData"/>
                    <param name="rects" type="GrowableRectArray"/>
                </params>
                <scope line="276"/>
                <scope line="278"/>
            </method>
            <method name="compositeBlit" type="void" line="284">
                <params>
                    <param name="src" type="XRSurfaceData"/>
                    <param name="dst" type="XRSurfaceData"/>
                    <param name="sx" type="int"/>
                    <param name="sy" type="int"/>
                    <param name="dx" type="int"/>
                    <param name="dy" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="compositeText" type="void" line="290">
                <params>
                    <param name="dst" type="int"/>
                    <param name="glyphSet" type="int"/>
                    <param name="maskFormat" type="int"/>
                    <param name="elts" type="GrowableEltArray"/>
                </params>
            </method>
            <method name="getMaskColor" type="XRColor" line="295"/>
            <method name="getExtraAlphaMask" type="int" line="299"/>
            <method name="isTexturePaintActive" type="boolean" line="303"/>
            <method name="getAlphaColor" type="XRColor" line="307"/>
            <method name="getBackend" type="XRBackend" line="311"/>
            <method name="getExtraAlpha" type="float" line="315"/>
            <method name="getCompRule" type="byte" line="319"/>
            <method name="getTextRenderer" type="XRTextRenderer" line="323"/>
            <method name="getMaskBuffer" type="MaskTileManager" line="327"/>
            <method name="getMaskImage" type="XRMaskImage" line="331"/>
        </class>
    </source>