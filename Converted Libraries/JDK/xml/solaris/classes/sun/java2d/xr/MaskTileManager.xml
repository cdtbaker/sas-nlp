<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.xr">
        <import package="java.awt"/>
        <import package="java.util"/>
        <class name="MaskTileManager" line="4">
            <javadoc line="4">
                We render non-antialiased geometry (consisting of rectangles) into a mask,
                  which is later used in a composition step.
                  To avoid mask-allocations of large size, MaskTileManager splits
                  geometry larger than MASK_SIZE into several tiles,
                  and stores the geometry in instances of MaskTile.                
                <author>
                    Clemens Eisserer                    
                </author>
            </javadoc>
            <declaration name="MASK_SIZE" type="int" line="13"/>
            <declaration name="mainTile" type="MaskTile" line="14"/>
            <declaration name="tileList" type="ArrayList&lt;MaskTile&gt;" line="15"/>
            <declaration name="allocatedTiles" type="int" line="16"/>
            <declaration name="xTiles" type="int" line="17"/>
            <declaration name="xrMgr" type="XRCompositeManager" line="18"/>
            <declaration name="con" type="XRBackend" line="19"/>
            <declaration name="maskPixmap" type="int" line="20"/>
            <declaration name="maskPicture" type="int" line="21"/>
            <declaration name="maskGC" type="long" line="22"/>
            <declaration name="lineMaskPixmap" type="int" line="23"/>
            <declaration name="lineMaskPicture" type="int" line="24"/>
            <declaration name="drawLineGC" type="long" line="25"/>
            <declaration name="clearLineGC" type="long" line="26"/>
            <method name="MaskTileManager" type="constructor" line="27">
                <params>
                    <param name="xrMgr" type="XRCompositeManager"/>
                    <param name="parentXid" type="int"/>
                </params>
            </method>
            <javadoc line="46">
                Adds a rectangle to the mask.                
            </javadoc>
            <method name="addRect" type="void" line="49">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
            </method>
            <javadoc line="52">
                Adds a line to the mask.                
            </javadoc>
            <method name="addLine" type="void" line="55">
                <params>
                    <param name="x1" type="int"/>
                    <param name="y1" type="int"/>
                    <param name="x2" type="int"/>
                    <param name="y2" type="int"/>
                </params>
            </method>
            <javadoc line="58">
                Transfers the geometry stored (rectangles, lines) to one or more masks,
                  and renders the result to the destination surface.                
            </javadoc>
            <method name="fillMask" type="void" line="62">
                <params>
                    <param name="dst" type="XRSurfaceData"/>
                </params>
                <declaration name="maskRequired" type="boolean" line="63"/>
                <scope line="64">
                    <declaration name="dirtyArea" type="DirtyRegion" line="66"/>
                    <declaration name="maskColor" type="XRColor" line="68"/>
                    <scope line="69"/>
                    <scope line="72">
                        <scope line="75">
                            <scope line="76">
                                <declaration name="tile" type="MaskTile" line="77"/>
                                <declaration name="tileStartX" type="int" line="78"/>
                                <declaration name="tileStartY" type="int" line="79"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="85"/>
            </method>
            <javadoc line="90">
                Uploads aa geometry generated for maskblit/fill into the mask pixmap.                
            </javadoc>
            <method name="uploadMask" type="int" line="93">
                <params>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="maskscan" type="int"/>
                    <param name="maskoff" type="int"/>
                    <param name="mask" type="byte[]"/>
                </params>
                <declaration name="maskPic" type="int" line="94"/>
                <scope line="95">
                    <declaration name="maskAlpha" type="float" line="96"/>
                </scope>
                <scope line="100"/>
            </method>
            <javadoc line="105">
                Clears the area of the mask-pixmap used for uploading aa coverage values.                
            </javadoc>
            <method name="clearUploadMask" type="void" line="108">
                <params>
                    <param name="mask" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <scope line="109"/>
            </method>
            <javadoc line="113">
                Renders the rectangles provided to the mask, and does a composition
                  operation with the properties set inXRCompositeManager.                
            </javadoc>
            <method name="compositeSingleTile" type="void" line="117">
                <params>
                    <param name="dst" type="XRSurfaceData"/>
                    <param name="tile" type="MaskTile"/>
                    <param name="dirtyArea" type="DirtyRegion"/>
                    <param name="maskRequired" type="boolean"/>
                    <param name="tileStartX" type="int"/>
                    <param name="tileStartY" type="int"/>
                    <param name="maskColor" type="XRColor"/>
                </params>
                <scope line="118">
                    <declaration name="tileDirtyArea" type="DirtyRegion" line="119"/>
                    <declaration name="x" type="int" line="120"/>
                    <declaration name="y" type="int" line="121"/>
                    <declaration name="width" type="int" line="122"/>
                    <declaration name="height" type="int" line="123"/>
                    <declaration name="rectCnt" type="int" line="126"/>
                    <scope line="127">
                        <declaration name="mask" type="int" line="128"/>
                        <scope line="129"/>
                        <scope line="133">
                            <scope line="134"/>
                        </scope>
                        <scope line="139"/>
                    </scope>
                    <scope line="144"/>
                </scope>
            </method>
            <javadoc line="150">
                Allocates enough MaskTile instances, to cover the whole
                  mask area, or resets existing ones.                
            </javadoc>
            <method name="allocTiles" type="void" line="154">
                <params>
                    <param name="maskArea" type="DirtyRegion"/>
                </params>
                <declaration name="tileCnt" type="int" line="157"/>
                <scope line="158">
                    <scope line="159">
                        <scope line="160"/>
                        <scope line="163"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="170">
                Tiles the stored rectangles, if they are larger than the MASK_SIZE                
            </javadoc>
            <method name="tileRects" type="void" line="173">
                <declaration name="rects" type="GrowableRectArray" line="174"/>
                <scope line="175">
                    <declaration name="tileXStartIndex" type="int" line="176"/>
                    <declaration name="tileYStartIndex" type="int" line="177"/>
                    <declaration name="tileXLength" type="int" line="178"/>
                    <declaration name="tileYLength" type="int" line="179"/>
                    <scope line="180">
                        <scope line="181">
                            <declaration name="tileIndex" type="int" line="182"/>
                            <declaration name="tile" type="MaskTile" line="183"/>
                            <declaration name="rectTileList" type="GrowableRectArray" line="184"/>
                            <declaration name="tileArrayIndex" type="int" line="185"/>
                            <declaration name="tileStartPosX" type="int" line="186"/>
                            <declaration name="tileStartPosY" type="int" line="187"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="198">
                Limits the rect&apos;s coordinates to the mask coordinates. The result is used
                  by growDirtyRegion.                
            </javadoc>
            <method name="limitRectCoords" type="void" line="202">
                <params>
                    <param name="rects" type="GrowableRectArray"/>
                    <param name="index" type="int"/>
                </params>
                <scope line="203"/>
                <scope line="206"/>
                <scope line="209"/>
                <scope line="213"/>
            </method>
        </class>
    </source>