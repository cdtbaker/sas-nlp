<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.xr">
        <import package="java.awt"/>
        <import package="java.awt.MultipleGradientPaint"/>
        <import package="java.awt.geom"/>
        <import package="java.awt.image"/>
        <import package="sun.java2d"/>
        <import package="sun.java2d.loops"/>
        <import package="sun.java2d.pipe"/>
        <class name="XRPaints" line="9">
            <declaration name="xrCompMan" type="XRCompositeManager" line="10"/>
            <declaration name="xrGradient" type="XRGradient" line="11"/>
            <declaration name="xrLinearGradient" type="XRLinearGradient" line="12"/>
            <declaration name="xrRadialGradient" type="XRRadialGradient" line="13"/>
            <declaration name="xrTexture" type="XRTexture" line="14"/>
            <method name="register" type="void" line="15">
                <params>
                    <param name="xrComp" type="XRCompositeManager"/>
                </params>
            </method>
            <method name="getXRPaint" type="XRPaints" line="18">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                </params>
            </method>
            <javadoc line="32">
                Attempts to locate an implementation corresponding to the paint state of
                  the provided SunGraphics2D object. If no implementation can be found, or
                  if the paint cannot be accelerated under the conditions of the
                  SunGraphics2D, this method returns false; otherwise, returns true.                
            </javadoc>
            <method name="isValid" type="boolean" line="38">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                </params>
                <declaration name="impl" type="XRPaints" line="39"/>
            </method>
            <method name="setPaint" type="void" line="42">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="paint" type="Paint"/>
                </params>
                <declaration name="impl" type="XRPaints" line="43"/>
                <scope line="44"/>
            </method>
            <method name="isPaintValid" type="boolean" line="48"/>
            <javadoc line="48">
                Returns true if this implementation is able to accelerate the Paint
                  object associated with, and under the conditions of, the provided
                  SunGraphics2D instance; otherwise returns false.                
            </javadoc>
            <method name="setXRPaint" type="void" line="54"/>
            <class name="XRGradient" line="55">
                <extends class="XRPaints"/>
                <method name="XRGradient" type="constructor" line="56"/>
                <javadoc line="58">
                    There are no restrictions for accelerating GradientPaint, so this
                      method always returns true.                    
                </javadoc>
                <method name="isPaintValid" type="boolean" line="62">
                    <params>
                        <param name="sg2d" type="SunGraphics2D"/>
                    </params>
                </method>
                <method name="setXRPaint" type="void" line="65">
                    <params>
                        <param name="sg2d" type="SunGraphics2D"/>
                        <param name="pt" type="Paint"/>
                    </params>
                    <declaration name="paint" type="GradientPaint" line="66"/>
                    <declaration name="pixels" type="int[]" line="67"/>
                    <declaration name="fractions" type="float" line="68"/>
                    <declaration name="pt1" type="Point2D" line="71"/>
                    <declaration name="pt2" type="Point2D" line="72"/>
                    <declaration name="at" type="AffineTransform" line="73"/>
                    <scope line="74"/>
                    <scope line="77"/>
                    <declaration name="repeat" type="int" line="80"/>
                    <declaration name="con" type="XRBackend" line="81"/>
                    <declaration name="gradient" type="int" line="82"/>
                </method>
            </class>
            <method name="getGradientLength" type="int" line="86">
                <params>
                    <param name="pt1" type="Point2D"/>
                    <param name="pt2" type="Point2D"/>
                </params>
                <declaration name="xDiff" type="double" line="87"/>
                <declaration name="yDiff" type="double" line="88"/>
            </method>
            <class name="XRLinearGradient" line="91">
                <extends class="XRPaints"/>
                <method name="isPaintValid" type="boolean" line="92">
                    <params>
                        <param name="sg2d" type="SunGraphics2D"/>
                    </params>
                </method>
                <method name="setXRPaint" type="void" line="95">
                    <params>
                        <param name="sg2d" type="SunGraphics2D"/>
                        <param name="pt" type="Paint"/>
                    </params>
                    <declaration name="paint" type="LinearGradientPaint" line="96"/>
                    <declaration name="linear" type="boolean" line="97"/>
                    <declaration name="colors" type="Color[]" line="98"/>
                    <declaration name="pt1" type="Point2D" line="99"/>
                    <declaration name="pt2" type="Point2D" line="100"/>
                    <declaration name="at" type="AffineTransform" line="101"/>
                    <declaration name="repeat" type="int" line="103"/>
                    <declaration name="fractions" type="float[]" line="104"/>
                    <declaration name="pixels" type="int[]" line="105"/>
                    <scope line="106"/>
                    <scope line="109"/>
                    <declaration name="con" type="XRBackend" line="112"/>
                    <declaration name="gradient" type="int" line="113"/>
                </method>
            </class>
            <class name="XRRadialGradient" line="117">
                <extends class="XRPaints"/>
                <method name="isPaintValid" type="boolean" line="118">
                    <params>
                        <param name="sg2d" type="SunGraphics2D"/>
                    </params>
                    <declaration name="grad" type="RadialGradientPaint" line="119"/>
                </method>
                <method name="setXRPaint" type="void" line="122">
                    <params>
                        <param name="sg2d" type="SunGraphics2D"/>
                        <param name="pt" type="Paint"/>
                    </params>
                    <declaration name="paint" type="RadialGradientPaint" line="123"/>
                    <declaration name="linear" type="boolean" line="124"/>
                    <declaration name="colors" type="Color[]" line="125"/>
                    <declaration name="center" type="Point2D" line="126"/>
                    <declaration name="focus" type="Point2D" line="127"/>
                    <declaration name="repeat" type="int" line="128"/>
                    <declaration name="fractions" type="float[]" line="129"/>
                    <declaration name="pixels" type="int[]" line="130"/>
                    <declaration name="radius" type="float" line="131"/>
                    <declaration name="cx" type="double" line="132"/>
                    <declaration name="cy" type="double" line="133"/>
                    <declaration name="fx" type="double" line="134"/>
                    <declaration name="fy" type="double" line="135"/>
                    <declaration name="at" type="AffineTransform" line="136"/>
                    <scope line="141"/>
                    <scope line="144"/>
                    <declaration name="con" type="XRBackend" line="149"/>
                    <declaration name="gradient" type="int" line="150"/>
                </method>
            </class>
            <class name="XRTexture" line="154">
                <extends class="XRPaints"/>
                <method name="isPaintValid" type="boolean" line="155">
                    <params>
                        <param name="sg2d" type="SunGraphics2D"/>
                    </params>
                    <declaration name="paint" type="TexturePaint" line="156"/>
                    <declaration name="bi" type="BufferedImage" line="157"/>
                    <declaration name="dstData" type="XRSurfaceData" line="158"/>
                    <declaration name="srcData" type="SurfaceData" line="159"/>
                    <scope line="160">
                        <scope line="162"/>
                    </scope>
                </method>
                <method name="setXRPaint" type="void" line="168">
                    <params>
                        <param name="sg2d" type="SunGraphics2D"/>
                        <param name="pt" type="Paint"/>
                    </params>
                    <declaration name="paint" type="TexturePaint" line="169"/>
                    <declaration name="bi" type="BufferedImage" line="170"/>
                    <declaration name="dstData" type="SurfaceData" line="171"/>
                    <declaration name="srcData" type="SurfaceData" line="172"/>
                    <scope line="173">
                        <scope line="175"/>
                    </scope>
                    <declaration name="x11SrcData" type="XRSurfaceData" line="179"/>
                    <declaration name="at" type="AffineTransform" line="180"/>
                    <declaration name="anchor" type="Rectangle2D" line="181"/>
                    <scope line="184"/>
                    <scope line="187"/>
                </method>
            </class>
            <method name="convertToIntArgbPixels" type="int[]" line="194">
                <params>
                    <param name="colors" type="Color[]"/>
                    <param name="linear" type="boolean"/>
                </params>
                <declaration name="pixels" type="int[]" line="195"/>
                <scope line="196"/>
            </method>
            <method name="colorToIntArgbPixel" type="int" line="201">
                <params>
                    <param name="c" type="Color"/>
                    <param name="linear" type="boolean"/>
                </params>
                <declaration name="rgb" type="int" line="202"/>
                <declaration name="a" type="int" line="203"/>
                <declaration name="r" type="int" line="204"/>
                <declaration name="g" type="int" line="205"/>
                <declaration name="b" type="int" line="206"/>
                <scope line="207"/>
            </method>
        </class>
    </source>