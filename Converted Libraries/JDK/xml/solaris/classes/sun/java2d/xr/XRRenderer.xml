<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.xr">
        <import package="java.awt"/>
        <import package="java.awt.geom"/>
        <import package="sun.awt.SunToolkit"/>
        <import package="sun.java2d.SunGraphics2D"/>
        <import package="sun.java2d.loops"/>
        <import package="sun.java2d.pipe.Region"/>
        <import package="sun.java2d.pipe.PixelDrawPipe"/>
        <import package="sun.java2d.pipe.PixelFillPipe"/>
        <import package="sun.java2d.pipe.ShapeDrawPipe"/>
        <import package="sun.java2d.pipe.SpanIterator"/>
        <import package="sun.java2d.pipe.ShapeSpanIterator"/>
        <import package="sun.java2d.pipe.LoopPipe"/>
        <class name="XRRenderer" line="14">
            <implements interface="PixelDrawPipe"/>
            <implements interface="PixelFillPipe"/>
            <implements interface="ShapeDrawPipe"/>
            <javadoc line="14">
                XRender provides only accalerated rectangles. To emulate higher &quot;order&quot;
                  geometry we have to pass everything else to DoPath/FillSpans.
                  TODO: DrawRect could be instrified                
                <author>
                    Clemens Eisserer                    
                </author>
            </javadoc>
            <declaration name="drawHandler" type="XRDrawHandler" line="21"/>
            <declaration name="tileManager" type="MaskTileManager" line="22"/>
            <method name="XRRenderer" type="constructor" line="23">
                <params>
                    <param name="tileManager" type="MaskTileManager"/>
                </params>
            </method>
            <javadoc line="27">
                Common validate method, used by all XRRender functions to validate the
                  destination context.                
            </javadoc>
            <method name="validateSurface" type="void" line="31">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                </params>
                <declaration name="xrsd" type="XRSurfaceData" line="32"/>
            </method>
            <method name="drawLine" type="void" line="36">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x1" type="int"/>
                    <param name="y1" type="int"/>
                    <param name="x2" type="int"/>
                    <param name="y2" type="int"/>
                </params>
                <scope line="37">
                    <declaration name="transx" type="int" line="40"/>
                    <declaration name="transy" type="int" line="41"/>
                    <declaration name="xrsd" type="XRSurfaceData" line="42"/>
                </scope>
                <scope line="46"/>
            </method>
            <method name="drawRect" type="void" line="50">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
            </method>
            <method name="drawPolyline" type="void" line="53">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="xpoints" type="int"/>
                    <param name="ypoints" type="int"/>
                    <param name="npoints" type="int"/>
                </params>
                <declaration name="p2d" type="Path2D.Float" line="54"/>
                <scope line="55">
                    <scope line="57"/>
                </scope>
            </method>
            <method name="drawPolygon" type="void" line="63">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="xpoints" type="int"/>
                    <param name="ypoints" type="int"/>
                    <param name="npoints" type="int"/>
                </params>
            </method>
            <method name="fillRect" type="void" line="66">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <scope line="68">
                    <declaration name="xrsd" type="XRSurfaceData" line="70"/>
                </scope>
                <scope line="76"/>
            </method>
            <method name="fillPolygon" type="void" line="80">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="xpoints" type="int"/>
                    <param name="ypoints" type="int"/>
                    <param name="npoints" type="int"/>
                </params>
            </method>
            <method name="drawRoundRect" type="void" line="83">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="arcWidth" type="int"/>
                    <param name="arcHeight" type="int"/>
                </params>
            </method>
            <method name="fillRoundRect" type="void" line="86">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="arcWidth" type="int"/>
                    <param name="arcHeight" type="int"/>
                </params>
            </method>
            <method name="drawOval" type="void" line="89">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
            </method>
            <method name="fillOval" type="void" line="92">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
            </method>
            <method name="drawArc" type="void" line="95">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="startAngle" type="int"/>
                    <param name="arcAngle" type="int"/>
                </params>
            </method>
            <method name="fillArc" type="void" line="98">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="startAngle" type="int"/>
                    <param name="arcAngle" type="int"/>
                </params>
            </method>
            <class name="XRDrawHandler" line="101">
                <extends class="ProcessPath.DrawHandler"/>
                <method name="XRDrawHandler" type="constructor" line="102"/>
                <javadoc line="105">
                    This method needs to be called prior to each draw/fillPath()
                      operation to ensure the clip bounds are up to date.                    
                </javadoc>
                <method name="validate" type="void" line="109">
                    <params>
                        <param name="sg2d" type="SunGraphics2D"/>
                    </params>
                    <declaration name="clip" type="Region" line="110"/>
                </method>
                <method name="drawLine" type="void" line="114">
                    <params>
                        <param name="x1" type="int"/>
                        <param name="y1" type="int"/>
                        <param name="x2" type="int"/>
                        <param name="y2" type="int"/>
                    </params>
                </method>
                <method name="drawPixel" type="void" line="117">
                    <params>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                </method>
                <method name="drawScanline" type="void" line="120">
                    <params>
                        <param name="x1" type="int"/>
                        <param name="x2" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                </method>
            </class>
            <method name="drawPath" type="void" line="124">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="p2df" type="Path2D.Float"/>
                    <param name="transx" type="int"/>
                    <param name="transy" type="int"/>
                </params>
                <scope line="126"/>
                <scope line="132"/>
            </method>
            <method name="fillPath" type="void" line="136">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="p2df" type="Path2D.Float"/>
                    <param name="transx" type="int"/>
                    <param name="transy" type="int"/>
                </params>
                <scope line="138"/>
                <scope line="144"/>
            </method>
            <method name="fillSpans" type="void" line="148">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="si" type="SpanIterator"/>
                    <param name="transx" type="int"/>
                    <param name="transy" type="int"/>
                </params>
                <scope line="150">
                    <declaration name="spanBox" type="int[]" line="152"/>
                    <scope line="153"/>
                </scope>
                <scope line="158"/>
            </method>
            <method name="draw" type="void" line="162">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="s" type="Shape"/>
                </params>
                <scope line="163">
                    <declaration name="p2df" type="Path2D.Float" line="164"/>
                    <declaration name="transx" type="int" line="165"/>
                    <scope line="166">
                        <scope line="167"/>
                        <scope line="170"/>
                    </scope>
                    <scope line="176"/>
                </scope>
                <scope line="183">
                    <declaration name="si" type="ShapeSpanIterator" line="184"/>
                    <scope line="185"/>
                    <scope line="188"/>
                </scope>
                <scope line="192"/>
            </method>
            <method name="fill" type="void" line="196">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="s" type="Shape"/>
                </params>
                <declaration name="transx" type="int" line="197"/>
                <scope line="198">
                    <declaration name="p2df" type="Path2D.Float" line="199"/>
                    <scope line="200">
                        <scope line="201"/>
                        <scope line="204"/>
                    </scope>
                    <scope line="210"/>
                </scope>
                <declaration name="at" type="AffineTransform" line="218"/>
                <scope line="219"/>
                <scope line="224"/>
                <declaration name="ssi" type="ShapeSpanIterator" line="228"/>
                <scope line="229">
                    <declaration name="clip" type="Region" line="230"/>
                </scope>
                <scope line="235"/>
            </method>
        </class>
    </source>