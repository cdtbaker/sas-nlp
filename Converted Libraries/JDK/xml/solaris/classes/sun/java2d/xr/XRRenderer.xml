<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.xr">
        <import package="java.awt"/>
        <import package="java.awt.geom"/>
        <import package="sun.awt.SunToolkit"/>
        <import package="sun.java2d.SunGraphics2D"/>
        <import package="sun.java2d.loops"/>
        <import package="sun.java2d.pipe.Region"/>
        <import package="sun.java2d.pipe.PixelDrawPipe"/>
        <import package="sun.java2d.pipe.PixelFillPipe"/>
        <import package="sun.java2d.pipe.ShapeDrawPipe"/>
        <import package="sun.java2d.pipe.SpanIterator"/>
        <import package="sun.java2d.pipe.ShapeSpanIterator"/>
        <import package="sun.java2d.pipe.LoopPipe"/>
        <class name="XRRenderer" line="42">
            <implements interface="PixelDrawPipe"/>
            <implements interface="PixelFillPipe"/>
            <implements interface="ShapeDrawPipe"/>
            <javadoc line="42">
                XRender provides only accalerated rectangles. To emulate higher &quot;order&quot;
                  geometry we have to pass everything else to DoPath/FillSpans.
                  TODO: DrawRect could be instrified                
                <author>
                    Clemens Eisserer                    
                </author>
            </javadoc>
            <declaration name="drawHandler" type="XRDrawHandler" line="52"/>
            <declaration name="tileManager" type="MaskTileManager" line="53"/>
            <method name="XRRenderer" type="constructor" line="55">
                <params>
                    <param name="tileManager" type="MaskTileManager"/>
                </params>
            </method>
            <javadoc line="60">
                Common validate method, used by all XRRender functions to validate the
                  destination context.                
            </javadoc>
            <method name="validateSurface" type="void" line="64">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                </params>
                <declaration name="xrsd" type="XRSurfaceData" line="65"/>
            </method>
            <method name="drawLine" type="void" line="71">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x1" type="int"/>
                    <param name="y1" type="int"/>
                    <param name="x2" type="int"/>
                    <param name="y2" type="int"/>
                </params>
                <scope line="72">
                    <declaration name="transx" type="int" line="76"/>
                    <declaration name="transy" type="int" line="77"/>
                    <declaration name="xrsd" type="XRSurfaceData" line="79"/>
                </scope>
                <scope line="84"/>
            </method>
            <method name="drawRect" type="void" line="90">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
            </method>
            <method name="drawPolyline" type="void" line="95">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="xpoints" type="int"/>
                    <param name="ypoints" type="int"/>
                    <param name="npoints" type="int"/>
                </params>
                <declaration name="p2d" type="Path2D.Float" line="96"/>
                <scope line="97">
                    <scope line="99"/>
                </scope>
            </method>
            <method name="drawPolygon" type="void" line="108">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="xpoints" type="int"/>
                    <param name="ypoints" type="int"/>
                    <param name="npoints" type="int"/>
                </params>
            </method>
            <method name="fillRect" type="void" line="113">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <scope line="115">
                    <declaration name="xrsd" type="XRSurfaceData" line="118"/>
                </scope>
                <scope line="126"/>
            </method>
            <method name="fillPolygon" type="void" line="132">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="xpoints" type="int"/>
                    <param name="ypoints" type="int"/>
                    <param name="npoints" type="int"/>
                </params>
            </method>
            <method name="drawRoundRect" type="void" line="138">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="arcWidth" type="int"/>
                    <param name="arcHeight" type="int"/>
                </params>
            </method>
            <method name="fillRoundRect" type="void" line="145">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="arcWidth" type="int"/>
                    <param name="arcHeight" type="int"/>
                </params>
            </method>
            <method name="drawOval" type="void" line="151">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
            </method>
            <method name="fillOval" type="void" line="156">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
            </method>
            <method name="drawArc" type="void" line="162">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="startAngle" type="int"/>
                    <param name="arcAngle" type="int"/>
                </params>
            </method>
            <method name="fillArc" type="void" line="169">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="startAngle" type="int"/>
                    <param name="arcAngle" type="int"/>
                </params>
            </method>
            <class name="XRDrawHandler" line="174">
                <extends class="ProcessPath.DrawHandler"/>
                <method name="XRDrawHandler" type="constructor" line="176">
                    <comment line="178">
                        these are bogus values; the caller will use validate()
                         to ensure that they are set properly prior to each usage                        
                    </comment>
                </method>
                <javadoc line="182">
                    This method needs to be called prior to each draw/fillPath()
                      operation to ensure the clip bounds are up to date.                    
                </javadoc>
                <method name="validate" type="void" line="186">
                    <params>
                        <param name="sg2d" type="SunGraphics2D"/>
                    </params>
                    <declaration name="clip" type="Region" line="187"/>
                </method>
                <method name="drawLine" type="void" line="193">
                    <params>
                        <param name="x1" type="int"/>
                        <param name="y1" type="int"/>
                        <param name="x2" type="int"/>
                        <param name="y2" type="int"/>
                    </params>
                </method>
                <method name="drawPixel" type="void" line="197">
                    <params>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                </method>
                <method name="drawScanline" type="void" line="201">
                    <params>
                        <param name="x1" type="int"/>
                        <param name="x2" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                </method>
            </class>
            <method name="drawPath" type="void" line="207">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="p2df" type="Path2D.Float"/>
                    <param name="transx" type="int"/>
                    <param name="transy" type="int"/>
                </params>
                <scope line="209"/>
                <scope line="214"/>
            </method>
            <method name="fillPath" type="void" line="220">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="p2df" type="Path2D.Float"/>
                    <param name="transx" type="int"/>
                    <param name="transy" type="int"/>
                </params>
                <scope line="222"/>
                <scope line="227"/>
            </method>
            <method name="fillSpans" type="void" line="233">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="si" type="SpanIterator"/>
                    <param name="transx" type="int"/>
                    <param name="transy" type="int"/>
                </params>
                <scope line="235">
                    <declaration name="spanBox" type="int[]" line="237"/>
                    <scope line="238"/>
                </scope>
                <scope line="245"/>
            </method>
            <method name="draw" type="void" line="250">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="s" type="Shape"/>
                </params>
                <scope line="251">
                    <declaration name="p2df" type="Path2D.Float" line="252"/>
                    <declaration name="transx" type="int" line="253"/>
                    <scope line="254">
                        <scope line="255"/>
                        <scope line="257"/>
                    </scope>
                    <scope line="262"/>
                </scope>
                <scope line="268">
                    <declaration name="si" type="ShapeSpanIterator" line="269"/>
                    <scope line="270"/>
                    <scope line="272"/>
                </scope>
                <scope line="275"/>
            </method>
            <method name="fill" type="void" line="280">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="s" type="Shape"/>
                </params>
                <comment line="285">
                    Here we are able to use fillPath() for
                     high-quality fills.                    
                </comment>
                <comment line="307">
                    Transform (translation) will be done by FillSpans                    
                </comment>
                <comment line="312">
                    Transform will be done by the PathIterator                    
                </comment>
                <comment line="319">
                    Subtract transx/y from the SSI clip to match the
                     (potentially untranslated) geometry fed to it                    
                </comment>
                <declaration name="transx" type="int" line="281"/>
                <scope line="283">
                    <declaration name="p2df" type="Path2D.Float" line="286"/>
                    <scope line="287">
                        <scope line="288"/>
                        <scope line="290"/>
                    </scope>
                    <scope line="295"/>
                </scope>
                <declaration name="at" type="AffineTransform" line="304"/>
                <scope line="305"/>
                <scope line="310"/>
                <declaration name="ssi" type="ShapeSpanIterator" line="316"/>
                <scope line="317">
                    <declaration name="clip" type="Region" line="320"/>
                </scope>
                <scope line="327"/>
            </method>
        </class>
    </source>