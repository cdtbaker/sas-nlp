<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d">
        <import package="java.awt.GraphicsConfiguration"/>
        <import package="sun.awt.image.SunVolatileImage"/>
        <import package="sun.awt.image.VolatileSurfaceManager"/>
        <import package="sun.java2d.opengl.GLXGraphicsConfig"/>
        <import package="sun.java2d.opengl.GLXVolatileSurfaceManager"/>
        <import package="sun.java2d.x11.X11VolatileSurfaceManager"/>
        <import package="sun.java2d.xr"/>
        <class name="UnixSurfaceManagerFactory" line="9">
            <extends class="SurfaceManagerFactory"/>
            <javadoc line="9">
                The SurfaceManagerFactory that creates VolatileSurfaceManager
                  implementations for the Unix volatile images.                
            </javadoc>
            <javadoc line="14">
                Creates a new instance of a VolatileSurfaceManager given any
                  arbitrary SunVolatileImage.  An optional context Object can be supplied
                  as a way for the caller to pass pipeline-specific context data to
                  the VolatileSurfaceManager (such as a backbuffer handle, for example).
                  For Unix platforms, this method returns either an X11- or a GLX-
                  specific VolatileSurfaceManager based on the GraphicsConfiguration
                  under which the SunVolatileImage was created.                
            </javadoc>
            <method name="createVolatileManager" type="VolatileSurfaceManager" line="23">
                <params>
                    <param name="vImg" type="SunVolatileImage"/>
                    <param name="context" type="Object"/>
                </params>
                <declaration name="gc" type="GraphicsConfiguration" line="24"/>
                <scope line="25"/>
                <scope line="28"/>
                <scope line="31"/>
            </method>
        </class>
    </source>