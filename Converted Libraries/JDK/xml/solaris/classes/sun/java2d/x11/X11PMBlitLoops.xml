<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.x11">
        <import package="sun.awt.SunToolkit"/>
        <import package="sun.java2d.loops.GraphicsPrimitive"/>
        <import package="sun.java2d.loops.GraphicsPrimitiveMgr"/>
        <import package="sun.java2d.loops.GraphicsPrimitiveProxy"/>
        <import package="sun.java2d.loops.CompositeType"/>
        <import package="sun.java2d.loops.SurfaceType"/>
        <import package="sun.java2d.loops.Blit"/>
        <import package="sun.java2d.loops.MaskBlit"/>
        <import package="sun.java2d.pipe.Region"/>
        <import package="sun.java2d.SurfaceData"/>
        <import package="java.awt.Composite"/>
        <import package="java.awt.image.IndexColorModel"/>
        <class name="X11PMBlitLoops" line="41">
            <extends class="Blit"/>
            <javadoc line="41">
                X11PMBlitLoops
                  This class accelerates Blits between two surfaces of types PM.  Since
                  the onscreen surface is of that type and some of the offscreen surfaces
                  may be of that type (if they were created via X11OffScreenImage), then
                  this type of Blit will accelerated double-buffer copies between those
                  two surfaces.                
            </javadoc>
            <method name="register" type="void" line="53">
                <comment line="76">
                    1-bit transparent to opaque loops                    
                </comment>
                <comment line="114">
                    delegate loops                    
                </comment>
                <declaration name="primitives" type="GraphicsPrimitive[]" line="54"/>
            </method>
            <method name="X11PMBlitLoops" type="constructor" line="141">
                <params>
                    <param name="srcType" type="SurfaceType"/>
                    <param name="dstType" type="SurfaceType"/>
                    <param name="over" type="boolean"/>
                </params>
            </method>
            <method name="Blit" type="void" line="152">
                <params>
                    <param name="src" type="SurfaceData"/>
                    <param name="dst" type="SurfaceData"/>
                    <param name="comp" type="Composite"/>
                    <param name="clip" type="Region"/>
                    <param name="sx" type="int"/>
                    <param name="sy" type="int"/>
                    <param name="dx" type="int"/>
                    <param name="dy" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="156">
                    pass null clip region here since we clip manually in native code                    
                </comment>
                <comment line="157">
                    also use false for needExposures since we clip to the pixmap                    
                </comment>
                <scope line="154">
                    <declaration name="x11sd" type="X11SurfaceData" line="155"/>
                    <declaration name="xgc" type="long" line="158"/>
                </scope>
                <scope line="161"/>
            </method>
            <method name="nativeBlit" type="void" line="166"/>
            <javadoc line="166">
                Blit
                  This native method is where all of the work happens in the
                  accelerated Blit.                
            </javadoc>
            <class name="DelegateBlitLoop" line="176">
                <extends class="Blit"/>
                <javadoc line="176">
                    This loop is used to render from a BITMASK Sw surface data
                      to the Hw cached copies managed by SurfaceDataProxies.
                      It first uses a delegate opaque Blit to perform the copy of
                      the pixel data and then updates the X11 clipping bitmask from
                      the transparent pixels in the source.                    
                </javadoc>
                <declaration name="dstType" type="SurfaceType" line="184"/>
                <javadoc line="186">
                    @param realDstType SurfaceType for which the loop should be
                      registered                    
                    <param>
                        delegateDstType SurfaceType which will be used
                          for finding delegate loop                        
                    </param>
                </javadoc>
                <method name="DelegateBlitLoop" type="constructor" line="192">
                    <params>
                        <param name="realDstType" type="SurfaceType"/>
                        <param name="delegateDstType" type="SurfaceType"/>
                    </params>
                </method>
                <method name="Blit" type="void" line="200">
                    <params>
                        <param name="src" type="SurfaceData"/>
                        <param name="dst" type="SurfaceData"/>
                        <param name="comp" type="Composite"/>
                        <param name="clip" type="Region"/>
                        <param name="sx" type="int"/>
                        <param name="sy" type="int"/>
                        <param name="dx" type="int"/>
                        <param name="dy" type="int"/>
                        <param name="w" type="int"/>
                        <param name="h" type="int"/>
                    </params>
                    <declaration name="blit" type="Blit" line="201"/>
                </method>
            </class>
            <method name="updateBitmask" type="void" line="210"/>
        </class>
    </source>