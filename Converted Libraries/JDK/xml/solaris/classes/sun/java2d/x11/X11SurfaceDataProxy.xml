<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.x11">
        <import package="java.awt.Color"/>
        <import package="java.awt.AlphaComposite"/>
        <import package="java.awt.GraphicsConfiguration"/>
        <import package="java.awt.Transparency"/>
        <import package="java.awt.image.ColorModel"/>
        <import package="java.awt.image.IndexColorModel"/>
        <import package="java.awt.image.DirectColorModel"/>
        <import package="sun.awt.X11GraphicsConfig"/>
        <import package="sun.java2d.SurfaceData"/>
        <import package="sun.java2d.SurfaceDataProxy"/>
        <import package="sun.java2d.SunGraphics2D"/>
        <import package="sun.java2d.loops.SurfaceType"/>
        <import package="sun.java2d.loops.CompositeType"/>
        <class name="X11SurfaceDataProxy" line="43">
            <extends class="SurfaceDataProxy"/>
            <implements interface="Transparency"/>
            <javadoc line="43">
                The proxy class contains the logic for when to replace a
                  SurfaceData with a cached X11 Pixmap and the code to create
                  the accelerated surfaces.                
            </javadoc>
            <method name="createProxy" type="SurfaceDataProxy" line="53">
                <params>
                    <param name="srcData" type="SurfaceData"/>
                    <param name="dstConfig" type="X11GraphicsConfig"/>
                </params>
                <comment line="55">
                    srcData must be a VolatileImage which either matches                    
                </comment>
                <comment line="56">
                    our visual or not - either way we do not cache it...                    
                </comment>
                <comment line="66">
                    4673490: updateBitmask() only handles ICMs with 8-bit indices                    
                </comment>
                <comment line="70">
                    The only other ColorModel handled by updateBitmask() is                    
                </comment>
                <comment line="71">
                    a DCM where the alpha bit, and only the alpha bit, is in                    
                </comment>
                <comment line="72">
                    the top 8 bits                    
                </comment>
                <comment line="88">
                    For whatever reason, this image is not a good candidate for                    
                </comment>
                <comment line="89">
                    caching in a pixmap so we return the non-caching (non-)proxy.                    
                </comment>
                <scope line="54"/>
                <declaration name="cm" type="ColorModel" line="60"/>
                <declaration name="transparency" type="int" line="61"/>
                <scope line="63"/>
                <scope line="65">
                    <scope line="67"/>
                    <scope line="73">
                        <declaration name="dcm" type="DirectColorModel" line="74"/>
                        <declaration name="colormask" type="int" line="75"/>
                        <declaration name="alphamask" type="int" line="78"/>
                        <scope line="82"/>
                    </scope>
                </scope>
            </method>
            <declaration name="x11gc" type="X11GraphicsConfig" line="93"/>
            <method name="X11SurfaceDataProxy" type="constructor" line="95">
                <params>
                    <param name="x11gc" type="X11GraphicsConfig"/>
                </params>
            </method>
            <method name="validateSurfaceData" type="SurfaceData" line="103">
                <params>
                    <param name="srcData" type="SurfaceData"/>
                    <param name="cachedData" type="SurfaceData"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="105">
                    Bitmask will be created lazily during the blit phase                    
                </comment>
                <scope line="104"/>
            </method>
            <class name="Opaque" line="113">
                <extends class="X11SurfaceDataProxy"/>
                <javadoc line="113">
                    Proxy for opaque source images.
                      This proxy can accelerate unscaled Src copies.                    
                </javadoc>
                <method name="Opaque" type="constructor" line="118">
                    <params>
                        <param name="x11gc" type="X11GraphicsConfig"/>
                    </params>
                </method>
                <method name="getTransparency" type="int" line="122"/>
                <method name="isSupportedOperation" type="boolean" line="131">
                    <params>
                        <param name="srcData" type="SurfaceData"/>
                        <param name="txtype" type="int"/>
                        <param name="comp" type="CompositeType"/>
                        <param name="bgColor" type="Color"/>
                    </params>
                </method>
            </class>
            <class name="Bitmask" line="138">
                <extends class="X11SurfaceDataProxy"/>
                <javadoc line="138">
                    Proxy for bitmask transparent source images.
                      This proxy can accelerate unscaled Src copies or
                      unscaled SrcOver copies that use an opaque bgColor.                    
                </javadoc>
                <method name="Bitmask" type="constructor" line="144">
                    <params>
                        <param name="x11gc" type="X11GraphicsConfig"/>
                    </params>
                </method>
                <method name="getTransparency" type="int" line="148"/>
                <method name="isSupportedOperation" type="boolean" line="157">
                    <params>
                        <param name="srcData" type="SurfaceData"/>
                        <param name="txtype" type="int"/>
                        <param name="comp" type="CompositeType"/>
                        <param name="bgColor" type="Color"/>
                    </params>
                    <comment line="158">
                        These could probably be combined into a single                        
                    </comment>
                    <comment line="159">
                        nested if, but the logic is easier to follow this way.                        
                    </comment>
                    <comment line="161">
                        we don&apos;t have X11 scale loops, so always use                        
                    </comment>
                    <comment line="162">
                        software surface in case of scaling                        
                    </comment>
                    <comment line="173">
                        for transparent images SrcNoEa+bgColor has the                        
                    </comment>
                    <comment line="174">
                        same effect as SrcOverNoEa+bgColor, so we allow                        
                    </comment>
                    <comment line="175">
                        copying from pixmap SD using accelerated blitbg loops:                        
                    </comment>
                    <comment line="176">
                        SrcOver will be changed to SrcNoEa in DrawImage.blitSD                        
                    </comment>
                    <scope line="163"/>
                    <scope line="169"/>
                    <scope line="180"/>
                </method>
            </class>
        </class>
    </source>