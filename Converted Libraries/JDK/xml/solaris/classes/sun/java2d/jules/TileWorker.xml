<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.jules">
        <import package="java.util"/>
        <class name="TileWorker" line="30">
            <comment line="42">
                                
            </comment>
            <implements interface="Runnable"/>
            <declaration name="RASTERIZED_TILE_SYNC_GRANULARITY" type="int" line="31"/>
            <declaration name="rasterizedTileConsumerCache" type="ArrayList&lt;JulesTile&gt;" line="32"/>
            <declaration name="rasterizedBuffers" type="LinkedList&lt;JulesTile&gt;" line="34"/>
            <declaration name="tileCache" type="IdleTileCache" line="36"/>
            <declaration name="tileGenerator" type="JulesAATileGenerator" line="37"/>
            <declaration name="workerStartIndex" type="int" line="38"/>
            <declaration name="consumerPos" type="int" line="39"/>
            <declaration name="mainThreadCnt" type="int" line="42"/>
            <declaration name="workerCnt" type="int" line="43"/>
            <declaration name="doubled" type="int" line="44"/>
            <method name="TileWorker" type="constructor" line="46">
                <params>
                    <param name="tileGenerator" type="JulesAATileGenerator"/>
                    <param name="workerStartIndex" type="int"/>
                    <param name="tileCache" type="IdleTileCache"/>
                </params>
            </method>
            <method name="run" type="void" line="52">
                <declaration name="tiles" type="ArrayList&lt;JulesTile&gt;" line="53"/>
                <scope line="55">
                    <declaration name="tile" type="TileTrapContainer" line="56"/>
                    <scope line="58">
                        <declaration name="rasterizedTile" type="JulesTile" line="59"/>
                        <scope line="65"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="78">
                Returns a rasterized tile for the specified tilePos,
                  or null if it isn&apos;t available.
                  Allowed caller: MaskBlit/Consumer-Thread                
            </javadoc>
            <method name="getPreRasterizedTile" type="JulesTile" line="83">
                <params>
                    <param name="tilePos" type="int"/>
                </params>
                <comment line="119">
                    If there are no tiles left, tell the producer the current                    
                </comment>
                <comment line="120">
                    position. This avoids producing tiles twice.                    
                </comment>
                <declaration name="tile" type="JulesTile" line="84"/>
                <scope line="88">
                    <scope line="89"/>
                </scope>
                <scope line="95">
                    <declaration name="t" type="JulesTile" line="96"/>
                    <scope line="98"/>
                    <scope line="102"/>
                    <scope line="107"/>
                    <scope line="111"/>
                </scope>
                <scope line="116"/>
                <scope line="122"/>
            </method>
            <method name="addRasterizedTiles" type="void" line="129">
                <params>
                    <param name="tiles" type="ArrayList<JulesTile>"/>
                </params>
                <scope line="130"/>
            </method>
            <javadoc line="135">
                Releases cached tiles.
                  Allowed caller: MaskBlit/Consumer-Thread                
            </javadoc>
            <method name="disposeConsumerResources" type="void" line="139">
                <scope line="140"/>
            </method>
        </class>
    </source>