<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.jules">
        <import package="java.awt"/>
        <import package="java.awt.geom"/>
        <import package="java.util.concurrent"/>
        <import package="sun.java2d.pipe"/>
        <import package="sun.java2d.xr"/>
        <class name="JulesAATileGenerator" line="34">
            <comment line="36">
                                
            </comment>
            <comment line="50">
                                
            </comment>
            <comment line="214">
                Optimization for large fills. Foutunatly cairo does generate an y-sorted
                 list of trapezoids. This makes it quite simple to check wether a tile is
                 fully covered by traps by: - Checking wether the tile is fully covered by
                 traps vertically (trap 2 starts where trap 1 ended) - Checking wether all
                 traps cover the tile horizontally This also works, when a single tile
                 coveres the whole tile.                
            </comment>
            <implements interface="AATileGenerator"/>
            <declaration name="rasterThreadPool" type="ExecutorService" line="36"/>
            <declaration name="CPU_CNT" type="int" line="38"/>
            <declaration name="ENABLE_THREADING" type="boolean" line="40"/>
            <declaration name="THREAD_MIN" type="int" line="41"/>
            <declaration name="THREAD_BEGIN" type="int" line="42"/>
            <declaration name="tileCache" type="IdleTileCache" line="44"/>
            <declaration name="worker" type="TileWorker" line="45"/>
            <declaration name="threaded" type="boolean" line="46"/>
            <declaration name="rasterTileCnt" type="int" line="47"/>
            <declaration name="TILE_SIZE" type="int" line="50"/>
            <declaration name="TILE_SIZE_FP" type="int" line="51"/>
            <declaration name="left" type="int" line="52"/>
            <declaration name="leftFP" type="int" line="53"/>
            <declaration name="tileCnt" type="int" line="54"/>
            <declaration name="currTilePos" type="int" line="55"/>
            <declaration name="traps" type="TrapezoidList" line="56"/>
            <declaration name="tiledTrapArray" type="TileTrapContainer[]" line="57"/>
            <declaration name="mainTile" type="JulesTile" line="58"/>
            <method name="JulesAATileGenerator" type="constructor" line="62">
                <params>
                    <param name="s" type="Shape"/>
                    <param name="at" type="AffineTransform"/>
                    <param name="clip" type="Region"/>
                    <param name="bs" type="BasicStroke"/>
                    <param name="thin" type="boolean"/>
                    <param name="normalize" type="boolean"/>
                    <param name="bbox" type="int[]"/>
                </params>
                <declaration name="buf" type="JulesPathBuf" line="63"/>
                <scope line="65"/>
                <scope line="67"/>
                <scope line="77"/>
            </method>
            <method name="rasterizeTrapezoidsNative" type="long" line="86"/>
            <method name="freePixmanImgPtr" type="void" line="91"/>
            <method name="calculateArea" type="void" line="93">
                <params>
                    <param name="bbox" type="int[]"/>
                </params>
                <comment line="125">
                    If there is no area touched by the traps, don&apos;t
                     render them.                    
                </comment>
                <scope line="102">
                    <scope line="118"/>
                    <scope line="123"/>
                </scope>
            </method>
            <method name="bucketSortTraps" type="void" line="132">
                <scope line="134">
                    <declaration name="top" type="int" line="135"/>
                    <declaration name="bottom" type="int" line="136"/>
                    <declaration name="p1xLeft" type="int" line="137"/>
                    <declaration name="p2xLeft" type="int" line="138"/>
                    <declaration name="p1xRight" type="int" line="139"/>
                    <declaration name="p2xRight" type="int" line="140"/>
                    <declaration name="minLeft" type="int" line="142"/>
                    <declaration name="maxRight" type="int" line="143"/>
                    <declaration name="startTileY" type="int" line="148"/>
                    <declaration name="endTileY" type="int" line="149"/>
                    <declaration name="startTileX" type="int" line="150"/>
                    <declaration name="endTileX" type="int" line="151"/>
                    <scope line="153">
                        <scope line="155">
                            <declaration name="trapArrayPos" type="int" line="156"/>
                            <declaration name="trapTileList" type="TileTrapContainer" line="157"/>
                            <scope line="158"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="getAlpha" type="void" line="169">
                <params>
                    <param name="tileBuffer" type="byte[]"/>
                    <param name="offset" type="int"/>
                    <param name="rowstride" type="int"/>
                </params>
                <declaration name="tile" type="JulesTile" line="170"/>
                <scope line="172"/>
                <scope line="176"/>
                <scope line="180"/>
            </method>
            <method name="calculateTypicalAlpha" type="void" line="188">
                <scope line="191">
                    <declaration name="trapCont" type="TileTrapContainer" line="193"/>
                    <scope line="194">
                        <declaration name="trapList" type="GrowableIntArray" line="195"/>
                        <declaration name="tileAlpha" type="int" line="197"/>
                        <scope line="198"/>
                        <scope line="200"/>
                        <scope line="204"/>
                    </scope>
                </scope>
            </method>
            <method name="doTrapsCoverTile" type="boolean" line="221">
                <params>
                    <param name="trapList" type="GrowableIntArray"/>
                    <param name="tileIndex" type="int"/>
                </params>
                <comment line="224">
                    Don&apos;t bother optimizing tiles with lots of traps, usually it won&apos;t
                     succeed anyway.                    
                </comment>
                <comment line="235">
                    Check wether first tile covers the beginning of the tile vertically                    
                </comment>
                <comment line="242">
                    Initialize lastBottom with top, in order to pass the checks for the
                     first iteration                    
                </comment>
                <comment line="259">
                    When the last trap covered the tileEnd vertically, the tile is fully
                     covered                    
                </comment>
                <scope line="225"/>
                <declaration name="tileStartX" type="int" line="229"/>
                <declaration name="tileStartY" type="int" line="230"/>
                <declaration name="tileEndX" type="int" line="231"/>
                <declaration name="tileEndY" type="int" line="232"/>
                <declaration name="firstTop" type="int" line="235"/>
                <declaration name="firstBottom" type="int" line="236"/>
                <scope line="237"/>
                <declaration name="lastBottom" type="int" line="243"/>
                <scope line="245">
                    <declaration name="trapPos" type="int" line="246"/>
                    <scope line="252"/>
                </scope>
            </method>
            <method name="getTypicalAlpha" type="int" line="263">
                <scope line="264"/>
                <scope line="266"/>
            </method>
            <method name="dispose" type="void" line="271">
                <scope line="274"/>
            </method>
            <method name="rasterizeTile" type="JulesTile" line="280">
                <params>
                    <param name="tileIndex" type="int"/>
                    <param name="tile" type="JulesTile"/>
                </params>
                <declaration name="tileOffsetX" type="int" line="281"/>
                <declaration name="tileOffsetY" type="int" line="282"/>
                <declaration name="trapCont" type="TileTrapContainer" line="283"/>
                <declaration name="trapList" type="GrowableIntArray" line="284"/>
                <scope line="286">
                    <declaration name="pixmanImgPtr" type="long" line="287"/>
                </scope>
            </method>
            <method name="getXPos" type="int" line="301">
                <params>
                    <param name="arrayPos" type="int"/>
                </params>
            </method>
            <method name="getYPos" type="int" line="305">
                <params>
                    <param name="arrayPos" type="int"/>
                </params>
            </method>
            <method name="nextTile" type="void" line="309"/>
            <method name="getTileHeight" type="int" line="313"/>
            <method name="getTileWidth" type="int" line="317"/>
            <method name="getTileCount" type="int" line="321"/>
            <method name="getTrapContainer" type="TileTrapContainer" line="325">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
        </class>
        <class name="TileTrapContainer" line="330">
            <comment line="36">
                                
            </comment>
            <comment line="50">
                                
            </comment>
            <comment line="214">
                Optimization for large fills. Foutunatly cairo does generate an y-sorted
                 list of trapezoids. This makes it quite simple to check wether a tile is
                 fully covered by traps by: - Checking wether the tile is fully covered by
                 traps vertically (trap 2 starts where trap 1 ended) - Checking wether all
                 traps cover the tile horizontally This also works, when a single tile
                 coveres the whole tile.                
            </comment>
            <declaration name="tileAlpha" type="int" line="331"/>
            <declaration name="traps" type="GrowableIntArray" line="332"/>
            <method name="TileTrapContainer" type="constructor" line="334">
                <params>
                    <param name="traps" type="GrowableIntArray"/>
                </params>
            </method>
            <method name="setTileAlpha" type="void" line="338">
                <params>
                    <param name="tileAlpha" type="int"/>
                </params>
            </method>
            <method name="getTileAlpha" type="int" line="342"/>
            <method name="getTraps" type="GrowableIntArray" line="346"/>
        </class>
    </source>