<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.jules">
        <import package="java.awt"/>
        <import package="java.awt.geom"/>
        <import package="sun.awt.X11GraphicsEnvironment"/>
        <import package="sun.java2d.pipe"/>
        <import package="sun.java2d.xr"/>
        <class name="JulesPathBuf" line="34">
            <declaration name="emptyDash" type="double[]" line="35"/>
            <declaration name="CAIRO_PATH_OP_MOVE_TO" type="byte" line="37"/>
            <declaration name="CAIRO_PATH_OP_LINE_TO" type="byte" line="38"/>
            <declaration name="CAIRO_PATH_OP_CURVE_TO" type="byte" line="39"/>
            <declaration name="CAIRO_PATH_OP_CLOSE_PATH" type="byte" line="40"/>
            <declaration name="CAIRO_FILL_RULE_WINDING" type="int" line="42"/>
            <declaration name="CAIRO_FILL_RULE_EVEN_ODD" type="int" line="43"/>
            <declaration name="points" type="GrowablePointArray" line="45"/>
            <declaration name="ops" type="GrowableByteArray" line="46"/>
            <declaration name="xTrapArray" type="int[]" line="47"/>
            <declaration name="isCairoAvailable" type="boolean" line="49"/>
            <scope line="51">
                <anonymous_class line="54">
                    <method name="run" type="Boolean" line="55">
                        <declaration name="loadSuccess" type="boolean" line="56"/>
                        <scope line="57">
                            <scope line="58">
                                <scope line="61"/>
                            </scope>
                            <scope line="65">
                                <scope line="67"/>
                            </scope>
                        </scope>
                    </method>
                </anonymous_class>
            </scope>
            <method name="isCairoAvailable" type="boolean" line="78"/>
            <method name="tesselateFill" type="TrapezoidList" line="82">
                <params>
                    <param name="s" type="Shape"/>
                    <param name="at" type="AffineTransform"/>
                    <param name="clip" type="Region"/>
                </params>
                <declaration name="windingRule" type="int" line="83"/>
            </method>
            <method name="tesselateStroke" type="TrapezoidList" line="98">
                <params>
                    <param name="s" type="Shape"/>
                    <param name="bs" type="BasicStroke"/>
                    <param name="thin" type="boolean"/>
                    <param name="adjust" type="boolean"/>
                    <param name="antialias" type="boolean"/>
                    <param name="at" type="AffineTransform"/>
                    <param name="clip" type="Region"/>
                </params>
                <declaration name="lw" type="float" line="100"/>
                <scope line="101">
                    <scope line="102"/>
                    <scope line="104"/>
                </scope>
                <scope line="107"/>
                <declaration name="dashArray" type="double[]" line="113"/>
            </method>
            <method name="floatToDoubleArray" type="double[]" line="130">
                <params>
                    <param name="dashArrayFloat" type="float[]"/>
                </params>
                <declaration name="dashArrayDouble" type="double[]" line="131"/>
                <scope line="132">
                    <scope line="135"/>
                </scope>
            </method>
            <method name="convertPathData" type="int" line="143">
                <params>
                    <param name="s" type="Shape"/>
                    <param name="at" type="AffineTransform"/>
                </params>
                <comment line="174">
                    q0 = p0
                        q1 = (p0+2p1)3
                        q2 = (p2+2p1)3
                        q3 = p2                    
                </comment>
                <declaration name="pi" type="PathIterator" line="144"/>
                <declaration name="coords" type="double[]" line="146"/>
                <declaration name="currX" type="double" line="147"/>
                <declaration name="currY" type="double" line="148"/>
                <scope line="150">
                    <declaration name="curOp" type="int" line="151"/>
                    <declaration name="pointIndex" type="int" line="153"/>
                    <declaration name="x1" type="double" line="181"/>
                    <declaration name="y1" type="double" line="182"/>
                    <declaration name="x2" type="double" line="183"/>
                    <declaration name="x3" type="double" line="184"/>
                    <declaration name="y3" type="double" line="185"/>
                </scope>
            </method>
            <method name="tesselateStrokeNative" type="int[]" line="232"/>
            <method name="tesselateFillNative" type="int[]" line="244"/>
            <method name="clear" type="void" line="249"/>
            <method name="DoubleToCairoFixed" type="int" line="255">
                <params>
                    <param name="dbl" type="double"/>
                </params>
            </method>
            <method name="getCairoWindingRule" type="int" line="259">
                <params>
                    <param name="j2dWindingRule" type="int"/>
                </params>
            </method>
        </class>
    </source>