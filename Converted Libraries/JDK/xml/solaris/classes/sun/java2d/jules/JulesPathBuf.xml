<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.jules">
        <import package="java.awt"/>
        <import package="java.awt.geom"/>
        <import package="sun.awt.X11GraphicsEnvironment"/>
        <import package="sun.java2d.pipe"/>
        <import package="sun.java2d.xr"/>
        <class name="JulesPathBuf" line="7">
            <declaration name="emptyDash" type="double[]" line="8"/>
            <declaration name="CAIRO_PATH_OP_MOVE_TO" type="byte" line="9"/>
            <declaration name="CAIRO_PATH_OP_LINE_TO" type="byte" line="10"/>
            <declaration name="CAIRO_PATH_OP_CURVE_TO" type="byte" line="11"/>
            <declaration name="CAIRO_PATH_OP_CLOSE_PATH" type="byte" line="12"/>
            <declaration name="CAIRO_FILL_RULE_WINDING" type="int" line="13"/>
            <declaration name="CAIRO_FILL_RULE_EVEN_ODD" type="int" line="14"/>
            <declaration name="points" type="GrowablePointArray" line="15"/>
            <declaration name="ops" type="GrowableByteArray" line="16"/>
            <declaration name="xTrapArray" type="int[]" line="17"/>
            <declaration name="isCairoAvailable" type="boolean" line="18"/>
            <scope line="19">
                <anonymous_class line="20">
                    <method name="run" type="Boolean" line="21">
                        <declaration name="loadSuccess" type="boolean" line="22"/>
                        <scope line="23">
                            <scope line="24">
                                <scope line="27"/>
                            </scope>
                            <scope line="31">
                                <scope line="33"/>
                            </scope>
                        </scope>
                    </method>
                </anonymous_class>
            </scope>
            <method name="isCairoAvailable" type="boolean" line="43"/>
            <method name="tesselateFill" type="TrapezoidList" line="46">
                <params>
                    <param name="s" type="Shape"/>
                    <param name="at" type="AffineTransform"/>
                    <param name="clip" type="Region"/>
                </params>
                <declaration name="windingRule" type="int" line="47"/>
            </method>
            <method name="tesselateStroke" type="TrapezoidList" line="52">
                <params>
                    <param name="s" type="Shape"/>
                    <param name="bs" type="BasicStroke"/>
                    <param name="thin" type="boolean"/>
                    <param name="adjust" type="boolean"/>
                    <param name="antialias" type="boolean"/>
                    <param name="at" type="AffineTransform"/>
                    <param name="clip" type="Region"/>
                </params>
                <declaration name="lw" type="float" line="53"/>
                <scope line="54">
                    <scope line="55"/>
                    <scope line="58"/>
                </scope>
                <scope line="62"/>
                <declaration name="dashArray" type="double[]" line="66"/>
            </method>
            <method name="floatToDoubleArray" type="double[]" line="71">
                <params>
                    <param name="dashArrayFloat" type="float[]"/>
                </params>
                <declaration name="dashArrayDouble" type="double[]" line="72"/>
                <scope line="73">
                    <scope line="75"/>
                </scope>
            </method>
            <method name="convertPathData" type="int" line="81">
                <params>
                    <param name="s" type="Shape"/>
                    <param name="at" type="AffineTransform"/>
                </params>
                <declaration name="pi" type="PathIterator" line="82"/>
                <declaration name="coords" type="double[]" line="83"/>
                <declaration name="currX" type="double" line="84"/>
                <declaration name="currY" type="double" line="85"/>
                <scope line="86">
                    <declaration name="curOp" type="int" line="87"/>
                    <declaration name="pointIndex" type="int" line="88"/>
                    <declaration name="x1" type="double" line="107"/>
                    <declaration name="y1" type="double" line="108"/>
                    <declaration name="x2" type="double" line="109"/>
                    <declaration name="x3" type="double" line="110"/>
                    <declaration name="y3" type="double" line="111"/>
                </scope>
            </method>
            <method name="tesselateStrokeNative" type="int[]" line="151"/>
            <method name="tesselateFillNative" type="int[]" line="152"/>
            <method name="clear" type="void" line="153"/>
            <method name="DoubleToCairoFixed" type="int" line="158">
                <params>
                    <param name="dbl" type="double"/>
                </params>
            </method>
            <method name="getCairoWindingRule" type="int" line="161">
                <params>
                    <param name="j2dWindingRule" type="int"/>
                </params>
            </method>
        </class>
    </source>