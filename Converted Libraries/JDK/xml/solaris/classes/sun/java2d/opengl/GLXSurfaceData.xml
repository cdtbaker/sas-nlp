<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.opengl">
        <import package="java.awt.GraphicsConfiguration"/>
        <import package="java.awt.GraphicsDevice"/>
        <import package="java.awt.GraphicsEnvironment"/>
        <import package="java.awt.Image"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.Transparency"/>
        <import package="java.awt.image.ColorModel"/>
        <import package="sun.awt.X11ComponentPeer"/>
        <import package="sun.java2d.SurfaceData"/>
        <import package="sun.java2d.loops.SurfaceType"/>
        <class name="GLXSurfaceData" line="39">
            <extends class="OGLSurfaceData"/>
            <declaration name="peer" type="X11ComponentPeer" line="41"/>
            <declaration name="graphicsConfig" type="GLXGraphicsConfig" line="42"/>
            <method name="initOps" type="void" line="44"/>
            <method name="initPbuffer" type="boolean" line="45"/>
            <method name="GLXSurfaceData" type="constructor" line="51">
                <params>
                    <param name="peer" type="X11ComponentPeer"/>
                    <param name="gc" type="GLXGraphicsConfig"/>
                    <param name="cm" type="ColorModel"/>
                    <param name="type" type="int"/>
                </params>
            </method>
            <method name="getDeviceConfiguration" type="GraphicsConfiguration" line="58"/>
            <javadoc line="62">
                Creates a SurfaceData object representing the primary (front) buffer
                  of an on-screen Window.                
            </javadoc>
            <method name="createData" type="GLXWindowSurfaceData" line="66">
                <params>
                    <param name="peer" type="X11ComponentPeer"/>
                </params>
                <declaration name="gc" type="GLXGraphicsConfig" line="67"/>
            </method>
            <javadoc line="71">
                Creates a SurfaceData object representing the back buffer of a
                  double-buffered on-screen Window.                
            </javadoc>
            <method name="createData" type="GLXOffScreenSurfaceData" line="78">
                <params>
                    <param name="peer" type="X11ComponentPeer"/>
                    <param name="image" type="Image"/>
                    <param name="type" type="int"/>
                </params>
                <declaration name="gc" type="GLXGraphicsConfig" line="79"/>
                <declaration name="r" type="Rectangle" line="80"/>
                <scope line="81"/>
                <scope line="85"/>
            </method>
            <javadoc line="92">
                Creates a SurfaceData object representing an off-screen buffer (either
                  a Pbuffer or Texture).                
            </javadoc>
            <method name="createData" type="GLXOffScreenSurfaceData" line="100">
                <params>
                    <param name="gc" type="GLXGraphicsConfig"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="cm" type="ColorModel"/>
                    <param name="image" type="Image"/>
                    <param name="type" type="int"/>
                </params>
            </method>
            <method name="getGC" type="GLXGraphicsConfig" line="105">
                <params>
                    <param name="peer" type="X11ComponentPeer"/>
                </params>
                <comment line="109">
                    REMIND: this should rarely (never?) happen, but what if                    
                </comment>
                <comment line="110">
                    default config is not GLX?                    
                </comment>
                <scope line="106"/>
                <scope line="108">
                    <declaration name="env" type="GraphicsEnvironment" line="111"/>
                    <declaration name="gd" type="GraphicsDevice" line="113"/>
                </scope>
            </method>
            <class name="GLXWindowSurfaceData" line="118">
                <extends class="GLXSurfaceData"/>
                <method name="GLXWindowSurfaceData" type="constructor" line="122">
                    <params>
                        <param name="peer" type="X11ComponentPeer"/>
                        <param name="gc" type="GLXGraphicsConfig"/>
                    </params>
                </method>
                <method name="getReplacement" type="SurfaceData" line="126"/>
                <method name="getBounds" type="Rectangle" line="130">
                    <declaration name="r" type="Rectangle" line="131"/>
                </method>
                <javadoc line="136">
                    Returns destination Component associated with this SurfaceData.                    
                </javadoc>
                <method name="getDestination" type="Object" line="139"/>
            </class>
            <class name="GLXVSyncOffScreenSurfaceData" line="144">
                <extends class="GLXOffScreenSurfaceData"/>
                <javadoc line="144">
                    A surface which implements a v-synced flip back-buffer with COPIED
                      FlipContents.
                      This surface serves as a back-buffer to the outside world, while
                      it is actually an offscreen surface. When the BufferStrategy this surface
                      belongs to is showed, it is first copied to the real private
                      FLIP_BACKBUFFER, which is then flipped.                    
                </javadoc>
                <declaration name="flipSurface" type="GLXOffScreenSurfaceData" line="156"/>
                <method name="GLXVSyncOffScreenSurfaceData" type="constructor" line="163">
                    <params>
                        <param name="peer" type="X11ComponentPeer"/>
                        <param name="gc" type="GLXGraphicsConfig"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                        <param name="image" type="Image"/>
                        <param name="cm" type="ColorModel"/>
                        <param name="type" type="int"/>
                    </params>
                </method>
                <method name="getFlipSurface" type="SurfaceData" line="168"/>
                <method name="flush" type="void" line="173"/>
            </class>
            <class name="GLXOffScreenSurfaceData" line="180">
                <extends class="GLXSurfaceData"/>
                <declaration name="offscreenImage" type="Image" line="182"/>
                <declaration name="width" type="int" line="183"/>
                <method name="GLXOffScreenSurfaceData" type="constructor" line="190">
                    <params>
                        <param name="peer" type="X11ComponentPeer"/>
                        <param name="gc" type="GLXGraphicsConfig"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                        <param name="image" type="Image"/>
                        <param name="cm" type="ColorModel"/>
                        <param name="type" type="int"/>
                    </params>
                </method>
                <method name="getReplacement" type="SurfaceData" line="200"/>
                <method name="getBounds" type="Rectangle" line="204">
                    <scope line="205">
                        <declaration name="r" type="Rectangle" line="206"/>
                    </scope>
                    <scope line="209"/>
                </method>
                <javadoc line="214">
                    Returns destination Image associated with this SurfaceData.                    
                </javadoc>
                <method name="getDestination" type="Object" line="217"/>
            </class>
        </class>
    </source>