<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.opengl">
        <import package="java.awt.BufferCapabilities"/>
        <import package="java.awt.BufferCapabilities.FlipContents"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.GraphicsConfiguration"/>
        <import package="java.awt.Transparency"/>
        <import package="java.awt.image.ColorModel"/>
        <import package="sun.awt.X11ComponentPeer"/>
        <import package="sun.awt.image.SunVolatileImage"/>
        <import package="sun.awt.image.VolatileSurfaceManager"/>
        <import package="sun.java2d.BackBufferCapsProvider"/>
        <import package="sun.java2d.SurfaceData"/>
        <import package="sun.java2d.opengl.OGLContext.OGLContextCaps"/>
        <import package="sun.java2d.pipe.hw.ExtendedBufferCapabilities"/>
        <import package="sun.java2d.pipe.hw.AccelSurface"/>
        <import package="sun.java2d.pipe.hw.ExtendedBufferCapabilities.VSyncType"/>
        <class name="GLXVolatileSurfaceManager" line="44">
            <extends class="VolatileSurfaceManager"/>
            <declaration name="accelerationEnabled" type="boolean" line="46"/>
            <method name="GLXVolatileSurfaceManager" type="constructor" line="48">
                <params>
                    <param name="vImg" type="SunVolatileImage"/>
                    <param name="context" type="Object"/>
                </params>
                <comment line="52">
                    We will attempt to accelerate this image only under the
                     following conditions:
                       - the image is opaque OR
                       - the image is translucent AND
                           - the GraphicsConfig supports the FBO extension OR
                           - the GraphicsConfig has a stored alpha channel                    
                </comment>
                <declaration name="transparency" type="int" line="59"/>
                <declaration name="gc" type="GLXGraphicsConfig" line="60"/>
            </method>
            <method name="isAccelerationEnabled" type="boolean" line="68"/>
            <javadoc line="72">
                Create a pbuffer-based SurfaceData object (or init the backbuffer
                  of an existing window if this is a double buffered GraphicsConfig)                
            </javadoc>
            <method name="initAcceleratedSurface" type="SurfaceData" line="76">
                <comment line="106">
                    peer must be non-null in this case                    
                </comment>
                <comment line="113">
                    if acceleration type is forced (type != UNDEFINED) then
                     use the forced type, otherwise choose one based on caps                    
                </comment>
                <declaration name="sData" type="SurfaceData" line="77"/>
                <declaration name="comp" type="Component" line="78"/>
                <declaration name="peer" type="X11ComponentPeer" line="79"/>
                <scope line="82">
                    <declaration name="createVSynced" type="boolean" line="83"/>
                    <declaration name="forceback" type="boolean" line="84"/>
                    <scope line="85">
                        <scope line="87">
                            <declaration name="provider" type="BackBufferCapsProvider" line="88"/>
                            <declaration name="caps" type="BufferCapabilities" line="90"/>
                            <scope line="91">
                                <declaration name="ebc" type="ExtendedBufferCapabilities" line="92"/>
                                <scope line="96"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="104"/>
                    <scope line="107">
                        <declaration name="gc" type="GLXGraphicsConfig" line="108"/>
                        <declaration name="cm" type="ColorModel" line="110"/>
                        <declaration name="type" type="int" line="111"/>
                        <scope line="114"/>
                        <scope line="118"/>
                        <scope line="120"/>
                    </scope>
                </scope>
                <scope line="127"/>
                <scope line="129"/>
            </method>
            <method name="isConfigValid" type="boolean" line="137">
                <params>
                    <param name="gc" type="GraphicsConfiguration"/>
                </params>
            </method>
            <method name="initContents" type="void" line="142">
                <scope line="143"/>
            </method>
        </class>
    </source>