<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs.ext">
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.CharBuffer"/>
        <import package="java.nio.charset"/>
        <import package="java.util.Collections"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <class name="COMPOUND_TEXT_Encoder" line="38">
            <extends class="CharsetEncoder"/>
            <declaration name="encodingToEncoderMap" type="Map&amp;lt;String,CharsetEncoder&amp;gt;" line="40"/>
            <javadoc line="40">
                NOTE: The following four static variables should be used only for
                  testing whether a encoder can encode a specific character. They
                  cannot be used for actual encoding because they are shared across all
                  COMPOUND_TEXT encoders and may be stateful.                
            </javadoc>
            <declaration name="latin1Encoder" type="CharsetEncoder" line="48"/>
            <declaration name="defaultEncoder" type="CharsetEncoder" line="49"/>
            <declaration name="defaultEncodingSupported" type="boolean" line="50"/>
            <scope line="52">
                <declaration name="encoder" type="CharsetEncoder" line="53"/>
                <declaration name="encoding" type="String" line="54"/>
                <scope line="55"/>
                <scope line="59">
                    <scope line="60"/>
                    <scope line="63"/>
                </scope>
            </scope>
            <declaration name="encoder" type="CharsetEncoder" line="73"/>
            <declaration name="charBuf" type="char[]" line="74"/>
            <declaration name="charbuf" type="CharBuffer" line="75"/>
            <declaration name="nonStandardCharsetBuffer" type="ByteArrayOutputStream" line="76"/>
            <declaration name="byteBuf" type="byte[]" line="77"/>
            <declaration name="bytebuf" type="ByteBuffer" line="78"/>
            <declaration name="numNonStandardChars" type="int" line="79"/>
            <method name="COMPOUND_TEXT_Encoder" type="constructor" line="81">
                <params>
                    <param name="cs" type="Charset"/>
                </params>
                <scope line="85"/>
                <scope line="87"/>
            </method>
            <method name="encodeLoop" type="CoderResult" line="91">
                <params>
                    <param name="src" type="CharBuffer"/>
                    <param name="des" type="ByteBuffer"/>
                </params>
                <comment line="104">
                    The compound text specification only permits the octets
                     0x09, 0x0A, 0x1B, and 0x9B in C0 and C1. Of these, 1B and
                     9B must also be removed because they initiate control
                     sequences.                    
                </comment>
                <comment line="112">
                    System.out.println(&quot;char=&quot; + charBuf[0] + &quot;, enc=&quot; + enc);                    
                </comment>
                <comment line="126">
                    cr= encoder.flush(des);                    
                </comment>
                <declaration name="cr" type="CoderResult" line="92"/>
                <declaration name="input" type="char[]" line="93"/>
                <declaration name="inOff" type="int" line="94"/>
                <declaration name="inEnd" type="int" line="95"/>
                <scope line="97">
                    <scope line="98">
                        <scope line="102"/>
                        <declaration name="enc" type="CharsetEncoder" line="110"/>
                        <scope line="112">
                            <scope line="114"/>
                            <scope line="117"/>
                        </scope>
                        <scope line="121">
                            <scope line="122"/>
                            <scope line="124"/>
                            <declaration name="escSequence" type="byte[]" line="130"/>
                            <scope line="132"/>
                            <scope line="136"/>
                            <scope line="138"/>
                            <scope line="140"/>
                        </scope>
                        <scope line="147"/>
                        <scope line="149"/>
                    </scope>
                </scope>
                <scope line="160"/>
            </method>
            <method name="implFlush" type="CoderResult" line="165">
                <params>
                    <param name="out" type="ByteBuffer"/>
                </params>
                <comment line="169">
                    : encoder.flush(out);                    
                </comment>
                <declaration name="cr" type="CoderResult" line="166"/>
            </method>
            <method name="initNonStandardCharsetBuffer" type="void" line="176">
                <params>
                    <param name="c" type="CharsetEncoder"/>
                    <param name="escSequence" type="byte[]"/>
                </params>
                <comment line="182">
                    M placeholder                    
                </comment>
                <comment line="183">
                    L placeholder                    
                </comment>
                <comment line="191">
                    divider                    
                </comment>
                <declaration name="encoding" type="byte[]" line="183"/>
                <scope line="185"/>
            </method>
            <method name="flushNonStandardCharsetBuffer" type="CoderResult" line="194">
                <params>
                    <param name="out" type="ByteBuffer"/>
                </params>
                <comment line="219">
                    The non-standard charset header only supports 2^14-1 bytes of data.
                     If we have more than that, we have to repeat the header.                    
                </comment>
                <comment line="231">
                    M                    
                </comment>
                <comment line="233">
                    L                    
                </comment>
                <scope line="195">
                    <declaration name="flushBuf" type="byte[]" line="196"/>
                    <declaration name="bb" type="ByteBuffer" line="198"/>
                </scope>
                <declaration name="numBytes" type="int" line="205"/>
                <declaration name="nonStandardBytesOff" type="int" line="206"/>
                <scope line="211"/>
                <declaration name="nonStandardBytes" type="byte[]" line="215"/>
                <scope line="220">
                    <declaration name="toWrite" type="int" line="226"/>
                </scope>
            </method>
            <javadoc line="244">
                Resets the encoder.
                  Call this method to reset the encoder to its initial state                
            </javadoc>
            <method name="implReset" type="void" line="248">
                <scope line="252"/>
                <scope line="254"/>
            </method>
            <javadoc line="259">
                Return whether a character is mappable or not                
                <return>
                    true if a character is mappable                    
                </return>
            </javadoc>
            <method name="canEncode" type="boolean" line="263">
                <params>
                    <param name="ch" type="char"/>
                </params>
            </method>
            <method name="implOnMalformedInput" type="void" line="267">
                <params>
                    <param name="newAction" type="CodingErrorAction"/>
                </params>
            </method>
            <method name="implOnUnmappableCharacter" type="void" line="271">
                <params>
                    <param name="newAction" type="CodingErrorAction"/>
                </params>
            </method>
            <method name="implReplaceWith" type="void" line="275">
                <params>
                    <param name="newReplacement" type="byte[]"/>
                </params>
            </method>
            <javadoc line="280">
                Try to figure out which CharsetEncoder to use for conversion
                  of the specified Unicode character. The target character encoding
                  of the returned encoder is approved to be used with Compound Text.                
                <param>
                    ch Unicode character                    
                </param>
                <return>
                    CharsetEncoder to convert the given character                    
                </return>
            </javadoc>
            <method name="getEncoder" type="CharsetEncoder" line="288">
                <params>
                    <param name="ch" type="char"/>
                </params>
                <comment line="290">
                    1. Try the current encoder.                    
                </comment>
                <comment line="295">
                    2. Try the default encoder.                    
                </comment>
                <comment line="306">
                    3. Try ISO8859-1.                    
                </comment>
                <comment line="316">
                    4. Brute force search of all supported encodings.                    
                </comment>
                <scope line="290"/>
                <scope line="295">
                    <declaration name="retval" type="CharsetEncoder" line="296"/>
                    <scope line="297"/>
                    <scope line="299"/>
                </scope>
                <scope line="306">
                    <declaration name="retval" type="CharsetEncoder" line="307"/>
                    <scope line="308"/>
                    <scope line="310"/>
                </scope>
                <scope line="317">
                    <declaration name="enc" type="CharsetEncoder" line="318"/>
                    <scope line="319">
                        <scope line="321"/>
                    </scope>
                    <scope line="327">
                        <declaration name="retval" type="CharsetEncoder" line="328"/>
                    </scope>
                </scope>
            </method>
            <method name="initEncoder" type="void" line="337">
                <params>
                    <param name="enc" type="CharsetEncoder"/>
                </params>
                <scope line="338"/>
                <scope line="341"/>
            </method>
            <declaration name="fcb" type="CharBuffer" line="344"/>
            <method name="flushEncoder" type="CoderResult" line="345">
                <params>
                    <param name="enc" type="CharsetEncoder"/>
                    <param name="bb" type="ByteBuffer"/>
                </params>
            </method>
        </class>
    </source>