<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs.ext">
        <import package="java.util.Collections"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.nio.charset"/>
        <class name="CompoundTextSupport" line="8">
            <class name="ControlSequence" line="9">
                <declaration name="hash" type="int" line="10"/>
                <declaration name="escSequence" type="byte[]" line="11"/>
                <declaration name="encoding" type="byte[]" line="12"/>
                <method name="ControlSequence" type="constructor" line="13">
                    <params>
                        <param name="escSequence" type="byte[]"/>
                    </params>
                </method>
                <method name="ControlSequence" type="constructor" line="16">
                    <params>
                        <param name="escSequence" type="byte[]"/>
                        <param name="encoding" type="byte[]"/>
                    </params>
                    <scope line="17"/>
                    <declaration name="hash" type="int" line="22"/>
                    <declaration name="length" type="int" line="23"/>
                    <scope line="24"/>
                    <scope line="27">
                        <scope line="28"/>
                    </scope>
                    <scope line="34"/>
                </method>
                <method name="equals" type="boolean" line="38">
                    <params>
                        <param name="obj" type="Object"/>
                    </params>
                    <scope line="39"/>
                    <scope line="42"/>
                    <declaration name="rhs" type="ControlSequence" line="45"/>
                    <scope line="46">
                        <scope line="47"/>
                        <scope line="50">
                            <scope line="51"/>
                        </scope>
                    </scope>
                    <scope line="56">
                        <scope line="57"/>
                        <scope line="60">
                            <scope line="61"/>
                        </scope>
                    </scope>
                </method>
                <method name="hashCode" type="int" line="68"/>
                <method name="concatenate" type="ControlSequence" line="71">
                    <params>
                        <param name="rhs" type="ControlSequence"/>
                    </params>
                    <scope line="72"/>
                    <declaration name="len" type="int" line="75"/>
                    <declaration name="newEscSequence" type="byte[]" line="76"/>
                </method>
            </class>
            <declaration name="MAX_CONTROL_SEQUENCE_LEN" type="int" line="82"/>
            <declaration name="sequenceToEncodingMap" type="Map&lt;ControlSequence,String&gt;" line="83"/>
            <javadoc line="83">
                Maps a GL or GR escape sequence to an encoding.                
            </javadoc>
            <declaration name="highBitsMap" type="Map&lt;ControlSequence,Boolean&gt;" line="87"/>
            <javadoc line="87">
                Indicates whether a particular encoding wants the high bit turned on
                  or off.                
            </javadoc>
            <declaration name="encodingToSequenceMap" type="Map&lt;String,ControlSequence&gt;" line="92"/>
            <javadoc line="92">
                Maps an encoding to an escape sequence. Rather than manage two
                  converters in CharToByteCOMPOUND_TEXT, we output escape sequences which
                  modify both GL and GR if necessary. This makes the output slightly less
                  efficient, but our code much simpler.                
            </javadoc>
            <declaration name="encodings" type="List&lt;String&gt;" line="99"/>
            <javadoc line="99">
                The keys of &apos;encodingToSequenceMap&apos;, sorted in preferential order.                
            </javadoc>
            <scope line="103">
                <declaration name="tSequenceToEncodingMap" type="HashMap&lt;ControlSequence,String&gt;" line="104"/>
                <declaration name="tHighBitsMap" type="HashMap&lt;ControlSequence,Boolean&gt;" line="105"/>
                <declaration name="tEncodingToSequenceMap" type="HashMap&lt;String,ControlSequence&gt;" line="106"/>
                <declaration name="tEncodings" type="ArrayList&lt;String&gt;" line="107"/>
                <scope line="108"/>
                <declaration name="leftAscii" type="ControlSequence" line="111"/>
                <scope line="114">
                    <declaration name="rightAscii" type="ControlSequence" line="115"/>
                </scope>
                <scope line="119">
                    <declaration name="rightHalf" type="ControlSequence" line="120"/>
                    <declaration name="fullSet" type="ControlSequence" line="123"/>
                </scope>
                <scope line="127">
                    <declaration name="rightHalf" type="ControlSequence" line="128"/>
                    <declaration name="fullSet" type="ControlSequence" line="131"/>
                </scope>
                <scope line="135">
                    <declaration name="rightHalf" type="ControlSequence" line="136"/>
                    <declaration name="fullSet" type="ControlSequence" line="139"/>
                </scope>
                <scope line="143">
                    <declaration name="rightHalf" type="ControlSequence" line="144"/>
                    <declaration name="fullSet" type="ControlSequence" line="147"/>
                </scope>
                <scope line="151">
                    <declaration name="rightHalf" type="ControlSequence" line="152"/>
                    <declaration name="fullSet" type="ControlSequence" line="155"/>
                </scope>
                <scope line="159">
                    <declaration name="rightHalf" type="ControlSequence" line="160"/>
                    <declaration name="fullSet" type="ControlSequence" line="163"/>
                </scope>
                <scope line="167">
                    <declaration name="rightHalf" type="ControlSequence" line="168"/>
                    <declaration name="fullSet" type="ControlSequence" line="171"/>
                </scope>
                <scope line="175">
                    <declaration name="rightHalf" type="ControlSequence" line="176"/>
                    <declaration name="fullSet" type="ControlSequence" line="179"/>
                </scope>
                <scope line="183">
                    <declaration name="rightHalf" type="ControlSequence" line="184"/>
                    <declaration name="fullSet" type="ControlSequence" line="187"/>
                </scope>
                <scope line="191">
                    <declaration name="glLeft" type="ControlSequence" line="192"/>
                    <declaration name="glRight" type="ControlSequence" line="193"/>
                    <declaration name="grLeft" type="ControlSequence" line="194"/>
                    <declaration name="grRight" type="ControlSequence" line="195"/>
                    <declaration name="fullSet" type="ControlSequence" line="204"/>
                </scope>
                <scope line="208">
                    <declaration name="leftHalf" type="ControlSequence" line="209"/>
                    <declaration name="rightHalf" type="ControlSequence" line="210"/>
                </scope>
                <scope line="218">
                    <declaration name="leftHalf" type="ControlSequence" line="219"/>
                    <declaration name="rightHalf" type="ControlSequence" line="220"/>
                </scope>
                <scope line="228">
                    <declaration name="leftHalf" type="ControlSequence" line="229"/>
                    <declaration name="rightHalf" type="ControlSequence" line="230"/>
                </scope>
                <scope line="238">
                    <declaration name="rightHalf" type="ControlSequence" line="239"/>
                    <declaration name="fullSet" type="ControlSequence" line="242"/>
                </scope>
                <scope line="246">
                    <declaration name="rightHalf" type="ControlSequence" line="247"/>
                    <declaration name="fullSet" type="ControlSequence" line="250"/>
                </scope>
                <scope line="254">
                    <declaration name="leftHalf" type="ControlSequence" line="255"/>
                    <declaration name="rightHalf" type="ControlSequence" line="256"/>
                </scope>
                <scope line="264">
                    <declaration name="leftHalf" type="ControlSequence" line="265"/>
                    <declaration name="rightHalf" type="ControlSequence" line="266"/>
                </scope>
                <scope line="274">
                    <declaration name="leftHalf" type="ControlSequence" line="275"/>
                    <declaration name="rightHalf" type="ControlSequence" line="276"/>
                </scope>
                <scope line="284">
                    <declaration name="leftHalf" type="ControlSequence" line="285"/>
                    <declaration name="rightHalf" type="ControlSequence" line="286"/>
                </scope>
                <scope line="294">
                    <declaration name="johab" type="ControlSequence" line="295"/>
                </scope>
                <scope line="300">
                    <declaration name="big5" type="ControlSequence" line="301"/>
                </scope>
            </scope>
            <method name="isEncodingSupported" type="boolean" line="311">
                <params>
                    <param name="encoding" type="String"/>
                </params>
                <scope line="312"/>
                <scope line="315"/>
            </method>
            <method name="getStandardDecoder" type="CharsetDecoder" line="319">
                <params>
                    <param name="escSequence" type="byte[]"/>
                </params>
            </method>
            <method name="getHighBit" type="boolean" line="322">
                <params>
                    <param name="escSequence" type="byte[]"/>
                </params>
                <declaration name="bool" type="Boolean" line="323"/>
            </method>
            <method name="getNonStandardDecoder" type="CharsetDecoder" line="326">
                <params>
                    <param name="escSequence" type="byte[]"/>
                    <param name="encoding" type="byte[]"/>
                </params>
            </method>
            <method name="getDecoder" type="CharsetDecoder" line="329">
                <params>
                    <param name="enc" type="String"/>
                </params>
                <scope line="330"/>
                <declaration name="cs" type="Charset" line="333"/>
                <scope line="334"/>
                <scope line="337">
                    <declaration name="cls" type="Class&lt;?&gt;" line="338"/>
                    <scope line="339"/>
                    <scope line="342"/>
                    <scope line="345"/>
                    <scope line="348"/>
                    <scope line="351"/>
                </scope>
                <scope line="355"/>
                <scope line="358"/>
            </method>
            <method name="getEscapeSequence" type="byte[]" line="362">
                <params>
                    <param name="encoding" type="String"/>
                </params>
                <declaration name="seq" type="ControlSequence" line="363"/>
                <scope line="364"/>
            </method>
            <method name="getEncoding" type="byte[]" line="369">
                <params>
                    <param name="encoding" type="String"/>
                </params>
                <declaration name="seq" type="ControlSequence" line="370"/>
                <scope line="371"/>
            </method>
            <method name="getEncodings" type="List<String>" line="376"/>
            <method name="getEncoder" type="CharsetEncoder" line="379">
                <params>
                    <param name="enc" type="String"/>
                </params>
                <scope line="380"/>
                <declaration name="cs" type="Charset" line="383"/>
                <scope line="384"/>
                <scope line="387">
                    <declaration name="cls" type="Class&lt;?&gt;" line="388"/>
                    <scope line="389"/>
                    <scope line="392"/>
                    <scope line="395"/>
                    <scope line="398"/>
                    <scope line="401"/>
                </scope>
                <scope line="405"/>
                <scope line="408"/>
            </method>
            <method name="CompoundTextSupport" type="constructor" line="412"/>
        </class>
    </source>