<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs.ext">
        <import package="java.util.Collections"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.nio.charset"/>
        <class name="CompoundTextSupport" line="35">
            <comment line="459">
                For Decoder                
            </comment>
            <comment line="501">
                For Encoder                
            </comment>
            <comment line="547">
                Not an instantiable class                
            </comment>
            <class name="ControlSequence" line="37">
                <declaration name="hash" type="int" line="39"/>
                <declaration name="escSequence" type="byte[]" line="40"/>
                <declaration name="encoding" type="byte[]" line="41"/>
                <method name="ControlSequence" type="constructor" line="43">
                    <params>
                        <param name="escSequence" type="byte[]"/>
                    </params>
                </method>
                <method name="ControlSequence" type="constructor" line="46">
                    <params>
                        <param name="escSequence" type="byte[]"/>
                        <param name="encoding" type="byte[]"/>
                    </params>
                    <comment line="65">
                                                
                    </comment>
                    <comment line="65">
                                                
                    </comment>
                    <scope line="47"/>
                    <declaration name="hash" type="int" line="54"/>
                    <declaration name="length" type="int" line="55"/>
                    <scope line="57"/>
                    <scope line="60">
                        <scope line="61"/>
                    </scope>
                    <scope line="69"/>
                </method>
                <method name="equals" type="boolean" line="74">
                    <params>
                        <param name="obj" type="Object"/>
                    </params>
                    <scope line="75"/>
                    <scope line="78"/>
                    <declaration name="rhs" type="ControlSequence" line="81"/>
                    <scope line="82">
                        <scope line="83"/>
                        <scope line="86">
                            <scope line="87"/>
                        </scope>
                    </scope>
                    <scope line="92">
                        <scope line="95"/>
                        <scope line="98">
                            <scope line="99"/>
                        </scope>
                    </scope>
                </method>
                <method name="hashCode" type="int" line="107"/>
                <method name="concatenate" type="ControlSequence" line="111">
                    <params>
                        <param name="rhs" type="ControlSequence"/>
                    </params>
                    <scope line="112"/>
                    <declaration name="len" type="int" line="118"/>
                    <declaration name="newEscSequence" type="byte[]" line="119"/>
                </method>
            </class>
            <declaration name="MAX_CONTROL_SEQUENCE_LEN" type="int" line="128"/>
            <declaration name="sequenceToEncodingMap" type="Map&lt;ControlSequence,String&gt;" line="130"/>
            <javadoc line="130">
                Maps a GL or GR escape sequence to an encoding.                
            </javadoc>
            <declaration name="highBitsMap" type="Map&lt;ControlSequence,Boolean&gt;" line="135"/>
            <javadoc line="135">
                Indicates whether a particular encoding wants the high bit turned on
                  or off.                
            </javadoc>
            <declaration name="encodingToSequenceMap" type="Map&lt;String,ControlSequence&gt;" line="141"/>
            <javadoc line="141">
                Maps an encoding to an escape sequence. Rather than manage two
                  converters in CharToByteCOMPOUND_TEXT, we output escape sequences which
                  modify both GL and GR if necessary. This makes the output slightly less
                  efficient, but our code much simpler.                
            </javadoc>
            <declaration name="encodings" type="List&lt;String&gt;" line="149"/>
            <javadoc line="149">
                The keys of &apos;encodingToSequenceMap&apos;, sorted in preferential order.                
            </javadoc>
            <scope line="154">
                <declaration name="tSequenceToEncodingMap" type="HashMap&lt;ControlSequence,String&gt;" line="155"/>
                <declaration name="tHighBitsMap" type="HashMap&lt;ControlSequence,Boolean&gt;" line="157"/>
                <declaration name="tEncodingToSequenceMap" type="HashMap&lt;String,ControlSequence&gt;" line="159"/>
                <declaration name="tEncodings" type="ArrayList&lt;String&gt;" line="161"/>
                <scope line="165"/>
                <declaration name="leftAscii" type="ControlSequence" line="170"/>
                <scope line="175">
                    <declaration name="rightAscii" type="ControlSequence" line="176"/>
                </scope>
                <scope line="182">
                    <declaration name="rightHalf" type="ControlSequence" line="183"/>
                    <declaration name="fullSet" type="ControlSequence" line="188"/>
                </scope>
                <scope line="192">
                    <declaration name="rightHalf" type="ControlSequence" line="193"/>
                    <declaration name="fullSet" type="ControlSequence" line="198"/>
                </scope>
                <scope line="202">
                    <declaration name="rightHalf" type="ControlSequence" line="203"/>
                    <declaration name="fullSet" type="ControlSequence" line="208"/>
                </scope>
                <scope line="212">
                    <declaration name="rightHalf" type="ControlSequence" line="213"/>
                    <declaration name="fullSet" type="ControlSequence" line="218"/>
                </scope>
                <scope line="222">
                    <declaration name="rightHalf" type="ControlSequence" line="223"/>
                    <declaration name="fullSet" type="ControlSequence" line="228"/>
                </scope>
                <scope line="232">
                    <declaration name="rightHalf" type="ControlSequence" line="233"/>
                    <declaration name="fullSet" type="ControlSequence" line="238"/>
                </scope>
                <scope line="242">
                    <declaration name="rightHalf" type="ControlSequence" line="243"/>
                    <declaration name="fullSet" type="ControlSequence" line="248"/>
                </scope>
                <scope line="252">
                    <declaration name="rightHalf" type="ControlSequence" line="253"/>
                    <declaration name="fullSet" type="ControlSequence" line="258"/>
                </scope>
                <scope line="262">
                    <declaration name="rightHalf" type="ControlSequence" line="263"/>
                    <declaration name="fullSet" type="ControlSequence" line="268"/>
                </scope>
                <scope line="272">
                    <declaration name="glLeft" type="ControlSequence" line="273"/>
                    <declaration name="glRight" type="ControlSequence" line="275"/>
                    <declaration name="grLeft" type="ControlSequence" line="277"/>
                    <declaration name="grRight" type="ControlSequence" line="279"/>
                    <declaration name="fullSet" type="ControlSequence" line="290"/>
                </scope>
                <scope line="294">
                    <declaration name="leftHalf" type="ControlSequence" line="295"/>
                    <declaration name="rightHalf" type="ControlSequence" line="297"/>
                </scope>
                <scope line="307">
                    <declaration name="leftHalf" type="ControlSequence" line="308"/>
                    <declaration name="rightHalf" type="ControlSequence" line="310"/>
                </scope>
                <scope line="320">
                    <declaration name="leftHalf" type="ControlSequence" line="321"/>
                    <declaration name="rightHalf" type="ControlSequence" line="323"/>
                </scope>
                <scope line="337">
                    <declaration name="rightHalf" type="ControlSequence" line="338"/>
                    <declaration name="fullSet" type="ControlSequence" line="343"/>
                </scope>
                <scope line="348">
                    <declaration name="rightHalf" type="ControlSequence" line="349"/>
                    <declaration name="fullSet" type="ControlSequence" line="354"/>
                </scope>
                <scope line="358">
                    <declaration name="leftHalf" type="ControlSequence" line="359"/>
                    <declaration name="rightHalf" type="ControlSequence" line="361"/>
                </scope>
                <scope line="371">
                    <declaration name="leftHalf" type="ControlSequence" line="372"/>
                    <declaration name="rightHalf" type="ControlSequence" line="374"/>
                </scope>
                <scope line="384">
                    <declaration name="leftHalf" type="ControlSequence" line="385"/>
                    <declaration name="rightHalf" type="ControlSequence" line="387"/>
                </scope>
                <scope line="397">
                    <declaration name="leftHalf" type="ControlSequence" line="398"/>
                    <declaration name="rightHalf" type="ControlSequence" line="400"/>
                </scope>
                <scope line="411">
                    <declaration name="johab" type="ControlSequence" line="416"/>
                </scope>
                <scope line="426">
                    <declaration name="big5" type="ControlSequence" line="431"/>
                </scope>
            </scope>
            <method name="isEncodingSupported" type="boolean" line="448">
                <params>
                    <param name="encoding" type="String"/>
                </params>
                <scope line="449"/>
                <scope line="452"/>
            </method>
            <method name="getStandardDecoder" type="CharsetDecoder" line="459">
                <params>
                    <param name="escSequence" type="byte[]"/>
                </params>
            </method>
            <method name="getHighBit" type="boolean" line="462">
                <params>
                    <param name="escSequence" type="byte[]"/>
                </params>
                <declaration name="bool" type="Boolean" line="463"/>
            </method>
            <method name="getNonStandardDecoder" type="CharsetDecoder" line="467">
                <params>
                    <param name="escSequence" type="byte[]"/>
                    <param name="encoding" type="byte[]"/>
                </params>
            </method>
            <method name="getDecoder" type="CharsetDecoder" line="471">
                <params>
                    <param name="enc" type="String"/>
                </params>
                <scope line="472"/>
                <declaration name="cs" type="Charset" line="475"/>
                <scope line="476"/>
                <scope line="478">
                    <declaration name="cls" type="Class&lt;?&gt;" line="479"/>
                    <scope line="480"/>
                    <scope line="482"/>
                    <scope line="485"/>
                    <scope line="487"/>
                    <scope line="489"/>
                </scope>
                <scope line="493"/>
                <scope line="495"/>
            </method>
            <method name="getEscapeSequence" type="byte[]" line="501">
                <params>
                    <param name="encoding" type="String"/>
                </params>
                <declaration name="seq" type="ControlSequence" line="502"/>
                <scope line="503"/>
            </method>
            <method name="getEncoding" type="byte[]" line="508">
                <params>
                    <param name="encoding" type="String"/>
                </params>
                <declaration name="seq" type="ControlSequence" line="509"/>
                <scope line="510"/>
            </method>
            <method name="getEncodings" type="List<String>" line="515"/>
            <method name="getEncoder" type="CharsetEncoder" line="518">
                <params>
                    <param name="enc" type="String"/>
                </params>
                <scope line="519"/>
                <declaration name="cs" type="Charset" line="522"/>
                <scope line="523"/>
                <scope line="525">
                    <declaration name="cls" type="Class&lt;?&gt;" line="526"/>
                    <scope line="527"/>
                    <scope line="529"/>
                    <scope line="532"/>
                    <scope line="534"/>
                    <scope line="536"/>
                </scope>
                <scope line="540"/>
                <scope line="542"/>
            </method>
            <method name="CompoundTextSupport" type="constructor" line="547"/>
        </class>
    </source>