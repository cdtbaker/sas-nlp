<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs.ext">
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.CharBuffer"/>
        <import package="java.nio.charset"/>
        <class name="COMPOUND_TEXT_Decoder" line="32">
            <extends class="CharsetDecoder"/>
            <javadoc line="32">
                An algorithmic conversion from COMPOUND_TEXT to Unicode.                
            </javadoc>
            <declaration name="NORMAL_BYTES" type="int" line="38"/>
            <declaration name="NONSTANDARD_BYTES" type="int" line="39"/>
            <declaration name="VERSION_SEQUENCE_V" type="int" line="40"/>
            <declaration name="VERSION_SEQUENCE_TERM" type="int" line="41"/>
            <declaration name="ESCAPE_SEQUENCE" type="int" line="42"/>
            <declaration name="CHARSET_NGIIF" type="int" line="43"/>
            <declaration name="CHARSET_NLIIF" type="int" line="44"/>
            <declaration name="CHARSET_NLIF" type="int" line="45"/>
            <declaration name="CHARSET_NRIIF" type="int" line="46"/>
            <declaration name="CHARSET_NRIF" type="int" line="47"/>
            <declaration name="CHARSET_NONSTANDARD_FOML" type="int" line="48"/>
            <declaration name="CHARSET_NONSTANDARD_OML" type="int" line="49"/>
            <declaration name="CHARSET_NONSTANDARD_ML" type="int" line="50"/>
            <declaration name="CHARSET_NONSTANDARD_L" type="int" line="51"/>
            <declaration name="CHARSET_NONSTANDARD" type="int" line="52"/>
            <declaration name="CHARSET_LIIF" type="int" line="53"/>
            <declaration name="CHARSET_LIF" type="int" line="54"/>
            <declaration name="CHARSET_RIIF" type="int" line="55"/>
            <declaration name="CHARSET_RIF" type="int" line="56"/>
            <declaration name="CONTROL_SEQUENCE_PIF" type="int" line="57"/>
            <declaration name="CONTROL_SEQUENCE_IF" type="int" line="58"/>
            <declaration name="EXTENSION_ML" type="int" line="59"/>
            <declaration name="EXTENSION_L" type="int" line="60"/>
            <declaration name="EXTENSION" type="int" line="61"/>
            <declaration name="ESCAPE_SEQUENCE_OTHER" type="int" line="62"/>
            <declaration name="ERR_LATIN1" type="String" line="64"/>
            <declaration name="ERR_ILLSTATE" type="String" line="65"/>
            <declaration name="ERR_ESCBYTE" type="String" line="66"/>
            <declaration name="ERR_ENCODINGBYTE" type="String" line="68"/>
            <declaration name="ERR_CTRLBYTE" type="String" line="70"/>
            <declaration name="ERR_CTRLPI" type="String" line="72"/>
            <declaration name="ERR_VERSTART" type="String" line="74"/>
            <declaration name="ERR_VERMANDATORY" type="String" line="76"/>
            <declaration name="ERR_ENCODING" type="String" line="78"/>
            <declaration name="ERR_FLUSH" type="String" line="79"/>
            <declaration name="state" type="int" line="82"/>
            <declaration name="ext_count" type="int" line="83"/>
            <declaration name="versionSequenceAllowed" type="boolean" line="84"/>
            <declaration name="byteBuf" type="byte[]" line="85"/>
            <declaration name="inBB" type="ByteBuffer" line="86"/>
            <declaration name="queue" type="ByteArrayOutputStream" line="87"/>
            <declaration name="glDecoder" type="CharsetDecoder" line="90"/>
            <declaration name="glHigh" type="boolean" line="92"/>
            <method name="COMPOUND_TEXT_Decoder" type="constructor" line="95">
                <params>
                    <param name="cs" type="Charset"/>
                </params>
                <comment line="98">
                    Initial state in ISO 2022 designates Latin-1 charset.                    
                </comment>
                <scope line="97"/>
                <scope line="101"/>
            </method>
            <method name="decodeLoop" type="CoderResult" line="108">
                <params>
                    <param name="src" type="ByteBuffer"/>
                    <param name="des" type="CharBuffer"/>
                </params>
                <comment line="116">
                    Byte parsing is done with shorts instead of bytes because                    
                </comment>
                <comment line="117">
                    Java bytes are signed, while COMPOUND_TEXT bytes are not. If                    
                </comment>
                <comment line="118">
                    we used the Java byte type, the &gt; and &lt; tests during parsing                    
                </comment>
                <comment line="119">
                    would not work correctly.                    
                </comment>
                <declaration name="cr" type="CoderResult" line="109"/>
                <declaration name="input" type="byte[]" line="110"/>
                <declaration name="inOff" type="int" line="111"/>
                <declaration name="inEnd" type="int" line="112"/>
                <scope line="114">
                    <scope line="115"/>
                </scope>
                <scope line="124"/>
            </method>
            <method name="handleByte" type="CoderResult" line="129">
                <params>
                    <param name="newByte" type="short"/>
                    <param name="cb" type="CharBuffer"/>
                </params>
                <declaration name="cr" type="CoderResult" line="130"/>
            </method>
            <method name="normalBytes" type="CoderResult" line="189">
                <params>
                    <param name="newByte" type="short"/>
                    <param name="cb" type="CharBuffer"/>
                </params>
                <comment line="191">
                    C0                    
                </comment>
                <comment line="192">
                    C1                    
                </comment>
                <comment line="229">
                                        
                </comment>
                <declaration name="cr" type="CoderResult" line="190"/>
                <scope line="192">
                    <declaration name="newChar" type="char" line="193"/>
                </scope>
                <scope line="221">
                    <declaration name="decoder" type="CharsetDecoder" line="222"/>
                    <declaration name="high" type="boolean" line="223"/>
                    <scope line="226"/>
                    <scope line="229"/>
                    <scope line="233"/>
                    <scope line="238">
                        <declaration name="b" type="byte" line="239"/>
                        <scope line="240"/>
                        <scope line="242"/>
                        <scope line="248"/>
                        <scope line="250">
                            <declaration name="pos" type="int" line="251"/>
                        </scope>
                    </scope>
                    <scope line="255"/>
                    <scope line="257"/>
                </scope>
            </method>
            <method name="nonStandardBytes" type="CoderResult" line="265">
                <params>
                    <param name="newByte" type="short"/>
                    <param name="cb" type="CharBuffer"/>
                </params>
                <comment line="268">
                    byteBuf[0] = (byte)newByte;                    
                </comment>
                <declaration name="cr" type="CoderResult" line="266"/>
                <scope line="267">
                    <scope line="272"/>
                    <scope line="274">
                        <declaration name="pos" type="int" line="275"/>
                    </scope>
                </scope>
                <scope line="279"/>
                <scope line="281"/>
                <scope line="286"/>
            </method>
            <method name="escapeSequence" type="CoderResult" line="295">
                <params>
                    <param name="newByte" type="short"/>
                </params>
                <comment line="318">
                    escapeSequenceOther will write to queue if appropriate                    
                </comment>
            </method>
            <javadoc line="326">
                Test for unknown, but valid, escape sequences.                
            </javadoc>
            <method name="escapeSequenceOther" type="CoderResult" line="329">
                <params>
                    <param name="newByte" type="short"/>
                </params>
                <comment line="331">
                    {I}                    
                </comment>
                <comment line="336">
                    F -- end of sequence                    
                </comment>
                <scope line="330"/>
                <scope line="335"/>
                <scope line="340"/>
            </method>
            <javadoc line="346">
                Parses directionality, as well as unknown, but valid, control sequences.                
            </javadoc>
            <method name="controlSequence" type="CoderResult" line="349">
                <params>
                    <param name="newByte" type="short"/>
                </params>
                <comment line="351">
                    {P}                    
                </comment>
                <comment line="353">
                    P no longer allowed                    
                </comment>
                <comment line="358">
                    {I}                    
                </comment>
                <comment line="362">
                    F -- end of sequence                    
                </comment>
                <scope line="350">
                    <scope line="352"/>
                </scope>
                <scope line="357"/>
                <scope line="361"/>
                <scope line="365"/>
            </method>
            <method name="versionSequence" type="CoderResult" line="371">
                <params>
                    <param name="newByte" type="short"/>
                </params>
                <comment line="379">
                                        
                </comment>
                <comment line="386">
                    OK to ignore extensions                    
                </comment>
                <scope line="372">
                    <scope line="373"/>
                    <scope line="376"/>
                </scope>
                <scope line="379">
                    <scope line="382"/>
                </scope>
            </method>
            <method name="charset94N" type="CoderResult" line="401">
                <params>
                    <param name="newByte" type="short"/>
                </params>
                <comment line="410">
                    escapeSequenceOther will write byte if appropriate                    
                </comment>
            </method>
            <method name="charset94NL" type="CoderResult" line="418">
                <params>
                    <param name="newByte" type="short"/>
                    <param name="cb" type="CharBuffer"/>
                </params>
                <comment line="421">
                    {I}                    
                </comment>
                <comment line="425">
                    F                    
                </comment>
                <scope line="420"/>
                <scope line="424"/>
                <scope line="427"/>
            </method>
            <method name="charset94NR" type="CoderResult" line="434">
                <params>
                    <param name="newByte" type="short"/>
                    <param name="cb" type="CharBuffer"/>
                </params>
                <comment line="437">
                    {I}                    
                </comment>
                <comment line="441">
                    F                    
                </comment>
                <scope line="436"/>
                <scope line="440"/>
                <scope line="443"/>
            </method>
            <method name="charset9496L" type="CoderResult" line="449">
                <params>
                    <param name="newByte" type="short"/>
                    <param name="cb" type="CharBuffer"/>
                </params>
                <comment line="452">
                    {I}                    
                </comment>
                <comment line="457">
                    F                    
                </comment>
                <scope line="451"/>
                <scope line="456"/>
                <scope line="459"/>
            </method>
            <method name="charset9496R" type="CoderResult" line="464">
                <params>
                    <param name="newByte" type="short"/>
                    <param name="cb" type="CharBuffer"/>
                </params>
                <comment line="467">
                    {I}                    
                </comment>
                <comment line="472">
                    F                    
                </comment>
                <scope line="466"/>
                <scope line="471"/>
                <scope line="474"/>
            </method>
            <method name="charsetNonStandard" type="CoderResult" line="479">
                <params>
                    <param name="newByte" type="short"/>
                    <param name="cb" type="CharBuffer"/>
                </params>
                <comment line="510">
                    In this case, only current byte is bad.                    
                </comment>
                <comment line="520">
                    encoding name terminator                    
                </comment>
                <scope line="482"/>
                <scope line="485"/>
                <scope line="490"/>
                <scope line="493"/>
                <scope line="496"/>
                <scope line="509"/>
                <scope line="514"/>
                <scope line="519"/>
                <scope line="522"/>
            </method>
            <method name="extension" type="CoderResult" line="532">
                <params>
                    <param name="newByte" type="short"/>
                </params>
                <comment line="543">
                    Consume &apos;count&apos; bytes. Don&apos;t bother putting them on the queue.                    
                </comment>
                <comment line="544">
                    There may be too many and we can&apos;t do anything with them anyway.                    
                </comment>
                <scope line="546"/>
            </method>
            <javadoc line="558">
                Preconditions:
                  1. &apos;queue&apos; contains ControlSequence.escSequence
                  2. &apos;encodingQueue&apos; contains ControlSequence.encoding                
            </javadoc>
            <method name="switchDecoder" type="CoderResult" line="563">
                <params>
                    <param name="lastByte" type="short"/>
                    <param name="cb" type="CharBuffer"/>
                </params>
                <declaration name="cr" type="CoderResult" line="564"/>
                <declaration name="decoder" type="CharsetDecoder" line="565"/>
                <declaration name="high" type="boolean" line="566"/>
                <declaration name="escSequence" type="byte[]" line="567"/>
                <declaration name="encoding" type="byte[]" line="568"/>
                <scope line="570"/>
                <scope line="577"/>
                <scope line="582"/>
                <scope line="586"/>
                <scope line="588">
                    <declaration name="badInputLength" type="int" line="589"/>
                    <scope line="590"/>
                    <scope line="592"/>
                </scope>
                <scope line="600">
                    <scope line="601"/>
                </scope>
                <scope line="608">
                    <scope line="609"/>
                </scope>
                <scope line="615">
                    <scope line="616"/>
                </scope>
                <scope line="622"/>
            </method>
            <declaration name="fbb" type="ByteBuffer" line="628"/>
            <method name="flushDecoder" type="CoderResult" line="629">
                <params>
                    <param name="dec" type="CharsetDecoder"/>
                    <param name="cb" type="CharBuffer"/>
                </params>
                <comment line="632">
                    reuse                    
                </comment>
                <declaration name="cr" type="CoderResult" line="631"/>
            </method>
            <method name="malformedInput" type="CoderResult" line="636">
                <params>
                    <param name="msg" type="String"/>
                </params>
                <comment line="637">
                                        
                </comment>
                <comment line="639">
                    TBD: nowhere to put the msg in CoderResult                    
                </comment>
                <declaration name="badInputLength" type="int" line="637"/>
            </method>
            <method name="error" type="void" line="643">
                <params>
                    <param name="msg" type="String"/>
                </params>
                <comment line="644">
                    For now, throw InternalError. Convert to &apos;assert&apos; keyword later.                    
                </comment>
            </method>
            <method name="implFlush" type="CoderResult" line="648">
                <params>
                    <param name="out" type="CharBuffer"/>
                </params>
                <comment line="653">
                    TBD message ERR_FLUSH;                    
                </comment>
                <declaration name="cr" type="CoderResult" line="649"/>
            </method>
            <javadoc line="659">
                Resets the decoder.
                  Call this method to reset the decoder to its initial state                
            </javadoc>
            <method name="implReset" type="void" line="663">
                <comment line="673">
                    Initial state in ISO 2022 designates Latin-1 charset.                    
                </comment>
                <scope line="672"/>
                <scope line="676"/>
            </method>
            <method name="implOnMalformedInput" type="void" line="683">
                <params>
                    <param name="newAction" type="CodingErrorAction"/>
                </params>
            </method>
            <method name="implOnUnmappableCharacter" type="void" line="692">
                <params>
                    <param name="newAction" type="CodingErrorAction"/>
                </params>
            </method>
            <method name="implReplaceWith" type="void" line="701">
                <params>
                    <param name="newReplacement" type="String"/>
                </params>
            </method>
            <method name="initDecoder" type="void" line="710">
                <params>
                    <param name="dec" type="CharsetDecoder"/>
                </params>
            </method>
        </class>
    </source>