<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs.ext">
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.CharBuffer"/>
        <import package="java.nio.charset"/>
        <class name="COMPOUND_TEXT_Decoder" line="6">
            <extends class="CharsetDecoder"/>
            <javadoc line="6">
                An algorithmic conversion from COMPOUND_TEXT to Unicode.                
            </javadoc>
            <declaration name="NORMAL_BYTES" type="int" line="10"/>
            <declaration name="NONSTANDARD_BYTES" type="int" line="11"/>
            <declaration name="VERSION_SEQUENCE_V" type="int" line="12"/>
            <declaration name="VERSION_SEQUENCE_TERM" type="int" line="13"/>
            <declaration name="ESCAPE_SEQUENCE" type="int" line="14"/>
            <declaration name="CHARSET_NGIIF" type="int" line="15"/>
            <declaration name="CHARSET_NLIIF" type="int" line="16"/>
            <declaration name="CHARSET_NLIF" type="int" line="17"/>
            <declaration name="CHARSET_NRIIF" type="int" line="18"/>
            <declaration name="CHARSET_NRIF" type="int" line="19"/>
            <declaration name="CHARSET_NONSTANDARD_FOML" type="int" line="20"/>
            <declaration name="CHARSET_NONSTANDARD_OML" type="int" line="21"/>
            <declaration name="CHARSET_NONSTANDARD_ML" type="int" line="22"/>
            <declaration name="CHARSET_NONSTANDARD_L" type="int" line="23"/>
            <declaration name="CHARSET_NONSTANDARD" type="int" line="24"/>
            <declaration name="CHARSET_LIIF" type="int" line="25"/>
            <declaration name="CHARSET_LIF" type="int" line="26"/>
            <declaration name="CHARSET_RIIF" type="int" line="27"/>
            <declaration name="CHARSET_RIF" type="int" line="28"/>
            <declaration name="CONTROL_SEQUENCE_PIF" type="int" line="29"/>
            <declaration name="CONTROL_SEQUENCE_IF" type="int" line="30"/>
            <declaration name="EXTENSION_ML" type="int" line="31"/>
            <declaration name="EXTENSION_L" type="int" line="32"/>
            <declaration name="EXTENSION" type="int" line="33"/>
            <declaration name="ESCAPE_SEQUENCE_OTHER" type="int" line="34"/>
            <declaration name="ERR_LATIN1" type="String" line="35"/>
            <declaration name="ERR_ILLSTATE" type="String" line="36"/>
            <declaration name="ERR_ESCBYTE" type="String" line="37"/>
            <declaration name="ERR_ENCODINGBYTE" type="String" line="38"/>
            <declaration name="ERR_CTRLBYTE" type="String" line="39"/>
            <declaration name="ERR_CTRLPI" type="String" line="40"/>
            <declaration name="ERR_VERSTART" type="String" line="41"/>
            <declaration name="ERR_VERMANDATORY" type="String" line="42"/>
            <declaration name="ERR_ENCODING" type="String" line="43"/>
            <declaration name="ERR_FLUSH" type="String" line="44"/>
            <declaration name="state" type="int" line="45"/>
            <declaration name="ext_count" type="int" line="46"/>
            <declaration name="versionSequenceAllowed" type="boolean" line="47"/>
            <declaration name="byteBuf" type="byte[]" line="48"/>
            <declaration name="inBB" type="ByteBuffer" line="49"/>
            <declaration name="queue" type="ByteArrayOutputStream" line="50"/>
            <declaration name="glDecoder" type="CharsetDecoder" line="51"/>
            <declaration name="glHigh" type="boolean" line="52"/>
            <method name="COMPOUND_TEXT_Decoder" type="constructor" line="53">
                <params>
                    <param name="cs" type="Charset"/>
                </params>
                <scope line="55"/>
                <scope line="59"/>
            </method>
            <method name="decodeLoop" type="CoderResult" line="65">
                <params>
                    <param name="src" type="ByteBuffer"/>
                    <param name="des" type="CharBuffer"/>
                </params>
                <declaration name="cr" type="CoderResult" line="66"/>
                <declaration name="input" type="byte[]" line="67"/>
                <declaration name="inOff" type="int" line="68"/>
                <declaration name="inEnd" type="int" line="69"/>
                <scope line="70">
                    <scope line="71"/>
                </scope>
                <scope line="77"/>
            </method>
            <method name="handleByte" type="CoderResult" line="81">
                <params>
                    <param name="newByte" type="short"/>
                    <param name="cb" type="CharBuffer"/>
                </params>
                <declaration name="cr" type="CoderResult" line="82"/>
            </method>
            <method name="normalBytes" type="CoderResult" line="140">
                <params>
                    <param name="newByte" type="short"/>
                    <param name="cb" type="CharBuffer"/>
                </params>
                <declaration name="cr" type="CoderResult" line="141"/>
                <scope line="142">
                    <declaration name="newChar" type="char" line="143"/>
                </scope>
                <scope line="169">
                    <declaration name="decoder" type="CharsetDecoder" line="170"/>
                    <declaration name="high" type="boolean" line="171"/>
                    <scope line="173"/>
                    <scope line="177"/>
                    <scope line="181"/>
                    <scope line="185">
                        <declaration name="b" type="byte" line="186"/>
                        <scope line="187"/>
                        <scope line="190"/>
                        <scope line="196"/>
                        <scope line="199">
                            <declaration name="pos" type="int" line="200"/>
                        </scope>
                    </scope>
                    <scope line="205"/>
                    <scope line="208"/>
                </scope>
            </method>
            <method name="nonStandardBytes" type="CoderResult" line="214">
                <params>
                    <param name="newByte" type="short"/>
                    <param name="cb" type="CharBuffer"/>
                </params>
                <declaration name="cr" type="CoderResult" line="215"/>
                <scope line="216">
                    <scope line="220"/>
                    <scope line="223">
                        <declaration name="pos" type="int" line="224"/>
                    </scope>
                </scope>
                <scope line="229"/>
                <scope line="232"/>
                <scope line="236"/>
            </method>
            <method name="escapeSequence" type="CoderResult" line="244">
                <params>
                    <param name="newByte" type="short"/>
                </params>
            </method>
            <javadoc line="272">
                Test for unknown, but valid, escape sequences.                
            </javadoc>
            <method name="escapeSequenceOther" type="CoderResult" line="275">
                <params>
                    <param name="newByte" type="short"/>
                </params>
                <scope line="276"/>
                <scope line="281"/>
                <scope line="286"/>
            </method>
            <javadoc line="291">
                Parses directionality, as well as unknown, but valid, control sequences.                
            </javadoc>
            <method name="controlSequence" type="CoderResult" line="294">
                <params>
                    <param name="newByte" type="short"/>
                </params>
                <scope line="295">
                    <scope line="296"/>
                </scope>
                <scope line="301"/>
                <scope line="305"/>
                <scope line="309"/>
            </method>
            <method name="versionSequence" type="CoderResult" line="314">
                <params>
                    <param name="newByte" type="short"/>
                </params>
                <scope line="315">
                    <scope line="316"/>
                    <scope line="320"/>
                </scope>
                <scope line="324">
                    <scope line="327"/>
                </scope>
            </method>
            <method name="charset94N" type="CoderResult" line="342">
                <params>
                    <param name="newByte" type="short"/>
                </params>
            </method>
            <method name="charset94NL" type="CoderResult" line="356">
                <params>
                    <param name="newByte" type="short"/>
                    <param name="cb" type="CharBuffer"/>
                </params>
                <scope line="357"/>
                <scope line="361"/>
                <scope line="364"/>
            </method>
            <method name="charset94NR" type="CoderResult" line="369">
                <params>
                    <param name="newByte" type="short"/>
                    <param name="cb" type="CharBuffer"/>
                </params>
                <scope line="370"/>
                <scope line="374"/>
                <scope line="377"/>
            </method>
            <method name="charset9496L" type="CoderResult" line="382">
                <params>
                    <param name="newByte" type="short"/>
                    <param name="cb" type="CharBuffer"/>
                </params>
                <scope line="383"/>
                <scope line="388"/>
                <scope line="391"/>
            </method>
            <method name="charset9496R" type="CoderResult" line="395">
                <params>
                    <param name="newByte" type="short"/>
                    <param name="cb" type="CharBuffer"/>
                </params>
                <scope line="396"/>
                <scope line="401"/>
                <scope line="404"/>
            </method>
            <method name="charsetNonStandard" type="CoderResult" line="408">
                <params>
                    <param name="newByte" type="short"/>
                    <param name="cb" type="CharBuffer"/>
                </params>
                <scope line="411"/>
                <scope line="415"/>
                <scope line="420"/>
                <scope line="424"/>
                <scope line="428"/>
                <scope line="441"/>
                <scope line="446"/>
                <scope line="452"/>
                <scope line="455"/>
            </method>
            <method name="extension" type="CoderResult" line="464">
                <params>
                    <param name="newByte" type="short"/>
                </params>
                <scope line="476"/>
            </method>
            <javadoc line="487">
                Preconditions:
                  1. &apos;queue&apos; contains ControlSequence.escSequence
                  2. &apos;encodingQueue&apos; contains ControlSequence.encoding                
            </javadoc>
            <method name="switchDecoder" type="CoderResult" line="492">
                <params>
                    <param name="lastByte" type="short"/>
                    <param name="cb" type="CharBuffer"/>
                </params>
                <declaration name="cr" type="CoderResult" line="493"/>
                <declaration name="decoder" type="CharsetDecoder" line="494"/>
                <declaration name="high" type="boolean" line="495"/>
                <declaration name="escSequence" type="byte[]" line="496"/>
                <declaration name="encoding" type="byte[]" line="497"/>
                <scope line="498"/>
                <scope line="503"/>
                <scope line="508"/>
                <scope line="512"/>
                <scope line="515">
                    <declaration name="badInputLength" type="int" line="516"/>
                    <scope line="517"/>
                    <scope line="520"/>
                </scope>
                <scope line="525">
                    <scope line="526"/>
                </scope>
                <scope line="533">
                    <scope line="534"/>
                </scope>
                <scope line="541">
                    <scope line="542"/>
                </scope>
                <scope line="549"/>
            </method>
            <declaration name="fbb" type="ByteBuffer" line="554"/>
            <method name="flushDecoder" type="CoderResult" line="555">
                <params>
                    <param name="dec" type="CharsetDecoder"/>
                    <param name="cb" type="CharBuffer"/>
                </params>
                <declaration name="cr" type="CoderResult" line="557"/>
            </method>
            <method name="malformedInput" type="CoderResult" line="561">
                <params>
                    <param name="msg" type="String"/>
                </params>
                <declaration name="badInputLength" type="int" line="562"/>
            </method>
            <method name="error" type="void" line="566">
                <params>
                    <param name="msg" type="String"/>
                </params>
            </method>
            <method name="implFlush" type="CoderResult" line="569">
                <params>
                    <param name="out" type="CharBuffer"/>
                </params>
                <declaration name="cr" type="CoderResult" line="570"/>
            </method>
            <javadoc line="576">
                Resets the decoder.
                  Call this method to reset the decoder to its initial state                
            </javadoc>
            <method name="implReset" type="void" line="580">
                <scope line="589"/>
                <scope line="593"/>
            </method>
            <method name="implOnMalformedInput" type="void" line="599">
                <params>
                    <param name="newAction" type="CodingErrorAction"/>
                </params>
            </method>
            <method name="implOnUnmappableCharacter" type="void" line="604">
                <params>
                    <param name="newAction" type="CodingErrorAction"/>
                </params>
            </method>
            <method name="implReplaceWith" type="void" line="609">
                <params>
                    <param name="newReplacement" type="String"/>
                </params>
            </method>
            <method name="initDecoder" type="void" line="614">
                <params>
                    <param name="dec" type="CharsetDecoder"/>
                </params>
            </method>
        </class>
    </source>