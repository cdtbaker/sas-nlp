<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.io.IOException"/>
        <import package="java.nio.channels"/>
        <import package="java.nio.channels.spi"/>
        <import package="java.util"/>
        <import package="sun.misc"/>
        <class name="EPollSelectorImpl" line="7">
            <extends class="SelectorImpl"/>
            <javadoc line="7">
                An implementation of Selector for Linux 2.6+ kernels that uses
                  the epoll event notification facility.                
            </javadoc>
            <declaration name="fd0" type="int" line="12"/>
            <declaration name="fd1" type="int" line="13"/>
            <declaration name="pollWrapper" type="EPollArrayWrapper" line="14"/>
            <declaration name="fdToKey" type="Map&lt;Integer,SelectionKeyImpl&gt;" line="15"/>
            <declaration name="closed" type="boolean" line="16"/>
            <declaration name="interruptLock" type="Object" line="17"/>
            <declaration name="interruptTriggered" type="boolean" line="18"/>
            <javadoc line="19">
                Package private constructor called by factory method in
                  the abstract superclass Selector.                
            </javadoc>
            <method name="EPollSelectorImpl" type="constructor" line="23">
                <params>
                    <param name="sp" type="SelectorProvider"/>
                </params>
                <declaration name="pipeFds" type="long" line="25"/>
            </method>
            <method name="doSelect" type="int" line="32">
                <params>
                    <param name="timeout" type="long"/>
                </params>
                <scope line="35"/>
                <scope line="39"/>
                <declaration name="numKeysUpdated" type="int" line="43"/>
                <scope line="44">
                    <scope line="46"/>
                </scope>
            </method>
            <javadoc line="54">
                Update the keys whose fd&apos;s have been selected by the epoll.
                  Add the ready keys to the ready queue.                
            </javadoc>
            <method name="updateSelectedKeys" type="int" line="58">
                <declaration name="entries" type="int" line="59"/>
                <declaration name="numKeysUpdated" type="int" line="60"/>
                <scope line="61">
                    <declaration name="nextFD" type="int" line="62"/>
                    <declaration name="ski" type="SelectionKeyImpl" line="63"/>
                    <scope line="64">
                        <declaration name="rOps" type="int" line="65"/>
                        <scope line="66">
                            <scope line="67"/>
                        </scope>
                        <scope line="71">
                            <scope line="73"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="implClose" type="void" line="82">
                <scope line="85"/>
                <declaration name="i" type="Iterator&lt;SelectionKey&gt;" line="92"/>
                <scope line="93">
                    <declaration name="ski" type="SelectionKeyImpl" line="94"/>
                    <declaration name="selch" type="SelectableChannel" line="96"/>
                </scope>
            </method>
            <method name="implRegister" type="void" line="103">
                <params>
                    <param name="ski" type="SelectionKeyImpl"/>
                </params>
                <declaration name="ch" type="SelChImpl" line="105"/>
            </method>
            <method name="implDereg" type="void" line="110">
                <params>
                    <param name="ski" type="SelectionKeyImpl"/>
                </params>
                <declaration name="ch" type="SelChImpl" line="112"/>
                <declaration name="fd" type="int" line="113"/>
                <declaration name="selch" type="SelectableChannel" line="120"/>
            </method>
            <method name="putEventOps" type="void" line="123">
                <params>
                    <param name="sk" type="SelectionKeyImpl"/>
                    <param name="ops" type="int"/>
                </params>
            </method>
            <method name="wakeup" type="Selector" line="127">
                <scope line="128">
                    <scope line="129"/>
                </scope>
            </method>
            <scope line="136"/>
        </class>
    </source>