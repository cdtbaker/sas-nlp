<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.nio.channels.spi.AsynchronousChannelProvider"/>
        <import package="java.io.IOException"/>
        <import package="java.util.concurrent.ArrayBlockingQueue"/>
        <import package="java.util.concurrent.RejectedExecutionException"/>
        <import package="java.util.concurrent.atomic.AtomicInteger"/>
        <import package="sun.nio.ch.EPoll"/>
        <class name="EPollPort" line="8">
            <extends class="Port"/>
            <javadoc line="8">
                AsynchronousChannelGroup implementation based on the Linux epoll facility.                
            </javadoc>
            <declaration name="MAX_EPOLL_EVENTS" type="int" line="12"/>
            <declaration name="ENOENT" type="int" line="13"/>
            <declaration name="epfd" type="int" line="14"/>
            <declaration name="closed" type="boolean" line="15"/>
            <declaration name="sp" type="int" line="16"/>
            <declaration name="wakeupCount" type="AtomicInteger" line="17"/>
            <declaration name="address" type="long" line="18"/>
            <class name="Event" line="19">
                <declaration name="channel" type="PollableChannel" line="20"/>
                <declaration name="events" type="int" line="21"/>
                <method name="Event" type="constructor" line="22">
                    <params>
                        <param name="channel" type="PollableChannel"/>
                        <param name="events" type="int"/>
                    </params>
                </method>
                <method name="channel" type="PollableChannel" line="26"/>
                <method name="events" type="int" line="29"/>
            </class>
            <declaration name="queue" type="ArrayBlockingQueue&lt;Event&gt;" line="33"/>
            <declaration name="NEED_TO_POLL" type="Event" line="34"/>
            <declaration name="EXECUTE_TASK_OR_SHUTDOWN" type="Event" line="35"/>
            <method name="EPollPort" type="constructor" line="36">
                <params>
                    <param name="provider" type="AsynchronousChannelProvider"/>
                    <param name="pool" type="ThreadPool"/>
                </params>
                <declaration name="sv" type="int[]" line="39"/>
                <scope line="40"/>
                <scope line="44"/>
            </method>
            <method name="start" type="EPollPort" line="53"/>
            <javadoc line="57">
                Release all resources                
            </javadoc>
            <method name="implClose" type="void" line="60">
                <scope line="61"/>
            </method>
            <method name="wakeup" type="void" line="70">
                <scope line="71">
                    <scope line="72"/>
                    <scope line="75"/>
                </scope>
            </method>
            <method name="executeOnHandlerTask" type="void" line="80">
                <params>
                    <param name="task" type="Runnable"/>
                </params>
                <scope line="81"/>
            </method>
            <method name="shutdownHandlerTasks" type="void" line="87">
                <declaration name="nThreads" type="int" line="88"/>
                <scope line="89"/>
                <scope line="92">
                    <scope line="93"/>
                </scope>
            </method>
            <method name="startPoll" type="void" line="98">
                <params>
                    <param name="fd" type="int"/>
                    <param name="events" type="int"/>
                </params>
                <declaration name="err" type="int" line="99"/>
            </method>
            <class name="EventHandlerTask" line="103">
                <implements interface="Runnable"/>
                <method name="poll" type="Event" line="104">
                    <scope line="105">
                        <scope line="106">
                            <declaration name="n" type="int" line="107"/>
                            <scope line="109">
                                <scope line="110">
                                    <declaration name="eventAddress" type="long" line="111"/>
                                    <declaration name="fd" type="int" line="112"/>
                                    <scope line="113">
                                        <scope line="114"/>
                                        <scope line="117"/>
                                    </scope>
                                    <declaration name="channel" type="PollableChannel" line="123"/>
                                    <scope line="124">
                                        <declaration name="events" type="int" line="125"/>
                                        <declaration name="ev" type="Event" line="126"/>
                                        <scope line="127"/>
                                        <scope line="130"/>
                                    </scope>
                                </scope>
                            </scope>
                            <scope line="136"/>
                        </scope>
                    </scope>
                    <scope line="141"/>
                </method>
                <method name="run" type="void" line="145">
                    <declaration name="myGroupAndInvokeCount" type="Invoker.GroupAndInvokeCount" line="146"/>
                    <declaration name="isPooledThread" type="boolean" line="147"/>
                    <declaration name="replaceMe" type="boolean" line="148"/>
                    <declaration name="ev" type="Event" line="149"/>
                    <scope line="150">
                        <scope line="151">
                            <scope line="153">
                                <scope line="156">
                                    <scope line="157"/>
                                    <scope line="160"/>
                                </scope>
                            </scope>
                            <scope line="166"/>
                            <scope line="169">
                                <declaration name="task" type="Runnable" line="170"/>
                                <scope line="171"/>
                            </scope>
                            <scope line="178"/>
                            <scope line="181"/>
                            <scope line="185"/>
                        </scope>
                    </scope>
                    <scope line="191">
                        <declaration name="remaining" type="int" line="192"/>
                        <scope line="193"/>
                    </scope>
                </method>
            </class>
            <method name="socketpair" type="void" line="199"/>
            <method name="interrupt" type="void" line="200"/>
            <method name="drain1" type="void" line="201"/>
            <method name="close0" type="void" line="202"/>
            <scope line="203"/>
        </class>
    </source>