<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.io"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.channels"/>
        <import package="java.nio.channels.spi"/>
        <class name="SinkChannelImpl" line="34">
            <extends class="Pipe.SinkChannel"/>
            <comment line="40">
                Used to make native read and write calls                
            </comment>
            <comment line="43">
                The file descriptor associated with this channel                
            </comment>
            <comment line="46">
                fd value needed for dev/poll. This value will remain valid                
            </comment>
            <comment line="47">
                even after the value in the file descriptor object has been set to -1                
            </comment>
            <comment line="50">
                ID of native thread doing write, for signalling                
            </comment>
            <comment line="53">
                Lock held by current reading thread                
            </comment>
            <comment line="56">
                Lock held by any thread that modifies the state fields declared below                
            </comment>
            <comment line="57">
                DO NOT invoke a blocking I/O operation while holding this lock!                
            </comment>
            <comment line="60">
                -- The following fields are protected by stateLock                
            </comment>
            <comment line="62">
                Channel state                
            </comment>
            <comment line="68">
                -- End of fields protected by stateLock                
            </comment>
            <implements interface="SelChImpl"/>
            <declaration name="nd" type="NativeDispatcher" line="40"/>
            <declaration name="fd" type="FileDescriptor" line="43"/>
            <declaration name="fdVal" type="int" line="47"/>
            <declaration name="thread" type="long" line="50"/>
            <declaration name="lock" type="Object" line="53"/>
            <declaration name="stateLock" type="Object" line="57"/>
            <declaration name="ST_UNINITIALIZED" type="int" line="62"/>
            <declaration name="ST_INUSE" type="int" line="63"/>
            <declaration name="ST_KILLED" type="int" line="64"/>
            <declaration name="state" type="int" line="65"/>
            <method name="getFD" type="FileDescriptor" line="70"/>
            <method name="getFDVal" type="int" line="74"/>
            <method name="SinkChannelImpl" type="constructor" line="78">
                <params>
                    <param name="sp" type="SelectorProvider"/>
                    <param name="fd" type="FileDescriptor"/>
                </params>
            </method>
            <method name="implCloseSelectableChannel" type="void" line="85">
                <scope line="86">
                    <declaration name="th" type="long" line="88"/>
                </scope>
            </method>
            <method name="kill" type="void" line="96">
                <scope line="97">
                    <scope line="100"/>
                </scope>
            </method>
            <method name="implConfigureBlocking" type="void" line="110">
                <params>
                    <param name="block" type="boolean"/>
                </params>
            </method>
            <method name="translateReadyOps" type="boolean" line="115">
                <params>
                    <param name="ops" type="int"/>
                    <param name="initialOps" type="int"/>
                    <param name="sk" type="SelectionKeyImpl"/>
                </params>
                <comment line="116">
                    Do this just once, it synchronizes                    
                </comment>
                <declaration name="intOps" type="int" line="116"/>
                <declaration name="oldOps" type="int" line="117"/>
                <declaration name="newOps" type="int" line="118"/>
                <scope line="124"/>
            </method>
            <method name="translateAndUpdateReadyOps" type="boolean" line="138">
                <params>
                    <param name="ops" type="int"/>
                    <param name="sk" type="SelectionKeyImpl"/>
                </params>
            </method>
            <method name="translateAndSetReadyOps" type="boolean" line="142">
                <params>
                    <param name="ops" type="int"/>
                    <param name="sk" type="SelectionKeyImpl"/>
                </params>
            </method>
            <method name="translateAndSetInterestOps" type="void" line="146">
                <params>
                    <param name="ops" type="int"/>
                    <param name="sk" type="SelectionKeyImpl"/>
                </params>
            </method>
            <method name="ensureOpen" type="void" line="152"/>
            <method name="write" type="int" line="157">
                <params>
                    <param name="src" type="ByteBuffer"/>
                </params>
                <scope line="159">
                    <declaration name="n" type="int" line="160"/>
                    <scope line="161">
                        <scope line="166"/>
                    </scope>
                    <scope line="170"/>
                </scope>
            </method>
            <method name="write" type="long" line="178">
                <params>
                    <param name="srcs" type="ByteBuffer[]"/>
                </params>
                <scope line="182">
                    <declaration name="n" type="long" line="183"/>
                    <scope line="184">
                        <scope line="189"/>
                    </scope>
                    <scope line="193"/>
                </scope>
            </method>
            <method name="write" type="long" line="203">
                <params>
                    <param name="srcs" type="ByteBuffer[]"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                </params>
            </method>
            <scope line="209"/>
        </class>
    </source>