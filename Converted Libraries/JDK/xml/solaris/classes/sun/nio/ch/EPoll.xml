<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.io.IOException"/>
        <import package="sun.misc.Unsafe"/>
        <class name="EPoll" line="4">
            <javadoc line="4">
                Provides access to the Linux epoll facility.                
            </javadoc>
            <method name="EPoll" type="constructor" line="8"/>
            <declaration name="unsafe" type="Unsafe" line="10"/>
            <declaration name="SIZEOF_EPOLLEVENT" type="int" line="11"/>
            <javadoc line="11">
                typedef union epoll_data {
                  void ptr;
                  int fd;
                  __uint32_t u32;
                  __uint64_t u64;
                  } epoll_data_t;
                  struct epoll_event {
                  __uint32_t events;
                  epoll_data_t data;
                  }                
            </javadoc>
            <declaration name="OFFSETOF_EVENTS" type="int" line="24"/>
            <declaration name="OFFSETOF_FD" type="int" line="25"/>
            <declaration name="EPOLL_CTL_ADD" type="int" line="26"/>
            <declaration name="EPOLL_CTL_DEL" type="int" line="27"/>
            <declaration name="EPOLL_CTL_MOD" type="int" line="28"/>
            <declaration name="EPOLLONESHOT" type="int" line="29"/>
            <javadoc line="30">
                Allocates a poll array to handle up to {@code count} events.                
            </javadoc>
            <method name="allocatePollArray" type="long" line="33">
                <params>
                    <param name="count" type="int"/>
                </params>
            </method>
            <javadoc line="36">
                Free a poll array                
            </javadoc>
            <method name="freePollArray" type="void" line="39">
                <params>
                    <param name="address" type="long"/>
                </params>
            </method>
            <javadoc line="42">
                Returns event[i];                
            </javadoc>
            <method name="getEvent" type="long" line="45">
                <params>
                    <param name="address" type="long"/>
                    <param name="i" type="int"/>
                </params>
            </method>
            <javadoc line="48">
                Returns event-&gt;data.fd                
            </javadoc>
            <method name="getDescriptor" type="int" line="51">
                <params>
                    <param name="eventAddress" type="long"/>
                </params>
            </method>
            <javadoc line="54">
                Returns event-&gt;events                
            </javadoc>
            <method name="getEvents" type="int" line="57">
                <params>
                    <param name="eventAddress" type="long"/>
                </params>
            </method>
            <method name="eventSize" type="int" line="60"/>
            <method name="eventsOffset" type="int" line="61"/>
            <method name="dataOffset" type="int" line="62"/>
            <method name="epollCreate" type="int" line="63"/>
            <method name="epollCtl" type="int" line="64"/>
            <method name="epollWait" type="int" line="65"/>
            <scope line="66"/>
        </class>
    </source>