<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="sun.misc"/>
        <import package="java.io.IOException"/>
        <import package="java.util.LinkedList"/>
        <class name="DevPollArrayWrapper" line="33">
            <comment line="49">
                Event masks                
            </comment>
            <comment line="64">
                Miscellaneous constants                
            </comment>
            <comment line="70">
                Maximum number of open file descriptors                
            </comment>
            <comment line="73">
                Number of pollfd structures to create.
                 DP_POLL ioctl allows up to OPEN_MAX-1                
            </comment>
            <comment line="77">
                Base address of the native pollArray                
            </comment>
            <comment line="80">
                Array of pollfd structs used for driver updates                
            </comment>
            <comment line="83">
                Maximum number of POLL_FD structs to update at once                
            </comment>
            <comment line="95">
                Machinery for remembering fd registration changes
                 A hashmap could be used but the number of changes pending
                 is expected to be small                
            </comment>
            <comment line="108">
                The pollfd array for results from devpoll driver                
            </comment>
            <comment line="111">
                The fd of the devpoll driver                
            </comment>
            <comment line="114">
                The fd of the interrupt line going out                
            </comment>
            <comment line="117">
                The fd of the interrupt line coming in                
            </comment>
            <comment line="120">
                The index of the interrupt FD                
            </comment>
            <comment line="123">
                Number of updated pollfd entries                
            </comment>
            <javadoc line="33">
                Manipulates a native array of pollfd structs on Solaris:
                  typedef struct pollfd {
                  int fd;
                  short events;
                  short revents;
                  } pollfd_t;                
                <author>
                    Mike McCloskey                    
                </author>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="POLLIN" type="short" line="49"/>
            <declaration name="POLLPRI" type="short" line="50"/>
            <declaration name="POLLOUT" type="short" line="51"/>
            <declaration name="POLLRDNORM" type="short" line="52"/>
            <declaration name="POLLWRNORM" type="short" line="53"/>
            <declaration name="POLLRDBAND" type="short" line="54"/>
            <declaration name="POLLWRBAND" type="short" line="55"/>
            <declaration name="POLLNORM" type="short" line="56"/>
            <declaration name="POLLERR" type="short" line="57"/>
            <declaration name="POLLHUP" type="short" line="58"/>
            <declaration name="POLLNVAL" type="short" line="59"/>
            <declaration name="POLLREMOVE" type="short" line="60"/>
            <declaration name="POLLCONN" type="short" line="61"/>
            <declaration name="SIZE_POLLFD" type="short" line="64"/>
            <declaration name="FD_OFFSET" type="short" line="65"/>
            <declaration name="EVENT_OFFSET" type="short" line="66"/>
            <declaration name="REVENT_OFFSET" type="short" line="67"/>
            <declaration name="OPEN_MAX" type="int" line="70"/>
            <declaration name="NUM_POLLFDS" type="int" line="74"/>
            <declaration name="pollArrayAddress" type="long" line="77"/>
            <declaration name="updatePollArray" type="AllocatedNativeObject" line="80"/>
            <declaration name="MAX_UPDATE_SIZE" type="int" line="83"/>
            <method name="DevPollArrayWrapper" type="constructor" line="85">
                <declaration name="allocationSize" type="int" line="86"/>
            </method>
            <class name="Updator" line="97">
                <declaration name="fd" type="int" line="98"/>
                <declaration name="mask" type="int" line="99"/>
                <method name="Updator" type="constructor" line="100">
                    <params>
                        <param name="fd" type="int"/>
                        <param name="mask" type="int"/>
                    </params>
                </method>
            </class>
            <declaration name="updateList" type="LinkedList&lt;Updator&gt;" line="105"/>
            <declaration name="pollArray" type="AllocatedNativeObject" line="108"/>
            <declaration name="wfd" type="int" line="111"/>
            <declaration name="outgoingInterruptFD" type="int" line="114"/>
            <declaration name="incomingInterruptFD" type="int" line="117"/>
            <declaration name="interruptedIndex" type="int" line="120"/>
            <declaration name="updated" type="int" line="123"/>
            <method name="initInterrupt" type="void" line="125">
                <params>
                    <param name="fd0" type="int"/>
                    <param name="fd1" type="int"/>
                </params>
            </method>
            <method name="putReventOps" type="void" line="131">
                <params>
                    <param name="i" type="int"/>
                    <param name="revent" type="int"/>
                </params>
                <declaration name="offset" type="int" line="132"/>
            </method>
            <method name="getEventOps" type="int" line="136">
                <params>
                    <param name="i" type="int"/>
                </params>
                <declaration name="offset" type="int" line="137"/>
            </method>
            <method name="getReventOps" type="int" line="141">
                <params>
                    <param name="i" type="int"/>
                </params>
                <declaration name="offset" type="int" line="142"/>
            </method>
            <method name="getDescriptor" type="int" line="146">
                <params>
                    <param name="i" type="int"/>
                </params>
                <declaration name="offset" type="int" line="147"/>
            </method>
            <method name="setInterest" type="void" line="151">
                <params>
                    <param name="fd" type="int"/>
                    <param name="mask" type="int"/>
                </params>
                <scope line="152"/>
            </method>
            <method name="release" type="void" line="157">
                <params>
                    <param name="fd" type="int"/>
                </params>
                <scope line="158"/>
            </method>
            <method name="closeDevPollFD" type="void" line="163"/>
            <method name="poll" type="int" line="169">
                <params>
                    <param name="timeout" type="long"/>
                </params>
                <scope line="172">
                    <scope line="173"/>
                </scope>
            </method>
            <method name="updateRegistrations" type="void" line="182">
                <comment line="184">
                    Populate pollfd array with updated masks                    
                </comment>
                <comment line="187">
                    We have to insert a dummy node in between each
                     real update to use POLLREMOVE on the fd first because
                     otherwise the changes are simply OR&apos;d together                    
                </comment>
                <comment line="193">
                    First add pollfd struct to clear out this fd                    
                </comment>
                <comment line="196">
                    Now add pollfd to update this fd, if necessary                    
                </comment>
                <comment line="202">
                    Check against the max update size; these are
                     all we will process. Valid index ranges from 0 to
                     (MAX_UPDATE_SIZE - 1) and we can use up to 2 per loop                    
                </comment>
                <comment line="208">
                    Register the changes with /dev/poll                    
                </comment>
                <scope line="184">
                    <scope line="185">
                        <declaration name="index" type="int" line="189"/>
                        <declaration name="u" type="Updator" line="190"/>
                        <scope line="191">
                            <scope line="196"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="putPollFD" type="void" line="215">
                <params>
                    <param name="array" type="AllocatedNativeObject"/>
                    <param name="index" type="int"/>
                    <param name="fd" type="int"/>
                    <param name="event" type="short"/>
                </params>
                <declaration name="structIndex" type="int" line="216"/>
            </method>
            <declaration name="interrupted" type="boolean" line="222"/>
            <method name="interrupt" type="void" line="224"/>
            <method name="interruptedIndex" type="int" line="228"/>
            <method name="interrupted" type="boolean" line="232"/>
            <method name="clearInterrupted" type="void" line="236"/>
            <method name="init" type="int" line="240"/>
            <method name="register" type="void" line="241"/>
            <method name="registerMultiple" type="void" line="242"/>
            <method name="poll0" type="int" line="244"/>
            <method name="interrupt" type="void" line="246"/>
            <method name="fdLimit" type="int" line="247"/>
        </class>
    </source>