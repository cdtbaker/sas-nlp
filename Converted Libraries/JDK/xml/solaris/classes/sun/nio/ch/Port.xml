<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.nio.channels.spi.AsynchronousChannelProvider"/>
        <import package="java.nio.channels"/>
        <import package="java.io.IOException"/>
        <import package="java.io.Closeable"/>
        <import package="java.io.FileDescriptor"/>
        <import package="java.util.Map"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.concurrent.locks.ReadWriteLock"/>
        <import package="java.util.concurrent.locks.ReentrantReadWriteLock"/>
        <class name="Port" line="11">
            <extends class="AsynchronousChannelGroupImpl"/>
            <javadoc line="11">
                Base implementation of AsynchronousChannelGroupImpl for Unix systems.                
            </javadoc>
            <declaration name="POLLIN" type="short" line="15"/>
            <declaration name="POLLOUT" type="short" line="16"/>
            <declaration name="POLLERR" type="short" line="17"/>
            <declaration name="POLLHUP" type="short" line="18"/>
            <interface name="PollableChannel">
                <implements interface="Closeable"/>
                <javadoc line="19">
                    Implemented by clients registered with this port.                    
                </javadoc>
                <method name="onEvent" type="void" line="23"/>
            </interface>
            <declaration name="fdToChannelLock" type="ReadWriteLock" line="25"/>
            <declaration name="fdToChannel" type="Map&lt;Integer,PollableChannel&gt;" line="26"/>
            <method name="Port" type="constructor" line="27">
                <params>
                    <param name="provider" type="AsynchronousChannelProvider"/>
                    <param name="pool" type="ThreadPool"/>
                </params>
            </method>
            <javadoc line="30">
                Register channel identified by its file descriptor                
            </javadoc>
            <method name="register" type="void" line="33">
                <params>
                    <param name="fd" type="int"/>
                    <param name="ch" type="PollableChannel"/>
                </params>
                <scope line="35"/>
                <scope line="39"/>
            </method>
            <javadoc line="43">
                Unregister channel identified by its file descriptor                
            </javadoc>
            <method name="unregister" type="void" line="46">
                <params>
                    <param name="fd" type="int"/>
                </params>
                <declaration name="checkForShutdown" type="boolean" line="47"/>
                <scope line="49"/>
                <scope line="53"/>
                <scope line="56">
                    <scope line="57"/>
                    <scope line="60"/>
                </scope>
            </method>
            <method name="startPoll" type="void" line="64"/>
            <javadoc line="64">
                Register file descriptor with polling mechanism for given events.
                  The implementation should translate the events as required.                
            </javadoc>
            <method name="isEmpty" type="boolean" line="69">
                <scope line="71"/>
                <scope line="74"/>
            </method>
            <method name="attachForeignChannel" type="Object" line="78">
                <params>
                    <param name="channel" type="Channel"/>
                    <param name="fd" type="FileDescriptor"/>
                </params>
                <declaration name="fdVal" type="int" line="79"/>
                <anonymous_class line="80">
                    <method name="onEvent" type="void" line="81">
                        <params>
                            <param name="events" type="int"/>
                            <param name="mayInvokeDirect" type="boolean"/>
                        </params>
                    </method>
                    <method name="close" type="void" line="83"/>
                </anonymous_class>
            </method>
            <method name="detachForeignChannel" type="void" line="90">
                <params>
                    <param name="key" type="Object"/>
                </params>
            </method>
            <method name="closeAllChannels" type="void" line="93">
                <declaration name="MAX_BATCH_SIZE" type="int" line="94"/>
                <declaration name="channels" type="PollableChannel" line="95"/>
                <declaration name="count" type="int" line="96"/>
                <scope line="97">
                    <scope line="100">
                        <scope line="101"/>
                    </scope>
                    <scope line="106"/>
                    <scope line="109">
                        <scope line="110"/>
                        <scope line="113"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>