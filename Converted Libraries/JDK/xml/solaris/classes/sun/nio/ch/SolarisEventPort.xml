<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.nio.channels.spi.AsynchronousChannelProvider"/>
        <import package="java.util.concurrent.RejectedExecutionException"/>
        <import package="java.io.IOException"/>
        <import package="sun.misc.Unsafe"/>
        <class name="SolarisEventPort" line="33">
            <extends class="Port"/>
            <comment line="49">
                typedef struct port_event {
                     int             portev_events;
                     ushort_t        portev_source;
                     ushort_t        portev_pad;
                     uintptr_t       portev_object;
                     void            portev_user;
                 } port_event_t;                
            </comment>
            <comment line="63">
                port sources                
            </comment>
            <comment line="67">
                file descriptor to event port.                
            </comment>
            <comment line="70">
                true when port is closed                
            </comment>
            <comment line="87">
                releass resources                
            </comment>
            <comment line="147">
                Task to read a single event from the port and dispatch it to the
                 channel&apos;s onEvent handler.                
            </comment>
            <comment line="224">
                -- Native methods --                
            </comment>
            <javadoc line="33">
                AsynchronousChannelGroup implementation based on the Solaris 10 event port
                  framework.                
            </javadoc>
            <declaration name="unsafe" type="Unsafe" line="41"/>
            <declaration name="addressSize" type="int" line="42"/>
            <method name="dependsArch" type="int" line="44">
                <params>
                    <param name="value32" type="int"/>
                    <param name="value64" type="int"/>
                </params>
            </method>
            <declaration name="SIZEOF_PORT_EVENT" type="int" line="57"/>
            <declaration name="OFFSETOF_EVENTS" type="int" line="58"/>
            <declaration name="OFFSETOF_SOURCE" type="int" line="59"/>
            <declaration name="OFFSETOF_OBJECT" type="int" line="60"/>
            <declaration name="PORT_SOURCE_USER" type="short" line="63"/>
            <declaration name="PORT_SOURCE_FD" type="short" line="64"/>
            <declaration name="port" type="int" line="67"/>
            <declaration name="closed" type="boolean" line="70"/>
            <method name="SolarisEventPort" type="constructor" line="74">
                <params>
                    <param name="provider" type="AsynchronousChannelProvider"/>
                    <param name="pool" type="ThreadPool"/>
                </params>
                <comment line="77">
                    create event port                    
                </comment>
            </method>
            <method name="start" type="SolarisEventPort" line="81"/>
            <method name="implClose" type="void" line="87">
                <scope line="88"/>
            </method>
            <method name="wakeup" type="void" line="96">
                <scope line="97"/>
                <scope line="99"/>
            </method>
            <method name="executeOnHandlerTask" type="void" line="105">
                <params>
                    <param name="task" type="Runnable"/>
                </params>
                <scope line="106"/>
            </method>
            <method name="shutdownHandlerTasks" type="void" line="115">
                <comment line="116">
                    If no tasks are running then just release resources; otherwise
                     write to the one end of the socketpair to wakeup any polling threads..                    
                </comment>
                <comment line="124">
                    send user event to wakeup each thread                    
                </comment>
                <declaration name="nThreads" type="int" line="120"/>
                <scope line="121"/>
                <scope line="123">
                    <scope line="125">
                        <scope line="126"/>
                        <scope line="128"/>
                    </scope>
                </scope>
            </method>
            <method name="startPoll" type="void" line="136">
                <params>
                    <param name="fd" type="int"/>
                    <param name="events" type="int"/>
                </params>
                <comment line="137">
                    (re-)associate file descriptor                    
                </comment>
                <comment line="138">
                    no need to translate events                    
                </comment>
                <comment line="142">
                    should not happen                    
                </comment>
                <scope line="139"/>
                <scope line="141"/>
            </method>
            <class name="EventHandlerTask" line="150">
                <implements interface="Runnable"/>
                <method name="run" type="void" line="151">
                    <comment line="159">
                        reset invoke count                        
                    </comment>
                    <comment line="163">
                        wait for I/O completion event                        
                    </comment>
                    <comment line="164">
                        A error here is fatal (thread will not be replaced)                        
                    </comment>
                    <comment line="173">
                        event source                        
                    </comment>
                    <comment line="176">
                        user event is trigger to invoke task or shutdown                        
                    </comment>
                    <comment line="180">
                        shutdown request                        
                    </comment>
                    <comment line="183">
                        run task (may throw error/exception)                        
                    </comment>
                    <comment line="187">
                        ignore                        
                    </comment>
                    <comment line="191">
                        pe-&gt;portev_object is file descriptor                        
                    </comment>
                    <comment line="193">
                        pe-&gt;portev_events                        
                    </comment>
                    <comment line="196">
                        lookup channel                        
                    </comment>
                    <comment line="205">
                        notify channel                        
                    </comment>
                    <comment line="208">
                        no need to translate events                        
                    </comment>
                    <comment line="213">
                        free per-thread resources                        
                    </comment>
                    <comment line="215">
                        last task to exit when shutdown release resources                        
                    </comment>
                    <declaration name="myGroupAndInvokeCount" type="Invoker.GroupAndInvokeCount" line="152"/>
                    <declaration name="isPooledThread" type="boolean" line="154"/>
                    <declaration name="replaceMe" type="boolean" line="155"/>
                    <declaration name="address" type="long" line="156"/>
                    <scope line="157">
                        <scope line="158">
                            <scope line="166"/>
                            <scope line="168"/>
                            <declaration name="source" type="short" line="174"/>
                            <scope line="175">
                                <scope line="177">
                                    <declaration name="task" type="Runnable" line="178"/>
                                    <scope line="179"/>
                                </scope>
                            </scope>
                            <declaration name="fd" type="int" line="192"/>
                            <declaration name="events" type="int" line="194"/>
                            <declaration name="ch" type="PollableChannel" line="197"/>
                            <scope line="199"/>
                            <scope line="201"/>
                            <scope line="206"/>
                        </scope>
                    </scope>
                    <scope line="212">
                        <declaration name="remaining" type="int" line="216"/>
                    </scope>
                </method>
            </class>
            <method name="init" type="void" line="225"/>
            <method name="portCreate" type="int" line="227"/>
            <method name="portAssociate" type="void" line="229"/>
            <method name="portGet" type="void" line="232"/>
            <method name="portGetn" type="int" line="234"/>
            <method name="portSend" type="void" line="237"/>
            <method name="portClose" type="void" line="239"/>
            <scope line="241"/>
        </class>
    </source>