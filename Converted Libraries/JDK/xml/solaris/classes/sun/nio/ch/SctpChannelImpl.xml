<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.net.InetAddress"/>
        <import package="java.net.SocketAddress"/>
        <import package="java.net.SocketException"/>
        <import package="java.net.InetSocketAddress"/>
        <import package="java.io.FileDescriptor"/>
        <import package="java.io.IOException"/>
        <import package="java.util.Collections"/>
        <import package="java.util.Set"/>
        <import package="java.util.HashSet"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.channels.SelectionKey"/>
        <import package="java.nio.channels.ClosedChannelException"/>
        <import package="java.nio.channels.ConnectionPendingException"/>
        <import package="java.nio.channels.NoConnectionPendingException"/>
        <import package="java.nio.channels.AlreadyConnectedException"/>
        <import package="java.nio.channels.NotYetBoundException"/>
        <import package="java.nio.channels.NotYetConnectedException"/>
        <import package="java.nio.channels.spi.SelectorProvider"/>
        <import package="com.sun.nio.sctp.AbstractNotificationHandler"/>
        <import package="com.sun.nio.sctp.Association"/>
        <import package="com.sun.nio.sctp.AssociationChangeNotification"/>
        <import package="com.sun.nio.sctp.HandlerResult"/>
        <import package="com.sun.nio.sctp.IllegalReceiveException"/>
        <import package="com.sun.nio.sctp.InvalidStreamException"/>
        <import package="com.sun.nio.sctp.IllegalUnbindException"/>
        <import package="com.sun.nio.sctp.MessageInfo"/>
        <import package="com.sun.nio.sctp.NotificationHandler"/>
        <import package="com.sun.nio.sctp.SctpChannel"/>
        <import package="com.sun.nio.sctp.SctpSocketOption"/>
        <import package="sun.nio.ch.PollArrayWrapper"/>
        <import package="sun.nio.ch.SelChImpl"/>
        <import package="com.sun.nio.sctp.SctpStandardSocketOptions"/>
        <import package="sun.nio.ch.SctpResultContainer.SEND_FAILED"/>
        <import package="sun.nio.ch.SctpResultContainer.ASSOCIATION_CHANGED"/>
        <import package="sun.nio.ch.SctpResultContainer.PEER_ADDRESS_CHANGED"/>
        <import package="sun.nio.ch.SctpResultContainer.SHUTDOWN"/>
        <class name="SctpChannelImpl" line="38">
            <extends class="SctpChannel"/>
            <implements interface="SelChImpl"/>
            <javadoc line="38">
                An implementation of an SctpChannel                
            </javadoc>
            <declaration name="fd" type="FileDescriptor" line="42"/>
            <declaration name="fdVal" type="int" line="43"/>
            <declaration name="receiverThread" type="long" line="44"/>
            <declaration name="senderThread" type="long" line="45"/>
            <declaration name="receiveLock" type="Object" line="46"/>
            <declaration name="sendLock" type="Object" line="47"/>
            <declaration name="receiveInvoked" type="ThreadLocal&lt;Boolean&gt;" line="48"/>
            <declaration name="stateLock" type="Object" line="54"/>
            <declaration name="ChannelState" type="enum" line="55"/>
            <scope line="55"/>
            <declaration name="state" type="ChannelState" line="56"/>
            <declaration name="port" type="int" line="57"/>
            <declaration name="localAddresses" type="HashSet&lt;InetSocketAddress&gt;" line="58"/>
            <declaration name="wildcard" type="boolean" line="59"/>
            <declaration name="readyToConnect" type="boolean" line="60"/>
            <declaration name="isShutdown" type="boolean" line="61"/>
            <declaration name="association" type="Association" line="62"/>
            <declaration name="remoteAddresses" type="Set&lt;SocketAddress&gt;" line="63"/>
            <javadoc line="64">
                Constructor for normal connecting sockets                
            </javadoc>
            <method name="SctpChannelImpl" type="constructor" line="67">
                <params>
                    <param name="provider" type="SelectorProvider"/>
                </params>
            </method>
            <javadoc line="73">
                Constructor for sockets obtained from server sockets                
            </javadoc>
            <method name="SctpChannelImpl" type="constructor" line="76">
                <params>
                    <param name="provider" type="SelectorProvider"/>
                    <param name="fd" type="FileDescriptor"/>
                </params>
            </method>
            <javadoc line="79">
                Constructor for sockets obtained from branching                
            </javadoc>
            <method name="SctpChannelImpl" type="constructor" line="82">
                <params>
                    <param name="provider" type="SelectorProvider"/>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="association" type="Association"/>
                </params>
                <scope line="88"/>
                <scope line="91">
                    <declaration name="buf" type="ByteBuffer" line="92"/>
                    <scope line="93"/>
                    <scope line="96"/>
                </scope>
            </method>
            <javadoc line="101">
                Binds the channel&apos;s socket to a local address.                
            </javadoc>
            <method name="bind" type="SctpChannel" line="104">
                <params>
                    <param name="local" type="SocketAddress"/>
                </params>
                <scope line="105">
                    <scope line="106">
                        <scope line="107">
                            <declaration name="isa" type="InetSocketAddress" line="110"/>
                            <declaration name="boundIsa" type="InetSocketAddress" line="112"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="bindAddress" type="SctpChannel" line="121">
                <params>
                    <param name="address" type="InetAddress"/>
                </params>
            </method>
            <method name="unbindAddress" type="SctpChannel" line="126">
                <params>
                    <param name="address" type="InetAddress"/>
                </params>
            </method>
            <method name="bindUnbindAddress" type="SctpChannel" line="131">
                <params>
                    <param name="address" type="InetAddress"/>
                    <param name="add" type="boolean"/>
                </params>
                <scope line="133">
                    <scope line="134">
                        <scope line="135">
                            <scope line="140">
                                <scope line="141">
                                    <scope line="142"/>
                                </scope>
                            </scope>
                            <scope line="147">
                                <declaration name="foundAddress" type="boolean" line="149"/>
                                <scope line="150">
                                    <scope line="151"/>
                                </scope>
                            </scope>
                            <scope line="160">
                                <scope line="161">
                                    <scope line="162"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="isBound" type="boolean" line="173">
                <scope line="174"/>
            </method>
            <method name="isConnected" type="boolean" line="178">
                <scope line="179"/>
            </method>
            <method name="ensureOpenAndUnconnected" type="void" line="183">
                <scope line="184"/>
            </method>
            <method name="ensureReceiveOpen" type="boolean" line="190">
                <scope line="191"/>
            </method>
            <method name="ensureSendOpen" type="void" line="197">
                <scope line="198"/>
            </method>
            <method name="receiverCleanup" type="void" line="204">
                <scope line="205"/>
            </method>
            <method name="senderCleanup" type="void" line="210">
                <scope line="211"/>
            </method>
            <method name="association" type="Association" line="216">
                <scope line="217"/>
            </method>
            <method name="connect" type="boolean" line="223">
                <params>
                    <param name="endpoint" type="SocketAddress"/>
                </params>
            </method>
            <method name="connect" type="boolean" line="292">
                <params>
                    <param name="endpoint" type="SocketAddress"/>
                    <param name="maxOutStreams" type="int"/>
                    <param name="maxInStreams" type="int"/>
                </params>
            </method>
            <method name="isConnectionPending" type="boolean" line="296">
                <scope line="297"/>
            </method>
            <method name="finishConnect" type="boolean" line="301"/>
            <method name="implConfigureBlocking" type="void" line="381">
                <params>
                    <param name="block" type="boolean"/>
                </params>
            </method>
            <method name="implCloseSelectableChannel" type="void" line="384">
                <scope line="385"/>
            </method>
            <method name="getFD" type="FileDescriptor" line="392"/>
            <method name="getFDVal" type="int" line="395"/>
            <javadoc line="398">
                Translates native poll revent ops into a ready operation ops                
            </javadoc>
            <method name="translateReadyOps" type="boolean" line="401">
                <params>
                    <param name="ops" type="int"/>
                    <param name="initialOps" type="int"/>
                    <param name="sk" type="SelectionKeyImpl"/>
                </params>
                <declaration name="intOps" type="int" line="402"/>
                <declaration name="oldOps" type="int" line="403"/>
                <declaration name="newOps" type="int" line="404"/>
                <scope line="405"/>
                <scope line="408"/>
                <scope line="415"/>
            </method>
            <method name="translateAndUpdateReadyOps" type="boolean" line="423">
                <params>
                    <param name="ops" type="int"/>
                    <param name="sk" type="SelectionKeyImpl"/>
                </params>
            </method>
            <method name="translateAndSetReadyOps" type="boolean" line="426">
                <params>
                    <param name="ops" type="int"/>
                    <param name="sk" type="SelectionKeyImpl"/>
                </params>
            </method>
            <method name="translateAndSetInterestOps" type="void" line="429">
                <params>
                    <param name="ops" type="int"/>
                    <param name="sk" type="SelectionKeyImpl"/>
                </params>
                <declaration name="newOps" type="int" line="430"/>
            </method>
            <method name="kill" type="void" line="436"/>
            <method name="setOption" type="SctpChannel" line="453">
                <params>
                    <param name="name" type="SctpSocketOption<T>"/>
                    <param name="value" type="T"/>
                </params>
                <scope line="456"/>
            </method>
            <method name="getOption" type="T" line="462">
                <params>
                    <param name="name" type="SctpSocketOption<T>"/>
                </params>
                <scope line="465"/>
            </method>
            <class name="DefaultOptionsHolder" line="470">
                <declaration name="defaultOptions" type="Set&lt;SctpSocketOption&lt;?&gt;&gt;" line="471"/>
                <method name="defaultOptions" type="Set<SctpSocketOption<?>>" line="472">
                    <declaration name="set" type="HashSet&lt;SctpSocketOption&lt;?&gt;&gt;" line="473"/>
                </method>
            </class>
            <method name="supportedOptions" type="Set<SctpSocketOption<?>>" line="487"/>
            <method name="receive" type="MessageInfo" line="490">
                <params>
                    <param name="buffer" type="ByteBuffer"/>
                    <param name="attachment" type="T"/>
                    <param name="handler" type="NotificationHandler<T>"/>
                </params>
            </method>
            <method name="receive" type="MessageInfo" line="493">
                <params>
                    <param name="buffer" type="ByteBuffer"/>
                    <param name="attachment" type="T"/>
                    <param name="handler" type="NotificationHandler<T>"/>
                    <param name="fromConnect" type="boolean"/>
                </params>
            </method>
            <method name="receive" type="int" line="549">
                <params>
                    <param name="fd" type="int"/>
                    <param name="dst" type="ByteBuffer"/>
                    <param name="resultContainer" type="SctpResultContainer"/>
                    <param name="peek" type="boolean"/>
                </params>
                <declaration name="pos" type="int" line="550"/>
                <declaration name="lim" type="int" line="551"/>
                <declaration name="rem" type="int" line="553"/>
                <declaration name="newSize" type="int" line="555"/>
                <declaration name="bb" type="ByteBuffer" line="556"/>
                <scope line="557">
                    <declaration name="n" type="int" line="558"/>
                </scope>
                <scope line="563"/>
            </method>
            <method name="receiveIntoNativeBuffer" type="int" line="567">
                <params>
                    <param name="fd" type="int"/>
                    <param name="resultContainer" type="SctpResultContainer"/>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="rem" type="int"/>
                    <param name="pos" type="int"/>
                    <param name="peek" type="boolean"/>
                </params>
                <declaration name="n" type="int" line="568"/>
            </method>
            <declaration name="internalNotificationHandler" type="InternalNotificationHandler&lt;?&gt;" line="572"/>
            <method name="handleNotificationInternal" type="void" line="573">
                <params>
                    <param name="resultContainer" type="SctpResultContainer"/>
                </params>
            </method>
            <class name="InternalNotificationHandler" line="576">
                <type_params>
                    <type_param name="T"/>
                </type_params>
                <extends class="AbstractNotificationHandler">
                    <type_params>
                        <type_param name="T"/>
                    </type_params>
                </extends>
                <method name="handleNotification" type="HandlerResult" line="577">
                    <params>
                        <param name="not" type="AssociationChangeNotification"/>
                        <param name="unused" type="T"/>
                    </params>
                    <scope line="578">
                        <declaration name="sac" type="SctpAssocChange" line="579"/>
                    </scope>
                </method>
            </class>
            <method name="invokeNotificationHandler" type="HandlerResult" line="585">
                <params>
                    <param name="resultContainer" type="SctpResultContainer"/>
                    <param name="handler" type="NotificationHandler<T>"/>
                    <param name="attachment" type="T"/>
                </params>
                <declaration name="notification" type="SctpNotification" line="586"/>
                <scope line="587"/>
                <scope line="590"/>
                <declaration name="absHandler" type="AbstractNotificationHandler" line="593"/>
            </method>
            <method name="checkAssociation" type="void" line="607">
                <params>
                    <param name="sendAssociation" type="Association"/>
                </params>
                <scope line="608">
                    <scope line="609"/>
                </scope>
            </method>
            <method name="checkStreamNumber" type="void" line="614">
                <params>
                    <param name="streamNumber" type="int"/>
                </params>
                <scope line="615">
                    <scope line="616"/>
                </scope>
            </method>
            <method name="send" type="int" line="621">
                <params>
                    <param name="buffer" type="ByteBuffer"/>
                    <param name="messageInfo" type="MessageInfo"/>
                </params>
            </method>
            <method name="send" type="int" line="648">
                <params>
                    <param name="fd" type="int"/>
                    <param name="src" type="ByteBuffer"/>
                    <param name="messageInfo" type="MessageInfo"/>
                </params>
                <declaration name="streamNumber" type="int" line="649"/>
                <declaration name="target" type="SocketAddress" line="650"/>
                <declaration name="unordered" type="boolean" line="651"/>
                <declaration name="ppid" type="int" line="652"/>
                <declaration name="pos" type="int" line="654"/>
                <declaration name="lim" type="int" line="655"/>
                <declaration name="rem" type="int" line="657"/>
                <declaration name="bb" type="ByteBuffer" line="658"/>
                <scope line="659">
                    <declaration name="n" type="int" line="663"/>
                    <scope line="664"/>
                </scope>
                <scope line="669"/>
            </method>
            <method name="sendFromNativeBuffer" type="int" line="673">
                <params>
                    <param name="fd" type="int"/>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="target" type="SocketAddress"/>
                    <param name="streamNumber" type="int"/>
                    <param name="unordered" type="boolean"/>
                    <param name="ppid" type="int"/>
                </params>
                <declaration name="pos" type="int" line="674"/>
                <declaration name="lim" type="int" line="675"/>
                <declaration name="rem" type="int" line="677"/>
                <declaration name="written" type="int" line="678"/>
            </method>
            <method name="shutdown" type="SctpChannel" line="682">
                <scope line="683"/>
            </method>
            <method name="getAllLocalAddresses" type="Set<SocketAddress>" line="692">
                <scope line="693"/>
            </method>
            <method name="getRemoteAddresses" type="Set<SocketAddress>" line="699">
                <scope line="700">
                    <scope line="703"/>
                    <scope line="706"/>
                </scope>
            </method>
            <method name="initIDs" type="void" line="711"/>
            <method name="receive0" type="int" line="712"/>
            <method name="send0" type="int" line="713"/>
            <method name="checkConnect" type="int" line="714"/>
            <scope line="715"/>
        </class>
    </source>