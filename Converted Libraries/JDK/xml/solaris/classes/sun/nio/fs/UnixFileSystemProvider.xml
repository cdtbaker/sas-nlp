<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.fs">
        <import package="java.nio.file"/>
        <import package="java.nio.file.attribute"/>
        <import package="java.nio.channels"/>
        <import package="java.net.URI"/>
        <import package="java.util.concurrent.ExecutorService"/>
        <import package="java.io.IOException"/>
        <import package="java.io.FilePermission"/>
        <import package="java.util"/>
        <import package="java.security.AccessController"/>
        <import package="sun.nio.ch.ThreadPool"/>
        <import package="sun.security.util.SecurityConstants"/>
        <import package="sun.nio.fs.UnixNativeDispatcher"/>
        <import package="sun.nio.fs.UnixConstants"/>
        <class name="UnixFileSystemProvider" line="15">
            <extends class="AbstractFileSystemProvider"/>
            <javadoc line="15">
                Base implementation of FileSystemProvider                
            </javadoc>
            <declaration name="USER_DIR" type="String" line="19"/>
            <declaration name="theFileSystem" type="UnixFileSystem" line="20"/>
            <method name="UnixFileSystemProvider" type="constructor" line="21">
                <declaration name="userDir" type="String" line="22"/>
            </method>
            <method name="newFileSystem" type="UnixFileSystem" line="25"/>
            <javadoc line="25">
                Constructs a new file system using the given default directory.                
            </javadoc>
            <method name="getScheme" type="String" line="29"/>
            <method name="checkUri" type="void" line="32">
                <params>
                    <param name="uri" type="URI"/>
                </params>
            </method>
            <method name="newFileSystem" type="FileSystem" line="40">
                <params>
                    <param name="uri" type="URI"/>
                    <param name="env" type="Map<String,?>"/>
                </params>
            </method>
            <method name="getFileSystem" type="FileSystem" line="44">
                <params>
                    <param name="uri" type="URI"/>
                </params>
            </method>
            <method name="getPath" type="Path" line="48">
                <params>
                    <param name="uri" type="URI"/>
                </params>
            </method>
            <method name="checkPath" type="UnixPath" line="51">
                <params>
                    <param name="obj" type="Path"/>
                </params>
            </method>
            <method name="getFileAttributeView" type="V" line="56">
                <params>
                    <param name="obj" type="Path"/>
                    <param name="type" type="Class<V>"/>
                    <param name="options" type="LinkOption"/>
                </params>
                <declaration name="file" type="UnixPath" line="57"/>
                <declaration name="followLinks" type="boolean" line="58"/>
            </method>
            <method name="readAttributes" type="A" line="65">
                <params>
                    <param name="file" type="Path"/>
                    <param name="type" type="Class<A>"/>
                    <param name="options" type="LinkOption"/>
                </params>
                <declaration name="view" type="Class&lt;? extends BasicFileAttributeView&gt;" line="66"/>
            </method>
            <method name="getFileAttributeView" type="DynamicFileAttributeView" line="73">
                <params>
                    <param name="obj" type="Path"/>
                    <param name="name" type="String"/>
                    <param name="options" type="LinkOption"/>
                </params>
                <declaration name="file" type="UnixPath" line="74"/>
                <declaration name="followLinks" type="boolean" line="75"/>
            </method>
            <method name="newFileChannel" type="FileChannel" line="82">
                <params>
                    <param name="obj" type="Path"/>
                    <param name="options" type="Set<? extends OpenOption>"/>
                    <param name="attrs" type="FileAttribute<?>"/>
                </params>
                <declaration name="file" type="UnixPath" line="83"/>
                <declaration name="mode" type="int" line="84"/>
                <scope line="85"/>
                <scope line="88"/>
            </method>
            <method name="newAsynchronousFileChannel" type="AsynchronousFileChannel" line="93">
                <params>
                    <param name="obj" type="Path"/>
                    <param name="options" type="Set<? extends OpenOption>"/>
                    <param name="executor" type="ExecutorService"/>
                    <param name="attrs" type="FileAttribute<?>"/>
                </params>
                <declaration name="file" type="UnixPath" line="94"/>
                <declaration name="mode" type="int" line="95"/>
                <declaration name="pool" type="ThreadPool" line="96"/>
                <scope line="97"/>
                <scope line="100"/>
            </method>
            <method name="newByteChannel" type="SeekableByteChannel" line="105">
                <params>
                    <param name="obj" type="Path"/>
                    <param name="options" type="Set<? extends OpenOption>"/>
                    <param name="attrs" type="FileAttribute<?>"/>
                </params>
                <declaration name="file" type="UnixPath" line="106"/>
                <declaration name="mode" type="int" line="107"/>
                <scope line="108"/>
                <scope line="111"/>
            </method>
            <method name="implDelete" type="boolean" line="116">
                <params>
                    <param name="obj" type="Path"/>
                    <param name="failIfNotExists" type="boolean"/>
                </params>
                <declaration name="file" type="UnixPath" line="117"/>
                <declaration name="attrs" type="UnixFileAttributes" line="119"/>
                <scope line="120">
                    <scope line="122"/>
                    <scope line="125"/>
                </scope>
                <scope line="130"/>
            </method>
            <method name="copy" type="void" line="137">
                <params>
                    <param name="source" type="Path"/>
                    <param name="target" type="Path"/>
                    <param name="options" type="CopyOption"/>
                </params>
            </method>
            <method name="move" type="void" line="140">
                <params>
                    <param name="source" type="Path"/>
                    <param name="target" type="Path"/>
                    <param name="options" type="CopyOption"/>
                </params>
            </method>
            <method name="checkAccess" type="void" line="143">
                <params>
                    <param name="obj" type="Path"/>
                    <param name="modes" type="AccessMode"/>
                </params>
                <declaration name="file" type="UnixPath" line="144"/>
                <declaration name="e" type="boolean" line="145"/>
                <declaration name="r" type="boolean" line="146"/>
                <declaration name="w" type="boolean" line="147"/>
                <declaration name="x" type="boolean" line="148"/>
                <scope line="149"/>
                <scope line="152">
                    <scope line="153"/>
                </scope>
                <declaration name="mode" type="int" line="169"/>
                <scope line="170"/>
                <scope line="174"/>
                <scope line="178">
                    <declaration name="sm" type="SecurityManager" line="179"/>
                    <scope line="180"/>
                </scope>
                <scope line="185"/>
                <scope line="188"/>
            </method>
            <method name="isSameFile" type="boolean" line="192">
                <params>
                    <param name="obj1" type="Path"/>
                    <param name="obj2" type="Path"/>
                </params>
                <declaration name="file1" type="UnixPath" line="193"/>
                <declaration name="file2" type="UnixPath" line="197"/>
                <declaration name="attrs1" type="UnixFileAttributes" line="200"/>
                <declaration name="attrs2" type="UnixFileAttributes" line="201"/>
                <scope line="202"/>
                <scope line="205"/>
                <scope line="209"/>
                <scope line="212"/>
            </method>
            <method name="isHidden" type="boolean" line="218">
                <params>
                    <param name="obj" type="Path"/>
                </params>
                <declaration name="file" type="UnixPath" line="219"/>
                <declaration name="name" type="UnixPath" line="221"/>
            </method>
            <method name="getFileStore" type="FileStore" line="225"/>
            <javadoc line="225">
                Returns a FileStore to represent the file system where the given file
                  reside.                
            </javadoc>
            <method name="getFileStore" type="FileStore" line="230">
                <params>
                    <param name="obj" type="Path"/>
                </params>
                <declaration name="file" type="UnixPath" line="231"/>
                <declaration name="sm" type="SecurityManager" line="232"/>
                <scope line="233"/>
            </method>
            <method name="createDirectory" type="void" line="239">
                <params>
                    <param name="obj" type="Path"/>
                    <param name="attrs" type="FileAttribute<?>"/>
                </params>
                <declaration name="dir" type="UnixPath" line="240"/>
                <declaration name="mode" type="int" line="242"/>
                <scope line="243"/>
                <scope line="246"/>
            </method>
            <method name="newDirectoryStream" type="DirectoryStream<Path>" line="250">
                <params>
                    <param name="obj" type="Path"/>
                    <param name="filter" type="DirectoryStream.Filter<? super Path>"/>
                </params>
                <declaration name="dir" type="UnixPath" line="251"/>
                <scope line="254">
                    <scope line="255">
                        <declaration name="ptr" type="long" line="256"/>
                    </scope>
                    <scope line="259"/>
                </scope>
                <declaration name="dfd1" type="int" line="264"/>
                <declaration name="dfd2" type="int" line="265"/>
                <declaration name="dp" type="long" line="266"/>
                <scope line="267"/>
                <scope line="272"/>
            </method>
            <method name="createSymbolicLink" type="void" line="280">
                <params>
                    <param name="obj1" type="Path"/>
                    <param name="obj2" type="Path"/>
                    <param name="attrs" type="FileAttribute<?>"/>
                </params>
                <declaration name="link" type="UnixPath" line="281"/>
                <declaration name="target" type="UnixPath" line="282"/>
                <scope line="283"/>
                <declaration name="sm" type="SecurityManager" line="287"/>
                <scope line="288"/>
                <scope line="292"/>
                <scope line="295"/>
            </method>
            <method name="createLink" type="void" line="299">
                <params>
                    <param name="obj1" type="Path"/>
                    <param name="obj2" type="Path"/>
                </params>
                <declaration name="link" type="UnixPath" line="300"/>
                <declaration name="existing" type="UnixPath" line="301"/>
                <declaration name="sm" type="SecurityManager" line="302"/>
                <scope line="303"/>
                <scope line="308"/>
                <scope line="311"/>
            </method>
            <method name="readSymbolicLink" type="Path" line="315">
                <params>
                    <param name="obj1" type="Path"/>
                </params>
                <declaration name="link" type="UnixPath" line="316"/>
                <declaration name="sm" type="SecurityManager" line="317"/>
                <scope line="318">
                    <declaration name="perm" type="FilePermission" line="319"/>
                </scope>
                <scope line="322">
                    <declaration name="target" type="byte[]" line="323"/>
                </scope>
                <scope line="326"/>
            </method>
        </class>
    </source>