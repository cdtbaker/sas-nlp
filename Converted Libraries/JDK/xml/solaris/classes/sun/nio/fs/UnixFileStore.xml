<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.fs">
        <import package="java.nio.file"/>
        <import package="java.nio.file.attribute"/>
        <import package="java.nio.channels"/>
        <import package="java.util"/>
        <import package="java.io.IOException"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <class name="UnixFileStore" line="9">
            <extends class="FileStore"/>
            <javadoc line="9">
                Base implementation of FileStore for Unix/like implementations.                
            </javadoc>
            <declaration name="file" type="UnixPath" line="13"/>
            <declaration name="dev" type="long" line="14"/>
            <declaration name="entry" type="UnixMountEntry" line="15"/>
            <method name="devFor" type="long" line="16">
                <params>
                    <param name="file" type="UnixPath"/>
                </params>
                <scope line="17"/>
                <scope line="20"/>
            </method>
            <method name="UnixFileStore" type="constructor" line="25">
                <params>
                    <param name="file" type="UnixPath"/>
                </params>
            </method>
            <method name="UnixFileStore" type="constructor" line="30">
                <params>
                    <param name="fs" type="UnixFileSystem"/>
                    <param name="entry" type="UnixMountEntry"/>
                </params>
            </method>
            <method name="findMountEntry" type="UnixMountEntry" line="35"/>
            <javadoc line="35">
                Find the mount entry for the file store                
            </javadoc>
            <method name="file" type="UnixPath" line="39"/>
            <method name="dev" type="long" line="42"/>
            <method name="entry" type="UnixMountEntry" line="45"/>
            <method name="name" type="String" line="48"/>
            <method name="type" type="String" line="51"/>
            <method name="isReadOnly" type="boolean" line="54"/>
            <method name="readAttributes" type="UnixFileStoreAttributes" line="57">
                <scope line="58"/>
                <scope line="61"/>
            </method>
            <method name="getTotalSpace" type="long" line="66">
                <declaration name="attrs" type="UnixFileStoreAttributes" line="67"/>
            </method>
            <method name="getUsableSpace" type="long" line="70">
                <declaration name="attrs" type="UnixFileStoreAttributes" line="71"/>
            </method>
            <method name="getUnallocatedSpace" type="long" line="74">
                <declaration name="attrs" type="UnixFileStoreAttributes" line="75"/>
            </method>
            <method name="getFileStoreAttributeView" type="V" line="78">
                <params>
                    <param name="view" type="Class<V>"/>
                </params>
            </method>
            <method name="getAttribute" type="Object" line="82">
                <params>
                    <param name="attribute" type="String"/>
                </params>
            </method>
            <method name="supportsFileAttributeView" type="boolean" line="88">
                <params>
                    <param name="type" type="Class<? extends FileAttributeView>"/>
                </params>
                <scope line="91">
                    <declaration name="status" type="FeatureStatus" line="92"/>
                </scope>
            </method>
            <method name="supportsFileAttributeView" type="boolean" line="97">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="103">
                <params>
                    <param name="ob" type="Object"/>
                </params>
                <declaration name="other" type="UnixFileStore" line="106"/>
            </method>
            <method name="hashCode" type="int" line="109"/>
            <method name="toString" type="String" line="112">
                <declaration name="sb" type="StringBuilder" line="113"/>
            </method>
            <declaration name="loadLock" type="Object" line="119"/>
            <declaration name="props" type="Properties" line="120"/>
            <declaration name="FeatureStatus" type="enum" line="121"/>
            <scope line="121"/>
            <javadoc line="122">
                Returns status to indicate if file system supports a given feature                
            </javadoc>
            <method name="checkIfFeaturePresent" type="FeatureStatus" line="125">
                <params>
                    <param name="feature" type="String"/>
                </params>
                <scope line="126">
                    <scope line="127">
                        <scope line="128">
                            <anonymous_class line="129">
                                <method name="run" type="Properties" line="130"/>
                            </anonymous_class>
                        </scope>
                    </scope>
                </scope>
                <declaration name="value" type="String" line="138"/>
                <scope line="139">
                    <declaration name="values" type="String[]" line="140"/>
                    <scope line="141">
                        <scope line="143"/>
                        <scope line="146">
                            <scope line="148"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="loadProperties" type="Properties" line="156"/>
        </class>
    </source>