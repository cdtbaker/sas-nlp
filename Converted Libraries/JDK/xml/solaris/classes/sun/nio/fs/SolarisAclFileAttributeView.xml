<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.fs">
        <import package="java.nio.file"/>
        <import package="java.nio.file.attribute"/>
        <import package="java.util"/>
        <import package="java.io.IOException"/>
        <import package="sun.misc.Unsafe"/>
        <import package="sun.nio.fs.UnixConstants"/>
        <import package="sun.nio.fs.SolarisConstants"/>
        <import package="sun.nio.fs.SolarisNativeDispatcher"/>
        <class name="SolarisAclFileAttributeView" line="10">
            <extends class="AbstractAclFileAttributeView"/>
            <javadoc line="10">
                Solaris implementation of AclFileAttributeView with native support for
                  NFSv4 ACLs on ZFS.                
            </javadoc>
            <declaration name="unsafe" type="Unsafe" line="15"/>
            <declaration name="MAX_ACL_ENTRIES" type="int" line="16"/>
            <declaration name="SIZEOF_ACE_T" type="short" line="17"/>
            <javadoc line="17">
                typedef struct ace {
                  uid_t        a_who;
                  uitn32_t     a_access_mark;
                  uint16_t     a_flags;
                  uint16_t     a_type;
                  } act_t;                
            </javadoc>
            <declaration name="OFFSETOF_UID" type="short" line="26"/>
            <declaration name="OFFSETOF_MASK" type="short" line="27"/>
            <declaration name="OFFSETOF_FLAGS" type="short" line="28"/>
            <declaration name="OFFSETOF_TYPE" type="short" line="29"/>
            <declaration name="file" type="UnixPath" line="30"/>
            <declaration name="followLinks" type="boolean" line="31"/>
            <method name="SolarisAclFileAttributeView" type="constructor" line="32">
                <params>
                    <param name="file" type="UnixPath"/>
                    <param name="followLinks" type="boolean"/>
                </params>
            </method>
            <javadoc line="36">
                Permission checks to access file                
            </javadoc>
            <method name="checkAccess" type="void" line="39">
                <params>
                    <param name="file" type="UnixPath"/>
                    <param name="checkRead" type="boolean"/>
                    <param name="checkWrite" type="boolean"/>
                </params>
                <declaration name="sm" type="SecurityManager" line="40"/>
                <scope line="41"/>
            </method>
            <javadoc line="47">
                Encode the ACL to the given buffer                
            </javadoc>
            <method name="encode" type="void" line="50">
                <params>
                    <param name="acl" type="List<AclEntry>"/>
                    <param name="address" type="long"/>
                </params>
                <declaration name="offset" type="long" line="51"/>
                <scope line="52">
                    <declaration name="flags" type="int" line="53"/>
                    <declaration name="who" type="UserPrincipal" line="54"/>
                    <declaration name="user" type="UnixUserPrincipals.User" line="56"/>
                    <declaration name="uid" type="int" line="57"/>
                    <scope line="58"/>
                    <scope line="65">
                        <scope line="66"/>
                        <scope line="70"/>
                    </scope>
                    <declaration name="type" type="int" line="74"/>
                    <declaration name="aceMask" type="Set&lt;AclEntryPermission&gt;" line="91"/>
                    <declaration name="mask" type="int" line="92"/>
                    <declaration name="aceFlags" type="Set&lt;AclEntryFlag&gt;" line="107"/>
                </scope>
            </method>
            <javadoc line="119">
                Decode the buffer, returning an ACL                
            </javadoc>
            <method name="decode" type="List<AclEntry>" line="122">
                <params>
                    <param name="address" type="long"/>
                    <param name="n" type="int"/>
                </params>
            </method>
            <method name="isAclsEnabled" type="boolean" line="183">
                <params>
                    <param name="fd" type="int"/>
                </params>
                <scope line="184">
                    <declaration name="enabled" type="long" line="185"/>
                </scope>
                <scope line="188"/>
            </method>
            <method name="getAcl" type="List<AclEntry>" line="192"/>
            <method name="setAcl" type="void" line="217">
                <params>
                    <param name="acl" type="List<AclEntry>"/>
                </params>
                <declaration name="fd" type="int" line="219"/>
                <scope line="220">
                    <declaration name="n" type="int" line="222"/>
                    <declaration name="address" type="long" line="223"/>
                    <scope line="224"/>
                    <scope line="228">
                        <scope line="229"/>
                    </scope>
                    <scope line="235"/>
                </scope>
                <scope line="239"/>
            </method>
            <method name="getOwner" type="UserPrincipal" line="243">
                <scope line="245">
                    <declaration name="attrs" type="UnixFileAttributes" line="246"/>
                </scope>
                <scope line="249"/>
            </method>
            <method name="setOwner" type="void" line="254">
                <params>
                    <param name="owner" type="UserPrincipal"/>
                </params>
                <declaration name="uid" type="int" line="258"/>
                <scope line="259">
                    <scope line="260"/>
                    <scope line="263"/>
                </scope>
                <scope line="267"/>
            </method>
        </class>
    </source>