<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.fs">
        <import package="java.nio.file"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.NoSuchElementException"/>
        <import package="java.util.concurrent.locks"/>
        <import package="java.io.IOException"/>
        <import package="sun.nio.fs.UnixNativeDispatcher"/>
        <class name="UnixDirectoryStream" line="8">
            <implements interface="DirectoryStream">
                <type_params>
                    <type_param name="Path"/>
                </type_params>
            </implements>
            <javadoc line="8">
                Unix implementation of java.nio.file.DirectoryStream                
            </javadoc>
            <declaration name="dir" type="UnixPath" line="12"/>
            <declaration name="dp" type="long" line="13"/>
            <declaration name="filter" type="DirectoryStream.Filter&lt;? super Path&gt;" line="14"/>
            <declaration name="streamLock" type="ReentrantReadWriteLock" line="15"/>
            <declaration name="isClosed" type="boolean" line="16"/>
            <declaration name="iterator" type="Iterator&lt;Path&gt;" line="17"/>
            <javadoc line="18">
                Initializes a new instance                
            </javadoc>
            <method name="UnixDirectoryStream" type="constructor" line="21">
                <params>
                    <param name="dir" type="UnixPath"/>
                    <param name="dp" type="long"/>
                    <param name="filter" type="DirectoryStream.Filter<? super Path>"/>
                </params>
            </method>
            <method name="directory" type="UnixPath" line="26"/>
            <method name="readLock" type="Lock" line="29"/>
            <method name="writeLock" type="Lock" line="32"/>
            <method name="isOpen" type="boolean" line="35"/>
            <method name="closeImpl" type="boolean" line="38">
                <scope line="39">
                    <scope line="41"/>
                    <scope line="44"/>
                </scope>
                <scope line="49"/>
            </method>
            <method name="close" type="void" line="53">
                <scope line="55"/>
                <scope line="58"/>
            </method>
            <method name="iterator" type="Iterator<Path>" line="62">
                <params>
                    <param name="ds" type="DirectoryStream<Path>"/>
                </params>
                <scope line="63"/>
                <scope line="66"/>
            </method>
            <method name="iterator" type="Iterator<Path>" line="72"/>
            <class name="UnixDirectoryIterator" line="75">
                <implements interface="Iterator">
                    <type_params>
                        <type_param name="Path"/>
                    </type_params>
                </implements>
                <javadoc line="75">
                    Iterator implementation                    
                </javadoc>
                <declaration name="stream" type="DirectoryStream&lt;Path&gt;" line="79"/>
                <declaration name="atEof" type="boolean" line="80"/>
                <declaration name="nextEntry" type="Path" line="81"/>
                <method name="UnixDirectoryIterator" type="constructor" line="82">
                    <params>
                        <param name="stream" type="DirectoryStream<Path>"/>
                    </params>
                </method>
                <method name="isSelfOrParent" type="boolean" line="86">
                    <params>
                        <param name="nameAsBytes" type="byte[]"/>
                    </params>
                    <scope line="87">
                        <scope line="88"/>
                    </scope>
                </method>
                <method name="readNextEntry" type="Path" line="94"/>
                <method name="hasNext" type="boolean" line="126"/>
                <method name="next" type="Path" line="130">
                    <declaration name="result" type="Path" line="131"/>
                    <scope line="132"/>
                    <scope line="135"/>
                </method>
                <method name="remove" type="void" line="142"/>
            </class>
        </class>
    </source>