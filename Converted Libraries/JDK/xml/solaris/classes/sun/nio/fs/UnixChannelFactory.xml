<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.fs">
        <import package="java.nio.file"/>
        <import package="java.nio.channels"/>
        <import package="java.io.FileDescriptor"/>
        <import package="java.util.Set"/>
        <import package="sun.nio.ch.FileChannelImpl"/>
        <import package="sun.nio.ch.ThreadPool"/>
        <import package="sun.nio.ch.SimpleAsynchronousFileChannelImpl"/>
        <import package="sun.misc.SharedSecrets"/>
        <import package="sun.misc.JavaIOFileDescriptorAccess"/>
        <import package="com.sun.nio.file.ExtendedOpenOption"/>
        <import package="sun.nio.fs.UnixNativeDispatcher"/>
        <import package="sun.nio.fs.UnixConstants"/>
        <class name="UnixChannelFactory" line="14">
            <javadoc line="14">
                Factory for FileChannels and AsynchronousFileChannels                
            </javadoc>
            <declaration name="fdAccess" type="JavaIOFileDescriptorAccess" line="18"/>
            <method name="UnixChannelFactory" type="constructor" line="19"/>
            <class name="Flags" line="21">
                <javadoc line="21">
                    Represents the flags from a user-supplied set of open options.                    
                </javadoc>
                <declaration name="read" type="boolean" line="25"/>
                <declaration name="write" type="boolean" line="26"/>
                <declaration name="append" type="boolean" line="27"/>
                <declaration name="truncateExisting" type="boolean" line="28"/>
                <declaration name="noFollowLinks" type="boolean" line="29"/>
                <declaration name="create" type="boolean" line="30"/>
                <declaration name="createNew" type="boolean" line="31"/>
                <declaration name="deleteOnClose" type="boolean" line="32"/>
                <declaration name="sync" type="boolean" line="33"/>
                <declaration name="dsync" type="boolean" line="34"/>
                <method name="toFlags" type="Flags" line="35">
                    <params>
                        <param name="options" type="Set<? extends OpenOption>"/>
                    </params>
                    <declaration name="flags" type="Flags" line="36"/>
                    <scope line="37">
                        <scope line="38"/>
                        <scope line="74"/>
                    </scope>
                </method>
            </class>
            <javadoc line="84">
                Constructs a file channel from an existing (open) file descriptor                
            </javadoc>
            <method name="newFileChannel" type="FileChannel" line="87">
                <params>
                    <param name="fd" type="int"/>
                    <param name="reading" type="boolean"/>
                    <param name="writing" type="boolean"/>
                </params>
                <declaration name="fdObj" type="FileDescriptor" line="88"/>
            </method>
            <javadoc line="92">
                Constructs a file channel by opening a file using a dfd/path pair                
            </javadoc>
            <method name="newFileChannel" type="FileChannel" line="95">
                <params>
                    <param name="dfd" type="int"/>
                    <param name="path" type="UnixPath"/>
                    <param name="pathForPermissionCheck" type="String"/>
                    <param name="options" type="Set<? extends OpenOption>"/>
                    <param name="mode" type="int"/>
                </params>
                <declaration name="flags" type="Flags" line="96"/>
                <scope line="97">
                    <scope line="98"/>
                    <scope line="101"/>
                </scope>
                <declaration name="fdObj" type="FileDescriptor" line="107"/>
            </method>
            <javadoc line="110">
                Constructs a file channel by opening the given file.                
            </javadoc>
            <method name="newFileChannel" type="FileChannel" line="113">
                <params>
                    <param name="path" type="UnixPath"/>
                    <param name="options" type="Set<? extends OpenOption>"/>
                    <param name="mode" type="int"/>
                </params>
            </method>
            <javadoc line="116">
                Constructs an asynchronous file channel by opening the given file.                
            </javadoc>
            <method name="newAsynchronousFileChannel" type="AsynchronousFileChannel" line="119">
                <params>
                    <param name="path" type="UnixPath"/>
                    <param name="options" type="Set<? extends OpenOption>"/>
                    <param name="mode" type="int"/>
                    <param name="pool" type="ThreadPool"/>
                </params>
                <declaration name="flags" type="Flags" line="120"/>
                <scope line="121"/>
                <declaration name="fdObj" type="FileDescriptor" line="125"/>
            </method>
            <javadoc line="128">
                Opens file based on parameters and options, returning a FileDescriptor
                  encapsulating the handle to the open file.                
            </javadoc>
            <method name="open" type="FileDescriptor" line="132">
                <params>
                    <param name="dfd" type="int"/>
                    <param name="path" type="UnixPath"/>
                    <param name="pathForPermissionCheck" type="String"/>
                    <param name="flags" type="Flags"/>
                    <param name="mode" type="int"/>
                </params>
                <declaration name="oflags" type="int" line="133"/>
                <scope line="134"/>
                <scope line="137"/>
                <scope line="140">
                    <scope line="143">
                        <declaration name="pathForSysCall" type="byte[]" line="144"/>
                        <scope line="145"/>
                    </scope>
                    <scope line="150"/>
                </scope>
                <declaration name="followLinks" type="boolean" line="154"/>
                <scope line="155"/>
                <declaration name="sm" type="SecurityManager" line="161"/>
                <scope line="162"/>
                <declaration name="fd" type="int" line="168"/>
                <scope line="169">
                    <scope line="170"/>
                    <scope line="173"/>
                </scope>
                <scope line="177">
                    <scope line="178"/>
                    <scope line="181"/>
                </scope>
                <scope line="186">
                    <scope line="187">
                        <scope line="188"/>
                        <scope line="191"/>
                    </scope>
                    <scope line="195"/>
                </scope>
                <declaration name="fdObj" type="FileDescriptor" line="198"/>
            </method>
        </class>
    </source>