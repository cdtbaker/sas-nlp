<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.fs">
        <import package="java.nio.file"/>
        <import package="java.io.IOException"/>
        <class name="UnixException" line="31">
            <extends class="Exception"/>
            <javadoc line="31">
                Internal exception thrown by native methods when error detected.                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="36"/>
            <declaration name="errno" type="int" line="38"/>
            <declaration name="msg" type="String" line="39"/>
            <method name="UnixException" type="constructor" line="41">
                <params>
                    <param name="errno" type="int"/>
                </params>
            </method>
            <method name="UnixException" type="constructor" line="46">
                <params>
                    <param name="msg" type="String"/>
                </params>
            </method>
            <method name="errno" type="int" line="51"/>
            <method name="setError" type="void" line="55">
                <params>
                    <param name="errno" type="int"/>
                </params>
            </method>
            <method name="errorString" type="String" line="60">
                <scope line="61"/>
                <scope line="63"/>
            </method>
            <method name="getMessage" type="String" line="69"/>
            <javadoc line="73">
                Map well known errors to specific exceptions where possible; otherwise
                  return more general FileSystemException.                
            </javadoc>
            <method name="translateToIOException" type="IOException" line="77">
                <params>
                    <param name="file" type="String"/>
                    <param name="other" type="String"/>
                </params>
                <comment line="79">
                    created with message rather than errno                    
                </comment>
                <comment line="83">
                    handle specific cases                    
                </comment>
                <comment line="91">
                    fallback to the more general exception                    
                </comment>
            </method>
            <method name="rethrowAsIOException" type="void" line="94">
                <params>
                    <param name="file" type="String"/>
                </params>
                <declaration name="x" type="IOException" line="95"/>
            </method>
            <method name="rethrowAsIOException" type="void" line="99">
                <params>
                    <param name="file" type="UnixPath"/>
                    <param name="other" type="UnixPath"/>
                </params>
                <declaration name="a" type="String" line="100"/>
                <declaration name="b" type="String" line="101"/>
                <declaration name="x" type="IOException" line="102"/>
            </method>
            <method name="rethrowAsIOException" type="void" line="106">
                <params>
                    <param name="file" type="UnixPath"/>
                </params>
            </method>
            <method name="asIOException" type="IOException" line="110">
                <params>
                    <param name="file" type="UnixPath"/>
                </params>
            </method>
        </class>
    </source>