<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.fs">
        <import package="java.nio.file"/>
        <import package="java.io.IOException"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.util.concurrent.ExecutionException"/>
        <import package="java.util.concurrent.TimeUnit"/>
        <import package="com.sun.nio.file.ExtendedCopyOption"/>
        <import package="sun.nio.fs.UnixNativeDispatcher"/>
        <import package="sun.nio.fs.UnixConstants"/>
        <class name="UnixCopyFile" line="40">
            <comment line="48">
                The flags that control how a file is copied or moved                
            </comment>
            <comment line="127">
                copy directory from source to target                
            </comment>
            <comment line="219">
                copy regular file from source to target                
            </comment>
            <comment line="297">
                copy symbolic link from source to target                
            </comment>
            <comment line="325">
                copy special file from source to target                
            </comment>
            <comment line="366">
                move file from source to target                
            </comment>
            <comment line="499">
                copy file from source to target                
            </comment>
            <comment line="598">
                -- native methods --                
            </comment>
            <javadoc line="40">
                Unix implementation of Path#copyTo and Path#moveTo methods.                
            </javadoc>
            <method name="UnixCopyFile" type="constructor" line="45"/>
            <class name="Flags" line="48">
                <comment line="55">
                    the attributes to copy                    
                </comment>
                <comment line="60">
                    flags that indicate if we should fail if attributes cannot be copied                    
                </comment>
                <declaration name="replaceExisting" type="boolean" line="49"/>
                <declaration name="atomicMove" type="boolean" line="50"/>
                <declaration name="followLinks" type="boolean" line="51"/>
                <declaration name="interruptible" type="boolean" line="52"/>
                <declaration name="copyBasicAttributes" type="boolean" line="55"/>
                <declaration name="copyPosixAttributes" type="boolean" line="56"/>
                <declaration name="copyNonPosixAttributes" type="boolean" line="57"/>
                <declaration name="failIfUnableToCopyBasic" type="boolean" line="60"/>
                <declaration name="failIfUnableToCopyPosix" type="boolean" line="61"/>
                <declaration name="failIfUnableToCopyNonPosix" type="boolean" line="62"/>
                <method name="fromCopyOptions" type="Flags" line="64">
                    <params>
                        <param name="options" type="CopyOption"/>
                    </params>
                    <comment line="78">
                        copy all attributes but only fail if basic attributes
                         cannot be copied                        
                    </comment>
                    <declaration name="flags" type="Flags" line="65"/>
                    <scope line="67">
                        <scope line="68"/>
                        <scope line="72"/>
                        <scope line="76"/>
                        <scope line="85"/>
                    </scope>
                </method>
                <method name="fromMoveOptions" type="Flags" line="96">
                    <params>
                        <param name="options" type="CopyOption"/>
                    </params>
                    <comment line="109">
                        ignore                        
                    </comment>
                    <comment line="117">
                        a move requires that all attributes be copied but only fail if
                         the basic attributes cannot be copied                        
                    </comment>
                    <declaration name="flags" type="Flags" line="97"/>
                    <scope line="98">
                        <scope line="99"/>
                        <scope line="103"/>
                        <scope line="107"/>
                    </scope>
                </method>
            </class>
            <method name="copyDirectory" type="void" line="132">
                <params>
                    <param name="source" type="UnixPath"/>
                    <param name="attrs" type="UnixFileAttributes"/>
                    <param name="target" type="UnixPath"/>
                    <param name="flags" type="Flags"/>
                </params>
                <comment line="140">
                    no attributes to copy                    
                </comment>
                <comment line="145">
                    open target directory if possible (this can fail when copying a
                     directory for which we don&apos;t have read access).                    
                </comment>
                <comment line="151">
                    access to target directory required to copy named attributes                    
                </comment>
                <comment line="160">
                    copy owner/group/permissions                    
                </comment>
                <comment line="171">
                    unable to set owner/group                    
                </comment>
                <comment line="176">
                    copy other attributes                    
                </comment>
                <comment line="190">
                    copy time stamps last                    
                </comment>
                <comment line="203">
                    unable to set times                    
                </comment>
                <comment line="213">
                    rollback                    
                </comment>
                <scope line="133"/>
                <scope line="135"/>
                <declaration name="dfd" type="int" line="146"/>
                <scope line="147"/>
                <scope line="149">
                    <scope line="151">
                        <scope line="152"/>
                        <scope line="152"/>
                    </scope>
                </scope>
                <declaration name="done" type="boolean" line="157"/>
                <scope line="158">
                    <scope line="160">
                        <scope line="161">
                            <scope line="162"/>
                            <scope line="165"/>
                        </scope>
                        <scope line="169"/>
                    </scope>
                    <scope line="176">
                        <declaration name="sfd" type="int" line="177"/>
                        <scope line="178"/>
                        <scope line="180"/>
                        <scope line="184"/>
                    </scope>
                    <scope line="190">
                        <scope line="191">
                            <scope line="192"/>
                            <scope line="196"/>
                        </scope>
                        <scope line="201"/>
                    </scope>
                </scope>
                <scope line="208">
                    <scope line="211">
                        <scope line="213"/>
                        <scope line="213"/>
                    </scope>
                </scope>
            </method>
            <method name="copyFile" type="void" line="225">
                <params>
                    <param name="source" type="UnixPath"/>
                    <param name="attrs" type="UnixFileAttributes"/>
                    <param name="target" type="UnixPath"/>
                    <param name="flags" type="Flags"/>
                    <param name="addressToPollForCancel" type="long"/>
                </params>
                <comment line="235">
                    open new file                    
                </comment>
                <comment line="247">
                    set to true when file and attributes copied                    
                </comment>
                <comment line="250">
                    transfer bytes to target file                    
                </comment>
                <comment line="256">
                    copy owner/permissions                    
                </comment>
                <comment line="266">
                    copy non POSIX attributes (depends on file system)                    
                </comment>
                <comment line="270">
                    copy time attributes                    
                </comment>
                <comment line="285">
                    copy of file or attributes failed so rollback                    
                </comment>
                <declaration name="fi" type="int" line="226"/>
                <scope line="227"/>
                <scope line="229"/>
                <scope line="233">
                    <declaration name="fo" type="int" line="235"/>
                    <scope line="236"/>
                    <scope line="242"/>
                    <declaration name="complete" type="boolean" line="247"/>
                    <scope line="248">
                        <scope line="250"/>
                        <scope line="252"/>
                        <scope line="256">
                            <scope line="257"/>
                            <scope line="260"/>
                        </scope>
                        <scope line="266"/>
                        <scope line="270">
                            <scope line="271"/>
                            <scope line="275"/>
                        </scope>
                    </scope>
                    <scope line="281">
                        <scope line="285">
                            <scope line="286"/>
                            <scope line="288"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="291"/>
            </method>
            <method name="copyLink" type="void" line="302">
                <params>
                    <param name="source" type="UnixPath"/>
                    <param name="attrs" type="UnixFileAttributes"/>
                    <param name="target" type="UnixPath"/>
                    <param name="flags" type="Flags"/>
                </params>
                <comment line="317">
                    ignore since link attributes not required to be copied                    
                </comment>
                <declaration name="linktarget" type="byte[]" line="303"/>
                <scope line="304"/>
                <scope line="306"/>
                <scope line="309">
                    <scope line="312">
                        <scope line="313"/>
                        <scope line="315"/>
                    </scope>
                </scope>
                <scope line="319"/>
            </method>
            <method name="copySpecial" type="void" line="330">
                <params>
                    <param name="source" type="UnixPath"/>
                    <param name="attrs" type="UnixFileAttributes"/>
                    <param name="target" type="UnixPath"/>
                    <param name="flags" type="Flags"/>
                </params>
                <scope line="331"/>
                <scope line="333"/>
                <declaration name="done" type="boolean" line="336"/>
                <scope line="337">
                    <scope line="338">
                        <scope line="339"/>
                        <scope line="342"/>
                    </scope>
                    <scope line="347">
                        <scope line="348"/>
                        <scope line="352"/>
                    </scope>
                </scope>
                <scope line="358">
                    <scope line="359">
                        <scope line="360"/>
                        <scope line="360"/>
                    </scope>
                </scope>
            </method>
            <method name="move" type="void" line="368">
                <params>
                    <param name="source" type="UnixPath"/>
                    <param name="target" type="UnixPath"/>
                    <param name="options" type="CopyOption"/>
                </params>
                <comment line="370">
                    permission check                    
                </comment>
                <comment line="377">
                    translate options into flags                    
                </comment>
                <comment line="380">
                    handle atomic rename case                    
                </comment>
                <comment line="396">
                    move using rename or copy+delete                    
                </comment>
                <comment line="400">
                    get attributes of source file (don&apos;t follow links)                    
                </comment>
                <comment line="407">
                    get attributes of target file (don&apos;t follow links)                    
                </comment>
                <comment line="411">
                    ignore                    
                </comment>
                <comment line="415">
                    if the target exists:
                     1. check if source and target are the same file
                     2. throw exception if REPLACE_EXISTING option is not set
                     3. delete target if REPLACE_EXISTING option set                    
                </comment>
                <comment line="421">
                    nothing to do as files are identical                    
                </comment>
                <comment line="427">
                    attempt to delete target                    
                </comment>
                <comment line="435">
                    target is non-empty directory that can&apos;t be replaced.                    
                </comment>
                <comment line="446">
                    first try rename                    
                </comment>
                <comment line="456">
                    copy source to target                    
                </comment>
                <comment line="471">
                    delete source                    
                </comment>
                <comment line="479">
                    file was copied but unable to unlink the source file so attempt
                     to remove the target and throw a reasonable exception                    
                </comment>
                <declaration name="sm" type="SecurityManager" line="370"/>
                <scope line="371"/>
                <declaration name="flags" type="Flags" line="377"/>
                <scope line="380">
                    <scope line="381"/>
                    <scope line="383">
                        <scope line="384"/>
                    </scope>
                </scope>
                <declaration name="sourceAttrs" type="UnixFileAttributes" line="396"/>
                <declaration name="targetAttrs" type="UnixFileAttributes" line="397"/>
                <scope line="400"/>
                <scope line="402"/>
                <scope line="407"/>
                <scope line="409"/>
                <declaration name="targetExists" type="boolean" line="412"/>
                <scope line="418">
                    <scope line="421"/>
                    <scope line="427">
                        <scope line="428"/>
                        <scope line="430"/>
                    </scope>
                    <scope line="433">
                        <scope line="437"/>
                    </scope>
                </scope>
                <scope line="446"/>
                <scope line="449">
                    <scope line="450"/>
                </scope>
                <scope line="456"/>
                <scope line="458">
                    <scope line="459"/>
                    <scope line="461">
                        <scope line="462"/>
                        <scope line="464"/>
                    </scope>
                </scope>
                <scope line="471">
                    <scope line="472"/>
                    <scope line="474"/>
                </scope>
                <scope line="477">
                    <scope line="480">
                        <scope line="481"/>
                        <scope line="483"/>
                    </scope>
                    <scope line="486"/>
                    <scope line="490"/>
                </scope>
            </method>
            <method name="copy" type="void" line="502">
                <params>
                    <param name="source" type="UnixPath"/>
                    <param name="target" type="UnixPath"/>
                    <param name="options" type="CopyOption"/>
                </params>
                <comment line="504">
                    permission checks                    
                </comment>
                <comment line="511">
                    translate options into flags                    
                </comment>
                <comment line="517">
                    get attributes of source file                    
                </comment>
                <comment line="524">
                    if source file is symbolic link then we must check LinkPermission                    
                </comment>
                <comment line="529">
                    get attributes of target file (don&apos;t follow links)                    
                </comment>
                <comment line="533">
                    ignore                    
                </comment>
                <comment line="537">
                    if the target exists:
                     1. check if source and target are the same file
                     2. throw exception if REPLACE_EXISTING option is not set
                     3. try to unlink the target                    
                </comment>
                <comment line="543">
                    nothing to do as files are identical                    
                </comment>
                <comment line="554">
                    target is non-empty directory that can&apos;t be replaced.                    
                </comment>
                <comment line="565">
                    do the copy                    
                </comment>
                <comment line="575">
                    non-interruptible file copy                    
                </comment>
                <comment line="580">
                    interruptible file copy                    
                </comment>
                <declaration name="sm" type="SecurityManager" line="504"/>
                <scope line="505"/>
                <declaration name="flags" type="Flags" line="511"/>
                <declaration name="sourceAttrs" type="UnixFileAttributes" line="513"/>
                <declaration name="targetAttrs" type="UnixFileAttributes" line="514"/>
                <scope line="517"/>
                <scope line="519"/>
                <scope line="524"/>
                <scope line="529"/>
                <scope line="531"/>
                <declaration name="targetExists" type="boolean" line="534"/>
                <scope line="540">
                    <scope line="546">
                        <scope line="547"/>
                        <scope line="549"/>
                    </scope>
                    <scope line="552">
                        <scope line="556"/>
                    </scope>
                </scope>
                <scope line="565"/>
                <scope line="569"/>
                <scope line="573"/>
                <declaration name="attrsToCopy" type="UnixFileAttributes" line="580"/>
                <anonymous_class line="581">
                    <method name="implRun" type="void" line="582"/>
                </anonymous_class>
                <declaration name="copyTask" type="Cancellable" line="581"/>
                <scope line="587"/>
                <scope line="589">
                    <declaration name="t" type="Throwable" line="590"/>
                </scope>
            </method>
            <method name="transfer" type="void" line="599"/>
            <scope line="602">
                <anonymous_class line="603">
                    <method name="run" type="Void" line="605"/>
                </anonymous_class>
            </scope>
        </class>
    </source>