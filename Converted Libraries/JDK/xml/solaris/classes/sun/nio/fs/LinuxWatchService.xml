<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.fs">
        <import package="java.nio.file"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.util"/>
        <import package="java.io.IOException"/>
        <import package="sun.misc.Unsafe"/>
        <import package="sun.nio.fs.UnixNativeDispatcher"/>
        <import package="sun.nio.fs.UnixConstants"/>
        <class name="LinuxWatchService" line="38">
            <extends class="AbstractWatchService"/>
            <comment line="53">
                background thread to read change events                
            </comment>
            <comment line="434">
                -- native methods --                
            </comment>
            <comment line="436">
                sizeof inotify_event                
            </comment>
            <comment line="439">
                offsets of inotify_event                
            </comment>
            <javadoc line="38">
                Linux implementation of WatchService based on inotify.
                  In summary a background thread polls inotify plus a socket used for the wakeup
                  mechanism. Requests to add or remove a watch, or close the watch service,
                  cause the thread to wakeup and process the request. Events are processed
                  by the thread which causes it to signal/queue the corresponding watch keys.                
            </javadoc>
            <declaration name="unsafe" type="Unsafe" line="50"/>
            <declaration name="poller" type="Poller" line="53"/>
            <method name="LinuxWatchService" type="constructor" line="55">
                <params>
                    <param name="fs" type="UnixFileSystem"/>
                </params>
                <comment line="56">
                    initialize inotify                    
                </comment>
                <comment line="64">
                    configure inotify to be non-blocking                    
                </comment>
                <comment line="65">
                    create socketpair used in the close mechanism                    
                </comment>
                <declaration name="ifd" type="int" line="57"/>
                <scope line="58"/>
                <scope line="60"/>
                <declaration name="sp" type="int" line="66"/>
                <scope line="67"/>
                <scope line="71"/>
            </method>
            <method name="register" type="WatchKey" line="85">
                <params>
                    <param name="dir" type="Path"/>
                    <param name="events" type="WatchEvent.Kind<?>[]"/>
                    <param name="modifiers" type="WatchEvent.Modifier"/>
                </params>
                <comment line="86">
                    delegate to poller                    
                </comment>
            </method>
            <method name="implClose" type="void" line="91">
                <comment line="92">
                    delegate to poller                    
                </comment>
            </method>
            <class name="LinuxWatchKey" line="96">
                <extends class="AbstractWatchKey"/>
                <comment line="101">
                    inotify descriptor                    
                </comment>
                <comment line="103">
                    watch descriptor                    
                </comment>
                <comment line="171">
                    sizeof buffer for when polling inotify                    
                </comment>
                <comment line="177">
                    inotify file descriptor                    
                </comment>
                <comment line="179">
                    socketpair used to shutdown polling thread                    
                </comment>
                <comment line="181">
                    maps watch descriptor to Key                    
                </comment>
                <comment line="183">
                    address of read buffer                    
                </comment>
                <comment line="276">
                    cancel single key                    
                </comment>
                <comment line="286">
                    close watch service                    
                </comment>
                <javadoc line="96">
                    WatchKey implementation                    
                </javadoc>
                <declaration name="ifd" type="int" line="101"/>
                <declaration name="wd" type="int" line="103"/>
                <method name="LinuxWatchKey" type="constructor" line="105">
                    <params>
                        <param name="dir" type="UnixPath"/>
                        <param name="watcher" type="LinuxWatchService"/>
                        <param name="ifd" type="int"/>
                        <param name="wd" type="int"/>
                    </params>
                </method>
                <method name="descriptor" type="int" line="111"/>
                <method name="invalidate" type="void" line="115">
                    <params>
                        <param name="remove" type="boolean"/>
                    </params>
                    <comment line="120">
                        ignore                        
                    </comment>
                    <scope line="116">
                        <scope line="117"/>
                        <scope line="119"/>
                    </scope>
                </method>
                <method name="isValid" type="boolean" line="127"/>
                <method name="cancel" type="void" line="132">
                    <comment line="134">
                        delegate to poller                        
                    </comment>
                    <scope line="133"/>
                </method>
            </class>
            <class name="Poller" line="140">
                <extends class="AbstractPoller"/>
                <comment line="101">
                    inotify descriptor                    
                </comment>
                <comment line="103">
                    watch descriptor                    
                </comment>
                <comment line="171">
                    sizeof buffer for when polling inotify                    
                </comment>
                <comment line="177">
                    inotify file descriptor                    
                </comment>
                <comment line="179">
                    socketpair used to shutdown polling thread                    
                </comment>
                <comment line="181">
                    maps watch descriptor to Key                    
                </comment>
                <comment line="183">
                    address of read buffer                    
                </comment>
                <comment line="276">
                    cancel single key                    
                </comment>
                <comment line="286">
                    close watch service                    
                </comment>
                <javadoc line="140">
                    Background thread to read from inotify                    
                </javadoc>
                <declaration name="SIZEOF_INOTIFY_EVENT" type="int" line="144"/>
                <javadoc line="144">
                    struct inotify_event {
                      int          wd;
                      uint32_t     mask;
                      uint32_t     len;
                      char name    __flexarr;  // present if len &gt; 0
                      } act_t;                    
                </javadoc>
                <declaration name="offsets" type="int[]" line="153"/>
                <declaration name="OFFSETOF_WD" type="int" line="154"/>
                <declaration name="OFFSETOF_MASK" type="int" line="155"/>
                <declaration name="OFFSETOF_LEN" type="int" line="156"/>
                <declaration name="OFFSETOF_NAME" type="int" line="157"/>
                <declaration name="IN_MODIFY" type="int" line="159"/>
                <declaration name="IN_ATTRIB" type="int" line="160"/>
                <declaration name="IN_MOVED_FROM" type="int" line="161"/>
                <declaration name="IN_MOVED_TO" type="int" line="162"/>
                <declaration name="IN_CREATE" type="int" line="163"/>
                <declaration name="IN_DELETE" type="int" line="164"/>
                <declaration name="IN_UNMOUNT" type="int" line="166"/>
                <declaration name="IN_Q_OVERFLOW" type="int" line="167"/>
                <declaration name="IN_IGNORED" type="int" line="168"/>
                <declaration name="BUFFER_SIZE" type="int" line="171"/>
                <declaration name="fs" type="UnixFileSystem" line="173"/>
                <declaration name="watcher" type="LinuxWatchService" line="174"/>
                <declaration name="ifd" type="int" line="177"/>
                <declaration name="socketpair" type="int" line="179"/>
                <declaration name="wdToKey" type="Map&lt;Integer,LinuxWatchKey&gt;" line="181"/>
                <declaration name="address" type="long" line="183"/>
                <method name="Poller" type="constructor" line="185">
                    <params>
                        <param name="fs" type="UnixFileSystem"/>
                        <param name="watcher" type="LinuxWatchService"/>
                        <param name="ifd" type="int"/>
                        <param name="sp" type="int[]"/>
                    </params>
                </method>
                <method name="wakeup" type="void" line="195">
                    <comment line="196">
                        write to socketpair to wakeup polling thread                        
                    </comment>
                    <scope line="197"/>
                    <scope line="199"/>
                </method>
                <method name="implRegister" type="Object" line="208">
                    <params>
                        <param name="obj" type="Path"/>
                        <param name="events" type="Set<? extends WatchEvent.Kind<?>>"/>
                        <param name="modifiers" type="WatchEvent.Modifier"/>
                    </params>
                    <comment line="227">
                        no modifiers supported at this time                        
                    </comment>
                    <comment line="233">
                        ignore                        
                    </comment>
                    <comment line="238">
                        check file is directory                        
                    </comment>
                    <comment line="249">
                        register with inotify (replaces existing mask if already registered)                        
                    </comment>
                    <comment line="266">
                        ensure watch descriptor is in map                        
                    </comment>
                    <declaration name="dir" type="UnixPath" line="209"/>
                    <declaration name="mask" type="int" line="211"/>
                    <scope line="212">
                        <scope line="213"/>
                        <scope line="217"/>
                        <scope line="221"/>
                    </scope>
                    <scope line="228">
                        <scope line="229"/>
                    </scope>
                    <declaration name="attrs" type="UnixFileAttributes" line="239"/>
                    <scope line="240"/>
                    <scope line="242"/>
                    <scope line="245"/>
                    <declaration name="wd" type="int" line="250"/>
                    <scope line="251">
                        <declaration name="buffer" type="NativeBuffer" line="252"/>
                        <scope line="254"/>
                        <scope line="256"/>
                    </scope>
                    <scope line="259">
                        <scope line="260"/>
                    </scope>
                    <declaration name="key" type="LinuxWatchKey" line="267"/>
                    <scope line="268"/>
                </method>
                <method name="implCancelKey" type="void" line="277">
                    <params>
                        <param name="obj" type="WatchKey"/>
                    </params>
                    <declaration name="key" type="LinuxWatchKey" line="278"/>
                    <scope line="279"/>
                </method>
                <method name="implCloseAll" type="void" line="287">
                    <comment line="288">
                        invalidate all keys                        
                    </comment>
                    <comment line="294">
                        free resources                        
                    </comment>
                    <scope line="289"/>
                </method>
                <javadoc line="301">
                    Poller main loop                    
                </javadoc>
                <method name="run" type="void" line="305">
                    <comment line="310">
                        wait for close or inotify event                        
                    </comment>
                    <comment line="313">
                        read from inotify                        
                    </comment>
                    <comment line="322">
                        process any pending requests                        
                    </comment>
                    <comment line="335">
                        iterate over buffer to decode events                        
                    </comment>
                    <comment line="343">
                        file name                        
                    </comment>
                    <comment line="348">
                        null-terminated and maybe additional null bytes to                        
                    </comment>
                    <comment line="349">
                        align the next event                        
                    </comment>
                    <comment line="364">
                        process event                        
                    </comment>
                    <scope line="306">
                        <scope line="307">
                            <declaration name="nReady" type="int" line="308"/>
                            <scope line="314"/>
                            <scope line="316"/>
                            <scope line="323">
                                <scope line="324">
                                    <declaration name="shutdown" type="boolean" line="326"/>
                                </scope>
                                <scope line="329"/>
                            </scope>
                            <declaration name="offset" type="int" line="336"/>
                            <scope line="337">
                                <declaration name="event" type="long" line="338"/>
                                <declaration name="wd" type="int" line="339"/>
                                <declaration name="mask" type="int" line="340"/>
                                <declaration name="len" type="int" line="341"/>
                                <declaration name="name" type="UnixPath" line="344"/>
                                <scope line="345">
                                    <declaration name="actual" type="int" line="346"/>
                                    <scope line="350">
                                        <declaration name="last" type="long" line="351"/>
                                    </scope>
                                    <scope line="356">
                                        <declaration name="buf" type="byte[]" line="357"/>
                                    </scope>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="370"/>
                </method>
                <javadoc line="376">
                    map inotify event to WatchEvent.Kind                    
                </javadoc>
                <method name="maskToEventKind" type="WatchEvent.Kind<?>" line="379">
                    <params>
                        <param name="mask" type="int"/>
                    </params>
                </method>
                <javadoc line="395">
                    Process event from inotify                    
                </javadoc>
                <method name="processEvent" type="void" line="398">
                    <params>
                        <param name="wd" type="int"/>
                        <param name="mask" type="int"/>
                        <param name="name" type="UnixPath"/>
                    </params>
                    <comment line="399">
                        overflow - signal all keys                        
                    </comment>
                    <comment line="408">
                        lookup wd to get key                        
                    </comment>
                    <comment line="411">
                        should not happen                        
                    </comment>
                    <comment line="413">
                        file deleted                        
                    </comment>
                    <comment line="421">
                        event for directory itself                        
                    </comment>
                    <comment line="425">
                        map to event and queue to key                        
                    </comment>
                    <scope line="400">
                        <scope line="401"/>
                    </scope>
                    <declaration name="key" type="LinuxWatchKey" line="409"/>
                    <scope line="414"/>
                    <declaration name="kind" type="WatchEvent.Kind&lt;?&gt;" line="426"/>
                    <scope line="427"/>
                </method>
            </class>
            <method name="eventSize" type="int" line="436"/>
            <method name="eventOffsets" type="int[]" line="439"/>
            <method name="inotifyInit" type="int" line="441"/>
            <method name="inotifyAddWatch" type="int" line="443"/>
            <method name="inotifyRmWatch" type="void" line="446"/>
            <method name="configureBlocking" type="void" line="449"/>
            <method name="socketpair" type="void" line="452"/>
            <method name="poll" type="int" line="454"/>
            <scope line="456">
                <anonymous_class line="457">
                    <method name="run" type="Void" line="458"/>
                </anonymous_class>
            </scope>
        </class>
    </source>