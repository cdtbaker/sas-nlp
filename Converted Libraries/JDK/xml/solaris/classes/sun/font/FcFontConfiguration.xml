<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.font">
        <import package="java.awt.Font"/>
        <import package="java.io.File"/>
        <import package="java.io.FileInputStream"/>
        <import package="java.io.FileOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.net.InetAddress"/>
        <import package="java.net.UnknownHostException"/>
        <import package="java.nio.charset.Charset"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Properties"/>
        <import package="java.util.Scanner"/>
        <import package="sun.awt.FontConfiguration"/>
        <import package="sun.awt.FontDescriptor"/>
        <import package="sun.awt.SunToolkit"/>
        <import package="sun.awt.X11FontManager"/>
        <import package="sun.font.CompositeFontDescriptor"/>
        <import package="sun.font.FontManager"/>
        <import package="sun.font.FontConfigManager.FontConfigInfo"/>
        <import package="sun.font.FontConfigManager.FcCompFont"/>
        <import package="sun.font.FontConfigManager.FontConfigFont"/>
        <import package="sun.java2d.SunGraphicsEnvironment"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <class name="FcFontConfiguration" line="52">
            <extends class="FontConfiguration"/>
            <comment line="78">
                                
            </comment>
            <comment line="408">
                We want to be able to use this cache instead of invoking
                 fontconfig except when we can detect the system cache has changed.
                 But there doesn&apos;t seem to be a way to find the location of
                 the system cache.                
            </comment>
            <declaration name="fileVersion" type="String" line="54"/>
            <javadoc line="54">
                Version of the cache file format understood by this code.
                  Its part of the file name so that we can rev this at
                  any time, even in a minor JDK update.
                  It is stored as the value of the &quot;version&quot; property.
                  This is distinct from the version of &quot;libfontconfig&quot; that generated
                  the cached results, and which is the &quot;fcversion&quot; property in the file.{@code FontConfiguration.getVersion()} also returns a version string,
                  and has meant the version of the fontconfiguration.properties file
                  that was read. Since this class doesn&apos;t use such files, then what
                  that really means is whether the methods on this class return
                  values that are compatible with the classes that do directly read
                  from such files. It is a compatible subset of version &quot;1&quot;.                
            </javadoc>
            <declaration name="fcInfoFileName" type="String" line="68"/>
            <declaration name="fcCompFonts" type="FcCompFont[]" line="70"/>
            <method name="FcFontConfiguration" type="constructor" line="72">
                <params>
                    <param name="fm" type="SunFontManager"/>
                </params>
            </method>
            <method name="FcFontConfiguration" type="constructor" line="80">
                <params>
                    <param name="fm" type="SunFontManager"/>
                    <param name="preferLocaleFonts" type="boolean"/>
                    <param name="preferPropFonts" type="boolean"/>
                </params>
            </method>
            <method name="init" type="boolean" line="86">
                <comment line="114">
                    couldn&apos;t load fontconfig.                    
                </comment>
                <comment line="117">
                    NB already in a privileged block from SGE                    
                </comment>
                <scope line="87"/>
                <declaration name="fm" type="X11FontManager" line="93"/>
                <declaration name="fcm" type="FontConfigManager" line="94"/>
                <scope line="95">
                    <scope line="97">
                        <scope line="98"/>
                        <scope line="100">
                            <scope line="101"/>
                        </scope>
                    </scope>
                    <scope line="105"/>
                </scope>
                <scope line="108"/>
                <scope line="112"/>
                <declaration name="javaHome" type="String" line="117"/>
                <scope line="118"/>
                <declaration name="javaLib" type="String" line="121"/>
            </method>
            <method name="getFallbackFamilyName" type="String" line="129">
                <params>
                    <param name="fontName" type="String"/>
                    <param name="defaultFallback" type="String"/>
                </params>
                <comment line="131">
                    maintain compatibility with old font.properties files, which either
                     had aliases for TimesRoman &amp; Co. or defined mappings for them.                    
                </comment>
                <declaration name="compatibilityName" type="String" line="132"/>
                <scope line="133"/>
            </method>
            <method name="getFaceNameFromComponentFontName" type="String" line="141">
                <params>
                    <param name="componentFontName" type="String"/>
                </params>
            </method>
            <method name="getFileNameFromComponentFontName" type="String" line="147">
                <params>
                    <param name="componentFontName" type="String"/>
                </params>
            </method>
            <method name="getFileNameFromPlatformName" type="String" line="152">
                <params>
                    <param name="platformName" type="String"/>
                </params>
                <comment line="154">
                    Platform name is the file name, but rather than returning                    
                </comment>
            </method>
            <method name="getDefaultFontCharset" type="Charset" line="159">
                <params>
                    <param name="fontName" type="String"/>
                </params>
            </method>
            <method name="getEncoding" type="String" line="165">
                <params>
                    <param name="awtFontName" type="String"/>
                    <param name="characterSubsetName" type="String"/>
                </params>
            </method>
            <method name="initReorderMap" type="void" line="170"/>
            <method name="getFontDescriptors" type="FontDescriptor[]" line="175">
                <params>
                    <param name="fontName" type="String"/>
                    <param name="style" type="int"/>
                </params>
            </method>
            <method name="getNumberCoreFonts" type="int" line="180"/>
            <method name="getPlatformFontNames" type="String[]" line="185">
                <declaration name="nameSet" type="HashSet&lt;String&gt;" line="186"/>
                <declaration name="fm" type="X11FontManager" line="187"/>
                <declaration name="fcm" type="FontConfigManager" line="188"/>
                <declaration name="fcCompFonts" type="FcCompFont[]" line="189"/>
                <scope line="190">
                    <scope line="191"/>
                </scope>
            </method>
            <method name="getExtraFontPath" type="String" line="199"/>
            <method name="needToSearchForFile" type="boolean" line="204">
                <params>
                    <param name="fileName" type="String"/>
                </params>
            </method>
            <method name="getFcFontList" type="FontConfigFont[]" line="209">
                <params>
                    <param name="fcFonts" type="FcCompFont[]"/>
                    <param name="fontname" type="String"/>
                    <param name="style" type="int"/>
                </params>
                <scope line="211"/>
                <scope line="213"/>
                <scope line="216">
                    <scope line="218"/>
                </scope>
            </method>
            <method name="get2DCompositeFontInfo" type="CompositeFontDescriptor[]" line="226">
                <comment line="247">
                    fall back fonts listed in the lib/fonts/fallback directory                    
                </comment>
                <declaration name="fm" type="X11FontManager" line="228"/>
                <declaration name="fcm" type="FontConfigManager" line="229"/>
                <declaration name="fcCompFonts" type="FcCompFont[]" line="230"/>
                <declaration name="result" type="CompositeFontDescriptor[]" line="232"/>
                <scope line="235">
                    <declaration name="fontName" type="String" line="236"/>
                    <scope line="238">
                        <declaration name="faceName" type="String" line="240"/>
                        <declaration name="fcFonts" type="FontConfigFont[]" line="241"/>
                        <declaration name="numFonts" type="int" line="245"/>
                        <scope line="247"/>
                        <declaration name="fileNames" type="String[]" line="251"/>
                        <declaration name="index" type="int" line="253"/>
                        <scope line="254"/>
                        <scope line="258"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="276">
                Gets the OS version string from a Linux release-specific file.                
            </javadoc>
            <method name="getVersionString" type="String" line="279">
                <params>
                    <param name="f" type="File"/>
                </params>
                <scope line="280">
                    <declaration name="sc" type="Scanner" line="281"/>
                </scope>
                <scope line="284"/>
            </method>
            <javadoc line="289">
                Sets the OS name and version from environment information.                
            </javadoc>
            <method name="setOsNameAndVersion" type="void" line="293">
                <comment line="304">
                    Ubuntu and (perhaps others) use only lsb-release.
                     Syntax and encoding is compatible with java properties.
                     For Ubuntu the ID is &quot;Ubuntu&quot;.                    
                </comment>
                <scope line="297"/>
                <scope line="300">
                    <declaration name="f" type="File" line="301"/>
                    <scope line="302">
                        <declaration name="props" type="Properties" line="307"/>
                    </scope>
                    <scope line="311"/>
                    <scope line="314"/>
                    <scope line="317"/>
                    <scope line="320"/>
                </scope>
                <scope line="324">
                    <scope line="325"/>
                </scope>
            </method>
            <method name="getFcInfoFile" type="File" line="331">
                <comment line="334">
                    NB need security permissions to get true IP address, and
                     we should have those as the whole initialisation is in a
                     doPrivileged block. But in this case no exception is thrown,
                     and it returns the loop back address, and so we end up with
                     &quot;localhost&quot;                    
                </comment>
                <scope line="332">
                    <declaration name="hostname" type="String" line="338"/>
                    <scope line="339"/>
                    <scope line="341"/>
                    <declaration name="userDir" type="String" line="344"/>
                    <declaration name="version" type="String" line="345"/>
                    <declaration name="fs" type="String" line="346"/>
                    <declaration name="dir" type="String" line="347"/>
                    <declaration name="lang" type="String" line="348"/>
                    <declaration name="name" type="String" line="349"/>
                </scope>
            </method>
            <method name="writeFcInfo" type="void" line="356">
                <comment line="384">
                    This writes into a temp file then renames when done.
                     Since the rename is an atomic action within the same
                     directory no client will ever see a partially written file.                    
                </comment>
                <declaration name="props" type="Properties" line="357"/>
                <declaration name="fm" type="X11FontManager" line="359"/>
                <declaration name="fcm" type="FontConfigManager" line="360"/>
                <declaration name="fcInfo" type="FontConfigInfo" line="361"/>
                <scope line="363">
                    <scope line="364">
                        <scope line="365"/>
                    </scope>
                </scope>
                <scope line="370">
                    <declaration name="fci" type="FcCompFont" line="371"/>
                    <declaration name="styleKey" type="String" line="372"/>
                    <scope line="375"/>
                </scope>
                <scope line="382">
                    <declaration name="fcInfoFile" type="File" line="387"/>
                    <declaration name="dir" type="File" line="388"/>
                    <declaration name="tempFile" type="File" line="390"/>
                    <declaration name="fos" type="FileOutputStream" line="391"/>
                    <declaration name="renamed" type="boolean" line="395"/>
                    <scope line="396"/>
                </scope>
                <scope line="400">
                    <scope line="401"/>
                </scope>
            </method>
            <method name="readFcInfo" type="void" line="412">
                <comment line="436">
                    If there&apos;s a new, different fontconfig installed on the
                     system, we invalidate our fontconfig file.                    
                </comment>
                <comment line="455">
                    If we can locate the fontconfig cache dirs, then compare the
                     time stamp of those with our properties file. If we are out
                     of date then re-generate.                    
                </comment>
                <comment line="460">
                    should never be more than 2 anyway.                    
                </comment>
                <comment line="490">
                    bad file                    
                </comment>
                <comment line="501">
                    bad file                    
                </comment>
                <declaration name="fcFile" type="File" line="413"/>
                <scope line="414"/>
                <declaration name="props" type="Properties" line="417"/>
                <declaration name="fm" type="X11FontManager" line="418"/>
                <declaration name="fcm" type="FontConfigManager" line="419"/>
                <scope line="420">
                    <declaration name="fis" type="FileInputStream" line="421"/>
                </scope>
                <scope line="424">
                    <scope line="425"/>
                </scope>
                <declaration name="version" type="String" line="430"/>
                <scope line="431"/>
                <declaration name="fcVersionStr" type="String" line="437"/>
                <scope line="438">
                    <declaration name="fcVersion" type="int" line="439"/>
                    <scope line="440">
                        <scope line="443"/>
                    </scope>
                    <scope line="446">
                        <scope line="447"/>
                    </scope>
                </scope>
                <declaration name="lastModified" type="long" line="457"/>
                <declaration name="cacheDirIndex" type="int" line="458"/>
                <scope line="459">
                    <declaration name="dir" type="String" line="460"/>
                    <scope line="461"/>
                    <declaration name="dirFile" type="File" line="464"/>
                    <scope line="465"/>
                </scope>
                <declaration name="names" type="String[]" line="471"/>
                <declaration name="fcnames" type="String[]" line="472"/>
                <declaration name="namesLen" type="int" line="473"/>
                <declaration name="numStyles" type="int" line="474"/>
                <declaration name="fci" type="FcCompFont[]" line="475"/>
                <scope line="477">
                    <scope line="478">
                        <scope line="479">
                            <declaration name="index" type="int" line="480"/>
                            <declaration name="key" type="String" line="482"/>
                            <declaration name="lenStr" type="String" line="486"/>
                            <declaration name="nfonts" type="int" line="487"/>
                            <scope line="488"/>
                            <scope line="492">
                                <declaration name="fkey" type="String" line="494"/>
                                <declaration name="family" type="String" line="495"/>
                                <declaration name="file" type="String" line="498"/>
                                <scope line="499"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="509">
                    <scope line="510"/>
                </scope>
            </method>
            <method name="warning" type="void" line="516">
                <params>
                    <param name="msg" type="String"/>
                </params>
                <declaration name="logger" type="PlatformLogger" line="517"/>
            </method>
        </class>
    </source>