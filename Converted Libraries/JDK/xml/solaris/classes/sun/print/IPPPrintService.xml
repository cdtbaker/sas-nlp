<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.print">
        <import package="javax.print.attribute"/>
        <import package="javax.print.attribute.standard"/>
        <import package="javax.print.DocFlavor"/>
        <import package="javax.print.DocPrintJob"/>
        <import package="javax.print.PrintService"/>
        <import package="javax.print.ServiceUIFactory"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Locale"/>
        <import package="java.util.Date"/>
        <import package="java.util.Arrays"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedActionException"/>
        <import package="java.security.PrivilegedExceptionAction"/>
        <import package="javax.print.event.PrintServiceAttributeListener"/>
        <import package="java.net.URI"/>
        <import package="java.net.URISyntaxException"/>
        <import package="java.net.URL"/>
        <import package="java.net.HttpURLConnection"/>
        <import package="java.io.File"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.io.OutputStreamWriter"/>
        <import package="java.io.DataInputStream"/>
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.ByteArrayInputStream"/>
        <import package="java.io.BufferedReader"/>
        <import package="java.io.InputStreamReader"/>
        <import package="java.nio.charset.Charset"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.HashSet"/>
        <class name="IPPPrintService" line="63">
            <comment line="120">
                job attributes group                
            </comment>
            <comment line="122">
                printer attributes group                
            </comment>
            <comment line="124">
                used as the last tag in an IPP message.                
            </comment>
            <comment line="132">
                gets the default printer                
            </comment>
            <comment line="134">
                gets the list of printers                
            </comment>
            <comment line="207">
                Postscript DocFlavors                
            </comment>
            <comment line="214">
                Autosense DocFlavors                
            </comment>
            <comment line="221">
                Text DocFlavors                
            </comment>
            <comment line="249">
                JPG DocFlavors                
            </comment>
            <comment line="256">
                GIF DocFlavors                
            </comment>
            <comment line="263">
                PNG DocFlavors                
            </comment>
            <comment line="270">
                HTML DocFlavors                
            </comment>
            <comment line="303">
                PCL DocFlavors                
            </comment>
            <comment line="310">
                List of all DocFlavors, used in looping                
            </comment>
            <comment line="311">
                through all supported mime-types                
            </comment>
            <comment line="382">
                Initialize mediaSizeNames, mediaTrays and other attributes.
                 Media sizetrays are initialized to non-null values, may be 0-length
                 array.
                 NOTE: Must be called from a synchronized block only.                
            </comment>
            <comment line="774">
                This class is for getting all pre-defined Finishings                
            </comment>
            <comment line="1224">
                Return false if flavor is not null, pageable, nor printable and
                 Destination is part of attributes.                
            </comment>
            <implements interface="PrintService"/>
            <implements interface="SunPrinterJobService"/>
            <declaration name="debugPrint" type="boolean" line="65"/>
            <declaration name="debugPrefix" type="String" line="66"/>
            <method name="debug_println" type="void" line="67">
                <params>
                    <param name="str" type="String"/>
                </params>
                <scope line="68"/>
            </method>
            <declaration name="FORCE_PIPE_PROP" type="String" line="73"/>
            <scope line="75">
                <declaration name="debugStr" type="String" line="76"/>
            </scope>
            <declaration name="printer" type="String" line="83"/>
            <declaration name="myURI" type="URI" line="84"/>
            <declaration name="myURL" type="URL" line="85"/>
            <declaration name="notifier" type="ServiceNotifier" line="86"/>
            <declaration name="MAXCOPIES" type="int" line="88"/>
            <declaration name="MAX_ATTRIBUTE_LENGTH" type="short" line="89"/>
            <declaration name="cps" type="CUPSPrinter" line="91"/>
            <declaration name="urlConnection" type="HttpURLConnection" line="92"/>
            <declaration name="supportedDocFlavors" type="DocFlavor[]" line="93"/>
            <declaration name="supportedCats" type="Class[]" line="94"/>
            <declaration name="mediaTrays" type="MediaTray[]" line="95"/>
            <declaration name="mediaSizeNames" type="MediaSizeName[]" line="96"/>
            <declaration name="customMediaSizeNames" type="CustomMediaSizeName[]" line="97"/>
            <declaration name="defaultMediaIndex" type="int" line="98"/>
            <declaration name="isCupsPrinter" type="boolean" line="99"/>
            <declaration name="init" type="boolean" line="100"/>
            <declaration name="isPS" type="Boolean" line="101"/>
            <declaration name="getAttMap" type="HashMap" line="102"/>
            <declaration name="pngImagesAdded" type="boolean" line="103"/>
            <declaration name="gifImagesAdded" type="boolean" line="104"/>
            <declaration name="jpgImagesAdded" type="boolean" line="105"/>
            <declaration name="STATUSCODE_SUCCESS" type="byte" line="108"/>
            <javadoc line="108">
                IPP Status Codes                
            </javadoc>
            <declaration name="GRPTAG_OP_ATTRIBUTES" type="byte" line="113"/>
            <javadoc line="113">
                IPP Group Tags.  Each tag is used once before the first attribute
                  of that group.                
            </javadoc>
            <declaration name="GRPTAG_JOB_ATTRIBUTES" type="byte" line="120"/>
            <declaration name="GRPTAG_PRINTER_ATTRIBUTES" type="byte" line="122"/>
            <declaration name="GRPTAG_END_ATTRIBUTES" type="byte" line="124"/>
            <declaration name="OP_GET_ATTRIBUTES" type="String" line="126"/>
            <javadoc line="126">
                IPP Operation codes                
            </javadoc>
            <declaration name="OP_CUPS_GET_DEFAULT" type="String" line="132"/>
            <declaration name="OP_CUPS_GET_PRINTERS" type="String" line="134"/>
            <declaration name="printReqAttribDefault" type="Object[]" line="137"/>
            <javadoc line="137">
                List of all PrintRequestAttributes.  This is used
                  for looping through all the IPP attribute name.                
            </javadoc>
            <declaration name="serviceAttributes" type="Object[][]" line="170"/>
            <javadoc line="170">
                List of all PrintServiceAttributes.  This is used
                  for looping through all the IPP attribute name.                
            </javadoc>
            <declaration name="appPDF" type="DocFlavor[]" line="194"/>
            <javadoc line="194">
                List of DocFlavors, grouped based on matching mime-type.
                  NOTE: For any change in the predefined DocFlavors, it must be reflected
                  here also.                
            </javadoc>
            <declaration name="appPostScript" type="DocFlavor[]" line="207"/>
            <declaration name="appOctetStream" type="DocFlavor[]" line="214"/>
            <declaration name="textPlain" type="DocFlavor[]" line="221"/>
            <declaration name="textPlainHost" type="DocFlavor[]" line="242"/>
            <declaration name="imageJPG" type="DocFlavor[]" line="249"/>
            <declaration name="imageGIF" type="DocFlavor[]" line="256"/>
            <declaration name="imagePNG" type="DocFlavor[]" line="263"/>
            <declaration name="textHtml" type="DocFlavor[]" line="270"/>
            <declaration name="textHtmlHost" type="DocFlavor[]" line="295"/>
            <declaration name="appPCL" type="DocFlavor[]" line="303"/>
            <declaration name="allDocFlavors" type="Object[]" line="311"/>
            <method name="IPPPrintService" type="constructor" line="318">
                <params>
                    <param name="name" type="String"/>
                    <param name="url" type="URL"/>
                </params>
                <scope line="319"/>
                <declaration name="host" type="String" line="334"/>
                <scope line="335">
                    <scope line="337"/>
                    <scope line="341"/>
                </scope>
            </method>
            <method name="IPPPrintService" type="constructor" line="348">
                <params>
                    <param name="name" type="String"/>
                    <param name="uriStr" type="String"/>
                    <param name="isCups" type="boolean"/>
                </params>
                <scope line="349"/>
                <scope line="361"/>
                <scope line="364"/>
                <scope line="372"/>
                <scope line="375"/>
            </method>
            <method name="initAttributes" type="void" line="387">
                <comment line="389">
                    init customMediaSizeNames                    
                </comment>
                <comment line="400">
                    get all supported attributes through IPP                    
                </comment>
                <comment line="404">
                    note, it is possible to query media in CUPS using IPP                    
                </comment>
                <comment line="405">
                    right now we always get it from PPD.                    
                </comment>
                <comment line="406">
                    maybe use &quot;&amp;&amp; (usePPD)&quot; later?                    
                </comment>
                <comment line="407">
                    Another reason why we use PPD is because                    
                </comment>
                <comment line="408">
                    IPP currently does not support it but PPD does.                    
                </comment>
                <comment line="424">
                    use IPP to get all media,                    
                </comment>
                <scope line="388">
                    <scope line="392"/>
                    <scope line="403">
                        <scope line="410"/>
                        <scope line="418"/>
                    </scope>
                    <declaration name="allMedia" type="Media[]" line="425"/>
                    <declaration name="sizeList" type="ArrayList" line="426"/>
                    <declaration name="trayList" type="ArrayList" line="427"/>
                    <scope line="428">
                        <scope line="429"/>
                        <scope line="431"/>
                    </scope>
                    <scope line="436"/>
                    <scope line="441"/>
                </scope>
            </method>
            <method name="createPrintJob" type="DocPrintJob" line="453">
                <comment line="458">
                    REMIND: create IPPPrintJob                    
                </comment>
                <declaration name="security" type="SecurityManager" line="454"/>
                <scope line="455"/>
            </method>
            <method name="getSupportedAttributeValues" type="Object" line="467">
                <params>
                    <param name="category" type="Class<? extends Attribute>"/>
                    <param name="flavor" type="DocFlavor"/>
                    <param name="attributes" type="AttributeSet"/>
                </params>
                <comment line="489">
                                        
                </comment>
                <comment line="496">
                                        
                </comment>
                <comment line="626">
                    case when no supported mediasizenames are reported                    
                </comment>
                <comment line="627">
                    check given media against the default                    
                </comment>
                <comment line="630">
                    default printable area is that of default mediasize                    
                </comment>
                <comment line="733">
                    Returning null as this is not yet supported in UnixPrintJob.                    
                </comment>
                <comment line="744">
                    The printer takes care of Sides so if short-edge                    
                </comment>
                <comment line="745">
                    is chosen in a job, the rotation is done by the printer.                    
                </comment>
                <comment line="746">
                    Orientation is rotated by emulation if pageable                    
                </comment>
                <comment line="747">
                    or printable so if the document is in Landscape, this may                    
                </comment>
                <comment line="748">
                    result in double rotation.                    
                </comment>
                <scope line="468"/>
                <scope line="471"/>
                <scope line="475">
                    <scope line="476"/>
                    <scope line="479"/>
                </scope>
                <scope line="485"/>
                <scope line="490"/>
                <scope line="498">
                    <scope line="502">
                        <declaration name="cs" type="CopiesSupported" line="503"/>
                        <declaration name="attribClass" type="AttributeClass" line="504"/>
                        <scope line="506">
                            <declaration name="range" type="int[]" line="507"/>
                        </scope>
                    </scope>
                    <scope line="511"/>
                </scope>
                <scope line="514">
                    <scope line="518">
                        <declaration name="arr" type="Chromaticity[]" line="519"/>
                    </scope>
                    <scope line="522"/>
                </scope>
                <scope line="525">
                    <scope line="528">
                        <scope line="529"/>
                        <scope line="531">
                            <scope line="532"/>
                            <scope line="534"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="540">
                    <declaration name="arr" type="Fidelity[]" line="541"/>
                </scope>
                <scope line="545">
                    <declaration name="attribClass" type="AttributeClass" line="546"/>
                    <scope line="549">
                        <declaration name="finArray" type="int[]" line="550"/>
                        <scope line="551">
                            <declaration name="finSup" type="Finishings[]" line="552"/>
                            <scope line="553">
                                <declaration name="fAll" type="Finishings[]" line="555"/>
                                <scope line="557">
                                    <scope line="558"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="567"/>
                <scope line="569">
                    <declaration name="arr" type="JobSheets" line="570"/>
                </scope>
                <scope line="575">
                    <declaration name="allMedia" type="Media[]" line="576"/>
                    <scope line="579"/>
                    <scope line="583"/>
                    <scope line="587"/>
                </scope>
                <scope line="593">
                    <declaration name="mpas" type="MediaPrintableArea[]" line="594"/>
                    <scope line="595"/>
                    <scope line="599"/>
                    <scope line="605">
                        <declaration name="printableList" type="ArrayList&lt;MediaPrintableArea&gt;" line="606"/>
                        <scope line="609">
                            <scope line="610"/>
                        </scope>
                        <scope line="614"/>
                    </scope>
                    <declaration name="match" type="int" line="621"/>
                    <declaration name="media" type="Media" line="622"/>
                    <scope line="623">
                        <declaration name="msn" type="MediaSizeName" line="624"/>
                        <scope line="629"/>
                        <scope line="634">
                            <scope line="635"/>
                        </scope>
                    </scope>
                    <scope line="641"/>
                    <scope line="643">
                        <declaration name="arr" type="MediaPrintableArea[]" line="644"/>
                    </scope>
                </scope>
                <scope line="648">
                    <declaration name="attribClass" type="AttributeClass" line="649"/>
                    <scope line="651">
                        <declaration name="values" type="int[]" line="652"/>
                        <scope line="653">
                            <declaration name="nUp" type="NumberUp[]" line="654"/>
                            <scope line="655"/>
                        </scope>
                        <scope line="659"/>
                    </scope>
                </scope>
                <scope line="663">
                    <scope line="667"/>
                    <declaration name="revPort" type="boolean" line="671"/>
                    <declaration name="orientSup" type="OrientationRequested[]" line="672"/>
                    <declaration name="attribClass" type="AttributeClass" line="674"/>
                    <scope line="677">
                        <declaration name="orientArray" type="int[]" line="678"/>
                        <scope line="679">
                            <scope line="682"/>
                        </scope>
                    </scope>
                    <scope line="706">
                        <scope line="708">
                            <declaration name="orSup" type="OrientationRequested[]" line="709"/>
                        </scope>
                        <scope line="715">
                            <declaration name="orSup" type="OrientationRequested[]" line="716"/>
                        </scope>
                    </scope>
                    <scope line="722"/>
                </scope>
                <scope line="725">
                    <scope line="728">
                        <declaration name="arr" type="PageRanges[]" line="729"/>
                    </scope>
                    <scope line="732"/>
                </scope>
                <scope line="736">
                    <declaration name="userName" type="String" line="737"/>
                    <scope line="738"/>
                    <scope line="740"/>
                </scope>
                <scope line="743">
                    <declaration name="attribClass" type="AttributeClass" line="749"/>
                    <scope line="752">
                        <declaration name="sidesArray" type="String[]" line="753"/>
                        <scope line="754">
                            <declaration name="sidesSup" type="Sides[]" line="755"/>
                            <scope line="756">
                                <scope line="757"/>
                                <scope line="759"/>
                                <scope line="761"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <class name="ExtFinishing" line="774">
                <extends class="Finishings"/>
                <comment line="118">
                    operation attributes group                    
                </comment>
                <comment line="130">
                    gets the attributes for a printer                    
                </comment>
                <comment line="200">
                    PDF DocFlavors                    
                </comment>
                <method name="ExtFinishing" type="constructor" line="775">
                    <params>
                        <param name="value" type="int"/>
                    </params>
                    <comment line="776">
                        100 to avoid any conflicts with predefined values.                        
                    </comment>
                </method>
                <method name="getAll" type="EnumSyntax[]" line="779">
                    <declaration name="es" type="EnumSyntax[]" line="780"/>
                </method>
            </class>
            <method name="getUnsupportedAttributes" type="AttributeSet" line="787">
                <params>
                    <param name="flavor" type="DocFlavor"/>
                    <param name="attributes" type="AttributeSet"/>
                </params>
                <scope line="788"/>
                <scope line="793"/>
                <declaration name="attr" type="Attribute" line="797"/>
                <declaration name="unsupp" type="AttributeSet" line="798"/>
                <declaration name="attrs" type="Attribute[]" line="799"/>
                <scope line="800">
                    <scope line="801">
                        <scope line="803"/>
                        <scope line="806"/>
                    </scope>
                    <scope line="809"/>
                </scope>
                <scope line="812"/>
                <scope line="814"/>
            </method>
            <method name="getSupportedDocFlavors" type="DocFlavor[]" line="820">
                <comment line="876">
                    Not added? Create new DocFlavors                    
                </comment>
                <comment line="878">
                    make new DocFlavors                    
                </comment>
                <comment line="885">
                    check if we need to add image DocFlavors                    
                </comment>
                <comment line="886">
                    and Pageable/Printable flavors                    
                </comment>
                <comment line="888">
                    Always add Pageable and Printable for CUPS
                    since it uses Filters to convert from Postscript
                    to device printer language.                    
                </comment>
                <scope line="822">
                    <declaration name="len" type="int" line="823"/>
                    <declaration name="copyflavors" type="DocFlavor[]" line="824"/>
                </scope>
                <scope line="831">
                    <declaration name="attribClass" type="AttributeClass" line="833"/>
                    <scope line="835">
                        <declaration name="mimeType" type="String" line="836"/>
                        <declaration name="psSupported" type="boolean" line="837"/>
                        <declaration name="docFlavors" type="String[]" line="838"/>
                        <declaration name="flavors" type="DocFlavor[]" line="839"/>
                        <declaration name="docList" type="HashSet" line="840"/>
                        <declaration name="j" type="int" line="841"/>
                        <declaration name="hostEnc" type="String" line="842"/>
                        <declaration name="addHostEncoding" type="boolean" line="844"/>
                        <scope line="848">
                            <scope line="849">
                                <scope line="853">
                                    <scope line="858"/>
                                    <scope line="861"/>
                                    <scope line="863"/>
                                    <scope line="865"/>
                                    <scope line="867"/>
                                    <scope line="869"/>
                                </scope>
                            </scope>
                            <scope line="877"/>
                        </scope>
                        <scope line="887"/>
                        <declaration name="len" type="int" line="902"/>
                        <declaration name="copyflavors" type="DocFlavor[]" line="903"/>
                    </scope>
                </scope>
            </method>
            <method name="isDocFlavorSupported" type="boolean" line="912">
                <params>
                    <param name="flavor" type="DocFlavor"/>
                </params>
                <scope line="913"/>
                <scope line="916">
                    <scope line="917">
                        <scope line="918"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="927">
                Finds matching CustomMediaSizeName of given media.                
            </javadoc>
            <method name="findCustomMedia" type="CustomMediaSizeName" line="930">
                <params>
                    <param name="media" type="MediaSizeName"/>
                </params>
                <scope line="931"/>
                <scope line="934">
                    <declaration name="custom" type="CustomMediaSizeName" line="935"/>
                    <declaration name="msn" type="MediaSizeName" line="937"/>
                    <scope line="938"/>
                </scope>
            </method>
            <javadoc line="946">
                Returns the matching standard Media using string comparison of names.                
            </javadoc>
            <method name="getIPPMedia" type="Media" line="949">
                <params>
                    <param name="mediaName" type="String"/>
                </params>
                <declaration name="sampleSize" type="CustomMediaSizeName" line="950"/>
                <declaration name="sizes" type="Media[]" line="952"/>
                <scope line="953">
                    <scope line="954"/>
                </scope>
                <declaration name="sampleTray" type="CustomMediaTray" line="958"/>
                <declaration name="trays" type="Media[]" line="959"/>
                <scope line="960">
                    <scope line="961"/>
                </scope>
            </method>
            <method name="getSupportedMedia" type="Media[]" line="968">
                <comment line="982">
                    REMIND: if null, create custom?                    
                </comment>
                <scope line="970">
                    <declaration name="attribClass" type="AttributeClass" line="972"/>
                    <scope line="975">
                        <declaration name="mediaVals" type="String[]" line="976"/>
                        <declaration name="msn" type="Media" line="977"/>
                        <declaration name="mediaNames" type="Media[]" line="978"/>
                        <scope line="980"/>
                    </scope>
                </scope>
            </method>
            <method name="getSupportedAttributeCategories" type="Class[]" line="992">
                <comment line="1012">
                    Some IPP printers like lexc710 do not have list of supported media                    
                </comment>
                <comment line="1013">
                    but CUPS can get the media from PPD, so we still report as                    
                </comment>
                <comment line="1014">
                    supported category.                    
                </comment>
                <comment line="1020">
                    Always add MediaPrintable for cups,                    
                </comment>
                <comment line="1021">
                    because we can get it from PPD.                    
                </comment>
                <comment line="1024">
                    this is already supported in UnixPrintJob                    
                </comment>
                <comment line="1028">
                    With the assumption that  Chromaticity is equivalent to                    
                </comment>
                <comment line="1029">
                    ColorSupported.                    
                </comment>
                <scope line="993"/>
                <declaration name="catList" type="ArrayList" line="999"/>
                <declaration name="cl" type="Class" line="1000"/>
                <scope line="1002">
                    <declaration name="pra" type="PrintRequestAttribute" line="1003"/>
                    <scope line="1006"/>
                </scope>
                <scope line="1015">
                    <scope line="1016"/>
                </scope>
                <scope line="1030"/>
            </method>
            <method name="isAttributeCategorySupported" type="boolean" line="1041">
                <params>
                    <param name="category" type="Class<? extends Attribute>"/>
                </params>
                <comment line="1054">
                    It is safe to assume that Orientation is always supported                    
                </comment>
                <comment line="1055">
                    and even if CUPS or an IPP device reports it as not,                    
                </comment>
                <comment line="1056">
                    our renderer can do portrait, landscape and                    
                </comment>
                <comment line="1057">
                    reverse landscape.                    
                </comment>
                <scope line="1042"/>
                <scope line="1045"/>
                <scope line="1050"/>
                <scope line="1058"/>
                <scope line="1062">
                    <scope line="1063"/>
                </scope>
            </method>
            <method name="getAttribute" type="T" line="1074">
                <params>
                    <param name="category" type="Class<T>"/>
                </params>
                <comment line="1117">
                    Documented: For CUPS this will always be false                    
                </comment>
                <comment line="1120">
                    REMIND: check attribute values                    
                </comment>
                <scope line="1075"/>
                <scope line="1078"/>
                <scope line="1084"/>
                <scope line="1086">
                    <declaration name="qjc" type="QueuedJobCount" line="1087"/>
                    <declaration name="ac" type="AttributeClass" line="1088"/>
                    <scope line="1091"/>
                </scope>
                <scope line="1095">
                    <declaration name="accJob" type="PrinterIsAcceptingJobs" line="1096"/>
                    <declaration name="ac" type="AttributeClass" line="1098"/>
                    <scope line="1101"/>
                </scope>
                <scope line="1105">
                    <declaration name="cs" type="ColorSupported" line="1106"/>
                    <declaration name="ac" type="AttributeClass" line="1107"/>
                    <scope line="1110"/>
                </scope>
                <scope line="1114">
                    <scope line="1116"/>
                    <scope line="1119"/>
                </scope>
                <scope line="1123"/>
            </method>
            <method name="getAttributes" type="PrintServiceAttributeSet" line="1129">
                <comment line="1130">
                    update getAttMap by sending again get-attributes IPP request                    
                </comment>
                <declaration name="attrs" type="HashPrintServiceAttributeSet" line="1134"/>
                <scope line="1137">
                    <declaration name="name" type="String" line="1138"/>
                    <scope line="1139">
                        <declaration name="c" type="Class" line="1140"/>
                        <declaration name="psa" type="PrintServiceAttribute" line="1141"/>
                        <scope line="1142"/>
                    </scope>
                </scope>
            </method>
            <method name="isIPPSupportedImages" type="boolean" line="1150">
                <params>
                    <param name="mimeType" type="String"/>
                </params>
                <scope line="1151"/>
                <scope line="1155"/>
                <scope line="1157"/>
                <scope line="1159"/>
            </method>
            <method name="isSupportedCopies" type="boolean" line="1167">
                <params>
                    <param name="copies" type="Copies"/>
                </params>
                <declaration name="cs" type="CopiesSupported" line="1168"/>
                <declaration name="members" type="int[][]" line="1170"/>
                <declaration name="min" type="int" line="1171"/>
                <scope line="1172"/>
                <scope line="1175"/>
                <declaration name="value" type="int" line="1180"/>
            </method>
            <method name="isAutoSense" type="boolean" line="1184">
                <params>
                    <param name="flavor" type="DocFlavor"/>
                </params>
                <scope line="1187"/>
                <scope line="1190"/>
            </method>
            <method name="isSupportedMediaTray" type="boolean" line="1195">
                <params>
                    <param name="msn" type="MediaTray"/>
                </params>
                <scope line="1198">
                    <scope line="1199">
                        <scope line="1200"/>
                    </scope>
                </scope>
            </method>
            <method name="isSupportedMedia" type="boolean" line="1208">
                <params>
                    <param name="msn" type="MediaSizeName"/>
                </params>
                <scope line="1211"/>
                <scope line="1214">
                    <scope line="1216"/>
                </scope>
            </method>
            <method name="isDestinationSupported" type="boolean" line="1227">
                <params>
                    <param name="flavor" type="DocFlavor"/>
                    <param name="attributes" type="AttributeSet"/>
                </params>
                <scope line="1233"/>
            </method>
            <method name="isAttributeValueSupported" type="boolean" line="1242">
                <params>
                    <param name="attr" type="Attribute"/>
                    <param name="flavor" type="DocFlavor"/>
                    <param name="attributes" type="AttributeSet"/>
                </params>
                <comment line="1259">
                                        
                </comment>
                <comment line="1264">
                                        
                </comment>
                <scope line="1243"/>
                <scope line="1246">
                    <scope line="1247"/>
                    <scope line="1250"/>
                </scope>
                <declaration name="category" type="Class" line="1254"/>
                <scope line="1255"/>
                <scope line="1260"/>
                <scope line="1265">
                    <scope line="1269"/>
                    <scope line="1271"/>
                </scope>
                <scope line="1274"/>
                <scope line="1281">
                    <scope line="1284">
                        <declaration name="uri" type="URI" line="1285"/>
                        <scope line="1287"/>
                    </scope>
                </scope>
                <scope line="1292">
                    <scope line="1293"/>
                    <scope line="1296"/>
                </scope>
                <scope line="1299">
                    <scope line="1302"/>
                </scope>
                <scope line="1305">
                    <scope line="1308"/>
                </scope>
                <scope line="1311">
                    <declaration name="sidesArray" type="Sides[]" line="1312"/>
                    <scope line="1317">
                        <scope line="1318">
                            <scope line="1319"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="1325">
                    <declaration name="orientArray" type="OrientationRequested[]" line="1326"/>
                    <scope line="1332">
                        <scope line="1333">
                            <scope line="1334"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="getDefaultAttributeValue" type="Object" line="1347">
                <params>
                    <param name="category" type="Class<? extends Attribute>"/>
                </params>
                <comment line="1423">
                    REMIND:  get default from PPD. In native _getMedia,                    
                </comment>
                <comment line="1424">
                    move default (ppd_option_t-&gt;defchoice) to index 0.                    
                </comment>
                <comment line="1425">
                    In the meantime, use indexOf because PPD name                    
                </comment>
                <comment line="1426">
                    may be different from the IPP attribute name.                    
                </comment>
                <comment line="1449">
                    initializes value of defaultMediaIndex                    
                </comment>
                <comment line="1470">
                    for CUPS this is always 1                    
                </comment>
                <scope line="1348"/>
                <scope line="1351"/>
                <scope line="1355"/>
                <declaration name="catName" type="String" line="1361"/>
                <scope line="1362">
                    <declaration name="pra" type="PrintRequestAttribute" line="1363"/>
                    <scope line="1365"/>
                </scope>
                <declaration name="attribName" type="String" line="1370"/>
                <declaration name="attribClass" type="AttributeClass" line="1371"/>
                <scope line="1374">
                    <scope line="1375"/>
                    <scope line="1377"/>
                </scope>
                <scope line="1380"/>
                <scope line="1382">
                    <scope line="1383"/>
                    <scope line="1385">
                        <scope line="1386"/>
                        <scope line="1388"/>
                    </scope>
                </scope>
                <scope line="1392"/>
                <scope line="1394"/>
                <scope line="1396"/>
                <scope line="1398">
                    <scope line="1400"/>
                    <scope line="1402"/>
                </scope>
                <scope line="1405">
                    <scope line="1407">
                        <declaration name="defaultCountry" type="String" line="1408"/>
                        <scope line="1412"/>
                        <scope line="1414"/>
                    </scope>
                    <scope line="1419">
                        <declaration name="name" type="String" line="1420"/>
                        <scope line="1421">
                            <scope line="1422">
                                <scope line="1428"/>
                            </scope>
                        </scope>
                        <scope line="1433">
                            <scope line="1434">
                                <scope line="1435"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="1444">
                    <declaration name="mpas" type="MediaPrintableArea[]" line="1445"/>
                    <scope line="1447">
                        <scope line="1448"/>
                    </scope>
                    <scope line="1453">
                        <declaration name="defaultCountry" type="String" line="1454"/>
                        <declaration name="iw" type="float" line="1455"/>
                        <scope line="1459"/>
                        <scope line="1462"/>
                    </scope>
                </scope>
                <scope line="1469"/>
                <scope line="1471">
                    <scope line="1472"/>
                    <scope line="1480"/>
                </scope>
                <scope line="1483">
                    <scope line="1484">
                        <declaration name="range" type="int[]" line="1485"/>
                    </scope>
                    <scope line="1487"/>
                </scope>
                <scope line="1490">
                    <declaration name="userName" type="String" line="1491"/>
                    <scope line="1492"/>
                    <scope line="1494"/>
                </scope>
                <scope line="1497"/>
                <scope line="1499">
                    <scope line="1500">
                        <scope line="1501"/>
                        <scope line="1504"/>
                    </scope>
                </scope>
            </method>
            <method name="getServiceUIFactory" type="ServiceUIFactory" line="1514"/>
            <method name="wakeNotifier" type="void" line="1518">
                <scope line="1519">
                    <scope line="1520"/>
                </scope>
            </method>
            <method name="addPrintServiceAttributeListener" type="void" line="1527">
                <params>
                    <param name="listener" type="PrintServiceAttributeListener"/>
                </params>
                <scope line="1528">
                    <scope line="1529"/>
                    <scope line="1532"/>
                </scope>
            </method>
            <method name="removePrintServiceAttributeListener" type="void" line="1540">
                <params>
                    <param name="listener" type="PrintServiceAttributeListener"/>
                </params>
                <scope line="1541">
                    <scope line="1542"/>
                    <scope line="1546"/>
                </scope>
            </method>
            <method name="getName" type="String" line="1553"/>
            <method name="usesClass" type="boolean" line="1558">
                <params>
                    <param name="c" type="Class"/>
                </params>
            </method>
            <method name="getIPPConnection" type="HttpURLConnection" line="1563">
                <params>
                    <param name="url" type="URL"/>
                </params>
                <declaration name="connection" type="HttpURLConnection" line="1564"/>
                <scope line="1565"/>
                <scope line="1567"/>
                <scope line="1570"/>
            </method>
            <method name="isPostscript" type="boolean" line="1582">
                <comment line="1605">
                    if PPD is not found, this may be a raw printer
                    and in this case it is assumed that it is a                    
                </comment>
                <comment line="1608">
                    do nothing                    
                </comment>
                <scope line="1583">
                    <scope line="1585">
                        <scope line="1586">
                            <declaration name="is" type="InputStream" line="1590"/>
                            <scope line="1591">
                                <declaration name="d" type="BufferedReader" line="1592"/>
                                <declaration name="lineStr" type="String" line="1595"/>
                                <scope line="1596">
                                    <scope line="1597"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="1603"/>
                    </scope>
                </scope>
            </method>
            <method name="opGetAttributes" type="void" line="1616">
                <scope line="1617">
                    <declaration name="attClNoUri" type="AttributeClass" line="1620"/>
                    <declaration name="attCl" type="AttributeClass" line="1624"/>
                    <anonymous_class line="1632">
                        <method name="run" type="Object" line="1633">
                            <scope line="1634"/>
                            <scope line="1636"/>
                        </method>
                    </anonymous_class>
                    <declaration name="os" type="OutputStream" line="1631"/>
                    <scope line="1642"/>
                    <declaration name="success" type="boolean" line="1646"/>
                    <scope line="1649">
                        <declaration name="is" type="InputStream" line="1650"/>
                        <scope line="1651">
                            <declaration name="responseMap" type="HashMap[]" line="1652"/>
                            <scope line="1654"/>
                        </scope>
                        <scope line="1657"/>
                    </scope>
                </scope>
                <scope line="1663"/>
            </method>
            <method name="writeIPPRequest" type="boolean" line="1671">
                <params>
                    <param name="os" type="OutputStream"/>
                    <param name="operCode" type="String"/>
                    <param name="attCl" type="AttributeClass[]"/>
                </params>
                <comment line="1685">
                    version number                    
                </comment>
                <comment line="1686">
                    operation code                    
                </comment>
                <comment line="1688">
                    request ID #1                    
                </comment>
                <comment line="1690">
                    operation-group-tag                    
                </comment>
                <comment line="1699">
                    value tag                    
                </comment>
                <comment line="1702">
                    length                    
                </comment>
                <comment line="1705">
                    check if string range (0x35 -&gt; 0x49)                    
                </comment>
                <comment line="1712">
                    REMIND: need to support other value tags but for CUPS                    
                </comment>
                <comment line="1713">
                    string is all we need.                    
                </comment>
                <declaration name="osw" type="OutputStreamWriter" line="1672"/>
                <scope line="1673"/>
                <scope line="1675"/>
                <declaration name="opCode" type="char[]" line="1680"/>
                <declaration name="bytes" type="char[]" line="1683"/>
                <scope line="1684">
                    <declaration name="valStr" type="String" line="1693"/>
                    <declaration name="lenStr" type="char[]" line="1694"/>
                    <declaration name="ac" type="AttributeClass" line="1696"/>
                    <scope line="1697">
                        <scope line="1707"/>
                    </scope>
                </scope>
                <scope line="1719"/>
            </method>
            <method name="readIPPResponse" type="HashMap[]" line="1727">
                <params>
                    <param name="inputStream" type="InputStream"/>
                </params>
                <comment line="1738">
                    read status and ID                    
                </comment>
                <comment line="1746">
                    assign default value                    
                </comment>
                <comment line="1753">
                    check for group tags                    
                </comment>
                <comment line="1761">
                    make sure counter and attribStr are re-initialized                    
                </comment>
                <comment line="1765">
                    read value tag                    
                </comment>
                <comment line="1769">
                    read name length                    
                </comment>
                <comment line="1772">
                    If current value is not part of previous attribute                    
                </comment>
                <comment line="1773">
                    then close stream and add it to HashMap.                    
                </comment>
                <comment line="1774">
                    It is part of previous attribute if name length=0.                    
                </comment>
                <comment line="1776">
                    last byte is the total # of values                    
                </comment>
                <comment line="1782">
                    if key exists, new HashMap                    
                </comment>
                <comment line="1788">
                    exclude those that are unknown                    
                </comment>
                <comment line="1800">
                    reset counter                    
                </comment>
                <comment line="1802">
                    check if this is new value tag                    
                </comment>
                <comment line="1806">
                    read attribute name                    
                </comment>
                <comment line="1808">
                    read &quot;len&quot; characters                    
                </comment>
                <comment line="1809">
                    make sure it doesn&apos;t exceed the maximum                    
                </comment>
                <comment line="1811">
                    expand as needed                    
                </comment>
                <comment line="1816">
                    read value length                    
                </comment>
                <comment line="1818">
                    write name length                    
                </comment>
                <comment line="1820">
                    read value, make sure it doesn&apos;t exceed the maximum                    
                </comment>
                <comment line="1822">
                    expand as needed                    
                </comment>
                <comment line="1825">
                    write value of &quot;len&quot; length                    
                </comment>
                <comment line="1828">
                    read next byte                    
                </comment>
                <comment line="1837">
                    if key exists in old HashMap, new HashMap                    
                </comment>
                <scope line="1729"/>
                <declaration name="response" type="byte" line="1733"/>
                <scope line="1734">
                    <declaration name="ois" type="DataInputStream" line="1736"/>
                    <scope line="1740">
                        <declaration name="outObj" type="ByteArrayOutputStream" line="1742"/>
                        <declaration name="counter" type="int" line="1743"/>
                        <declaration name="len" type="short" line="1744"/>
                        <declaration name="attribStr" type="String" line="1745"/>
                        <declaration name="valTagByte" type="byte" line="1747"/>
                        <declaration name="respList" type="ArrayList" line="1748"/>
                        <declaration name="responseMap" type="HashMap" line="1749"/>
                        <scope line="1756">
                            <scope line="1768">
                                <scope line="1775">
                                    <declaration name="outArray" type="byte" line="1780"/>
                                    <scope line="1783"/>
                                    <scope line="1789">
                                        <declaration name="ac" type="AttributeClass" line="1790"/>
                                    </scope>
                                </scope>
                                <scope line="1803"/>
                                <scope line="1807">
                                    <scope line="1810"/>
                                </scope>
                                <scope line="1821"/>
                            </scope>
                            <scope line="1832">
                                <scope line="1839"/>
                                <declaration name="outArray" type="byte" line="1844"/>
                                <declaration name="ac" type="AttributeClass" line="1846"/>
                            </scope>
                        </scope>
                        <scope line="1854"/>
                    </scope>
                    <scope line="1859"/>
                </scope>
                <scope line="1867">
                    <scope line="1869"/>
                </scope>
            </method>
            <method name="toString" type="String" line="1877"/>
            <method name="equals" type="boolean" line="1881">
                <params>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <method name="hashCode" type="int" line="1887"/>
        </class>
    </source>