<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.print">
        <import package="java.net.URI"/>
        <import package="java.net.URL"/>
        <import package="java.io.BufferedInputStream"/>
        <import package="java.io.BufferedOutputStream"/>
        <import package="java.io.BufferedReader"/>
        <import package="java.io.BufferedWriter"/>
        <import package="java.io.File"/>
        <import package="java.io.FileOutputStream"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.InputStreamReader"/>
        <import package="java.io.OutputStream"/>
        <import package="java.io.OutputStreamWriter"/>
        <import package="java.io.IOException"/>
        <import package="java.io.Reader"/>
        <import package="java.io.UnsupportedEncodingException"/>
        <import package="java.util.Vector"/>
        <import package="javax.print.CancelablePrintJob"/>
        <import package="javax.print.Doc"/>
        <import package="javax.print.DocFlavor"/>
        <import package="javax.print.DocPrintJob"/>
        <import package="javax.print.PrintService"/>
        <import package="javax.print.PrintException"/>
        <import package="javax.print.event.PrintJobEvent"/>
        <import package="javax.print.event.PrintJobListener"/>
        <import package="javax.print.event.PrintJobAttributeListener"/>
        <import package="javax.print.attribute.Attribute"/>
        <import package="javax.print.attribute.AttributeSet"/>
        <import package="javax.print.attribute.AttributeSetUtilities"/>
        <import package="javax.print.attribute.DocAttributeSet"/>
        <import package="javax.print.attribute.HashPrintJobAttributeSet"/>
        <import package="javax.print.attribute.HashPrintRequestAttributeSet"/>
        <import package="javax.print.attribute.PrintJobAttribute"/>
        <import package="javax.print.attribute.PrintJobAttributeSet"/>
        <import package="javax.print.attribute.PrintRequestAttribute"/>
        <import package="javax.print.attribute.PrintRequestAttributeSet"/>
        <import package="javax.print.attribute.standard.Copies"/>
        <import package="javax.print.attribute.standard.Destination"/>
        <import package="javax.print.attribute.standard.DocumentName"/>
        <import package="javax.print.attribute.standard.Fidelity"/>
        <import package="javax.print.attribute.standard.JobName"/>
        <import package="javax.print.attribute.standard.JobOriginatingUserName"/>
        <import package="javax.print.attribute.standard.JobSheets"/>
        <import package="javax.print.attribute.standard.Media"/>
        <import package="javax.print.attribute.standard.MediaSize"/>
        <import package="javax.print.attribute.standard.MediaSizeName"/>
        <import package="javax.print.attribute.standard.OrientationRequested"/>
        <import package="javax.print.attribute.standard.RequestingUserName"/>
        <import package="javax.print.attribute.standard.NumberUp"/>
        <import package="javax.print.attribute.standard.Sides"/>
        <import package="javax.print.attribute.standard.PrinterIsAcceptingJobs"/>
        <import package="java.awt.print"/>
        <class name="UnixPrintJob" line="85">
            <comment line="101">
                these variables used globally to store reference to the print
                 data retrieved as a stream. On completion these are always closed
                 if non-null.                
            </comment>
            <comment line="108">
                                
            </comment>
            <comment line="165">
                Closes any stream already retrieved for the data.
                 We want to avoid unnecessarily asking the Doc to create a stream only
                 to get a reference in order to close it because the job failed.
                 If the representation class is itself a &quot;stream&quot;, this
                 closes that stream too.                
            </comment>
            <comment line="673">
                There&apos;s some inefficiency here as the job set is created even though
                 it may never be requested.                
            </comment>
            <comment line="924">
                Inner class to run &quot;privileged&quot; to open the printer output stream.                
            </comment>
            <comment line="954">
                Inner class to run &quot;privileged&quot; to invoke the system print command                
            </comment>
            <implements interface="CancelablePrintJob"/>
            <declaration name="debugPrefix" type="String" line="86"/>
            <declaration name="jobListeners" type="Vector" line="88"/>
            <declaration name="attrListeners" type="Vector" line="89"/>
            <declaration name="listenedAttributeSets" type="Vector" line="90"/>
            <declaration name="service" type="PrintService" line="92"/>
            <declaration name="fidelity" type="boolean" line="93"/>
            <declaration name="printing" type="boolean" line="94"/>
            <declaration name="printReturned" type="boolean" line="95"/>
            <declaration name="reqAttrSet" type="PrintRequestAttributeSet" line="96"/>
            <declaration name="jobAttrSet" type="PrintJobAttributeSet" line="97"/>
            <declaration name="job" type="PrinterJob" line="98"/>
            <declaration name="doc" type="Doc" line="99"/>
            <declaration name="instream" type="InputStream" line="104"/>
            <declaration name="reader" type="Reader" line="105"/>
            <declaration name="jobName" type="String" line="108"/>
            <declaration name="copies" type="int" line="109"/>
            <declaration name="mediaName" type="MediaSizeName" line="110"/>
            <declaration name="mediaSize" type="MediaSize" line="111"/>
            <declaration name="customTray" type="CustomMediaTray" line="112"/>
            <declaration name="orient" type="OrientationRequested" line="113"/>
            <declaration name="nUp" type="NumberUp" line="114"/>
            <declaration name="sides" type="Sides" line="115"/>
            <method name="UnixPrintJob" type="constructor" line="117">
                <params>
                    <param name="service" type="PrintService"/>
                </params>
            </method>
            <method name="getPrintService" type="PrintService" line="123"/>
            <method name="getAttributes" type="PrintJobAttributeSet" line="127">
                <comment line="131">
                                        
                </comment>
                <scope line="128">
                    <scope line="129">
                        <declaration name="jobSet" type="PrintJobAttributeSet" line="131"/>
                    </scope>
                    <scope line="133"/>
                </scope>
            </method>
            <method name="addPrintJobListener" type="void" line="139">
                <params>
                    <param name="listener" type="PrintJobListener"/>
                </params>
                <scope line="140">
                    <scope line="141"/>
                    <scope line="144"/>
                </scope>
            </method>
            <method name="removePrintJobListener" type="void" line="151">
                <params>
                    <param name="listener" type="PrintJobListener"/>
                </params>
                <scope line="152">
                    <scope line="153"/>
                    <scope line="157"/>
                </scope>
            </method>
            <method name="closeDataStreams" type="void" line="170">
                <scope line="172"/>
                <declaration name="data" type="Object" line="176"/>
                <scope line="178"/>
                <scope line="180"/>
                <scope line="184">
                    <scope line="185"/>
                    <scope line="187"/>
                    <scope line="188"/>
                </scope>
                <scope line="192">
                    <scope line="193"/>
                    <scope line="195"/>
                    <scope line="196"/>
                </scope>
                <scope line="200">
                    <scope line="201"/>
                    <scope line="203"/>
                </scope>
                <scope line="206">
                    <scope line="207"/>
                    <scope line="209"/>
                </scope>
            </method>
            <method name="notifyEvent" type="void" line="214">
                <params>
                    <param name="reason" type="int"/>
                </params>
                <comment line="217">
                    since this method should always get called, here&apos;s where
                     we will perform the clean up of any data stream supplied.                    
                </comment>
                <scope line="228">
                    <scope line="229">
                        <declaration name="listener" type="PrintJobListener" line="230"/>
                        <declaration name="event" type="PrintJobEvent" line="231"/>
                        <scope line="232"/>
                    </scope>
                </scope>
            </method>
            <method name="addPrintJobAttributeListener" type="void" line="262">
                <params>
                    <param name="listener" type="PrintJobAttributeListener"/>
                    <param name="attributes" type="PrintJobAttributeSet"/>
                </params>
                <scope line="263">
                    <scope line="264"/>
                    <scope line="267"/>
                    <scope line="272"/>
                </scope>
            </method>
            <method name="removePrintJobAttributeListener" type="void" line="280">
                <params>
                    <param name="listener" type="PrintJobAttributeListener"/>
                </params>
                <scope line="281">
                    <scope line="282"/>
                    <declaration name="index" type="int" line="285"/>
                    <scope line="286"/>
                    <scope line="288">
                        <scope line="291"/>
                    </scope>
                </scope>
            </method>
            <method name="print" type="void" line="300">
                <params>
                    <param name="doc" type="Doc"/>
                    <param name="attributes" type="PrintRequestAttributeSet"/>
                </params>
                <comment line="318">
                                        
                </comment>
                <comment line="339">
                    set up mOptions                    
                </comment>
                <comment line="459">
                    This extracts the data from the URL and passes it the content
                     directly to the print service as a file.
                     This is appropriate for the current implementation where lp or
                     lpr is always used to spool the data. We expect to revise the
                     implementation to provide more complete IPP support (ie not just
                     CUPS) and at that time the job will be spooled via IPP
                     and the URL
                     itself should be sent to the IPP print service not the content.                    
                </comment>
                <comment line="513">
                    now spool the print data.                    
                </comment>
                <comment line="521">
                    There are three cases:
                     1) Text data from a Reader, just pass through.
                     2) Text data from an input stream which we must read using the
                        correct encoding
                     3) Raw byte data from an InputStream we don&apos;t interpret as text,
                        just pass through: eg postscript.                    
                </comment>
                <scope line="302">
                    <scope line="303"/>
                    <scope line="305"/>
                </scope>
                <scope line="312"/>
                <declaration name="flavor" type="DocFlavor" line="318"/>
                <declaration name="data" type="Object" line="320"/>
                <scope line="322"/>
                <scope line="324"/>
                <scope line="329"/>
                <scope line="340">
                    <scope line="345">
                        <declaration name="customMedia" type="CustomMediaSizeName" line="346"/>
                        <scope line="348"/>
                    </scope>
                    <scope line="354">
                        <declaration name="choice" type="String" line="355"/>
                        <scope line="356"/>
                    </scope>
                    <scope line="361"/>
                    <scope line="367"/>
                    <scope line="371"/>
                </scope>
                <declaration name="repClassName" type="String" line="378"/>
                <declaration name="val" type="String" line="379"/>
                <declaration name="encoding" type="String" line="380"/>
                <scope line="381"/>
                <scope line="390">
                    <scope line="391">
                        <scope line="393"/>
                        <scope line="399"/>
                    </scope>
                    <scope line="404"/>
                    <scope line="407"/>
                </scope>
                <scope line="413">
                    <scope line="414">
                        <declaration name="url" type="URL" line="415"/>
                        <scope line="418"/>
                        <scope line="420"/>
                    </scope>
                    <scope line="425"/>
                    <scope line="428"/>
                </scope>
                <scope line="434">
                    <scope line="435">
                        <scope line="437"/>
                    </scope>
                    <scope line="441"/>
                </scope>
                <scope line="446">
                    <scope line="447">
                        <scope line="449"/>
                    </scope>
                    <scope line="453"/>
                </scope>
                <scope line="457">
                    <declaration name="url" type="URL" line="468"/>
                    <scope line="469"/>
                    <scope line="471"/>
                </scope>
                <scope line="475">
                    <scope line="476">
                        <scope line="478"/>
                        <scope line="480"/>
                    </scope>
                    <scope line="484"/>
                    <scope line="487"/>
                </scope>
                <scope line="491">
                    <scope line="492">
                        <scope line="494"/>
                        <scope line="496"/>
                    </scope>
                    <scope line="500"/>
                    <scope line="503"/>
                </scope>
                <scope line="507"/>
                <declaration name="po" type="PrinterOpener" line="513"/>
                <scope line="515"/>
                <declaration name="output" type="OutputStream" line="518"/>
                <declaration name="bw" type="BufferedWriter" line="528"/>
                <scope line="529">
                    <declaration name="br" type="BufferedReader" line="530"/>
                    <declaration name="osw" type="OutputStreamWriter" line="531"/>
                    <declaration name="buffer" type="char[]" line="533"/>
                    <declaration name="cread" type="int" line="534"/>
                    <scope line="536">
                        <scope line="537"/>
                    </scope>
                    <scope line="543"/>
                </scope>
                <scope line="548">
                    <scope line="549">
                        <declaration name="isr" type="InputStreamReader" line="551"/>
                        <declaration name="br" type="BufferedReader" line="553"/>
                        <declaration name="osw" type="OutputStreamWriter" line="554"/>
                        <declaration name="buffer" type="char[]" line="556"/>
                        <declaration name="cread" type="int" line="557"/>
                        <scope line="559"/>
                    </scope>
                    <scope line="563"/>
                    <scope line="566">
                        <scope line="567">
                            <scope line="568"/>
                        </scope>
                        <scope line="571"/>
                    </scope>
                </scope>
                <scope line="574">
                    <declaration name="bin" type="BufferedInputStream" line="575"/>
                    <declaration name="bout" type="BufferedOutputStream" line="576"/>
                    <declaration name="buffer" type="byte[]" line="577"/>
                    <declaration name="bread" type="int" line="578"/>
                    <scope line="580">
                        <scope line="581"/>
                    </scope>
                    <scope line="587"/>
                </scope>
                <scope line="594">
                    <declaration name="spooler" type="PrinterSpooler" line="595"/>
                    <scope line="597"/>
                </scope>
                <scope line="602"/>
                <scope line="604"/>
            </method>
            <method name="printableJob" type="void" line="609">
                <params>
                    <param name="printable" type="Printable"/>
                </params>
                <comment line="613">
                    shouldn&apos;t happen                    
                </comment>
                <scope line="610">
                    <scope line="611">
                        <scope line="612"/>
                        <scope line="614"/>
                    </scope>
                    <declaration name="pf" type="PageFormat" line="621"/>
                    <scope line="622">
                        <declaration name="p" type="Paper" line="623"/>
                    </scope>
                    <scope line="630"/>
                    <scope line="632"/>
                </scope>
                <scope line="639"/>
                <scope line="642"/>
            </method>
            <method name="pageableJob" type="void" line="648">
                <params>
                    <param name="pageable" type="Pageable"/>
                </params>
                <comment line="652">
                    shouldn&apos;t happen                    
                </comment>
                <scope line="649">
                    <scope line="650">
                        <scope line="651"/>
                        <scope line="653"/>
                    </scope>
                </scope>
                <scope line="664"/>
                <scope line="667"/>
            </method>
            <method name="initializeAttributeSets" type="void" line="676">
                <params>
                    <param name="doc" type="Doc"/>
                    <param name="reqSet" type="PrintRequestAttributeSet"/>
                </params>
                <comment line="706">
                                        
                </comment>
                <comment line="727">
                    if no job name supplied use doc name (if supplied), if none and                    
                </comment>
                <declaration name="attrs" type="Attribute[]" line="681"/>
                <scope line="682">
                    <scope line="685">
                        <scope line="686"/>
                    </scope>
                </scope>
                <declaration name="docSet" type="DocAttributeSet" line="692"/>
                <scope line="693">
                    <scope line="695">
                        <scope line="696"/>
                        <scope line="699"/>
                    </scope>
                </scope>
                <declaration name="userName" type="String" line="706"/>
                <scope line="707"/>
                <scope line="709"/>
                <scope line="712">
                    <declaration name="ruName" type="RequestingUserName" line="713"/>
                    <scope line="715"/>
                    <scope line="719"/>
                </scope>
                <scope line="722"/>
                <scope line="728">
                    <declaration name="jobName" type="JobName" line="729"/>
                    <scope line="730">
                        <declaration name="docName" type="DocumentName" line="731"/>
                    </scope>
                    <scope line="735">
                        <declaration name="str" type="String" line="736"/>
                        <scope line="737">
                            <declaration name="printData" type="Object" line="738"/>
                            <scope line="739"/>
                        </scope>
                        <scope line="742"/>
                    </scope>
                </scope>
            </method>
            <method name="getAttributeValues" type="void" line="752">
                <params>
                    <param name="flavor" type="DocFlavor"/>
                </params>
                <comment line="791">
                    check write access                    
                </comment>
                <declaration name="attr" type="Attribute" line="753"/>
                <declaration name="category" type="Class" line="754"/>
                <scope line="756"/>
                <scope line="758"/>
                <declaration name="attrs" type="Attribute[]" line="762"/>
                <scope line="763">
                    <scope line="766">
                        <scope line="767"/>
                        <scope line="772"/>
                    </scope>
                    <scope line="778">
                        <declaration name="uri" type="URI" line="779"/>
                        <scope line="780"/>
                        <scope line="783">
                            <scope line="784"/>
                            <scope line="787"/>
                            <declaration name="security" type="SecurityManager" line="791"/>
                            <scope line="792">
                                <scope line="793"/>
                                <scope line="795"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="801">
                        <scope line="802"/>
                    </scope>
                    <scope line="805"/>
                    <scope line="807"/>
                    <scope line="809">
                        <scope line="810">
                            <scope line="814"/>
                        </scope>
                        <scope line="817"/>
                    </scope>
                    <scope line="820"/>
                    <scope line="822"/>
                    <scope line="824"/>
                </scope>
            </method>
            <method name="printExecCmd" type="String[]" line="832">
                <params>
                    <param name="printer" type="String"/>
                    <param name="options" type="String"/>
                    <param name="noJobSheet" type="boolean"/>
                    <param name="banner" type="String"/>
                    <param name="copies" type="int"/>
                    <param name="spoolFile" type="String"/>
                </params>
                <comment line="841">
                    minimum number of print args                    
                </comment>
                <comment line="844">
                    conveniently &quot;lp&quot; is the default destination for both lp and lpr.                    
                </comment>
                <comment line="866">
                    lp uses 1 more arg than lpr (make a copy)                    
                </comment>
                <comment line="869">
                    make a copy of the spool file                    
                </comment>
                <declaration name="PRINTER" type="int" line="833"/>
                <declaration name="OPTIONS" type="int" line="834"/>
                <declaration name="BANNER" type="int" line="835"/>
                <declaration name="COPIES" type="int" line="836"/>
                <declaration name="NOSHEET" type="int" line="837"/>
                <declaration name="pFlags" type="int" line="838"/>
                <declaration name="execCmd" type="String" line="839"/>
                <declaration name="ncomps" type="int" line="840"/>
                <declaration name="n" type="int" line="841"/>
                <scope line="844"/>
                <scope line="848"/>
                <scope line="852"/>
                <scope line="856"/>
                <scope line="860"/>
                <scope line="864">
                    <scope line="869"/>
                    <scope line="872">
                        <declaration name="quoteChar" type="String" line="873"/>
                    </scope>
                    <scope line="876"/>
                    <scope line="879"/>
                    <scope line="882"/>
                </scope>
                <scope line="885">
                    <scope line="888"/>
                    <scope line="891"/>
                    <scope line="894"/>
                    <scope line="897"/>
                    <scope line="900"/>
                </scope>
                <scope line="905">
                    <scope line="907"/>
                </scope>
            </method>
            <declaration name="DESTPRINTER" type="int" line="915"/>
            <declaration name="DESTFILE" type="int" line="916"/>
            <declaration name="mDestType" type="int" line="917"/>
            <declaration name="spoolFile" type="File" line="919"/>
            <declaration name="mDestination" type="String" line="920"/>
            <declaration name="mNoJobSheet" type="boolean" line="921"/>
            <class name="PrinterOpener" line="925">
                <implements interface="java.security.PrivilegedAction"/>
                <declaration name="pex" type="PrintException" line="926"/>
                <declaration name="result" type="OutputStream" line="927"/>
                <method name="run" type="Object" line="929">
                    <comment line="935">
                        Write to a temporary file which will be spooled to
                         the printer then deleted. In the case that the file
                         is not removed for some reason, request that it is
                         removed when the VM exits.                        
                    </comment>
                    <comment line="946">
                        If there is an IOError we subvert it to a PrinterException.                        
                    </comment>
                    <scope line="930">
                        <scope line="931"/>
                        <scope line="933"/>
                    </scope>
                    <scope line="944"/>
                </method>
            </class>
            <class name="PrinterSpooler" line="955">
                <implements interface="java.security.PrivilegedAction"/>
                <declaration name="pex" type="PrintException" line="956"/>
                <method name="run" type="Object" line="958">
                    <comment line="961">
                        Spool to the printer.                        
                    </comment>
                    <comment line="979">
                        REMIND : 2d printing throws PrinterException                        
                    </comment>
                    <scope line="959">
                        <scope line="963"/>
                        <declaration name="fileName" type="String" line="968"/>
                        <declaration name="execCmd" type="String" line="969"/>
                        <declaration name="process" type="Process" line="972"/>
                    </scope>
                    <scope line="976"/>
                    <scope line="980"/>
                    <scope line="983"/>
                </method>
            </class>
            <method name="cancel" type="void" line="990">
                <scope line="991">
                    <scope line="992"/>
                    <scope line="994"/>
                    <scope line="998"/>
                </scope>
            </method>
        </class>
    </source>