<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.print">
        <import package="java.net.URL"/>
        <import package="java.net.HttpURLConnection"/>
        <import package="java.io.OutputStream"/>
        <import package="java.io.InputStream"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.HashMap"/>
        <import package="sun.print.IPPPrintService"/>
        <import package="sun.print.CustomMediaSizeName"/>
        <import package="sun.print.CustomMediaTray"/>
        <import package="javax.print.attribute.standard.Media"/>
        <import package="javax.print.attribute.standard.MediaSizeName"/>
        <import package="javax.print.attribute.standard.MediaSize"/>
        <import package="javax.print.attribute.standard.MediaTray"/>
        <import package="javax.print.attribute.standard.MediaPrintableArea"/>
        <import package="javax.print.attribute.Size2DSyntax"/>
        <import package="javax.print.attribute.Attribute"/>
        <import package="javax.print.attribute.EnumSyntax"/>
        <import package="javax.print.attribute.standard.PrinterName"/>
        <class name="CUPSPrinter" line="48">
            <comment line="57">
                These functions need to be synchronized as
                 CUPS does not support multi-threading.                
            </comment>
            <comment line="61">
                public static boolean useIPPMedia = false; will be used later                
            </comment>
            <declaration name="debugPrefix" type="String" line="49"/>
            <declaration name="PRINTER_DPI" type="double" line="50"/>
            <declaration name="initialized" type="boolean" line="51"/>
            <method name="getCupsServer" type="String" line="52"/>
            <method name="getCupsPort" type="int" line="53"/>
            <method name="canConnect" type="boolean" line="54"/>
            <method name="initIDs" type="boolean" line="55"/>
            <method name="getMedia" type="String[]" line="58"/>
            <method name="getPageSizes" type="float[]" line="59"/>
            <declaration name="cupsMediaPrintables" type="MediaPrintableArea[]" line="62"/>
            <declaration name="cupsMediaSNames" type="MediaSizeName[]" line="63"/>
            <declaration name="cupsCustomMediaSNames" type="CustomMediaSizeName[]" line="64"/>
            <declaration name="cupsMediaTrays" type="MediaTray[]" line="65"/>
            <declaration name="nPageSizes" type="int" line="67"/>
            <declaration name="nTrays" type="int" line="68"/>
            <declaration name="media" type="String[]" line="69"/>
            <declaration name="pageSizes" type="float[]" line="70"/>
            <declaration name="printer" type="String" line="71"/>
            <declaration name="libFound" type="boolean" line="73"/>
            <declaration name="cupsServer" type="String" line="74"/>
            <declaration name="cupsPort" type="int" line="75"/>
            <scope line="77">
                <scope line="82"/>
            </scope>
            <method name="CUPSPrinter" type="constructor" line="89">
                <params>
                    <param name="printerName" type="String"/>
                </params>
                <comment line="103">
                    get page + tray names                    
                </comment>
                <comment line="106">
                    either PPD file is not found or printer is unknown                    
                </comment>
                <comment line="110">
                    get sizes                    
                </comment>
                <scope line="90"/>
                <scope line="99"/>
                <scope line="101">
                    <scope line="104"/>
                    <scope line="111"/>
                </scope>
            </method>
            <javadoc line="121">
                Returns array of MediaSizeNames derived from PPD.                
            </javadoc>
            <method name="getMediaSizeNames" type="MediaSizeName[]" line="124"/>
            <javadoc line="130">
                Returns array of Custom MediaSizeNames derived from PPD.                
            </javadoc>
            <method name="getCustomMediaSizeNames" type="CustomMediaSizeName[]" line="133"/>
            <javadoc line="139">
                Returns array of MediaPrintableArea derived from PPD.                
            </javadoc>
            <method name="getMediaPrintableArea" type="MediaPrintableArea[]" line="142"/>
            <javadoc line="147">
                Returns array of MediaTrays derived from PPD.                
            </javadoc>
            <method name="getMediaTrays" type="MediaTray[]" line="150"/>
            <javadoc line="156">
                Initialize media by translating PPD info to PrintService attributes.                
            </javadoc>
            <method name="initMedia" type="void" line="159">
                <comment line="179">
                    initialize names and printables                    
                </comment>
                <comment line="181">
                    media width and length                    
                </comment>
                <comment line="184">
                    media printable area                    
                </comment>
                <comment line="193">
                    add to list of standard MediaSizeNames                    
                </comment>
                <comment line="195">
                    add custom if no matching standard media                    
                </comment>
                <comment line="198">
                    add this new custom msn to MediaSize array                    
                </comment>
                <comment line="205">
                    add to list of custom MediaSizeName
                     for internal use of IPPPrintService                    
                </comment>
                <comment line="222">
                    initialize trays                    
                </comment>
                <scope line="160"/>
                <scope line="162"/>
                <scope line="166"/>
                <declaration name="msn" type="CustomMediaSizeName" line="174"/>
                <declaration name="mpa" type="MediaPrintableArea" line="175"/>
                <declaration name="length" type="float" line="176"/>
                <scope line="179">
                    <scope line="193">
                        <scope line="198"/>
                    </scope>
                    <scope line="209"/>
                    <scope line="212">
                        <scope line="213"/>
                    </scope>
                </scope>
                <declaration name="mt" type="MediaTray" line="224"/>
                <scope line="225"/>
            </method>
            <javadoc line="233">
                Get CUPS default printer using IPP.                
            </javadoc>
            <method name="getDefaultPrinter" type="String" line="236">
                <scope line="237">
                    <declaration name="url" type="URL" line="238"/>
                    <declaration name="urlConnection" type="HttpURLConnection" line="239"/>
                    <scope line="242">
                        <anonymous_class line="244">
                            <method name="run" type="Object" line="245">
                                <scope line="246"/>
                                <scope line="248"/>
                            </method>
                        </anonymous_class>
                        <declaration name="os" type="OutputStream" line="243"/>
                        <scope line="254"/>
                        <declaration name="attCl" type="AttributeClass" line="258"/>
                        <scope line="268">
                            <declaration name="defaultMap" type="HashMap" line="270"/>
                            <declaration name="is" type="InputStream" line="271"/>
                            <declaration name="responseMap" type="HashMap[]" line="272"/>
                            <scope line="276"/>
                            <scope line="280"/>
                            <declaration name="attribClass" type="AttributeClass" line="286"/>
                            <scope line="289">
                                <declaration name="nameStr" type="String" line="290"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="299"/>
            </method>
            <javadoc line="305">
                Get list of all CUPS printers using IPP.                
            </javadoc>
            <method name="getAllPrinters" type="String[]" line="308">
                <scope line="309">
                    <declaration name="url" type="URL" line="310"/>
                    <declaration name="urlConnection" type="HttpURLConnection" line="312"/>
                    <scope line="315">
                        <anonymous_class line="317">
                            <method name="run" type="Object" line="318">
                                <scope line="319"/>
                                <scope line="321"/>
                            </method>
                        </anonymous_class>
                        <declaration name="os" type="OutputStream" line="316"/>
                        <scope line="327"/>
                        <declaration name="attCl" type="AttributeClass" line="331"/>
                        <scope line="340">
                            <declaration name="is" type="InputStream" line="342"/>
                            <declaration name="responseMap" type="HashMap[]" line="343"/>
                            <scope line="350"/>
                            <declaration name="printerNames" type="ArrayList" line="354"/>
                            <scope line="355">
                                <declaration name="attribClass" type="AttributeClass" line="356"/>
                                <scope line="359">
                                    <declaration name="nameStr" type="String" line="360"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="365"/>
                    </scope>
                </scope>
                <scope line="371"/>
            </method>
            <javadoc line="377">
                Returns CUPS server name.                
            </javadoc>
            <method name="getServer" type="String" line="380"/>
            <javadoc line="384">
                Returns CUPS port number.                
            </javadoc>
            <method name="getPort" type="int" line="387"/>
            <javadoc line="391">
                Detects if CUPS is running.                
            </javadoc>
            <method name="isCupsRunning" type="boolean" line="394">
                <scope line="396"/>
                <scope line="400"/>
            </method>
        </class>
    </source>