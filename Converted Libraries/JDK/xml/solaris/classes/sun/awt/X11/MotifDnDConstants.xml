<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt.dnd.DnDConstants"/>
        <import package="java.nio.ByteOrder"/>
        <import package="java.util.Arrays"/>
        <import package="sun.misc.Unsafe"/>
        <class name="MotifDnDConstants" line="36">
            <comment line="43">
                utility class can not be instantiated                
            </comment>
            <comment line="45">
                Note that offsets in all native structures below do not depend on the                
            </comment>
            <comment line="46">
                architecture.                
            </comment>
            <comment line="65">
                                
            </comment>
            <comment line="71">
                                
            </comment>
            <comment line="75">
                                
            </comment>
            <comment line="81">
                                
            </comment>
            <comment line="89">
                                
            </comment>
            <comment line="100">
                                
            </comment>
            <comment line="106">
                                
            </comment>
            <javadoc line="36">
                Motif DnD protocol global constants and convenience routines.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="MotifDnDConstants" type="constructor" line="43"/>
            <declaration name="unsafe" type="Unsafe" line="46"/>
            <declaration name="XA_MOTIF_ATOM_0" type="XAtom" line="47"/>
            <declaration name="XA_MOTIF_DRAG_WINDOW" type="XAtom" line="48"/>
            <declaration name="XA_MOTIF_DRAG_TARGETS" type="XAtom" line="49"/>
            <declaration name="XA_MOTIF_DRAG_INITIATOR_INFO" type="XAtom" line="50"/>
            <declaration name="XA_MOTIF_DRAG_RECEIVER_INFO" type="XAtom" line="52"/>
            <declaration name="XA_MOTIF_DRAG_AND_DROP_MESSAGE" type="XAtom" line="54"/>
            <declaration name="XA_XmTRANSFER_SUCCESS" type="XAtom" line="56"/>
            <declaration name="XA_XmTRANSFER_FAILURE" type="XAtom" line="58"/>
            <declaration name="MotifDnDSelection" type="XSelection" line="60"/>
            <declaration name="MOTIF_DND_PROTOCOL_VERSION" type="byte" line="62"/>
            <declaration name="MOTIF_PREFER_PREREGISTER_STYLE" type="int" line="65"/>
            <declaration name="MOTIF_PREFER_DYNAMIC_STYLE" type="int" line="66"/>
            <declaration name="MOTIF_DYNAMIC_STYLE" type="int" line="67"/>
            <declaration name="MOTIF_PREFER_RECEIVER_STYLE" type="int" line="68"/>
            <declaration name="MOTIF_INITIATOR_INFO_SIZE" type="int" line="71"/>
            <declaration name="MOTIF_RECEIVER_INFO_SIZE" type="int" line="72"/>
            <declaration name="MOTIF_MESSAGE_REASON_MASK" type="byte" line="75"/>
            <declaration name="MOTIF_MESSAGE_SENDER_MASK" type="byte" line="76"/>
            <declaration name="MOTIF_MESSAGE_FROM_RECEIVER" type="byte" line="77"/>
            <declaration name="MOTIF_MESSAGE_FROM_INITIATOR" type="byte" line="78"/>
            <declaration name="MOTIF_DND_ACTION_MASK" type="int" line="81"/>
            <declaration name="MOTIF_DND_ACTION_SHIFT" type="int" line="82"/>
            <declaration name="MOTIF_DND_STATUS_MASK" type="int" line="83"/>
            <declaration name="MOTIF_DND_STATUS_SHIFT" type="int" line="84"/>
            <declaration name="MOTIF_DND_ACTIONS_MASK" type="int" line="85"/>
            <declaration name="MOTIF_DND_ACTIONS_SHIFT" type="int" line="86"/>
            <declaration name="TOP_LEVEL_ENTER" type="byte" line="89"/>
            <declaration name="TOP_LEVEL_LEAVE" type="byte" line="90"/>
            <declaration name="DRAG_MOTION" type="byte" line="91"/>
            <declaration name="DROP_SITE_ENTER" type="byte" line="92"/>
            <declaration name="DROP_SITE_LEAVE" type="byte" line="93"/>
            <declaration name="DROP_START" type="byte" line="94"/>
            <declaration name="DROP_FINISH" type="byte" line="95"/>
            <declaration name="DRAG_DROP_FINISH" type="byte" line="96"/>
            <declaration name="OPERATION_CHANGED" type="byte" line="97"/>
            <declaration name="MOTIF_DND_NOOP" type="int" line="100"/>
            <declaration name="MOTIF_DND_MOVE" type="int" line="101"/>
            <declaration name="MOTIF_DND_COPY" type="int" line="102"/>
            <declaration name="MOTIF_DND_LINK" type="int" line="103"/>
            <declaration name="MOTIF_NO_DROP_SITE" type="byte" line="106"/>
            <declaration name="MOTIF_INVALID_DROP_SITE" type="byte" line="107"/>
            <declaration name="MOTIF_VALID_DROP_SITE" type="byte" line="108"/>
            <method name="readMotifWindow" type="long" line="110">
                <comment line="131">
                    XID is CARD32.                    
                </comment>
                <declaration name="defaultScreenNumber" type="long" line="111"/>
                <declaration name="defaultRootWindow" type="long" line="112"/>
                <declaration name="motifWindow" type="long" line="115"/>
                <declaration name="wpg" type="WindowPropertyGetter" line="117"/>
                <scope line="122">
                    <declaration name="status" type="int" line="123"/>
                    <scope line="129">
                        <declaration name="data" type="long" line="130"/>
                    </scope>
                </scope>
                <scope line="136"/>
            </method>
            <method name="createMotifWindow" type="long" line="141">
                <declaration name="defaultScreenNumber" type="long" line="144"/>
                <declaration name="defaultRootWindow" type="long" line="146"/>
                <declaration name="motifWindow" type="long" line="149"/>
                <declaration name="displayString" type="long" line="151"/>
                <scope line="153"/>
                <declaration name="newDisplay" type="long" line="157"/>
                <scope line="159"/>
                <scope line="165">
                    <declaration name="xwa" type="XSetWindowAttributes" line="168"/>
                    <scope line="170">
                        <scope line="182"/>
                        <declaration name="data" type="long" line="188"/>
                        <scope line="190">
                            <scope line="204"/>
                        </scope>
                        <scope line="209"/>
                    </scope>
                    <scope line="212"/>
                </scope>
                <scope line="215"/>
            </method>
            <method name="getMotifWindow" type="long" line="221">
                <comment line="222">
                    Note: it is unsafe to cache the motif drag window handle, as another
                     client can change the _MOTIF_DRAG_WINDOW property on the root, the handle
                     becomes out-of-sync and all subsequent drag operations will fail.                    
                </comment>
                <declaration name="motifWindow" type="long" line="227"/>
                <scope line="228"/>
            </method>
            <class name="Swapper" line="234">
                <comment line="236">
                    utility class can not be instantiated                    
                </comment>
                <method name="Swapper" type="constructor" line="236"/>
                <method name="swap" type="short" line="238">
                    <params>
                        <param name="s" type="short"/>
                    </params>
                </method>
                <method name="swap" type="int" line="241">
                    <params>
                        <param name="i" type="int"/>
                    </params>
                </method>
                <method name="getShort" type="short" line="246">
                    <params>
                        <param name="data" type="long"/>
                        <param name="order" type="byte"/>
                    </params>
                    <declaration name="s" type="short" line="247"/>
                    <scope line="248"/>
                    <scope line="250"/>
                </method>
                <method name="getInt" type="int" line="254">
                    <params>
                        <param name="data" type="long"/>
                        <param name="order" type="byte"/>
                    </params>
                    <declaration name="i" type="int" line="255"/>
                    <scope line="256"/>
                    <scope line="258"/>
                </method>
            </class>
            <javadoc line="264">
                DragBSI.h:
                  typedef struct {
                  BYTE          byte_order;
                  BYTE          protocol_version;
                  CARD16        num_target_lists B16;
                  CARD32        heap_offset B32;
                  } xmMotifTargetsPropertyRec;                
            </javadoc>
            <method name="getTargetListTable" type="long[][]" line="275">
                <params>
                    <param name="motifWindow" type="long"/>
                </params>
                <comment line="324">
                    NOTE: cannot use Unsafe.getInt(), since it crashes on                    
                </comment>
                <comment line="325">
                    Solaris/Sparc if the address is not a multiple of 4.                    
                </comment>
                <comment line="338">
                    NOTE: don&apos;t need to swap, since we read it in the proper                    
                </comment>
                <comment line="339">
                    order already.                    
                </comment>
                <declaration name="wpg" type="WindowPropertyGetter" line="277"/>
                <scope line="282">
                    <declaration name="status" type="int" line="283"/>
                    <scope line="287"/>
                    <declaration name="data" type="long" line="292"/>
                    <scope line="294"/>
                    <declaration name="swapNeeded" type="boolean" line="298"/>
                    <declaration name="numTargetLists" type="short" line="300"/>
                    <scope line="302"/>
                    <declaration name="table" type="long[][]" line="306"/>
                    <declaration name="byteOrder" type="ByteOrder" line="307"/>
                    <scope line="308"/>
                    <declaration name="bufptr" type="long" line="313"/>
                    <scope line="314">
                        <declaration name="numTargets" type="short" line="315"/>
                        <scope line="317"/>
                        <scope line="323">
                            <declaration name="target" type="int" line="326"/>
                            <scope line="327">
                                <scope line="328"/>
                            </scope>
                            <scope line="332">
                                <scope line="333"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="345"/>
            </method>
            <method name="putTargetListTable" type="void" line="351">
                <params>
                    <param name="motifWindow" type="long"/>
                    <param name="table" type="long[][]"/>
                </params>
                <comment line="354">
                                        
                </comment>
                <comment line="363">
                    BYTE          byte_order;                    
                </comment>
                <comment line="365">
                    BYTE          protocol_version;                    
                </comment>
                <comment line="367">
                    CARD16        num_target_lists B16;                    
                </comment>
                <comment line="369">
                    CARD32        heap_offset B32;                    
                </comment>
                <comment line="380">
                    NOTE: cannot use Unsafe.putInt(), since it crashes on                    
                </comment>
                <comment line="381">
                    Solaris/Sparc if the address is not a multiple of 4.                    
                </comment>
                <comment line="410">
                    Create a new motif window and retry.                    
                </comment>
                <declaration name="tableSize" type="int" line="354"/>
                <scope line="356"/>
                <declaration name="data" type="long" line="360"/>
                <scope line="362">
                    <declaration name="bufptr" type="long" line="372"/>
                    <scope line="374">
                        <scope line="378">
                            <declaration name="target" type="int" line="379"/>
                            <scope line="382">
                                <scope line="383">
                                    <declaration name="b" type="byte" line="384"/>
                                </scope>
                            </scope>
                            <scope line="387">
                                <scope line="388">
                                    <declaration name="b" type="byte" line="389"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="408">
                        <scope line="424"/>
                    </scope>
                </scope>
                <scope line="428"/>
            </method>
            <method name="getIndexForTargetList" type="int" line="433">
                <params>
                    <param name="formats" type="long[]"/>
                </params>
                <comment line="437">
                    Make a defensive copy.                    
                </comment>
                <comment line="443">
                    NOTE: getMotifWindow() should never be called if the server is                    
                </comment>
                <comment line="444">
                    grabbed. This will lock up the application as it grabs the server                    
                </comment>
                <comment line="445">
                    itself.                    
                </comment>
                <comment line="446">
                    Since we don&apos;t grab the server before getMotifWindow(), another                    
                </comment>
                <comment line="447">
                    client might replace motif window after we read it from the root, but                    
                </comment>
                <comment line="448">
                    before we grab the server.                    
                </comment>
                <comment line="449">
                    We cannot resolve this problem, but we believe that this scenario is                    
                </comment>
                <comment line="450">
                    very unlikely to happen.                    
                </comment>
                <comment line="478">
                    Create a new table.                    
                </comment>
                <comment line="479">
                    The first two entries must always be the same.                    
                </comment>
                <comment line="480">
                    (see DragBS.c)                    
                </comment>
                <comment line="486">
                                        
                </comment>
                <comment line="489">
                                        
                </comment>
                <comment line="494">
                                        
                </comment>
                <scope line="436"/>
                <declaration name="motifWindow" type="long" line="451"/>
                <scope line="455">
                    <declaration name="table" type="long[][]" line="456"/>
                    <scope line="458">
                        <scope line="459">
                            <declaration name="equals" type="boolean" line="460"/>
                            <scope line="461">
                                <scope line="462">
                                    <scope line="463"/>
                                </scope>
                            </scope>
                            <scope line="468"/>
                            <scope line="472"/>
                        </scope>
                    </scope>
                    <scope line="477"/>
                    <declaration name="new_table" type="long[][]" line="487"/>
                    <scope line="490"/>
                </scope>
                <scope line="500"/>
            </method>
            <method name="getTargetListForIndex" type="long[]" line="505">
                <params>
                    <param name="index" type="int"/>
                </params>
                <declaration name="motifWindow" type="long" line="506"/>
                <declaration name="table" type="long[][]" line="507"/>
                <scope line="509"/>
                <scope line="511"/>
            </method>
            <method name="getByteOrderByte" type="byte" line="516">
                <comment line="517">
                    &apos;l&apos; - for little endian, &apos;B&apos; - for big endian.                    
                </comment>
            </method>
            <method name="writeDragInitiatorInfoStruct" type="void" line="522">
                <params>
                    <param name="window" type="long"/>
                    <param name="index" type="int"/>
                </params>
                <comment line="528">
                    BYTE byte_order                    
                </comment>
                <comment line="530">
                    BYTE protocol_version                    
                </comment>
                <comment line="532">
                    CARD16 protocol_version                    
                </comment>
                <comment line="534">
                    CARD32 icc_handle                    
                </comment>
                <declaration name="structData" type="long" line="525"/>
                <scope line="527">
                    <scope line="546"/>
                </scope>
                <scope line="549"/>
            </method>
            <method name="writeDragReceiverInfoStruct" type="void" line="554">
                <params>
                    <param name="window" type="long"/>
                </params>
                <comment line="561">
                                        
                </comment>
                <comment line="562">
                                        
                </comment>
                <comment line="563">
                                        
                </comment>
                <comment line="564">
                                        
                </comment>
                <comment line="565">
                                        
                </comment>
                <comment line="566">
                                        
                </comment>
                <comment line="567">
                                        
                </comment>
                <declaration name="dataSize" type="int" line="557"/>
                <declaration name="data" type="long" line="558"/>
                <scope line="560">
                    <scope line="579"/>
                </scope>
                <scope line="582"/>
            </method>
            <method name="getMotifActionsForJavaActions" type="int" line="587">
                <params>
                    <param name="javaActions" type="int"/>
                </params>
                <declaration name="motifActions" type="int" line="588"/>
                <scope line="590"/>
                <scope line="593"/>
                <scope line="596"/>
            </method>
            <method name="getJavaActionsForMotifActions" type="int" line="603">
                <params>
                    <param name="motifActions" type="int"/>
                </params>
                <declaration name="javaActions" type="int" line="604"/>
                <scope line="606"/>
                <scope line="609"/>
                <scope line="612"/>
            </method>
        </class>
    </source>