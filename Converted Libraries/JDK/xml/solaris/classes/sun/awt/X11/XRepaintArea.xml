<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt.Component"/>
        <import package="java.awt.Graphics"/>
        <import package="sun.awt.RepaintArea"/>
        <import package="java.awt.peer.ComponentPeer"/>
        <class name="XRepaintArea" line="6">
            <extends class="RepaintArea"/>
            <javadoc line="6">
                The &lt;code&gt;RepaintArea&lt;/code&gt; is a geometric construct created for the
                  purpose of holding the geometry of several coalesced paint events.
                  This geometry is accessed synchronously, although it is written such
                  that painting may still be executed asynchronously.                
                <author>
                    Eric Hawkes                    
                </author>
            </javadoc>
            <javadoc line="14">
                Constructs a new &lt;code&gt;XRepaintArea&lt;/code&gt;                
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="XRepaintArea" type="constructor" line="18"/>
            <javadoc line="20">
                Calls &lt;code&gt;Component.update(Graphics)&lt;/code&gt; with given Graphics.                
            </javadoc>
            <method name="updateComponent" type="void" line="23">
                <params>
                    <param name="comp" type="Component"/>
                    <param name="g" type="Graphics"/>
                </params>
                <scope line="24">
                    <declaration name="peer" type="ComponentPeer" line="25"/>
                    <scope line="26"/>
                </scope>
            </method>
            <javadoc line="32">
                Calls &lt;code&gt;Component.paint(Graphics)&lt;/code&gt; with given Graphics.                
            </javadoc>
            <method name="paintComponent" type="void" line="35">
                <params>
                    <param name="comp" type="Component"/>
                    <param name="g" type="Graphics"/>
                </params>
                <scope line="36">
                    <declaration name="peer" type="ComponentPeer" line="37"/>
                    <scope line="38"/>
                </scope>
            </method>
        </class>
    </source>