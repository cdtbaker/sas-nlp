<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt"/>
        <import package="java.awt.peer"/>
        <import package="java.awt.event"/>
        <import package="java.awt.event.ActionEvent"/>
        <import package="java.awt.event.ActionListener"/>
        <import package="java.awt.event.TextEvent"/>
        <import package="javax.swing.text"/>
        <import package="javax.swing.event.DocumentListener"/>
        <import package="javax.swing.event.DocumentEvent"/>
        <import package="javax.swing.plaf.ComponentUI"/>
        <import package="javax.swing.InputMap"/>
        <import package="javax.swing.JPasswordField"/>
        <import package="javax.swing.SwingUtilities"/>
        <import package="javax.swing.TransferHandler"/>
        <import package="java.awt.event.MouseEvent"/>
        <import package="java.awt.event.FocusEvent"/>
        <import package="java.awt.event.KeyEvent"/>
        <import package="javax.swing.plaf.UIResource"/>
        <import package="javax.swing.UIDefaults"/>
        <import package="javax.swing.JTextField"/>
        <import package="javax.swing.JComponent"/>
        <import package="javax.swing.border.Border"/>
        <import package="com.sun.java.swing.plaf.motif"/>
        <import package="java.awt.im.InputMethodRequests"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <import package="sun.awt.CausedFocusEvent"/>
        <import package="sun.awt.AWTAccessor"/>
        <class name="XTextFieldPeer" line="60">
            <extends class="XComponentPeer"/>
            <comment line="358">
                NOTE: This method is called by privileged threads.                
            </comment>
            <comment line="359">
                DO NOT INVOKE CLIENT CODE ON THIS THREAD!                
            </comment>
            <comment line="460">
                                
            </comment>
            <comment line="461">
                Accessibility support                
            </comment>
            <comment line="462">
                                
            </comment>
            <comment line="464">
                stub functions: to be fully implemented in a future release                
            </comment>
            <comment line="470">
                To be fully implemented in a future release
                
                int oldSelectionStart;
                int oldSelectionEnd;
                
                public native int getIndexAtPoint(int x, int y);
                public native Rectangle getCharacterBounds(int i);
                public native long filterEvents(long mask);
                
                
                 Handle a change in the text selection endpoints
                 (Note: could be simply a change in the caret location)
                
                public void selectionValuesChanged(int start, int end) {
                return;   Need to write implemetation of this.
                }                
            </comment>
            <implements interface="TextFieldPeer"/>
            <declaration name="log" type="PlatformLogger" line="61"/>
            <declaration name="text" type="String" line="63"/>
            <declaration name="xtext" type="XAWTTextField" line="64"/>
            <declaration name="firstChangeSkipped" type="boolean" line="66"/>
            <method name="XTextFieldPeer" type="constructor" line="68">
                <params>
                    <param name="target" type="TextField"/>
                </params>
                <comment line="94">
                    Fix for 5100200                    
                </comment>
                <comment line="95">
                    Restoring Motif behaviour                    
                </comment>
                <comment line="96">
                    Since the end position of the selected text can be greater then the length of the text,                    
                </comment>
                <comment line="97">
                    so we should set caret to max position of the text                    
                </comment>
                <comment line="103">
                    After this line we should not change the component&apos;s text                    
                </comment>
                <declaration name="start" type="int" line="70"/>
                <declaration name="txt" type="TextField" line="80"/>
                <scope line="83"/>
                <scope line="91"/>
                <declaration name="caretPosition" type="int" line="98"/>
            </method>
            <method name="dispose" type="void" line="107"/>
            <method name="initTextField" type="void" line="113">
                <comment line="133">
                    This is a way to set the background color of the TextArea                    
                </comment>
                <comment line="134">
                    without calling setBackground - go through accessor                    
                </comment>
                <declaration name="compAccessor" type="AWTAccessor.ComponentAccessor" line="118"/>
                <scope line="126"/>
                <scope line="132"/>
                <scope line="137"/>
            </method>
            <javadoc line="145">
                @see java.awt.peer.TextComponentPeer                
            </javadoc>
            <method name="setEditable" type="void" line="148">
                <params>
                    <param name="editable" type="boolean"/>
                </params>
                <scope line="149"/>
            </method>
            <javadoc line="155">
                @see java.awt.peer.ComponentPeer                
            </javadoc>
            <method name="setEnabled" type="void" line="158">
                <params>
                    <param name="enabled" type="boolean"/>
                </params>
                <scope line="160"/>
            </method>
            <javadoc line="166">
                @see java.awt.peer.TextComponentPeer                
            </javadoc>
            <method name="getInputMethodRequests" type="InputMethodRequests" line="170"/>
            <method name="handleJavaInputMethodEvent" type="void" line="176">
                <params>
                    <param name="e" type="InputMethodEvent"/>
                </params>
            </method>
            <javadoc line="182">
                @see java.awt.peer.TextFieldPeer                
            </javadoc>
            <method name="setEchoChar" type="void" line="185">
                <params>
                    <param name="c" type="char"/>
                </params>
                <scope line="186"/>
            </method>
            <javadoc line="193">
                @see java.awt.peer.TextComponentPeer                
            </javadoc>
            <method name="getSelectionStart" type="int" line="196"/>
            <javadoc line="200">
                @see java.awt.peer.TextComponentPeer                
            </javadoc>
            <method name="getSelectionEnd" type="int" line="203"/>
            <javadoc line="207">
                @see java.awt.peer.TextComponentPeer                
            </javadoc>
            <method name="getText" type="String" line="210"/>
            <javadoc line="214">
                @see java.awt.peer.TextComponentPeer                
            </javadoc>
            <method name="setText" type="void" line="217">
                <params>
                    <param name="txt" type="String"/>
                </params>
            </method>
            <method name="setXAWTTextField" type="boolean" line="222">
                <params>
                    <param name="txt" type="String"/>
                </params>
                <comment line="225">
                    JTextField.setText() posts two different events (remove &amp; insert).                    
                </comment>
                <comment line="226">
                    Since we make no differences between text events,                    
                </comment>
                <comment line="227">
                    the document listener has to be disabled while                    
                </comment>
                <comment line="228">
                    JTextField.setText() is called.                    
                </comment>
                <scope line="224">
                    <scope line="231"/>
                </scope>
            </method>
            <javadoc line="240">
                to be implemented.                
                <see>
                    java.awt.peer.TextComponentPeer                    
                </see>
            </javadoc>
            <method name="setCaretPosition" type="void" line="244">
                <params>
                    <param name="position" type="int"/>
                </params>
            </method>
            <javadoc line="248">
                DEPRECATED                
                <see>
                    java.awt.peer.TextFieldPeer                    
                </see>
            </javadoc>
            <method name="setEchoCharacter" type="void" line="252">
                <params>
                    <param name="c" type="char"/>
                </params>
            </method>
            <method name="repaintText" type="void" line="256"/>
            <method name="setBackground" type="void" line="260">
                <params>
                    <param name="c" type="Color"/>
                </params>
                <scope line="263"/>
            </method>
            <method name="setForeground" type="void" line="270">
                <params>
                    <param name="c" type="Color"/>
                </params>
                <scope line="272"/>
            </method>
            <method name="setFont" type="void" line="280">
                <params>
                    <param name="f" type="Font"/>
                </params>
                <scope line="281">
                    <scope line="283"/>
                </scope>
            </method>
            <javadoc line="290">
                DEPRECATED                
                <see>
                    java.awt.peer.TextFieldPeer                    
                </see>
            </javadoc>
            <method name="preferredSize" type="Dimension" line="294">
                <params>
                    <param name="cols" type="int"/>
                </params>
            </method>
            <javadoc line="298">
                Deselects the the highlighted text.                
            </javadoc>
            <method name="deselect" type="void" line="301">
                <declaration name="selStart" type="int" line="302"/>
                <declaration name="selEnd" type="int" line="303"/>
                <scope line="304"/>
            </method>
            <javadoc line="310">
                to be implemented.                
                <see>
                    java.awt.peer.TextComponentPeer                    
                </see>
            </javadoc>
            <method name="getCaretPosition" type="int" line="314"/>
            <javadoc line="320">
                @see java.awt.peer.TextComponentPeer                
            </javadoc>
            <method name="select" type="void" line="323">
                <params>
                    <param name="s" type="int"/>
                    <param name="e" type="int"/>
                </params>
                <comment line="325">
                    Fixed 5100806                    
                </comment>
                <comment line="326">
                    We must take care that Swing components repainted correctly                    
                </comment>
            </method>
            <method name="getMinimumSize" type="Dimension" line="331"/>
            <method name="getPreferredSize" type="Dimension" line="335"/>
            <method name="getPreferredSize" type="Dimension" line="339">
                <params>
                    <param name="cols" type="int"/>
                </params>
            </method>
            <declaration name="PADDING" type="int" line="343"/>
            <method name="getMinimumSize" type="Dimension" line="345">
                <params>
                    <param name="cols" type="int"/>
                </params>
                <declaration name="f" type="Font" line="346"/>
                <declaration name="fm" type="FontMetrics" line="347"/>
            </method>
            <method name="isFocusable" type="boolean" line="353"/>
            <method name="action" type="void" line="359">
                <params>
                    <param name="when" type="long"/>
                    <param name="modifiers" type="int"/>
                </params>
            </method>
            <method name="disposeImpl" type="void" line="366"/>
            <method name="repaint" type="void" line="370"/>
            <method name="paint" type="void" line="374">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
            </method>
            <method name="print" type="void" line="379">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <scope line="380"/>
            </method>
            <method name="focusLost" type="void" line="385">
                <params>
                    <param name="e" type="FocusEvent"/>
                </params>
            </method>
            <method name="focusGained" type="void" line="390">
                <params>
                    <param name="e" type="FocusEvent"/>
                </params>
            </method>
            <method name="handleJavaKeyEvent" type="void" line="395">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
            </method>
            <method name="handleJavaMouseEvent" type="void" line="400">
                <params>
                    <param name="mouseEvent" type="MouseEvent"/>
                </params>
                <scope line="402">
                    <declaration name="id" type="int" line="404"/>
                </scope>
            </method>
            <javadoc line="413">
                DEPRECATED                
            </javadoc>
            <method name="minimumSize" type="Dimension" line="416"/>
            <javadoc line="420">
                DEPRECATED                
            </javadoc>
            <method name="minimumSize" type="Dimension" line="423">
                <params>
                    <param name="cols" type="int"/>
                </params>
            </method>
            <method name="setVisible" type="void" line="427">
                <params>
                    <param name="b" type="boolean"/>
                </params>
            </method>
            <method name="setBounds" type="void" line="432">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="op" type="int"/>
                </params>
                <comment line="435">
                    Fixed 6277332, 6198290:
                     the coordinates is coming (to peer): relatively to closest HW parent
                     the coordinates is setting (to textField): relatively to closest ANY parent
                     the parent of peer is target.getParent()
                     the parent of textField is the same
                     see 6277332, 6198290 for more information                    
                </comment>
                <comment line="446">
                    we up to heavyweight parent in order to be sure                    
                </comment>
                <comment line="447">
                    that the coordinates of the text pane is relatively to closest parent                    
                </comment>
                <scope line="434">
                    <declaration name="childX" type="int" line="443"/>
                    <declaration name="childY" type="int" line="444"/>
                    <declaration name="parent" type="Component" line="445"/>
                    <scope line="448"/>
                </scope>
            </method>
            <method name="getIndexAtPoint" type="int" line="464">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
            </method>
            <method name="getCharacterBounds" type="Rectangle" line="465">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="filterEvents" type="long" line="466">
                <params>
                    <param name="mask" type="long"/>
                </params>
            </method>
            <class name="AWTTextFieldUI" line="488">
                <extends class="MotifPasswordFieldUI"/>
                <comment line="598">
                    Fix for 5100950: textarea.getSelectedText() returns the de-selected text, on XToolkit                    
                </comment>
                <comment line="599">
                    Restoring Motif behaviour                    
                </comment>
                <comment line="600">
                    If the text is unhighlighted then we should sets the selection range to zero                    
                </comment>
                <comment line="716">
                    Fix for 4915454 - override the default implementation to avoid                    
                </comment>
                <comment line="717">
                    loading SystemFlavorMap and associated classes.                    
                </comment>
                <declaration name="jtf" type="JTextField" line="490"/>
                <javadoc line="490">
                    Creates a UI for a JTextField.                    
                    <param>
                        c the text field                        
                    </param>
                    <return>
                        the UI                        
                    </return>
                </javadoc>
                <method name="getPropertyPrefix" type="String" line="499">
                    <declaration name="comp" type="JTextComponent" line="500"/>
                    <scope line="501"/>
                    <scope line="503"/>
                </method>
                <method name="installUI" type="void" line="508">
                    <params>
                        <param name="c" type="JComponent"/>
                    </params>
                    <declaration name="editor" type="JTextField" line="513"/>
                    <declaration name="uidefaults" type="UIDefaults" line="515"/>
                    <declaration name="prefix" type="String" line="517"/>
                    <declaration name="f" type="Font" line="518"/>
                    <scope line="519"/>
                    <declaration name="bg" type="Color" line="523"/>
                    <scope line="524"/>
                    <declaration name="fg" type="Color" line="528"/>
                    <scope line="529"/>
                    <declaration name="color" type="Color" line="533"/>
                    <scope line="534"/>
                    <declaration name="s" type="Color" line="538"/>
                    <scope line="539"/>
                    <declaration name="sfg" type="Color" line="543"/>
                    <scope line="544"/>
                    <declaration name="dfg" type="Color" line="548"/>
                    <scope line="549"/>
                    <declaration name="b" type="Border" line="553"/>
                    <scope line="554"/>
                    <declaration name="margin" type="Insets" line="558"/>
                    <scope line="559"/>
                </method>
                <method name="installKeyboardActions" type="void" line="564">
                    <declaration name="comp" type="JTextComponent" line="567"/>
                    <declaration name="uidefaults" type="UIDefaults" line="569"/>
                    <declaration name="prefix" type="String" line="571"/>
                    <declaration name="map" type="InputMap" line="573"/>
                    <scope line="575"/>
                </method>
                <method name="createCaret" type="Caret" line="581"/>
            </class>
            <class name="XAWTCaret" line="586">
                <extends class="DefaultCaret"/>
                <comment line="598">
                    Fix for 5100950: textarea.getSelectedText() returns the de-selected text, on XToolkit                    
                </comment>
                <comment line="599">
                    Restoring Motif behaviour                    
                </comment>
                <comment line="600">
                    If the text is unhighlighted then we should sets the selection range to zero                    
                </comment>
                <comment line="716">
                    Fix for 4915454 - override the default implementation to avoid                    
                </comment>
                <comment line="717">
                    loading SystemFlavorMap and associated classes.                    
                </comment>
                <method name="focusGained" type="void" line="587">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                </method>
                <method name="focusLost" type="void" line="592">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                </method>
                <method name="setSelectionVisible" type="void" line="600">
                    <params>
                        <param name="vis" type="boolean"/>
                    </params>
                    <comment line="604">
                        In order to de-select the selection                        
                    </comment>
                    <scope line="601"/>
                    <scope line="603"/>
                </method>
            </class>
            <class name="XAWTTextField" line="610">
                <extends class="JPasswordField"/>
                <comment line="598">
                    Fix for 5100950: textarea.getSelectedText() returns the de-selected text, on XToolkit                    
                </comment>
                <comment line="599">
                    Restoring Motif behaviour                    
                </comment>
                <comment line="600">
                    If the text is unhighlighted then we should sets the selection range to zero                    
                </comment>
                <comment line="716">
                    Fix for 4915454 - override the default implementation to avoid                    
                </comment>
                <comment line="717">
                    loading SystemFlavorMap and associated classes.                    
                </comment>
                <implements interface="ActionListener"/>
                <implements interface="DocumentListener"/>
                <declaration name="isFocused" type="boolean" line="615"/>
                <declaration name="peer" type="XComponentPeer" line="617"/>
                <method name="XAWTTextField" type="constructor" line="619">
                    <params>
                        <param name="text" type="String"/>
                        <param name="peer" type="XComponentPeer"/>
                        <param name="parent" type="Container"/>
                    </params>
                </method>
                <method name="actionPerformed" type="void" line="634">
                    <params>
                        <param name="actionEvent" type="ActionEvent"/>
                    </params>
                </method>
                <method name="insertUpdate" type="void" line="643">
                    <params>
                        <param name="e" type="DocumentEvent"/>
                    </params>
                    <scope line="644"/>
                </method>
                <method name="removeUpdate" type="void" line="650">
                    <params>
                        <param name="e" type="DocumentEvent"/>
                    </params>
                    <scope line="651"/>
                </method>
                <method name="changedUpdate" type="void" line="657">
                    <params>
                        <param name="e" type="DocumentEvent"/>
                    </params>
                    <scope line="658"/>
                </method>
                <method name="getPeer" type="ComponentPeer" line="664"/>
                <method name="repaintNow" type="void" line="669"/>
                <method name="getGraphics" type="Graphics" line="673"/>
                <method name="updateUI" type="void" line="677">
                    <declaration name="ui" type="ComponentUI" line="678"/>
                </method>
                <method name="forwardFocusGained" type="void" line="683">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                    <declaration name="fe" type="FocusEvent" line="685"/>
                </method>
                <method name="forwardFocusLost" type="void" line="691">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                    <declaration name="fe" type="FocusEvent" line="693"/>
                </method>
                <method name="hasFocus" type="boolean" line="698"/>
                <method name="processInputMethodEventImpl" type="void" line="703">
                    <params>
                        <param name="e" type="InputMethodEvent"/>
                    </params>
                </method>
                <method name="processMouseEventImpl" type="void" line="707">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="processMouseMotionEventImpl" type="void" line="711">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="setTransferHandler" type="void" line="717">
                    <params>
                        <param name="newHandler" type="TransferHandler"/>
                    </params>
                    <declaration name="oldHandler" type="TransferHandler" line="718"/>
                </method>
                <method name="setEchoChar" type="void" line="726">
                    <params>
                        <param name="c" type="char"/>
                    </params>
                </method>
            </class>
        </class>
    </source>