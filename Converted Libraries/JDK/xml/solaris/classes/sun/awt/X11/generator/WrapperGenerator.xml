<?xml version="1.0" encoding="UTF-8"?>
    <source package="">
        <import package="java.util"/>
        <import package="java.io"/>
        <import package="java.nio.charset"/>
        <import package="java.text.MessageFormat"/>
        <import package="java.util.logging.Level"/>
        <import package="java.util.logging.Logger"/>
        <class name="WrapperGenerator" line="33">
            <comment line="35">
                XLibParser converts Xlib.h to a Java Object that encapsulates the                
            </comment>
            <comment line="37">
                Charset and decoder for ISO-8859-15                
            </comment>
            <declaration name="log" type="Logger" line="37"/>
            <declaration name="generateLog" type="boolean" line="38"/>
            <declaration name="wide" type="boolean" line="39"/>
            <declaration name="charset" type="Charset" line="40"/>
            <declaration name="package_name" type="String" line="42"/>
            <declaration name="package_path" type="String" line="43"/>
            <declaration name="sizerFileName" type="String" line="44"/>
            <declaration name="defaultBaseClass" type="String" line="45"/>
            <declaration name="compile_options" type="String" line="47"/>
            <declaration name="symbolTable" type="Hashtable" line="48"/>
            <declaration name="sizeTable32bit" type="Hashtable" line="49"/>
            <declaration name="sizeTable64bit" type="Hashtable" line="50"/>
            <declaration name="knownSizes32" type="Hashtable" line="51"/>
            <declaration name="knownSizes64" type="Hashtable" line="52"/>
            <scope line="53"/>
            <class name="BaseType" line="69">
                <declaration name="real_type" type="String" line="71"/>
                <declaration name="name" type="String" line="72"/>
                <method name="getName" type="String" line="75"/>
                <method name="getRealType" type="String" line="78"/>
                <method name="toString" type="String" line="82"/>
            </class>
            <class name="AtomicType" line="87">
                <extends class="BaseType"/>
                <declaration name="alias" type="boolean" line="89"/>
                <declaration name="aliasName" type="String" line="90"/>
                <declaration name="TYPE_INT" type="int" line="92"/>
                <declaration name="TYPE_CHAR" type="int" line="93"/>
                <declaration name="TYPE_LONG" type="int" line="94"/>
                <declaration name="TYPE_LONG_LONG" type="int" line="95"/>
                <declaration name="TYPE_DOUBLE" type="int" line="96"/>
                <declaration name="TYPE_FLOAT" type="int" line="97"/>
                <declaration name="TYPE_PTR" type="int" line="98"/>
                <declaration name="TYPE_SHORT" type="int" line="99"/>
                <declaration name="TYPE_BOOL" type="int" line="100"/>
                <declaration name="TYPE_STRUCT" type="int" line="101"/>
                <declaration name="TYPE_ARRAY" type="int" line="102"/>
                <declaration name="TYPE_BYTE" type="int" line="103"/>
                <declaration name="TYPE_ATOM" type="int" line="104"/>
                <declaration name="TYPE_ULONG" type="int" line="105"/>
                <method name="getTypeForString" type="int" line="106">
                    <params>
                        <param name="str" type="String"/>
                    </params>
                    <declaration name="type" type="int" line="107"/>
                </method>
                <method name="getJavaType" type="String" line="140">
                    <scope line="141">
                        <scope line="142"/>
                        <scope line="144"/>
                    </scope>
                    <scope line="147"/>
                </method>
                <method name="getJavaTypeForType" type="String" line="151">
                    <params>
                        <param name="type" type="int"/>
                    </params>
                </method>
                <method name="getItemSize" type="String" line="178">
                    <scope line="179">
                        <scope line="180"/>
                        <scope line="182"/>
                    </scope>
                    <scope line="185">
                        <declaration name="i32" type="int" line="186"/>
                        <declaration name="i64" type="int" line="187"/>
                        <scope line="188"/>
                        <scope line="190"/>
                    </scope>
                </method>
                <method name="getJavaResult" type="String" line="196">
                    <params>
                        <param name="offset" type="String"/>
                        <param name="base" type="String"/>
                    </params>
                    <declaration name="res" type="String" line="197"/>
                    <scope line="203"/>
                    <scope line="205"/>
                    <scope line="212"/>
                    <scope line="214"/>
                </method>
                <method name="getJavaResultConversion" type="String" line="226">
                    <params>
                        <param name="value" type="String"/>
                        <param name="base" type="String"/>
                    </params>
                    <scope line="227">
                        <scope line="228">
                            <scope line="229"/>
                            <scope line="231"/>
                        </scope>
                        <scope line="234"/>
                    </scope>
                    <scope line="237"/>
                </method>
                <method name="getJavaResultConversionForType" type="String" line="241">
                    <params>
                        <param name="type" type="int"/>
                        <param name="value" type="String"/>
                    </params>
                </method>
                <method name="getNativeAccess" type="String" line="244"/>
                <method name="getJavaAccess" type="String" line="247">
                    <params>
                        <param name="wide" type="boolean"/>
                    </params>
                </method>
                <method name="getJavaAccessForType" type="String" line="250">
                    <params>
                        <param name="type" type="int"/>
                        <param name="wide" type="boolean"/>
                    </params>
                </method>
                <method name="getNativeAccessForType" type="String" line="280">
                    <params>
                        <param name="type" type="int"/>
                    </params>
                </method>
                <method name="getNativeSizeForAccess" type="int" line="312">
                    <params>
                        <param name="access" type="String"/>
                    </params>
                </method>
                <method name="getJavaConversion" type="String" line="325">
                    <params>
                        <param name="offset" type="String"/>
                        <param name="value" type="String"/>
                    </params>
                    <comment line="333">
                        TYPE_PTR                        
                    </comment>
                    <scope line="326">
                        <scope line="327"/>
                        <scope line="329">
                            <scope line="330"/>
                            <scope line="332"/>
                        </scope>
                    </scope>
                    <scope line="336"/>
                </method>
                <method name="getJavaConversionForType" type="String" line="340">
                    <params>
                        <param name="type" type="int"/>
                        <param name="offset" type="String"/>
                        <param name="value" type="String"/>
                    </params>
                </method>
                <declaration name="type" type="int" line="345"/>
                <declaration name="offset" type="int" line="346"/>
                <declaration name="direction" type="int" line="347"/>
                <declaration name="referencedType" type="BaseType" line="348"/>
                <declaration name="arrayLength" type="int" line="349"/>
                <declaration name="autoFree" type="boolean" line="350"/>
                <method name="AtomicType" type="constructor" line="351">
                    <params>
                        <param name="_type" type="int"/>
                        <param name="_name" type="String"/>
                        <param name="_real_type" type="String"/>
                    </params>
                    <scope line="354"/>
                    <scope line="360"/>
                </method>
                <method name="isIn" type="boolean" line="365"/>
                <method name="isOut" type="boolean" line="368"/>
                <method name="isInOut" type="boolean" line="371"/>
                <method name="isAutoFree" type="boolean" line="374"/>
                <method name="setAttributes" type="void" line="377">
                    <params>
                        <param name="attributes" type="String[]"/>
                    </params>
                    <comment line="397">
                        array length                        
                    </comment>
                    <declaration name="mod" type="String" line="378"/>
                    <scope line="379"/>
                    <scope line="381">
                        <scope line="383"/>
                    </scope>
                    <scope line="386"/>
                    <scope line="388"/>
                    <scope line="391">
                        <scope line="393"/>
                        <scope line="396">
                            <scope line="397"/>
                            <scope line="399"/>
                        </scope>
                    </scope>
                </method>
                <method name="getReferencedType" type="BaseType" line="404"/>
                <method name="getArrayLength" type="int" line="407"/>
                <method name="setOffset" type="void" line="411">
                    <params>
                        <param name="o" type="int"/>
                    </params>
                </method>
                <method name="getType" type="int" line="414"/>
                <method name="getTypeUpperCase" type="String" line="417"/>
                <method name="getOffset" type="int" line="445"/>
                <method name="isAlias" type="boolean" line="448"/>
                <method name="getAliasName" type="String" line="451"/>
            </class>
            <class name="StructType" line="456">
                <extends class="BaseType"/>
                <declaration name="members" type="Vector" line="458"/>
                <declaration name="description" type="String" line="459"/>
                <declaration name="packed" type="boolean" line="460"/>
                <declaration name="size" type="int" line="461"/>
                <declaration name="baseClass" type="String" line="462"/>
                <declaration name="isInterface" type="boolean" line="463"/>
                <declaration name="javaClassName" type="String" line="464"/>
                <javadoc line="466">
                    Construct new structured type.
                      Description is used for name and type definition and has the following format:
                      structName [ &apos;[&apos; base classe &apos;]&apos; ] [ &apos;{&apos; interfaces &apos;}&apos; ] [ &apos;|&apos; javaClassName ]                    
                </javadoc>
                <method name="StructType" type="constructor" line="472">
                    <params>
                        <param name="_desc" type="String"/>
                    </params>
                </method>
                <method name="getNumFields" type="int" line="477"/>
                <method name="setName" type="void" line="481">
                    <params>
                        <param name="_name" type="String"/>
                    </params>
                </method>
                <method name="setSize" type="void" line="487">
                    <params>
                        <param name="i" type="int"/>
                    </params>
                </method>
                <method name="getDescription" type="String" line="492"/>
                <method name="getMembers" type="Enumeration" line="497"/>
                <method name="addMember" type="void" line="502">
                    <params>
                        <param name="tp" type="BaseType"/>
                    </params>
                </method>
                <method name="getBaseClass" type="String" line="505"/>
                <method name="getInterfaces" type="String" line="508"/>
                <method name="getIsInterface" type="boolean" line="511"/>
                <method name="getJavaClassName" type="String" line="514"/>
                <method name="parseDescription" type="void" line="517">
                    <params>
                        <param name="_desc" type="String"/>
                    </params>
                    <comment line="519">
                        Has base class                        
                    </comment>
                    <comment line="523">
                        Has base class                        
                    </comment>
                    <comment line="527">
                        Interface                        
                    </comment>
                    <comment line="540">
                        System.out.println(&quot;Struct &quot; + name + &quot; extends &quot; + baseClass + &quot; implements &quot; + interfaces);                        
                    </comment>
                    <scope line="518"/>
                    <scope line="522"/>
                    <scope line="526"/>
                    <scope line="530"/>
                    <scope line="535"/>
                </method>
                <javadoc line="542">
                    Returns String containing Java code calculating size of the structure depending on the data model                    
                </javadoc>
                <method name="getSize" type="String" line="545">
                    <declaration name="s32" type="String" line="546"/>
                    <declaration name="s64" type="String" line="547"/>
                    <scope line="548"/>
                    <scope line="551"/>
                    <scope line="553"/>
                </method>
                <method name="getOffset" type="String" line="557">
                    <params>
                        <param name="atp" type="AtomicType"/>
                    </params>
                    <declaration name="key" type="String" line="558"/>
                    <declaration name="s64" type="String" line="559"/>
                    <declaration name="s32" type="String" line="560"/>
                    <scope line="561"/>
                    <scope line="564"/>
                    <scope line="566"/>
                </method>
            </class>
            <class name="FunctionType" line="572">
                <extends class="BaseType"/>
                <declaration name="args" type="Vector" line="574"/>
                <declaration name="description" type="String" line="575"/>
                <declaration name="packed" type="boolean" line="576"/>
                <declaration name="returnType" type="String" line="577"/>
                <declaration name="alignment" type="int" line="579"/>
                <method name="FunctionType" type="constructor" line="582">
                    <params>
                        <param name="_desc" type="String"/>
                    </params>
                </method>
                <method name="isVoid" type="boolean" line="587"/>
                <method name="getReturnType" type="String" line="590">
                    <scope line="591"/>
                    <scope line="593"/>
                </method>
                <method name="getNumArgs" type="int" line="599"/>
                <method name="setName" type="void" line="603">
                    <params>
                        <param name="_name" type="String"/>
                    </params>
                    <scope line="604"/>
                    <scope line="607"/>
                </method>
                <method name="getDescription" type="String" line="615"/>
                <method name="getArguments" type="Collection" line="620"/>
                <method name="addArgument" type="void" line="624">
                    <params>
                        <param name="tp" type="BaseType"/>
                    </params>
                </method>
            </class>
            <method name="makeComment" type="String" line="630">
                <params>
                    <param name="str" type="String"/>
                </params>
                <declaration name="st" type="StringTokenizer" line="631"/>
                <declaration name="ret" type="String" line="632"/>
                <scope line="635"/>
            </method>
            <method name="getJavaTypeForSize" type="String" line="642">
                <params>
                    <param name="size" type="int"/>
                </params>
            </method>
            <method name="getOffsets" type="String" line="652">
                <params>
                    <param name="stp" type="StructType"/>
                    <param name="atp" type="AtomicType"/>
                    <param name="wide" type="boolean"/>
                </params>
                <declaration name="key" type="String" line="653"/>
            </method>
            <method name="getStructSize" type="String" line="658">
                <params>
                    <param name="stp" type="StructType"/>
                    <param name="wide" type="boolean"/>
                </params>
            </method>
            <method name="getLongSize" type="int" line="663">
                <params>
                    <param name="wide" type="boolean"/>
                </params>
            </method>
            <method name="getPtrSize" type="int" line="668">
                <params>
                    <param name="wide" type="boolean"/>
                </params>
            </method>
            <method name="getBoolSize" type="int" line="671">
                <params>
                    <param name="wide" type="boolean"/>
                </params>
            </method>
            <method name="getOrdinalSize" type="int" line="674">
                <params>
                    <param name="ordinal" type="String"/>
                    <param name="wide" type="boolean"/>
                </params>
            </method>
            <method name="writeToString" type="void" line="678">
                <params>
                    <param name="stp" type="StructType"/>
                    <param name="pw" type="PrintWriter"/>
                </params>
                <declaration name="type" type="int" line="679"/>
                <scope line="683">
                    <declaration name="tp" type="AtomicType" line="684"/>
                    <declaration name="name" type="String" line="687"/>
                    <scope line="689">
                        <scope line="690"/>
                        <scope line="692"/>
                        <scope line="694"/>
                        <scope line="696">
                            <scope line="698"/>
                        </scope>
                        <scope line="702"/>
                    </scope>
                </scope>
            </method>
            <method name="writeStubs" type="void" line="711">
                <params>
                    <param name="stp" type="StructType"/>
                    <param name="pw" type="PrintWriter"/>
                </params>
                <comment line="728">
                    Returns pointer to the start of the array                    
                </comment>
                <declaration name="type" type="int" line="712"/>
                <declaration name="prefix" type="String" line="713"/>
                <scope line="714"/>
                <scope line="716"/>
                <scope line="719">
                    <declaration name="tp" type="AtomicType" line="720"/>
                    <declaration name="name" type="String" line="723"/>
                    <scope line="725">
                        <scope line="726"/>
                        <scope line="732"/>
                    </scope>
                </scope>
            </method>
            <method name="padSize" type="int" line="740">
                <params>
                    <param name="size" type="int"/>
                    <param name="wordLength" type="int"/>
                </params>
                <comment line="743">
                    Make size dividable by bytesPerWord                    
                </comment>
                <declaration name="bytesPerWord" type="int" line="741"/>
            </method>
            <method name="writeAccessorImpls" type="void" line="746">
                <params>
                    <param name="stp" type="StructType"/>
                    <param name="pw" type="PrintWriter"/>
                </params>
                <comment line="775">
                    Set for StructType is forbidden                    
                </comment>
                <comment line="782">
                    Returns pointer to the start of the array                    
                </comment>
                <declaration name="type" type="int" line="747"/>
                <declaration name="i" type="int" line="748"/>
                <declaration name="s_size_32" type="String" line="749"/>
                <declaration name="s_size_64" type="String" line="750"/>
                <declaration name="acc_size_32" type="int" line="751"/>
                <declaration name="acc_size_64" type="int" line="752"/>
                <declaration name="s_log" type="String" line="753"/>
                <scope line="754">
                    <declaration name="tp" type="AtomicType" line="755"/>
                    <declaration name="name" type="String" line="758"/>
                    <declaration name="pref" type="String" line="759"/>
                    <scope line="761">
                        <declaration name="jt" type="String" line="762"/>
                        <declaration name="ja_32" type="String" line="763"/>
                        <declaration name="ja_64" type="String" line="764"/>
                        <declaration name="ja" type="String" line="765"/>
                        <declaration name="elemSize_32" type="int" line="766"/>
                        <declaration name="elemSize_64" type="int" line="767"/>
                        <declaration name="elemSize" type="String" line="768"/>
                        <scope line="769">
                            <scope line="774"/>
                        </scope>
                        <scope line="783"/>
                        <scope line="795">
                            <scope line="800"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="808"/>
                <scope line="811"/>
            </method>
            <method name="writeWrapperSubclass" type="void" line="817">
                <params>
                    <param name="stp" type="StructType"/>
                    <param name="pw" type="PrintWriter"/>
                    <param name="wide" type="boolean"/>
                </params>
            </method>
            <method name="writeWrapper" type="void" line="829">
                <params>
                    <param name="outputDir" type="String"/>
                    <param name="stp" type="StructType"/>
                </params>
                <scope line="830">
                    <scope line="832">
                        <declaration name="fs" type="FileOutputStream" line="833"/>
                        <declaration name="pw" type="PrintWriter" line="834"/>
                        <declaration name="baseClass" type="String" line="840"/>
                        <scope line="841"/>
                        <scope line="844"/>
                        <scope line="847"/>
                        <scope line="851"/>
                        <scope line="855">
                            <scope line="864"/>
                            <scope line="871"/>
                            <scope line="879"/>
                            <scope line="883"/>
                        </scope>
                        <scope line="890"/>
                    </scope>
                    <scope line="901"/>
                </scope>
            </method>
            <method name="readSizeInfo" type="boolean" line="907">
                <params>
                    <param name="is" type="InputStream"/>
                    <param name="wide" type="boolean"/>
                </params>
                <declaration name="line" type="String" line="908"/>
                <declaration name="splits" type="String" line="909"/>
                <declaration name="in" type="BufferedReader" line="910"/>
                <scope line="911">
                    <scope line="913">
                        <scope line="916">
                            <scope line="917"/>
                            <scope line="919"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="925"/>
            </method>
            <method name="writeFunctionCallWrapper" type="void" line="931">
                <params>
                    <param name="outputDir" type="String"/>
                    <param name="ft" type="FunctionType"/>
                </params>
                <scope line="932">
                    <declaration name="fs" type="FileOutputStream" line="933"/>
                    <declaration name="pw" type="PrintWriter" line="934"/>
                    <declaration name="iter" type="Iterator" line="943"/>
                    <scope line="944">
                        <declaration name="at" type="AtomicType" line="945"/>
                        <scope line="946"/>
                        <scope line="948"/>
                    </scope>
                    <declaration name="first" type="boolean" line="954"/>
                    <scope line="955">
                        <declaration name="at" type="AtomicType" line="956"/>
                        <scope line="957">
                            <scope line="958"/>
                        </scope>
                    </scope>
                    <scope line="968">
                        <declaration name="at" type="AtomicType" line="969"/>
                        <scope line="970"/>
                    </scope>
                    <scope line="977"/>
                    <scope line="979"/>
                    <scope line="998">
                        <declaration name="at" type="AtomicType" line="999"/>
                        <scope line="1000"/>
                    </scope>
                    <scope line="1004"/>
                    <scope line="1010">
                        <declaration name="at" type="AtomicType" line="1011"/>
                        <scope line="1012"/>
                        <scope line="1016"/>
                        <scope line="1018"/>
                    </scope>
                    <scope line="1026"/>
                    <scope line="1056">
                        <declaration name="at" type="AtomicType" line="1057"/>
                        <scope line="1058">
                            <scope line="1059"/>
                        </scope>
                    </scope>
                    <scope line="1072">
                        <declaration name="at" type="AtomicType" line="1073"/>
                        <scope line="1083"/>
                        <scope line="1085"/>
                        <scope line="1091"/>
                        <scope line="1093"/>
                    </scope>
                </scope>
                <scope line="1100"/>
            </method>
            <method name="writeJavaWrapperClass" type="void" line="1105">
                <params>
                    <param name="outputDir" type="String"/>
                </params>
                <comment line="1107">
                    (new File(outputDir, package_path)).mkdirs();                    
                </comment>
                <scope line="1107">
                    <scope line="1108">
                        <declaration name="tp" type="BaseType" line="1109"/>
                        <scope line="1110">
                            <declaration name="st" type="StructType" line="1111"/>
                        </scope>
                        <scope line="1113"/>
                    </scope>
                </scope>
                <scope line="1118"/>
            </method>
            <method name="writeNativeSizer" type="void" line="1125">
                <params>
                    <param name="file" type="String"/>
                </params>
                <declaration name="type" type="int" line="1126"/>
                <declaration name="i" type="int" line="1127"/>
                <declaration name="j" type="int" line="1128"/>
                <declaration name="tp" type="BaseType" line="1129"/>
                <declaration name="stp" type="StructType" line="1130"/>
                <declaration name="eo" type="Enumeration" line="1131"/>
                <scope line="1134">
                    <declaration name="fs" type="FileOutputStream" line="1136"/>
                    <declaration name="pw" type="PrintWriter" line="1137"/>
                    <scope line="1158">
                        <scope line="1161">
                            <scope line="1163"/>
                        </scope>
                    </scope>
                    <scope line="1180">
                        <scope line="1185">
                            <scope line="1187"/>
                            <scope line="1190">
                                <declaration name="atp" type="AtomicType" line="1191"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="1212"/>
            </method>
            <method name="initTypes" type="void" line="1217"/>
            <method name="WrapperGenerator" type="constructor" line="1231">
                <params>
                    <param name="outputDir" type="String"/>
                    <param name="xlibFilename" type="String"/>
                </params>
                <comment line="1243">
                    remove comment                    
                </comment>
                <comment line="1248">
                    skip empty line                    
                </comment>
                <scope line="1233">
                    <declaration name="in" type="BufferedReader" line="1234"/>
                    <declaration name="line" type="String" line="1235"/>
                    <declaration name="splits" type="String" line="1236"/>
                    <declaration name="curType" type="BaseType" line="1237"/>
                    <scope line="1239">
                        <declaration name="commentStart" type="int" line="1240"/>
                        <scope line="1241"/>
                        <scope line="1246"/>
                        <scope line="1253">
                            <declaration name="struct_name" type="String" line="1254"/>
                            <declaration name="field_name" type="String" line="1255"/>
                            <declaration name="s_type" type="String" line="1256"/>
                            <declaration name="bt" type="BaseType" line="1257"/>
                            <declaration name="type" type="int" line="1258"/>
                            <declaration name="atp" type="AtomicType" line="1259"/>
                            <scope line="1260">
                                <scope line="1262"/>
                                <scope line="1265">
                                    <declaration name="stp" type="StructType" line="1266"/>
                                </scope>
                                <scope line="1268"/>
                            </scope>
                            <scope line="1272"/>
                        </scope>
                        <scope line="1277">
                            <declaration name="bt" type="BaseType" line="1278"/>
                            <scope line="1279">
                                <scope line="1280">
                                    <declaration name="ft" type="FunctionType" line="1281"/>
                                </scope>
                                <scope line="1285">
                                    <declaration name="stp" type="StructType" line="1286"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="1297"/>
            </method>
            <method name="makeSizer" type="void" line="1302">
                <params>
                    <param name="outputDir" type="String"/>
                </params>
                <scope line="1303"/>
                <scope line="1305"/>
                <declaration name="fp" type="File" line="1308"/>
            </method>
            <method name="readSizeInfo" type="boolean" line="1311">
                <params>
                    <param name="sizeInfo" type="String"/>
                </params>
                <scope line="1312">
                    <declaration name="f" type="File" line="1313"/>
                    <declaration name="res" type="boolean" line="1314"/>
                    <declaration name="fis" type="FileInputStream" line="1315"/>
                    <scope line="1316"/>
                    <scope line="1322"/>
                </scope>
                <scope line="1328"/>
            </method>
            <method name="startGeneration" type="void" line="1334">
                <params>
                    <param name="outputDir" type="String"/>
                    <param name="sizeInfo" type="String"/>
                </params>
                <scope line="1336"/>
                <scope line="1339"/>
            </method>
            <method name="main" type="void" line="1344">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <scope line="1346"/>
                <declaration name="xparser" type="WrapperGenerator" line="1353"/>
                <scope line="1354"/>
                <scope line="1357"/>
            </method>
        </class>
    </source>