<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt"/>
        <import package="javax.swing"/>
        <import package="java.awt.event"/>
        <import package="java.awt.peer"/>
        <import package="java.io"/>
        <import package="java.util.Locale"/>
        <import package="java.util.Arrays"/>
        <import package="com.sun.java.swing.plaf.motif"/>
        <import package="javax.swing.plaf.ComponentUI"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <import package="sun.awt.AWTAccessor"/>
        <class name="XFileDialogPeer" line="42">
            <extends class="XDialogPeer"/>
            <comment line="48">
                This variable holds value exactly the same as value of the &apos;target.file&apos; variable except:
                 1) is changed to null after quit (see handleQuitButton())
                 2) keep the same value if &apos;target.file&apos; is incorrect (see setFile())
                 It&apos;s not clear HOW we used it
                 We should think about existence of this variable                
            </comment>
            <comment line="63">
                Seems that the purpose of this variable is cashing of &apos;target.file&apos; variable in order to help method show()
                 We should think about using &apos;target.file&apos; instead of &apos;savedFile&apos;
                 Perhaps, &apos;target.file&apos; just more correct (see target.setFile())                
            </comment>
            <comment line="68">
                Holds value of the directory which was chosen before
                 We use it in order to restore previously selected directory
                 at the time of the next showing of the file dialog                
            </comment>
            <comment line="72">
                Holds value of the system property &apos;user.dir&apos;
                 in order to init current directory                
            </comment>
            <comment line="82">
                ************** Components in the fileDialogWindow ***************                
            </comment>
            <comment line="86">
                This variable holds the current text of the file which user select through the navigation
                 It&apos;s important that updating of this variable must be correct
                 since this value is used at the time of the file dialog closing
                 Namely, we invoke target.setFile() and then user can get this value
                 We update this field in cases:
                 - ITEM_STATE_CHANGED was triggered on the file list component: set to the current selected item
                 - at the time of the &apos;show&apos;: set to savedFile
                 - at the time of the programmatically setting: set to new value                
            </comment>
            <comment line="98">
                This is the list component which is used for the showing of the file list of the current directory                
            </comment>
            <comment line="563">
                Updates the current directory only if directoryList-specific
                 action occurred. Returns false if the forward directory is inaccessible                
            </comment>
            <comment line="767">
                03/02/2005 b5097243 Pressing &apos;ESC&apos; on a file dlg does not dispose the dlg on Xtoolkit                
            </comment>
            <comment line="799">
                Adding items to the path choice based on the text string
                 See 6240074 for more information                
            </comment>
            <comment line="808">
                Refresh the unfurled choice at the time of the opening choice according to the text of the path field
                 See 6240074 for more information                
            </comment>
            <comment line="828">
                Refresh the file dialog at the time of the closing choice according to the selected item of the choice
                 See 6240074 for more information                
            </comment>
            <comment line="897">
                Tells whether or not the specified file should be included in a file list                
            </comment>
            <comment line="911">
                Tells whether or not the input string matches the given filter                
            </comment>
            <comment line="919">
                Converts the filter into the form which is acceptable by Java&apos;s regexps                
            </comment>
            <implements interface="FileDialogPeer"/>
            <implements interface="ActionListener"/>
            <implements interface="ItemListener"/>
            <implements interface="KeyEventDispatcher"/>
            <implements interface="XChoicePeerListener"/>
            <declaration name="log" type="PlatformLogger" line="43"/>
            <declaration name="target" type="FileDialog" line="45"/>
            <declaration name="file" type="String" line="52"/>
            <declaration name="dir" type="String" line="54"/>
            <declaration name="title" type="String" line="56"/>
            <declaration name="mode" type="int" line="57"/>
            <declaration name="filter" type="FilenameFilter" line="58"/>
            <declaration name="PATH_CHOICE_WIDTH" type="int" line="60"/>
            <declaration name="savedFile" type="String" line="65"/>
            <declaration name="savedDir" type="String" line="70"/>
            <declaration name="userDir" type="String" line="73"/>
            <declaration name="fileDialog" type="Dialog" line="75"/>
            <declaration name="gbl" type="GridBagLayout" line="77"/>
            <declaration name="gblButtons" type="GridBagLayout" line="78"/>
            <declaration name="gbc" type="GridBagConstraints" line="79"/>
            <declaration name="filterField" type="TextField" line="83"/>
            <declaration name="selectionField" type="TextField" line="93"/>
            <declaration name="directoryList" type="List" line="95"/>
            <declaration name="fileList" type="List" line="98"/>
            <declaration name="buttons" type="Panel" line="100"/>
            <declaration name="openButton" type="Button" line="101"/>
            <declaration name="filterButton" type="Button" line="102"/>
            <declaration name="cancelButton" type="Button" line="103"/>
            <declaration name="pathChoice" type="Choice" line="104"/>
            <declaration name="pathField" type="TextField" line="105"/>
            <declaration name="pathPanel" type="Panel" line="106"/>
            <declaration name="cancelButtonText" type="String" line="108"/>
            <declaration name="enterFileNameLabelText" type="String" line="109"/>
            <declaration name="filesLabelText" type="String" line="110"/>
            <declaration name="foldersLabelText" type="String" line="111"/>
            <declaration name="pathLabelText" type="String" line="112"/>
            <declaration name="filterLabelText" type="String" line="113"/>
            <declaration name="openButtonText" type="String" line="114"/>
            <declaration name="saveButtonText" type="String" line="115"/>
            <declaration name="actionButtonText" type="String" line="116"/>
            <method name="installStrings" type="void" line="119">
                <declaration name="l" type="Locale" line="120"/>
                <declaration name="uid" type="UIDefaults" line="121"/>
            </method>
            <method name="XFileDialogPeer" type="constructor" line="133">
                <params>
                    <param name="target" type="FileDialog"/>
                </params>
            </method>
            <method name="init" type="void" line="138">
                <params>
                    <param name="target" type="FileDialog"/>
                </params>
                <comment line="140">
                    new Dialog(target, target.getTitle(), false);                    
                </comment>
                <comment line="148">
                    Shouldn&apos;t save &apos;user.dir&apos; to &apos;savedDir&apos;
                     since getDirectory() will be incorrect after handleCancel                    
                </comment>
                <comment line="163">
                    create components                    
                </comment>
                <comment line="180">
                    the insets used by the components in the fileDialog                    
                </comment>
                <comment line="189">
                    add components to GridBagLayout &quot;gbl&quot;                    
                </comment>
                <comment line="199">
                    Fixed 6260650: FileDialog.getDirectory() does not return null when file dialog is cancelled
                     After showing we should display &apos;user.dir&apos; as current directory
                     if user didn&apos;t set directory programatically                    
                </comment>
                <comment line="214">
                    addComponent(pathField, gbl, gbc, 0, 1, 2,
                                 GridBagConstraints.WEST, (Container)fileDialog,
                                 1, 0, GridBagConstraints.HORIZONTAL, textFieldInset);
                    addComponent(pathChoice, gbl, gbc, 1, 1, GridBagConstraints.RELATIVE,                    
                </comment>
                <comment line="218">
                    GridBagConstraints.WEST, (Container)fileDialog,                    
                </comment>
                <comment line="219">
                    1, 0, GridBagConstraints.HORIZONTAL, textFieldInset);                    
                </comment>
                <comment line="269">
                    add buttons to GridBagLayout Buttons                    
                </comment>
                <comment line="280">
                    add ButtonPanel to the GridBagLayout of this class                    
                </comment>
                <comment line="287">
                    Update choice&apos;s popup width                    
                </comment>
                <comment line="304">
                    b6227750 FileDialog is not disposed when clicking the &apos;close&apos; (X) button on the top right corner, XToolkit                    
                </comment>
                <comment line="313">
                    6259434 PIT: Choice in FileDialog is not responding to keyboard interactions, XToolkit                    
                </comment>
                <anonymous_class line="150">
                    <method name="run" type="Object" line="151"/>
                </anonymous_class>
                <declaration name="isMultipleMode" type="boolean" line="175"/>
                <declaration name="noInset" type="Insets" line="180"/>
                <declaration name="textFieldInset" type="Insets" line="181"/>
                <declaration name="leftListInset" type="Insets" line="182"/>
                <declaration name="rightListInset" type="Insets" line="183"/>
                <declaration name="separatorInset" type="Insets" line="184"/>
                <declaration name="labelInset" type="Insets" line="185"/>
                <declaration name="buttonsInset" type="Insets" line="186"/>
                <declaration name="f" type="Font" line="190"/>
                <declaration name="label" type="Label" line="192"/>
                <anonymous_class line="203">
                    <method name="getPreferredSize" type="Dimension" line="204"/>
                </anonymous_class>
                <declaration name="choicePeer" type="XChoicePeer" line="287"/>
                <anonymous_class line="305">
                    <method name="windowClosing" type="void" line="306">
                        <params>
                            <param name="e" type="WindowEvent"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <method name="updateMinimumSize" type="void" line="317"/>
            <method name="updateIconImages" type="void" line="320">
                <scope line="321"/>
            </method>
            <javadoc line="328">
                add Component comp to the container cont.
                  add the component to the correct GridBagLayout                
            </javadoc>
            <method name="addComponent" type="void" line="334">
                <params>
                    <param name="comp" type="Component"/>
                    <param name="gb" type="GridBagLayout"/>
                    <param name="c" type="GridBagConstraints"/>
                    <param name="gridx" type="int"/>
                    <param name="gridy" type="int"/>
                    <param name="gridwidth" type="int"/>
                    <param name="anchor" type="int"/>
                    <param name="cont" type="Container"/>
                    <param name="weightx" type="int"/>
                    <param name="weighty" type="int"/>
                    <param name="fill" type="int"/>
                    <param name="in" type="Insets"/>
                </params>
            </method>
            <javadoc line="347">
                get fileName                
            </javadoc>
            <method name="getFileName" type="String" line="350">
                <params>
                    <param name="str" type="String"/>
                </params>
                <scope line="351"/>
                <declaration name="index" type="int" line="355"/>
                <scope line="357"/>
                <scope line="359"/>
            </method>
            <javadoc line="364">
                handleFilter                
            </javadoc>
            <method name="handleFilter" type="void" line="367">
                <params>
                    <param name="f" type="String"/>
                </params>
                <comment line="375">
                    Fixed within 6259434: PIT: Choice in FileDialog is not responding to keyboard interactions, XToolkit
                     Here we restoring Motif behaviour                    
                </comment>
                <scope line="369"/>
                <scope line="377"/>
                <scope line="379"/>
            </method>
            <javadoc line="384">
                handle the selection event                
            </javadoc>
            <method name="handleSelection" type="void" line="387">
                <params>
                    <param name="file" type="String"/>
                </params>
                <declaration name="index" type="int" line="389"/>
                <scope line="391"/>
                <scope line="394"/>
                <declaration name="fileDialogAccessor" type="AWTAccessor.FileDialogAccessor" line="399"/>
            </method>
            <javadoc line="406">
                handle the cancel event                
            </javadoc>
            <method name="handleCancel" type="void" line="409">
                <declaration name="fileDialogAccessor" type="AWTAccessor.FileDialogAccessor" line="418"/>
            </method>
            <javadoc line="427">
                handle the quit event                
            </javadoc>
            <method name="handleQuitButton" type="void" line="430"/>
            <javadoc line="436">
                set the entry of the new dir with f                
            </javadoc>
            <method name="setFilterEntry" type="void" line="439">
                <params>
                    <param name="d" type="String"/>
                    <param name="f" type="String"/>
                </params>
                <comment line="444">
                    Fixed 6260659: File Name set programmatically in FileDialog is overridden during navigation, XToolkit
                     Here we restoring Motif behaviour                    
                </comment>
                <comment line="459">
                    REMIND: fileDialogFilter is not implemented yet                    
                </comment>
                <comment line="463">
                    Fixed 6358953: handling was added in case of I/O error happens                    
                </comment>
                <comment line="490">
                    Some code was removed
                     Now we do updating of the pathChoice at the time of the choice opening                    
                </comment>
                <declaration name="fe" type="File" line="440"/>
                <scope line="442">
                    <scope line="447"/>
                    <scope line="450"/>
                    <declaration name="l" type="String" line="453"/>
                    <scope line="455"/>
                    <scope line="457">
                        <declaration name="ff" type="FileDialogFilter" line="459"/>
                    </scope>
                    <scope line="463"/>
                    <scope line="474">
                        <declaration name="file" type="File" line="475"/>
                        <scope line="476"/>
                        <scope line="478">
                            <scope line="479"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="getDirList" type="String[]" line="499">
                <params>
                    <param name="dir" type="String"/>
                </params>
                <declaration name="charr" type="char[]" line="502"/>
                <declaration name="numSlashes" type="int" line="503"/>
                <scope line="504"/>
                <declaration name="starr" type="String[]" line="508"/>
                <declaration name="j" type="int" line="509"/>
                <scope line="510">
                    <scope line="512"/>
                </scope>
            </method>
            <javadoc line="519">
                set the text in the selectionField                
            </javadoc>
            <method name="setSelectionField" type="void" line="522">
                <params>
                    <param name="str" type="String"/>
                </params>
            </method>
            <javadoc line="526">
                set the text in the filterField                
            </javadoc>
            <method name="setFilterField" type="void" line="529">
                <params>
                    <param name="str" type="String"/>
                </params>
            </method>
            <javadoc line="533">
                @see java.awt.event.ItemEventItemEvent.ITEM_STATE_CHANGED                
            </javadoc>
            <method name="itemStateChanged" type="void" line="538">
                <params>
                    <param name="itemEvent" type="ItemEvent"/>
                </params>
                <comment line="548">
                    Update the selection (&apos;folder name&apos; text field) after
                     the current item changing in the unfurled choice by the arrow keys.
                     See 6259434, 6240074 for more information                    
                </comment>
                <scope line="540"/>
                <declaration name="source" type="Object" line="544"/>
                <scope line="546">
                    <declaration name="dir" type="String" line="552"/>
                </scope>
                <scope line="554"/>
                <scope line="556">
                    <declaration name="file" type="String" line="557"/>
                </scope>
            </method>
            <method name="updateDirectoryByUserAction" type="boolean" line="566">
                <params>
                    <param name="str" type="String"/>
                </params>
                <declaration name="dir" type="String" line="568"/>
                <scope line="569"/>
                <scope line="572"/>
                <declaration name="fe" type="File" line="576"/>
                <scope line="577"/>
                <scope line="580"/>
            </method>
            <method name="getParentDirectory" type="String" line="585">
                <comment line="588">
                    If the current directory is &quot;/&quot; leave it alone.                    
                </comment>
                <declaration name="parent" type="String" line="586"/>
                <scope line="588"/>
            </method>
            <method name="actionPerformed" type="void" line="597">
                <params>
                    <param name="actionEvent" type="ActionEvent"/>
                </params>
                <comment line="611">
                    Fixed within 6259434: PIT: Choice in FileDialog is not responding to keyboard interactions, XToolkit
                     We should handle the action based on the selection field
                     Looks like mistake                    
                </comment>
                <comment line="623">
                    handleFilter( actionCommand + getFileName( filterField.getText() ) );                    
                </comment>
                <declaration name="actionCommand" type="String" line="598"/>
                <declaration name="source" type="Object" line="599"/>
                <scope line="601"/>
                <scope line="604"/>
                <scope line="606"/>
                <scope line="608">
                    <scope line="609"/>
                    <scope line="615"/>
                    <scope line="617"/>
                </scope>
                <scope line="620">
                    <scope line="621">
                        <scope line="623"/>
                    </scope>
                    <scope line="626"/>
                </scope>
            </method>
            <method name="dispatchKeyEvent" type="boolean" line="633">
                <params>
                    <param name="keyEvent" type="KeyEvent"/>
                </params>
                <comment line="642">
                    Fix for 6240084 Disposing a file dialog when the drop-down is active does not dispose the dropdown menu, on Xtoolkit
                     See also 6259493                    
                </comment>
                <declaration name="id" type="int" line="634"/>
                <declaration name="keyCode" type="int" line="635"/>
                <scope line="637">
                    <scope line="638">
                        <declaration name="comp" type="Component" line="639"/>
                        <scope line="640">
                            <scope line="643">
                                <declaration name="choicePeer" type="XChoicePeer" line="644"/>
                                <scope line="645"/>
                            </scope>
                            <scope line="649"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="662">
                set the file                
            </javadoc>
            <method name="setFile" type="void" line="665">
                <params>
                    <param name="file" type="String"/>
                </params>
                <scope line="667"/>
                <scope line="672">
                    <declaration name="d" type="String" line="673"/>
                    <declaration name="f" type="File" line="674"/>
                    <scope line="676"/>
                </scope>
                <scope line="680">
                    <declaration name="f" type="File" line="681"/>
                    <scope line="682"/>
                </scope>
            </method>
            <javadoc line="690">
                set the directory
                  FIXME: we should update &apos;savedDir&apos; after programmatically &apos;setDirectory&apos;
                  Otherwise, SavedDir will be not null before second showing
                  So the current directory of the file dialog will be incorrect after second showing
                  since &apos;setDirectory&apos; will be ignored
                  We cann&apos;t update savedDir here now since it used very often                
            </javadoc>
            <method name="setDirectory" type="void" line="698">
                <params>
                    <param name="dir" type="String"/>
                </params>
                <comment line="743">
                    Some code was removed
                     Now we do updating of the pathChoice at the time of the choice opening
                     Fixed problem:
                     The exception java.awt.IllegalComponentStateException will be thrown
                     if the user invoke setDirectory after the closing of the file dialog                    
                </comment>
                <scope line="700"/>
                <scope line="705"/>
                <declaration name="i" type="int" line="709"/>
                <scope line="710"/>
                <declaration name="fe" type="File" line="715"/>
                <scope line="718">
                    <scope line="722"/>
                </scope>
                <scope line="726"/>
                <scope line="728"/>
                <scope line="734"/>
                <scope line="737"/>
            </method>
            <javadoc line="749">
                set filenameFilter                
            </javadoc>
            <method name="setFilenameFilter" type="void" line="753">
                <params>
                    <param name="filter" type="FilenameFilter"/>
                </params>
            </method>
            <method name="dispose" type="void" line="758">
                <declaration name="fd" type="FileDialog" line="759"/>
                <scope line="760"/>
            </method>
            <method name="setVisible" type="void" line="767">
                <params>
                    <param name="b" type="boolean"/>
                </params>
                <comment line="778">
                    Actually in Motif implementation lost file value which was saved after prevously showing
                     Seems we shouldn&apos;t restore Motif behaviour in this case                    
                </comment>
                <comment line="785">
                    See 6240074 for more information                    
                </comment>
                <comment line="790">
                    See 6240074 for more information                    
                </comment>
                <scope line="768"/>
                <scope line="772"/>
                <scope line="776"/>
                <scope line="783">
                    <declaration name="choicePeer" type="XChoicePeer" line="785"/>
                </scope>
                <scope line="788">
                    <declaration name="choicePeer" type="XChoicePeer" line="790"/>
                </scope>
            </method>
            <method name="addItemsToPathChoice" type="void" line="802">
                <params>
                    <param name="text" type="String"/>
                </params>
                <declaration name="dirList" type="String" line="803"/>
            </method>
            <method name="unfurledChoiceOpening" type="void" line="811">
                <params>
                    <param name="choiceHelper" type="ListHelper"/>
                </params>
                <comment line="814">
                    When the unfurled choice is opening the first time, we need only to add elements, otherwise we&apos;ve got exception                    
                </comment>
                <comment line="820">
                    If the set of the directories the exactly same as the used to be then dummy                    
                </comment>
                <scope line="814"/>
            </method>
            <method name="unfurledChoiceClosing" type="void" line="831">
                <comment line="833">
                    This is the exactly same code as invoking later at the time of the itemStateChanged
                     Here is we restore Windows behaviour: change current directory if user press &apos;ESC&apos;                    
                </comment>
                <declaration name="dir" type="String" line="834"/>
            </method>
        </class>
        <class name="Separator" line="839">
            <extends class="Canvas"/>
            <comment line="48">
                This variable holds value exactly the same as value of the &apos;target.file&apos; variable except:
                 1) is changed to null after quit (see handleQuitButton())
                 2) keep the same value if &apos;target.file&apos; is incorrect (see setFile())
                 It&apos;s not clear HOW we used it
                 We should think about existence of this variable                
            </comment>
            <comment line="63">
                Seems that the purpose of this variable is cashing of &apos;target.file&apos; variable in order to help method show()
                 We should think about using &apos;target.file&apos; instead of &apos;savedFile&apos;
                 Perhaps, &apos;target.file&apos; just more correct (see target.setFile())                
            </comment>
            <comment line="68">
                Holds value of the directory which was chosen before
                 We use it in order to restore previously selected directory
                 at the time of the next showing of the file dialog                
            </comment>
            <comment line="72">
                Holds value of the system property &apos;user.dir&apos;
                 in order to init current directory                
            </comment>
            <comment line="82">
                ************** Components in the fileDialogWindow ***************                
            </comment>
            <comment line="86">
                This variable holds the current text of the file which user select through the navigation
                 It&apos;s important that updating of this variable must be correct
                 since this value is used at the time of the file dialog closing
                 Namely, we invoke target.setFile() and then user can get this value
                 We update this field in cases:
                 - ITEM_STATE_CHANGED was triggered on the file list component: set to the current selected item
                 - at the time of the &apos;show&apos;: set to savedFile
                 - at the time of the programmatically setting: set to new value                
            </comment>
            <comment line="98">
                This is the list component which is used for the showing of the file list of the current directory                
            </comment>
            <comment line="563">
                Updates the current directory only if directoryList-specific
                 action occurred. Returns false if the forward directory is inaccessible                
            </comment>
            <comment line="767">
                03/02/2005 b5097243 Pressing &apos;ESC&apos; on a file dlg does not dispose the dlg on Xtoolkit                
            </comment>
            <comment line="799">
                Adding items to the path choice based on the text string
                 See 6240074 for more information                
            </comment>
            <comment line="808">
                Refresh the unfurled choice at the time of the opening choice according to the text of the path field
                 See 6240074 for more information                
            </comment>
            <comment line="828">
                Refresh the file dialog at the time of the closing choice according to the selected item of the choice
                 See 6240074 for more information                
            </comment>
            <comment line="897">
                Tells whether or not the specified file should be included in a file list                
            </comment>
            <comment line="911">
                Tells whether or not the input string matches the given filter                
            </comment>
            <comment line="919">
                Converts the filter into the form which is acceptable by Java&apos;s regexps                
            </comment>
            <declaration name="HORIZONTAL" type="int" line="840"/>
            <declaration name="VERTICAL" type="int" line="841"/>
            <declaration name="orientation" type="int" line="842"/>
            <method name="Separator" type="constructor" line="844">
                <params>
                    <param name="length" type="int"/>
                    <param name="thickness" type="int"/>
                    <param name="orient" type="int"/>
                </params>
                <comment line="851">
                    VERTICAL                    
                </comment>
                <scope line="847"/>
                <scope line="849"/>
            </method>
            <method name="paint" type="void" line="855">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <comment line="869">
                    VERTICAL                    
                </comment>
                <declaration name="x1" type="int" line="856"/>
                <declaration name="bbox" type="Rectangle" line="857"/>
                <declaration name="c" type="Color" line="858"/>
                <declaration name="brighter" type="Color" line="859"/>
                <declaration name="darker" type="Color" line="860"/>
                <scope line="862"/>
                <scope line="867"/>
            </method>
        </class>
        <class name="FileDialogFilter" line="888">
            <comment line="48">
                This variable holds value exactly the same as value of the &apos;target.file&apos; variable except:
                 1) is changed to null after quit (see handleQuitButton())
                 2) keep the same value if &apos;target.file&apos; is incorrect (see setFile())
                 It&apos;s not clear HOW we used it
                 We should think about existence of this variable                
            </comment>
            <comment line="63">
                Seems that the purpose of this variable is cashing of &apos;target.file&apos; variable in order to help method show()
                 We should think about using &apos;target.file&apos; instead of &apos;savedFile&apos;
                 Perhaps, &apos;target.file&apos; just more correct (see target.setFile())                
            </comment>
            <comment line="68">
                Holds value of the directory which was chosen before
                 We use it in order to restore previously selected directory
                 at the time of the next showing of the file dialog                
            </comment>
            <comment line="72">
                Holds value of the system property &apos;user.dir&apos;
                 in order to init current directory                
            </comment>
            <comment line="82">
                ************** Components in the fileDialogWindow ***************                
            </comment>
            <comment line="86">
                This variable holds the current text of the file which user select through the navigation
                 It&apos;s important that updating of this variable must be correct
                 since this value is used at the time of the file dialog closing
                 Namely, we invoke target.setFile() and then user can get this value
                 We update this field in cases:
                 - ITEM_STATE_CHANGED was triggered on the file list component: set to the current selected item
                 - at the time of the &apos;show&apos;: set to savedFile
                 - at the time of the programmatically setting: set to new value                
            </comment>
            <comment line="98">
                This is the list component which is used for the showing of the file list of the current directory                
            </comment>
            <comment line="563">
                Updates the current directory only if directoryList-specific
                 action occurred. Returns false if the forward directory is inaccessible                
            </comment>
            <comment line="767">
                03/02/2005 b5097243 Pressing &apos;ESC&apos; on a file dlg does not dispose the dlg on Xtoolkit                
            </comment>
            <comment line="799">
                Adding items to the path choice based on the text string
                 See 6240074 for more information                
            </comment>
            <comment line="808">
                Refresh the unfurled choice at the time of the opening choice according to the text of the path field
                 See 6240074 for more information                
            </comment>
            <comment line="828">
                Refresh the file dialog at the time of the closing choice according to the selected item of the choice
                 See 6240074 for more information                
            </comment>
            <comment line="897">
                Tells whether or not the specified file should be included in a file list                
            </comment>
            <comment line="911">
                Tells whether or not the input string matches the given filter                
            </comment>
            <comment line="919">
                Converts the filter into the form which is acceptable by Java&apos;s regexps                
            </comment>
            <implements interface="FilenameFilter"/>
            <declaration name="filter" type="String" line="890"/>
            <method name="FileDialogFilter" type="constructor" line="892">
                <params>
                    <param name="f" type="String"/>
                </params>
            </method>
            <method name="accept" type="boolean" line="899">
                <params>
                    <param name="dir" type="File"/>
                    <param name="fileName" type="String"/>
                </params>
                <declaration name="f" type="File" line="901"/>
                <scope line="903"/>
                <scope line="905"/>
            </method>
            <method name="matches" type="boolean" line="913">
                <params>
                    <param name="input" type="String"/>
                    <param name="filter" type="String"/>
                </params>
                <declaration name="regex" type="String" line="914"/>
            </method>
            <method name="convert" type="String" line="921">
                <params>
                    <param name="filter" type="String"/>
                </params>
                <declaration name="regex" type="String" line="922"/>
            </method>
        </class>
    </source>