<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.awt.peer"/>
        <import package="java.util.Vector"/>
        <import package="java.awt.geom"/>
        <import package="java.awt.image"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <class name="XListPeer" line="41">
            <extends class="XComponentPeer"/>
            <comment line="48">
                Area reserved for the                
            </comment>
            <comment line="49">
                scrollbar                
            </comment>
            <comment line="50">
                Actual width of the                
            </comment>
            <comment line="51">
                scrollbar                
            </comment>
            <comment line="56">
                From java.awt.List,                
            </comment>
            <comment line="73">
                TODO: ick - Vector?                
            </comment>
            <comment line="78">
                Holds the array of the indexes of the elements which is selected                
            </comment>
            <comment line="79">
                This array should be kept sorted, low to high.                
            </comment>
            <comment line="85">
                Holds the index of the item used in the previous operation (selectItem, deselectItem)                
            </comment>
            <comment line="86">
                Adding of an item or clearing of the list sets this index to -1                
            </comment>
            <comment line="87">
                The index is used at the moment of the post of ACTION_PERFORMED event after the mouse double click event.                
            </comment>
            <comment line="90">
                Used for tracking selection/deselection between mousePress/Release                
            </comment>
            <comment line="91">
                and for ItemEvents                
            </comment>
            <comment line="95">
                Holds the index of the item that receive focus                
            </comment>
            <comment line="96">
                This variable is reasonable only for multiple list                
            </comment>
            <comment line="97">
                since &apos;focusIndex&apos; and &apos;selected[0]&apos; are equal for single-selection list                
            </comment>
            <comment line="101">
                visibility of scrollbars                
            </comment>
            <comment line="103">
                Width of list portion of List                
            </comment>
            <comment line="104">
                Height of list portion of List                
            </comment>
            <comment line="105">
                (i.e. without scrollbars)                
            </comment>
            <comment line="109">
                Motif Lists don&apos;t seem to inherit the background color from their                
            </comment>
            <comment line="110">
                parent when an app is first started up.  So, we track if the colors have                
            </comment>
            <comment line="111">
                been set.  See getListBackground()/getListForeground().                
            </comment>
            <comment line="115">
                Holds the true if mouse is dragging outside of the area of the list                
            </comment>
            <comment line="116">
                The flag is used at the moment of the dragging and releasing mouse                
            </comment>
            <comment line="117">
                See 6243382 for more information                
            </comment>
            <comment line="121">
                Holds the true if a mouse event was originated on the scrollbar                
            </comment>
            <comment line="122">
                See 6300527 for more information                
            </comment>
            <comment line="125">
                This variable is set to true after the &quot;mouse pressed&quot; event and to false after the &quot;mouse released&quot; event                
            </comment>
            <comment line="126">
                Fixed 6293432: Key events (&apos;SPACE&apos;, &apos;UP&apos;, &apos;DOWN&apos;) aren&apos;t blocked if mouse is kept in &apos;PRESSED&apos; state for List, XAWT                
            </comment>
            <comment line="216">
                                
            </comment>
            <comment line="221">
                                
            </comment>
            <comment line="227">
                                
            </comment>
            <comment line="232">
                                
            </comment>
            <comment line="237">
                                
            </comment>
            <comment line="428">
                TODO: share/promote the Focus methods?                
            </comment>
            <comment line="502">
                                
            </comment>
            <comment line="557">
                FIXME: need to support MouseWheel scrolling, too                
            </comment>
            <comment line="736">
                Helper method for XListPeer with integrated vertical scrollbar.
                 Start or stop vertical scrolling when mouse dragged in  out the area of the list if it&apos;s required
                 Restoring Motif behavior
                 See 6243382 for more information                
            </comment>
            <comment line="781">
                Helper method for XListPeer with integrated vertical scrollbar.
                 Stop vertical scrolling when mouse released in  out the area of the list if it&apos;s required
                 Restoring Motif behavior
                 see 6243382 for more information                
            </comment>
            <comment line="1359">
                return true if the y is a valid y coordinate for
                  a VISIBLE list item, otherwise returns false                
            </comment>
            <comment line="1595">
                Returns true if the event has been handled and should not be
                 posted to Java                
            </comment>
            <comment line="1606">
                Fixed 6240151: XToolkit: Dragging the List scrollbar initiates DnD
                 To be compatible with Motif, MouseEvent originated on the scrollbar
                 should be sent into Java in this way:
                 - post: MOUSE_ENTERED, MOUSE_EXITED, MOUSE_MOVED
                 - don&apos;t post: MOUSE_PRESSED, MOUSE_RELEASED, MOUSE_CLICKED, MOUSE_DRAGGED                
            </comment>
            <comment line="1646">
                Do handleJavaMouseEvent on EDT                
            </comment>
            <comment line="1657">
                Fixed 5010944: List&apos;s rows overlap one another
                 The bug is due to incorrent caching of the list item size
                 So we should recalculate font metrics on setFont                
            </comment>
            <implements interface="ListPeer"/>
            <implements interface="XScrollbarClient"/>
            <declaration name="log" type="PlatformLogger" line="43"/>
            <declaration name="MARGIN" type="int" line="45"/>
            <declaration name="SPACE" type="int" line="46"/>
            <declaration name="SCROLLBAR_AREA" type="int" line="47"/>
            <declaration name="SCROLLBAR_WIDTH" type="int" line="49"/>
            <declaration name="NONE" type="int" line="51"/>
            <declaration name="WINDOW" type="int" line="52"/>
            <declaration name="VERSCROLLBAR" type="int" line="53"/>
            <declaration name="HORSCROLLBAR" type="int" line="54"/>
            <declaration name="DEFAULT_VISIBLE_ROWS" type="int" line="55"/>
            <declaration name="HORIZ_SCROLL_AMT" type="int" line="56"/>
            <declaration name="PAINT_VSCROLL" type="int" line="58"/>
            <declaration name="PAINT_HSCROLL" type="int" line="59"/>
            <declaration name="PAINT_ITEMS" type="int" line="60"/>
            <declaration name="PAINT_FOCUS" type="int" line="61"/>
            <declaration name="PAINT_BACKGROUND" type="int" line="62"/>
            <declaration name="PAINT_HIDEFOCUS" type="int" line="63"/>
            <declaration name="PAINT_ALL" type="int" line="64"/>
            <declaration name="COPY_AREA" type="int" line="66"/>
            <declaration name="vsb" type="XVerticalScrollbar" line="68"/>
            <declaration name="hsb" type="XHorizontalScrollbar" line="69"/>
            <declaration name="painter" type="ListPainter" line="70"/>
            <declaration name="items" type="Vector" line="73"/>
            <declaration name="multipleSelections" type="boolean" line="74"/>
            <declaration name="active" type="int" line="75"/>
            <declaration name="selected" type="int" line="79"/>
            <declaration name="fontHeight" type="int" line="80"/>
            <declaration name="fontAscent" type="int" line="81"/>
            <declaration name="fontLeading" type="int" line="82"/>
            <declaration name="currentIndex" type="int" line="87"/>
            <declaration name="eventIndex" type="int" line="91"/>
            <declaration name="eventType" type="int" line="92"/>
            <declaration name="focusIndex" type="int" line="97"/>
            <declaration name="maxLength" type="int" line="99"/>
            <declaration name="vsbVis" type="boolean" line="100"/>
            <declaration name="hsbVis" type="boolean" line="101"/>
            <declaration name="listWidth" type="int" line="102"/>
            <declaration name="listHeight" type="int" line="103"/>
            <declaration name="firstTimeVisibleIndex" type="int" line="106"/>
            <declaration name="bgColorSet" type="boolean" line="111"/>
            <declaration name="fgColorSet" type="boolean" line="112"/>
            <declaration name="mouseDraggedOutHorizontally" type="boolean" line="117"/>
            <declaration name="mouseDraggedOutVertically" type="boolean" line="118"/>
            <declaration name="isScrollBarOriginated" type="boolean" line="122"/>
            <declaration name="isMousePressed" type="boolean" line="126"/>
            <javadoc line="128">
                Create a list                
            </javadoc>
            <method name="XListPeer" type="constructor" line="131">
                <params>
                    <param name="target" type="List"/>
                </params>
            </method>
            <javadoc line="135">
                Overridden from XWindow                
            </javadoc>
            <method name="preInit" type="void" line="138">
                <params>
                    <param name="params" type="XCreateWindowParams"/>
                </params>
                <comment line="141">
                    Stuff that must be initialized before layout() is called                    
                </comment>
                <comment line="148">
                    See 6246467 for more information                    
                </comment>
            </method>
            <method name="postInit" type="void" line="153">
                <params>
                    <param name="params" type="XCreateWindowParams"/>
                </params>
                <comment line="156">
                    TODO: more efficient way?                    
                </comment>
                <comment line="157">
                    do we really want/need a copy of all the items?                    
                </comment>
                <comment line="158">
                    get all items from target                    
                </comment>
                <comment line="165">
                                        
                </comment>
                <comment line="168">
                    Can&apos;t call makeVisible since it check scroll bar,                    
                </comment>
                <comment line="169">
                    initialize scroll bar instead                    
                </comment>
                <comment line="173">
                    NOTE: needs to have target set                    
                </comment>
                <comment line="176">
                    get the index containing all indexes to selected items                    
                </comment>
                <comment line="179">
                    TODO: shouldn&apos;t this be arraycopy()?                    
                </comment>
                <comment line="183">
                    The select()ed item should become the focused item, but we don&apos;t                    
                </comment>
                <comment line="184">
                    get the select() call because the peer generally hasn&apos;t yet been                    
                </comment>
                <comment line="185">
                    created during app initialization.                    
                </comment>
                <comment line="186">
                    TODO: For multi-select lists, it should be the highest selected index                    
                </comment>
                <declaration name="l" type="List" line="159"/>
                <declaration name="stop" type="int" line="160"/>
                <scope line="161"/>
                <declaration name="index" type="int" line="166"/>
                <scope line="167"/>
                <declaration name="sel" type="int" line="177"/>
                <scope line="180"/>
                <scope line="187"/>
                <scope line="190"/>
            </method>
            <javadoc line="198">
                add Vertical Scrollbar                
            </javadoc>
            <method name="createVerScrollbar" type="void" line="201"/>
            <javadoc line="207">
                add Horizontal scrollbar                
            </javadoc>
            <method name="createHorScrollbar" type="void" line="210"/>
            <method name="add" type="void" line="216">
                <params>
                    <param name="item" type="String"/>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="removeAll" type="void" line="221"/>
            <method name="setMultipleMode" type="void" line="227">
                <params>
                    <param name="b" type="boolean"/>
                </params>
            </method>
            <method name="getPreferredSize" type="Dimension" line="232">
                <params>
                    <param name="rows" type="int"/>
                </params>
            </method>
            <method name="getMinimumSize" type="Dimension" line="237">
                <params>
                    <param name="rows" type="int"/>
                </params>
            </method>
            <javadoc line="241">
                Minimum size.                
            </javadoc>
            <method name="minimumSize" type="Dimension" line="244"/>
            <javadoc line="248">
                return the preferredSize                
            </javadoc>
            <method name="preferredSize" type="Dimension" line="251">
                <params>
                    <param name="v" type="int"/>
                </params>
            </method>
            <javadoc line="255">
                return the minimumsize                
            </javadoc>
            <method name="minimumSize" type="Dimension" line="258">
                <params>
                    <param name="v" type="int"/>
                </params>
                <declaration name="fm" type="FontMetrics" line="259"/>
            </method>
            <javadoc line="265">
                Calculate font metrics                
            </javadoc>
            <method name="initFontMetrics" type="void" line="268">
                <declaration name="fm" type="FontMetrics" line="269"/>
            </method>
            <javadoc line="276">
                return the length of the largest item in the list                
            </javadoc>
            <method name="maxLength" type="int" line="279">
                <declaration name="fm" type="FontMetrics" line="280"/>
                <declaration name="m" type="int" line="281"/>
                <declaration name="end" type="int" line="282"/>
                <scope line="283">
                    <declaration name="l" type="int" line="284"/>
                </scope>
            </method>
            <javadoc line="290">
                Calculates the width of item&apos;s label                
            </javadoc>
            <method name="getItemWidth" type="int" line="293">
                <params>
                    <param name="i" type="int"/>
                </params>
                <declaration name="fm" type="FontMetrics" line="294"/>
            </method>
            <javadoc line="298">
                return the on-screen width of the given string &quot;str&quot;                
            </javadoc>
            <method name="stringLength" type="int" line="301">
                <params>
                    <param name="str" type="String"/>
                </params>
                <declaration name="fm" type="FontMetrics" line="302"/>
            </method>
            <method name="setForeground" type="void" line="306">
                <params>
                    <param name="c" type="Color"/>
                </params>
            </method>
            <method name="setBackground" type="void" line="311">
                <params>
                    <param name="c" type="Color"/>
                </params>
            </method>
            <javadoc line="316">
                Returns the color that should be used to paint the background of
                  the list of items.  Note that this is not the same as
                  target.getBackground() which is the color of the scrollbars, and the
                  lower-right corner of the Component when the scrollbars are displayed.                
            </javadoc>
            <method name="getListBackground" type="Color" line="322">
                <params>
                    <param name="colors" type="Color[]"/>
                </params>
                <scope line="323"/>
                <scope line="326"/>
            </method>
            <javadoc line="331">
                Returns the color that should be used to paint the list item text.                
            </javadoc>
            <method name="getListForeground" type="Color" line="334">
                <params>
                    <param name="colors" type="Color[]"/>
                </params>
                <scope line="335"/>
                <scope line="338"/>
            </method>
            <method name="getVScrollBarRec" type="Rectangle" line="343"/>
            <method name="getHScrollBarRec" type="Rectangle" line="347"/>
            <method name="getFirstVisibleItem" type="int" line="351">
                <scope line="352"/>
                <scope line="354"/>
            </method>
            <method name="getLastVisibleItem" type="int" line="359">
                <scope line="360"/>
                <scope line="362"/>
            </method>
            <method name="repaintScrollbarRequest" type="void" line="367">
                <params>
                    <param name="scrollbar" type="XScrollbar"/>
                </params>
                <declaration name="g" type="Graphics" line="368"/>
                <scope line="369"/>
                <scope line="372"/>
            </method>
            <javadoc line="379">
                Overridden for performance                
            </javadoc>
            <method name="repaint" type="void" line="382"/>
            <method name="repaint" type="void" line="386">
                <params>
                    <param name="options" type="int"/>
                </params>
            </method>
            <method name="repaint" type="void" line="390">
                <params>
                    <param name="firstItem" type="int"/>
                    <param name="lastItem" type="int"/>
                    <param name="options" type="int"/>
                </params>
            </method>
            <javadoc line="394">
                In most cases the entire area of the component doesn&apos;t have
                  to be repainted. The method repaints the particular areas of
                  the component. The areas to repaint is specified by the option
                  parameter. The possible values of the option parameter are:
                  PAINT_VSCROLL, PAINT_HSCROLL, PAINT_ITEMS, PAINT_FOCUS,
                  PAINT_HIDEFOCUS, PAINT_BACKGROUND, PAINT_ALL, COPY_AREA.
                  Note that the COPY_AREA value initiates copy of a source area
                  of the component by a distance by means of the copyArea method
                  of the Graphics class.                
                <param>
                    firstItem the position of the first item of the range to repaint                    
                </param>
                <param>
                    lastItem the position of the last item of the range to repaint                    
                </param>
                <param>
                    options specifies the particular area of the component to repaint                    
                </param>
                <param>
                    source the area of the component to copy                    
                </param>
                <param>
                    distance the distance to copy the source area                    
                </param>
            </javadoc>
            <method name="repaint" type="void" line="412">
                <params>
                    <param name="firstItem" type="int"/>
                    <param name="lastItem" type="int"/>
                    <param name="options" type="int"/>
                    <param name="source" type="Rectangle"/>
                    <param name="distance" type="Point"/>
                </params>
                <declaration name="g" type="Graphics" line="413"/>
                <scope line="414"/>
                <scope line="416"/>
            </method>
            <method name="paint" type="void" line="421">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
            </method>
            <method name="isFocusable" type="boolean" line="425"/>
            <method name="focusGained" type="void" line="428">
                <params>
                    <param name="e" type="FocusEvent"/>
                </params>
            </method>
            <method name="focusLost" type="void" line="433">
                <params>
                    <param name="e" type="FocusEvent"/>
                </params>
            </method>
            <javadoc line="438">
                Layout the sub-components of the List - that is, the scrollbars and the
                  list of items.                
            </javadoc>
            <method name="layout" type="void" line="442">
                <comment line="448">
                    Start with assumption there is not a horizontal scrollbar,                    
                </comment>
                <comment line="449">
                    see if we need a vertical scrollbar                    
                </comment>
                <comment line="451">
                    Bug: If the list DOES have a horiz scrollbar and the value is set to                    
                </comment>
                <comment line="452">
                    the very bottom value, value is reset in setValues() because it isn&apos;t                    
                </comment>
                <comment line="453">
                    a valid value for cases when the list DOESN&apos;T have a horiz scrollbar.                    
                </comment>
                <comment line="454">
                    This is currently worked-around with origVSGVal.                    
                </comment>
                <comment line="462">
                    now see if we need a horizontal scrollbar                    
                </comment>
                <comment line="470">
                    do need a horizontal scrollbar, so recalculate height of                    
                </comment>
                <comment line="471">
                    vertical s crollbar                    
                </comment>
                <comment line="479">
                    now check to make sure we haven&apos;t changed need for vertical                    
                </comment>
                <comment line="480">
                    scrollbar - if we have, we need to                    
                </comment>
                <comment line="481">
                    recalculate horizontal scrollbar width - then we&apos;re done...                    
                </comment>
                <declaration name="vis" type="int" line="443"/>
                <declaration name="vsbWasVisible" type="boolean" line="444"/>
                <declaration name="origVSBVal" type="int" line="445"/>
                <scope line="469"/>
                <scope line="482"/>
            </method>
            <method name="getItemWidth" type="int" line="497"/>
            <method name="getItemHeight" type="int" line="502"/>
            <method name="getItemX" type="int" line="506"/>
            <method name="getItemY" type="int" line="510">
                <params>
                    <param name="item" type="int"/>
                </params>
            </method>
            <method name="getFocusIndex" type="int" line="514"/>
            <method name="setFocusIndex" type="void" line="518">
                <params>
                    <param name="value" type="int"/>
                </params>
            </method>
            <javadoc line="522">
                Update and return the focus rectangle.
                  Focus is around the focused item, if it is visible, or
                  around the border of the list if the focused item is scrolled off the top
                  or bottom of the list.                
            </javadoc>
            <method name="getFocusRect" type="Rectangle" line="528">
                <comment line="530">
                    width is always only based on presence of vert sb                    
                </comment>
                <comment line="533">
                    if focused item is not currently displayed in the list,  paint                    
                </comment>
                <comment line="534">
                    focus around entire list (not including scrollbars)                    
                </comment>
                <comment line="536">
                    focus rect is around the item                    
                </comment>
                <comment line="540">
                    focus rect is around the list                    
                </comment>
                <declaration name="focusRect" type="Rectangle" line="529"/>
                <scope line="535"/>
                <scope line="539"/>
            </method>
            <method name="handleConfigureNotifyEvent" type="void" line="548">
                <params>
                    <param name="xev" type="XEvent"/>
                </params>
                <comment line="551">
                    Update buffer                    
                </comment>
            </method>
            <method name="handlesWheelScrolling" type="boolean" line="554"/>
            <method name="handleJavaMouseEvent" type="void" line="557">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
                <declaration name="i" type="int" line="559"/>
            </method>
            <method name="handleJavaMouseWheelEvent" type="void" line="573">
                <params>
                    <param name="e" type="MouseWheelEvent"/>
                </params>
                <scope line="575"/>
            </method>
            <method name="mousePressed" type="void" line="580">
                <params>
                    <param name="mouseEvent" type="MouseEvent"/>
                </params>
                <comment line="590">
                    See 6243382 for more information                    
                </comment>
                <comment line="601">
                    Backward-compatible bug: even if a single-select                    
                </comment>
                <comment line="602">
                    item is already selected, we send an ITEM_STATE_CHANGED/                    
                </comment>
                <comment line="603">
                    SELECTED event.  Engineer&apos;s Toolbox appears to rely on                    
                </comment>
                <comment line="604">
                    this.                    
                </comment>
                <comment line="605">
                    else if (!isSelected(i)) {                    
                </comment>
                <comment line="611">
                    Restoring Windows behaviour                    
                </comment>
                <comment line="612">
                    We should update focus index after &quot;mouse pressed&quot; event                    
                </comment>
                <comment line="616">
                    6426186: reset variable to prevent action event                    
                </comment>
                <comment line="617">
                    if user clicks on unoccupied area of list                    
                </comment>
                <scope line="582">
                    <scope line="583">
                        <declaration name="i" type="int" line="586"/>
                        <scope line="587">
                            <scope line="588">
                                <scope line="589"/>
                                <scope line="595"/>
                            </scope>
                            <scope line="606"/>
                        </scope>
                        <scope line="615"/>
                    </scope>
                    <scope line="620"/>
                    <scope line="627"/>
                </scope>
            </method>
            <method name="mouseReleased" type="void" line="639">
                <params>
                    <param name="mouseEvent" type="MouseEvent"/>
                </params>
                <comment line="641">
                    winReleaseCursorFocus();                    
                </comment>
                <comment line="659">
                    No ext mods                    
                </comment>
                <comment line="661">
                    See 6243382 for more information                    
                </comment>
                <comment line="666">
                    Paint deselection the release                    
                </comment>
                <scope line="640">
                    <declaration name="clickCount" type="int" line="642"/>
                    <scope line="643"/>
                    <scope line="648"/>
                    <scope line="654"/>
                    <scope line="660">
                        <scope line="664"/>
                        <scope line="669"/>
                    </scope>
                </scope>
            </method>
            <method name="mouseDragged" type="void" line="683">
                <params>
                    <param name="mouseEvent" type="MouseEvent"/>
                </params>
                <comment line="684">
                    TODO: can you drag w/ any other buttons?  what about multiple buttons?                    
                </comment>
                <comment line="700">
                    Multi-select only:                    
                </comment>
                <comment line="701">
                    If a selected item was pressed on and then dragged off                    
                </comment>
                <comment line="702">
                    of, cancel the pending deselect.                    
                </comment>
                <comment line="711">
                    Single-select only:                    
                </comment>
                <comment line="712">
                    If an unselected item was pressed on, track the drag                    
                </comment>
                <comment line="713">
                    and select the item under the mouse                    
                </comment>
                <comment line="715">
                    See 6243382 for more information                    
                </comment>
                <comment line="725">
                    Restoring Windows behaviour                    
                </comment>
                <comment line="726">
                    We should update focus index after &quot;mouse dragged&quot; event                    
                </comment>
                <scope line="686">
                    <scope line="687"/>
                    <scope line="692"/>
                    <scope line="697">
                        <declaration name="i" type="int" line="698"/>
                        <scope line="699">
                            <scope line="703">
                                <scope line="704"/>
                            </scope>
                        </scope>
                        <scope line="710">
                            <scope line="718">
                                <declaration name="oldSel" type="int" line="719"/>
                            </scope>
                        </scope>
                        <scope line="727"/>
                    </scope>
                </scope>
            </method>
            <method name="trackMouseDraggedScroll" type="void" line="741">
                <params>
                    <param name="mouseEvent" type="MouseEvent"/>
                </params>
                <scope line="743"/>
                <scope line="745"/>
                <scope line="749">
                    <scope line="750"/>
                </scope>
                <scope line="754">
                    <scope line="755"/>
                </scope>
                <scope line="761"/>
                <scope line="763"/>
                <scope line="767">
                    <scope line="768"/>
                </scope>
                <scope line="772">
                    <scope line="773"/>
                </scope>
            </method>
            <method name="trackMouseReleasedScroll" type="void" line="786">
                <scope line="788"/>
                <scope line="793"/>
            </method>
            <method name="handleJavaKeyEvent" type="void" line="799">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
                <scope line="802"/>
            </method>
            <method name="keyPressed" type="void" line="809">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
                <comment line="814">
                    TODO: I assume we also want this, too                    
                </comment>
                <comment line="818">
                    If single-select, select the item                    
                </comment>
                <comment line="835">
                    TODO: I assume we also want this, too                    
                </comment>
                <comment line="839">
                    If single-select, select the item                    
                </comment>
                <comment line="856">
                    Assumes that scrollbar does its own bounds-checking                    
                </comment>
                <comment line="860">
                    6190768 pressing pg-up on AWT multiple selection lists the items but no item event is triggered, on XToolkit                    
                </comment>
                <comment line="861">
                    Restoring Motif behavior                    
                </comment>
                <comment line="876">
                    Assumes that scrollbar does its own bounds-checking                    
                </comment>
                <comment line="880">
                    6190768 pressing pg-down on AWT multiple selection list selects the items but no item event is triggered, on XToolkit                    
                </comment>
                <comment line="881">
                    Restoring Motif behavior                    
                </comment>
                <comment line="904">
                    Should check if already at end                    
                </comment>
                <comment line="909">
                    6190778 CTRL + HOME, CTRL + END keys do not work properly for list on XToolkit                    
                </comment>
                <comment line="910">
                    Restoring Motif behavior                    
                </comment>
                <comment line="944">
                    Fixed 6299853: XToolkit: Pressing space triggers ItemStateChanged event after List.removeAll called                    
                </comment>
                <comment line="945">
                    If getFocusIndex() is less than 0, the event will not be triggered when space pressed                    
                </comment>
                <comment line="952">
                    Spacebar only deselects for multi-select Lists                    
                </comment>
                <comment line="960">
                    Note: this changes the Solaris/Linux                    
                </comment>
                <comment line="961">
                    behavior to match that of win32.                    
                </comment>
                <comment line="962">
                    That is, pressing space bar on a                    
                </comment>
                <comment line="963">
                    single-select list when the focused                    
                </comment>
                <comment line="964">
                    item is already selected does NOT                    
                </comment>
                <comment line="965">
                    send an ItemEvent.SELECTED event.                    
                </comment>
                <comment line="974">
                    It looks to me like there are bugs as well as inconsistencies                    
                </comment>
                <comment line="975">
                    in the way the Enter key is handled by both Solaris and Windows.                    
                </comment>
                <comment line="976">
                    So for now in XAWT, I&apos;m going to simply go by what the List docs                    
                </comment>
                <comment line="977">
                    say: &quot;AWT also generates an action event when the user presses                    
                </comment>
                <comment line="978">
                    the return key while an item in the list is selected.&quot;                    
                </comment>
                <comment line="984">
                    ActionEvent doesn&apos;t have                    
                </comment>
                <comment line="985">
                    extended modifiers.                    
                </comment>
                <declaration name="keyCode" type="int" line="810"/>
                <scope line="815">
                    <scope line="819"/>
                    <scope line="826"/>
                    <scope line="829"/>
                </scope>
                <scope line="836">
                    <scope line="840"/>
                    <scope line="847"/>
                    <scope line="850"/>
                </scope>
                <scope line="855">
                    <declaration name="previousValue" type="int" line="857"/>
                    <declaration name="currentValue" type="int" line="859"/>
                    <scope line="862">
                        <scope line="864"/>
                    </scope>
                </scope>
                <scope line="875">
                    <declaration name="previousValue" type="int" line="877"/>
                    <declaration name="currentValue" type="int" line="879"/>
                    <scope line="882">
                        <scope line="884"/>
                    </scope>
                </scope>
                <scope line="897"/>
                <scope line="904"/>
                <scope line="914"/>
                <scope line="918"/>
                <scope line="930"/>
                <scope line="934"/>
                <scope line="946"/>
                <declaration name="isSelected" type="boolean" line="950"/>
                <scope line="953"/>
                <scope line="960"/>
                <scope line="979"/>
            </method>
            <javadoc line="991">
                return value from the scrollbar                
            </javadoc>
            <method name="notifyValue" type="void" line="994">
                <params>
                    <param name="obj" type="XScrollbar"/>
                    <param name="type" type="int"/>
                    <param name="v" type="int"/>
                    <param name="isAdjusting" type="boolean"/>
                </params>
                <comment line="1001">
                    See 6243382 for more information                    
                </comment>
                <comment line="1008">
                    Scrolling select() should also set the focus index                    
                </comment>
                <comment line="1009">
                    Otherwise, the updating of the &apos;focusIndex&apos; variable will be incorrect                    
                </comment>
                <comment line="1010">
                    if user drag mouse out of the area of the list                    
                </comment>
                <declaration name="value" type="int" line="997"/>
                <scope line="998">
                    <declaration name="oldSel" type="int" line="1002"/>
                    <declaration name="newSel" type="int" line="1003"/>
                    <scope line="1004"/>
                </scope>
                <scope line="1015"/>
            </method>
            <javadoc line="1021">
                deselect all items in List                
            </javadoc>
            <method name="deselectAllItems" type="void" line="1024"/>
            <javadoc line="1029">
                set multiple selections                
            </javadoc>
            <method name="setMultipleSelections" type="void" line="1032">
                <params>
                    <param name="v" type="boolean"/>
                </params>
                <scope line="1033">
                    <scope line="1034">
                        <declaration name="selPos" type="int" line="1035"/>
                        <scope line="1037"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="1045">
                add an item
                  if the index of the item is &lt; 0 or &gt;= than items.size()
                  then add the item to the end of the list                
            </javadoc>
            <method name="addItem" type="void" line="1050">
                <params>
                    <param name="item" type="String"/>
                    <param name="i" type="int"/>
                </params>
                <comment line="1055">
                    Index where the new item ended up                    
                </comment>
                <comment line="1060">
                    Why we set this variable to -1 in spite of the fact that selected[] is changed in other way?                    
                </comment>
                <comment line="1061">
                    It&apos;s not clear how to reproduce incorrect behaviour based on this assignment                    
                </comment>
                <comment line="1062">
                    since before using this variable (mouseReleased) we certainly update it to correct value                    
                </comment>
                <comment line="1063">
                    So we don&apos;t modify this behaviour now                    
                </comment>
                <comment line="1068">
                    fix the math for the paintItems test                    
                </comment>
                <comment line="1081">
                    Update maxLength                    
                </comment>
                <comment line="1088">
                    Scrollbars are being added or removed, so we must repaint all                    
                </comment>
                <declaration name="oldMaxLength" type="int" line="1051"/>
                <declaration name="hsbWasVis" type="boolean" line="1052"/>
                <declaration name="vsbWasVis" type="boolean" line="1053"/>
                <declaration name="addedIndex" type="int" line="1055"/>
                <scope line="1056"/>
                <scope line="1066"/>
                <scope line="1070">
                    <scope line="1073">
                        <scope line="1074"/>
                    </scope>
                </scope>
                <declaration name="repaintItems" type="boolean" line="1082"/>
                <declaration name="options" type="int" line="1086"/>
                <scope line="1087"/>
                <scope line="1091"/>
            </method>
            <javadoc line="1102">
                delete items starting with s (start position) to e (end position) including s and e
                  if s &lt; 0 then s = 0
                  if e &gt;= items.size() then e = items.size() - 1                
            </javadoc>
            <method name="delItems" type="void" line="1107">
                <params>
                    <param name="s" type="int"/>
                    <param name="e" type="int"/>
                </params>
                <comment line="1108">
                    save the current state of the scrollbars                    
                </comment>
                <comment line="1122">
                    if user passed in flipped args, reverse them                    
                </comment>
                <comment line="1129">
                    check for starting point less than zero                    
                </comment>
                <comment line="1134">
                    check for end point greater than the size of the list                    
                </comment>
                <comment line="1139">
                    determine whether we&apos;re going to delete any visible elements                    
                </comment>
                <comment line="1140">
                    repaint must also be done if scrollbars appear/disappear, which                    
                </comment>
                <comment line="1141">
                    can happen from removing a non-showing list item                    
                </comment>
                <comment line="1142">
                    boolean repaintNeeded =
                    ((s &lt;= lastItemDisplayed()) &amp;&amp; (e &gt;= vsb.getValue()));                    
                </comment>
                <comment line="1148">
                    delete the items out of the items list and out of the selected list                    
                </comment>
                <comment line="1161">
                    update the indexes in the selected array                    
                </comment>
                <comment line="1170">
                    focusedIndex updating according to native (Window, Motif) behaviour                    
                </comment>
                <comment line="1175">
                    Fixed 6299858: PIT. Focused border not shown on List if selected item is removed, XToolkit                    
                </comment>
                <comment line="1176">
                    We should set focus to new first item if the current first item was removed                    
                </comment>
                <comment line="1177">
                    except if the list is empty                    
                </comment>
                <comment line="1185">
                    update vsb.val                    
                </comment>
                <comment line="1197">
                    Width of the items changed affecting the range of                    
                </comment>
                <comment line="1198">
                    horizontal scrollbar                    
                </comment>
                <comment line="1202">
                    If scrollbars visibility changed                    
                </comment>
                <declaration name="hsbWasVisible" type="boolean" line="1109"/>
                <declaration name="vsbWasVisible" type="boolean" line="1110"/>
                <declaration name="oldLastDisplayed" type="int" line="1111"/>
                <scope line="1118"/>
                <scope line="1123">
                    <declaration name="tmp" type="int" line="1124"/>
                </scope>
                <scope line="1130"/>
                <scope line="1135"/>
                <declaration name="repaintNeeded" type="boolean" line="1146"/>
                <scope line="1149">
                    <declaration name="j" type="int" line="1151"/>
                    <scope line="1152">
                        <declaration name="newsel" type="int" line="1153"/>
                    </scope>
                </scope>
                <declaration name="diff" type="int" line="1162"/>
                <scope line="1163">
                    <scope line="1164"/>
                </scope>
                <declaration name="options" type="int" line="1169"/>
                <scope line="1171"/>
                <scope line="1174">
                    <declaration name="focusBound" type="int" line="1178"/>
                </scope>
                <scope line="1186">
                    <scope line="1187"/>
                    <scope line="1189"/>
                </scope>
                <declaration name="oldMaxLength" type="int" line="1194"/>
                <scope line="1196"/>
                <scope line="1203"/>
            </method>
            <javadoc line="1209">
                ListPeer method                
            </javadoc>
            <method name="select" type="void" line="1212">
                <params>
                    <param name="index" type="int"/>
                </params>
                <comment line="1213">
                    Programmatic select() should also set the focus index                    
                </comment>
            </method>
            <javadoc line="1219">
                select the index
                  redraw the list to the screen                
            </javadoc>
            <method name="selectItem" type="void" line="1223">
                <params>
                    <param name="index" type="int"/>
                </params>
                <comment line="1224">
                    NOTE: instead of recalculating and the calling repaint(), painting                    
                </comment>
                <comment line="1225">
                    is done immediately                    
                </comment>
                <comment line="1227">
                    6190746 List does not trigger ActionEvent when double clicking a programmatically selected item, XToolkit                    
                </comment>
                <comment line="1228">
                    If we invoke select(int) before setVisible(boolean), then variable currentIndex will equals -1. At the same time isSelected may be true.                    
                </comment>
                <comment line="1229">
                    Restoring Motif behavior                    
                </comment>
                <comment line="1236">
                    No current selection                    
                </comment>
                <comment line="1244">
                    Only bother painting if item is visible (4895367)                    
                </comment>
                <comment line="1249">
                    insert &quot;index&quot; into the selection array                    
                </comment>
                <comment line="1261">
                    Only bother painting if item is visible (4895367)                    
                </comment>
                <scope line="1232"/>
                <scope line="1235">
                    <scope line="1236"/>
                    <scope line="1240">
                        <declaration name="oldSel" type="int" line="1241"/>
                        <scope line="1243"/>
                    </scope>
                </scope>
                <scope line="1248">
                    <declaration name="newsel" type="int" line="1250"/>
                    <declaration name="i" type="int" line="1251"/>
                    <scope line="1252"/>
                </scope>
                <scope line="1260"/>
            </method>
            <javadoc line="1266">
                ListPeer method
                  focusedIndex isn&apos;t updated according to native (Window, Motif) behaviour                
            </javadoc>
            <method name="deselect" type="void" line="1270">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <javadoc line="1274">
                deselect the index
                  redraw the list to the screen                
            </javadoc>
            <method name="deselectItem" type="void" line="1278">
                <params>
                    <param name="index" type="int"/>
                </params>
                <comment line="1283">
                    TODO: keep an int[0] and int[1] around and just use them instead                    
                </comment>
                <comment line="1284">
                    creating new ones all the time                    
                </comment>
                <comment line="1295">
                    Only bother repainting if item is visible                    
                </comment>
                <scope line="1279"/>
                <scope line="1282"/>
                <scope line="1286">
                    <declaration name="i" type="int" line="1287"/>
                    <declaration name="newsel" type="int" line="1288"/>
                </scope>
                <scope line="1294"/>
            </method>
            <javadoc line="1300">
                ensure that the given index is visible, scrolling the List
                  if necessary, or doing nothing if the item is already visible.
                  The List must be repainted for changes to be visible.                
            </javadoc>
            <method name="makeVisible" type="void" line="1305">
                <params>
                    <param name="index" type="int"/>
                </params>
                <comment line="1309">
                    Do I really need to call this?                    
                </comment>
                <comment line="1310">
                    If index is above the top, scroll up                    
                </comment>
                <comment line="1314">
                    If index is below the bottom, scroll down                    
                </comment>
                <scope line="1306"/>
                <scope line="1309">
                    <scope line="1311"/>
                    <scope line="1315">
                        <declaration name="val" type="int" line="1316"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="1322">
                clear                
            </javadoc>
            <method name="clear" type="void" line="1325">
                <comment line="1329">
                    Fixed 6291736: ITEM_STATE_CHANGED triggered after List.removeAll(), XToolkit                    
                </comment>
                <comment line="1330">
                    We should update &apos;focusIndex&apos; variable more carefully                    
                </comment>
            </method>
            <javadoc line="1338">
                return the selected indexes                
            </javadoc>
            <method name="getSelectedIndexes" type="int[]" line="1341"/>
            <javadoc line="1345">
                return the y value of the given index &quot;i&quot;.
                  the y value represents the top of the text
                  NOTE: index can be larger than items.size as long
                  as it can fit the window                
            </javadoc>
            <method name="index2y" type="int" line="1351">
                <params>
                    <param name="index" type="int"/>
                </params>
                <comment line="1354">
                    if (index &lt; vsb.getValue() || index &gt; vsb.getValue() + itemsInWindow()) {                    
                </comment>
                <declaration name="h" type="int" line="1352"/>
            </method>
            <method name="validY" type="boolean" line="1361">
                <params>
                    <param name="y" type="int"/>
                </params>
                <declaration name="shown" type="int" line="1363"/>
                <declaration name="lastY" type="int" line="1364"/>
                <scope line="1366"/>
                <scope line="1370"/>
            </method>
            <javadoc line="1377">
                return the position of the index in the selected array
                  if the index isn&apos;t in the array selected return -1;                
            </javadoc>
            <method name="posInSel" type="int" line="1381">
                <params>
                    <param name="index" type="int"/>
                </params>
                <scope line="1382">
                    <scope line="1383"/>
                </scope>
            </method>
            <method name="isIndexDisplayed" type="boolean" line="1390">
                <params>
                    <param name="idx" type="int"/>
                </params>
                <declaration name="lastDisplayed" type="int" line="1391"/>
            </method>
            <javadoc line="1397">
                returns index of last item displayed in the List                
            </javadoc>
            <method name="lastItemDisplayed" type="int" line="1400">
                <declaration name="n" type="int" line="1401"/>
            </method>
            <javadoc line="1405">
                returns whether the given index is currently scrolled off the top or
                  bottom of the List.                
            </javadoc>
            <method name="isItemHidden" type="boolean" line="1409">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <javadoc line="1414">
                returns the width of the list portion of the component (accounts for
                  presence of vertical scrollbar)                
            </javadoc>
            <method name="getListWidth" type="int" line="1418"/>
            <javadoc line="1422">
                returns number of  items actually displayed in the List                
            </javadoc>
            <method name="itemsDisplayed" type="int" line="1425"/>
            <javadoc line="1431">
                scrollVertical
                  y is the number of items to scroll                
            </javadoc>
            <method name="scrollVertical" type="void" line="1435">
                <params>
                    <param name="y" type="int"/>
                </params>
                <declaration name="itemsInWin" type="int" line="1437"/>
                <declaration name="h" type="int" line="1438"/>
                <declaration name="pixelsToScroll" type="int" line="1439"/>
                <scope line="1441"/>
                <declaration name="source" type="Rectangle" line="1446"/>
                <declaration name="distance" type="Point" line="1447"/>
                <declaration name="firstItem" type="int" line="1448"/>
                <declaration name="options" type="int" line="1449"/>
                <scope line="1450">
                    <scope line="1451"/>
                </scope>
                <scope line="1459">
                    <scope line="1460"/>
                </scope>
            </method>
            <javadoc line="1471">
                scrollHorizontal
                  x is the number of pixels to scroll                
            </javadoc>
            <method name="scrollHorizontal" type="void" line="1475">
                <params>
                    <param name="x" type="int"/>
                </params>
                <declaration name="w" type="int" line="1477"/>
                <declaration name="h" type="int" line="1479"/>
                <declaration name="options" type="int" line="1482"/>
                <declaration name="source" type="Rectangle" line="1484"/>
                <declaration name="distance" type="Point" line="1485"/>
                <scope line="1486"/>
                <scope line="1490"/>
            </method>
            <javadoc line="1498">
                return the index                
            </javadoc>
            <method name="y2index" type="int" line="1501">
                <params>
                    <param name="y" type="int"/>
                </params>
                <scope line="1502"/>
                <declaration name="i" type="int" line="1506"/>
                <declaration name="last" type="int" line="1507"/>
                <scope line="1509"/>
            </method>
            <javadoc line="1517">
                is the index &quot;index&quot; selected                
            </javadoc>
            <method name="isSelected" type="boolean" line="1520">
                <params>
                    <param name="index" type="int"/>
                </params>
                <scope line="1521"/>
                <scope line="1524">
                    <scope line="1525"/>
                </scope>
            </method>
            <javadoc line="1532">
                return the number of items that can fit
                  in the current window                
            </javadoc>
            <method name="itemsInWindow" type="int" line="1536">
                <params>
                    <param name="scrollbarVisible" type="boolean"/>
                </params>
                <declaration name="h" type="int" line="1537"/>
                <scope line="1538"/>
                <scope line="1540"/>
            </method>
            <method name="itemsInWindow" type="int" line="1546"/>
            <javadoc line="1550">
                return true if the x and y position is in the horizontal scrollbar                
            </javadoc>
            <method name="inHorizontalScrollbar" type="boolean" line="1553">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <declaration name="w" type="int" line="1554"/>
                <declaration name="h" type="int" line="1555"/>
            </method>
            <javadoc line="1559">
                return true if the x and y position is in the verticalscrollbar                
            </javadoc>
            <method name="inVerticalScrollbar" type="boolean" line="1562">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <declaration name="w" type="int" line="1563"/>
                <declaration name="h" type="int" line="1564"/>
            </method>
            <javadoc line="1568">
                return true if the x and y position is in the window                
            </javadoc>
            <method name="inWindow" type="boolean" line="1571">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <declaration name="w" type="int" line="1572"/>
                <declaration name="h" type="int" line="1573"/>
            </method>
            <javadoc line="1577">
                return true if vertical scrollbar is visible and false otherwise;
                  hsbVisible is the visibility of the horizontal scrollbar                
            </javadoc>
            <method name="vsbIsVisible" type="boolean" line="1581">
                <params>
                    <param name="hsbVisible" type="boolean"/>
                </params>
            </method>
            <javadoc line="1585">
                return true if horizontal scrollbar is visible and false otherwise;
                  vsbVisible is the visibility of the vertical scrollbar                
            </javadoc>
            <method name="hsbIsVisible" type="boolean" line="1589">
                <params>
                    <param name="vsbVisible" type="boolean"/>
                </params>
                <declaration name="w" type="int" line="1590"/>
            </method>
            <method name="prePostEvent" type="boolean" line="1598">
                <params>
                    <param name="e" type="AWTEvent"/>
                </params>
                <scope line="1599"/>
            </method>
            <method name="prePostMouseEvent" type="boolean" line="1612">
                <params>
                    <param name="me" type="MouseEvent"/>
                </params>
                <comment line="1621">
                    only for performance improvement                    
                </comment>
                <scope line="1613"/>
                <declaration name="eventId" type="int" line="1617"/>
                <scope line="1620"/>
                <scope line="1625">
                    <scope line="1626"/>
                </scope>
                <scope line="1635">
                    <scope line="1636"/>
                </scope>
            </method>
            <method name="handleJavaMouseEventOnEDT" type="void" line="1648">
                <params>
                    <param name="me" type="MouseEvent"/>
                </params>
                <anonymous_class line="1649">
                    <method name="run" type="void" line="1650"/>
                </anonymous_class>
            </method>
            <method name="setFont" type="void" line="1661">
                <params>
                    <param name="f" type="Font"/>
                </params>
            </method>
            <class name="ListPainter" line="1668">
                <javadoc line="1668">
                    Sometimes painter is called on Toolkit thread, so the lock sequence is:
                      awtLock -&gt; Painter -&gt; awtLock
                      Sometimes it is called on other threads:
                      Painter -&gt; awtLock
                      Since we can&apos;t guarantee the sequence, use awtLock.                    
                </javadoc>
                <declaration name="buffer" type="VolatileImage" line="1676"/>
                <declaration name="colors" type="Color[]" line="1677"/>
                <method name="getListForeground" type="Color" line="1679">
                    <scope line="1680"/>
                    <scope line="1683"/>
                </method>
                <method name="getListBackground" type="Color" line="1687">
                    <scope line="1688"/>
                    <scope line="1691"/>
                </method>
                <method name="getDisabledColor" type="Color" line="1696">
                    <declaration name="backgroundColor" type="Color" line="1697"/>
                    <declaration name="foregroundColor" type="Color" line="1698"/>
                </method>
                <method name="createBuffer" type="boolean" line="1702">
                    <comment line="1713">
                        use GraphicsConfig.cCVI() instead of Component.cVI(),                        
                    </comment>
                    <comment line="1714">
                        because the latter may cause a deadlock with the tree lock                        
                    </comment>
                    <declaration name="localBuffer" type="VolatileImage" line="1703"/>
                    <scope line="1705"/>
                    <scope line="1707"/>
                    <scope line="1711"/>
                    <scope line="1720">
                        <scope line="1721"/>
                    </scope>
                    <scope line="1725"/>
                </method>
                <method name="invalidate" type="void" line="1731">
                    <scope line="1733">
                        <scope line="1734"/>
                    </scope>
                    <scope line="1738"/>
                </method>
                <method name="paint" type="void" line="1743">
                    <params>
                        <param name="listG" type="Graphics"/>
                        <param name="firstItem" type="int"/>
                        <param name="lastItem" type="int"/>
                        <param name="options" type="int"/>
                    </params>
                </method>
                <method name="paint" type="void" line="1748">
                    <params>
                        <param name="listG" type="Graphics"/>
                        <param name="firstItem" type="int"/>
                        <param name="lastItem" type="int"/>
                        <param name="options" type="int"/>
                        <param name="source" type="Rectangle"/>
                        <param name="distance" type="Point"/>
                    </params>
                    <comment line="1764">
                        First time created buffer should be painted over at full.                        
                    </comment>
                    <comment line="1781">
                        Note that the order of the following painting operations                        
                    </comment>
                    <comment line="1782">
                        should not be modified                        
                    </comment>
                    <comment line="1786">
                        hiding the focus rectangle must be done prior to copying                        
                    </comment>
                    <comment line="1787">
                        area and so this is the first action to be performed                        
                    </comment>
                    <comment line="1791">
                        The shift of the component contents occurs while someone
                         scrolls the component, the only purpose of the shift is to
                         increase the painting performance. The shift should be done
                         prior to painting any area (except hiding focus) and actually
                         it should never be done jointly with erase background.                        
                    </comment>
                    <comment line="1804">
                        Since we made full erase update items                        
                    </comment>
                    <scope line="1750">
                        <declaration name="t" type="int" line="1751"/>
                    </scope>
                    <scope line="1755"/>
                    <declaration name="localBuffer" type="VolatileImage" line="1759"/>
                    <scope line="1760">
                        <scope line="1762">
                            <scope line="1763"/>
                        </scope>
                        <scope line="1768"/>
                        <declaration name="g" type="Graphics" line="1779"/>
                        <scope line="1783">
                            <scope line="1788"/>
                            <scope line="1798"/>
                            <scope line="1802"/>
                            <scope line="1808"/>
                            <scope line="1811"/>
                            <scope line="1815"/>
                            <scope line="1819"/>
                        </scope>
                        <scope line="1822"/>
                    </scope>
                </method>
                <method name="paintBackground" type="void" line="1829">
                    <params>
                        <param name="g" type="Graphics"/>
                    </params>
                </method>
                <method name="paintItems" type="void" line="1837">
                    <params>
                        <param name="g" type="Graphics"/>
                        <param name="firstItem" type="int"/>
                        <param name="lastItem" type="int"/>
                        <param name="options" type="int"/>
                    </params>
                    <scope line="1841">
                        <declaration name="t" type="int" line="1842"/>
                    </scope>
                    <scope line="1851"/>
                </method>
                <method name="paintItem" type="void" line="1856">
                    <params>
                        <param name="g" type="Graphics"/>
                        <param name="index" type="int"/>
                    </params>
                    <comment line="1858">
                        4895367 - only paint items which are visible                        
                    </comment>
                    <comment line="1868">
                        Always paint the background so that focus is unpainted in                        
                    </comment>
                    <comment line="1869">
                        multiselect mode                        
                    </comment>
                    <comment line="1890">
                        Clear the remaining area around the item - focus area and the rest of border                        
                    </comment>
                    <scope line="1859">
                        <declaration name="clip" type="Shape" line="1860"/>
                        <declaration name="w" type="int" line="1861"/>
                        <declaration name="h" type="int" line="1862"/>
                        <declaration name="y" type="int" line="1863"/>
                        <declaration name="x" type="int" line="1864"/>
                        <scope line="1870"/>
                        <scope line="1873"/>
                        <scope line="1879">
                            <scope line="1880"/>
                            <scope line="1882"/>
                            <scope line="1884"/>
                            <declaration name="str" type="String" line="1887"/>
                        </scope>
                        <scope line="1889"/>
                    </scope>
                </method>
                <method name="paintScrollBar" type="void" line="1899">
                    <params>
                        <param name="scr" type="XScrollbar"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                        <param name="paintAll" type="boolean"/>
                    </params>
                </method>
                <javadoc line="1907">
                    Paint the horizontal scrollbar to the screen                    
                    <param>
                        g the graphics context to draw into                        
                    </param>
                    <param>
                        colors the colors used to draw the scrollbar                        
                    </param>
                    <param>
                        paintAll paint the whole scrollbar if true, just the thumb if false                        
                    </param>
                </javadoc>
                <method name="paintHorScrollbar" type="void" line="1914">
                    <params>
                        <param name="g" type="Graphics"/>
                        <param name="paintAll" type="boolean"/>
                    </params>
                    <declaration name="w" type="int" line="1915"/>
                </method>
                <javadoc line="1919">
                    Paint the vertical scrollbar to the screen                    
                    <param>
                        g the graphics context to draw into                        
                    </param>
                    <param>
                        colors the colors used to draw the scrollbar                        
                    </param>
                    <param>
                        paintAll paint the whole scrollbar if true, just the thumb if false                        
                    </param>
                </javadoc>
                <method name="paintVerScrollbar" type="void" line="1926">
                    <params>
                        <param name="g" type="Graphics"/>
                        <param name="paintAll" type="boolean"/>
                    </params>
                    <declaration name="h" type="int" line="1927"/>
                </method>
                <declaration name="prevFocusRect" type="Rectangle" line="1932"/>
                <method name="paintFocus" type="void" line="1933">
                    <params>
                        <param name="g" type="Graphics"/>
                        <param name="options" type="int"/>
                    </params>
                    <comment line="1945">
                        Erase focus rect                        
                    </comment>
                    <comment line="1952">
                        Paint new                        
                    </comment>
                    <comment line="1954">
                        Focus color is always black on Linux                        
                    </comment>
                    <declaration name="paintFocus" type="boolean" line="1934"/>
                    <scope line="1935"/>
                    <declaration name="clip" type="Shape" line="1940"/>
                    <declaration name="rect" type="Rectangle" line="1943"/>
                    <scope line="1944"/>
                    <scope line="1951"/>
                </method>
            </class>
        </class>
    </source>