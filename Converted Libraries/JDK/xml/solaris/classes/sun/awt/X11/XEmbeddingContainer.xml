<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt"/>
        <import package="java.util.HashMap"/>
        <import package="java.awt.event.KeyEvent"/>
        <import package="java.lang.reflect"/>
        <import package="sun.awt.SunToolkit"/>
        <class name="XEmbeddingContainer" line="34">
            <extends class="XEmbedHelper"/>
            <implements interface="XEventDispatcher"/>
            <declaration name="children" type="HashMap" line="35"/>
            <method name="XEmbeddingContainer" type="constructor" line="37"/>
            <declaration name="embedder" type="XWindow" line="40"/>
            <method name="install" type="void" line="41">
                <params>
                    <param name="embedder" type="XWindow"/>
                </params>
            </method>
            <method name="deinstall" type="void" line="45"/>
            <method name="add" type="void" line="49">
                <params>
                    <param name="child" type="long"/>
                </params>
                <scope line="50">
                    <declaration name="proxy" type="Component" line="51"/>
                    <scope line="53"/>
                </scope>
            </method>
            <method name="createChildProxy" type="Component" line="59">
                <params>
                    <param name="child" type="long"/>
                </params>
            </method>
            <method name="notifyChildEmbedded" type="void" line="62">
                <params>
                    <param name="child" type="long"/>
                </params>
            </method>
            <method name="childResized" type="void" line="66">
                <params>
                    <param name="child" type="Component"/>
                </params>
            </method>
            <method name="checkXEmbed" type="boolean" line="69">
                <params>
                    <param name="child" type="long"/>
                </params>
                <declaration name="data" type="long" line="70"/>
                <scope line="71">
                    <scope line="72">
                        <declaration name="protocol" type="int" line="73"/>
                        <declaration name="flags" type="int" line="74"/>
                    </scope>
                </scope>
                <scope line="77"/>
            </method>
            <method name="detachChild" type="void" line="83">
                <params>
                    <param name="child" type="long"/>
                </params>
                <comment line="84">
                    The embedder can unmap the client and reparent the client window                    
                </comment>
                <comment line="85">
                    to the root window. If the client receives an ReparentNotify                    
                </comment>
                <comment line="86">
                    event, it should check the parent field of the XReparentEvent                    
                </comment>
                <comment line="87">
                    structure. If this is the root window of the window&apos;s screen, then                    
                </comment>
                <comment line="88">
                    the protocol is finished and there is no further interaction. If                    
                </comment>
                <comment line="89">
                    it is a window other than the root window, then the protocol                    
                </comment>
                <comment line="90">
                    continues with the new parent acting as the embedder window.                    
                </comment>
                <scope line="92"/>
                <scope line="96"/>
            </method>
            <method name="focusGained" type="void" line="101">
                <params>
                    <param name="child" type="long"/>
                </params>
            </method>
            <method name="focusLost" type="void" line="104">
                <params>
                    <param name="child" type="long"/>
                </params>
            </method>
            <method name="getChild" type="XEmbedChildProxyPeer" line="108">
                <params>
                    <param name="child" type="long"/>
                </params>
            </method>
            <method name="handleClientMessage" type="void" line="111">
                <params>
                    <param name="xev" type="XEvent"/>
                </params>
                <comment line="116">
                    Unspecified                    
                </comment>
                <declaration name="msg" type="XClientMessageEvent" line="112"/>
                <scope line="113">
                    <declaration name="child" type="long" line="116"/>
                </scope>
            </method>
            <method name="dispatchEvent" type="void" line="122">
                <params>
                    <param name="xev" type="XEvent"/>
                </params>
            </method>
            <declaration name="bdata" type="Field" line="130"/>
            <method name="getBData" type="byte[]" line="131">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
                <scope line="132">
                    <scope line="133"/>
                </scope>
                <scope line="137"/>
            </method>
            <method name="forwardKeyEvent" type="void" line="142">
                <params>
                    <param name="child" type="long"/>
                    <param name="e" type="KeyEvent"/>
                </params>
                <declaration name="bdata" type="byte[]" line="143"/>
                <declaration name="data" type="long" line="144"/>
                <scope line="145"/>
                <declaration name="ke" type="XKeyEvent" line="148"/>
                <scope line="151"/>
                <scope line="154"/>
            </method>
        </class>
    </source>