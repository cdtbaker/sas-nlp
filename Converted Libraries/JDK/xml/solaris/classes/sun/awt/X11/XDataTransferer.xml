<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt.Image"/>
        <import package="java.awt.datatransfer.DataFlavor"/>
        <import package="java.awt.datatransfer.Transferable"/>
        <import package="java.awt.datatransfer.UnsupportedFlavorException"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.awt.image.ColorModel"/>
        <import package="java.awt.image.WritableRaster"/>
        <import package="java.io.BufferedReader"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.InputStreamReader"/>
        <import package="java.io.IOException"/>
        <import package="java.net.URI"/>
        <import package="java.net.URISyntaxException"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="javax.imageio.ImageIO"/>
        <import package="javax.imageio.ImageTypeSpecifier"/>
        <import package="javax.imageio.ImageWriter"/>
        <import package="javax.imageio.spi.ImageWriterSpi"/>
        <import package="sun.awt.datatransfer.DataTransferer"/>
        <import package="sun.awt.datatransfer.ToolkitThreadBlockedHandler"/>
        <import package="java.io.ByteArrayOutputStream"/>
        <class name="XDataTransferer" line="25">
            <extends class="DataTransferer"/>
            <javadoc line="25">
                Platform-specific support for the data transfer subsystem.                
            </javadoc>
            <declaration name="FILE_NAME_ATOM" type="XAtom" line="29"/>
            <declaration name="DT_NET_FILE_ATOM" type="XAtom" line="30"/>
            <declaration name="PNG_ATOM" type="XAtom" line="31"/>
            <declaration name="JFIF_ATOM" type="XAtom" line="32"/>
            <declaration name="TARGETS_ATOM" type="XAtom" line="33"/>
            <declaration name="INCR_ATOM" type="XAtom" line="34"/>
            <declaration name="MULTIPLE_ATOM" type="XAtom" line="35"/>
            <javadoc line="36">
                Singleton constructor                
            </javadoc>
            <method name="XDataTransferer" type="constructor" line="39"/>
            <declaration name="transferer" type="XDataTransferer" line="41"/>
            <method name="getInstanceImpl" type="XDataTransferer" line="42">
                <scope line="43">
                    <scope line="44"/>
                </scope>
            </method>
            <method name="getDefaultUnicodeEncoding" type="String" line="50"/>
            <method name="isLocaleDependentTextFormat" type="boolean" line="53">
                <params>
                    <param name="format" type="long"/>
                </params>
            </method>
            <method name="isTextFormat" type="boolean" line="56">
                <params>
                    <param name="format" type="long"/>
                </params>
            </method>
            <method name="getCharsetForTextFormat" type="String" line="59">
                <params>
                    <param name="lFormat" type="Long"/>
                </params>
                <declaration name="format" type="long" line="60"/>
                <scope line="61">
                    <declaration name="nat" type="String" line="62"/>
                    <declaration name="df" type="DataFlavor" line="63"/>
                    <scope line="64"/>
                    <declaration name="charset" type="String" line="67"/>
                    <scope line="68"/>
                </scope>
            </method>
            <method name="isURIListFormat" type="boolean" line="74">
                <params>
                    <param name="format" type="long"/>
                </params>
                <declaration name="nat" type="String" line="75"/>
                <scope line="76"/>
                <scope line="79">
                    <declaration name="df" type="DataFlavor" line="80"/>
                    <scope line="81"/>
                </scope>
                <scope line="85"/>
            </method>
            <method name="isFileFormat" type="boolean" line="89">
                <params>
                    <param name="format" type="long"/>
                </params>
            </method>
            <method name="isImageFormat" type="boolean" line="92">
                <params>
                    <param name="format" type="long"/>
                </params>
            </method>
            <method name="getFormatForNativeAsLong" type="Long" line="95">
                <params>
                    <param name="str" type="String"/>
                </params>
                <declaration name="atom" type="long" line="96"/>
            </method>
            <method name="getNativeForFormat" type="String" line="99">
                <params>
                    <param name="format" type="long"/>
                </params>
            </method>
            <method name="getToolkitThreadBlockedHandler" type="ToolkitThreadBlockedHandler" line="102"/>
            <javadoc line="105">
                Gets an format name for a given format (atom)                
            </javadoc>
            <method name="getTargetNameForAtom" type="String" line="108">
                <params>
                    <param name="atom" type="long"/>
                </params>
            </method>
            <method name="imageToPlatformBytes" type="byte[]" line="111">
                <params>
                    <param name="image" type="Image"/>
                    <param name="format" type="long"/>
                </params>
                <declaration name="mimeType" type="String" line="112"/>
                <scope line="113"/>
                <scope line="116"/>
                <scope line="119">
                    <scope line="120">
                        <declaration name="nat" type="String" line="121"/>
                        <declaration name="df" type="DataFlavor" line="122"/>
                        <declaration name="primaryType" type="String" line="123"/>
                        <scope line="124"/>
                    </scope>
                    <scope line="128"/>
                </scope>
                <scope line="131"/>
                <scope line="134">
                    <declaration name="nativeFormat" type="String" line="135"/>
                </scope>
            </method>
            <method name="convertFileListToBytes" type="ByteArrayOutputStream" line="139">
                <params>
                    <param name="fileList" type="ArrayList<String>"/>
                </params>
                <declaration name="bos" type="ByteArrayOutputStream" line="140"/>
                <scope line="141">
                    <declaration name="bytes" type="byte[]" line="142"/>
                </scope>
            </method>
            <javadoc line="148">
                Translates either a byte array or an input stream which contain
                  platform-specific image data in the given format into an Image.                
            </javadoc>
            <method name="platformImageBytesOrStreamToImage" type="Image" line="152">
                <params>
                    <param name="inputStream" type="InputStream"/>
                    <param name="bytes" type="byte[]"/>
                    <param name="format" type="long"/>
                </params>
                <declaration name="mimeType" type="String" line="153"/>
                <scope line="154"/>
                <scope line="157"/>
                <scope line="160">
                    <scope line="161">
                        <declaration name="nat" type="String" line="162"/>
                        <declaration name="df" type="DataFlavor" line="163"/>
                        <declaration name="primaryType" type="String" line="164"/>
                        <scope line="165"/>
                    </scope>
                    <scope line="169"/>
                </scope>
                <scope line="172"/>
                <scope line="175">
                    <declaration name="nativeFormat" type="String" line="176"/>
                </scope>
            </method>
            <method name="dragQueryFile" type="String[]" line="180">
                <params>
                    <param name="bytes" type="byte[]"/>
                </params>
                <scope line="182"/>
                <scope line="185"/>
            </method>
            <method name="dragQueryURIs" type="URI[]" line="189">
                <params>
                    <param name="stream" type="InputStream"/>
                    <param name="bytes" type="byte[]"/>
                    <param name="format" type="long"/>
                    <param name="localeTransferable" type="Transferable"/>
                </params>
                <declaration name="charset" type="String" line="190"/>
                <scope line="191">
                    <scope line="192"/>
                    <scope line="195"/>
                </scope>
                <scope line="198"/>
                <scope line="201"/>
                <declaration name="reader" type="BufferedReader" line="204"/>
                <scope line="205">
                    <declaration name="line" type="String" line="207"/>
                    <declaration name="uriList" type="ArrayList&lt;URI&gt;" line="208"/>
                    <declaration name="uri" type="URI" line="209"/>
                    <scope line="210">
                        <scope line="211"/>
                        <scope line="214"/>
                    </scope>
                </scope>
                <scope line="221"/>
            </method>
            <javadoc line="225">
                Returns true if and only if the name of the specified format Atom
                  constitutes a valid MIME type with the specified primary type.                
            </javadoc>
            <method name="isMimeFormat" type="boolean" line="229">
                <params>
                    <param name="format" type="long"/>
                    <param name="primaryType" type="String"/>
                </params>
                <declaration name="nat" type="String" line="230"/>
                <scope line="231"/>
                <scope line="234">
                    <declaration name="df" type="DataFlavor" line="235"/>
                    <scope line="236"/>
                </scope>
                <scope line="240"/>
            </method>
            <method name="getPlatformMappingsForNative" type="List" line="244">
                <params>
                    <param name="nat" type="String"/>
                </params>
                <declaration name="flavors" type="List" line="245"/>
                <scope line="246"/>
                <declaration name="df" type="DataFlavor" line="249"/>
                <scope line="250"/>
                <scope line="253"/>
                <declaration name="value" type="Object" line="256"/>
                <declaration name="primaryType" type="String" line="257"/>
                <declaration name="baseType" type="String" line="258"/>
                <scope line="259"/>
                <scope line="262">
                    <declaration name="readers" type="Iterator" line="263"/>
                    <scope line="264"/>
                </scope>
            </method>
            <declaration name="defaultSpecifier" type="ImageTypeSpecifier" line="271"/>
            <method name="getDefaultImageTypeSpecifier" type="ImageTypeSpecifier" line="272">
                <scope line="273">
                    <declaration name="model" type="ColorModel" line="274"/>
                    <declaration name="raster" type="WritableRaster" line="275"/>
                    <declaration name="bufferedImage" type="BufferedImage" line="276"/>
                </scope>
            </method>
            <method name="getPlatformMappingsForFlavor" type="List" line="281">
                <params>
                    <param name="df" type="DataFlavor"/>
                </params>
                <declaration name="natives" type="List" line="282"/>
                <scope line="283"/>
                <declaration name="charset" type="String" line="286"/>
                <declaration name="baseType" type="String" line="287"/>
                <declaration name="mimeType" type="String" line="288"/>
                <scope line="289"/>
                <scope line="292"/>
                <scope line="295">
                    <declaration name="mimeTypes" type="String[]" line="296"/>
                    <scope line="297">
                        <scope line="298">
                            <declaration name="writers" type="Iterator" line="299"/>
                            <scope line="300">
                                <declaration name="imageWriter" type="ImageWriter" line="301"/>
                                <declaration name="writerSpi" type="ImageWriterSpi" line="302"/>
                                <scope line="303"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="311">
                    <declaration name="iter" type="Iterator" line="312"/>
                    <scope line="313"/>
                    <scope line="316">
                        <declaration name="encoding" type="String" line="317"/>
                        <scope line="318"/>
                    </scope>
                    <scope line="322"/>
                </scope>
            </method>
        </class>
    </source>