<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <import package="sun.awt.X11.XConstants"/>
        <import package="java.util.LinkedList"/>
        <class name="XEmbedServerTester" line="35">
            <comment line="59">
                first rectangle is for the server frame, second is for dummy frame, others are for its children                
            </comment>
            <implements interface="XEventDispatcher"/>
            <javadoc line="35">
                Test XEmbed server implementation. See file:///home/dom/bugs/4931668/test_plan.html for
                  specification and references.                
            </javadoc>
            <declaration name="xembedLog" type="PlatformLogger" line="40"/>
            <declaration name="EVENT_LOCK" type="Object" line="41"/>
            <declaration name="SYSTEM_EVENT_MASK" type="int" line="42"/>
            <declaration name="my_version" type="int" line="43"/>
            <declaration name="xembed" type="XEmbedHelper" line="44"/>
            <declaration name="focused" type="boolean" line="45"/>
            <declaration name="focusedKind" type="int" line="46"/>
            <declaration name="focusedServerComponent" type="int" line="47"/>
            <declaration name="reparent" type="boolean" line="48"/>
            <declaration name="parent" type="long" line="49"/>
            <declaration name="windowActive" type="boolean" line="50"/>
            <declaration name="xembedActive" type="boolean" line="51"/>
            <declaration name="window" type="XBaseWindow" line="52"/>
            <declaration name="eventWaited" type="int" line="53"/>
            <declaration name="mapped" type="int" line="54"/>
            <declaration name="accel_key" type="int" line="55"/>
            <declaration name="initialBounds" type="Rectangle" line="56"/>
            <declaration name="robot" type="Robot" line="57"/>
            <declaration name="serverBounds" type="Rectangle" line="58"/>
            <declaration name="SERVER_BOUNDS" type="int" line="59"/>
            <declaration name="events" type="LinkedList&lt;Integer&gt;" line="61"/>
            <method name="XEmbedServerTester" type="constructor" line="63">
                <params>
                    <param name="serverBounds" type="Rectangle"/>
                    <param name="parent" type="long"/>
                </params>
                <scope line="73"/>
                <scope line="77"/>
                <scope line="80"/>
            </method>
            <method name="getTester" type="XEmbedServerTester" line="87">
                <params>
                    <param name="serverBounds" type="Rectangle"/>
                    <param name="parent" type="long"/>
                </params>
            </method>
            <method name="dumpReceivedEvents" type="void" line="91">
                <declaration name="pos" type="int" line="93"/>
                <scope line="94"/>
            </method>
            <method name="test1_1" type="void" line="100">
                <declaration name="res" type="int" line="101"/>
            </method>
            <method name="test1_2" type="void" line="110">
                <declaration name="res" type="int" line="111"/>
            </method>
            <method name="test1_3" type="void" line="117"/>
            <method name="test1_4" type="void" line="124">
                <declaration name="res" type="int" line="129"/>
            </method>
            <method name="test1_5" type="void" line="135">
                <declaration name="res" type="int" line="136"/>
            </method>
            <method name="test1_6" type="void" line="141">
                <declaration name="res" type="int" line="142"/>
            </method>
            <method name="test1_7" type="void" line="149">
                <declaration name="res" type="int" line="150"/>
            </method>
            <method name="test2_5" type="void" line="157">
                <declaration name="res" type="int" line="158"/>
            </method>
            <method name="test2_6" type="void" line="166">
                <declaration name="res" type="int" line="167"/>
            </method>
            <method name="test3_1" type="void" line="175"/>
            <method name="test3_3" type="void" line="180"/>
            <method name="test3_4" type="void" line="185">
                <scope line="188"/>
            </method>
            <method name="test3_5" type="void" line="193">
                <comment line="197">
                    TODO: how can we detect that XEmbed ended?  So far we are                    
                </comment>
                <comment line="198">
                    just checking that XEmbed server won&apos;t end up with an                    
                </comment>
                <comment line="199">
                    exception, which should end up testing, hopefully.                    
                </comment>
                <comment line="201">
                    Sleep before exiting the tester application                    
                </comment>
            </method>
            <method name="test3_6" type="void" line="205">
                <scope line="210"/>
                <scope line="213"/>
                <declaration name="res" type="int" line="217"/>
                <scope line="222"/>
            </method>
            <method name="test4_1" type="void" line="227">
                <declaration name="res" type="int" line="229"/>
            </method>
            <method name="test4_2" type="void" line="235">
                <declaration name="res" type="int" line="240"/>
            </method>
            <method name="test4_3" type="void" line="247">
                <declaration name="res" type="int" line="248"/>
            </method>
            <method name="test4_4" type="void" line="259">
                <scope line="263"/>
            </method>
            <method name="test6_1_1" type="void" line="268">
                <declaration name="res" type="int" line="272"/>
            </method>
            <method name="test6_1_2" type="void" line="276">
                <declaration name="res" type="int" line="281"/>
                <scope line="283"/>
            </method>
            <method name="test6_1_3" type="void" line="288">
                <declaration name="res" type="int" line="294"/>
                <scope line="296"/>
            </method>
            <method name="test6_1_4" type="void" line="301">
                <declaration name="res" type="int" line="305"/>
                <scope line="307"/>
            </method>
            <method name="test6_2_1" type="void" line="311">
                <declaration name="res" type="int" line="315"/>
            </method>
            <method name="test6_2_2" type="void" line="319">
                <declaration name="res" type="int" line="324"/>
                <scope line="326"/>
            </method>
            <method name="test6_2_3" type="void" line="331">
                <declaration name="res" type="int" line="337"/>
                <scope line="339"/>
            </method>
            <method name="test6_2_4" type="void" line="344">
                <comment line="353">
                    Second event                    
                </comment>
                <declaration name="res" type="int" line="348"/>
                <declaration name="pos" type="int" line="350"/>
                <scope line="351">
                    <scope line="353"/>
                </scope>
            </method>
            <method name="test7_1" type="void" line="359">
                <declaration name="res" type="int" line="361"/>
            </method>
            <method name="test7_2" type="void" line="365">
                <declaration name="res" type="int" line="367"/>
            </method>
            <method name="test9_1" type="void" line="373">
                <declaration name="res" type="int" line="376"/>
            </method>
            <method name="embed" type="int" line="380">
                <declaration name="res" type="int" line="381"/>
                <scope line="383">
                    <declaration name="params" type="XCreateWindowParams" line="384"/>
                    <scope line="398"/>
                </scope>
                <scope line="402"/>
            </method>
            <method name="updateEmbedInfo" type="void" line="408">
                <declaration name="info" type="long[]" line="409"/>
                <declaration name="data" type="long" line="410"/>
                <scope line="411"/>
                <scope line="413"/>
            </method>
            <method name="getEventPos" type="int" line="418">
                <scope line="419"/>
            </method>
            <method name="embedCompletely" type="int" line="424">
                <declaration name="res" type="int" line="426"/>
            </method>
            <method name="requestFocus" type="int" line="431">
                <declaration name="res" type="int" line="433"/>
            </method>
            <method name="requestFocusNoWait" type="int" line="438">
                <declaration name="res" type="int" line="440"/>
            </method>
            <method name="activateServer" type="int" line="444">
                <params>
                    <param name="prev" type="int"/>
                </params>
                <declaration name="res" type="int" line="445"/>
            </method>
            <method name="activateServerNoWait" type="int" line="449">
                <params>
                    <param name="prev" type="int"/>
                </params>
                <declaration name="res" type="int" line="451"/>
                <scope line="452"/>
                <declaration name="loc" type="Point" line="456"/>
            </method>
            <method name="deactivateServer" type="int" line="464">
                <declaration name="res" type="int" line="466"/>
                <declaration name="loc" type="Point" line="467"/>
            </method>
            <method name="focusServer" type="int" line="477">
                <declaration name="weFocused" type="boolean" line="479"/>
                <declaration name="res" type="int" line="480"/>
                <declaration name="loc" type="Point" line="481"/>
                <scope line="488"/>
            </method>
            <method name="focusServerNext" type="int" line="493">
                <declaration name="res" type="int" line="495"/>
            </method>
            <method name="focusServerPrev" type="int" line="500">
                <declaration name="res" type="int" line="502"/>
            </method>
            <method name="waitEmbeddedNotify" type="void" line="508">
                <params>
                    <param name="pos" type="int"/>
                </params>
            </method>
            <method name="waitFocusGained" type="void" line="511">
                <params>
                    <param name="pos" type="int"/>
                </params>
            </method>
            <method name="waitFocusLost" type="void" line="514">
                <params>
                    <param name="pos" type="int"/>
                </params>
            </method>
            <method name="waitWindowActivated" type="void" line="517">
                <params>
                    <param name="pos" type="int"/>
                </params>
            </method>
            <method name="waitWindowDeactivated" type="void" line="520">
                <params>
                    <param name="pos" type="int"/>
                </params>
            </method>
            <method name="waitSystemEvent" type="void" line="524">
                <params>
                    <param name="position" type="int"/>
                    <param name="event" type="int"/>
                </params>
            </method>
            <method name="waitForEvent" type="void" line="528">
                <params>
                    <param name="position" type="int"/>
                    <param name="event" type="int"/>
                </params>
                <comment line="530">
                    Check for already received events after the request                    
                </comment>
                <comment line="537">
                    Already received                    
                </comment>
                <scope line="529">
                    <scope line="531"/>
                    <scope line="536"/>
                    <scope line="544"/>
                    <scope line="546"/>
                    <scope line="550"/>
                    <scope line="553"/>
                </scope>
            </method>
            <javadoc line="558">
                Checks if the &lt;code&gt;event&lt;/code&gt; is already in a list at position &gt;= &lt;code&gt;position&lt;/code&gt;                
            </javadoc>
            <method name="checkEventList" type="int" line="561">
                <params>
                    <param name="position" type="int"/>
                    <param name="event" type="int"/>
                </params>
                <scope line="562"/>
                <scope line="565">
                    <scope line="566">
                        <scope line="567"/>
                    </scope>
                </scope>
            </method>
            <method name="checkFocusedServerNext" type="void" line="575">
                <scope line="576"/>
            </method>
            <method name="checkFocusedServerPrev" type="void" line="580">
                <scope line="581"/>
            </method>
            <method name="checkFocusGained" type="void" line="585">
                <params>
                    <param name="kind" type="int"/>
                </params>
                <scope line="586"/>
                <scope line="589"/>
            </method>
            <method name="checkNotFocused" type="void" line="593">
                <scope line="594"/>
            </method>
            <method name="checkFocused" type="void" line="598">
                <scope line="599"/>
            </method>
            <method name="checkFocusLost" type="void" line="604">
                <scope line="606"/>
            </method>
            <method name="checkWindowActivated" type="void" line="610">
                <scope line="611"/>
            </method>
            <method name="checkMapped" type="void" line="615">
                <scope line="616"/>
            </method>
            <method name="checkNotMapped" type="void" line="620">
                <scope line="621"/>
            </method>
            <method name="sendMessage" type="void" line="626">
                <params>
                    <param name="message" type="int"/>
                </params>
            </method>
            <method name="sendMessage" type="void" line="629">
                <params>
                    <param name="message" type="int"/>
                    <param name="detail" type="int"/>
                    <param name="data1" type="long"/>
                    <param name="data2" type="long"/>
                </params>
            </method>
            <method name="dispatchEvent" type="void" line="633">
                <params>
                    <param name="ev" type="XEvent"/>
                </params>
                <comment line="639">
                    Notification about embedding protocol start                    
                </comment>
                <comment line="649">
                    We got focus!                    
                </comment>
                <scope line="634">
                    <declaration name="msg" type="XClientMessageEvent" line="635"/>
                    <scope line="636">
                        <scope line="659">
                            <scope line="663"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="670">
                    <scope line="671">
                        <declaration name="eventID" type="int" line="672"/>
                        <scope line="676"/>
                    </scope>
                </scope>
            </method>
            <method name="sleep" type="void" line="685">
                <params>
                    <param name="amount" type="int"/>
                </params>
                <scope line="686"/>
                <scope line="688"/>
            </method>
            <method name="registerAccelerator" type="void" line="692"/>
            <method name="unregisterAccelerator" type="void" line="696"/>
            <method name="pressAccelKey" type="int" line="700">
                <declaration name="res" type="int" line="701"/>
            </method>
            <method name="initAccel" type="void" line="707"/>
            <method name="grabKey" type="void" line="713"/>
            <method name="ungrabKey" type="void" line="716"/>
            <method name="showModalDialog" type="int" line="719">
                <declaration name="res" type="int" line="721"/>
                <declaration name="loc" type="Point" line="722"/>
            </method>
            <method name="hideModalDialog" type="int" line="731">
                <comment line="734">
                    Point loc = serverBounds[MODAL_CLOSE].getLocation();                    
                </comment>
                <comment line="735">
                    loc.x += 5;                    
                </comment>
                <comment line="736">
                    loc.y += 5;                    
                </comment>
                <comment line="737">
                    robot.mouseMove(loc.x, loc.y);                    
                </comment>
                <comment line="738">
                    robot.mousePress(InputEvent.BUTTON1_MASK);                    
                </comment>
                <comment line="739">
                    robot.delay(50);                    
                </comment>
                <comment line="740">
                    robot.mouseRelease(InputEvent.BUTTON1_MASK);                    
                </comment>
                <declaration name="res" type="int" line="733"/>
            </method>
        </class>
    </source>