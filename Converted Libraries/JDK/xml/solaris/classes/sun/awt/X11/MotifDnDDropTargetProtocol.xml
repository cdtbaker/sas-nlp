<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt.Point"/>
        <import package="java.awt.dnd.DnDConstants"/>
        <import package="java.awt.event.MouseEvent"/>
        <import package="java.io.IOException"/>
        <import package="sun.misc.Unsafe"/>
        <class name="MotifDnDDropTargetProtocol" line="7">
            <extends class="XDropTargetProtocol"/>
            <javadoc line="7">
                XDropTargetProtocol implementation for Motif DnD protocol.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="unsafe" type="Unsafe" line="12"/>
            <declaration name="sourceWindow" type="long" line="13"/>
            <declaration name="sourceWindowMask" type="long" line="14"/>
            <declaration name="sourceProtocolVersion" type="int" line="15"/>
            <declaration name="sourceActions" type="int" line="16"/>
            <declaration name="sourceFormats" type="long[]" line="17"/>
            <declaration name="sourceAtom" type="long" line="18"/>
            <declaration name="userAction" type="int" line="19"/>
            <declaration name="sourceX" type="int" line="20"/>
            <declaration name="sourceY" type="int" line="21"/>
            <declaration name="targetXWindow" type="XWindow" line="22"/>
            <declaration name="topLevelLeavePostponed" type="boolean" line="23"/>
            <method name="MotifDnDDropTargetProtocol" type="constructor" line="24">
                <params>
                    <param name="listener" type="XDropTargetProtocolListener"/>
                </params>
            </method>
            <javadoc line="27">
                Creates an instance associated with the specified listener.                
                <throws>
                    NullPointerException if listener is <code>null</code>.                    
                </throws>
            </javadoc>
            <method name="createInstance" type="XDropTargetProtocol" line="31">
                <params>
                    <param name="listener" type="XDropTargetProtocolListener"/>
                </params>
            </method>
            <method name="getProtocolName" type="String" line="34"/>
            <method name="registerDropTarget" type="void" line="37">
                <params>
                    <param name="window" type="long"/>
                </params>
            </method>
            <method name="unregisterDropTarget" type="void" line="41">
                <params>
                    <param name="window" type="long"/>
                </params>
            </method>
            <method name="registerEmbedderDropSite" type="void" line="45">
                <params>
                    <param name="embedder" type="long"/>
                </params>
            </method>
            <method name="unregisterEmbedderDropSite" type="void" line="107">
                <params>
                    <param name="embedder" type="long"/>
                </params>
            </method>
            <method name="registerEmbeddedDropSite" type="void" line="143">
                <params>
                    <param name="embedded" type="long"/>
                </params>
            </method>
            <method name="isProtocolSupported" type="boolean" line="170">
                <params>
                    <param name="window" type="long"/>
                </params>
                <declaration name="wpg" type="WindowPropertyGetter" line="171"/>
                <scope line="172">
                    <declaration name="status" type="int" line="173"/>
                    <scope line="174"/>
                    <scope line="177"/>
                </scope>
                <scope line="181"/>
            </method>
            <method name="processTopLevelEnter" type="boolean" line="185">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
            </method>
            <method name="processDragMotion" type="boolean" line="253">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <declaration name="data" type="long" line="254"/>
                <declaration name="eventByteOrder" type="byte" line="255"/>
                <declaration name="eventReason" type="byte" line="256"/>
                <declaration name="x" type="int" line="257"/>
                <declaration name="y" type="int" line="258"/>
                <declaration name="flags" type="short" line="259"/>
                <declaration name="motif_action" type="int" line="260"/>
                <declaration name="motif_actions" type="int" line="261"/>
                <declaration name="java_action" type="int" line="262"/>
                <declaration name="java_actions" type="int" line="263"/>
                <scope line="264">
                    <declaration name="win" type="int" line="265"/>
                    <scope line="266"/>
                </scope>
                <declaration name="xwindow" type="XWindow" line="271"/>
                <scope line="272">
                    <declaration name="xbasewindow" type="XBaseWindow" line="273"/>
                    <scope line="274"/>
                </scope>
                <scope line="278">
                    <scope line="281"/>
                </scope>
                <scope line="285">
                    <scope line="288">
                        <declaration name="receiver" type="long" line="289"/>
                        <scope line="290">
                            <declaration name="xbasewindow" type="XBaseWindow" line="291"/>
                            <scope line="292"/>
                        </scope>
                    </scope>
                    <scope line="297">
                        <declaration name="p" type="Point" line="298"/>
                    </scope>
                </scope>
                <scope line="303">
                    <scope line="304"/>
                </scope>
                <scope line="308">
                    <declaration name="java_event_id" type="int" line="309"/>
                    <scope line="310"/>
                    <scope line="313"/>
                </scope>
            </method>
            <method name="processTopLevelLeave" type="boolean" line="325">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
            </method>
            <method name="processDropStart" type="boolean" line="361">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <declaration name="data" type="long" line="362"/>
                <declaration name="eventByteOrder" type="byte" line="363"/>
                <declaration name="source_win" type="long" line="364"/>
                <scope line="365"/>
                <declaration name="property_atom" type="long" line="368"/>
                <declaration name="flags" type="short" line="369"/>
                <declaration name="motif_action" type="int" line="370"/>
                <declaration name="motif_actions" type="int" line="371"/>
                <declaration name="java_action" type="int" line="372"/>
                <declaration name="java_actions" type="int" line="373"/>
                <declaration name="x" type="int" line="374"/>
                <declaration name="y" type="int" line="375"/>
                <declaration name="xwindow" type="XWindow" line="376"/>
                <scope line="377">
                    <declaration name="xbasewindow" type="XBaseWindow" line="378"/>
                    <scope line="379"/>
                </scope>
                <scope line="383">
                    <declaration name="receiver" type="long" line="384"/>
                    <scope line="385">
                        <declaration name="xbasewindow" type="XBaseWindow" line="386"/>
                        <scope line="387"/>
                    </scope>
                </scope>
                <scope line="392">
                    <declaration name="p" type="Point" line="393"/>
                </scope>
                <scope line="397"/>
                <scope line="400"/>
            </method>
            <method name="getMessageType" type="int" line="405">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <scope line="406"/>
                <declaration name="data" type="long" line="409"/>
                <declaration name="reason" type="byte" line="410"/>
            </method>
            <method name="processClientMessageImpl" type="boolean" line="425">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <scope line="426">
                    <scope line="427"/>
                </scope>
                <declaration name="data" type="long" line="433"/>
                <declaration name="reason" type="byte" line="434"/>
                <declaration name="origin" type="byte" line="435"/>
                <scope line="436">
                    <scope line="438"/>
                </scope>
                <scope line="442"/>
            </method>
            <method name="sendEnterMessageToToplevel" type="void" line="459">
                <params>
                    <param name="win" type="long"/>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
            </method>
            <method name="sendLeaveMessageToToplevel" type="void" line="462">
                <params>
                    <param name="win" type="long"/>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
            </method>
            <method name="forwardEventToEmbedded" type="boolean" line="465">
                <params>
                    <param name="embedded" type="long"/>
                    <param name="ctxt" type="long"/>
                    <param name="eventID" type="int"/>
                </params>
            </method>
            <method name="isXEmbedSupported" type="boolean" line="468"/>
            <method name="sendResponse" type="boolean" line="471">
                <params>
                    <param name="ctxt" type="long"/>
                    <param name="eventID" type="int"/>
                    <param name="action" type="int"/>
                </params>
            </method>
            <method name="getData" type="Object" line="554">
                <params>
                    <param name="ctxt" type="long"/>
                    <param name="format" type="long"/>
                </params>
                <declaration name="xclient" type="XClientMessageEvent" line="555"/>
                <scope line="556"/>
                <declaration name="data" type="long" line="559"/>
                <declaration name="reason" type="byte" line="560"/>
                <declaration name="origin" type="byte" line="561"/>
                <declaration name="eventByteOrder" type="byte" line="562"/>
                <scope line="563"/>
                <declaration name="selatom" type="long" line="566"/>
                <scope line="578"/>
                <declaration name="time_stamp" type="long" line="581"/>
                <declaration name="selectionAtom" type="XAtom" line="582"/>
                <declaration name="selection" type="XSelection" line="583"/>
                <scope line="584"/>
            </method>
            <method name="sendDropDone" type="boolean" line="589">
                <params>
                    <param name="ctxt" type="long"/>
                    <param name="success" type="boolean"/>
                    <param name="dropAction" type="int"/>
                </params>
                <declaration name="xclient" type="XClientMessageEvent" line="590"/>
                <scope line="591"/>
                <declaration name="data" type="long" line="594"/>
                <declaration name="reason" type="byte" line="595"/>
                <declaration name="origin" type="byte" line="596"/>
                <declaration name="eventByteOrder" type="byte" line="597"/>
                <scope line="598"/>
                <scope line="601"/>
                <declaration name="time_stamp" type="long" line="604"/>
                <declaration name="sel_atom" type="long" line="605"/>
                <declaration name="status_atom" type="long" line="606"/>
                <scope line="607"/>
                <scope line="610"/>
                <scope line="614"/>
                <scope line="618"/>
            </method>
            <method name="getSourceWindow" type="long" line="625"/>
            <javadoc line="628">
                Reset the state of the object.                
            </javadoc>
            <method name="cleanup" type="void" line="631">
                <scope line="633"/>
                <scope line="636">
                    <scope line="638"/>
                    <scope line="643"/>
                </scope>
            </method>
            <method name="isDragOverComponent" type="boolean" line="659"/>
            <method name="notifyProtocolListener" type="void" line="662">
                <params>
                    <param name="xwindow" type="XWindow"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="dropAction" type="int"/>
                    <param name="actions" type="int"/>
                    <param name="xclient" type="XClientMessageEvent"/>
                    <param name="eventID" type="int"/>
                </params>
                <declaration name="nativeCtxt" type="long" line="663"/>
                <scope line="664">
                    <declaration name="size" type="int" line="665"/>
                </scope>
            </method>
        </class>
    </source>