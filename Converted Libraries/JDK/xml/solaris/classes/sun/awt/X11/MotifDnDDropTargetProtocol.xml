<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt.Point"/>
        <import package="java.awt.dnd.DnDConstants"/>
        <import package="java.awt.event.MouseEvent"/>
        <import package="java.io.IOException"/>
        <import package="sun.misc.Unsafe"/>
        <class name="MotifDnDDropTargetProtocol" line="38">
            <extends class="XDropTargetProtocol"/>
            <comment line="261">
                Gets and stores in the registry the embedder&apos;s Motif DnD drop site info
                 from the embedded.                
            </comment>
            <comment line="751">
                Currently we don&apos;t synthesize enterleave messages for Motif DnD
                 protocol. See comments in XDropTargetProtocol.postProcessClientMessage.                
            </comment>
            <javadoc line="38">
                XDropTargetProtocol implementation for Motif DnD protocol.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="unsafe" type="Unsafe" line="44"/>
            <declaration name="sourceWindow" type="long" line="46"/>
            <declaration name="sourceWindowMask" type="long" line="47"/>
            <declaration name="sourceProtocolVersion" type="int" line="48"/>
            <declaration name="sourceActions" type="int" line="49"/>
            <declaration name="sourceFormats" type="long[]" line="50"/>
            <declaration name="sourceAtom" type="long" line="51"/>
            <declaration name="userAction" type="int" line="52"/>
            <declaration name="sourceX" type="int" line="53"/>
            <declaration name="sourceY" type="int" line="54"/>
            <declaration name="targetXWindow" type="XWindow" line="55"/>
            <declaration name="topLevelLeavePostponed" type="boolean" line="56"/>
            <method name="MotifDnDDropTargetProtocol" type="constructor" line="58">
                <params>
                    <param name="listener" type="XDropTargetProtocolListener"/>
                </params>
            </method>
            <javadoc line="62">
                Creates an instance associated with the specified listener.                
                <throws>
                    NullPointerException if listener is <code>null</code>.                    
                </throws>
            </javadoc>
            <method name="createInstance" type="XDropTargetProtocol" line="67">
                <params>
                    <param name="listener" type="XDropTargetProtocolListener"/>
                </params>
            </method>
            <method name="getProtocolName" type="String" line="71"/>
            <method name="registerDropTarget" type="void" line="75">
                <params>
                    <param name="window" type="long"/>
                </params>
            </method>
            <method name="unregisterDropTarget" type="void" line="81">
                <params>
                    <param name="window" type="long"/>
                </params>
            </method>
            <method name="registerEmbedderDropSite" type="void" line="87">
                <params>
                    <param name="embedder" type="long"/>
                </params>
                <comment line="108">
                    DragICCI.h:
                    
                     typedef struct _xmDragReceiverInfoStruct{
                         BYTE byte_order;
                         BYTE protocol_version;
                         BYTE drag_protocol_style;
                         BYTE pad1;
                         CARD32       proxy_window B32;
                         CARD16       num_drop_sites B16;
                         CARD16       pad2 B16;
                         CARD32       heap_offset B32;
                     } xmDragReceiverInfoStruct;                    
                </comment>
                <comment line="142">
                    Embedder already registered.                    
                </comment>
                <comment line="156">
                                        
                </comment>
                <comment line="157">
                                        
                </comment>
                <comment line="158">
                                        
                </comment>
                <comment line="159">
                                        
                </comment>
                <comment line="160">
                                        
                </comment>
                <comment line="161">
                                        
                </comment>
                <comment line="162">
                                        
                </comment>
                <declaration name="overriden" type="boolean" line="90"/>
                <declaration name="version" type="int" line="91"/>
                <declaration name="proxy" type="long" line="92"/>
                <declaration name="newProxy" type="long" line="93"/>
                <declaration name="status" type="int" line="94"/>
                <declaration name="data" type="long" line="95"/>
                <declaration name="dataSize" type="int" line="96"/>
                <declaration name="wpg" type="WindowPropertyGetter" line="98"/>
                <scope line="104">
                    <scope line="124">
                        <declaration name="byteOrderByte" type="byte" line="130"/>
                        <scope line="132">
                            <declaration name="tproxy" type="int" line="133"/>
                            <scope line="134"/>
                        </scope>
                        <scope line="140"/>
                        <scope line="145">
                            <declaration name="tproxy" type="int" line="146"/>
                            <scope line="147"/>
                        </scope>
                    </scope>
                    <scope line="152"/>
                    <scope line="174"/>
                </scope>
                <scope line="177">
                    <scope line="178"/>
                </scope>
            </method>
            <method name="unregisterEmbedderDropSite" type="void" line="188">
                <params>
                    <param name="embedder" type="long"/>
                </params>
                <comment line="210">
                    DragICCI.h:
                    
                     typedef struct _xmDragReceiverInfoStruct{
                         BYTE     byte_order;
                         BYTE     protocol_version;
                         BYTE     drag_protocol_style;
                         BYTE     pad1;
                         CARD32   proxy_window B32;
                         CARD16   num_drop_sites B16;
                         CARD16   pad2 B16;
                         CARD32   heap_offset B32;
                     } xmDragReceiverInfoStruct;                    
                </comment>
                <declaration name="entry" type="EmbedderRegistryEntry" line="191"/>
                <scope line="193"/>
                <scope line="197">
                    <declaration name="status" type="int" line="198"/>
                    <declaration name="wpg" type="WindowPropertyGetter" line="200"/>
                    <scope line="206">
                        <scope line="226">
                            <declaration name="dataSize" type="int" line="228"/>
                            <declaration name="data" type="long" line="229"/>
                            <declaration name="byteOrderByte" type="byte" line="230"/>
                            <declaration name="tproxy" type="int" line="232"/>
                            <scope line="233"/>
                            <scope line="248"/>
                        </scope>
                    </scope>
                    <scope line="252"/>
                </scope>
                <scope line="255"/>
            </method>
            <method name="registerEmbeddedDropSite" type="void" line="264">
                <params>
                    <param name="embedded" type="long"/>
                </params>
                <comment line="282">
                    DragICCI.h:
                    
                     typedef struct _xmDragReceiverInfoStruct{
                         BYTE byte_order;
                         BYTE protocol_version;
                         BYTE drag_protocol_style;
                         BYTE pad1;
                         CARD32       proxy_window B32;
                         CARD16       num_drop_sites B16;
                         CARD16       pad2 B16;
                         CARD32       heap_offset B32;
                     } xmDragReceiverInfoStruct;                    
                </comment>
                <declaration name="overriden" type="boolean" line="267"/>
                <declaration name="version" type="int" line="268"/>
                <declaration name="proxy" type="long" line="269"/>
                <declaration name="status" type="int" line="270"/>
                <declaration name="wpg" type="WindowPropertyGetter" line="272"/>
                <scope line="278">
                    <scope line="298">
                        <declaration name="data" type="long" line="301"/>
                        <declaration name="byteOrderByte" type="byte" line="303"/>
                        <scope line="305">
                            <declaration name="tproxy" type="int" line="306"/>
                            <scope line="307"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="313"/>
            </method>
            <method name="isProtocolSupported" type="boolean" line="320">
                <params>
                    <param name="window" type="long"/>
                </params>
                <declaration name="wpg" type="WindowPropertyGetter" line="321"/>
                <scope line="327">
                    <declaration name="status" type="int" line="328"/>
                    <scope line="333"/>
                    <scope line="335"/>
                </scope>
                <scope line="338"/>
            </method>
            <method name="processTopLevelEnter" type="boolean" line="343">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <comment line="369">
                                        
                </comment>
                <comment line="410">
                    Select for StructureNotifyMask to receive DestroyNotify in case of source
                     crash.                    
                </comment>
                <comment line="448">
                    TOP_LEVEL_ENTER doesn&apos;t communicate the list of supported actions
                     They are provided in DRAG_MOTION.                    
                </comment>
                <scope line="346"/>
                <scope line="351"/>
                <declaration name="source_win" type="long" line="355"/>
                <declaration name="source_win_mask" type="long" line="356"/>
                <declaration name="protocol_version" type="int" line="357"/>
                <declaration name="property_atom" type="long" line="358"/>
                <declaration name="formats" type="long[]" line="359"/>
                <scope line="361">
                    <declaration name="data" type="long" line="362"/>
                    <declaration name="eventByteOrder" type="byte" line="363"/>
                </scope>
                <scope line="369">
                    <declaration name="wpg" type="WindowPropertyGetter" line="370"/>
                    <scope line="377">
                        <declaration name="status" type="int" line="378"/>
                        <scope line="385">
                            <declaration name="data" type="long" line="387"/>
                            <declaration name="propertyByteOrder" type="byte" line="388"/>
                            <scope line="393"/>
                            <declaration name="index" type="int" line="397"/>
                        </scope>
                        <scope line="401"/>
                    </scope>
                    <scope line="404"/>
                </scope>
                <declaration name="wattr" type="XWindowAttributes" line="413"/>
                <scope line="414">
                    <declaration name="status" type="int" line="416"/>
                    <scope line="423"/>
                </scope>
                <scope line="428"/>
                <scope line="440"/>
            </method>
            <method name="processDragMotion" type="boolean" line="458">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <comment line="477">
                    Append source window id to the event data, so that we can send the                    
                </comment>
                <comment line="496">
                    OPERATION_CHANGED event doesn&apos;t provide coordinates, so we use                    
                </comment>
                <declaration name="data" type="long" line="459"/>
                <declaration name="eventByteOrder" type="byte" line="460"/>
                <declaration name="eventReason" type="byte" line="461"/>
                <declaration name="x" type="int" line="463"/>
                <declaration name="y" type="int" line="464"/>
                <declaration name="flags" type="short" line="466"/>
                <declaration name="motif_action" type="int" line="468"/>
                <declaration name="motif_actions" type="int" line="470"/>
                <declaration name="java_action" type="int" line="473"/>
                <declaration name="java_actions" type="int" line="474"/>
                <scope line="478">
                    <declaration name="win" type="int" line="479"/>
                    <scope line="480"/>
                </scope>
                <declaration name="xwindow" type="XWindow" line="486"/>
                <scope line="487">
                    <declaration name="xbasewindow" type="XBaseWindow" line="488"/>
                    <scope line="489"/>
                </scope>
                <scope line="494">
                    <scope line="500"/>
                </scope>
                <scope line="503">
                    <scope line="507">
                        <declaration name="receiver" type="long" line="508"/>
                        <scope line="512">
                            <declaration name="xbasewindow" type="XBaseWindow" line="513"/>
                            <scope line="514"/>
                        </scope>
                    </scope>
                    <scope line="520">
                        <declaration name="p" type="Point" line="521"/>
                    </scope>
                </scope>
                <scope line="527">
                    <scope line="528"/>
                </scope>
                <scope line="533">
                    <declaration name="java_event_id" type="int" line="534"/>
                    <scope line="536"/>
                    <scope line="538"/>
                </scope>
            </method>
            <method name="processTopLevelLeave" type="boolean" line="555">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <comment line="564">
                                        
                </comment>
                <comment line="569">
                    Postpone upcall to java, so that we can abort it in case
                     if drop immediatelly follows (see BugTraq ID 4395290).
                     Send a dummy ClientMessage event to guarantee that a postponed java
                     upcall will be processed.                    
                </comment>
                <comment line="579">
                    If this is an embedded drop site, the event should go to the
                     awt_root_window as this is a proxy for all embedded drop sites.
                     Otherwise the event should go to the event-&gt;window, as we don&apos;t use
                     proxies for normal drop sites.                    
                </comment>
                <declaration name="data" type="long" line="558"/>
                <declaration name="eventByteOrder" type="byte" line="559"/>
                <declaration name="source_win" type="long" line="561"/>
                <scope line="564"/>
                <scope line="575">
                    <declaration name="proxy" type="long" line="576"/>
                    <scope line="584"/>
                    <scope line="586"/>
                    <declaration name="dummy" type="XClientMessageEvent" line="590"/>
                    <scope line="592"/>
                    <scope line="605"/>
                </scope>
            </method>
            <method name="processDropStart" type="boolean" line="612">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <comment line="620">
                                        
                </comment>
                <declaration name="data" type="long" line="613"/>
                <declaration name="eventByteOrder" type="byte" line="614"/>
                <declaration name="source_win" type="long" line="616"/>
                <scope line="620"/>
                <declaration name="property_atom" type="long" line="624"/>
                <declaration name="flags" type="short" line="627"/>
                <declaration name="motif_action" type="int" line="630"/>
                <declaration name="motif_actions" type="int" line="632"/>
                <declaration name="java_action" type="int" line="635"/>
                <declaration name="java_actions" type="int" line="636"/>
                <declaration name="x" type="int" line="638"/>
                <declaration name="y" type="int" line="639"/>
                <declaration name="xwindow" type="XWindow" line="641"/>
                <scope line="642">
                    <declaration name="xbasewindow" type="XBaseWindow" line="643"/>
                    <scope line="644"/>
                </scope>
                <scope line="649">
                    <declaration name="receiver" type="long" line="650"/>
                    <scope line="654">
                        <declaration name="xbasewindow" type="XBaseWindow" line="655"/>
                        <scope line="656"/>
                    </scope>
                </scope>
                <scope line="662">
                    <declaration name="p" type="Point" line="663"/>
                </scope>
                <scope line="668"/>
                <scope line="671"/>
            </method>
            <method name="getMessageType" type="int" line="680">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <scope line="682"/>
                <declaration name="data" type="long" line="687"/>
                <declaration name="reason" type="byte" line="688"/>
            </method>
            <method name="processClientMessageImpl" type="boolean" line="706">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <comment line="731">
                                        
                </comment>
                <scope line="708">
                    <scope line="709"/>
                </scope>
                <declaration name="data" type="long" line="717"/>
                <declaration name="reason" type="byte" line="718"/>
                <declaration name="origin" type="byte" line="720"/>
                <scope line="723">
                    <scope line="725"/>
                </scope>
                <scope line="731"/>
            </method>
            <method name="sendEnterMessageToToplevel" type="void" line="755">
                <params>
                    <param name="win" type="long"/>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
            </method>
            <method name="sendLeaveMessageToToplevel" type="void" line="760">
                <params>
                    <param name="win" type="long"/>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
            </method>
            <method name="forwardEventToEmbedded" type="boolean" line="765">
                <params>
                    <param name="embedded" type="long"/>
                    <param name="ctxt" type="long"/>
                    <param name="eventID" type="int"/>
                </params>
                <comment line="767">
                    UNIMPLEMENTED.                    
                </comment>
            </method>
            <method name="isXEmbedSupported" type="boolean" line="770"/>
            <method name="sendResponse" type="boolean" line="774">
                <params>
                    <param name="ctxt" type="long"/>
                    <param name="eventID" type="int"/>
                    <param name="action" type="int"/>
                </params>
                <comment line="790">
                                        
                </comment>
                <comment line="798">
                                        
                </comment>
                <comment line="818">
                    Unknown reason. Shouldn&apos;t get here.                    
                </comment>
                <comment line="845">
                                        
                </comment>
                <comment line="849">
                                        
                </comment>
                <comment line="861">
                                        
                </comment>
                <comment line="865">
                                        
                </comment>
                <comment line="871">
                    x                    
                </comment>
                <comment line="872">
                    y                    
                </comment>
                <comment line="874">
                    x                    
                </comment>
                <comment line="875">
                    y                    
                </comment>
                <declaration name="xclient" type="XClientMessageEvent" line="775"/>
                <scope line="777"/>
                <declaration name="data" type="long" line="781"/>
                <declaration name="reason" type="byte" line="782"/>
                <declaration name="origin" type="byte" line="784"/>
                <declaration name="eventByteOrder" type="byte" line="786"/>
                <declaration name="response_reason" type="byte" line="787"/>
                <scope line="790"/>
                <declaration name="msg" type="XClientMessageEvent" line="821"/>
                <scope line="823">
                    <declaration name="responseData" type="long" line="829"/>
                    <declaration name="response_flags" type="int" line="835"/>
                    <scope line="837">
                        <declaration name="flags" type="short" line="838"/>
                        <declaration name="dropSiteStatus" type="byte" line="840"/>
                    </scope>
                    <scope line="854"/>
                    <declaration name="time" type="int" line="861"/>
                    <scope line="865">
                        <declaration name="x" type="short" line="866"/>
                        <declaration name="y" type="short" line="868"/>
                    </scope>
                    <scope line="872"/>
                    <scope line="878"/>
                    <scope line="883"/>
                </scope>
                <scope line="886"/>
            </method>
            <method name="getData" type="Object" line="894">
                <params>
                    <param name="ctxt" type="long"/>
                    <param name="format" type="long"/>
                </params>
                <comment line="933">
                    with correction of (32-bit unsigned to 64-bit signed) implicit conversion.                    
                </comment>
                <declaration name="xclient" type="XClientMessageEvent" line="895"/>
                <scope line="898"/>
                <declaration name="data" type="long" line="902"/>
                <declaration name="reason" type="byte" line="903"/>
                <declaration name="origin" type="byte" line="905"/>
                <declaration name="eventByteOrder" type="byte" line="907"/>
                <scope line="909"/>
                <declaration name="selatom" type="long" line="913"/>
                <scope line="927"/>
                <declaration name="time_stamp" type="long" line="931"/>
                <declaration name="selectionAtom" type="XAtom" line="934"/>
                <declaration name="selection" type="XSelection" line="936"/>
                <scope line="937"/>
            </method>
            <method name="sendDropDone" type="boolean" line="944">
                <params>
                    <param name="ctxt" type="long"/>
                    <param name="success" type="boolean"/>
                    <param name="dropAction" type="int"/>
                </params>
                <comment line="969">
                    with correction of (32-bit unsigned to 64-bit signed) implicit conversion.                    
                </comment>
                <comment line="990">
                    Flush the buffer to guarantee that the drop completion event is sent
                     to the source before the method returns.                    
                </comment>
                <comment line="999">
                                        
                </comment>
                <comment line="1002">
                    Cannot do cleanup before the drop finishes as we may need                    
                </comment>
                <declaration name="xclient" type="XClientMessageEvent" line="945"/>
                <scope line="948"/>
                <declaration name="data" type="long" line="952"/>
                <declaration name="reason" type="byte" line="953"/>
                <declaration name="origin" type="byte" line="955"/>
                <declaration name="eventByteOrder" type="byte" line="957"/>
                <scope line="959"/>
                <scope line="963"/>
                <declaration name="time_stamp" type="long" line="967"/>
                <declaration name="sel_atom" type="long" line="970"/>
                <declaration name="status_atom" type="long" line="972"/>
                <scope line="974"/>
                <scope line="976"/>
                <scope line="981"/>
                <scope line="994"/>
            </method>
            <method name="getSourceWindow" type="long" line="1007"/>
            <javadoc line="1011">
                Reset the state of the object.                
            </javadoc>
            <method name="cleanup" type="void" line="1014">
                <comment line="1016">
                    Clear the reference to this protocol.                    
                </comment>
                <scope line="1018"/>
                <scope line="1024">
                    <scope line="1026"/>
                    <scope line="1031"/>
                </scope>
            </method>
            <method name="isDragOverComponent" type="boolean" line="1049"/>
            <method name="notifyProtocolListener" type="void" line="1056">
                <params>
                    <param name="xwindow" type="XWindow"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="dropAction" type="int"/>
                    <param name="actions" type="int"/>
                    <param name="xclient" type="XClientMessageEvent"/>
                    <param name="eventID" type="int"/>
                </params>
                <comment line="1060">
                    Make a copy of the passed XClientMessageEvent structure, since
                     the original structure can be freed before this
                     SunDropTargetEvent is dispatched.                    
                </comment>
                <declaration name="nativeCtxt" type="long" line="1057"/>
                <scope line="1062">
                    <declaration name="size" type="int" line="1063"/>
                </scope>
            </method>
        </class>
    </source>