<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="sun.misc"/>
        <class name="XlibWrapper" line="5">
            <declaration name="unsafe" type="Unsafe" line="6"/>
            <declaration name="MAXSIZE" type="int" line="7"/>
            <declaration name="MINSIZE" type="int" line="8"/>
            <method name="XlibWrapper" type="constructor" line="9"/>
            <declaration name="eventToString" type="String" line="11"/>
            <method name="XFree" type="void" line="12"/>
            <method name="memcpy" type="void" line="13"/>
            <method name="getAddress" type="long" line="14"/>
            <method name="copyIntArray" type="void" line="15"/>
            <method name="copyLongArray" type="void" line="16"/>
            <method name="getStringBytes" type="byte[]" line="17"/>
            <javadoc line="17">
                Gets byte string from str_ptr and copies it into byte array
                  String should be NULL terminated                
            </javadoc>
            <method name="XOpenDisplay" type="long" line="22"/>
            <method name="XCloseDisplay" type="void" line="23"/>
            <method name="XDisplayString" type="long" line="24"/>
            <method name="XSetCloseDownMode" type="void" line="25"/>
            <method name="DefaultScreen" type="long" line="26"/>
            <method name="ScreenOfDisplay" type="long" line="27"/>
            <method name="DoesBackingStore" type="int" line="28"/>
            <method name="DisplayWidth" type="long" line="29"/>
            <method name="DisplayWidthMM" type="long" line="30"/>
            <method name="DisplayHeight" type="long" line="31"/>
            <method name="DisplayHeightMM" type="long" line="32"/>
            <method name="RootWindow" type="long" line="33"/>
            <method name="ScreenCount" type="int" line="34"/>
            <method name="XCreateWindow" type="long" line="35"/>
            <method name="XDestroyWindow" type="void" line="36"/>
            <method name="XGrabPointer" type="int" line="37"/>
            <method name="XUngrabPointer" type="void" line="38"/>
            <method name="XGrabKeyboard" type="int" line="39"/>
            <method name="XUngrabKeyboard" type="void" line="40"/>
            <method name="XGrabServer" type="void" line="41"/>
            <method name="XUngrabServer" type="void" line="42"/>
            <method name="XMapWindow" type="void" line="43"/>
            <method name="XMapRaised" type="void" line="44"/>
            <method name="XRaiseWindow" type="void" line="45"/>
            <method name="XLowerWindow" type="void" line="46"/>
            <method name="XRestackWindows" type="void" line="47"/>
            <method name="XConfigureWindow" type="void" line="48"/>
            <method name="XSetInputFocus" type="void" line="49"/>
            <method name="XSetInputFocus2" type="void" line="50"/>
            <method name="XGetInputFocus" type="long" line="51"/>
            <method name="XUnmapWindow" type="void" line="52"/>
            <method name="XSelectInput" type="void" line="53"/>
            <method name="XNextEvent" type="void" line="54"/>
            <method name="XMaskEvent" type="void" line="55"/>
            <method name="XWindowEvent" type="void" line="56"/>
            <method name="XFilterEvent" type="boolean" line="57"/>
            <method name="XSupportsLocale" type="boolean" line="58"/>
            <method name="XSetLocaleModifiers" type="String" line="59"/>
            <method name="XTranslateCoordinates" type="int" line="60"/>
            <method name="XPeekEvent" type="void" line="61"/>
            <method name="XFlush" type="void" line="62"/>
            <method name="XSync" type="void" line="63"/>
            <method name="XMoveResizeWindow" type="void" line="64"/>
            <method name="XResizeWindow" type="void" line="65"/>
            <method name="XMoveWindow" type="void" line="66"/>
            <method name="XQueryPointer" type="boolean" line="67"/>
            <method name="XFreeCursor" type="void" line="68"/>
            <method name="XSetWindowBackground" type="void" line="69"/>
            <method name="XEventsQueued" type="int" line="70"/>
            <method name="XInternAtoms" type="int" line="71"/>
            <method name="SetProperty" type="void" line="72"/>
            <method name="GetProperty" type="String" line="73"/>
            <method name="InternAtom" type="long" line="74"/>
            <method name="XGetWindowProperty" type="int" line="75"/>
            <method name="XChangePropertyImpl" type="void" line="76"/>
            <method name="XChangeProperty" type="void" line="77">
                <params>
                    <param name="display" type="long"/>
                    <param name="window" type="long"/>
                    <param name="atom" type="long"/>
                    <param name="type" type="long"/>
                    <param name="format" type="int"/>
                    <param name="mode" type="int"/>
                    <param name="data" type="long"/>
                    <param name="nelements" type="int"/>
                </params>
                <scope line="78">
                    <declaration name="length" type="int" line="79"/>
                </scope>
            </method>
            <method name="XChangePropertyS" type="void" line="84"/>
            <method name="XDeleteProperty" type="void" line="85"/>
            <method name="XSetTransientFor" type="void" line="86"/>
            <method name="XSetWMHints" type="void" line="87"/>
            <method name="XGetWMHints" type="void" line="88"/>
            <method name="XAllocWMHints" type="long" line="89"/>
            <method name="XGetPointerMapping" type="int" line="90"/>
            <method name="XGetDefault" type="String" line="91"/>
            <method name="getScreenOfWindow" type="long" line="92"/>
            <method name="XScreenNumberOfScreen" type="long" line="93"/>
            <method name="XIconifyWindow" type="int" line="94"/>
            <method name="ServerVendor" type="String" line="95"/>
            <method name="VendorRelease" type="int" line="96"/>
            <method name="IsXsunKPBehavior" type="boolean" line="97"/>
            <method name="IsSunKeyboard" type="boolean" line="98"/>
            <method name="IsKanaKeyboard" type="boolean" line="99"/>
            <method name="XBell" type="void" line="100"/>
            <method name="XCreateFontCursor" type="int" line="101"/>
            <method name="XCreateBitmapFromData" type="long" line="102"/>
            <method name="XFreePixmap" type="void" line="103"/>
            <method name="XCreatePixmapCursor" type="long" line="104"/>
            <method name="XQueryBestCursor" type="boolean" line="105"/>
            <method name="XAllocColor" type="boolean" line="106"/>
            <method name="SetToolkitErrorHandler" type="long" line="107"/>
            <method name="XSetErrorHandler" type="void" line="108"/>
            <method name="CallErrorHandler" type="int" line="109"/>
            <method name="XChangeWindowAttributes" type="void" line="110"/>
            <method name="XGetWindowAttributes" type="int" line="111"/>
            <method name="XGetGeometry" type="int" line="112"/>
            <method name="XGetWMNormalHints" type="int" line="113"/>
            <method name="XSetWMNormalHints" type="void" line="114"/>
            <method name="XSetMinMaxHints" type="void" line="115"/>
            <method name="XAllocSizeHints" type="long" line="116"/>
            <method name="XSendEvent" type="int" line="117"/>
            <method name="XPutBackEvent" type="void" line="118"/>
            <method name="XQueryTree" type="int" line="119"/>
            <method name="XGetVisualInfo" type="long" line="120"/>
            <method name="XReparentWindow" type="void" line="121"/>
            <method name="XConvertSelection" type="void" line="122"/>
            <method name="XSetSelectionOwner" type="void" line="123"/>
            <method name="XGetSelectionOwner" type="long" line="124"/>
            <method name="XGetAtomName" type="String" line="125"/>
            <method name="XMaxRequestSize" type="long" line="126"/>
            <method name="XCreatePixmap" type="long" line="127"/>
            <method name="XCreateImage" type="long" line="128"/>
            <method name="XDestroyImage" type="void" line="129"/>
            <method name="XPutImage" type="void" line="130"/>
            <method name="XCreateGC" type="long" line="131"/>
            <method name="XFreeGC" type="void" line="132"/>
            <method name="XSetWindowBackgroundPixmap" type="void" line="133"/>
            <method name="XClearWindow" type="void" line="134"/>
            <method name="XGetIconSizes" type="int" line="135"/>
            <method name="XdbeQueryExtension" type="int" line="136"/>
            <method name="XQueryExtension" type="boolean" line="137"/>
            <method name="IsKeypadKey" type="boolean" line="138"/>
            <method name="XdbeAllocateBackBufferName" type="long" line="139"/>
            <method name="XdbeDeallocateBackBufferName" type="int" line="140"/>
            <method name="XdbeBeginIdiom" type="int" line="141"/>
            <method name="XdbeEndIdiom" type="int" line="142"/>
            <method name="XdbeSwapBuffers" type="int" line="143"/>
            <method name="XQueryKeymap" type="void" line="144"/>
            <method name="XKeycodeToKeysym" type="long" line="145"/>
            <method name="XKeysymToKeycode" type="int" line="146"/>
            <method name="XkbGetEffectiveGroup" type="int" line="147"/>
            <method name="XkbKeycodeToKeysym" type="long" line="148"/>
            <method name="XkbSelectEvents" type="void" line="149"/>
            <method name="XkbSelectEventDetails" type="void" line="150"/>
            <method name="XkbQueryExtension" type="boolean" line="151"/>
            <method name="XkbLibraryVersion" type="boolean" line="152"/>
            <method name="XkbGetMap" type="long" line="153"/>
            <method name="XkbGetUpdatedMap" type="long" line="154"/>
            <method name="XkbFreeKeyboard" type="void" line="155"/>
            <method name="XkbTranslateKeyCode" type="boolean" line="156"/>
            <method name="XConvertCase" type="void" line="157"/>
            <method name="XGetModifierMapping" type="long" line="158"/>
            <method name="XFreeModifiermap" type="void" line="159"/>
            <method name="XRefreshKeyboardMapping" type="void" line="160"/>
            <method name="XChangeActivePointerGrab" type="void" line="161"/>
            <method name="XSynchronize" type="int" line="162"/>
            <method name="XNextSecondaryLoopEvent" type="boolean" line="163"/>
            <javadoc line="163">
                Extracts an X event that can be processed in a secondary loop.
                  Should only be called on the toolkit thread.
                  Returns false if this secondary event was terminated.                
            </javadoc>
            <method name="ExitSecondaryLoop" type="void" line="169"/>
            <javadoc line="169">
                Terminates the topmost secondary loop (if any).
                  Should never be called on the toolkit thread.                
            </javadoc>
            <method name="XTextPropertyToStringList" type="String[]" line="174"/>
            <javadoc line="174">
                Calls XTextPropertyToStringList on the specified byte array and returns
                  the array of strings.                
            </javadoc>
            <method name="XShapeQueryExtension" type="boolean" line="179"/>
            <javadoc line="179">
                XSHAPE extension support.                
            </javadoc>
            <method name="SetRectangularShape" type="void" line="183"/>
            <method name="SetBitmapShape" type="void" line="184"/>
            <javadoc line="184">
                Each int in the bitmap array is one pixel with a 32-bit color:
                  R, G, B, and Alpha.                
            </javadoc>
            <method name="SetZOrder" type="void" line="189"/>
            <declaration name="lbuffer" type="long" line="190"/>
            <declaration name="ibuffer" type="long" line="191"/>
            <declaration name="larg1" type="long" line="192"/>
            <declaration name="larg2" type="long" line="193"/>
            <declaration name="larg3" type="long" line="194"/>
            <declaration name="larg4" type="long" line="195"/>
            <declaration name="larg5" type="long" line="196"/>
            <declaration name="larg6" type="long" line="197"/>
            <declaration name="larg7" type="long" line="198"/>
            <declaration name="larg8" type="long" line="199"/>
            <declaration name="iarg1" type="long" line="200"/>
            <declaration name="iarg2" type="long" line="201"/>
            <declaration name="iarg3" type="long" line="202"/>
            <declaration name="iarg4" type="long" line="203"/>
            <declaration name="iarg5" type="long" line="204"/>
            <declaration name="iarg6" type="long" line="205"/>
            <declaration name="iarg7" type="long" line="206"/>
            <declaration name="iarg8" type="long" line="207"/>
            <declaration name="dataModel" type="int" line="208"/>
            <declaration name="isBuildInternal" type="boolean" line="209"/>
            <scope line="210">
                <anonymous_class line="211">
                    <method name="run" type="Object" line="212"/>
                </anonymous_class>
                <declaration name="dataModelProp" type="String" line="211"/>
                <scope line="217"/>
                <scope line="220"/>
            </scope>
            <method name="getDataModel" type="int" line="225"/>
            <method name="hintsToString" type="String" line="228">
                <params>
                    <param name="flags" type="long"/>
                </params>
                <declaration name="buf" type="StringBuffer" line="229"/>
                <scope line="230"/>
                <scope line="233"/>
                <scope line="236"/>
                <scope line="239"/>
                <scope line="242"/>
                <scope line="245"/>
                <scope line="248"/>
            </method>
            <method name="getEventToString" type="String" line="253">
                <params>
                    <param name="type" type="int"/>
                </params>
                <scope line="254"/>
                <scope line="257"/>
            </method>
            <method name="getBuildInternal" type="boolean" line="262">
                <declaration name="javaVersion" type="String" line="263"/>
            </method>
            <method name="PrintXErrorEvent" type="void" line="266"/>
        </class>
    </source>