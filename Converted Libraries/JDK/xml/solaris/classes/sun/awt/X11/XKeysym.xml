<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.util.Hashtable"/>
        <import package="sun.misc.Unsafe"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <class name="XKeysym" line="5">
            <method name="main" type="void" line="6">
                <params>
                    <param name="args" type="String"/>
                </params>
            </method>
            <method name="XKeysym" type="constructor" line="14"/>
            <class name="Keysym2JavaKeycode" line="16">
                <declaration name="jkeycode" type="int" line="17"/>
                <declaration name="keyLocation" type="int" line="18"/>
                <method name="getJavaKeycode" type="int" line="19"/>
                <method name="getKeyLocation" type="int" line="22"/>
                <method name="Keysym2JavaKeycode" type="constructor" line="25">
                    <params>
                        <param name="jk" type="int"/>
                        <param name="loc" type="int"/>
                    </params>
                </method>
            </class>
            <declaration name="unsafe" type="Unsafe" line="30"/>
            <declaration name="keysym2JavaKeycodeHash" type="Hashtable&lt;Long,Keysym2JavaKeycode&gt;" line="31"/>
            <declaration name="keysym2UCSHash" type="Hashtable&lt;Long,Character&gt;" line="32"/>
            <declaration name="uppercaseHash" type="Hashtable&lt;Long,Long&gt;" line="33"/>
            <declaration name="javaKeycode2KeysymHash" type="Hashtable&lt;Integer,Long&gt;" line="34"/>
            <declaration name="keysym_lowercase" type="long" line="35"/>
            <declaration name="keysym_uppercase" type="long" line="36"/>
            <declaration name="kanaLock" type="Keysym2JavaKeycode" line="37"/>
            <declaration name="keyEventLog" type="PlatformLogger" line="38"/>
            <method name="convertKeysym" type="char" line="39">
                <params>
                    <param name="ks" type="long"/>
                    <param name="state" type="int"/>
                </params>
                <scope line="40">
                    <scope line="41">
                        <scope line="42"/>
                    </scope>
                </scope>
                <declaration name="ch" type="Character" line="49"/>
            </method>
            <method name="xkeycode2keysym_noxkb" type="long" line="52">
                <params>
                    <param name="ev" type="XKeyEvent"/>
                    <param name="ndx" type="int"/>
                </params>
                <scope line="54"/>
                <scope line="57"/>
            </method>
            <method name="xkeycode2keysym_xkb" type="long" line="61">
                <params>
                    <param name="ev" type="XKeyEvent"/>
                    <param name="ndx" type="int"/>
                </params>
                <scope line="63">
                    <declaration name="mods" type="int" line="64"/>
                    <scope line="65"/>
                    <declaration name="kbdDesc" type="long" line="68"/>
                    <scope line="69"/>
                    <scope line="72"/>
                </scope>
                <scope line="78"/>
            </method>
            <method name="xkeycode2keysym" type="long" line="82">
                <params>
                    <param name="ev" type="XKeyEvent"/>
                    <param name="ndx" type="int"/>
                </params>
                <scope line="84">
                    <scope line="85"/>
                    <scope line="88"/>
                </scope>
                <scope line="92"/>
            </method>
            <method name="xkeycode2primary_keysym" type="long" line="96">
                <params>
                    <param name="ev" type="XKeyEvent"/>
                </params>
            </method>
            <method name="isKPEvent" type="boolean" line="99">
                <params>
                    <param name="ev" type="XKeyEvent"/>
                </params>
                <declaration name="ndx" type="int" line="100"/>
                <scope line="102"/>
                <scope line="105"/>
            </method>
            <javadoc line="109">
                Return uppercase keysym correspondent to a given keysym.
                  If input keysym does not belong to any lower/uppercase pair, return -1.                
            </javadoc>
            <method name="getUppercaseAlphabetic" type="long" line="113">
                <params>
                    <param name="keysym" type="long"/>
                </params>
                <declaration name="lc" type="long" line="114"/>
                <declaration name="uc" type="long" line="115"/>
                <declaration name="stored" type="Long" line="116"/>
                <scope line="117"/>
                <scope line="121">
                    <scope line="125"/>
                </scope>
                <scope line="130"/>
            </method>
            <javadoc line="135">
                Get a keypad keysym derived from a keycode.
                  I do not check if this is a keypad event, I just presume it.                
            </javadoc>
            <method name="getKeypadKeysym" type="long" line="139">
                <params>
                    <param name="ev" type="XKeyEvent"/>
                </params>
                <declaration name="ndx" type="int" line="140"/>
                <declaration name="keysym" type="long" line="141"/>
                <scope line="142">
                    <scope line="143"/>
                    <scope line="147"/>
                </scope>
                <scope line="152">
                    <scope line="153"/>
                    <scope line="157"/>
                </scope>
            </method>
            <javadoc line="164">
                Return java.awt.KeyEvent constant meaning (Java) keycode, derived from X keysym.
                  Some keysyms maps to more than one keycode, these would require extra processing.                
            </javadoc>
            <method name="getJavaKeycode" type="Keysym2JavaKeycode" line="168">
                <params>
                    <param name="keysym" type="long"/>
                </params>
                <scope line="169">
                    <scope line="170"/>
                </scope>
                <scope line="174">
                    <scope line="175"/>
                </scope>
                <scope line="179">
                    <scope line="180"/>
                </scope>
            </method>
            <javadoc line="186">
                Return java.awt.KeyEvent constant meaning (Java) keycode, derived from X Window KeyEvent.
                  Algorithm is, extract via XKeycodeToKeysym  a proper keysym according to Xlib spec rules and
                  err exceptions, then search a java keycode in a table.                
            </javadoc>
            <method name="getJavaKeycode" type="Keysym2JavaKeycode" line="191">
                <params>
                    <param name="ev" type="XKeyEvent"/>
                </params>
                <declaration name="keysym" type="long" line="192"/>
                <declaration name="ndx" type="int" line="193"/>
                <scope line="194"/>
                <scope line="197"/>
                <declaration name="jkc" type="Keysym2JavaKeycode" line="201"/>
            </method>
            <method name="getJavaKeycodeOnly" type="int" line="204">
                <params>
                    <param name="ev" type="XKeyEvent"/>
                </params>
                <declaration name="jkc" type="Keysym2JavaKeycode" line="205"/>
            </method>
            <javadoc line="208">
                Return an integer java keycode apprx as it was before extending keycodes range.
                  This call would ignore for instance XKB and process whatever is on the bottom
                  of keysym stack. Result will not depend on actual locale, will differ between
                  dual/multiple keyboard setup systems (e.g. English+Russian vs French+Russian)
                  but will be someway compatible with old releases.                
            </javadoc>
            <method name="getLegacyJavaKeycodeOnly" type="int" line="215">
                <params>
                    <param name="ev" type="XKeyEvent"/>
                </params>
                <declaration name="keysym" type="long" line="216"/>
                <declaration name="ndx" type="int" line="217"/>
                <scope line="218"/>
                <scope line="221"/>
                <declaration name="jkc" type="Keysym2JavaKeycode" line="225"/>
            </method>
            <method name="javaKeycode2Keysym" type="long" line="228">
                <params>
                    <param name="jkey" type="int"/>
                </params>
                <declaration name="ks" type="Long" line="229"/>
            </method>
            <javadoc line="232">
                Return keysym derived from a keycode and modifiers.
                  Usually an input method does this. However non-system input methods (e.g. Java IMs) do not.
                  For rules, see &quot;Xlib - C Language X Interface&quot;,
                  MIT X Consortium Standard
                  X Version 11, Release 6
                  Ch. 12.7
                  XXX TODO: or maybe not to do: process Mode Lock and therefore
                  not only 0-th and 1-st but 2-nd and 3-rd keysyms for a keystroke.                
            </javadoc>
            <method name="getKeysym" type="long" line="242">
                <params>
                    <param name="ev" type="XKeyEvent"/>
                </params>
                <declaration name="keysym" type="long" line="243"/>
                <declaration name="uppercaseKeysym" type="long" line="244"/>
                <declaration name="ndx" type="int" line="245"/>
                <declaration name="getUppercase" type="boolean" line="246"/>
                <scope line="247"/>
                <scope line="250">
                    <scope line="251">
                        <scope line="252"/>
                        <scope line="256"/>
                        <scope line="260"/>
                    </scope>
                    <scope line="265">
                        <scope line="266"/>
                        <scope line="270"/>
                    </scope>
                    <scope line="276"/>
                </scope>
            </method>
            <scope line="282"/>
        </class>
    </source>