<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.util.Hashtable"/>
        <import package="sun.misc.Unsafe"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <class name="XKeysym" line="34">
            <comment line="66">
                TODO: or not to do: add reverse lookup javakeycode2keysym,
                 for robot only it seems to me. After that, we can remove lookup table
                 from XWindow.c altogether.
                 Another use for reverse lookup: query keyboard state, for some keys.                
            </comment>
            <method name="main" type="void" line="36">
                <params>
                    <param name="args" type="String"/>
                </params>
            </method>
            <method name="XKeysym" type="constructor" line="45"/>
            <class name="Keysym2JavaKeycode" line="47">
                <declaration name="jkeycode" type="int" line="48"/>
                <declaration name="keyLocation" type="int" line="49"/>
                <method name="getJavaKeycode" type="int" line="50"/>
                <method name="getKeyLocation" type="int" line="53"/>
                <method name="Keysym2JavaKeycode" type="constructor" line="56">
                    <params>
                        <param name="jk" type="int"/>
                        <param name="loc" type="int"/>
                    </params>
                </method>
            </class>
            <declaration name="unsafe" type="Unsafe" line="61"/>
            <declaration name="keysym2JavaKeycodeHash" type="Hashtable&amp;lt;Long,Keysym2JavaKeycode&amp;gt;" line="62"/>
            <declaration name="keysym2UCSHash" type="Hashtable&amp;lt;Long,Character&amp;gt;" line="63"/>
            <declaration name="uppercaseHash" type="Hashtable&amp;lt;Long,Long&amp;gt;" line="64"/>
            <declaration name="javaKeycode2KeysymHash" type="Hashtable&amp;lt;Integer,Long&amp;gt;" line="69"/>
            <declaration name="keysym_lowercase" type="long" line="70"/>
            <declaration name="keysym_uppercase" type="long" line="71"/>
            <declaration name="kanaLock" type="Keysym2JavaKeycode" line="72"/>
            <declaration name="keyEventLog" type="PlatformLogger" line="74"/>
            <method name="convertKeysym" type="char" line="75">
                <params>
                    <param name="ks" type="long"/>
                    <param name="state" type="int"/>
                </params>
                <comment line="78">
                                        
                </comment>
                <comment line="90">
                    XXX: Also check for directly encoded 24-bit UCS characters:                    
                </comment>
                <scope line="79">
                    <scope line="80">
                        <scope line="82"/>
                    </scope>
                </scope>
                <declaration name="ch" type="Character" line="94"/>
            </method>
            <method name="xkeycode2keysym_noxkb" type="long" line="97">
                <params>
                    <param name="ev" type="XKeyEvent"/>
                    <param name="ndx" type="int"/>
                </params>
                <scope line="99"/>
                <scope line="101"/>
            </method>
            <method name="xkeycode2keysym_xkb" type="long" line="105">
                <params>
                    <param name="ev" type="XKeyEvent"/>
                    <param name="ndx" type="int"/>
                </params>
                <comment line="111">
                    I don&apos;t know all possible meanings of &apos;ndx&apos; in case of XKB
                     and don&apos;t want to speculate. But this particular case
                     clearly means that caller needs a so called primary keysym.                    
                </comment>
                <comment line="121">
                    xkb resources already gone                    
                </comment>
                <comment line="125">
                    XXX unconsumed modifiers?                    
                </comment>
                <scope line="107">
                    <declaration name="mods" type="int" line="108"/>
                    <scope line="109"/>
                    <declaration name="kbdDesc" type="long" line="115"/>
                    <scope line="116"/>
                    <scope line="119"/>
                </scope>
                <scope line="126"/>
            </method>
            <method name="xkeycode2keysym" type="long" line="130">
                <params>
                    <param name="ev" type="XKeyEvent"/>
                    <param name="ndx" type="int"/>
                </params>
                <scope line="132">
                    <scope line="133"/>
                    <scope line="135"/>
                </scope>
                <scope line="138"/>
            </method>
            <method name="xkeycode2primary_keysym" type="long" line="142">
                <params>
                    <param name="ev" type="XKeyEvent"/>
                </params>
            </method>
            <method name="isKPEvent" type="boolean" line="146">
                <params>
                    <param name="ev" type="XKeyEvent"/>
                </params>
                <comment line="148">
                    Xsun without XKB uses keysymarray[2] keysym to determine if it is KP event.
                     Otherwise, it is [1].                    
                </comment>
                <comment line="152">
                    Even if XKB is enabled, we have another problem: some symbol tables (e.g. cz) force
                     a regular comma instead of KP_comma for a decimal separator. Result is,
                     bugs like 6454041. So, we will try for keypadness  a keysym with ndx==0 as well.                    
                </comment>
                <declaration name="ndx" type="int" line="149"/>
                <scope line="155"/>
                <scope line="160"/>
            </method>
            <javadoc line="164">
                Return uppercase keysym correspondent to a given keysym.
                  If input keysym does not belong to any lower/uppercase pair, return -1.                
            </javadoc>
            <method name="getUppercaseAlphabetic" type="long" line="168">
                <params>
                    <param name="keysym" type="long"/>
                </params>
                <comment line="182">
                    not applicable                    
                </comment>
                <declaration name="lc" type="long" line="169"/>
                <declaration name="uc" type="long" line="170"/>
                <declaration name="stored" type="Long" line="171"/>
                <scope line="172"/>
                <scope line="176">
                    <scope line="180"/>
                </scope>
                <scope line="185"/>
            </method>
            <javadoc line="190">
                Get a keypad keysym derived from a keycode.
                  I do not check if this is a keypad event, I just presume it.                
            </javadoc>
            <method name="getKeypadKeysym" type="long" line="194">
                <params>
                    <param name="ev" type="XKeyEvent"/>
                </params>
                <comment line="200">
                    shift modifier is on                    
                </comment>
                <comment line="208">
                    shift modifier is on                    
                </comment>
                <comment line="209">
                    lock modifier is on                    
                </comment>
                <comment line="210">
                    it is interpreted as ShiftLock                    
                </comment>
                <declaration name="ndx" type="int" line="195"/>
                <declaration name="keysym" type="long" line="196"/>
                <scope line="198">
                    <scope line="199"/>
                    <scope line="202"/>
                </scope>
                <scope line="206">
                    <scope line="209"/>
                    <scope line="212"/>
                </scope>
            </method>
            <javadoc line="220">
                Return java.awt.KeyEvent constant meaning (Java) keycode, derived from X keysym.
                  Some keysyms maps to more than one keycode, these would require extra processing.                
            </javadoc>
            <method name="getJavaKeycode" type="Keysym2JavaKeycode" line="224">
                <params>
                    <param name="keysym" type="long"/>
                </params>
                <comment line="227">
                                        
                </comment>
                <comment line="232">
                                        
                </comment>
                <comment line="237">
                                        
                </comment>
                <scope line="225">
                    <scope line="227"/>
                </scope>
                <scope line="230">
                    <scope line="232"/>
                </scope>
                <scope line="235">
                    <scope line="237"/>
                </scope>
            </method>
            <javadoc line="244">
                Return java.awt.KeyEvent constant meaning (Java) keycode, derived from X Window KeyEvent.
                  Algorithm is, extract via XKeycodeToKeysym  a proper keysym according to Xlib spec rules and
                  err exceptions, then search a java keycode in a table.                
            </javadoc>
            <method name="getJavaKeycode" type="Keysym2JavaKeycode" line="249">
                <params>
                    <param name="ev" type="XKeyEvent"/>
                </params>
                <comment line="251">
                    get from keysym2JavaKeycodeHash.                    
                </comment>
                <comment line="258">
                    we only need primary-layer keysym to derive a java keycode.                    
                </comment>
                <declaration name="keysym" type="long" line="251"/>
                <declaration name="ndx" type="int" line="252"/>
                <scope line="254"/>
                <scope line="256"/>
                <declaration name="jkc" type="Keysym2JavaKeycode" line="262"/>
            </method>
            <method name="getJavaKeycodeOnly" type="int" line="265">
                <params>
                    <param name="ev" type="XKeyEvent"/>
                </params>
                <declaration name="jkc" type="Keysym2JavaKeycode" line="266"/>
            </method>
            <javadoc line="269">
                Return an integer java keycode apprx as it was before extending keycodes range.
                  This call would ignore for instance XKB and process whatever is on the bottom
                  of keysym stack. Result will not depend on actual locale, will differ between
                  dual/multiple keyboard setup systems (e.g. English+Russian vs French+Russian)
                  but will be someway compatible with old releases.                
            </javadoc>
            <method name="getLegacyJavaKeycodeOnly" type="int" line="276">
                <params>
                    <param name="ev" type="XKeyEvent"/>
                </params>
                <comment line="284">
                    we only need primary-layer keysym to derive a java keycode.                    
                </comment>
                <declaration name="keysym" type="long" line="277"/>
                <declaration name="ndx" type="int" line="278"/>
                <scope line="280"/>
                <scope line="282"/>
                <declaration name="jkc" type="Keysym2JavaKeycode" line="287"/>
            </method>
            <method name="javaKeycode2Keysym" type="long" line="290">
                <params>
                    <param name="jkey" type="int"/>
                </params>
                <declaration name="ks" type="Long" line="291"/>
            </method>
            <javadoc line="294">
                Return keysym derived from a keycode and modifiers.
                  Usually an input method does this. However non-system input methods (e.g. Java IMs) do not.
                  For rules, see &quot;Xlib - C Language X Interface&quot;,
                  MIT X Consortium Standard
                  X Version 11, Release 6
                  Ch. 12.7
                  XXX TODO: or maybe not to do: process Mode Lock and therefore
                  not only 0-th and 1-st but 2-nd and 3-rd keysyms for a keystroke.                
            </javadoc>
            <method name="getKeysym" type="long" line="304">
                <params>
                    <param name="ev" type="XKeyEvent"/>
                </params>
                <comment line="314">
                    XXX: at this point, anything in keysym[23] is ignored.
                    
                     Shift &amp; Lock are off ===&gt; ndx = 0;
                     Shift off &amp; Lock on &amp; Lock is CapsLock ===&gt; ndx = 0;
                           if keysym[ndx] is lowecase alphabetic, then corresp. uppercase used.
                     Shift on &amp; Lock on &amp; Lock is CapsLock ===&gt; ndx == 1;
                           if keysym[ndx] is lowecase alphabetic, then corresp. uppercase used.
                     Shift on || (Lock on &amp; Lock is ShiftLock) ===&gt; ndx = 1.                    
                </comment>
                <comment line="322">
                    shift is off                    
                </comment>
                <comment line="323">
                    lock is off                    
                </comment>
                <comment line="326">
                    lock is on                    
                </comment>
                <comment line="327">
                    lock is capslock                    
                </comment>
                <comment line="330">
                    lock is on                    
                </comment>
                <comment line="331">
                    lock is shift lock                    
                </comment>
                <comment line="335">
                    shift on                    
                </comment>
                <comment line="336">
                    lock is on                    
                </comment>
                <comment line="337">
                    lock is capslock                    
                </comment>
                <declaration name="keysym" type="long" line="305"/>
                <declaration name="uppercaseKeysym" type="long" line="306"/>
                <declaration name="ndx" type="int" line="307"/>
                <declaration name="getUppercase" type="boolean" line="308"/>
                <scope line="310"/>
                <scope line="312">
                    <scope line="321">
                        <scope line="322"/>
                        <scope line="326"/>
                        <scope line="330"/>
                    </scope>
                    <scope line="334">
                        <scope line="336"/>
                        <scope line="339"/>
                    </scope>
                    <scope line="345"/>
                </scope>
            </method>
            <scope line="352"/>
        </class>
    </source>