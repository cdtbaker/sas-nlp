<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.awt.peer.TrayIconPeer"/>
        <import package="sun.awt"/>
        <import package="java.awt.image"/>
        <import package="java.text.BreakIterator"/>
        <import package="java.util.concurrent.ArrayBlockingQueue"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <class name="XTrayIconPeer" line="13">
            <implements interface="TrayIconPeer"/>
            <implements interface="InfoWindow.Balloon.LiveArguments"/>
            <implements interface="InfoWindow.Tooltip.LiveArguments"/>
            <declaration name="ctrLog" type="PlatformLogger" line="14"/>
            <declaration name="target" type="TrayIcon" line="15"/>
            <declaration name="eventProxy" type="TrayIconEventProxy" line="16"/>
            <declaration name="eframe" type="XTrayIconEmbeddedFrame" line="17"/>
            <declaration name="canvas" type="TrayIconCanvas" line="18"/>
            <declaration name="balloon" type="InfoWindow.Balloon" line="19"/>
            <declaration name="tooltip" type="InfoWindow.Tooltip" line="20"/>
            <declaration name="popup" type="PopupMenu" line="21"/>
            <declaration name="tooltipString" type="String" line="22"/>
            <declaration name="isTrayIconDisplayed" type="boolean" line="23"/>
            <declaration name="eframeParentID" type="long" line="24"/>
            <declaration name="parentXED" type="XEventDispatcher" line="25"/>
            <declaration name="dummyXED" type="XEventDispatcher" line="26"/>
            <anonymous_class line="26">
                <method name="dispatchEvent" type="void" line="27">
                    <params>
                        <param name="ev" type="XEvent"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="isDisposed" type="boolean" line="31"/>
            <declaration name="isParentWindowLocated" type="boolean" line="32"/>
            <declaration name="old_x" type="int" line="33"/>
            <declaration name="ex_width" type="int" line="34"/>
            <declaration name="TRAY_ICON_WIDTH" type="int" line="35"/>
            <declaration name="TRAY_ICON_HEIGHT" type="int" line="36"/>
            <method name="XTrayIconPeer" type="constructor" line="37">
                <params>
                    <param name="target" type="TrayIcon"/>
                </params>
                <anonymous_class line="44">
                    <method name="run" type="Object" line="45"/>
                </anonymous_class>
                <scope line="51"/>
                <scope line="54">
                    <anonymous_class line="55">
                        <method name="dispatchEvent" type="void" line="56">
                            <params>
                                <param name="ev" type="XEvent"/>
                            </params>
                            <scope line="57"/>
                            <declaration name="ce" type="XConfigureEvent" line="60"/>
                            <scope line="62"/>
                            <scope line="66"/>
                            <scope line="72"/>
                            <scope line="78">
                                <scope line="79"/>
                                <scope line="83"/>
                                <scope line="87"/>
                            </scope>
                        </method>
                    </anonymous_class>
                </scope>
                <anonymous_class line="98">
                    <declaration name="xtiPeer" type="XTrayIconPeer" line="99"/>
                    <method name="dispatchEvent" type="void" line="100">
                        <params>
                            <param name="ev" type="XEvent"/>
                        </params>
                        <scope line="101"/>
                        <declaration name="re" type="XReparentEvent" line="104"/>
                        <scope line="106">
                            <scope line="107">
                                <anonymous_class line="108">
                                    <method name="run" type="void" line="109"/>
                                </anonymous_class>
                            </scope>
                        </scope>
                        <scope line="117"/>
                    </method>
                </anonymous_class>
                <declaration name="start" type="long" line="127"/>
                <declaration name="PERIOD" type="long" line="128"/>
                <scope line="130">
                    <scope line="131">
                        <scope line="132"/>
                        <scope line="135"/>
                        <scope line="138"/>
                    </scope>
                </scope>
                <scope line="143"/>
                <scope line="146"/>
            </method>
            <method name="dispose" type="void" line="155">
                <scope line="156"/>
                <scope line="159">
                    <scope line="160">
                        <anonymous_class line="161">
                            <method name="run" type="void" line="162"/>
                        </anonymous_class>
                    </scope>
                    <scope line="168"/>
                    <scope line="170"/>
                </scope>
            </method>
            <method name="disposeOnEDT" type="void" line="174"/>
            <method name="suppressWarningString" type="void" line="185">
                <params>
                    <param name="w" type="Window"/>
                </params>
            </method>
            <method name="setToolTip" type="void" line="188">
                <params>
                    <param name="tooltip" type="String"/>
                </params>
            </method>
            <method name="getTooltipString" type="String" line="191"/>
            <method name="updateImage" type="void" line="194">
                <anonymous_class line="195">
                    <method name="run" type="void" line="196"/>
                </anonymous_class>
                <declaration name="r" type="Runnable" line="195"/>
                <scope line="201"/>
                <scope line="204"/>
            </method>
            <method name="displayMessage" type="void" line="208">
                <params>
                    <param name="caption" type="String"/>
                    <param name="text" type="String"/>
                    <param name="messageType" type="String"/>
                </params>
                <declaration name="loc" type="Point" line="209"/>
                <declaration name="screen" type="Rectangle" line="210"/>
                <scope line="211"/>
            </method>
            <method name="showPopupMenu" type="void" line="215">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
            </method>
            <method name="addXED" type="void" line="233">
                <params>
                    <param name="window" type="long"/>
                    <param name="xed" type="XEventDispatcher"/>
                    <param name="mask" type="long"/>
                </params>
                <scope line="234"/>
                <scope line="238"/>
                <scope line="241"/>
            </method>
            <method name="removeXED" type="void" line="246">
                <params>
                    <param name="window" type="long"/>
                    <param name="xed" type="XEventDispatcher"/>
                </params>
                <scope line="247"/>
                <scope line="251"/>
                <scope line="254"/>
            </method>
            <method name="getLocationOnScreen" type="Point" line="258"/>
            <method name="getBounds" type="Rectangle" line="261">
                <declaration name="loc" type="Point" line="262"/>
            </method>
            <method name="addListeners" type="void" line="265"/>
            <method name="getWindow" type="long" line="269"/>
            <method name="isDisposed" type="boolean" line="272"/>
            <method name="getActionCommand" type="String" line="275"/>
            <class name="TrayIconEventProxy" line="278">
                <implements interface="MouseListener"/>
                <implements interface="MouseMotionListener"/>
                <declaration name="xtiPeer" type="XTrayIconPeer" line="279"/>
                <method name="TrayIconEventProxy" type="constructor" line="280">
                    <params>
                        <param name="xtiPeer" type="XTrayIconPeer"/>
                    </params>
                </method>
                <method name="handleEvent" type="void" line="283">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="284"/>
                    <scope line="287"/>
                    <declaration name="coord" type="Point" line="290"/>
                    <scope line="291"/>
                </method>
                <method name="mouseClicked" type="void" line="298">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="299">
                        <declaration name="aev" type="ActionEvent" line="300"/>
                    </scope>
                    <scope line="303"/>
                </method>
                <method name="mouseEntered" type="void" line="308">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseExited" type="void" line="312">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mousePressed" type="void" line="316">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseReleased" type="void" line="319">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseDragged" type="void" line="322">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseMoved" type="void" line="325">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
            </class>
            <class name="XTrayIconEmbeddedFrame" line="329">
                <extends class="XEmbeddedFrame"/>
                <method name="XTrayIconEmbeddedFrame" type="constructor" line="330"/>
                <method name="isUndecorated" type="boolean" line="333"/>
                <method name="isResizable" type="boolean" line="336"/>
                <method name="dispose" type="void" line="339"/>
                <method name="realDispose" type="void" line="341"/>
            </class>
            <class name="TrayIconCanvas" line="345">
                <extends class="IconCanvas"/>
                <declaration name="target" type="TrayIcon" line="346"/>
                <declaration name="autosize" type="boolean" line="347"/>
                <method name="TrayIconCanvas" type="constructor" line="348">
                    <params>
                        <param name="target" type="TrayIcon"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                </method>
                <method name="repaintImage" type="void" line="352">
                    <params>
                        <param name="doClear" type="boolean"/>
                    </params>
                    <declaration name="old_autosize" type="boolean" line="353"/>
                </method>
            </class>
            <class name="IconCanvas" line="360">
                <extends class="Canvas"/>
                <declaration name="image" type="Image" line="361"/>
                <declaration name="observer" type="IconObserver" line="362"/>
                <declaration name="width" type="int" line="363"/>
                <declaration name="curW" type="int" line="364"/>
                <method name="IconCanvas" type="constructor" line="365">
                    <params>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                </method>
                <method name="updateImage" type="void" line="369">
                    <params>
                        <param name="image" type="Image"/>
                    </params>
                    <scope line="371"/>
                </method>
                <method name="repaintImage" type="void" line="376">
                    <params>
                        <param name="doClear" type="boolean"/>
                    </params>
                    <declaration name="g" type="Graphics" line="377"/>
                    <scope line="378">
                        <scope line="379">
                            <scope line="380">
                                <scope line="381"/>
                                <scope line="384"/>
                            </scope>
                        </scope>
                        <scope line="389"/>
                    </scope>
                </method>
                <method name="paint" type="void" line="394">
                    <params>
                        <param name="g" type="Graphics"/>
                    </params>
                    <scope line="395">
                        <declaration name="bufImage" type="BufferedImage" line="396"/>
                        <declaration name="gr" type="Graphics2D" line="397"/>
                        <scope line="398">
                            <scope line="399"/>
                            <scope line="406"/>
                        </scope>
                    </scope>
                </method>
                <class name="IconObserver" line="412">
                    <implements interface="ImageObserver"/>
                    <method name="imageUpdate" type="boolean" line="413">
                        <params>
                            <param name="image" type="Image"/>
                            <param name="flags" type="int"/>
                            <param name="x" type="int"/>
                            <param name="y" type="int"/>
                            <param name="width" type="int"/>
                            <param name="height" type="int"/>
                        </params>
                        <scope line="414"/>
                        <scope line="417">
                            <anonymous_class line="418">
                                <method name="run" type="void" line="419"/>
                            </anonymous_class>
                        </scope>
                    </method>
                </class>
            </class>
        </class>
    </source>