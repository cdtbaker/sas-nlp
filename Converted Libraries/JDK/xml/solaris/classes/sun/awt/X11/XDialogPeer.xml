<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.util"/>
        <import package="java.awt"/>
        <import package="java.awt.peer"/>
        <import package="java.awt.event"/>
        <import package="sun.awt.AWTAccessor"/>
        <import package="sun.awt"/>
        <class name="XDialogPeer" line="35">
            <extends class="XDecoratedPeer"/>
            <comment line="131">
                WARNING: don&apos;t call client code in this method!
                
                 The check is performed before the dialog is shown.
                 The focused window can&apos;t be blocked at the time it&apos;s focused.
                 Thus we don&apos;t have to perform any transitive (a blocker of a blocker) checks.                
            </comment>
            <implements interface="DialogPeer"/>
            <declaration name="undecorated" type="Boolean" line="37"/>
            <method name="XDialogPeer" type="constructor" line="39">
                <params>
                    <param name="target" type="Dialog"/>
                </params>
            </method>
            <method name="preInit" type="void" line="43">
                <params>
                    <param name="params" type="XCreateWindowParams"/>
                </params>
                <comment line="56">
                    target.isResizable();                    
                </comment>
                <declaration name="target" type="Dialog" line="46"/>
                <scope line="49"/>
                <scope line="51"/>
            </method>
            <method name="setVisible" type="void" line="61">
                <params>
                    <param name="vis" type="boolean"/>
                </params>
                <scope line="63">
                    <declaration name="target" type="Dialog" line="64"/>
                    <scope line="65">
                        <scope line="66">
                            <scope line="67"/>
                        </scope>
                    </scope>
                    <scope line="71"/>
                </scope>
                <scope line="76"/>
            </method>
            <method name="isTargetUndecorated" type="boolean" line="84">
                <scope line="85"/>
                <scope line="87"/>
            </method>
            <method name="getDecorations" type="int" line="92">
                <comment line="95">
                    remove minimize and maximize buttons for dialogs                    
                </comment>
                <declaration name="d" type="int" line="93"/>
                <scope line="95"/>
                <scope line="97"/>
            </method>
            <method name="getFunctions" type="int" line="103">
                <comment line="106">
                    remove minimize and maximize functions for dialogs                    
                </comment>
                <declaration name="f" type="int" line="104"/>
                <scope line="106"/>
                <scope line="108"/>
            </method>
            <method name="blockWindows" type="void" line="114">
                <params>
                    <param name="toBlock" type="java.util.List&lt;Window&gt;"/>
                </params>
                <declaration name="javaToplevels" type="Vector&amp;lt;XWindowPeer&amp;gt;" line="115"/>
                <scope line="117">
                    <scope line="119">
                        <declaration name="wp" type="XWindowPeer" line="120"/>
                        <scope line="121"/>
                    </scope>
                </scope>
                <scope line="125"/>
            </method>
            <method name="isFocusedWindowModalBlocker" type="boolean" line="137">
                <comment line="145">
                    For the case when a potential blocked window is not yet focused
                     on the Java level (e.g. it&apos;s just been mapped) we&apos;re asking for the
                     focused window on the native level.                    
                </comment>
                <declaration name="focusedWindow" type="Window" line="138"/>
                <declaration name="focusedWindowPeer" type="XWindowPeer" line="139"/>
                <scope line="141"/>
                <scope line="143"/>
                <scope line="151">
                    <scope line="152"/>
                </scope>
            </method>
        </class>
    </source>