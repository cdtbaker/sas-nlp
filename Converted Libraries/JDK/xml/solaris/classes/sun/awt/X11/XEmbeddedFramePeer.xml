<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt"/>
        <import package="java.util.LinkedList"/>
        <import package="java.util.Iterator"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <import package="sun.awt.EmbeddedFrame"/>
        <import package="sun.awt.SunToolkit"/>
        <import package="sun.awt.X11.XConstants"/>
        <class name="XEmbeddedFramePeer" line="40">
            <extends class="XFramePeer"/>
            <comment line="47">
                Caution - can be null if XEmbed is not supported                
            </comment>
            <comment line="191">
                don&apos;t use getLocationOnScreen() inherited from XDecoratedPeer                
            </comment>
            <comment line="201">
                don&apos;t use getBounds() inherited from XDecoratedPeer                
            </comment>
            <comment line="303">
                override XWindowPeer&apos;s method to let the embedded frame to block                
            </comment>
            <comment line="304">
                the containing window                
            </comment>
            <declaration name="xembedLog" type="PlatformLogger" line="42"/>
            <declaration name="strokes" type="LinkedList&lt;AWTKeyStroke&gt;" line="44"/>
            <declaration name="embedder" type="XEmbedClientHelper" line="46"/>
            <method name="XEmbeddedFramePeer" type="constructor" line="47">
                <params>
                    <param name="target" type="EmbeddedFrame"/>
                </params>
                <comment line="48">
                    Don&apos;t specify PARENT_WINDOW param here. Instead we reparent                    
                </comment>
                <comment line="49">
                    this embedded frame peer to the proper parent window after                    
                </comment>
                <comment line="50">
                    an XEventDispatcher is registered to handle XEmbed events                    
                </comment>
            </method>
            <method name="preInit" type="void" line="57">
                <params>
                    <param name="params" type="XCreateWindowParams"/>
                </params>
                <scope line="60"/>
            </method>
            <method name="postInit" type="void" line="64">
                <params>
                    <param name="params" type="XCreateWindowParams"/>
                </params>
                <comment line="67">
                    install X11 event dispatcher                    
                </comment>
                <comment line="69">
                    reparent to XEmbed server                    
                </comment>
                <scope line="66"/>
                <scope line="71">
                    <scope line="73"/>
                    <scope line="78"/>
                </scope>
            </method>
            <method name="dispose" type="void" line="85">
                <comment line="87">
                    uninstall X11 event dispatcher                    
                </comment>
                <scope line="86"/>
            </method>
            <method name="updateMinimumSize" type="void" line="93"/>
            <method name="getWMName" type="String" line="96"/>
            <method name="getParentWindowHandle" type="long" line="100"/>
            <method name="supportsXEmbed" type="boolean" line="104"/>
            <method name="requestWindowFocus" type="boolean" line="108">
                <params>
                    <param name="time" type="long"/>
                    <param name="timeProvided" type="boolean"/>
                </params>
                <comment line="109">
                    Should check for active state of host application                    
                </comment>
                <scope line="110"/>
                <scope line="113"/>
            </method>
            <method name="requestInitialFocus" type="void" line="119">
                <scope line="120"/>
                <scope line="122"/>
            </method>
            <method name="isEventDisabled" type="boolean" line="127">
                <params>
                    <param name="e" type="XEvent"/>
                </params>
                <scope line="128"/>
            </method>
            <method name="handleConfigureNotifyEvent" type="void" line="139">
                <params>
                    <param name="xev" type="XEvent"/>
                </params>
                <comment line="146">
                    fix for 5063031                    
                </comment>
                <comment line="147">
                    if we use super.handleConfigureNotifyEvent() we would get wrong                    
                </comment>
                <comment line="148">
                    size and position because embedded frame really is NOT a decorated one                    
                </comment>
                <declaration name="xe" type="XConfigureEvent" line="141"/>
                <scope line="142"/>
                <declaration name="oldBounds" type="Rectangle" line="154"/>
                <scope line="156"/>
                <scope line="166"/>
            </method>
            <method name="traverseOutForward" type="void" line="172">
                <scope line="173">
                    <scope line="174"/>
                </scope>
            </method>
            <method name="traverseOutBackward" type="void" line="181">
                <scope line="182">
                    <scope line="183"/>
                </scope>
            </method>
            <method name="getLocationOnScreen" type="Point" line="191">
                <scope line="193"/>
                <scope line="195"/>
            </method>
            <method name="getBounds" type="Rectangle" line="201"/>
            <method name="setBoundsPrivate" type="void" line="205">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
            </method>
            <method name="getBoundsPrivate" type="Rectangle" line="209">
                <declaration name="x" type="int" line="210"/>
                <declaration name="w" type="int" line="211"/>
                <declaration name="attr" type="XWindowAttributes" line="212"/>
                <scope line="215"/>
                <scope line="222"/>
            </method>
            <method name="registerAccelerator" type="void" line="229">
                <params>
                    <param name="stroke" type="AWTKeyStroke"/>
                </params>
                <scope line="232"/>
            </method>
            <method name="unregisterAccelerator" type="void" line="237">
                <params>
                    <param name="stroke" type="AWTKeyStroke"/>
                </params>
                <scope line="239">
                    <declaration name="index" type="int" line="240"/>
                </scope>
            </method>
            <method name="notifyStarted" type="void" line="245">
                <comment line="246">
                    Register accelerators                    
                </comment>
                <comment line="254">
                    Now we know that the the embedder is an XEmbed server, so we                    
                </comment>
                <comment line="255">
                    reregister the drop target to enable XDnD protocol support via                    
                </comment>
                <comment line="256">
                    XEmbed.                    
                </comment>
                <scope line="247">
                    <declaration name="i" type="int" line="248"/>
                    <declaration name="iter" type="Iterator&lt;AWTKeyStroke&gt;" line="249"/>
                    <scope line="250"/>
                </scope>
            </method>
            <method name="notifyStopped" type="void" line="259">
                <scope line="260">
                    <scope line="261"/>
                </scope>
            </method>
            <method name="getFocusTargetWindow" type="long" line="267"/>
            <method name="isXEmbedActive" type="boolean" line="271"/>
            <method name="getAbsoluteX" type="int" line="276">
                <declaration name="absoluteLoc" type="Point" line="277"/>
            </method>
            <method name="getAbsoluteY" type="int" line="284">
                <declaration name="absoluteLoc" type="Point" line="285"/>
            </method>
            <method name="getWidth" type="int" line="291"/>
            <method name="getHeight" type="int" line="294"/>
            <method name="getSize" type="Dimension" line="298"/>
            <method name="setModalBlocked" type="void" line="304">
                <params>
                    <param name="blocker" type="Dialog"/>
                    <param name="blocked" type="boolean"/>
                </params>
                <declaration name="frame" type="EmbeddedFrame" line="307"/>
            </method>
            <method name="synthesizeFocusInOut" type="void" line="311">
                <params>
                    <param name="doFocus" type="boolean"/>
                </params>
                <declaration name="xev" type="XFocusChangeEvent" line="312"/>
                <scope line="315"/>
                <scope line="321"/>
            </method>
        </class>
    </source>