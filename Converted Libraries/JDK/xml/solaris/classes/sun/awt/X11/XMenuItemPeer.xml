<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt"/>
        <import package="java.awt.peer"/>
        <import package="java.awt.event"/>
        <import package="java.lang.reflect.Field"/>
        <import package="java.lang.reflect.Method"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="sun.awt.SunToolkit"/>
        <class name="XMenuItemPeer" line="36">
            <comment line="39">
                Data members                
            </comment>
            <comment line="45">
                Primary members                
            </comment>
            <comment line="62">
                Mapping to window                
            </comment>
            <comment line="79">
                Size constants                
            </comment>
            <comment line="85">
                MenuItem&apos;s fields &amp; methods                
            </comment>
            <comment line="103">
                Text Metrics                
            </comment>
            <comment line="178">
                From MenuItemPeer                
            </comment>
            <comment line="314">
                Basic manipulations                
            </comment>
            <comment line="339">
                Overridable behaviour                
            </comment>
            <comment line="354">
                Utility functions                
            </comment>
            <comment line="391">
                Text metrics                
            </comment>
            <comment line="412">
                Returns dimensions of item&apos;s label.
                 This function does not use any locks
                 Returns actual or expired  value
                 or null if error occurs                
            </comment>
            <comment line="418">
                Dimension getTextDimension() {
                TextMetrics textMetrics = this.textMetrics;
                if (textMetrics == null) {
                textMetrics = calcTextMetrics();
                this.textMetrics = textMetrics;
                }
                return (textMetrics != null) ? textMetrics.textDimension : null;                
            </comment>
            <comment line="488">
                Mapping utility functions                
            </comment>
            <implements interface="MenuItemPeer"/>
            <declaration name="container" type="XBaseMenuWindow" line="48"/>
            <javadoc line="48">
                Window that this item belongs to.                
            </javadoc>
            <declaration name="target" type="MenuItem" line="53"/>
            <javadoc line="53">
                Target MenuItem. Note that &apos;target&apos; member
                  in XWindow is required for dispatching events.
                  This member is only used for accessing its fields
                  and firing ActionEvent &amp; ItemEvent                
            </javadoc>
            <declaration name="bounds" type="Rectangle" line="65"/>
            <javadoc line="65">
                Rectange occupied by menu item in container&apos;s
                  coordinates. Filled by map(...) function from
                  XBaseMenuWindow.map()                
            </javadoc>
            <declaration name="textOrigin" type="Point" line="72"/>
            <javadoc line="72">
                Point in container&apos;s coordinate system used as
                  origin by drawText.                
            </javadoc>
            <declaration name="SEPARATOR_WIDTH" type="int" line="81"/>
            <declaration name="SEPARATOR_HEIGHT" type="int" line="82"/>
            <declaration name="f_enabled" type="Field" line="87"/>
            <declaration name="f_label" type="Field" line="88"/>
            <declaration name="f_shortcut" type="Field" line="89"/>
            <declaration name="m_getFont" type="Method" line="90"/>
            <declaration name="m_isItemEnabled" type="Method" line="91"/>
            <declaration name="m_getActionCommand" type="Method" line="92"/>
            <scope line="93"/>
            <declaration name="textMetrics" type="TextMetrics" line="108"/>
            <javadoc line="108">
                Text metrics are filled in calcTextMetrics function
                  and reset in resetTextMetrics function. Text metrics
                  contain calculated dimensions of various components of
                  menu item.                
            </javadoc>
            <class name="TextMetrics" line="116">
                <comment line="118">
                    Calculated text size members                    
                </comment>
                <comment line="167">
                    From MenuComponentPeer                    
                </comment>
                <comment line="436">
                    int getShortcutWidth() {
                    TextMetrics textMetrics = this.textMetrics;
                    if (textMetrics == null) {
                    textMetrics = calcTextMetrics();
                    this.textMetrics = textMetrics;
                    }
                    return (textMetrics != null) ? textMetrics.shortcutWidth : 0;
                    }
                    
                    int getTextBaseline() {
                    TextMetrics textMetrics = this.textMetrics;
                    if (textMetrics == null) {
                    textMetrics = calcTextMetrics();
                    this.textMetrics = textMetrics;
                    }
                    return (textMetrics != null) ? textMetrics.textBaseline : 0;                    
                </comment>
                <implements interface="Cloneable"/>
                <declaration name="textDimension" type="Dimension" line="120"/>
                <declaration name="shortcutWidth" type="int" line="121"/>
                <declaration name="textBaseline" type="int" line="122"/>
                <method name="TextMetrics" type="constructor" line="124">
                    <params>
                        <param name="textDimension" type="Dimension"/>
                        <param name="shortcutWidth" type="int"/>
                        <param name="textBaseline" type="int"/>
                    </params>
                </method>
                <method name="clone" type="Object" line="130">
                    <scope line="131"/>
                    <scope line="133"/>
                </method>
                <method name="getTextDimension" type="Dimension" line="138"/>
                <method name="getShortcutWidth" type="int" line="142"/>
                <method name="getTextBaseline" type="int" line="146"/>
            </class>
            <javadoc line="151">
                Construction                
            </javadoc>
            <method name="XMenuItemPeer" type="constructor" line="156">
                <params>
                    <param name="target" type="MenuItem"/>
                </params>
            </method>
            <javadoc line="160">
                Implementaion of interface methods                
            </javadoc>
            <method name="dispose" type="void" line="169">
                <comment line="166">
                    From MenuComponentPeer                    
                </comment>
                <comment line="170">
                    Empty function                    
                </comment>
            </method>
            <method name="setFont" type="void" line="173">
                <params>
                    <param name="font" type="Font"/>
                </params>
            </method>
            <method name="setLabel" type="void" line="180">
                <params>
                    <param name="label" type="String"/>
                </params>
            </method>
            <method name="setEnabled" type="void" line="185">
                <params>
                    <param name="enabled" type="boolean"/>
                </params>
            </method>
            <javadoc line="189">
                DEPRECATED:  Replaced by setEnabled(boolean).                
                <see>
                    java.awt.peer.MenuItemPeer                    
                </see>
            </javadoc>
            <method name="enable" type="void" line="193"/>
            <javadoc line="197">
                DEPRECATED:  Replaced by setEnabled(boolean).                
                <see>
                    java.awt.peer.MenuItemPeer                    
                </see>
            </javadoc>
            <method name="disable" type="void" line="201"/>
            <javadoc line="205">
                Access to target&apos;s fields                
            </javadoc>
            <method name="getTarget" type="MenuItem" line="211"/>
            <method name="getTargetFont" type="Font" line="215">
                <scope line="216"/>
                <scope line="219"/>
                <scope line="221"/>
                <scope line="223"/>
            </method>
            <method name="getTargetLabel" type="String" line="229">
                <scope line="230"/>
                <scope line="233">
                    <declaration name="label" type="String" line="234"/>
                </scope>
                <scope line="236"/>
            </method>
            <method name="isTargetEnabled" type="boolean" line="242">
                <scope line="243"/>
                <scope line="246"/>
                <scope line="248"/>
            </method>
            <javadoc line="254">
                Returns true if item and all its parents are enabled
                  This function is used to fix
                  6184485: Popup menu is not disabled on XToolkit even when calling setEnabled (false)                
            </javadoc>
            <method name="isTargetItemEnabled" type="boolean" line="259">
                <scope line="260"/>
                <scope line="263"/>
                <scope line="265"/>
                <scope line="267"/>
            </method>
            <method name="getTargetActionCommand" type="String" line="273">
                <scope line="274"/>
                <scope line="277"/>
                <scope line="279"/>
                <scope line="281"/>
            </method>
            <method name="getTargetShortcut" type="MenuShortcut" line="287">
                <scope line="288"/>
                <scope line="291"/>
                <scope line="293"/>
            </method>
            <method name="getShortcutText" type="String" line="299">
                <comment line="300">
                    Fix for 6180413: shortcuts should not be displayed for any of the menuitems in a popup menu                    
                </comment>
                <comment line="308">
                    TODO:This can potentially call user code                    
                </comment>
                <scope line="301"/>
                <scope line="304"/>
                <declaration name="sc" type="MenuShortcut" line="307"/>
            </method>
            <javadoc line="319">
                This function is called when filling item vectors
                  in XMenuWindow &amp; XMenuBar. We need it because peers
                  are created earlier than windows.                
                <param>
                    container the window that this item belongs to.                    
                </param>
            </javadoc>
            <method name="setContainer" type="void" line="325">
                <params>
                    <param name="container" type="XBaseMenuWindow"/>
                </params>
                <scope line="326"/>
            </method>
            <javadoc line="331">
                returns the window that this item belongs to                
            </javadoc>
            <method name="getContainer" type="XBaseMenuWindow" line="334"/>
            <javadoc line="344">
                This function should be overriden simply to
                  return false in inherited classes.                
            </javadoc>
            <method name="isSeparator" type="boolean" line="348">
                <declaration name="r" type="boolean" line="349"/>
            </method>
            <javadoc line="359">
                Returns true if container exists and is showing                
            </javadoc>
            <method name="isContainerShowing" type="boolean" line="362">
                <scope line="363"/>
            </method>
            <javadoc line="369">
                Repaints item if it is showing                
            </javadoc>
            <method name="repaintIfShowing" type="void" line="372">
                <scope line="373"/>
            </method>
            <javadoc line="378">
                This function is invoked when the user clicks
                  on menu item.                
                <param>
                    when the timestamp of action event                    
                </param>
            </javadoc>
            <method name="action" type="void" line="383">
                <params>
                    <param name="when" type="long"/>
                </params>
                <scope line="384"/>
            </method>
            <javadoc line="396">
                Returns text metrics of menu item.
                  This function does not use any locks
                  and is guaranteed to return some value
                  (possibly actual, possibly expired)                
            </javadoc>
            <method name="getTextMetrics" type="TextMetrics" line="402">
                <declaration name="textMetrics" type="TextMetrics" line="403"/>
                <scope line="404"/>
            </method>
            <javadoc line="426">
                Returns width of item&apos;s shortcut label,
                  0 if item has no shortcut.
                  The height of shortcut can be deternimed
                  from text dimensions.
                  This function does not use any locks
                  and is guaranteed to return some value
                  (possibly actual, possibly expired)                
            </javadoc>
            <method name="calcTextMetrics" type="TextMetrics" line="453">
                <comment line="435">
                    int getShortcutWidth() {
                    TextMetrics textMetrics = this.textMetrics;
                    if (textMetrics == null) {
                    textMetrics = calcTextMetrics();
                    this.textMetrics = textMetrics;
                    }
                    return (textMetrics != null) ? textMetrics.shortcutWidth : 0;
                    }
                    
                    int getTextBaseline() {
                    TextMetrics textMetrics = this.textMetrics;
                    if (textMetrics == null) {
                    textMetrics = calcTextMetrics();
                    this.textMetrics = textMetrics;
                    }
                    return (textMetrics != null) ? textMetrics.textBaseline : 0;                    
                </comment>
                <scope line="454"/>
                <scope line="457"/>
                <declaration name="g" type="Graphics" line="460"/>
                <scope line="461"/>
                <scope line="464">
                    <declaration name="fm" type="FontMetrics" line="466"/>
                    <declaration name="str" type="String" line="467"/>
                    <declaration name="width" type="int" line="468"/>
                    <declaration name="height" type="int" line="469"/>
                    <declaration name="textDimension" type="Dimension" line="470"/>
                    <declaration name="textBaseline" type="int" line="471"/>
                    <declaration name="sc" type="String" line="472"/>
                    <declaration name="shortcutWidth" type="int" line="473"/>
                </scope>
                <scope line="475"/>
            </method>
            <method name="resetTextMetrics" type="void" line="480">
                <scope line="482"/>
            </method>
            <javadoc line="493">
                Sets mapping of item to window.                
                <param>
                    bounds bounds of item in container's coordinates                    
                </param>
                <param>
                    textOrigin point for drawString in container's coordinates                    
                </param>
                <see>
                    XBaseMenuWindow.map()                    
                </see>
            </javadoc>
            <method name="map" type="void" line="499">
                <params>
                    <param name="bounds" type="Rectangle"/>
                    <param name="textOrigin" type="Point"/>
                </params>
            </method>
            <javadoc line="504">
                returns bounds of item that were previously set by map() function                
            </javadoc>
            <method name="getBounds" type="Rectangle" line="507"/>
            <javadoc line="511">
                returns origin of item&apos;s text that was previously set by map() function                
            </javadoc>
            <method name="getTextOrigin" type="Point" line="514"/>
        </class>
    </source>