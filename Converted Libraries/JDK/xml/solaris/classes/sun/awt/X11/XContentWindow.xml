<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt.Component"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.Insets"/>
        <import package="java.awt.event.ComponentEvent"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <import package="sun.awt.AWTAccessor"/>
        <class name="XContentWindow" line="37">
            <extends class="XWindow"/>
            <comment line="68">
                A list of expose events that come when the parentFrame is iconified                
            </comment>
            <comment line="108">
                Coordinates are that of the shell                
            </comment>
            <comment line="136">
                NOTE: This method may be called by privileged threads.                
            </comment>
            <comment line="137">
                DO NOT INVOKE CLIENT CODE ON THIS THREAD!                
            </comment>
            <javadoc line="37">
                This class implements window which serves as content window for decorated frames.
                  Its purpose to provide correct events dispatching for the complex
                  constructs such as decorated frames.
                  It should always be located at (- left inset, - top inset) in the associated
                  decorated window.  So coordinates in it would be the same as java coordinates.                
            </javadoc>
            <declaration name="insLog" type="PlatformLogger" line="46"/>
            <method name="createContent" type="XContentWindow" line="48">
                <params>
                    <param name="parentFrame" type="XDecoratedPeer"/>
                </params>
                <comment line="51">
                    Fix for  - set the location of the content window to the (-left inset, -top inset)                    
                </comment>
                <declaration name="dims" type="WindowDimensions" line="49"/>
                <declaration name="rec" type="Rectangle" line="50"/>
                <declaration name="ins" type="Insets" line="52"/>
                <scope line="53"/>
                <scope line="56"/>
                <declaration name="cw" type="XContentWindow" line="60"/>
            </method>
            <declaration name="parentFrame" type="XDecoratedPeer" line="65"/>
            <declaration name="iconifiedExposeEvents" type="java.util.List&lt;SavedExposeEvent&gt;" line="68"/>
            <method name="XContentWindow" type="constructor" line="71">
                <params>
                    <param name="parentFrame" type="XDecoratedPeer"/>
                    <param name="bounds" type="Rectangle"/>
                </params>
            </method>
            <method name="preInit" type="void" line="76">
                <params>
                    <param name="params" type="XCreateWindowParams"/>
                </params>
                <declaration name="eventMask" type="Long" line="79"/>
                <scope line="80"/>
            </method>
            <method name="getWMName" type="String" line="86"/>
            <method name="isEventDisabled" type="boolean" line="89">
                <params>
                    <param name="e" type="XEvent"/>
                </params>
                <comment line="91">
                    Override parentFrame to receive MouseEnter/Exit                    
                </comment>
                <comment line="95">
                    We handle ConfigureNotify specifically in XDecoratedPeer                    
                </comment>
                <comment line="98">
                    We don&apos;t want SHOWN/HIDDEN on content window since it will duplicate XDecoratedPeer                    
                </comment>
            </method>
            <method name="setContentBounds" type="void" line="108">
                <params>
                    <param name="dims" type="WindowDimensions"/>
                </params>
                <comment line="111">
                    Bounds of content window are of the same size as bounds of Java window and with                    
                </comment>
                <comment line="112">
                    location as -(insets)                    
                </comment>
                <comment line="120">
                    Fix for 5023533:                    
                </comment>
                <comment line="121">
                    Change in the size of the content window means, well, change of the size                    
                </comment>
                <comment line="122">
                    Change in the location of the content window means change in insets                    
                </comment>
                <scope line="110">
                    <declaration name="newBounds" type="Rectangle" line="113"/>
                    <declaration name="in" type="Insets" line="114"/>
                    <scope line="115"/>
                    <declaration name="needHandleResize" type="boolean" line="123"/>
                    <scope line="125"/>
                </scope>
                <scope line="129"/>
            </method>
            <method name="handleResize" type="void" line="137">
                <params>
                    <param name="bounds" type="Rectangle"/>
                </params>
            </method>
            <method name="handleExposeEvent" type="void" line="143">
                <params>
                    <param name="target" type="Component"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="144">
                    TODO: ?                    
                </comment>
                <comment line="145">
                    get rid of &apos;istanceof&apos; by subclassing:                    
                </comment>
                <comment line="146">
                    XContentWindow -&gt; XFrameContentWindow                    
                </comment>
                <comment line="148">
                    Expose event(s) that result from deiconification                    
                </comment>
                <comment line="149">
                    come before a deicinofication notification.                    
                </comment>
                <comment line="150">
                    We reorder these events by saving all expose events                    
                </comment>
                <comment line="151">
                    that come when the frame is iconified. Then we                    
                </comment>
                <comment line="152">
                    actually handle saved expose events on deiconification.                    
                </comment>
                <comment line="156">
                    Save expose events if the frame is iconified                    
                </comment>
                <comment line="157">
                    in order to handle them on deiconification.                    
                </comment>
                <comment line="160">
                    Normal case: [it is not a frame or] the frame is not iconified.                    
                </comment>
                <scope line="155"/>
                <scope line="159"/>
            </method>
            <method name="purgeIconifiedExposeEvents" type="void" line="165">
                <scope line="166"/>
            </method>
            <class name="SavedExposeEvent" line="172">
                <declaration name="target" type="Component" line="173"/>
                <declaration name="x" type="int" line="174"/>
                <method name="SavedExposeEvent" type="constructor" line="175">
                    <params>
                        <param name="target" type="Component"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="w" type="int"/>
                        <param name="h" type="int"/>
                    </params>
                </method>
            </class>
            <method name="toString" type="String" line="184"/>
        </class>
    </source>