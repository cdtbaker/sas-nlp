<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="java.lang.ref.WeakReference"/>
        <import package="sun.java2d.SunGraphics2D"/>
        <import package="sun.java2d.pipe.Region"/>
        <import package="sun.awt.AWTAccessor"/>
        <import package="sun.awt.SunToolkit"/>
        <class name="XWarningWindow" line="10">
            <extends class="XWindow"/>
            <declaration name="SHOWING_DELAY" type="int" line="11"/>
            <declaration name="HIDING_DELAY" type="int" line="12"/>
            <declaration name="ownerWindow" type="Window" line="13"/>
            <declaration name="ownerPeer" type="WeakReference&lt;XWindowPeer&gt;" line="14"/>
            <declaration name="parentWindow" type="long" line="15"/>
            <declaration name="OWNER" type="String" line="16"/>
            <declaration name="tooltip" type="InfoWindow.Tooltip" line="17"/>
            <declaration name="currentIcon" type="int" line="18"/>
            <javadoc line="18">
                Animation stage.                
            </javadoc>
            <declaration name="currentSize" type="int" line="22"/>
            <declaration name="icons" type="XIconInfo[][]" line="23"/>
            <method name="getSecurityIconInfo" type="XIconInfo" line="24">
                <params>
                    <param name="size" type="int"/>
                    <param name="num" type="int"/>
                </params>
                <scope line="25">
                    <scope line="26">
                        <scope line="28"/>
                        <scope line="42"/>
                    </scope>
                </scope>
                <declaration name="sizeIndex" type="int" line="58"/>
            </method>
            <method name="updateIconSize" type="void" line="61">
                <declaration name="newSize" type="int" line="62"/>
                <scope line="63">
                    <declaration name="insets" type="Insets" line="64"/>
                    <declaration name="max" type="int" line="65"/>
                    <scope line="66"/>
                    <scope line="69"/>
                    <scope line="72"/>
                    <scope line="75"/>
                </scope>
                <scope line="79"/>
                <scope line="83">
                    <scope line="84">
                        <declaration name="ico" type="XIconInfo" line="86"/>
                    </scope>
                </scope>
                <scope line="91"/>
            </method>
            <method name="getSecurityIconInfo" type="XIconInfo" line="95"/>
            <method name="XWarningWindow" type="constructor" line="99">
                <params>
                    <param name="ownerWindow" type="Window"/>
                    <param name="parentWindow" type="long"/>
                    <param name="ownerPeer" type="XWindowPeer"/>
                </params>
                <anonymous_class line="103">
                    <method name="isDisposed" type="boolean" line="104"/>
                    <method name="getBounds" type="Rectangle" line="107"/>
                    <method name="getTooltipString" type="String" line="110"/>
                </anonymous_class>
            </method>
            <method name="requestNoTaskbar" type="void" line="117">
                <declaration name="netProtocol" type="XNETProtocol" line="118"/>
                <scope line="119"/>
            </method>
            <method name="postInit" type="void" line="123">
                <params>
                    <param name="params" type="XCreateWindowParams"/>
                </params>
                <scope line="126">
                    <declaration name="parentWindow" type="long" line="129"/>
                    <declaration name="hints" type="XWMHints" line="131"/>
                </scope>
                <scope line="139"/>
            </method>
            <javadoc line="143">
                @param x,y,w,h coordinates of the untrusted window                
            </javadoc>
            <method name="reposition" type="void" line="146">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="point" type="Point2D" line="147"/>
            </method>
            <method name="getWMName" type="String" line="150"/>
            <method name="getGraphics" type="Graphics" line="153"/>
            <method name="paint" type="void" line="157">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
            </method>
            <method name="getWarningString" type="String" line="160"/>
            <method name="getWidth" type="int" line="163"/>
            <method name="getHeight" type="int" line="166"/>
            <method name="getBackground" type="Color" line="169"/>
            <method name="getColor" type="Color" line="172"/>
            <method name="getFont" type="Font" line="175"/>
            <method name="repaint" type="void" line="178">
                <declaration name="bounds" type="Rectangle" line="179"/>
                <declaration name="g" type="Graphics" line="180"/>
                <scope line="181"/>
                <scope line="184"/>
            </method>
            <method name="handleExposeEvent" type="void" line="188">
                <params>
                    <param name="xev" type="XEvent"/>
                </params>
                <declaration name="xe" type="XExposeEvent" line="190"/>
                <declaration name="x" type="int" line="191"/>
                <declaration name="y" type="int" line="192"/>
                <declaration name="width" type="int" line="193"/>
                <declaration name="height" type="int" line="194"/>
                <anonymous_class line="195">
                    <method name="run" type="void" line="196">
                        <declaration name="g" type="Graphics" line="197"/>
                        <scope line="198"/>
                        <scope line="201"/>
                    </method>
                </anonymous_class>
            </method>
            <method name="isEventDisabled" type="boolean" line="208">
                <params>
                    <param name="e" type="XEvent"/>
                </params>
            </method>
            <javadoc line="211">
                Send a synthetic UnmapNotify in order to withdraw the window.                
            </javadoc>
            <method name="withdraw" type="void" line="214">
                <declaration name="req" type="XEvent" line="215"/>
                <scope line="216">
                    <declaration name="root" type="long" line="217"/>
                    <scope line="219"/>
                    <scope line="222"/>
                    <declaration name="umev" type="XUnmapEvent" line="226"/>
                    <scope line="231"/>
                    <scope line="234"/>
                </scope>
                <scope line="238"/>
            </method>
            <method name="stateChanged" type="void" line="242">
                <params>
                    <param name="time" type="long"/>
                    <param name="oldState" type="int"/>
                    <param name="newState" type="int"/>
                </params>
                <scope line="243"/>
            </method>
            <method name="setMouseAbove" type="void" line="248">
                <params>
                    <param name="above" type="boolean"/>
                </params>
                <declaration name="p" type="XWindowPeer" line="250"/>
                <scope line="251"/>
            </method>
            <method name="enterNotify" type="void" line="255">
                <params>
                    <param name="window" type="long"/>
                </params>
                <scope line="257"/>
            </method>
            <method name="leaveNotify" type="void" line="261">
                <params>
                    <param name="window" type="long"/>
                </params>
                <scope line="263"/>
            </method>
            <method name="xSetVisible" type="void" line="267">
                <params>
                    <param name="visible" type="boolean"/>
                </params>
            </method>
            <declaration name="hidingTask" type="Runnable" line="271"/>
            <anonymous_class line="271">
                <method name="run" type="void" line="272"/>
            </anonymous_class>
            <declaration name="showingTask" type="Runnable" line="277"/>
            <anonymous_class line="277">
                <method name="run" type="void" line="278">
                    <scope line="279">
                        <declaration name="peer" type="XWindowPeer" line="282"/>
                        <scope line="283"/>
                    </scope>
                    <scope line="288"/>
                </method>
            </anonymous_class>
            <method name="setSecurityWarningVisible" type="void" line="295">
                <params>
                    <param name="visible" type="boolean"/>
                    <param name="doSchedule" type="boolean"/>
                </params>
                <scope line="296">
                    <scope line="299"/>
                    <scope line="302"/>
                    <scope line="305"/>
                    <scope line="308"/>
                </scope>
                <scope line="312">
                    <scope line="315"/>
                    <scope line="318"/>
                    <scope line="321"/>
                </scope>
            </method>
        </class>
    </source>