<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt.datatransfer.Transferable"/>
        <import package="java.awt.dnd.DnDConstants"/>
        <import package="java.awt.dnd.InvalidDnDOperationException"/>
        <import package="java.util.Map"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <import package="sun.misc.Unsafe"/>
        <class name="XDnDDragSourceProtocol" line="8">
            <extends class="XDragSourceProtocol"/>
            <javadoc line="8">
                XDragSourceProtocol implementation for XDnD protocol.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="logger" type="PlatformLogger" line="13"/>
            <declaration name="unsafe" type="Unsafe" line="14"/>
            <method name="XDnDDragSourceProtocol" type="constructor" line="15">
                <params>
                    <param name="listener" type="XDragSourceProtocolListener"/>
                </params>
            </method>
            <javadoc line="18">
                Creates an instance associated with the specified listener.                
                <throws>
                    NullPointerException if listener is <code>null</code>.                    
                </throws>
            </javadoc>
            <method name="createInstance" type="XDragSourceProtocol" line="22">
                <params>
                    <param name="listener" type="XDragSourceProtocolListener"/>
                </params>
            </method>
            <method name="getProtocolName" type="String" line="25"/>
            <javadoc line="28">
                Performs protocol-specific drag initialization.                
                <returns>
                    true if the initialized successfully.                    
                </returns>
            </javadoc>
            <method name="initializeDragImpl" type="void" line="32">
                <params>
                    <param name="actions" type="int"/>
                    <param name="contents" type="Transferable"/>
                    <param name="formatMap" type="Map"/>
                    <param name="formats" type="long[]"/>
                </params>
            </method>
            <method name="processXdndStatus" type="boolean" line="82">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <declaration name="action" type="int" line="83"/>
                <scope line="84"/>
                <scope line="87"/>
            </method>
            <method name="processXdndFinished" type="boolean" line="93">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <scope line="94"/>
                <scope line="97">
                    <declaration name="success" type="boolean" line="98"/>
                    <declaration name="action" type="int" line="99"/>
                </scope>
                <scope line="102"/>
            </method>
            <method name="processClientMessage" type="boolean" line="108">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <scope line="109"/>
                <scope line="112"/>
                <scope line="115"/>
            </method>
            <method name="getTargetWindowInfo" type="TargetWindowInfo" line="119">
                <params>
                    <param name="window" type="long"/>
                </params>
            </method>
            <method name="sendEnterMessage" type="void" line="171">
                <params>
                    <param name="formats" type="long[]"/>
                    <param name="sourceAction" type="int"/>
                    <param name="sourceActions" type="int"/>
                    <param name="time" type="long"/>
                </params>
            </method>
            <method name="sendMoveMessage" type="void" line="194">
                <params>
                    <param name="xRoot" type="int"/>
                    <param name="yRoot" type="int"/>
                    <param name="sourceAction" type="int"/>
                    <param name="sourceActions" type="int"/>
                    <param name="time" type="long"/>
                </params>
            </method>
            <method name="sendLeaveMessage" type="void" line="214">
                <params>
                    <param name="time" type="long"/>
                </params>
            </method>
            <method name="sendDropMessage" type="void" line="234">
                <params>
                    <param name="xRoot" type="int"/>
                    <param name="yRoot" type="int"/>
                    <param name="sourceAction" type="int"/>
                    <param name="sourceActions" type="int"/>
                    <param name="time" type="long"/>
                </params>
            </method>
            <method name="processProxyModeEvent" type="boolean" line="254">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                    <param name="sourceWindow" type="long"/>
                </params>
            </method>
            <method name="run" type="void" line="273"/>
        </class>
    </source>