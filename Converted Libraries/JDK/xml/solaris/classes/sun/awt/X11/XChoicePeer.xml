<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt"/>
        <import package="java.awt.peer"/>
        <import package="java.awt.event"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <class name="XChoicePeer" line="45">
            <extends class="XComponentPeer"/>
            <comment line="49">
                Maximum number of                
            </comment>
            <comment line="50">
                items to be displayed
                 at a time in an
                 unfurled Choice
                 Description of these constants in ListHelper                
            </comment>
            <comment line="60">
                SHARE THESE!                
            </comment>
            <comment line="66">
                Stolen from Tiny                
            </comment>
            <comment line="70">
                FIXME: Motif uses a different focus color for the item within
                 the unfurled Choice list and for when the Choice itself is focused and
                 popped up.                
            </comment>
            <comment line="75">
                TODO: there is a time value that the mouse is held down.  If short
                 enough,  the Choice stays popped down.  If long enough, Choice
                 is furled when the mouse is released                
            </comment>
            <comment line="79">
                Choice list is popped down                
            </comment>
            <comment line="81">
                Mouse was pressed and is being
                 dragged over the (unfurled)
                 Choice                
            </comment>
            <comment line="85">
                Mouse is interacting with the
                 scrollbar                
            </comment>
            <comment line="88">
                mouse was pressed on
                 furled Choice so we
                 not need to furl the
                 Choice when MOUSE_RELEASED occured                
            </comment>
            <comment line="93">
                6425067. Mouse was pressed on furled choice and dropdown list appeared over Choice itself
                 and then there were no mouse movements until MOUSE_RELEASE.
                 This scenario leads to ItemStateChanged as the choice logic uses
                 MouseReleased event to send ItemStateChanged. To prevent it we should
                 use a combination of firstPress and wasDragged variables.
                 The only difference in dragging and wasDragged is: last one will not
                 set to false on mouse ungrab. It become false after MouseRelased() finishes.                
            </comment>
            <comment line="104">
                TODO: Choice remembers where it was scrolled to when unfurled - it&apos;s not
                 always to the currently selected item.                
            </comment>
            <comment line="107">
                Indicates whether or not to paint selected item in the choice.
                 Default is to paint                
            </comment>
            <comment line="111">
                If set, indicates components under which choice popup should be showed.
                 The choice&apos;s popup width and location should be adjust to appear
                 under both choice and alignUnder component.                
            </comment>
            <comment line="116">
                If cursor is outside of an unfurled Choice when the mouse is
                 released, Choice item should NOT be updated.  Remember the proper index.                
            </comment>
            <comment line="120">
                Holds the listener (XFileDialogPeer) which the processing events from the choice
                 See 6240074 for more information                
            </comment>
            <comment line="167">
                6399679. check if super.setBounds() actually changes the size of the
                 component and then compare current Choice size with a new one. If
                 they differs then hide dropdown menu                
            </comment>
            <comment line="187">
                Fix for 6246503 : Disabling a choice after selection locks keyboard, mouse and makes the system unusable, Xtoolkit
                 if setEnabled(false) invoked we should close opened choice in
                 order to prevent keyboardmouse lock.                
            </comment>
            <comment line="379">
                helper method for mouseReleased routine                
            </comment>
            <comment line="502">
                Stolen from TinyChoicePeer                
            </comment>
            <comment line="515">
                Layout the...                
            </comment>
            <comment line="601">
                ChoicePeer methods stolen from TinyChoicePeer                
            </comment>
            <comment line="713">
                see 6240074 for more information                
            </comment>
            <comment line="718">
                see 6240074 for more information                
            </comment>
            <comment line="727">
                fix for 6261352. We should detect if current parent Window (containing a Choice) become iconified and hide pop-down menu with grab release.
                 In this case we should hide pop-down menu.                
            </comment>
            <comment line="730">
                calls from XWindowPeer. Could accept X-styled state events                
            </comment>
            <comment line="737">
                calls from XFramePeer. Could accept Frame&apos;s states.                
            </comment>
            <comment line="744">
                                
            </comment>
            <comment line="745">
                Common functionality between List &amp; Choice                
            </comment>
            <comment line="1003">
                UnfurledChoice                
            </comment>
            <comment line="1012">
                fix for 6239938 : Choice drop-down does not disappear when it loses
                 focus, on XToolkit
                 We are able to handle all _Key_ events received by Choice when
                 it is in opened state without sending it to EventQueue.
                 If Choice is in closed state we should behave like before: send
                 all events to EventQueue.
                 To be compatible with Motif we should handle all KeyEvents in
                 Choice if it is opened. KeyEvents should be sent into Java if Choice is not opened.                
            </comment>
            <comment line="1078">
                convenient method
                do not generate this kind of Events                
            </comment>
            <comment line="1089">
                Returns true if the MouseEvent coords
                 are inside of the Choice itself (it doesnt&apos;s depends on
                 if this choice opened or not).                
            </comment>
            <implements interface="ChoicePeer"/>
            <implements interface="ToplevelStateListener"/>
            <declaration name="log" type="PlatformLogger" line="46"/>
            <declaration name="MAX_UNFURLED_ITEMS" type="int" line="48"/>
            <declaration name="TEXT_SPACE" type="int" line="53"/>
            <declaration name="BORDER_WIDTH" type="int" line="54"/>
            <declaration name="ITEM_MARGIN" type="int" line="55"/>
            <declaration name="SCROLLBAR_WIDTH" type="int" line="56"/>
            <declaration name="focusInsets" type="Insets" line="60"/>
            <declaration name="WIDGET_OFFSET" type="int" line="63"/>
            <declaration name="TEXT_XPAD" type="int" line="66"/>
            <declaration name="TEXT_YPAD" type="int" line="67"/>
            <declaration name="focusColor" type="Color" line="72"/>
            <declaration name="unfurled" type="boolean" line="78"/>
            <declaration name="dragging" type="boolean" line="80"/>
            <declaration name="mouseInSB" type="boolean" line="84"/>
            <declaration name="firstPress" type="boolean" line="87"/>
            <declaration name="wasDragged" type="boolean" line="99"/>
            <declaration name="helper" type="ListHelper" line="100"/>
            <declaration name="unfurledChoice" type="UnfurledChoice" line="101"/>
            <declaration name="drawSelectedItem" type="boolean" line="108"/>
            <declaration name="alignUnder" type="Component" line="113"/>
            <declaration name="dragStartIdx" type="int" line="117"/>
            <declaration name="choiceListener" type="XChoicePeerListener" line="121"/>
            <method name="XChoicePeer" type="constructor" line="123">
                <params>
                    <param name="target" type="Choice"/>
                </params>
            </method>
            <method name="preInit" type="void" line="127">
                <params>
                    <param name="params" type="XCreateWindowParams"/>
                </params>
                <declaration name="target" type="Choice" line="129"/>
                <declaration name="numItems" type="int" line="130"/>
            </method>
            <method name="postInit" type="void" line="147">
                <params>
                    <param name="params" type="XCreateWindowParams"/>
                </params>
                <comment line="153">
                    Add all items                    
                </comment>
                <declaration name="target" type="Choice" line="149"/>
                <declaration name="numItems" type="int" line="150"/>
                <scope line="153"/>
                <scope line="156"/>
            </method>
            <method name="isFocusable" type="boolean" line="164"/>
            <method name="setBounds" type="void" line="169">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="op" type="int"/>
                </params>
                <declaration name="oldX" type="int" line="170"/>
                <declaration name="oldY" type="int" line="171"/>
                <declaration name="oldWidth" type="int" line="172"/>
                <declaration name="oldHeight" type="int" line="173"/>
                <scope line="175"/>
            </method>
            <method name="focusGained" type="void" line="180">
                <params>
                    <param name="e" type="FocusEvent"/>
                </params>
                <comment line="182">
                    TODO: only need to paint the focus bit                    
                </comment>
            </method>
            <method name="setEnabled" type="void" line="191">
                <params>
                    <param name="value" type="boolean"/>
                </params>
                <scope line="194"/>
            </method>
            <method name="focusLost" type="void" line="199">
                <params>
                    <param name="e" type="FocusEvent"/>
                </params>
                <comment line="201">
                    TODO: only need to paint the focus bit?                    
                </comment>
            </method>
            <method name="ungrabInputImpl" type="void" line="205">
                <scope line="206"/>
            </method>
            <method name="handleJavaKeyEvent" type="void" line="216">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
                <scope line="217"/>
            </method>
            <method name="keyPressed" type="void" line="222">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
                <comment line="225">
                    UP &amp; DOWN are same if furled or unfurled                    
                </comment>
                <comment line="291">
                    This also happens on
                     - MouseButton2,3, etc. press
                     - ENTER press                    
                </comment>
                <comment line="295">
                    KeyEvent.VK_ENTER:                    
                </comment>
                <comment line="309">
                    See 6240074 for more information                    
                </comment>
                <scope line="226">
                    <scope line="227">
                        <declaration name="newIdx" type="int" line="229"/>
                    </scope>
                </scope>
                <scope line="241">
                    <scope line="242">
                        <declaration name="newIdx" type="int" line="244"/>
                    </scope>
                </scope>
                <scope line="256">
                    <declaration name="oldIdx" type="int" line="257"/>
                    <declaration name="newIdx" type="int" line="259"/>
                    <scope line="260"/>
                </scope>
                <scope line="271">
                    <declaration name="oldIdx" type="int" line="272"/>
                    <declaration name="newIdx" type="int" line="274"/>
                    <scope line="275"/>
                </scope>
                <scope line="287">
                    <scope line="288">
                        <scope line="289"/>
                        <scope line="294">
                            <declaration name="newIdx" type="int" line="295"/>
                        </scope>
                    </scope>
                    <scope line="309"/>
                </scope>
                <scope line="315"/>
            </method>
            <method name="handlesWheelScrolling" type="boolean" line="322"/>
            <method name="handleJavaMouseWheelEvent" type="void" line="324">
                <params>
                    <param name="e" type="MouseWheelEvent"/>
                </params>
                <scope line="325">
                    <scope line="326"/>
                </scope>
            </method>
            <method name="handleJavaMouseEvent" type="void" line="332">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
                <declaration name="i" type="int" line="334"/>
            </method>
            <method name="mousePressed" type="void" line="348">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
                <comment line="350">
                    fix for 5003166: a Choice on XAWT shouldn&apos;t react to any
                     mouse button presses except left. This involves presses on
                     Choice but not on opened part of choice.                    
                </comment>
                <comment line="358">
                    fix 6259328: PIT: Choice scrolls when dragging the parent frame while drop-down is active, XToolkit                    
                </comment>
                <comment line="364">
                    Press on unfurled Choice.  Highlight the item under the cursor,
                     but don&apos;t send item event or set the text on the button yet                    
                </comment>
                <comment line="369">
                    Choice is up - unfurl it                    
                </comment>
                <scope line="354">
                    <scope line="356">
                        <scope line="360"/>
                    </scope>
                    <scope line="367"/>
                </scope>
            </method>
            <method name="hidePopdownMenu" type="void" line="381"/>
            <method name="mouseReleased" type="void" line="387">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
                <comment line="394">
                    We pressed and dragged onto the Choice, or, this is the
                     second release after clicking to make the Choice &quot;stick&quot;
                     unfurled.
                     This release should ungrab/furl, and set the new item if
                     release was over the unfurled Choice.                    
                </comment>
                <comment line="400">
                    Fix for 6239944 : Choice shouldn&apos;t close its
                     pop-down menu if user presses Mouse on Choice&apos;s Scrollbar
                     some additional cases like releasing mouse outside
                     of Choice are considered too                    
                </comment>
                <comment line="407">
                    Fixed 6318746: REG: File Selection is failing
                     We shouldn&apos;t restore the selected item
                     if the mouse was dragged outside the drop-down choice area                    
                </comment>
                <comment line="411">
                    Set the selected item back how it was.                    
                </comment>
                <comment line="415">
                    Choice must be closed if user releases mouse on
                     pop-down menu on the second click                    
                </comment>
                <comment line="420">
                    Choice must be closed if user releases mouse
                     outside of Choice&apos;s pop-down menu  on the second click                    
                </comment>
                <comment line="425">
                    if user drags Mouse on pop-down menu, Scrollbar or
                     outside the Choice                    
                </comment>
                <comment line="430">
                    this could happen when user has opened a Choice and
                     released mouse button. Then he drags mouse on the
                     Scrollbar and releases mouse again.                    
                </comment>
                <comment line="441">
                    Only update the Choice if the mouse button is released
                     over the list of items.                    
                </comment>
                <comment line="446">
                    Update the selected item in the target now that
                     the mouse selection is complete.                    
                </comment>
                <comment line="450">
                    NOTE: We get a repaint when Choice.select()
                     calls our peer.select().                    
                </comment>
                <comment line="457">
                    fix for 6239941 : Choice triggers ItemEvent when selecting an item with right mouse button, Xtoolkit
                     We should generate ItemEvent if only                    
                </comment>
                <comment line="469">
                    see 6240074 for more information                    
                </comment>
                <comment line="476">
                    See 6243382 for more information                    
                </comment>
                <scope line="388">
                    <scope line="389"/>
                    <scope line="392">
                        <declaration name="isMouseEventInside" type="boolean" line="403"/>
                        <declaration name="isMouseInListArea" type="boolean" line="404"/>
                        <scope line="409"/>
                        <scope line="416"/>
                        <scope line="421"/>
                        <scope line="426"/>
                        <scope line="435"/>
                        <scope line="439">
                            <scope line="442">
                                <declaration name="newIdx" type="int" line="443"/>
                                <scope line="444">
                                    <scope line="447"/>
                                    <scope line="452"/>
                                    <scope line="461"/>
                                    <scope line="469"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="mouseDragged" type="void" line="486">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
                <comment line="488">
                    fix for 5003166. On Motif user are unable to drag
                     mouse inside opened Choice if he drags the mouse with
                     different from LEFT mouse button ( e.g. RIGHT or MIDDLE).
                     This fix make impossible to drag mouse inside opened choice
                     with other mouse buttons rather then LEFT one.                    
                </comment>
                <scope line="494"/>
            </method>
            <method name="getMinimumSize" type="Dimension" line="502">
                <comment line="504">
                    TODO: move this impl into ListHelper?                    
                </comment>
                <declaration name="fm" type="FontMetrics" line="504"/>
                <declaration name="c" type="Choice" line="505"/>
                <declaration name="w" type="int" line="506"/>
                <scope line="507"/>
            </method>
            <method name="layout" type="void" line="517">
                <comment line="519">
                    Dimension size = target.getSize();
                    Font f = target.getFont();
                    FontMetrics fm = target.getFontMetrics(f);
                    String text = ((Choice)target).getLabel();
                    
                    textRect.height = fm.getHeight();
                    
                    checkBoxSize = getChoiceSize(fm);
                    
                     Note - Motif appears to use an left inset that is slightly
                     scaled to the checkboxfont size.
                    cbX = borderInsets.left + checkBoxInsetFromText;
                    cbY = size.height  2 - checkBoxSize  2;
                    int minTextX = borderInsets.left + 2  checkBoxInsetFromText + checkBoxSize;
                     FIXME: will need to account for alignment?
                     FIXME: call layout() on alignment changes
                    textRect.width = fm.stringWidth(text);
                    textRect.width = fm.stringWidth(text == null ? &quot;&quot; : text);
                    textRect.x = Math.max(minTextX, size.width  2 - textRect.width  2);
                    textRect.y = size.height  2 - textRect.height  2 + borderInsets.top;
                    
                    focusRect.x = focusInsets.left;
                    focusRect.y = focusInsets.top;
                    focusRect.width = size.width-(focusInsets.left+focusInsets.right)-1;
                    focusRect.height = size.height-(focusInsets.top+focusInsets.bottom)-1;
                    
                    myCheckMark = AffineTransform.getScaleInstance((double)target.getFont().getSize()  MASTER_SIZE, (double)target.getFont().getSize()  MASTER_SIZE).createTransformedShape(MASTER_CHECKMARK);                    
                </comment>
            </method>
            <javadoc line="550">
                Paint the choice                
            </javadoc>
            <method name="paint" type="void" line="553">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <comment line="558">
                    TODO: when mouse is down over button, widget should be drawn depressed                    
                </comment>
                <declaration name="size" type="Dimension" line="555"/>
                <scope line="564">
                    <declaration name="fm" type="FontMetrics" line="566"/>
                    <declaration name="lbl" type="String" line="567"/>
                    <scope line="568">
                        <scope line="570"/>
                        <scope line="574"/>
                    </scope>
                </scope>
                <scope line="583"/>
                <scope line="586"/>
            </method>
            <method name="paintFocus" type="void" line="593">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="select" type="void" line="604">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="add" type="void" line="610">
                <params>
                    <param name="item" type="String"/>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="remove" type="void" line="615">
                <params>
                    <param name="index" type="int"/>
                </params>
                <comment line="628">
                    Fix for 6248016
                     After removing the item of the choice we need to reshape unfurled choice
                     in order to keep actual bounds of the choice                    
                </comment>
                <comment line="634">
                    condition added only for performance                    
                </comment>
                <comment line="638">
                    Fix 6292186: PIT: Choice is not refreshed properly when the last item gets removed, XToolkit
                     We should take into account that there is no &apos;select&apos; invoking (hence &apos;repaint&apos;)
                     if the choice is empty (see Choice.java method removeNoInvalidate())
                     The condition isn&apos;t &apos;visibled&apos; since it would be cause of the twice repainting                    
                </comment>
                <comment line="648">
                    condition added only for performance
                     the count of the visible items changed                    
                </comment>
                <comment line="658">
                    condition added only for performance
                     the structure of visible items changed
                     if removable item is non visible and non selected then there is no repaint                    
                </comment>
                <declaration name="selected" type="boolean" line="616"/>
                <declaration name="visibled" type="boolean" line="617"/>
                <scope line="619">
                    <scope line="620"/>
                    <scope line="623"/>
                </scope>
                <scope line="636">
                    <scope line="641"/>
                </scope>
                <scope line="651">
                    <declaration name="r" type="Rectangle" line="652"/>
                </scope>
                <scope line="662"/>
            </method>
            <method name="removeAll" type="void" line="667">
                <comment line="671">
                    Fix for 6248016
                     After removing the item of the choice we need to reshape unfurled choice
                     in order to keep actual bounds of the choice                    
                </comment>
                <declaration name="r" type="Rectangle" line="675"/>
            </method>
            <javadoc line="680">
                DEPRECATED: Replaced by add(String, int).                
            </javadoc>
            <method name="addItem" type="void" line="683">
                <params>
                    <param name="item" type="String"/>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="setFont" type="void" line="687">
                <params>
                    <param name="font" type="Font"/>
                </params>
            </method>
            <method name="setForeground" type="void" line="692">
                <params>
                    <param name="c" type="Color"/>
                </params>
            </method>
            <method name="setBackground" type="void" line="697">
                <params>
                    <param name="c" type="Color"/>
                </params>
            </method>
            <method name="setDrawSelectedItem" type="void" line="704">
                <params>
                    <param name="value" type="boolean"/>
                </params>
            </method>
            <method name="setAlignUnder" type="void" line="708">
                <params>
                    <param name="comp" type="Component"/>
                </params>
            </method>
            <method name="addXChoicePeerListener" type="void" line="713">
                <params>
                    <param name="l" type="XChoicePeerListener"/>
                </params>
            </method>
            <method name="removeXChoicePeerListener" type="void" line="718"/>
            <method name="isUnfurled" type="boolean" line="722"/>
            <method name="stateChangedICCCM" type="void" line="730">
                <params>
                    <param name="oldState" type="int"/>
                    <param name="newState" type="int"/>
                </params>
                <scope line="731"/>
            </method>
            <method name="stateChangedJava" type="void" line="737">
                <params>
                    <param name="oldState" type="int"/>
                    <param name="newState" type="int"/>
                </params>
                <scope line="738"/>
            </method>
            <class name="UnfurledChoice" line="747">
                <extends class="XWindow"/>
                <comment line="752">
                                        
                </comment>
                <comment line="754">
                    First try - use Choice as the target                    
                </comment>
                <comment line="760">
                    Override so we can do our own create()                    
                </comment>
                <comment line="772">
                    Generally, bounds should be:
                      x = target.x
                      y = target.y + target.height
                      w = Max(target.width, getLongestItemWidth) + possible vertScrollbar
                      h = Min(MAX_UNFURLED_ITEMS, target.getItemCount()) * itemHeight                    
                </comment>
                <comment line="838">
                    Track a MouseEvent (either a drag or a press) and paint a new
                     selected item, if necessary.                    
                </comment>
                <comment line="842">
                    FIXME: first unfurl after move is not at edge of the screen  onto second monitor doesn&apos;t
                     track mouse correctly.  Problem is w/ UnfurledChoice coords                    
                </comment>
                <comment line="913">
                    fillRect with current Background color on the whole dropdown list.                    
                </comment>
                <comment line="922">
                    6405689. In some cases we should erase background to eliminate painting
                     artefacts.                    
                </comment>
                <comment line="969">
                    Returns true if the MouseEvent coords (which are based on the Choice)
                     are inside of the UnfurledChoice.                    
                </comment>
                <comment line="996">
                    Overridden from XWindow() because we don&apos;t want to send
                     ComponentEvents                    
                </comment>
                <javadoc line="747">
                    Inner class for the unfurled Choice list
                      Much, much more docs                    
                </javadoc>
                <method name="UnfurledChoice" type="constructor" line="755">
                    <params>
                        <param name="target" type="Component"/>
                    </params>
                </method>
                <method name="preInit" type="void" line="760">
                    <params>
                        <param name="params" type="XCreateWindowParams"/>
                    </params>
                    <comment line="762">
                        A parent of this window is the target, at this point: wrong.
                         Remove parent window; in the following preInit() call we&apos;ll calculate as a default
                         a correct root window which is the proper parent for override redirect.                        
                    </comment>
                    <comment line="767">
                        Reset bounds(we&apos;ll set them later), set overrideRedirect                        
                    </comment>
                </method>
                <method name="placeOnScreen" type="Rectangle" line="776">
                    <comment line="779">
                        Motif paints an empty Choice the same size as a single item                        
                    </comment>
                    <comment line="794">
                        TODO: Security?                        
                    </comment>
                    <comment line="796">
                        we&apos;ve got the left and width, calculate top and height                        
                    </comment>
                    <comment line="810">
                        Don&apos;t run off the edge of the screen                        
                    </comment>
                    <declaration name="numItemsDisplayed" type="int" line="777"/>
                    <scope line="779"/>
                    <scope line="782">
                        <declaration name="numItems" type="int" line="783"/>
                    </scope>
                    <declaration name="global" type="Point" line="786"/>
                    <declaration name="screen" type="Dimension" line="787"/>
                    <scope line="789">
                        <declaration name="choiceRec" type="Rectangle" line="790"/>
                        <declaration name="alignUnderRec" type="Rectangle" line="793"/>
                        <declaration name="result" type="Rectangle" line="794"/>
                    </scope>
                    <scope line="801"/>
                    <scope line="810"/>
                    <scope line="813"/>
                    <scope line="817"/>
                    <scope line="820"/>
                </method>
                <method name="toFront" type="void" line="826">
                    <comment line="828">
                        see 6240074 for more information                        
                    </comment>
                    <declaration name="r" type="Rectangle" line="831"/>
                </method>
                <method name="trackMouse" type="void" line="843">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <comment line="845">
                        Event coords are relative to the button, so translate a bit                        
                    </comment>
                    <comment line="848">
                        If x,y is over unfurled Choice,
                         highlight item under cursor                        
                    </comment>
                    <comment line="853">
                        FIXME: If the Choice is unfurled and the mouse is pressed
                         outside of the Choice, the mouse should ungrab on the
                         the press, not the release                        
                    </comment>
                    <comment line="869">
                        See 6243382 for more information                        
                    </comment>
                    <comment line="872">
                        else {
                        trackSelection(local.x, local.y);
                        }                        
                    </comment>
                    <comment line="883">
                        See 6243382 for more information                        
                    </comment>
                    <declaration name="local" type="Point" line="845"/>
                    <scope line="855"/>
                    <scope line="859"/>
                    <scope line="864"/>
                    <scope line="867"/>
                    <scope line="878"/>
                    <scope line="881"/>
                </method>
                <method name="trackSelection" type="void" line="890">
                    <params>
                        <param name="transX" type="int"/>
                        <param name="transY" type="int"/>
                    </params>
                    <comment line="909">
                        FIXME: If dragged off top or bottom, scroll if there&apos;s a vsb
                         (ICK - we&apos;ll need a timer or our own event or something)                        
                    </comment>
                    <scope line="891">
                        <scope line="893">
                            <declaration name="newIdx" type="int" line="894"/>
                            <scope line="895"/>
                            <scope line="902"/>
                        </scope>
                    </scope>
                </method>
                <method name="paintBackground" type="void" line="915">
                    <declaration name="g" type="Graphics" line="916"/>
                </method>
                <method name="repaint" type="void" line="925">
                    <scope line="926"/>
                    <scope line="929"/>
                </method>
                <method name="paint" type="void" line="935">
                    <params>
                        <param name="g" type="Graphics"/>
                    </params>
                    <comment line="937">
                        System.out.println(&quot;UC.paint()&quot;);                        
                    </comment>
                    <declaration name="choice" type="Choice" line="937"/>
                    <declaration name="colors" type="Color" line="938"/>
                </method>
                <method name="setVisible" type="void" line="947">
                    <params>
                        <param name="vis" type="boolean"/>
                    </params>
                    <scope line="950"/>
                </method>
                <javadoc line="955">
                    Return a MouseEvent&apos;s Point in coordinates relative to the
                      UnfurledChoice.                    
                </javadoc>
                <method name="toLocalCoords" type="Point" line="959">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <comment line="961">
                        Event coords are relative to the button, so translate a bit                        
                    </comment>
                    <declaration name="global" type="Point" line="961"/>
                </method>
                <method name="isMouseEventInside" type="boolean" line="971">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <declaration name="local" type="Point" line="972"/>
                    <scope line="974"/>
                </method>
                <javadoc line="980">
                    Tests if the mouse cursor is in the Unfurled Choice, yet not
                      in the vertical scrollbar                    
                </javadoc>
                <method name="isMouseInListArea" type="boolean" line="984">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="985">
                        <declaration name="local" type="Point" line="986"/>
                        <declaration name="bounds" type="Rectangle" line="987"/>
                        <scope line="988"/>
                    </scope>
                </method>
                <method name="handleConfigureNotifyEvent" type="void" line="999">
                    <params>
                        <param name="xev" type="XEvent"/>
                    </params>
                </method>
                <method name="handleMapNotifyEvent" type="void" line="1000">
                    <params>
                        <param name="xev" type="XEvent"/>
                    </params>
                </method>
                <method name="handleUnmapNotifyEvent" type="void" line="1001">
                    <params>
                        <param name="xev" type="XEvent"/>
                    </params>
                </method>
            </class>
            <method name="dispose" type="void" line="1004">
                <scope line="1005"/>
            </method>
            <method name="prePostEvent" type="boolean" line="1021">
                <params>
                    <param name="e" type="AWTEvent"/>
                </params>
                <comment line="1024">
                    fix for 6253211: PIT: MouseWheel events not triggered for Choice drop down in XAWT                    
                </comment>
                <comment line="1028">
                    fix 6252982: PIT: Keyboard FocusTraversal not working when choice&apos;s drop-down is visible, on XToolkit                    
                </comment>
                <comment line="1030">
                    notify XWindow that this event had been already handled and no need to post it again                    
                </comment>
                <comment line="1043">
                    Fix for 6240046 : REG:Choice&apos;s Drop-down does not disappear when clicking somewhere, after popup menu is disposed
                     if user presses Right Mouse Button on opened (unfurled)
                     Choice then we mustn&apos;t open a popup menu. We could filter
                     Mouse Events and handle them in XChoicePeer if Choice
                     currently in opened state.                    
                </comment>
                <comment line="1050">
                    fix 6251983: PIT: MouseDragged events not triggered
                     fix 6251988: PIT: Choice consumes MouseReleased, MouseClicked events when clicking it with left button,                    
                </comment>
                <comment line="1057">
                    MouseMoved events should be fired in Choice&apos;s comp if it&apos;s not opened
                     Shouldn&apos;t generate Moved Events. CR : 6251995                    
                </comment>
                <comment line="1062">
                    fix for 6272965: PIT: Choice triggers MousePressed when pressing mouse outside comp while drop-down is active, XTkt                    
                </comment>
                <comment line="1073">
                    else KeyEvent                    
                </comment>
                <comment line="1074">
                    if unfurled                    
                </comment>
                <scope line="1022">
                    <scope line="1024"/>
                    <scope line="1028">
                        <anonymous_class line="1030">
                            <method name="run" type="void" line="1031">
                                <scope line="1034"/>
                            </method>
                        </anonymous_class>
                    </scope>
                    <scope line="1040">
                        <scope line="1041">
                            <declaration name="me" type="MouseEvent" line="1047"/>
                            <declaration name="eventId" type="int" line="1048"/>
                            <scope line="1053"/>
                            <scope line="1058"/>
                            <scope line="1068"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="handleMouseEventByChoice" type="boolean" line="1079">
                <params>
                    <param name="me" type="MouseEvent"/>
                </params>
                <anonymous_class line="1080">
                    <method name="run" type="void" line="1081"/>
                </anonymous_class>
            </method>
            <method name="isMouseEventInChoice" type="boolean" line="1092">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
                <declaration name="x" type="int" line="1093"/>
                <declaration name="y" type="int" line="1094"/>
                <declaration name="choiceRect" type="Rectangle" line="1095"/>
                <scope line="1099"/>
            </method>
        </class>
        <interface name="XChoicePeerListener">
            <comment line="49">
                Maximum number of                
            </comment>
            <comment line="50">
                items to be displayed
                 at a time in an
                 unfurled Choice
                 Description of these constants in ListHelper                
            </comment>
            <comment line="60">
                SHARE THESE!                
            </comment>
            <comment line="66">
                Stolen from Tiny                
            </comment>
            <comment line="70">
                FIXME: Motif uses a different focus color for the item within
                 the unfurled Choice list and for when the Choice itself is focused and
                 popped up.                
            </comment>
            <comment line="75">
                TODO: there is a time value that the mouse is held down.  If short
                 enough,  the Choice stays popped down.  If long enough, Choice
                 is furled when the mouse is released                
            </comment>
            <comment line="79">
                Choice list is popped down                
            </comment>
            <comment line="81">
                Mouse was pressed and is being
                 dragged over the (unfurled)
                 Choice                
            </comment>
            <comment line="85">
                Mouse is interacting with the
                 scrollbar                
            </comment>
            <comment line="88">
                mouse was pressed on
                 furled Choice so we
                 not need to furl the
                 Choice when MOUSE_RELEASED occured                
            </comment>
            <comment line="93">
                6425067. Mouse was pressed on furled choice and dropdown list appeared over Choice itself
                 and then there were no mouse movements until MOUSE_RELEASE.
                 This scenario leads to ItemStateChanged as the choice logic uses
                 MouseReleased event to send ItemStateChanged. To prevent it we should
                 use a combination of firstPress and wasDragged variables.
                 The only difference in dragging and wasDragged is: last one will not
                 set to false on mouse ungrab. It become false after MouseRelased() finishes.                
            </comment>
            <comment line="104">
                TODO: Choice remembers where it was scrolled to when unfurled - it&apos;s not
                 always to the currently selected item.                
            </comment>
            <comment line="107">
                Indicates whether or not to paint selected item in the choice.
                 Default is to paint                
            </comment>
            <comment line="111">
                If set, indicates components under which choice popup should be showed.
                 The choice&apos;s popup width and location should be adjust to appear
                 under both choice and alignUnder component.                
            </comment>
            <comment line="116">
                If cursor is outside of an unfurled Choice when the mouse is
                 released, Choice item should NOT be updated.  Remember the proper index.                
            </comment>
            <comment line="120">
                Holds the listener (XFileDialogPeer) which the processing events from the choice
                 See 6240074 for more information                
            </comment>
            <comment line="167">
                6399679. check if super.setBounds() actually changes the size of the
                 component and then compare current Choice size with a new one. If
                 they differs then hide dropdown menu                
            </comment>
            <comment line="187">
                Fix for 6246503 : Disabling a choice after selection locks keyboard, mouse and makes the system unusable, Xtoolkit
                 if setEnabled(false) invoked we should close opened choice in
                 order to prevent keyboardmouse lock.                
            </comment>
            <comment line="379">
                helper method for mouseReleased routine                
            </comment>
            <comment line="502">
                Stolen from TinyChoicePeer                
            </comment>
            <comment line="515">
                Layout the...                
            </comment>
            <comment line="601">
                ChoicePeer methods stolen from TinyChoicePeer                
            </comment>
            <comment line="713">
                see 6240074 for more information                
            </comment>
            <comment line="718">
                see 6240074 for more information                
            </comment>
            <comment line="727">
                fix for 6261352. We should detect if current parent Window (containing a Choice) become iconified and hide pop-down menu with grab release.
                 In this case we should hide pop-down menu.                
            </comment>
            <comment line="730">
                calls from XWindowPeer. Could accept X-styled state events                
            </comment>
            <comment line="737">
                calls from XFramePeer. Could accept Frame&apos;s states.                
            </comment>
            <comment line="744">
                                
            </comment>
            <comment line="745">
                Common functionality between List &amp; Choice                
            </comment>
            <comment line="1003">
                UnfurledChoice                
            </comment>
            <comment line="1012">
                fix for 6239938 : Choice drop-down does not disappear when it loses
                 focus, on XToolkit
                 We are able to handle all _Key_ events received by Choice when
                 it is in opened state without sending it to EventQueue.
                 If Choice is in closed state we should behave like before: send
                 all events to EventQueue.
                 To be compatible with Motif we should handle all KeyEvents in
                 Choice if it is opened. KeyEvents should be sent into Java if Choice is not opened.                
            </comment>
            <comment line="1078">
                convenient method
                do not generate this kind of Events                
            </comment>
            <comment line="1089">
                Returns true if the MouseEvent coords
                 are inside of the Choice itself (it doesnt&apos;s depends on
                 if this choice opened or not).                
            </comment>
            <method name="unfurledChoiceOpening" type="void" line="1116"/>
            <method name="unfurledChoiceClosing" type="void" line="1117"/>
        </interface>
    </source>