<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt"/>
        <import package="java.awt.peer"/>
        <import package="java.awt.event"/>
        <import package="java.awt.image.ColorModel"/>
        <import package="sun.awt"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Vector"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <import package="sun.java2d.SurfaceData"/>
        <import package="sun.java2d.SunGraphics2D"/>
        <class name="XBaseMenuWindow" line="40">
            <extends class="XWindow"/>
            <comment line="55">
                Colors are calculated using MotifColorUtilities class
                 from backgroundColor and are contained in these vars.                
            </comment>
            <comment line="95">
                Event processing                
            </comment>
            <comment line="120">
                Mapping data                
            </comment>
            <comment line="180">
                Abstract methods                
            </comment>
            <comment line="220">
                Initialization                
            </comment>
            <comment line="234">
                General-purpose functions                
            </comment>
            <comment line="266">
                Utility functions for manipulating items                
            </comment>
            <comment line="460">
                Utility functions for manipulating mapped items                
            </comment>
            <comment line="585">
                Utility functions for manipulating
                 hierarchy of windows                
            </comment>
            <comment line="644">
                Primitives for getSubmenuBounds
                
                 These functions are invoked from getSubmenuBounds
                 implementations in different order. They check if window
                 of size windowSize fits to the specified edge of
                 rectangle itemBounds on the screen of screenSize.
                 Return rectangle that occupies the window if it fits or null.                
            </comment>
            <comment line="786">
                Utility functions for manipulating colors                
            </comment>
            <comment line="849">
                Painting utility functions                
            </comment>
            <comment line="878">
                Overriden utility functions of XWindow                
            </comment>
            <comment line="993">
                Overridable event processing functions                
            </comment>
            <comment line="1007">
                User input handling utility functions                
            </comment>
            <javadoc line="40">
                The abstract class XBaseMenuWindow is the superclass
                  of all menu windows.                
            </javadoc>
            <declaration name="log" type="PlatformLogger" line="46"/>
            <javadoc line="46">
                Data members                
            </javadoc>
            <declaration name="backgroundColor" type="Color" line="58"/>
            <declaration name="foregroundColor" type="Color" line="59"/>
            <declaration name="lightShadowColor" type="Color" line="60"/>
            <declaration name="darkShadowColor" type="Color" line="61"/>
            <declaration name="selectedColor" type="Color" line="62"/>
            <declaration name="disabledColor" type="Color" line="63"/>
            <declaration name="items" type="ArrayList&lt;XMenuItemPeer&gt;" line="65"/>
            <javadoc line="65">
                Array of items.                
            </javadoc>
            <declaration name="selectedIndex" type="int" line="70"/>
            <javadoc line="70">
                Index of selected item in array of items                
            </javadoc>
            <declaration name="showingSubmenu" type="XMenuPeer" line="75"/>
            <javadoc line="75">
                Specifies currently showing submenu.                
            </javadoc>
            <declaration name="menuTreeLock" type="Object" line="80"/>
            <javadoc line="80">
                Static synchronizational object.
                  Following operations should be synchronized
                  using this object:
                  1. Access to items vector
                  2. Access to selection
                  3. Access to showing menu window member
                  This is lowest level lock,
                  no other locks should be taken when
                  thread own this lock.                
            </javadoc>
            <declaration name="showingMousePressedSubmenu" type="XMenuPeer" line="100"/>
            <javadoc line="100">
                If mouse button is clicked on item showing submenu
                  we have to hide its submenu.
                  And if mouse button is pressed on such item and
                  dragged to another, getShowingSubmenu() is changed.
                  So this member saves the item that the user
                  presses mouse button on _only_ if it&apos;s showing submenu.                
            </javadoc>
            <declaration name="grabInputPoint" type="Point" line="110"/>
            <javadoc line="110">
                If the PopupMenu is invoked as a result of right button click
                  first mouse event after grabInput would be MouseReleased.
                  We need to check if the user has moved mouse after input grab.
                  If yes - hide the PopupMenu. If no - do nothing                
            </javadoc>
            <declaration name="hasPointerMoved" type="boolean" line="117"/>
            <declaration name="mappingData" type="MappingData" line="125"/>
            <javadoc line="125">
                Mapping data that is filled in getMappedItems function
                  and reset in resetSize function. It contains array of
                  items in order that they appear on screen and may contain
                  additional data defined by descendants.                
            </javadoc>
            <class name="MappingData" line="133">
                <implements interface="Cloneable"/>
                <declaration name="items" type="XMenuItemPeer[]" line="135"/>
                <javadoc line="135">
                    Array of item in order that they appear on screen                    
                </javadoc>
                <javadoc line="140">
                    Constructs MappingData object with list
                      of menu items                    
                </javadoc>
                <method name="MappingData" type="constructor" line="144">
                    <params>
                        <param name="items" type="XMenuItemPeer[]"/>
                    </params>
                </method>
                <javadoc line="148">
                    Constructs MappingData without items
                      This constructor should be used in case of errors                    
                </javadoc>
                <method name="MappingData" type="constructor" line="152"/>
                <method name="clone" type="Object" line="156">
                    <scope line="157"/>
                    <scope line="159"/>
                </method>
                <method name="getItems" type="XMenuItemPeer[]" line="164"/>
            </class>
            <javadoc line="169">
                Construction                
            </javadoc>
            <method name="XBaseMenuWindow" type="constructor" line="174"/>
            <method name="getParentMenuWindow" type="XBaseMenuWindow" line="185"/>
            <javadoc line="185">
                Returns parent menu window (not the X-heirarchy parent window)                
            </javadoc>
            <method name="map" type="MappingData" line="190"/>
            <javadoc line="190">
                Performs mapping of items in window.
                  This function creates and fills specific
                  descendant of MappingData
                  and sets mapping coordinates of items
                  This function should return default menu data
                  if errors occur                
            </javadoc>
            <method name="getSubmenuBounds" type="Rectangle" line="200"/>
            <javadoc line="200">
                Calculates placement of submenu window
                  given bounds of item with submenu and
                  size of submenu window. Returns suggested
                  rectangle for submenu window in global coordinates                
                <param>
                    itemBounds the bounding rectangle of item
                      in local coordinates                    
                </param>
                <param>
                    windowSize the desired size of submenu&apos;s window                    
                </param>
            </javadoc>
            <method name="updateSize" type="void" line="212"/>
            <javadoc line="212">
                This function is to be called if it&apos;s likely that size
                  of items was changed. It can be called from any thread
                  in any locked state, so it should not take locks                
            </javadoc>
            <javadoc line="225">
                Overrides XBaseWindow.instantPreInit                
            </javadoc>
            <method name="instantPreInit" type="void" line="228">
                <params>
                    <param name="params" type="XCreateWindowParams"/>
                </params>
            </method>
            <javadoc line="239">
                Returns static lock used for menus                
            </javadoc>
            <method name="getMenuTreeLock" type="Object" line="242"/>
            <javadoc line="246">
                This function is called to clear all saved
                  size data.                
            </javadoc>
            <method name="resetMapping" type="void" line="250"/>
            <javadoc line="254">
                Invokes repaint procedure on eventHandlerThread                
            </javadoc>
            <method name="postPaintEvent" type="void" line="257">
                <scope line="258">
                    <declaration name="pe" type="PaintEvent" line="259"/>
                </scope>
            </method>
            <javadoc line="271">
                Thread-safely returns item at specified index                
                <param>
                    index the position of the item to be returned.                    
                </param>
            </javadoc>
            <method name="getItem" type="XMenuItemPeer" line="275">
                <params>
                    <param name="index" type="int"/>
                </params>
                <scope line="276">
                    <scope line="277">
                        <scope line="278"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="286">
                Thread-safely creates a copy of the items vector                
            </javadoc>
            <method name="copyItems" type="XMenuItemPeer[]" line="289">
                <scope line="290"/>
            </method>
            <javadoc line="296">
                Thread-safely returns selected item                
            </javadoc>
            <method name="getSelectedItem" type="XMenuItemPeer" line="299">
                <scope line="300">
                    <scope line="301">
                        <scope line="302"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="310">
                Returns showing submenu, if any                
            </javadoc>
            <method name="getShowingSubmenu" type="XMenuPeer" line="313">
                <scope line="314"/>
            </method>
            <javadoc line="319">
                Adds item to end of items vector.
                  Note that this function does not perform
                  check for adding duplicate items                
                <param>
                    item item to add                    
                </param>
            </javadoc>
            <method name="addItem" type="void" line="325">
                <params>
                    <param name="item" type="MenuItem"/>
                </params>
                <declaration name="mp" type="XMenuItemPeer" line="326"/>
                <scope line="327">
                    <scope line="329"/>
                </scope>
                <scope line="332">
                    <scope line="333"/>
                </scope>
            </method>
            <javadoc line="340">
                Removes item at the specified index from items vector.                
                <param>
                    index the position of the item to be removed                    
                </param>
            </javadoc>
            <method name="delItem" type="void" line="344">
                <params>
                    <param name="index" type="int"/>
                </params>
                <scope line="345">
                    <scope line="346"/>
                    <scope line="348"/>
                    <scope line="351"/>
                    <scope line="353">
                        <scope line="354"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="362">
                Clears items vector and loads specified vector                
                <param>
                    items vector to be loaded                    
                </param>
            </javadoc>
            <method name="reloadItems" type="void" line="366">
                <params>
                    <param name="items" type="Vector"/>
                </params>
                <scope line="367">
                    <declaration name="itemArray" type="MenuItem[]" line="369"/>
                    <declaration name="itemCnt" type="int" line="370"/>
                    <scope line="371"/>
                </scope>
            </method>
            <javadoc line="377">
                Select specified item and shows/hides submenus if necessary
                  We can not select by index, so we need to select by ref.                
                <param>
                    item the item to be selected, null to clear selection                    
                </param>
                <param>
                    showWindowIfMenu if the item is XMenuPeer then its
                      window is shown/hidden according to this param.                    
                </param>
            </javadoc>
            <method name="selectItem" type="void" line="384">
                <params>
                    <param name="item" type="XMenuItemPeer"/>
                    <param name="showWindowIfMenu" type="boolean"/>
                </params>
                <scope line="385">
                    <declaration name="showingSubmenu" type="XMenuPeer" line="386"/>
                    <declaration name="newSelectedIndex" type="int" line="387"/>
                    <scope line="388">
                        <scope line="389"/>
                    </scope>
                    <declaration name="submenuToShow" type="XMenuPeer" line="395"/>
                    <scope line="396">
                        <anonymous_class line="397">
                            <method name="run" type="void" line="398"/>
                        </anonymous_class>
                    </scope>
                </scope>
            </method>
            <javadoc line="406">
                Performs hiding of currently showing submenu
                  and showing of submenuToShow.
                  This function should be executed on eventHandlerThread                
                <param>
                    submenuToShow submenu to be shown or null
                      to hide currently showing submenu                    
                </param>
            </javadoc>
            <method name="doShowSubmenu" type="void" line="413">
                <params>
                    <param name="submenuToShow" type="XMenuPeer"/>
                </params>
                <comment line="418">
                    ensureCreated can invoke XWindowPeer.init() -&gt;
                    XWindowPeer.initGraphicsConfiguration() -&gt;
                    Window.getGraphicsConfiguration()
                    that tries to obtain Component.AWTTreeLock.
                    So it should be called outside awtLock()                    
                </comment>
                <declaration name="menuWindowToShow" type="XMenuWindow" line="414"/>
                <declaration name="dim" type="Dimension" line="415"/>
                <declaration name="bounds" type="Rectangle" line="416"/>
                <scope line="422"/>
                <scope line="426">
                    <scope line="427">
                        <scope line="428">
                            <scope line="429"/>
                            <scope line="432">
                                <declaration name="showingSubmenuWindow" type="XMenuWindow" line="433"/>
                                <scope line="434"/>
                            </scope>
                            <scope line="438"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="446"/>
            </method>
            <method name="setItemsFont" type="void" line="451">
                <params>
                    <param name="font" type="Font"/>
                </params>
                <declaration name="items" type="XMenuItemPeer[]" line="452"/>
                <declaration name="itemCnt" type="int" line="453"/>
                <scope line="454"/>
            </method>
            <javadoc line="465">
                Returns array of mapped items, null if error
                  This function has to be not synchronized
                  and we have to guarantee that we return
                  some MappingData to user. It&apos;s OK if
                  this.mappingData is replaced meanwhile                
            </javadoc>
            <method name="getMappingData" type="MappingData" line="472">
                <declaration name="mappingData" type="MappingData" line="473"/>
                <scope line="474"/>
            </method>
            <javadoc line="481">
                returns item thats mapped coordinates contain
                  specified point, null of none.                
                <param>
                    pt the point in this window&apos;s coordinate system                    
                </param>
            </javadoc>
            <method name="getItemFromPoint" type="XMenuItemPeer" line="486">
                <params>
                    <param name="pt" type="Point"/>
                </params>
                <declaration name="items" type="XMenuItemPeer[]" line="487"/>
                <declaration name="cnt" type="int" line="488"/>
                <scope line="489">
                    <scope line="490"/>
                </scope>
            </method>
            <javadoc line="497">
                Returns first item after currently selected
                  item that can be selected according to mapping array.
                  (no separators and no disabled items).
                  Currently selected item if it&apos;s only selectable,
                  null if no item can be selected                
            </javadoc>
            <method name="getNextSelectableItem" type="XMenuItemPeer" line="504">
                <comment line="509">
                    Find index of selected item                    
                </comment>
                <comment line="518">
                    cycle through mappedItems to find selectable item
                    beginning from the next item and moving to the
                    beginning of array when end is reached.
                    Cycle is finished on selected item itself                    
                </comment>
                <comment line="532">
                    return null if no selectable item was found                    
                </comment>
                <declaration name="mappedItems" type="XMenuItemPeer[]" line="505"/>
                <declaration name="selectedItem" type="XMenuItemPeer" line="506"/>
                <declaration name="cnt" type="int" line="507"/>
                <declaration name="selIdx" type="int" line="509"/>
                <scope line="510">
                    <scope line="511"/>
                </scope>
                <declaration name="idx" type="int" line="516"/>
                <scope line="521">
                    <declaration name="item" type="XMenuItemPeer" line="522"/>
                    <scope line="523"/>
                    <scope line="527"/>
                </scope>
            </method>
            <javadoc line="535">
                Returns first item before currently selected
                  see getNextSelectableItem() for comments                
            </javadoc>
            <method name="getPrevSelectableItem" type="XMenuItemPeer" line="539">
                <comment line="544">
                    Find index of selected item                    
                </comment>
                <comment line="553">
                    cycle through mappedItems to find selectable item                    
                </comment>
                <comment line="564">
                    return null if no selectable item was found                    
                </comment>
                <declaration name="mappedItems" type="XMenuItemPeer[]" line="540"/>
                <declaration name="selectedItem" type="XMenuItemPeer" line="541"/>
                <declaration name="cnt" type="int" line="542"/>
                <declaration name="selIdx" type="int" line="544"/>
                <scope line="545">
                    <scope line="546"/>
                </scope>
                <declaration name="idx" type="int" line="551"/>
                <scope line="553">
                    <declaration name="item" type="XMenuItemPeer" line="554"/>
                    <scope line="555"/>
                    <scope line="559"/>
                </scope>
            </method>
            <javadoc line="567">
                Returns first selectable item
                  This function is intended for clearing selection                
            </javadoc>
            <method name="getFirstSelectableItem" type="XMenuItemPeer" line="571">
                <declaration name="mappedItems" type="XMenuItemPeer[]" line="572"/>
                <declaration name="cnt" type="int" line="573"/>
                <scope line="574">
                    <declaration name="item" type="XMenuItemPeer" line="575"/>
                    <scope line="576"/>
                </scope>
            </method>
            <javadoc line="591">
                returns leaf menu window or
                  this if no children are showing                
            </javadoc>
            <method name="getShowingLeaf" type="XBaseMenuWindow" line="595">
                <scope line="596">
                    <declaration name="leaf" type="XBaseMenuWindow" line="597"/>
                    <declaration name="leafchild" type="XMenuPeer" line="598"/>
                    <scope line="599"/>
                </scope>
            </method>
            <javadoc line="607">
                returns root menu window
                  or this if this window is topmost                
            </javadoc>
            <method name="getRootMenuWindow" type="XBaseMenuWindow" line="611">
                <scope line="612">
                    <declaration name="t" type="XBaseMenuWindow" line="613"/>
                    <declaration name="tparent" type="XBaseMenuWindow" line="614"/>
                    <scope line="615"/>
                </scope>
            </method>
            <javadoc line="623">
                Returns window that contains pt.
                  search is started from leaf window
                  to return first window in Z-order                
                <param>
                    pt point in global coordinates                    
                </param>
            </javadoc>
            <method name="getMenuWindowFromPoint" type="XBaseMenuWindow" line="629">
                <params>
                    <param name="pt" type="Point"/>
                </params>
                <scope line="630">
                    <declaration name="t" type="XBaseMenuWindow" line="631"/>
                    <scope line="632">
                        <declaration name="r" type="Rectangle" line="633"/>
                        <scope line="634"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="655">
                Checks if window fits below specified item
                  returns rectangle that the window fits to or null.                
                <param>
                    itemBounds rectangle of item in global coordinates                    
                </param>
                <param>
                    windowSize size of submenu window to fit                    
                </param>
                <param>
                    screenSize size of screen                    
                </param>
            </javadoc>
            <method name="fitWindowBelow" type="Rectangle" line="662">
                <params>
                    <param name="itemBounds" type="Rectangle"/>
                    <param name="windowSize" type="Dimension"/>
                    <param name="screenSize" type="Dimension"/>
                </params>
                <comment line="666">
                    Fix for 6267162: PIT: Popup Menu gets hidden below the screen when opened
                    near the periphery of the screen, XToolkit
                    Window should be moved if it&apos;s outside top-left screen bounds                    
                </comment>
                <comment line="672">
                    move it to the left if needed                    
                </comment>
                <declaration name="width" type="int" line="663"/>
                <declaration name="height" type="int" line="664"/>
                <declaration name="x" type="int" line="668"/>
                <declaration name="y" type="int" line="669"/>
                <scope line="670">
                    <scope line="672"/>
                    <scope line="675"/>
                </scope>
                <scope line="679"/>
            </method>
            <javadoc line="684">
                Checks if window fits above specified item
                  returns rectangle that the window fits to or null.                
                <param>
                    itemBounds rectangle of item in global coordinates                    
                </param>
                <param>
                    windowSize size of submenu window to fit                    
                </param>
                <param>
                    screenSize size of screen                    
                </param>
            </javadoc>
            <method name="fitWindowAbove" type="Rectangle" line="691">
                <params>
                    <param name="itemBounds" type="Rectangle"/>
                    <param name="windowSize" type="Dimension"/>
                    <param name="screenSize" type="Dimension"/>
                </params>
                <comment line="695">
                    Fix for 6267162: PIT: Popup Menu gets hidden below the screen when opened
                    near the periphery of the screen, XToolkit
                    Window should be moved if it&apos;s outside bottom-left screen bounds                    
                </comment>
                <comment line="701">
                    move it to the left if needed                    
                </comment>
                <declaration name="width" type="int" line="692"/>
                <declaration name="height" type="int" line="693"/>
                <declaration name="x" type="int" line="697"/>
                <declaration name="y" type="int" line="698"/>
                <scope line="699">
                    <scope line="701"/>
                    <scope line="704"/>
                </scope>
                <scope line="708"/>
            </method>
            <javadoc line="713">
                Checks if window fits to the right specified item
                  returns rectangle that the window fits to or null.                
                <param>
                    itemBounds rectangle of item in global coordinates                    
                </param>
                <param>
                    windowSize size of submenu window to fit                    
                </param>
                <param>
                    screenSize size of screen                    
                </param>
            </javadoc>
            <method name="fitWindowRight" type="Rectangle" line="720">
                <params>
                    <param name="itemBounds" type="Rectangle"/>
                    <param name="windowSize" type="Dimension"/>
                    <param name="screenSize" type="Dimension"/>
                </params>
                <comment line="724">
                    Fix for 6267162: PIT: Popup Menu gets hidden below the screen when opened
                    near the periphery of the screen, XToolkit
                    Window should be moved if it&apos;s outside top-left screen bounds                    
                </comment>
                <comment line="730">
                    move it to the top if needed                    
                </comment>
                <declaration name="width" type="int" line="721"/>
                <declaration name="height" type="int" line="722"/>
                <declaration name="x" type="int" line="726"/>
                <declaration name="y" type="int" line="727"/>
                <scope line="728">
                    <scope line="730"/>
                    <scope line="733"/>
                </scope>
                <scope line="737"/>
            </method>
            <javadoc line="742">
                Checks if window fits to the left specified item
                  returns rectangle that the window fits to or null.                
                <param>
                    itemBounds rectangle of item in global coordinates                    
                </param>
                <param>
                    windowSize size of submenu window to fit                    
                </param>
                <param>
                    screenSize size of screen                    
                </param>
            </javadoc>
            <method name="fitWindowLeft" type="Rectangle" line="749">
                <params>
                    <param name="itemBounds" type="Rectangle"/>
                    <param name="windowSize" type="Dimension"/>
                    <param name="screenSize" type="Dimension"/>
                </params>
                <comment line="753">
                    Fix for 6267162: PIT: Popup Menu gets hidden below the screen when opened
                    near the periphery of the screen, XToolkit
                    Window should be moved if it&apos;s outside top-right screen bounds                    
                </comment>
                <comment line="759">
                    move it to the top if needed                    
                </comment>
                <declaration name="width" type="int" line="750"/>
                <declaration name="height" type="int" line="751"/>
                <declaration name="x" type="int" line="755"/>
                <declaration name="y" type="int" line="756"/>
                <scope line="757">
                    <scope line="759"/>
                    <scope line="762"/>
                </scope>
                <scope line="766"/>
            </method>
            <javadoc line="771">
                The last thing we can do with the window
                  to fit it on screen - move it to the
                  top-left edge and cut by screen dimensions                
                <param>
                    windowSize size of submenu window to fit                    
                </param>
                <param>
                    screenSize size of screen                    
                </param>
            </javadoc>
            <method name="fitWindowToScreen" type="Rectangle" line="778">
                <params>
                    <param name="windowSize" type="Dimension"/>
                    <param name="screenSize" type="Dimension"/>
                </params>
                <declaration name="width" type="int" line="779"/>
                <declaration name="height" type="int" line="780"/>
            </method>
            <javadoc line="791">
                This function is called before every painting.
                  TODO:It would be better to add PropertyChangeListener
                  to target component
                  TODO:It would be better to access background color
                  not invoking user-overridable function                
            </javadoc>
            <method name="resetColors" type="void" line="798"/>
            <javadoc line="802">
                Calculates colors of various elements given
                  background color. Uses MotifColorUtilities                
                <param>
                    backgroundColor the color of menu window&apos;s
                      background.                    
                </param>
            </javadoc>
            <method name="replaceColors" type="void" line="808">
                <params>
                    <param name="backgroundColor" type="Color"/>
                </params>
                <scope line="809">
                    <declaration name="red" type="int" line="812"/>
                    <declaration name="green" type="int" line="813"/>
                    <declaration name="blue" type="int" line="814"/>
                </scope>
            </method>
            <method name="getBackgroundColor" type="Color" line="824"/>
            <method name="getForegroundColor" type="Color" line="828"/>
            <method name="getLightShadowColor" type="Color" line="832"/>
            <method name="getDarkShadowColor" type="Color" line="836"/>
            <method name="getSelectedColor" type="Color" line="840"/>
            <method name="getDisabledColor" type="Color" line="844"/>
            <javadoc line="854">
                Draws raised or sunken rectangle on specified graphics                
                <param>
                    g the graphics on which to draw                    
                </param>
                <param>
                    x the coordinate of left edge in coordinates of graphics                    
                </param>
                <param>
                    y the coordinate of top edge in coordinates of graphics                    
                </param>
                <param>
                    width the width of rectangle                    
                </param>
                <param>
                    height the height of rectangle                    
                </param>
                <param>
                    raised true to draw raised rectangle, false to draw sunken                    
                </param>
            </javadoc>
            <method name="draw3DRect" type="void" line="863">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="raised" type="boolean"/>
                </params>
                <scope line="864"/>
                <declaration name="c" type="Color" line="867"/>
            </method>
            <javadoc line="883">
                Filters X events                
            </javadoc>
            <method name="isEventDisabled" type="boolean" line="886">
                <params>
                    <param name="e" type="XEvent"/>
                </params>
            </method>
            <javadoc line="902">
                Invokes disposal procedure on eventHandlerThread                
            </javadoc>
            <method name="dispose" type="void" line="905">
                <anonymous_class line="907">
                    <method name="run" type="void" line="908"/>
                </anonymous_class>
            </method>
            <javadoc line="914">
                Performs disposal of menu window.
                  Should be called only on eventHandlerThread                
            </javadoc>
            <method name="doDispose" type="void" line="918">
                <declaration name="oldData" type="SurfaceData" line="920"/>
                <scope line="922"/>
            </method>
            <javadoc line="929">
                Invokes event processing on eventHandlerThread
                  This function needs to be overriden since
                  XBaseMenuWindow has no corresponding component
                  so events can not be processed using standart means                
            </javadoc>
            <method name="postEvent" type="void" line="935">
                <params>
                    <param name="event" type="AWTEvent"/>
                </params>
                <anonymous_class line="936">
                    <method name="run" type="void" line="937"/>
                </anonymous_class>
            </method>
            <javadoc line="943">
                The implementation of base window performs processing
                  of paint events only. This behaviour is changed in
                  descendants.                
            </javadoc>
            <method name="handleEvent" type="void" line="948">
                <params>
                    <param name="event" type="AWTEvent"/>
                </params>
            </method>
            <javadoc line="956">
                Save location of pointer for further use
                  then invoke superclass                
            </javadoc>
            <method name="grabInput" type="boolean" line="960">
                <comment line="970">
                    root                    
                </comment>
                <comment line="971">
                    child                    
                </comment>
                <comment line="972">
                    root_x                    
                </comment>
                <comment line="973">
                    root_y                    
                </comment>
                <comment line="974">
                    child_x                    
                </comment>
                <comment line="975">
                    child_y                    
                </comment>
                <comment line="976">
                    mask                    
                </comment>
                <comment line="984">
                    Mouse pointer is on the same display                    
                </comment>
                <declaration name="rootX" type="int" line="961"/>
                <declaration name="rootY" type="int" line="962"/>
                <declaration name="res" type="boolean" line="963"/>
                <scope line="965">
                    <declaration name="root" type="long" line="966"/>
                </scope>
                <scope line="979"/>
                <scope line="982"/>
                <scope line="986"/>
            </method>
            <javadoc line="998">
                Performs repainting                
            </javadoc>
            <method name="doHandleJavaPaintEvent" type="void" line="1001">
                <params>
                    <param name="event" type="PaintEvent"/>
                </params>
                <declaration name="rect" type="Rectangle" line="1002"/>
            </method>
            <javadoc line="1012">
                Performs handling of java mouse event
                  Note that this function should be invoked
                  only from root of menu window&apos;s hierarchy
                  that grabs input focus                
            </javadoc>
            <method name="doHandleJavaMouseEvent" type="void" line="1018">
                <params>
                    <param name="mouseEvent" type="MouseEvent"/>
                </params>
                <comment line="1023">
                    Window that owns input                    
                </comment>
                <comment line="1025">
                    Point of mouse event in global coordinates                    
                </comment>
                <comment line="1028">
                    Fix for 6301307: NullPointerException while dispatching mouse events, XToolkit                    
                </comment>
                <comment line="1035">
                    Z-order first descendant of current menu window
                    hierarchy that contain mouse point                    
                </comment>
                <comment line="1038">
                    Item in wnd that contains mouse point, if any                    
                </comment>
                <comment line="1040">
                    Currently showing leaf window                    
                </comment>
                <comment line="1044">
                    This line is to get rid of possible problems
                    That may occur if mouse events are lost                    
                </comment>
                <comment line="1048">
                    Menus grab input and the user
                    presses mouse button outside                    
                </comment>
                <comment line="1052">
                    Menus grab input OR mouse is pressed on menu window                    
                </comment>
                <comment line="1055">
                    Button is pressed on enabled item                    
                </comment>
                <comment line="1057">
                    Button is pressed on item that shows
                    submenu. We have to hide its submenu
                    if user clicks on it                    
                </comment>
                <comment line="1064">
                    Button is pressed on disabled item or empty space                    
                </comment>
                <comment line="1072">
                    Note that if item is not null, wnd has to be not null                    
                </comment>
                <comment line="1076">
                    User clicks on item that shows submenu.
                    Hide the submenu                    
                </comment>
                <comment line="1085">
                    Invoke action event                    
                </comment>
                <comment line="1090">
                    Mouse is released outside menu items                    
                </comment>
                <comment line="1099">
                    Mouse is dragged over menu window
                    Move selection to item under cursor                    
                </comment>
                <comment line="1109">
                    Mouse is dragged outside menu windows
                    clear selection in leaf to reflect it                    
                </comment>
                <scope line="1019"/>
                <declaration name="grabWindow" type="XBaseWindow" line="1023"/>
                <declaration name="ptGlobal" type="Point" line="1025"/>
                <scope line="1026">
                    <scope line="1030"/>
                </scope>
                <declaration name="wnd" type="XBaseMenuWindow" line="1036"/>
                <declaration name="item" type="XMenuItemPeer" line="1038"/>
                <declaration name="cwnd" type="XBaseMenuWindow" line="1040"/>
                <scope line="1046"/>
                <scope line="1050">
                    <scope line="1053">
                        <scope line="1055"/>
                    </scope>
                    <scope line="1062">
                        <scope line="1064"/>
                    </scope>
                </scope>
                <scope line="1072">
                    <scope line="1073">
                        <scope line="1074">
                            <scope line="1077"/>
                            <scope line="1079"/>
                        </scope>
                    </scope>
                    <scope line="1083"/>
                </scope>
                <scope line="1088">
                    <scope line="1090"/>
                </scope>
                <scope line="1097">
                    <scope line="1100">
                        <scope line="1101"/>
                    </scope>
                    <scope line="1104"/>
                </scope>
                <scope line="1107">
                    <scope line="1110"/>
                </scope>
            </method>
            <javadoc line="1118">
                Performs handling of java keyboard event
                  Note that this function should be invoked
                  only from root of menu window&apos;s hierarchy
                  that grabs input focus                
            </javadoc>
            <method name="doHandleJavaKeyEvent" type="void" line="1124">
                <params>
                    <param name="event" type="KeyEvent"/>
                </params>
                <comment line="1137">
                    If active window is not menu bar,
                    move selection up                    
                </comment>
                <comment line="1145">
                    If active window is menu bar show current submenu                    
                </comment>
                <comment line="1148">
                    move selection down                    
                </comment>
                <comment line="1155">
                    leaf window is menu bar
                    select previous item                    
                </comment>
                <comment line="1159">
                    leaf window is direct child of menu bar
                    select previous item of menu bar
                    and show its submenu                    
                </comment>
                <comment line="1164">
                    hide leaf moving focus to its parent
                    (equvivalent of pressing ESC)                    
                </comment>
                <comment line="1167">
                    Fix for 6272952: PIT: Pressing LEFT ARROW on a popup menu throws NullPointerException, XToolkit                    
                </comment>
                <comment line="1176">
                    leaf window is menu bar
                    select next item                    
                </comment>
                <comment line="1180">
                    current item is menu, show its window
                    (equivalent of ENTER)                    
                </comment>
                <comment line="1184">
                    if this is menu bar (not popup menu)
                    and the user presses RIGHT on item (not submenu)
                    select next top-level menu                    
                </comment>
                <comment line="1192">
                    If the current item has submenu show it
                    Perform action otherwise                    
                </comment>
                <comment line="1202">
                    If current window is menu bar or its child - close it
                    If current window is popup menu - close it
                    go one level up otherwise                    
                </comment>
                <comment line="1206">
                    Fixed 6266513: Incorrect key handling in XAWT popup menu
                    Popup menu should be closed on &apos;ESC&apos;                    
                </comment>
                <comment line="1218">
                    Fixed 6266513: Incorrect key handling in XAWT popup menu
                    All menus should be closed on &apos;F10&apos;                    
                </comment>
                <scope line="1126"/>
                <declaration name="keyCode" type="int" line="1129"/>
                <declaration name="cwnd" type="XBaseMenuWindow" line="1130"/>
                <declaration name="citem" type="XMenuItemPeer" line="1131"/>
                <scope line="1135"/>
                <scope line="1143"/>
                <scope line="1146"/>
                <scope line="1153"/>
                <scope line="1157"/>
                <scope line="1162">
                    <declaration name="pwnd" type="XBaseMenuWindow" line="1165"/>
                    <scope line="1167"/>
                </scope>
                <scope line="1174"/>
                <scope line="1178"/>
                <scope line="1182"/>
                <scope line="1193"/>
                <scope line="1195"/>
                <scope line="1207"/>
                <scope line="1209"/>
                <scope line="1211">
                    <declaration name="pwnd" type="XBaseMenuWindow" line="1212"/>
                </scope>
            </method>
        </class>
    </source>