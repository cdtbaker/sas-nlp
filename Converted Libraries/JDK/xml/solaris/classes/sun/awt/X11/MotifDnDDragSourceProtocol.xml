<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt.datatransfer.Transferable"/>
        <import package="java.awt.dnd.DnDConstants"/>
        <import package="java.awt.dnd.InvalidDnDOperationException"/>
        <import package="java.util.Map"/>
        <import package="sun.misc.Unsafe"/>
        <class name="MotifDnDDragSourceProtocol" line="7">
            <extends class="XDragSourceProtocol"/>
            <implements interface="XEventDispatcher"/>
            <javadoc line="7">
                XDragSourceProtocol implementation for Motif DnD protocol.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="unsafe" type="Unsafe" line="12"/>
            <declaration name="targetEnterServerTime" type="long" line="13"/>
            <method name="MotifDnDDragSourceProtocol" type="constructor" line="14">
                <params>
                    <param name="listener" type="XDragSourceProtocolListener"/>
                </params>
            </method>
            <javadoc line="18">
                Creates an instance associated with the specified listener.                
                <throws>
                    NullPointerException if listener is <code>null</code>.                    
                </throws>
            </javadoc>
            <method name="createInstance" type="XDragSourceProtocol" line="22">
                <params>
                    <param name="listener" type="XDragSourceProtocolListener"/>
                </params>
            </method>
            <method name="getProtocolName" type="String" line="25"/>
            <method name="initializeDragImpl" type="void" line="28">
                <params>
                    <param name="actions" type="int"/>
                    <param name="contents" type="Transferable"/>
                    <param name="formatMap" type="Map"/>
                    <param name="formats" type="long[]"/>
                </params>
                <declaration name="window" type="long" line="29"/>
                <scope line="30">
                    <declaration name="index" type="int" line="31"/>
                </scope>
                <scope line="34"/>
                <scope line="38"/>
                <scope line="42"/>
            </method>
            <javadoc line="47">
                Processes the specified client message event.                
                <returns>
                    true if the event was successfully processed.                    
                </returns>
            </javadoc>
            <method name="processClientMessage" type="boolean" line="51">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <scope line="52"/>
                <declaration name="data" type="long" line="55"/>
                <declaration name="reason" type="byte" line="56"/>
                <declaration name="origin" type="byte" line="57"/>
                <declaration name="byteOrder" type="byte" line="58"/>
                <declaration name="swapNeeded" type="boolean" line="59"/>
                <declaration name="action" type="int" line="60"/>
                <declaration name="x" type="int" line="61"/>
                <declaration name="y" type="int" line="62"/>
                <scope line="63"/>
                <declaration name="t" type="int" line="75"/>
                <scope line="76"/>
                <declaration name="time" type="long" line="79"/>
                <scope line="80"/>
                <scope line="83">
                    <declaration name="flags" type="short" line="84"/>
                    <scope line="85"/>
                    <declaration name="status" type="byte" line="88"/>
                    <declaration name="motif_action" type="byte" line="89"/>
                    <scope line="90"/>
                    <scope line="93"/>
                    <declaration name="tx" type="short" line="96"/>
                    <declaration name="ty" type="short" line="97"/>
                    <scope line="98"/>
                </scope>
            </method>
            <method name="getTargetWindowInfo" type="TargetWindowInfo" line="108">
                <params>
                    <param name="window" type="long"/>
                </params>
            </method>
            <method name="sendEnterMessage" type="void" line="140">
                <params>
                    <param name="formats" type="long[]"/>
                    <param name="sourceAction" type="int"/>
                    <param name="sourceActions" type="int"/>
                    <param name="time" type="long"/>
                </params>
            </method>
            <method name="sendMoveMessage" type="void" line="165">
                <params>
                    <param name="xRoot" type="int"/>
                    <param name="yRoot" type="int"/>
                    <param name="sourceAction" type="int"/>
                    <param name="sourceActions" type="int"/>
                    <param name="time" type="long"/>
                </params>
            </method>
            <method name="sendLeaveMessage" type="void" line="188">
                <params>
                    <param name="time" type="long"/>
                </params>
            </method>
            <method name="sendDropMessage" type="void" line="209">
                <params>
                    <param name="xRoot" type="int"/>
                    <param name="yRoot" type="int"/>
                    <param name="sourceAction" type="int"/>
                    <param name="sourceActions" type="int"/>
                    <param name="time" type="long"/>
                </params>
            </method>
            <method name="processProxyModeEvent" type="boolean" line="235">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                    <param name="sourceWindow" type="long"/>
                </params>
            </method>
            <method name="cleanupTargetInfo" type="void" line="238"/>
            <method name="dispatchEvent" type="void" line="242">
                <params>
                    <param name="ev" type="XEvent"/>
                </params>
                <declaration name="xsre" type="XSelectionRequestEvent" line="245"/>
                <declaration name="atom" type="long" line="246"/>
                <scope line="247">
                    <declaration name="target" type="long" line="248"/>
                    <scope line="249"/>
                    <scope line="252"/>
                </scope>
            </method>
        </class>
    </source>