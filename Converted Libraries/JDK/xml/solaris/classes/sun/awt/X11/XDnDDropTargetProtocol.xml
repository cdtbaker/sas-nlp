<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt.Point"/>
        <import package="java.awt.dnd.DnDConstants"/>
        <import package="java.awt.event.MouseEvent"/>
        <import package="java.io.IOException"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <import package="sun.misc.Unsafe"/>
        <class name="XDnDDropTargetProtocol" line="8">
            <extends class="XDropTargetProtocol"/>
            <javadoc line="8">
                XDropTargetProtocol implementation for XDnD protocol.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="logger" type="PlatformLogger" line="13"/>
            <declaration name="unsafe" type="Unsafe" line="14"/>
            <declaration name="sourceWindow" type="long" line="15"/>
            <declaration name="sourceWindowMask" type="long" line="16"/>
            <declaration name="sourceProtocolVersion" type="int" line="17"/>
            <declaration name="sourceActions" type="int" line="18"/>
            <declaration name="sourceFormats" type="long[]" line="19"/>
            <declaration name="trackSourceActions" type="boolean" line="20"/>
            <declaration name="userAction" type="int" line="21"/>
            <declaration name="sourceX" type="int" line="22"/>
            <declaration name="sourceY" type="int" line="23"/>
            <declaration name="targetXWindow" type="XWindow" line="24"/>
            <declaration name="prevCtxt" type="long" line="25"/>
            <declaration name="overXEmbedClient" type="boolean" line="26"/>
            <method name="XDnDDropTargetProtocol" type="constructor" line="27">
                <params>
                    <param name="listener" type="XDropTargetProtocolListener"/>
                </params>
            </method>
            <javadoc line="30">
                Creates an instance associated with the specified listener.                
                <throws>
                    NullPointerException if listener is <code>null</code>.                    
                </throws>
            </javadoc>
            <method name="createInstance" type="XDropTargetProtocol" line="34">
                <params>
                    <param name="listener" type="XDropTargetProtocolListener"/>
                </params>
            </method>
            <method name="getProtocolName" type="String" line="37"/>
            <method name="registerDropTarget" type="void" line="40">
                <params>
                    <param name="window" type="long"/>
                </params>
            </method>
            <method name="unregisterDropTarget" type="void" line="57">
                <params>
                    <param name="window" type="long"/>
                </params>
            </method>
            <method name="registerEmbedderDropSite" type="void" line="61">
                <params>
                    <param name="embedder" type="long"/>
                </params>
            </method>
            <method name="unregisterEmbedderDropSite" type="void" line="155">
                <params>
                    <param name="embedder" type="long"/>
                </params>
            </method>
            <method name="registerEmbeddedDropSite" type="void" line="189">
                <params>
                    <param name="embedded" type="long"/>
                </params>
            </method>
            <method name="isProtocolSupported" type="boolean" line="245">
                <params>
                    <param name="window" type="long"/>
                </params>
            </method>
            <method name="processXdndEnter" type="boolean" line="261">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
            </method>
            <method name="processXdndPosition" type="boolean" line="362">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <declaration name="time_stamp" type="long" line="363"/>
                <declaration name="xdnd_action" type="long" line="364"/>
                <declaration name="java_action" type="int" line="365"/>
                <declaration name="x" type="int" line="366"/>
                <declaration name="y" type="int" line="367"/>
                <scope line="368"/>
                <declaration name="xwindow" type="XWindow" line="371"/>
                <scope line="372">
                    <declaration name="xbasewindow" type="XBaseWindow" line="373"/>
                    <scope line="374"/>
                </scope>
                <scope line="380">
                    <declaration name="receiver" type="long" line="381"/>
                    <scope line="382">
                        <declaration name="xbasewindow" type="XBaseWindow" line="383"/>
                        <scope line="384"/>
                    </scope>
                </scope>
                <scope line="389">
                    <declaration name="p" type="Point" line="390"/>
                </scope>
                <scope line="394"/>
                <scope line="397"/>
                <scope line="400"/>
                <scope line="404"/>
                <scope line="407">
                    <scope line="408"/>
                </scope>
                <scope line="412">
                    <declaration name="java_event_id" type="int" line="413"/>
                    <scope line="414"/>
                    <scope line="417"/>
                </scope>
            </method>
            <method name="processXdndLeave" type="boolean" line="428">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <scope line="429"/>
            </method>
            <method name="processXdndDrop" type="boolean" line="435">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <scope line="436"/>
                <scope line="439"/>
            </method>
            <method name="getMessageType" type="int" line="444">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <declaration name="messageType" type="long" line="445"/>
                <scope line="446"/>
                <scope line="449"/>
                <scope line="452"/>
                <scope line="455"/>
                <scope line="458"/>
            </method>
            <method name="processClientMessageImpl" type="boolean" line="462">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <declaration name="messageType" type="long" line="463"/>
                <scope line="464"/>
                <scope line="467"/>
                <scope line="470"/>
                <scope line="473"/>
                <scope line="476"/>
            </method>
            <method name="sendEnterMessageToToplevel" type="void" line="480">
                <params>
                    <param name="toplevel" type="long"/>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <declaration name="data1" type="long" line="481"/>
                <scope line="482"/>
                <declaration name="data2" type="long" line="485"/>
                <declaration name="data3" type="long" line="486"/>
                <declaration name="data4" type="long" line="487"/>
            </method>
            <method name="sendEnterMessageToToplevelImpl" type="void" line="490">
                <params>
                    <param name="toplevel" type="long"/>
                    <param name="sourceWindow" type="long"/>
                    <param name="data1" type="long"/>
                    <param name="data2" type="long"/>
                    <param name="data3" type="long"/>
                    <param name="data4" type="long"/>
                </params>
                <declaration name="enter" type="XClientMessageEvent" line="491"/>
                <scope line="492"/>
                <scope line="504"/>
            </method>
            <method name="sendLeaveMessageToToplevel" type="void" line="508">
                <params>
                    <param name="toplevel" type="long"/>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
            </method>
            <method name="sendLeaveMessageToToplevelImpl" type="void" line="511">
                <params>
                    <param name="toplevel" type="long"/>
                    <param name="sourceWindow" type="long"/>
                </params>
                <declaration name="leave" type="XClientMessageEvent" line="512"/>
                <scope line="513"/>
                <scope line="522"/>
            </method>
            <method name="sendResponse" type="boolean" line="526">
                <params>
                    <param name="ctxt" type="long"/>
                    <param name="eventID" type="int"/>
                    <param name="action" type="int"/>
                </params>
                <declaration name="xclient" type="XClientMessageEvent" line="527"/>
                <scope line="528"/>
                <scope line="531"/>
                <declaration name="msg" type="XClientMessageEvent" line="534"/>
                <scope line="535">
                    <declaration name="flags" type="long" line="541"/>
                    <scope line="542"/>
                    <scope line="550"/>
                    <scope line="553"/>
                </scope>
                <scope line="557"/>
            </method>
            <method name="getData" type="Object" line="562">
                <params>
                    <param name="ctxt" type="long"/>
                    <param name="format" type="long"/>
                </params>
                <declaration name="xclient" type="XClientMessageEvent" line="563"/>
                <declaration name="message_type" type="long" line="564"/>
                <declaration name="time_stamp" type="long" line="565"/>
                <scope line="566"/>
                <scope line="569"/>
                <scope line="572"/>
            </method>
            <method name="sendDropDone" type="boolean" line="577">
                <params>
                    <param name="ctxt" type="long"/>
                    <param name="success" type="boolean"/>
                    <param name="dropAction" type="int"/>
                </params>
                <declaration name="xclient" type="XClientMessageEvent" line="578"/>
                <scope line="579"/>
                <scope line="582">
                    <declaration name="time_stamp" type="long" line="583"/>
                    <declaration name="xdndSelectionAtom" type="long" line="584"/>
                    <scope line="586"/>
                    <scope line="589"/>
                </scope>
                <declaration name="msg" type="XClientMessageEvent" line="593"/>
                <scope line="594">
                    <scope line="602">
                        <scope line="603"/>
                    </scope>
                    <scope line="611"/>
                    <scope line="614"/>
                </scope>
                <scope line="618"/>
                <scope line="622"/>
                <scope line="625"/>
            </method>
            <method name="getSourceWindow" type="long" line="632"/>
            <javadoc line="635">
                Reset the state of the object.                
            </javadoc>
            <method name="cleanup" type="void" line="638">
                <scope line="640"/>
                <scope line="643">
                    <scope line="645"/>
                    <scope line="650"/>
                </scope>
            </method>
            <method name="isDragOverComponent" type="boolean" line="665"/>
            <method name="adjustEventForForwarding" type="void" line="668">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                    <param name="entry" type="EmbedderRegistryEntry"/>
                </params>
                <declaration name="version" type="int" line="669"/>
                <scope line="670">
                    <declaration name="min_version" type="int" line="671"/>
                    <declaration name="data1" type="long" line="672"/>
                    <scope line="673"/>
                    <scope line="676"/>
                </scope>
            </method>
            <method name="notifyProtocolListener" type="void" line="682">
                <params>
                    <param name="xwindow" type="XWindow"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="dropAction" type="int"/>
                    <param name="xclient" type="XClientMessageEvent"/>
                    <param name="eventID" type="int"/>
                </params>
                <declaration name="nativeCtxt" type="long" line="683"/>
                <scope line="684">
                    <declaration name="size" type="int" line="685"/>
                    <declaration name="data1" type="long" line="688"/>
                    <scope line="689"/>
                </scope>
            </method>
            <method name="forwardEventToEmbedded" type="boolean" line="699">
                <params>
                    <param name="embedded" type="long"/>
                    <param name="ctxt" type="long"/>
                    <param name="eventID" type="int"/>
                </params>
                <scope line="700"/>
                <scope line="703"/>
                <declaration name="size" type="int" line="706"/>
                <scope line="707">
                    <declaration name="xclient" type="XClientMessageEvent" line="708"/>
                    <scope line="709">
                        <declaration name="data1" type="long" line="710"/>
                        <declaration name="data2" type="long" line="711"/>
                        <declaration name="data3" type="long" line="712"/>
                        <declaration name="data4" type="long" line="713"/>
                        <scope line="714"/>
                        <scope line="717">
                            <declaration name="wpg" type="WindowPropertyGetter" line="718"/>
                            <scope line="719">
                                <scope line="721">
                                    <scope line="723">
                                        <scope line="727">
                                            <scope line="728"/>
                                        </scope>
                                    </scope>
                                    <scope line="733"/>
                                </scope>
                                <scope line="737">
                                    <scope line="738"/>
                                </scope>
                            </scope>
                            <scope line="743"/>
                        </scope>
                    </scope>
                    <scope line="751"/>
                    <scope line="754">
                        <declaration name="copy" type="XClientMessageEvent" line="755"/>
                    </scope>
                </scope>
                <scope line="761">
                    <scope line="762">
                        <scope line="763">
                            <declaration name="xclient" type="XClientMessageEvent" line="764"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="771"/>
                <scope line="775"/>
                <scope line="779"/>
            </method>
            <method name="isXEmbedSupported" type="boolean" line="785"/>
        </class>
    </source>