<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt.Point"/>
        <import package="java.awt.dnd.DnDConstants"/>
        <import package="java.awt.event.MouseEvent"/>
        <import package="java.io.IOException"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <import package="sun.misc.Unsafe"/>
        <class name="XDnDDropTargetProtocol" line="40">
            <extends class="XDropTargetProtocol"/>
            <comment line="63">
                XEmbed stuff.                
            </comment>
            <comment line="315">
                Gets and stores in the registry the embedder&apos;s XDnD drop site info
                 from the embedded.                
            </comment>
            <comment line="1053">
                The methodsfields defined below are executedaccessed only on
                 the toolkit thread.
                 The methodsfields defined below are executedaccessed only on the event
                 dispatch thread.                
            </comment>
            <javadoc line="40">
                XDropTargetProtocol implementation for XDnD protocol.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="logger" type="PlatformLogger" line="46"/>
            <declaration name="unsafe" type="Unsafe" line="49"/>
            <declaration name="sourceWindow" type="long" line="51"/>
            <declaration name="sourceWindowMask" type="long" line="52"/>
            <declaration name="sourceProtocolVersion" type="int" line="53"/>
            <declaration name="sourceActions" type="int" line="54"/>
            <declaration name="sourceFormats" type="long[]" line="55"/>
            <declaration name="trackSourceActions" type="boolean" line="56"/>
            <declaration name="userAction" type="int" line="57"/>
            <declaration name="sourceX" type="int" line="58"/>
            <declaration name="sourceY" type="int" line="59"/>
            <declaration name="targetXWindow" type="XWindow" line="60"/>
            <declaration name="prevCtxt" type="long" line="63"/>
            <declaration name="overXEmbedClient" type="boolean" line="64"/>
            <method name="XDnDDropTargetProtocol" type="constructor" line="66">
                <params>
                    <param name="listener" type="XDropTargetProtocolListener"/>
                </params>
            </method>
            <javadoc line="70">
                Creates an instance associated with the specified listener.                
                <throws>
                    NullPointerException if listener is &lt;code&gt;null&lt;/code&gt;.                    
                </throws>
            </javadoc>
            <method name="createInstance" type="XDropTargetProtocol" line="75">
                <params>
                    <param name="listener" type="XDropTargetProtocolListener"/>
                </params>
            </method>
            <method name="getProtocolName" type="String" line="79"/>
            <method name="registerDropTarget" type="void" line="83">
                <params>
                    <param name="window" type="long"/>
                </params>
                <declaration name="data" type="long" line="86"/>
                <scope line="88">
                    <scope line="96"/>
                </scope>
                <scope line="99"/>
            </method>
            <method name="unregisterDropTarget" type="void" line="105">
                <params>
                    <param name="window" type="long"/>
                </params>
            </method>
            <method name="registerEmbedderDropSite" type="void" line="111">
                <params>
                    <param name="embedder" type="long"/>
                </params>
                <comment line="138">
                                        
                </comment>
                <comment line="198">
                    Embedder already registered.                    
                </comment>
                <comment line="207">
                    The proxy window must have the XdndAware set, as XDnD protocol                    
                </comment>
                <comment line="222">
                                        
                </comment>
                <declaration name="overriden" type="boolean" line="114"/>
                <declaration name="version" type="int" line="115"/>
                <declaration name="proxy" type="long" line="116"/>
                <declaration name="newProxy" type="long" line="117"/>
                <declaration name="status" type="int" line="118"/>
                <declaration name="wpg1" type="WindowPropertyGetter" line="120"/>
                <scope line="124">
                    <scope line="128"/>
                </scope>
                <scope line="133"/>
                <scope line="138">
                    <declaration name="wpg2" type="WindowPropertyGetter" line="139"/>
                    <scope line="143">
                        <scope line="148"/>
                    </scope>
                    <scope line="152"/>
                    <scope line="156">
                        <declaration name="wpg3" type="WindowPropertyGetter" line="157"/>
                        <scope line="161">
                            <scope line="167"/>
                            <scope line="170">
                                <declaration name="wpg4" type="WindowPropertyGetter" line="171"/>
                                <scope line="177">
                                    <scope line="182"/>
                                </scope>
                                <scope line="186"/>
                            </scope>
                        </scope>
                        <scope line="190"/>
                    </scope>
                </scope>
                <scope line="196"/>
                <declaration name="data" type="long" line="201"/>
                <scope line="203">
                    <scope line="215"/>
                    <scope line="229"/>
                    <scope line="242"/>
                    <scope line="255"/>
                </scope>
                <scope line="258"/>
            </method>
            <method name="unregisterEmbedderDropSite" type="void" line="266">
                <params>
                    <param name="embedder" type="long"/>
                </params>
                <declaration name="entry" type="EmbedderRegistryEntry" line="269"/>
                <scope line="271"/>
                <scope line="275">
                    <declaration name="data" type="long" line="276"/>
                    <scope line="278">
                        <scope line="288"/>
                        <scope line="301"/>
                    </scope>
                    <scope line="304"/>
                </scope>
                <scope line="308"/>
            </method>
            <method name="registerEmbeddedDropSite" type="void" line="318">
                <params>
                    <param name="embedded" type="long"/>
                </params>
                <comment line="345">
                                        
                </comment>
                <declaration name="overriden" type="boolean" line="321"/>
                <declaration name="version" type="int" line="322"/>
                <declaration name="proxy" type="long" line="323"/>
                <declaration name="newProxy" type="long" line="324"/>
                <declaration name="status" type="int" line="325"/>
                <declaration name="wpg1" type="WindowPropertyGetter" line="327"/>
                <scope line="331">
                    <scope line="335"/>
                </scope>
                <scope line="340"/>
                <scope line="345">
                    <declaration name="wpg2" type="WindowPropertyGetter" line="346"/>
                    <scope line="350">
                        <scope line="355"/>
                    </scope>
                    <scope line="359"/>
                    <scope line="363">
                        <declaration name="wpg3" type="WindowPropertyGetter" line="364"/>
                        <scope line="368">
                            <scope line="374"/>
                            <scope line="377">
                                <declaration name="wpg4" type="WindowPropertyGetter" line="378"/>
                                <scope line="384">
                                    <scope line="389"/>
                                </scope>
                                <scope line="393"/>
                            </scope>
                        </scope>
                        <scope line="397"/>
                    </scope>
                </scope>
            </method>
            <method name="isProtocolSupported" type="boolean" line="406">
                <params>
                    <param name="window" type="long"/>
                </params>
                <declaration name="wpg1" type="WindowPropertyGetter" line="409"/>
                <scope line="413">
                    <declaration name="status" type="int" line="414"/>
                    <scope line="417"/>
                    <scope line="420"/>
                </scope>
                <scope line="423"/>
            </method>
            <method name="processXdndEnter" type="boolean" line="428">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <comment line="454">
                                        
                </comment>
                <comment line="459">
                                        
                </comment>
                <comment line="466">
                                        
                </comment>
                <comment line="468">
                                        
                </comment>
                <comment line="488">
                    According to XDnD protocol, XdndActionList is optional.
                     If XdndActionList is not set we try to guess which actions are
                     supported.                    
                </comment>
                <comment line="501">
                                        
                </comment>
                <comment line="539">
                    Select for StructureNotifyMask to receive DestroyNotify in case of source
                     crash.                    
                </comment>
                <declaration name="source_win" type="long" line="429"/>
                <declaration name="source_win_mask" type="long" line="430"/>
                <declaration name="protocol_version" type="int" line="431"/>
                <declaration name="actions" type="int" line="432"/>
                <declaration name="track" type="boolean" line="433"/>
                <declaration name="formats" type="long[]" line="434"/>
                <scope line="436"/>
                <scope line="441"/>
                <scope line="445"/>
                <scope line="454"/>
                <scope line="459"/>
                <scope line="466"/>
                <scope line="469">
                    <declaration name="wpg" type="WindowPropertyGetter" line="470"/>
                    <scope line="475">
                        <scope line="479">
                            <declaration name="data" type="long" line="480"/>
                            <scope line="482"/>
                        </scope>
                        <scope line="486"/>
                    </scope>
                    <scope line="495"/>
                </scope>
                <scope line="501">
                    <declaration name="wpg" type="WindowPropertyGetter" line="502"/>
                    <scope line="507">
                        <scope line="511"/>
                        <scope line="514"/>
                    </scope>
                    <scope line="517"/>
                </scope>
                <scope line="520">
                    <declaration name="countFormats" type="int" line="521"/>
                    <declaration name="formats3" type="long[]" line="522"/>
                    <scope line="524">
                        <declaration name="j" type="long" line="525"/>
                        <scope line="526"/>
                    </scope>
                </scope>
                <declaration name="wattr" type="XWindowAttributes" line="542"/>
                <scope line="543">
                    <declaration name="status" type="int" line="545"/>
                    <scope line="552"/>
                </scope>
                <scope line="557"/>
                <scope line="569"/>
            </method>
            <method name="processXdndPosition" type="boolean" line="583">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <comment line="591">
                                        
                </comment>
                <comment line="621">
                    Translate mouse position from root coordinates                    
                </comment>
                <comment line="628">
                                        
                </comment>
                <comment line="633">
                                        
                </comment>
                <comment line="637">
                                        
                </comment>
                <declaration name="time_stamp" type="long" line="584"/>
                <declaration name="xdnd_action" type="long" line="585"/>
                <declaration name="java_action" type="int" line="586"/>
                <declaration name="x" type="int" line="587"/>
                <declaration name="y" type="int" line="588"/>
                <scope line="591"/>
                <declaration name="xwindow" type="XWindow" line="595"/>
                <scope line="596">
                    <declaration name="xbasewindow" type="XBaseWindow" line="597"/>
                    <scope line="598"/>
                </scope>
                <scope line="606">
                    <declaration name="receiver" type="long" line="607"/>
                    <scope line="611">
                        <declaration name="xbasewindow" type="XBaseWindow" line="612"/>
                        <scope line="613"/>
                    </scope>
                </scope>
                <scope line="619">
                    <declaration name="p" type="Point" line="622"/>
                </scope>
                <scope line="628"/>
                <scope line="633"/>
                <scope line="635"/>
                <scope line="642"/>
                <scope line="646">
                    <scope line="647"/>
                </scope>
                <scope line="652">
                    <declaration name="java_event_id" type="int" line="653"/>
                    <scope line="655"/>
                    <scope line="657"/>
                </scope>
            </method>
            <method name="processXdndLeave" type="boolean" line="673">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <comment line="675">
                                        
                </comment>
                <scope line="675"/>
            </method>
            <method name="processXdndDrop" type="boolean" line="684">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <comment line="686">
                                        
                </comment>
                <scope line="686"/>
                <scope line="690"/>
            </method>
            <method name="getMessageType" type="int" line="698">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <declaration name="messageType" type="long" line="699"/>
                <scope line="701"/>
                <scope line="703"/>
                <scope line="705"/>
                <scope line="707"/>
                <scope line="709"/>
            </method>
            <method name="processClientMessageImpl" type="boolean" line="714">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <declaration name="messageType" type="long" line="715"/>
                <scope line="717"/>
                <scope line="719"/>
                <scope line="721"/>
                <scope line="723"/>
                <scope line="725"/>
            </method>
            <method name="sendEnterMessageToToplevel" type="void" line="731">
                <params>
                    <param name="toplevel" type="long"/>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <comment line="733">
                                        
                </comment>
                <declaration name="data1" type="long" line="733"/>
                <scope line="734"/>
                <declaration name="data2" type="long" line="737"/>
                <declaration name="data3" type="long" line="738"/>
                <declaration name="data4" type="long" line="739"/>
            </method>
            <method name="sendEnterMessageToToplevelImpl" type="void" line="748">
                <params>
                    <param name="toplevel" type="long"/>
                    <param name="sourceWindow" type="long"/>
                    <param name="data1" type="long"/>
                    <param name="data2" type="long"/>
                    <param name="data3" type="long"/>
                    <param name="data4" type="long"/>
                </params>
                <comment line="756">
                                        
                </comment>
                <declaration name="enter" type="XClientMessageEvent" line="749"/>
                <scope line="750"/>
                <scope line="763"/>
            </method>
            <method name="sendLeaveMessageToToplevel" type="void" line="769">
                <params>
                    <param name="toplevel" type="long"/>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
            </method>
            <method name="sendLeaveMessageToToplevelImpl" type="void" line="774">
                <params>
                    <param name="toplevel" type="long"/>
                    <param name="sourceWindow" type="long"/>
                </params>
                <comment line="782">
                                        
                </comment>
                <comment line="784">
                                        
                </comment>
                <declaration name="leave" type="XClientMessageEvent" line="775"/>
                <scope line="776"/>
                <scope line="787"/>
            </method>
            <method name="sendResponse" type="boolean" line="792">
                <params>
                    <param name="ctxt" type="long"/>
                    <param name="eventID" type="int"/>
                    <param name="action" type="int"/>
                </params>
                <comment line="812">
                                        
                </comment>
                <comment line="814">
                                        
                </comment>
                <comment line="820">
                                        
                </comment>
                <comment line="821">
                                        
                </comment>
                <comment line="822">
                                        
                </comment>
                <comment line="823">
                                        
                </comment>
                <declaration name="xclient" type="XClientMessageEvent" line="793"/>
                <scope line="796"/>
                <scope line="801"/>
                <declaration name="msg" type="XClientMessageEvent" line="805"/>
                <scope line="806">
                    <declaration name="flags" type="long" line="814"/>
                    <scope line="815"/>
                    <scope line="826"/>
                    <scope line="831"/>
                </scope>
                <scope line="834"/>
            </method>
            <method name="getData" type="Object" line="842">
                <params>
                    <param name="ctxt" type="long"/>
                    <param name="format" type="long"/>
                </params>
                <comment line="848">
                    NOTE: we assume that the source supports at least version 1, so we
                     can use the time stamp                    
                </comment>
                <comment line="851">
                    X server time is an unsigned 32-bit number!                    
                </comment>
                <comment line="854">
                    X server time is an unsigned 32-bit number!                    
                </comment>
                <declaration name="xclient" type="XClientMessageEvent" line="843"/>
                <declaration name="message_type" type="long" line="844"/>
                <declaration name="time_stamp" type="long" line="845"/>
                <scope line="849"/>
                <scope line="852"/>
                <scope line="855"/>
            </method>
            <method name="sendDropDone" type="boolean" line="862">
                <params>
                    <param name="ctxt" type="long"/>
                    <param name="success" type="boolean"/>
                    <param name="dropAction" type="int"/>
                </params>
                <comment line="871">
                    The XDnD protocol recommends that the target requests the special
                     target DELETE in case if the drop action is XdndActionMove.                    
                </comment>
                <comment line="900">
                                        
                </comment>
                <comment line="901">
                                        
                </comment>
                <comment line="902">
                                        
                </comment>
                <comment line="908">
                                        
                </comment>
                <comment line="927">
                    Flush the buffer to guarantee that the drop completion event is sent
                     to the source before the method returns.                    
                </comment>
                <comment line="938">
                                        
                </comment>
                <comment line="941">
                    Cannot do cleanup before the drop finishes as we may need                    
                </comment>
                <declaration name="xclient" type="XClientMessageEvent" line="863"/>
                <scope line="866"/>
                <scope line="874">
                    <declaration name="time_stamp" type="long" line="876"/>
                    <declaration name="xdndSelectionAtom" type="long" line="877"/>
                    <scope line="881"/>
                    <scope line="888"/>
                </scope>
                <declaration name="msg" type="XClientMessageEvent" line="893"/>
                <scope line="894">
                    <scope line="903">
                        <scope line="904"/>
                    </scope>
                    <scope line="914"/>
                    <scope line="919"/>
                </scope>
                <scope line="922"/>
                <scope line="931"/>
                <scope line="933"/>
            </method>
            <method name="getSourceWindow" type="long" line="946"/>
            <javadoc line="950">
                Reset the state of the object.                
            </javadoc>
            <method name="cleanup" type="void" line="953">
                <comment line="955">
                    Clear the reference to this protocol.                    
                </comment>
                <scope line="957"/>
                <scope line="963">
                    <scope line="965"/>
                    <scope line="970"/>
                </scope>
            </method>
            <method name="isDragOverComponent" type="boolean" line="987"/>
            <method name="adjustEventForForwarding" type="void" line="992">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                    <param name="entry" type="EmbedderRegistryEntry"/>
                </params>
                <comment line="994">
                                        
                </comment>
                <declaration name="version" type="int" line="994"/>
                <scope line="995">
                    <declaration name="min_version" type="int" line="996"/>
                    <declaration name="data1" type="long" line="998"/>
                    <scope line="999"/>
                    <scope line="1002"/>
                </scope>
            </method>
            <method name="notifyProtocolListener" type="void" line="1017">
                <params>
                    <param name="xwindow" type="XWindow"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="dropAction" type="int"/>
                    <param name="xclient" type="XClientMessageEvent"/>
                    <param name="eventID" type="int"/>
                </params>
                <comment line="1021">
                    Make a copy of the passed XClientMessageEvent structure, since
                     the original structure can be freed before this
                     SunDropTargetEvent is dispatched.                    
                </comment>
                <comment line="1035">
                    Append information from the latest XdndEnter event.                    
                </comment>
                <declaration name="nativeCtxt" type="long" line="1018"/>
                <scope line="1023">
                    <declaration name="size" type="int" line="1024"/>
                    <declaration name="data1" type="long" line="1030"/>
                    <scope line="1031"/>
                </scope>
            </method>
            <method name="forwardEventToEmbedded" type="boolean" line="1060">
                <params>
                    <param name="embedded" type="long"/>
                    <param name="ctxt" type="long"/>
                    <param name="eventID" type="int"/>
                </params>
                <comment line="1079">
                    The size of XClientMessageEvent structure.                    
                </comment>
                <comment line="1100">
                    Copy XdndTypeList from source to proxy.                    
                </comment>
                <comment line="1153">
                    Make a copy of the original event, since we are going to modify the                    
                </comment>
                <comment line="1168">
                    Last chance to send XdndLeave to the XEmbed client.                    
                </comment>
                <comment line="1175">
                    We have to clear the proxy mode source window here,
                     when the drag exits the XEmbedCanvasPeer.
                     NOTE: at this point the XEmbed client still might have some
                     drag notifications to process and it will send responses to
                     us. With the proxy mode source window cleared we won&apos;t be
                     able to forward these responses to the actual source. This is
                     not a problem if the drag operation was initiated in this
                     JVM. However, if it was initiated in another processes the
                     responses will be lost. We bear with it for now, as it seems
                     there is no other reliable point to clear.                    
                </comment>
                <scope line="1061"/>
                <scope line="1074"/>
                <declaration name="size" type="int" line="1079"/>
                <scope line="1081">
                    <declaration name="xclient" type="XClientMessageEvent" line="1082"/>
                    <scope line="1083">
                        <declaration name="data1" type="long" line="1084"/>
                        <declaration name="data2" type="long" line="1085"/>
                        <declaration name="data3" type="long" line="1086"/>
                        <declaration name="data4" type="long" line="1087"/>
                        <scope line="1089"/>
                        <scope line="1100">
                            <declaration name="wpg" type="WindowPropertyGetter" line="1101"/>
                            <scope line="1106">
                                <scope line="1110">
                                    <scope line="1113">
                                        <scope line="1122">
                                            <scope line="1123"/>
                                        </scope>
                                    </scope>
                                    <scope line="1127"/>
                                </scope>
                                <scope line="1130">
                                    <scope line="1131"/>
                                </scope>
                            </scope>
                            <scope line="1135"/>
                        </scope>
                    </scope>
                    <scope line="1146"/>
                    <scope line="1154">
                        <declaration name="copy" type="XClientMessageEvent" line="1155"/>
                    </scope>
                </scope>
                <scope line="1164">
                    <scope line="1165">
                        <scope line="1166">
                            <declaration name="xclient" type="XClientMessageEvent" line="1168"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="1188"/>
                <scope line="1193"/>
                <scope line="1198"/>
            </method>
            <method name="isXEmbedSupported" type="boolean" line="1207"/>
        </class>
    </source>