<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt.Component"/>
        <import package="java.awt.peer.ComponentPeer"/>
        <import package="java.io.IOException"/>
        <import package="java.util.Iterator"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <import package="sun.awt.AppContext"/>
        <import package="sun.awt.SunToolkit"/>
        <import package="sun.awt.dnd.SunDropTargetContextPeer"/>
        <import package="sun.awt.dnd.SunDropTargetEvent"/>
        <import package="sun.misc.Unsafe"/>
        <class name="XDropTargetContextPeer" line="45">
            <extends class="SunDropTargetContextPeer"/>
            <comment line="58">
                A key to store a peer instance for an AppContext.                
            </comment>
            <comment line="82">
                @param returnValue the drop action selected by the Java drop target.                
            </comment>
            <comment line="189">
                If source is an XEmbedCanvasPeer, passes the event to it for processing and
                 return true if the event is forwarded to the XEmbed child.
                 Otherwise, does nothing and return false.                
            </comment>
            <javadoc line="45">
                The XDropTargetContextPeer is the class responsible for handling
                  the interaction between the XDnD/Motif DnD subsystem and Java drop targets.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="logger" type="PlatformLogger" line="52"/>
            <declaration name="unsafe" type="Unsafe" line="55"/>
            <declaration name="DTCP_KEY" type="Object" line="60"/>
            <method name="XDropTargetContextPeer" type="constructor" line="62"/>
            <method name="getPeer" type="XDropTargetContextPeer" line="64">
                <params>
                    <param name="appContext" type="AppContext"/>
                </params>
                <scope line="65">
                    <declaration name="peer" type="XDropTargetContextPeer" line="66"/>
                    <scope line="68"/>
                </scope>
            </method>
            <method name="getXDropTargetProtocolListener" type="XDropTargetProtocolListener" line="77"/>
            <method name="eventProcessed" type="void" line="85">
                <params>
                    <param name="e" type="SunDropTargetEvent"/>
                    <param name="returnValue" type="int"/>
                    <param name="dispatcherDone" type="boolean"/>
                </params>
                <comment line="87">
                    The native context is the pointer to the XClientMessageEvent                    
                </comment>
                <comment line="90">
                                        
                </comment>
                <declaration name="ctxt" type="long" line="88"/>
                <scope line="90">
                    <scope line="91">
                        <declaration name="dropTargetProtocols" type="Iterator" line="92"/>
                        <scope line="95">
                            <declaration name="dropTargetProtocol" type="XDropTargetProtocol" line="96"/>
                            <scope line="99"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="104">
                    <scope line="105"/>
                </scope>
            </method>
            <method name="doDropDone" type="void" line="112">
                <params>
                    <param name="success" type="boolean"/>
                    <param name="dropAction" type="int"/>
                    <param name="isLocal" type="boolean"/>
                </params>
                <comment line="114">
                    The native context is the pointer to the XClientMessageEvent                    
                </comment>
                <declaration name="ctxt" type="long" line="115"/>
                <scope line="117">
                    <scope line="118">
                        <declaration name="dropTargetProtocols" type="Iterator" line="119"/>
                        <scope line="122">
                            <declaration name="dropTargetProtocol" type="XDropTargetProtocol" line="123"/>
                            <scope line="126"/>
                        </scope>
                    </scope>
                    <scope line="130"/>
                </scope>
            </method>
            <method name="getNativeData" type="Object" line="137">
                <params>
                    <param name="format" type="long"/>
                </params>
                <comment line="139">
                    The native context is the pointer to the XClientMessageEvent                    
                </comment>
                <comment line="150">
                    getData throws IAE if ctxt is not for this protocol.                    
                </comment>
                <declaration name="ctxt" type="long" line="140"/>
                <scope line="142">
                    <declaration name="dropTargetProtocols" type="Iterator" line="143"/>
                    <scope line="146">
                        <declaration name="dropTargetProtocol" type="XDropTargetProtocol" line="147"/>
                        <scope line="150"/>
                        <scope line="152"/>
                    </scope>
                </scope>
            </method>
            <method name="cleanup" type="void" line="160"/>
            <method name="processEnterMessage" type="void" line="163">
                <params>
                    <param name="event" type="SunDropTargetEvent"/>
                </params>
                <scope line="164"/>
            </method>
            <method name="processExitMessage" type="void" line="169">
                <params>
                    <param name="event" type="SunDropTargetEvent"/>
                </params>
                <scope line="170"/>
            </method>
            <method name="processMotionMessage" type="void" line="176">
                <params>
                    <param name="event" type="SunDropTargetEvent"/>
                    <param name="operationChanged" type="boolean"/>
                </params>
                <scope line="177"/>
            </method>
            <method name="processDropMessage" type="void" line="182">
                <params>
                    <param name="event" type="SunDropTargetEvent"/>
                </params>
                <scope line="183"/>
            </method>
            <method name="processSunDropTargetEvent" type="boolean" line="191">
                <params>
                    <param name="event" type="SunDropTargetEvent"/>
                </params>
                <comment line="199">
                    The native context is the pointer to the XClientMessageEvent                    
                </comment>
                <comment line="207">
                    If the event is not consumed, pass it to the                    
                </comment>
                <comment line="210">
                    NOTE: ctxt can be zero at this point.                    
                </comment>
                <declaration name="source" type="Object" line="192"/>
                <scope line="194">
                    <declaration name="peer" type="ComponentPeer" line="195"/>
                    <scope line="196">
                        <declaration name="xEmbedCanvasPeer" type="XEmbedCanvasPeer" line="197"/>
                        <declaration name="ctxt" type="long" line="200"/>
                        <scope line="202"/>
                        <scope line="208">
                            <scope line="211"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="forwardEventToEmbedded" type="void" line="223">
                <params>
                    <param name="embedded" type="long"/>
                    <param name="ctxt" type="long"/>
                    <param name="eventID" type="int"/>
                </params>
                <declaration name="dropTargetProtocols" type="Iterator" line="224"/>
                <scope line="227">
                    <declaration name="dropTargetProtocol" type="XDropTargetProtocol" line="228"/>
                    <scope line="231"/>
                </scope>
            </method>
            <class name="XDropTargetProtocolListenerImpl" line="237">
                <implements interface="XDropTargetProtocolListener"/>
                <declaration name="theInstance" type="XDropTargetProtocolListener" line="240"/>
                <method name="XDropTargetProtocolListenerImpl" type="constructor" line="243"/>
                <method name="getInstance" type="XDropTargetProtocolListener" line="245"/>
                <method name="handleDropTargetNotification" type="void" line="252">
                    <params>
                        <param name="xwindow" type="XWindow"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="dropAction" type="int"/>
                        <param name="actions" type="int"/>
                        <param name="formats" type="long[]"/>
                        <param name="nativeCtxt" type="long"/>
                        <param name="eventID" type="int"/>
                    </params>
                    <comment line="256">
                        The Every component is associated with some AppContext.                        
                    </comment>
                    <comment line="263">
                        Every component is associated with some AppContext.                        
                    </comment>
                    <declaration name="target" type="Object" line="253"/>
                    <declaration name="component" type="Component" line="258"/>
                    <declaration name="appContext" type="AppContext" line="260"/>
                    <declaration name="peer" type="XDropTargetContextPeer" line="265"/>
                </method>
            </class>
        </class>
    </source>