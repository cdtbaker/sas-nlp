<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt.Component"/>
        <import package="java.awt.peer.ComponentPeer"/>
        <import package="java.io.IOException"/>
        <import package="java.util.Iterator"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <import package="sun.awt.AppContext"/>
        <import package="sun.awt.SunToolkit"/>
        <import package="sun.awt.dnd.SunDropTargetContextPeer"/>
        <import package="sun.awt.dnd.SunDropTargetEvent"/>
        <import package="sun.misc.Unsafe"/>
        <class name="XDropTargetContextPeer" line="12">
            <extends class="SunDropTargetContextPeer"/>
            <javadoc line="12">
                The XDropTargetContextPeer is the class responsible for handling
                  the interaction between the XDnD/Motif DnD subsystem and Java drop targets.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="logger" type="PlatformLogger" line="18"/>
            <declaration name="unsafe" type="Unsafe" line="19"/>
            <declaration name="DTCP_KEY" type="Object" line="20"/>
            <method name="XDropTargetContextPeer" type="constructor" line="21"/>
            <method name="getPeer" type="XDropTargetContextPeer" line="23">
                <params>
                    <param name="appContext" type="AppContext"/>
                </params>
                <scope line="24">
                    <declaration name="peer" type="XDropTargetContextPeer" line="25"/>
                    <scope line="26"/>
                </scope>
            </method>
            <method name="getXDropTargetProtocolListener" type="XDropTargetProtocolListener" line="33"/>
            <method name="eventProcessed" type="void" line="36">
                <params>
                    <param name="e" type="SunDropTargetEvent"/>
                    <param name="returnValue" type="int"/>
                    <param name="dispatcherDone" type="boolean"/>
                </params>
                <declaration name="ctxt" type="long" line="37"/>
                <scope line="38">
                    <scope line="39">
                        <declaration name="dropTargetProtocols" type="Iterator" line="40"/>
                        <scope line="41">
                            <declaration name="dropTargetProtocol" type="XDropTargetProtocol" line="42"/>
                            <scope line="43"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="49">
                    <scope line="50"/>
                </scope>
            </method>
            <method name="doDropDone" type="void" line="55">
                <params>
                    <param name="success" type="boolean"/>
                    <param name="dropAction" type="int"/>
                    <param name="isLocal" type="boolean"/>
                </params>
                <declaration name="ctxt" type="long" line="56"/>
                <scope line="57">
                    <scope line="58">
                        <declaration name="dropTargetProtocols" type="Iterator" line="59"/>
                        <scope line="60">
                            <declaration name="dropTargetProtocol" type="XDropTargetProtocol" line="61"/>
                            <scope line="62"/>
                        </scope>
                    </scope>
                    <scope line="67"/>
                </scope>
            </method>
            <method name="getNativeData" type="Object" line="72">
                <params>
                    <param name="format" type="long"/>
                </params>
                <declaration name="ctxt" type="long" line="73"/>
                <scope line="74">
                    <declaration name="dropTargetProtocols" type="Iterator" line="75"/>
                    <scope line="76">
                        <declaration name="dropTargetProtocol" type="XDropTargetProtocol" line="77"/>
                        <scope line="78"/>
                        <scope line="81"/>
                    </scope>
                </scope>
            </method>
            <method name="cleanup" type="void" line="87"/>
            <method name="processEnterMessage" type="void" line="89">
                <params>
                    <param name="event" type="SunDropTargetEvent"/>
                </params>
                <scope line="90"/>
            </method>
            <method name="processExitMessage" type="void" line="94">
                <params>
                    <param name="event" type="SunDropTargetEvent"/>
                </params>
                <scope line="95"/>
            </method>
            <method name="processMotionMessage" type="void" line="99">
                <params>
                    <param name="event" type="SunDropTargetEvent"/>
                    <param name="operationChanged" type="boolean"/>
                </params>
                <scope line="100"/>
            </method>
            <method name="processDropMessage" type="void" line="104">
                <params>
                    <param name="event" type="SunDropTargetEvent"/>
                </params>
                <scope line="105"/>
            </method>
            <method name="processSunDropTargetEvent" type="boolean" line="109">
                <params>
                    <param name="event" type="SunDropTargetEvent"/>
                </params>
                <declaration name="source" type="Object" line="110"/>
                <scope line="111">
                    <declaration name="peer" type="ComponentPeer" line="112"/>
                    <scope line="113">
                        <declaration name="xEmbedCanvasPeer" type="XEmbedCanvasPeer" line="114"/>
                        <declaration name="ctxt" type="long" line="115"/>
                        <scope line="116"/>
                        <scope line="119">
                            <scope line="120"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="forwardEventToEmbedded" type="void" line="129">
                <params>
                    <param name="embedded" type="long"/>
                    <param name="ctxt" type="long"/>
                    <param name="eventID" type="int"/>
                </params>
                <declaration name="dropTargetProtocols" type="Iterator" line="130"/>
                <scope line="131">
                    <declaration name="dropTargetProtocol" type="XDropTargetProtocol" line="132"/>
                    <scope line="133"/>
                </scope>
            </method>
            <class name="XDropTargetProtocolListenerImpl" line="138">
                <implements interface="XDropTargetProtocolListener"/>
                <declaration name="theInstance" type="XDropTargetProtocolListener" line="139"/>
                <method name="XDropTargetProtocolListenerImpl" type="constructor" line="140"/>
                <method name="getInstance" type="XDropTargetProtocolListener" line="142"/>
                <method name="handleDropTargetNotification" type="void" line="145">
                    <params>
                        <param name="xwindow" type="XWindow"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="dropAction" type="int"/>
                        <param name="actions" type="int"/>
                        <param name="formats" type="long[]"/>
                        <param name="nativeCtxt" type="long"/>
                        <param name="eventID" type="int"/>
                    </params>
                </method>
            </class>
        </class>
    </source>