<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt"/>
        <import package="java.awt.peer"/>
        <import package="java.awt.event"/>
        <import package="java.lang.reflect.Field"/>
        <import package="java.util.Vector"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <import package="sun.awt.SunToolkit"/>
        <class name="XMenuBarPeer" line="9">
            <extends class="XBaseMenuWindow"/>
            <implements interface="MenuBarPeer"/>
            <declaration name="log" type="PlatformLogger" line="10"/>
            <javadoc line="10">
                Data members                
            </javadoc>
            <declaration name="framePeer" type="XFramePeer" line="14"/>
            <declaration name="menuBarTarget" type="MenuBar" line="15"/>
            <declaration name="helpMenu" type="XMenuPeer" line="16"/>
            <declaration name="BAR_SPACING_TOP" type="int" line="17"/>
            <declaration name="BAR_SPACING_BOTTOM" type="int" line="18"/>
            <declaration name="BAR_SPACING_LEFT" type="int" line="19"/>
            <declaration name="BAR_SPACING_RIGHT" type="int" line="20"/>
            <declaration name="BAR_ITEM_SPACING" type="int" line="21"/>
            <declaration name="BAR_ITEM_MARGIN_LEFT" type="int" line="22"/>
            <declaration name="BAR_ITEM_MARGIN_RIGHT" type="int" line="23"/>
            <declaration name="BAR_ITEM_MARGIN_TOP" type="int" line="24"/>
            <declaration name="BAR_ITEM_MARGIN_BOTTOM" type="int" line="25"/>
            <declaration name="f_helpMenu" type="Field" line="26"/>
            <declaration name="f_menus" type="Field" line="27"/>
            <scope line="28"/>
            <class name="MappingData" line="32">
                <extends class="XBaseMenuWindow.MappingData"/>
                <javadoc line="32">
                    XBaseMenuWindow&apos;s mappingData is extended with
                      desired height of menu bar                    
                </javadoc>
                <declaration name="desiredHeight" type="int" line="37"/>
                <method name="MappingData" type="constructor" line="38">
                    <params>
                        <param name="items" type="XMenuItemPeer[]"/>
                        <param name="desiredHeight" type="int"/>
                    </params>
                </method>
                <javadoc line="42">
                    Constructs MappingData without items
                      This constructor should be used in case of errors                    
                </javadoc>
                <method name="MappingData" type="constructor" line="46"/>
                <method name="getDesiredHeight" type="int" line="49"/>
            </class>
            <javadoc line="53">
                Construction                
            </javadoc>
            <method name="XMenuBarPeer" type="constructor" line="56">
                <params>
                    <param name="menuBarTarget" type="MenuBar"/>
                </params>
            </method>
            <javadoc line="59">
                Implementaion of interface methods                
            </javadoc>
            <method name="setFont" type="void" line="62">
                <params>
                    <param name="f" type="Font"/>
                </params>
            </method>
            <method name="addMenu" type="void" line="67">
                <params>
                    <param name="m" type="Menu"/>
                </params>
            </method>
            <method name="delMenu" type="void" line="71">
                <params>
                    <param name="index" type="int"/>
                </params>
                <scope line="72">
                    <declaration name="item" type="XMenuItemPeer" line="73"/>
                    <scope line="74"/>
                </scope>
            </method>
            <method name="addHelpMenu" type="void" line="81">
                <params>
                    <param name="m" type="Menu"/>
                </params>
                <declaration name="mp" type="XMenuPeer" line="82"/>
                <scope line="83"/>
            </method>
            <javadoc line="88">
                called from XFramePeer.setMenuBar                
            </javadoc>
            <method name="init" type="void" line="91">
                <params>
                    <param name="frame" type="Frame"/>
                </params>
                <declaration name="params" type="XCreateWindowParams" line="94"/>
            </method>
            <javadoc line="100">
                Overriden initialization                
            </javadoc>
            <method name="postInit" type="void" line="103">
                <params>
                    <param name="params" type="XCreateWindowParams"/>
                </params>
                <declaration name="targetMenuVector" type="Vector" line="105"/>
                <declaration name="targetHelpMenu" type="Menu" line="106"/>
                <scope line="107"/>
                <scope line="112"/>
                <scope line="115"/>
            </method>
            <javadoc line="121">
                Menu bar is always root window in menu window&apos;s
                  hierarchy                
            </javadoc>
            <method name="getParentMenuWindow" type="XBaseMenuWindow" line="125"/>
            <javadoc line="128">
                @see XBaseMenuWindow.map                
            </javadoc>
            <method name="map" type="MappingData" line="131">
                <declaration name="itemVector" type="XMenuItemPeer[]" line="132"/>
                <declaration name="itemCnt" type="int" line="133"/>
                <declaration name="helpMenu" type="XMenuItemPeer" line="134"/>
                <declaration name="helpMenuPos" type="int" line="135"/>
                <scope line="136">
                    <scope line="137">
                        <scope line="138"/>
                    </scope>
                    <scope line="143"/>
                </scope>
                <declaration name="maxHeight" type="int" line="148"/>
                <declaration name="itemMetrics" type="XMenuItemPeer.TextMetrics[]" line="149"/>
                <scope line="150">
                    <declaration name="dim" type="Dimension" line="152"/>
                    <scope line="153"/>
                </scope>
                <declaration name="nextOffset" type="int" line="157"/>
                <declaration name="itemHeight" type="int" line="158"/>
                <declaration name="mappedCnt" type="int" line="159"/>
                <scope line="160">
                    <declaration name="item" type="XMenuItemPeer" line="161"/>
                    <declaration name="metrics" type="XMenuItemPeer.TextMetrics" line="162"/>
                    <declaration name="dim" type="Dimension" line="163"/>
                    <scope line="164">
                        <declaration name="itemWidth" type="int" line="165"/>
                        <scope line="166"/>
                        <scope line="170"/>
                        <declaration name="bounds" type="Rectangle" line="173"/>
                        <declaration name="y" type="int" line="174"/>
                        <declaration name="textOrigin" type="Point" line="175"/>
                    </scope>
                    <scope line="179">
                        <declaration name="bounds" type="Rectangle" line="180"/>
                        <declaration name="textOrigin" type="Point" line="181"/>
                    </scope>
                </scope>
                <declaration name="mappedVector" type="XMenuItemPeer" line="184"/>
                <declaration name="mappingData" type="MappingData" line="186"/>
            </method>
            <javadoc line="189">
                @see XBaseMenuWindow.getSubmenuBounds                
            </javadoc>
            <method name="getSubmenuBounds" type="Rectangle" line="192">
                <params>
                    <param name="itemBounds" type="Rectangle"/>
                    <param name="windowSize" type="Dimension"/>
                </params>
                <declaration name="globalBounds" type="Rectangle" line="193"/>
                <declaration name="screenSize" type="Dimension" line="194"/>
                <declaration name="res" type="Rectangle" line="195"/>
                <scope line="197"/>
                <scope line="201"/>
                <scope line="205"/>
                <scope line="209"/>
            </method>
            <javadoc line="214">
                This function is called when it&apos;s likely that
                  size of items has changed.
                  Invokes framePeer&apos;s updateChildrenSizes()                
            </javadoc>
            <method name="updateSize" type="void" line="219">
                <scope line="221"/>
            </method>
            <javadoc line="225">
                Returns desired height of menu bar                
            </javadoc>
            <method name="getDesiredHeight" type="int" line="228">
                <declaration name="mappingData" type="MappingData" line="229"/>
            </method>
            <javadoc line="232">
                Returns true if framePeer is not null and is enabled
                  Used to fix 6185057: Disabling a frame does not disable
                  the menus on the frame, on solaris/linux                
            </javadoc>
            <method name="isFramePeerEnabled" type="boolean" line="237">
                <scope line="238"/>
            </method>
            <javadoc line="243">
                @see XBaseMenuWindow.doDispose()                
            </javadoc>
            <method name="doDispose" type="void" line="246"/>
            <javadoc line="250">
                For menu bars this function is called from framePeer&apos;s
                  reshape(...) and updateChildrenSizes()                
            </javadoc>
            <method name="reshape" type="void" line="254">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <scope line="255"/>
            </method>
            <javadoc line="260">
                Performs ungrabbing of input                
                <see>
                    XBaseWindow.ungrabInputImpl()                    
                </see>
            </javadoc>
            <method name="ungrabInputImpl" type="void" line="264"/>
            <javadoc line="269">
                Overriden XWindow painting &amp; printing                
            </javadoc>
            <method name="paint" type="void" line="272">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="width" type="int" line="274"/>
                <declaration name="height" type="int" line="275"/>
                <declaration name="mappingData" type="MappingData" line="280"/>
                <declaration name="itemVector" type="XMenuItemPeer[]" line="281"/>
                <declaration name="selectedItem" type="XMenuItemPeer" line="282"/>
                <scope line="283">
                    <declaration name="item" type="XMenuItemPeer" line="284"/>
                    <declaration name="bounds" type="Rectangle" line="286"/>
                    <declaration name="textOrigin" type="Point" line="287"/>
                    <scope line="288"/>
                    <scope line="293"/>
                    <scope line="296"/>
                </scope>
            </method>
            <declaration name="W_DIFF" type="int" line="303"/>
            <declaration name="H_DIFF" type="int" line="304"/>
            <method name="print" type="void" line="305">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
            </method>
            <javadoc line="307">
                Overriden XBaseMenuWindow event handling                
            </javadoc>
            <method name="handleEvent" type="void" line="310">
                <params>
                    <param name="event" type="AWTEvent"/>
                </params>
                <scope line="311">
                    <scope line="312"/>
                </scope>
                <scope line="324"/>
                <scope line="330"/>
            </method>
            <javadoc line="339">
                Overriden XWindow keyboard processing                
            </javadoc>
            <method name="handleF10KeyPress" type="void" line="342">
                <params>
                    <param name="event" type="KeyEvent"/>
                </params>
                <declaration name="keyState" type="int" line="343"/>
                <scope line="344"/>
            </method>
            <method name="handleKeyPress" type="void" line="350">
                <params>
                    <param name="xev" type="XEvent"/>
                </params>
                <declaration name="xkey" type="XKeyEvent" line="351"/>
                <scope line="353"/>
                <declaration name="currentSource" type="Component" line="356"/>
            </method>
        </class>
    </source>