<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt.Color"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Font"/>
        <import package="java.awt.FontMetrics"/>
        <import package="java.awt.Frame"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Insets"/>
        <import package="java.awt.MenuBar"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.peer.FramePeer"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <import package="sun.awt.AWTAccessor"/>
        <class name="XFramePeer" line="40">
            <extends class="XDecoratedPeer"/>
            <comment line="324">
                NOTE: This method may be called by privileged threads.                
            </comment>
            <comment line="325">
                DO NOT INVOKE CLIENT CODE ON THIS THREAD!                
            </comment>
            <comment line="410">
                Print the native component by rendering the Motif look ourselves.
                 We also explicitly print the MenuBar since a MenuBar isn&apos;t a subclass
                 of Component (and thus it has no &quot;print&quot; method which gets called by
                 default).                
            </comment>
            <implements interface="FramePeer"/>
            <declaration name="log" type="PlatformLogger" line="41"/>
            <declaration name="stateLog" type="PlatformLogger" line="42"/>
            <declaration name="insLog" type="PlatformLogger" line="43"/>
            <declaration name="menubarPeer" type="XMenuBarPeer" line="45"/>
            <declaration name="menubar" type="MenuBar" line="46"/>
            <declaration name="state" type="int" line="47"/>
            <declaration name="undecorated" type="Boolean" line="48"/>
            <declaration name="MENUBAR_HEIGHT_IF_NO_MENUBAR" type="int" line="50"/>
            <declaration name="lastAppliedMenubarHeight" type="int" line="51"/>
            <method name="XFramePeer" type="constructor" line="53">
                <params>
                    <param name="target" type="Frame"/>
                </params>
            </method>
            <method name="XFramePeer" type="constructor" line="57">
                <params>
                    <param name="params" type="XCreateWindowParams"/>
                </params>
            </method>
            <method name="preInit" type="void" line="61">
                <params>
                    <param name="params" type="XCreateWindowParams"/>
                </params>
                <comment line="64">
                    set the window attributes for this Frame                    
                </comment>
                <comment line="75">
                    target.isResizable();                    
                </comment>
                <declaration name="target" type="Frame" line="63"/>
                <scope line="69"/>
                <scope line="71"/>
                <scope line="78"/>
            </method>
            <method name="postInit" type="void" line="85">
                <params>
                    <param name="params" type="XCreateWindowParams"/>
                </params>
            </method>
            <method name="isTargetUndecorated" type="boolean" line="91">
                <scope line="92"/>
                <scope line="94"/>
            </method>
            <method name="setupState" type="void" line="99">
                <params>
                    <param name="onInit" type="boolean"/>
                </params>
                <scope line="100"/>
                <scope line="103"/>
                <scope line="105"/>
            </method>
            <method name="setMenuBar" type="void" line="111">
                <params>
                    <param name="mb" type="MenuBar"/>
                </params>
                <comment line="112">
                    state_lock should always be the second after awt_lock                    
                </comment>
                <scope line="114">
                    <scope line="115">
                        <scope line="117">
                            <scope line="118"/>
                        </scope>
                        <scope line="124">
                            <scope line="127"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="132"/>
            </method>
            <method name="getMenubarPeer" type="XMenuBarPeer" line="139"/>
            <method name="getMenuBarHeight" type="int" line="143">
                <scope line="144"/>
                <scope line="146"/>
            </method>
            <method name="updateChildrenSizes" type="void" line="151">
                <comment line="155">
                    XWindow.reshape calls XBaseWindow.xSetBounds, which acquires                    
                </comment>
                <comment line="156">
                    the AWT lock, so we have to acquire the AWT lock here                    
                </comment>
                <comment line="157">
                    before getStateLock() to avoid a deadlock with the Toolkit thread                    
                </comment>
                <comment line="158">
                    when this method is called on the EDT.                    
                </comment>
                <declaration name="height" type="int" line="153"/>
                <scope line="160">
                    <scope line="161">
                        <declaration name="width" type="int" line="162"/>
                        <scope line="163"/>
                    </scope>
                </scope>
                <scope line="167"/>
            </method>
            <javadoc line="172">
                In addition to reshaping menubarPeer (by using &apos;updateChildrenSizes&apos;)
                  this method also performs some frame reaction on this (i.e. layouts
                  other frame children, if required)                
            </javadoc>
            <method name="reshapeMenubarPeer" type="void" line="177">
                <comment line="186">
                    Neither &apos;XToolkit.awtLock()&apos; nor &apos;getStateLock()&apos;                    
                </comment>
                <comment line="187">
                    is acquired under this call, and it looks to run                    
                </comment>
                <comment line="188">
                    thread-safely. I currently see no reason to move                    
                </comment>
                <comment line="189">
                    it under following &apos;synchronized&apos; clause.                    
                </comment>
                <comment line="198">
                    To make frame contents be re-layout (copied from                    
                </comment>
                <comment line="199">
                    &apos;XDecoratedPeer.revalidate()&apos;). These are not                    
                </comment>
                <comment line="200">
                    &apos;synchronized&apos;, because can recursively call client                    
                </comment>
                <comment line="201">
                    methods, which are not supposed to be called with locks                    
                </comment>
                <comment line="202">
                    acquired.                    
                </comment>
                <anonymous_class line="180">
                    <method name="run" type="void" line="181">
                        <comment line="186">
                            Neither &apos;XToolkit.awtLock()&apos; nor &apos;getStateLock()&apos;                            
                        </comment>
                        <comment line="187">
                            is acquired under this call, and it looks to run                            
                        </comment>
                        <comment line="188">
                            thread-safely. I currently see no reason to move                            
                        </comment>
                        <comment line="189">
                            it under following &apos;synchronized&apos; clause.                            
                        </comment>
                        <comment line="198">
                            To make frame contents be re-layout (copied from                            
                        </comment>
                        <comment line="199">
                            &apos;XDecoratedPeer.revalidate()&apos;). These are not                            
                        </comment>
                        <comment line="200">
                            &apos;synchronized&apos;, because can recursively call client                            
                        </comment>
                        <comment line="201">
                            methods, which are not supposed to be called with locks                            
                        </comment>
                        <comment line="202">
                            acquired.                            
                        </comment>
                        <declaration name="heightChanged" type="boolean" line="183"/>
                        <declaration name="height" type="int" line="185"/>
                        <scope line="191">
                            <scope line="192"/>
                        </scope>
                        <scope line="197"/>
                    </method>
                </anonymous_class>
            </method>
            <method name="setMaximizedBounds" type="void" line="211">
                <params>
                    <param name="b" type="Rectangle"/>
                </params>
                <scope line="216">
                    <declaration name="hints" type="XSizeHints" line="217"/>
                    <scope line="219"/>
                    <scope line="221"/>
                    <scope line="224"/>
                    <scope line="226"/>
                </scope>
                <scope line="231"/>
            </method>
            <method name="getState" type="int" line="236">
                <scope line="237"/>
            </method>
            <method name="setState" type="void" line="242">
                <params>
                    <param name="newState" type="int"/>
                </params>
                <scope line="243">
                    <scope line="244"/>
                </scope>
            </method>
            <method name="changeState" type="void" line="253">
                <params>
                    <param name="newState" type="int"/>
                </params>
                <declaration name="changed" type="int" line="254"/>
                <declaration name="changeIconic" type="int" line="255"/>
                <declaration name="iconic" type="boolean" line="256"/>
                <scope line="259">
                    <scope line="262">
                        <declaration name="res" type="int" line="263"/>
                    </scope>
                    <scope line="266"/>
                </scope>
                <scope line="270"/>
                <scope line="273"/>
            </method>
            <method name="setExtendedState" type="void" line="279">
                <params>
                    <param name="newState" type="int"/>
                </params>
            </method>
            <method name="handlePropertyNotify" type="void" line="283">
                <params>
                    <param name="xev" type="XEvent"/>
                </params>
                <comment line="288">
                    Let&apos;s see if this is a window state protocol message, and
                     if it is - decode a new state in terms of java constants.                    
                </comment>
                <comment line="307">
                    sync target with peer                    
                </comment>
                <declaration name="ev" type="XPropertyEvent" line="285"/>
                <scope line="292"/>
                <declaration name="newState" type="int" line="297"/>
                <declaration name="changed" type="int" line="298"/>
                <scope line="299"/>
                <declaration name="old_state" type="int" line="304"/>
                <scope line="310">
                    <scope line="311"/>
                    <scope line="314"/>
                </scope>
            </method>
            <method name="handleStateChange" type="void" line="325">
                <params>
                    <param name="oldState" type="int"/>
                    <param name="newState" type="int"/>
                </params>
                <scope line="327"/>
            </method>
            <method name="setVisible" type="void" line="332">
                <params>
                    <param name="vis" type="boolean"/>
                </params>
                <scope line="333"/>
                <scope line="335">
                    <scope line="336"/>
                </scope>
                <scope line="341"/>
            </method>
            <method name="setInitialState" type="void" line="346">
                <params>
                    <param name="wm_state" type="int"/>
                </params>
                <scope line="348">
                    <declaration name="hints" type="XWMHints" line="349"/>
                </scope>
                <scope line="355"/>
            </method>
            <method name="dispose" type="void" line="360">
                <scope line="361"/>
            </method>
            <method name="isMaximized" type="boolean" line="367"/>
            <declaration name="CROSSHAIR_INSET" type="int" line="374"/>
            <declaration name="BUTTON_Y" type="int" line="376"/>
            <declaration name="BUTTON_W" type="int" line="377"/>
            <declaration name="BUTTON_H" type="int" line="378"/>
            <declaration name="SYS_MENU_X" type="int" line="380"/>
            <declaration name="SYS_MENU_CONTAINED_X" type="int" line="381"/>
            <declaration name="SYS_MENU_CONTAINED_Y" type="int" line="382"/>
            <declaration name="SYS_MENU_CONTAINED_W" type="int" line="383"/>
            <declaration name="SYS_MENU_CONTAINED_H" type="int" line="384"/>
            <declaration name="MAXIMIZE_X_DIFF" type="int" line="386"/>
            <declaration name="MAXIMIZE_CONTAINED_X_DIFF" type="int" line="387"/>
            <declaration name="MAXIMIZE_CONTAINED_Y" type="int" line="388"/>
            <declaration name="MAXIMIZE_CONTAINED_W" type="int" line="389"/>
            <declaration name="MAXIMIZE_CONTAINED_H" type="int" line="390"/>
            <declaration name="MINIMIZE_X_DIFF" type="int" line="392"/>
            <declaration name="MINIMIZE_CONTAINED_X_DIFF" type="int" line="393"/>
            <declaration name="MINIMIZE_CONTAINED_Y" type="int" line="394"/>
            <declaration name="MINIMIZE_CONTAINED_W" type="int" line="395"/>
            <declaration name="MINIMIZE_CONTAINED_H" type="int" line="396"/>
            <declaration name="TITLE_X" type="int" line="398"/>
            <declaration name="TITLE_W_DIFF" type="int" line="399"/>
            <declaration name="TITLE_MID_Y" type="int" line="400"/>
            <declaration name="MENUBAR_X" type="int" line="402"/>
            <declaration name="MENUBAR_Y" type="int" line="403"/>
            <declaration name="HORIZ_RESIZE_INSET" type="int" line="405"/>
            <declaration name="VERT_RESIZE_INSET" type="int" line="406"/>
            <method name="print" type="void" line="415">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <comment line="427">
                    Well, we could query for the currently running window manager                    
                </comment>
                <comment line="428">
                    and base the look on that, or we could just always do dtwm.                    
                </comment>
                <comment line="429">
                    aim, tball, and levenson all agree we&apos;ll just do dtwm.                    
                </comment>
                <comment line="433">
                    top outer -- because we&apos;ll most likely be drawing on white paper,                    
                </comment>
                <comment line="434">
                    for aesthetic reasons, don&apos;t make any part of the outer border                    
                </comment>
                <comment line="435">
                    pure white                    
                </comment>
                <comment line="445">
                    left outer                    
                </comment>
                <comment line="446">
                    if (highlight.equals(Color.white)) {                    
                </comment>
                <comment line="447">
                    g.setColor(new Color(230, 230, 230));                    
                </comment>
                <comment line="448">
                    }                    
                </comment>
                <comment line="449">
                    else {                    
                </comment>
                <comment line="450">
                    g.setColor(highlight);                    
                </comment>
                <comment line="451">
                    }                    
                </comment>
                <comment line="455">
                    bottom cross-hair                    
                </comment>
                <comment line="461">
                    right cross-hair                    
                </comment>
                <comment line="462">
                    g.setColor(highlight);                    
                </comment>
                <comment line="467">
                    bottom outer                    
                </comment>
                <comment line="472">
                    right outer                    
                </comment>
                <comment line="473">
                    g.setColor(shadow);                    
                </comment>
                <comment line="477">
                    top cross-hair                    
                </comment>
                <comment line="478">
                    g.setColor(shadow);                    
                </comment>
                <comment line="482">
                    left cross-hair                    
                </comment>
                <comment line="483">
                    g.setColor(shadow);                    
                </comment>
                <comment line="492">
                    system menu                    
                </comment>
                <comment line="499">
                    title bar                    
                </comment>
                <comment line="500">
                    g.setColor(bg);                    
                </comment>
                <comment line="506">
                    minimize button                    
                </comment>
                <comment line="507">
                    g.setColor(bg);                    
                </comment>
                <comment line="517">
                    maximize button                    
                </comment>
                <comment line="518">
                    g.setColor(bg);                    
                </comment>
                <comment line="526">
                    title bar text                    
                </comment>
                <comment line="541">
                    add resize cross hairs                    
                </comment>
                <comment line="543">
                    upper-left horiz (shadow)                    
                </comment>
                <comment line="547">
                    upper-left vert (shadow)                    
                </comment>
                <comment line="548">
                    g.setColor(shadow);                    
                </comment>
                <comment line="550">
                    upper-right horiz (shadow)                    
                </comment>
                <comment line="551">
                    g.setColor(shadow);                    
                </comment>
                <comment line="554">
                    upper-right vert (shadow)                    
                </comment>
                <comment line="555">
                    g.setColor(shadow);                    
                </comment>
                <comment line="558">
                    lower-left horiz (shadow)                    
                </comment>
                <comment line="559">
                    g.setColor(shadow);                    
                </comment>
                <comment line="562">
                    lower-left vert (shadow)                    
                </comment>
                <comment line="563">
                    g.setColor(shadow);                    
                </comment>
                <comment line="566">
                    lower-right horiz (shadow)                    
                </comment>
                <comment line="567">
                    g.setColor(shadow);                    
                </comment>
                <comment line="571">
                    lower-right vert (shadow)                    
                </comment>
                <comment line="572">
                    g.setColor(shadow);                    
                </comment>
                <comment line="577">
                    upper-left horiz (highlight)                    
                </comment>
                <comment line="581">
                    upper-left vert (highlight)                    
                </comment>
                <comment line="582">
                    g.setColor(highlight);                    
                </comment>
                <comment line="585">
                    upper-right horiz (highlight)                    
                </comment>
                <comment line="586">
                    g.setColor(highlight);                    
                </comment>
                <comment line="590">
                    upper-right vert (highlight)                    
                </comment>
                <comment line="591">
                    g.setColor(highlight);                    
                </comment>
                <comment line="594">
                    lower-left horiz (highlight)                    
                </comment>
                <comment line="595">
                    g.setColor(highlight);                    
                </comment>
                <comment line="598">
                    lower-left vert (highlight)                    
                </comment>
                <comment line="599">
                    g.setColor(highlight);                    
                </comment>
                <comment line="603">
                    lower-right horiz (highlight)                    
                </comment>
                <comment line="604">
                    g.setColor(highlight);                    
                </comment>
                <comment line="608">
                    lower-right vert (highlight)                    
                </comment>
                <comment line="609">
                    g.setColor(highlight);                    
                </comment>
                <declaration name="f" type="Frame" line="418"/>
                <declaration name="finsets" type="Insets" line="419"/>
                <declaration name="fsize" type="Dimension" line="420"/>
                <declaration name="bg" type="Color" line="422"/>
                <declaration name="fg" type="Color" line="423"/>
                <declaration name="highlight" type="Color" line="424"/>
                <declaration name="shadow" type="Color" line="425"/>
                <scope line="431">
                    <scope line="436"/>
                    <scope line="439"/>
                </scope>
                <scope line="488">
                    <scope line="490"/>
                    <scope line="504"/>
                    <scope line="515"/>
                    <declaration name="sysfont" type="Font" line="528"/>
                    <declaration name="sysfm" type="FontMetrics" line="530"/>
                    <declaration name="ftitle" type="String" line="531"/>
                </scope>
                <scope line="539"/>
                <declaration name="peer" type="XMenuBarPeer" line="615"/>
                <scope line="616">
                    <declaration name="insets" type="Insets" line="617"/>
                    <declaration name="ng" type="Graphics" line="618"/>
                    <declaration name="menubarX" type="int" line="619"/>
                    <declaration name="menubarY" type="int" line="620"/>
                    <scope line="621"/>
                    <scope line="625"/>
                    <scope line="628"/>
                    <scope line="631"/>
                </scope>
            </method>
            <method name="setBoundsPrivate" type="void" line="637">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
            </method>
            <method name="getBoundsPrivate" type="Rectangle" line="641"/>
        </class>
    </source>