<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt.datatransfer.Transferable"/>
        <import package="java.util.SortedMap"/>
        <import package="java.io.IOException"/>
        <import package="java.security.AccessController"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Map"/>
        <import package="sun.awt.UNIXToolkit"/>
        <import package="sun.awt.datatransfer.DataTransferer"/>
        <import package="sun.awt.datatransfer.SunClipboard"/>
        <import package="sun.awt.datatransfer.ClipboardTransferable"/>
        <import package="sun.security.action.GetIntegerAction"/>
        <class name="XClipboard" line="40">
            <extends class="SunClipboard"/>
            <comment line="48">
                Time of calling XConvertSelection().                
            </comment>
            <comment line="50">
                The flag used not to call XConvertSelection() if the previous SelectionNotify                
            </comment>
            <comment line="51">
                has not been processed by checkChange().                
            </comment>
            <comment line="53">
                The property in which the owner should place requested targets                
            </comment>
            <comment line="54">
                when tracking changes of available data flavors (practically targets).                
            </comment>
            <comment line="74">
                NOTE: This method may be called by privileged threads.
                       DO NOT INVOKE CLIENT CODE ON THIS THREAD!                
            </comment>
            <comment line="110">
                                
            </comment>
            <comment line="214">
                checkChange() will be called on SelectionNotify                
            </comment>
            <comment line="235">
                Tracks changes of available formats.
                 NOTE: This method may be called by privileged threads.
                       DO NOT INVOKE CLIENT CODE ON THIS THREAD!                
            </comment>
            <implements interface="OwnershipListener"/>
            <javadoc line="40">
                A class which interfaces with the X11 selection service in order to support
                  data transfer via Clipboard operations.                
            </javadoc>
            <declaration name="selection" type="XSelection" line="46"/>
            <declaration name="convertSelectionTime" type="long" line="48"/>
            <declaration name="isSelectionNotifyProcessed" type="boolean" line="51"/>
            <declaration name="targetsPropertyAtom" type="XAtom" line="54"/>
            <declaration name="classLock" type="Object" line="56"/>
            <declaration name="defaultPollInterval" type="int" line="58"/>
            <declaration name="pollInterval" type="int" line="60"/>
            <declaration name="targetsAtom2Clipboard" type="Map&lt;Long,XClipboard&gt;" line="62"/>
            <javadoc line="64">
                Creates a system clipboard object.                
            </javadoc>
            <method name="XClipboard" type="constructor" line="67">
                <params>
                    <param name="name" type="String"/>
                    <param name="selectionName" type="String"/>
                </params>
            </method>
            <method name="ownershipChanged" type="void" line="77">
                <params>
                    <param name="isOwner" type="boolean"/>
                </params>
                <scope line="78"/>
                <scope line="80"/>
            </method>
            <method name="setContentsNative" type="void" line="85">
                <params>
                    <param name="contents" type="Transferable"/>
                </params>
                <declaration name="formatMap" type="SortedMap" line="86"/>
                <declaration name="formats" type="long[]" line="88"/>
                <scope line="91"/>
            </method>
            <method name="getID" type="long" line="97"/>
            <method name="getContents" type="Transferable" line="102">
                <params>
                    <param name="requestor" type="Object"/>
                </params>
                <scope line="103"/>
            </method>
            <method name="clearNativeContext" type="void" line="110"/>
            <method name="getClipboardFormats" type="long[]" line="115"/>
            <method name="getClipboardData" type="byte[]" line="119">
                <params>
                    <param name="format" type="long"/>
                </params>
            </method>
            <method name="checkChangeHere" type="void" line="123">
                <params>
                    <param name="contents" type="Transferable"/>
                </params>
                <scope line="124"/>
            </method>
            <method name="getPollInterval" type="int" line="130">
                <scope line="131">
                    <scope line="132">
                        <scope line="136"/>
                    </scope>
                </scope>
            </method>
            <method name="getTargetsPropertyAtom" type="XAtom" line="144">
                <scope line="145"/>
            </method>
            <method name="registerClipboardViewerChecked" type="void" line="152">
                <comment line="153">
                    for XConvertSelection() to be called for the first time in getTargetsDelayed()                    
                </comment>
                <declaration name="mustSchedule" type="boolean" line="156"/>
                <scope line="157">
                    <scope line="158"/>
                    <scope line="163"/>
                </scope>
                <scope line="168"/>
            </method>
            <class name="CheckChangeTimerTask" line="173">
                <implements interface="Runnable"/>
                <method name="run" type="void" line="174">
                    <scope line="175"/>
                    <scope line="178">
                        <scope line="179"/>
                    </scope>
                </method>
            </class>
            <class name="SelectionNotifyHandler" line="186">
                <implements interface="XEventDispatcher"/>
                <method name="dispatchEvent" type="void" line="187">
                    <params>
                        <param name="ev" type="XEvent"/>
                    </params>
                    <scope line="188">
                        <declaration name="xse" type="XSelectionEvent" line="189"/>
                        <declaration name="clipboard" type="XClipboard" line="190"/>
                        <scope line="191">
                            <scope line="192"/>
                            <declaration name="propertyAtom" type="long" line="196"/>
                        </scope>
                        <scope line="199"/>
                    </scope>
                </method>
            </class>
            <method name="unregisterClipboardViewerChecked" type="void" line="206">
                <scope line="208"/>
            </method>
            <method name="getTargetsDelayed" type="void" line="214">
                <scope line="216">
                    <declaration name="curTime" type="long" line="217"/>
                    <scope line="219"/>
                </scope>
                <scope line="229"/>
            </method>
            <method name="checkChange" type="void" line="239">
                <params>
                    <param name="xse" type="XSelectionEvent"/>
                </params>
                <comment line="242">
                    wrong atom                    
                </comment>
                <comment line="250">
                    unknown selection - do nothing                    
                </comment>
                <comment line="257">
                    selection is owner - do not need formats                    
                </comment>
                <comment line="264">
                    We treat None property atom as &quot;empty selection&quot;.                    
                </comment>
                <declaration name="propertyAtom" type="long" line="240"/>
                <scope line="241"/>
                <declaration name="selectionAtom" type="XAtom" line="246"/>
                <declaration name="changedSelection" type="XSelection" line="247"/>
                <scope line="249"/>
                <scope line="256"/>
                <declaration name="formats" type="long[]" line="261"/>
                <scope line="263"/>
                <scope line="266">
                    <declaration name="targetsGetter" type="WindowPropertyGetter" line="267"/>
                    <scope line="272"/>
                    <scope line="275"/>
                </scope>
            </method>
        </class>
    </source>