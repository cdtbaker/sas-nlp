<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt.datatransfer.Transferable"/>
        <import package="java.util.SortedMap"/>
        <import package="java.io.IOException"/>
        <import package="java.security.AccessController"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Map"/>
        <import package="sun.awt.UNIXToolkit"/>
        <import package="sun.awt.datatransfer.DataTransferer"/>
        <import package="sun.awt.datatransfer.SunClipboard"/>
        <import package="sun.awt.datatransfer.ClipboardTransferable"/>
        <import package="sun.security.action.GetIntegerAction"/>
        <class name="XClipboard" line="13">
            <extends class="SunClipboard"/>
            <implements interface="OwnershipListener"/>
            <javadoc line="13">
                A class which interfaces with the X11 selection service in order to support
                  data transfer via Clipboard operations.                
            </javadoc>
            <declaration name="selection" type="XSelection" line="18"/>
            <declaration name="convertSelectionTime" type="long" line="19"/>
            <declaration name="isSelectionNotifyProcessed" type="boolean" line="20"/>
            <declaration name="targetsPropertyAtom" type="XAtom" line="21"/>
            <declaration name="classLock" type="Object" line="22"/>
            <declaration name="defaultPollInterval" type="int" line="23"/>
            <declaration name="pollInterval" type="int" line="24"/>
            <declaration name="targetsAtom2Clipboard" type="Map&lt;Long,XClipboard&gt;" line="25"/>
            <javadoc line="26">
                Creates a system clipboard object.                
            </javadoc>
            <method name="XClipboard" type="constructor" line="29">
                <params>
                    <param name="name" type="String"/>
                    <param name="selectionName" type="String"/>
                </params>
            </method>
            <method name="ownershipChanged" type="void" line="34">
                <params>
                    <param name="isOwner" type="boolean"/>
                </params>
                <scope line="35"/>
                <scope line="38"/>
            </method>
            <method name="setContentsNative" type="void" line="42">
                <params>
                    <param name="contents" type="Transferable"/>
                </params>
                <declaration name="formatMap" type="SortedMap" line="43"/>
                <declaration name="formats" type="long[]" line="44"/>
                <scope line="45"/>
            </method>
            <method name="getID" type="long" line="50"/>
            <method name="getContents" type="Transferable" line="53">
                <params>
                    <param name="requestor" type="Object"/>
                </params>
                <scope line="54"/>
            </method>
            <method name="clearNativeContext" type="void" line="59"/>
            <method name="getClipboardFormats" type="long[]" line="62"/>
            <method name="getClipboardData" type="byte[]" line="65">
                <params>
                    <param name="format" type="long"/>
                </params>
            </method>
            <method name="checkChangeHere" type="void" line="68">
                <params>
                    <param name="contents" type="Transferable"/>
                </params>
                <scope line="69"/>
            </method>
            <method name="getPollInterval" type="int" line="73">
                <scope line="74">
                    <scope line="75">
                        <scope line="77"/>
                    </scope>
                </scope>
            </method>
            <method name="getTargetsPropertyAtom" type="XAtom" line="84">
                <scope line="85"/>
            </method>
            <method name="registerClipboardViewerChecked" type="void" line="90">
                <declaration name="mustSchedule" type="boolean" line="92"/>
                <scope line="93">
                    <scope line="94"/>
                    <scope line="99"/>
                </scope>
                <scope line="103"/>
            </method>
            <class name="CheckChangeTimerTask" line="107">
                <implements interface="Runnable"/>
                <method name="run" type="void" line="108">
                    <scope line="109"/>
                    <scope line="112">
                        <scope line="113"/>
                    </scope>
                </method>
            </class>
            <class name="SelectionNotifyHandler" line="119">
                <implements interface="XEventDispatcher"/>
                <method name="dispatchEvent" type="void" line="120">
                    <params>
                        <param name="ev" type="XEvent"/>
                    </params>
                    <scope line="121">
                        <declaration name="xse" type="XSelectionEvent" line="122"/>
                        <declaration name="clipboard" type="XClipboard" line="123"/>
                        <scope line="124">
                            <scope line="125"/>
                            <declaration name="propertyAtom" type="long" line="129"/>
                        </scope>
                        <scope line="132"/>
                    </scope>
                </method>
            </class>
            <method name="unregisterClipboardViewerChecked" type="void" line="138">
                <scope line="140"/>
            </method>
            <method name="getTargetsDelayed" type="void" line="144">
                <scope line="146">
                    <declaration name="curTime" type="long" line="147"/>
                    <scope line="148"/>
                </scope>
                <scope line="154"/>
            </method>
            <method name="checkChange" type="void" line="158">
                <params>
                    <param name="xse" type="XSelectionEvent"/>
                </params>
                <declaration name="propertyAtom" type="long" line="159"/>
                <scope line="160"/>
                <declaration name="selectionAtom" type="XAtom" line="163"/>
                <declaration name="changedSelection" type="XSelection" line="164"/>
                <scope line="165"/>
                <scope line="169"/>
                <declaration name="formats" type="long[]" line="172"/>
                <scope line="173"/>
                <scope line="176">
                    <declaration name="targetsGetter" type="WindowPropertyGetter" line="177"/>
                    <scope line="178"/>
                    <scope line="182"/>
                </scope>
            </method>
        </class>
    </source>