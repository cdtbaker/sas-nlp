<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt"/>
        <import package="java.awt.peer"/>
        <import package="java.awt.event"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="javax.swing.plaf.basic.BasicGraphicsUtils"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <class name="XCheckboxPeer" line="37">
            <extends class="XComponentPeer"/>
            <comment line="46">
                The check mark is less common than a plain &quot;depressed&quot; button,                
            </comment>
            <comment line="47">
                so don&apos;t use the checkmark.                
            </comment>
            <comment line="48">
                The checkmark shape:                
            </comment>
            <comment line="269">
                Layout the checkboxradio button and text label                
            </comment>
            <comment line="339">
                You&apos;ll note this looks suspiciously like paintBorder                
            </comment>
            <comment line="429">
                TODO: copied directly from XButtonPeer.  Should probabaly be shared                
            </comment>
            <comment line="447">
                NOTE: This method is called by privileged threads.                
            </comment>
            <comment line="448">
                DO NOT INVOKE CLIENT CODE ON THIS THREAD!                
            </comment>
            <comment line="449">
                From MCheckboxPeer                
            </comment>
            <implements interface="CheckboxPeer"/>
            <declaration name="log" type="PlatformLogger" line="39"/>
            <declaration name="focusInsets" type="Insets" line="41"/>
            <declaration name="borderInsets" type="Insets" line="42"/>
            <declaration name="checkBoxInsetFromText" type="int" line="43"/>
            <declaration name="MASTER_SIZE" type="double" line="48"/>
            <declaration name="MASTER_CHECKMARK" type="Polygon" line="49"/>
            <declaration name="myCheckMark" type="Shape" line="54"/>
            <declaration name="focusColor" type="Color" line="56"/>
            <declaration name="pressed" type="boolean" line="58"/>
            <declaration name="armed" type="boolean" line="59"/>
            <declaration name="selected" type="boolean" line="60"/>
            <declaration name="textRect" type="Rectangle" line="62"/>
            <declaration name="focusRect" type="Rectangle" line="63"/>
            <declaration name="checkBoxSize" type="int" line="64"/>
            <declaration name="cbX" type="int" line="65"/>
            <declaration name="cbY" type="int" line="66"/>
            <declaration name="label" type="String" line="68"/>
            <declaration name="checkBoxGroup" type="CheckboxGroup" line="69"/>
            <method name="XCheckboxPeer" type="constructor" line="71">
                <params>
                    <param name="target" type="Checkbox"/>
                </params>
                <scope line="77"/>
            </method>
            <method name="preInit" type="void" line="84">
                <params>
                    <param name="params" type="XCreateWindowParams"/>
                </params>
                <comment line="85">
                    Put this here so it is executed before layout() is called from                    
                </comment>
                <comment line="86">
                    setFont() in XComponent.postInit()                    
                </comment>
            </method>
            <method name="isFocusable" type="boolean" line="92"/>
            <method name="focusGained" type="void" line="94">
                <params>
                    <param name="e" type="FocusEvent"/>
                </params>
                <comment line="95">
                    TODO: only need to paint the focus bit                    
                </comment>
            </method>
            <method name="focusLost" type="void" line="100">
                <params>
                    <param name="e" type="FocusEvent"/>
                </params>
                <comment line="101">
                    TODO: only need to paint the focus bit?                    
                </comment>
            </method>
            <method name="handleJavaKeyEvent" type="void" line="107">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
                <declaration name="i" type="int" line="108"/>
            </method>
            <method name="keyTyped" type="void" line="122">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
            </method>
            <method name="keyPressed" type="void" line="124">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
                <comment line="127">
                    pressed=true;                    
                </comment>
                <comment line="128">
                    armed=true;                    
                </comment>
                <comment line="129">
                    selected=!selected;                    
                </comment>
                <comment line="131">
                    repaint();  // Gets the repaint from action()                    
                </comment>
                <scope line="126"/>
            </method>
            <method name="keyReleased" type="void" line="136">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
            </method>
            <method name="setLabel" type="void" line="138">
                <params>
                    <param name="label" type="java.lang.String"/>
                </params>
                <scope line="139"/>
                <scope line="141"/>
            </method>
            <method name="handleJavaMouseEvent" type="void" line="148">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
                <declaration name="i" type="int" line="150"/>
            </method>
            <method name="mousePressed" type="void" line="170">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
                <comment line="180">
                    Disabled buttons ignore all input...                    
                </comment>
                <scope line="171">
                    <declaration name="cb" type="Checkbox" line="172"/>
                    <scope line="174">
                        <scope line="175"/>
                        <scope line="179"/>
                        <scope line="183"/>
                    </scope>
                </scope>
            </method>
            <method name="mouseReleased" type="void" line="192">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
                <comment line="199">
                    TODO: Multiclick Threshold? - see BasicButtonListener.java                    
                </comment>
                <comment line="201">
                    selected = !selected;                    
                </comment>
                <comment line="202">
                    send action event                    
                </comment>
                <comment line="203">
                    action(e.getWhen(),e.getModifiers());                    
                </comment>
                <comment line="209">
                    Also gets repaint in action()                    
                </comment>
                <scope line="193"/>
                <declaration name="sendEvent" type="boolean" line="197"/>
                <scope line="198">
                    <scope line="200"/>
                    <scope line="208"/>
                    <scope line="211"/>
                </scope>
            </method>
            <method name="mouseEntered" type="void" line="217">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
                <scope line="218"/>
                <scope line="222"/>
            </method>
            <method name="mouseExited" type="void" line="228">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
                <scope line="229"/>
                <scope line="233"/>
            </method>
            <method name="mouseClicked" type="void" line="239">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <method name="getMinimumSize" type="Dimension" line="241">
                <comment line="242">
                    Spacing (number of pixels between check mark and label text) is
                     currently set to 0, but in case it ever changes we have to add
                     it. 8 is a heuristic number. Indicator size depends on font
                     height, so we don&apos;t need to include it in checkbox&apos;s height
                     calculation.                    
                </comment>
                <declaration name="fm" type="FontMetrics" line="249"/>
                <declaration name="wdth" type="int" line="251"/>
                <declaration name="hght" type="int" line="252"/>
            </method>
            <method name="getCheckboxSize" type="int" line="257">
                <params>
                    <param name="fm" type="FontMetrics"/>
                </params>
                <comment line="258">
                    the motif way of sizing is a bit inscutible, but this                    
                </comment>
                <comment line="259">
                    is a fair approximation                    
                </comment>
            </method>
            <method name="setBackground" type="void" line="263">
                <params>
                    <param name="c" type="Color"/>
                </params>
            </method>
            <method name="layout" type="void" line="271">
                <comment line="279">
                    Note - Motif appears to use an left inset that is slightly                    
                </comment>
                <comment line="280">
                    scaled to the checkbox/font size.                    
                </comment>
                <comment line="284">
                    FIXME: will need to account for alignment?                    
                </comment>
                <comment line="285">
                    FIXME: call layout() on alignment changes                    
                </comment>
                <comment line="286">
                    textRect.width = fm.stringWidth(text);                    
                </comment>
                <declaration name="size" type="Dimension" line="272"/>
                <declaration name="f" type="Font" line="273"/>
                <declaration name="fm" type="FontMetrics" line="274"/>
                <declaration name="text" type="String" line="275"/>
                <declaration name="minTextX" type="int" line="283"/>
                <declaration name="fsize" type="double" line="298"/>
            </method>
            <method name="paint" type="void" line="303">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <comment line="305">
                    layout();                    
                </comment>
                <comment line="310">
                    erase the existing button                    
                </comment>
                <comment line="326">
                    Paint the checkbox or radio button                    
                </comment>
                <scope line="304">
                    <declaration name="size" type="Dimension" line="306"/>
                    <declaration name="f" type="Font" line="307"/>
                    <scope line="313"/>
                    <scope line="318"/>
                    <scope line="327"/>
                    <scope line="330"/>
                </scope>
            </method>
            <method name="paintCheckbox" type="void" line="340">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="347">
                    Fix for 5045936. While printing, g is an instance of                    
                </comment>
                <comment line="348">
                    sun.print.ProxyPrintGraphics which extends Graphics. So                    
                </comment>
                <comment line="349">
                    we use a separate buffered image and its graphics is                    
                </comment>
                <comment line="350">
                    always Graphics2D instance                    
                </comment>
                <comment line="363">
                    then paint the check                    
                </comment>
                <comment line="368">
                    Paint the check                    
                </comment>
                <comment line="370">
                    FIXME: is this the right color?                    
                </comment>
                <declaration name="useBufferedImage" type="boolean" line="341"/>
                <declaration name="buffer" type="BufferedImage" line="342"/>
                <declaration name="g2" type="Graphics2D" line="343"/>
                <declaration name="rx" type="int" line="344"/>
                <declaration name="ry" type="int" line="345"/>
                <scope line="346"/>
                <scope line="357"/>
                <scope line="360">
                    <scope line="367">
                        <declaration name="af" type="AffineTransform" line="373"/>
                    </scope>
                </scope>
                <scope line="378">
                    <scope line="379"/>
                </scope>
                <scope line="383"/>
            </method>
            <method name="setFont" type="void" line="387">
                <params>
                    <param name="f" type="Font"/>
                </params>
            </method>
            <method name="paintRadioButton" type="void" line="392">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <scope line="400"/>
            </method>
            <method name="paintText" type="void" line="406">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="textRect" type="Rectangle"/>
                    <param name="text" type="String"/>
                </params>
                <comment line="412">
                                        
                </comment>
                <comment line="417">
                                        
                </comment>
                <declaration name="fm" type="FontMetrics" line="407"/>
                <declaration name="mnemonicIndex" type="int" line="409"/>
                <scope line="411"/>
                <scope line="416"/>
            </method>
            <method name="paintFocus" type="void" line="429">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="setState" type="void" line="434">
                <params>
                    <param name="state" type="boolean"/>
                </params>
                <scope line="435"/>
            </method>
            <method name="setCheckboxGroup" type="void" line="440">
                <params>
                    <param name="g" type="CheckboxGroup"/>
                </params>
                <comment line="441">
                    If changed from grouped/ungrouped, need to repaint()                    
                </comment>
            </method>
            <method name="action" type="void" line="449">
                <params>
                    <param name="state" type="boolean"/>
                </params>
                <comment line="455">
                    Bugid 4039594. If this is the current Checkbox in                    
                </comment>
                <comment line="456">
                    a CheckboxGroup, then return to prevent deselection.                    
                </comment>
                <comment line="457">
                    Otherwise, it&apos;s logical state will be turned off,                    
                </comment>
                <comment line="458">
                    but it will appear on.                    
                </comment>
                <comment line="461">
                    inUpCall = false;                    
                </comment>
                <comment line="465">
                    All clear - set the new state                    
                </comment>
                <declaration name="cb" type="Checkbox" line="450"/>
                <declaration name="newState" type="boolean" line="451"/>
                <anonymous_class line="452">
                    <method name="run" type="void" line="453">
                        <comment line="455">
                            Bugid 4039594. If this is the current Checkbox in                            
                        </comment>
                        <comment line="456">
                            a CheckboxGroup, then return to prevent deselection.                            
                        </comment>
                        <comment line="457">
                            Otherwise, it&apos;s logical state will be turned off,                            
                        </comment>
                        <comment line="458">
                            but it will appear on.                            
                        </comment>
                        <comment line="461">
                            inUpCall = false;                            
                        </comment>
                        <comment line="465">
                            All clear - set the new state                            
                        </comment>
                        <declaration name="cbg" type="CheckboxGroup" line="454"/>
                        <scope line="460"/>
                    </method>
                </anonymous_class>
            </method>
            <method name="notifyStateChanged" type="void" line="472">
                <params>
                    <param name="state" type="boolean"/>
                </params>
                <declaration name="cb" type="Checkbox" line="473"/>
                <declaration name="e" type="ItemEvent" line="474"/>
            </method>
        </class>
    </source>