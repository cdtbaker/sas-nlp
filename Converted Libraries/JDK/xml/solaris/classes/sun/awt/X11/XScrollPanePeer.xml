<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.awt.peer"/>
        <import package="java.lang.reflect"/>
        <import package="sun.awt.SunToolkit"/>
        <class name="XScrollPanePeer" line="34">
            <extends class="XComponentPeer"/>
            <comment line="584">
                Print the native component by rendering the Motif look ourselves.
                 ToDo(aim): needs to query native motif for more accurate size and
                 color information.                
            </comment>
            <implements interface="ScrollPanePeer"/>
            <implements interface="XScrollbarClient"/>
            <declaration name="MARGIN" type="int" line="36"/>
            <declaration name="SCROLLBAR" type="int" line="37"/>
            <declaration name="SPACE" type="int" line="38"/>
            <declaration name="SCROLLBAR_INSET" type="int" line="39"/>
            <declaration name="VERTICAL" type="int" line="41"/>
            <declaration name="HORIZONTAL" type="int" line="42"/>
            <declaration name="m_setValue" type="Method" line="44"/>
            <scope line="45"/>
            <declaration name="vsb" type="XVerticalScrollbar" line="50"/>
            <declaration name="hsb" type="XHorizontalScrollbar" line="51"/>
            <declaration name="clip" type="XWindow" line="52"/>
            <declaration name="active" type="int" line="54"/>
            <declaration name="hsbSpace" type="int" line="55"/>
            <declaration name="vsbSpace" type="int" line="56"/>
            <class name="XScrollPaneContentWindow" line="58">
                <extends class="XWindow"/>
                <method name="XScrollPaneContentWindow" type="constructor" line="59">
                    <params>
                        <param name="target" type="ScrollPane"/>
                        <param name="parentWindow" type="long"/>
                    </params>
                </method>
                <method name="getWMName" type="String" line="62"/>
            </class>
            <method name="XScrollPanePeer" type="constructor" line="67">
                <params>
                    <param name="target" type="ScrollPane"/>
                </params>
                <comment line="70">
                    Create the clip window. The field &quot;clip&quot; must be null when                    
                </comment>
                <comment line="71">
                    we call winCreate, or the parent of clip will be set to itself!                    
                </comment>
                <declaration name="c" type="XWindow" line="75"/>
                <scope line="82"/>
                <scope line="84"/>
                <declaration name="unitIncrement" type="int" line="88"/>
                <declaration name="vAdjustable" type="Adjustable" line="89"/>
                <scope line="90"/>
                <declaration name="h" type="int" line="93"/>
                <declaration name="hAdjustable" type="Adjustable" line="98"/>
                <scope line="99"/>
                <declaration name="w" type="int" line="102"/>
            </method>
            <method name="getContentWindow" type="long" line="113"/>
            <method name="setBounds" type="void" line="117">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="op" type="int"/>
                </params>
            </method>
            <method name="getInsets" type="Insets" line="126"/>
            <method name="getHScrollbarHeight" type="int" line="130"/>
            <method name="getVScrollbarWidth" type="int" line="134"/>
            <method name="childResized" type="void" line="138">
                <params>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <scope line="139"/>
            </method>
            <method name="getChildSize" type="Dimension" line="145">
                <declaration name="sp" type="ScrollPane" line="146"/>
                <scope line="147">
                    <declaration name="c" type="Component" line="148"/>
                </scope>
                <scope line="150"/>
            </method>
            <method name="setScrollbarSpace" type="boolean" line="155">
                <comment line="187">
                    Adjustable vadj = sp.getVAdjustable();                    
                </comment>
                <comment line="188">
                    vadj.setVisibleAmount(vsb.vis);                    
                </comment>
                <comment line="189">
                    vadj.setMaximum(vsb.max);                    
                </comment>
                <comment line="190">
                    vadj.setBlockIncrement(vsb.page);                    
                </comment>
                <comment line="198">
                    Adjustable hadj = sp.getHAdjustable();                    
                </comment>
                <comment line="199">
                    hadj.setVisibleAmount(hsb.vis);                    
                </comment>
                <comment line="200">
                    hadj.setMaximum(hsb.max);                    
                </comment>
                <comment line="201">
                    hadj.setBlockIncrement(hsb.page);                    
                </comment>
                <comment line="204">
                    Check to see if we hid either of the scrollbars but left                    
                </comment>
                <comment line="205">
                    ourselves scrolled off of the top and/or right of the pane.                    
                </comment>
                <comment line="206">
                    If we did, we need to scroll to the top and/or right of of                    
                </comment>
                <comment line="207">
                    the pane to make it visible.                    
                </comment>
                <comment line="208">
                                        
                </comment>
                <comment line="209">
                    Reminder: see if there is a better place to put this code.                    
                </comment>
                <comment line="212">
                    Get the point at which the ScrollPane is currently located                    
                </comment>
                <comment line="213">
                    if number of components &gt; 0                    
                </comment>
                <declaration name="sp" type="ScrollPane" line="156"/>
                <declaration name="changed" type="boolean" line="157"/>
                <declaration name="sbDisplayPolicy" type="int" line="158"/>
                <scope line="160"/>
                <declaration name="cSize" type="Dimension" line="163"/>
                <scope line="165">
                    <declaration name="oldHsbSpace" type="int" line="166"/>
                    <declaration name="oldVsbSpace" type="int" line="167"/>
                    <scope line="171"/>
                    <scope line="174"/>
                    <scope line="177"/>
                </scope>
                <scope line="181">
                    <declaration name="vis" type="int" line="182"/>
                    <declaration name="max" type="int" line="183"/>
                </scope>
                <scope line="192">
                    <declaration name="vis" type="int" line="193"/>
                    <declaration name="max" type="int" line="194"/>
                </scope>
                <declaration name="must_scroll" type="boolean" line="210"/>
                <declaration name="p" type="Point" line="214"/>
                <scope line="216">
                    <scope line="220"/>
                    <scope line="225"/>
                </scope>
            </method>
            <method name="setViewportSize" type="void" line="237"/>
            <method name="setUnitIncrement" type="void" line="243">
                <params>
                    <param name="adj" type="Adjustable"/>
                    <param name="u" type="int"/>
                </params>
                <comment line="247">
                    HORIZONTAL                    
                </comment>
                <scope line="244"/>
                <scope line="246"/>
            </method>
            <method name="setValue" type="void" line="252">
                <params>
                    <param name="adj" type="Adjustable"/>
                    <param name="v" type="int"/>
                </params>
                <comment line="256">
                    HORIZONTAL                    
                </comment>
                <scope line="253"/>
                <scope line="255"/>
            </method>
            <method name="setScrollPosition" type="void" line="261">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
            </method>
            <method name="scroll" type="void" line="265">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="flag" type="int"/>
                </params>
            </method>
            <javadoc line="269">
                Scroll the contents to position x, y                
            </javadoc>
            <method name="scroll" type="void" line="272">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="flag" type="int"/>
                    <param name="type" type="int"/>
                </params>
                <declaration name="sp" type="ScrollPane" line="274"/>
                <declaration name="c" type="Component" line="275"/>
                <scope line="276"/>
                <declaration name="sx" type="int" line="279"/>
                <declaration name="colors" type="Color" line="280"/>
                <scope line="282"/>
                <scope line="285">
                    <declaration name="p" type="Point" line="286"/>
                    <scope line="290">
                        <declaration name="hadj" type="ScrollPaneAdjustable" line="292"/>
                        <declaration name="g" type="Graphics" line="295"/>
                        <scope line="296"/>
                        <scope line="298"/>
                    </scope>
                    <scope line="302">
                        <declaration name="vadj" type="ScrollPaneAdjustable" line="304"/>
                        <declaration name="g" type="Graphics" line="307"/>
                        <scope line="308"/>
                        <scope line="310"/>
                    </scope>
                </scope>
            </method>
            <method name="setAdjustableValue" type="void" line="318">
                <params>
                    <param name="adj" type="ScrollPaneAdjustable"/>
                    <param name="value" type="int"/>
                    <param name="type" type="int"/>
                </params>
                <scope line="319"/>
                <scope line="321"/>
                <scope line="323"/>
                <scope line="325"/>
            </method>
            <method name="paint" type="void" line="332">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
            </method>
            <method name="paintScrollBars" type="void" line="337">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="colors" type="Color[]"/>
                </params>
                <comment line="340">
                    paint the whole scrollbar                    
                </comment>
                <comment line="345">
                    paint the whole scrollbar                    
                </comment>
                <scope line="338"/>
                <scope line="343"/>
            </method>
            <method name="repaintScrollBars" type="void" line="349">
                <declaration name="g" type="Graphics" line="350"/>
                <declaration name="colors" type="Color" line="351"/>
                <scope line="352"/>
            </method>
            <method name="repaintScrollbarRequest" type="void" line="358">
                <params>
                    <param name="sb" type="XScrollbar"/>
                </params>
                <declaration name="g" type="Graphics" line="359"/>
                <declaration name="colors" type="Color" line="360"/>
                <scope line="361">
                    <scope line="362"/>
                    <scope line="365"/>
                </scope>
            </method>
            <javadoc line="371">
                Paint the scrollpane.                
            </javadoc>
            <method name="paintComponent" type="void" line="374">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <comment line="383">
                    paint rectangular region between scrollbars                    
                </comment>
                <declaration name="colors" type="Color" line="376"/>
                <declaration name="h" type="int" line="378"/>
                <declaration name="w" type="int" line="379"/>
                <scope line="386"/>
            </method>
            <method name="handleEvent" type="void" line="393">
                <params>
                    <param name="e" type="java.awt.AWTEvent"/>
                </params>
                <declaration name="id" type="int" line="396"/>
            </method>
            <javadoc line="406">
                Paint the horizontal scrollbar to the screen                
                <param>
                    g the graphics context to draw into                    
                </param>
                <param>
                    colors the colors used to draw the scrollbar                    
                </param>
                <param>
                    paintAll paint the whole scrollbar if true, just the thumb if false                    
                </param>
            </javadoc>
            <method name="paintHorScrollbar" type="void" line="413">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="colors" type="Color"/>
                    <param name="paintAll" type="boolean"/>
                </params>
                <comment line="420">
                    SCROLLBAR is the height of scrollbar area                    
                </comment>
                <comment line="421">
                    but the actual scrollbar is SCROLLBAR-SPACE high;                    
                </comment>
                <comment line="422">
                    the rest must be filled with background color                    
                </comment>
                <scope line="414"/>
                <declaration name="ng" type="Graphics" line="417"/>
                <declaration name="w" type="int" line="423"/>
                <scope line="428"/>
                <scope line="432"/>
            </method>
            <javadoc line="442">
                Paint the vertical scrollbar to the screen                
                <param>
                    g the graphics context to draw into                    
                </param>
                <param>
                    colors the colors used to draw the scrollbar                    
                </param>
                <param>
                    paintAll paint the whole scrollbar if true, just the thumb if false                    
                </param>
            </javadoc>
            <method name="paintVerScrollbar" type="void" line="449">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="colors" type="Color"/>
                    <param name="paintAll" type="boolean"/>
                </params>
                <comment line="456">
                    SCROLLBAR is the width of scrollbar area                    
                </comment>
                <comment line="457">
                    but the actual scrollbar is SCROLLBAR-SPACE wide;                    
                </comment>
                <comment line="458">
                    the rest must be filled with background color                    
                </comment>
                <scope line="450"/>
                <declaration name="ng" type="Graphics" line="453"/>
                <declaration name="h" type="int" line="459"/>
                <scope line="464"/>
                <scope line="468"/>
            </method>
            <javadoc line="473">
                @see java.awt.event.MouseEventMouseEvent.MOUSE_CLICKED
                  MouseEvent.MOUSE_PRESSED
                  MouseEvent.MOUSE_RELEASED
                  MouseEvent.MOUSE_MOVED
                  MouseEvent.MOUSE_ENTERED
                  MouseEvent.MOUSE_EXITED
                  MouseEvent.MOUSE_DRAGGED                
            </javadoc>
            <method name="handleJavaMouseEvent" type="void" line="484">
                <params>
                    <param name="mouseEvent" type="MouseEvent"/>
                </params>
                <comment line="492">
                    super.handleMouseEvent(mouseEvent);                    
                </comment>
                <comment line="511">
                    On mouse up, pass the event through to the scrollbar to stop                    
                </comment>
                <comment line="512">
                    scrolling. The x &amp; y passed do not matter.                    
                </comment>
                <comment line="514">
                    winReleaseCursorFocus();                    
                </comment>
                <declaration name="modifiers" type="int" line="486"/>
                <declaration name="id" type="int" line="487"/>
                <declaration name="x" type="int" line="488"/>
                <declaration name="y" type="int" line="489"/>
                <scope line="494"/>
                <scope line="500">
                    <declaration name="h" type="int" line="502"/>
                </scope>
                <scope line="504">
                    <declaration name="w" type="int" line="506"/>
                </scope>
                <scope line="515"/>
                <scope line="517"/>
                <scope line="524">
                    <declaration name="h" type="int" line="525"/>
                </scope>
                <scope line="527">
                    <declaration name="w" type="int" line="528"/>
                </scope>
            </method>
            <javadoc line="535">
                return value from the scrollbar                
            </javadoc>
            <method name="notifyValue" type="void" line="538">
                <params>
                    <param name="obj" type="XScrollbar"/>
                    <param name="type" type="int"/>
                    <param name="v" type="int"/>
                    <param name="isAdjusting" type="boolean"/>
                </params>
                <scope line="539"/>
                <scope line="541"/>
            </method>
            <javadoc line="546">
                return true if the x and y position is in the verticalscrollbar                
            </javadoc>
            <method name="inVerticalScrollbar" type="boolean" line="549">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <scope line="550"/>
                <declaration name="h" type="int" line="553"/>
            </method>
            <javadoc line="557">
                return true if the x and y position is in the horizontal scrollbar                
            </javadoc>
            <method name="inHorizontalScrollbar" type="boolean" line="560">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <scope line="561"/>
                <declaration name="w" type="int" line="564"/>
            </method>
            <method name="getScrollChild" type="Component" line="568">
                <comment line="574">
                    do nothing.  in this case we return null                    
                </comment>
                <declaration name="sp" type="ScrollPane" line="569"/>
                <declaration name="child" type="Component" line="570"/>
                <scope line="571"/>
                <scope line="573"/>
            </method>
            <declaration name="vval" type="int" line="579"/>
            <declaration name="hval" type="int" line="580"/>
            <declaration name="vmax" type="int" line="581"/>
            <declaration name="hmax" type="int" line="582"/>
            <method name="print" type="void" line="588">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <comment line="638">
                    need to be careful to add the margins back in here because                    
                </comment>
                <comment line="639">
                    we&apos;re drawing the margin border, after all!                    
                </comment>
                <declaration name="sp" type="ScrollPane" line="589"/>
                <declaration name="d" type="Dimension" line="590"/>
                <declaration name="bg" type="Color" line="591"/>
                <declaration name="fg" type="Color" line="592"/>
                <declaration name="p" type="Point" line="593"/>
                <declaration name="c" type="Component" line="594"/>
                <declaration name="cd" type="Dimension" line="595"/>
                <scope line="596"/>
                <scope line="598"/>
                <declaration name="sbDisplay" type="int" line="601"/>
                <declaration name="vvis" type="int" line="602"/>
                <scope line="615"/>
                <scope line="618"/>
                <scope line="625"/>
                <scope line="631"/>
                <declaration name="w" type="int" line="640"/>
                <declaration name="h" type="int" line="641"/>
                <scope line="646">
                    <declaration name="sbw" type="int" line="647"/>
                    <declaration name="ng" type="Graphics" line="649"/>
                    <scope line="650"/>
                    <scope line="654"/>
                </scope>
                <scope line="658">
                    <declaration name="sbh" type="int" line="659"/>
                    <declaration name="ng" type="Graphics" line="661"/>
                    <scope line="662"/>
                    <scope line="666"/>
                </scope>
            </method>
        </class>
    </source>