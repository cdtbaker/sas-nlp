<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <class name="XWINProtocol" line="32">
            <extends class="XProtocol"/>
            <comment line="36">
                                
            </comment>
            <comment line="182">
                                
            </comment>
            <comment line="183">
                                
            </comment>
            <comment line="184">
                                
            </comment>
            <comment line="185">
                                
            </comment>
            <comment line="186">
                                
            </comment>
            <comment line="187">
                                
            </comment>
            <comment line="188">
                                
            </comment>
            <comment line="189">
                                
            </comment>
            <implements interface="XStateProtocol"/>
            <implements interface="XLayerProtocol"/>
            <declaration name="log" type="PlatformLogger" line="33"/>
            <declaration name="XA_WIN_SUPPORTING_WM_CHECK" type="XAtom" line="36"/>
            <declaration name="XA_WIN_PROTOCOLS" type="XAtom" line="37"/>
            <declaration name="XA_WIN_STATE" type="XAtom" line="38"/>
            <method name="supportsState" type="boolean" line="40">
                <params>
                    <param name="state" type="int"/>
                </params>
                <comment line="41">
                    TODO - check for Frame constants                    
                </comment>
            </method>
            <method name="setState" type="void" line="44">
                <params>
                    <param name="window" type="XWindowPeer"/>
                    <param name="state" type="int"/>
                </params>
                <comment line="46">
                    Request state transition from a Gnome WM (_WIN protocol) by sending
                     _WIN_STATE ClientMessage to root window.                    
                </comment>
                <comment line="81">
                    Specify initial state for a Gnome WM (_WIN protocol) by setting
                     WIN_STATE property on the window to the desired state before
                     mapping it.                    
                </comment>
                <comment line="86">
                                        
                </comment>
                <comment line="90">
                    In their stupid quest of reinventing every wheel, Gnome WM spec
                     have its own &quot;minimized&quot; hint (instead of using initial state
                     and WM_STATE hints).  This is bogus, but, apparently, some WMs
                     pay attention.                    
                </comment>
                <scope line="45">
                    <declaration name="win_state" type="long" line="50"/>
                    <scope line="52"/>
                    <scope line="55"/>
                    <declaration name="req" type="XClientMessageEvent" line="59"/>
                    <scope line="67"/>
                    <scope line="76"/>
                </scope>
                <scope line="80">
                    <declaration name="win_state" type="long" line="87"/>
                    <declaration name="old_win_state" type="long" line="88"/>
                    <scope line="96"/>
                    <scope line="98"/>
                    <scope line="102"/>
                    <scope line="104"/>
                    <scope line="108"/>
                    <scope line="110"/>
                    <scope line="113"/>
                </scope>
            </method>
            <method name="getState" type="int" line="120">
                <params>
                    <param name="window" type="XWindowPeer"/>
                </params>
                <declaration name="win_state" type="long" line="121"/>
                <declaration name="java_state" type="int" line="122"/>
                <scope line="123"/>
                <scope line="126"/>
            </method>
            <method name="isStateChange" type="boolean" line="132">
                <params>
                    <param name="e" type="XPropertyEvent"/>
                </params>
            </method>
            <method name="unshadeKludge" type="void" line="136">
                <params>
                    <param name="window" type="XWindowPeer"/>
                </params>
                <declaration name="win_state" type="long" line="137"/>
                <scope line="138"/>
            </method>
            <method name="supportsLayer" type="boolean" line="145">
                <params>
                    <param name="layer" type="int"/>
                </params>
            </method>
            <method name="setLayer" type="void" line="149">
                <params>
                    <param name="window" type="XWindowPeer"/>
                    <param name="layer" type="int"/>
                </params>
                <comment line="166">
                                        
                </comment>
                <scope line="150">
                    <declaration name="req" type="XClientMessageEvent" line="151"/>
                    <scope line="161"/>
                    <scope line="169"/>
                </scope>
                <scope line="173"/>
            </method>
            <declaration name="XA_WIN_LAYER" type="XAtom" line="179"/>
            <declaration name="WIN_STATE_STICKY" type="int" line="182"/>
            <declaration name="WIN_STATE_MINIMIZED" type="int" line="183"/>
            <declaration name="WIN_STATE_MAXIMIZED_VERT" type="int" line="184"/>
            <declaration name="WIN_STATE_MAXIMIZED_HORIZ" type="int" line="185"/>
            <declaration name="WIN_STATE_HIDDEN" type="int" line="186"/>
            <declaration name="WIN_STATE_SHADED" type="int" line="187"/>
            <declaration name="WIN_LAYER_ONTOP" type="int" line="189"/>
            <declaration name="WIN_LAYER_NORMAL" type="int" line="190"/>
            <declaration name="WinWindow" type="long" line="192"/>
            <declaration name="supportChecked" type="boolean" line="193"/>
            <method name="detect" type="void" line="194">
                <scope line="195"/>
            </method>
            <method name="active" type="boolean" line="203"/>
            <method name="doStateProtocol" type="boolean" line="207">
                <declaration name="res" type="boolean" line="208"/>
            </method>
            <method name="doLayerProtocol" type="boolean" line="213">
                <declaration name="res" type="boolean" line="214"/>
            </method>
        </class>
    </source>