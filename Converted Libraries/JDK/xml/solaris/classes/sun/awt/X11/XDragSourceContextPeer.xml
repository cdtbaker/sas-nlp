<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt.Component"/>
        <import package="java.awt.Cursor"/>
        <import package="java.awt.Window"/>
        <import package="java.awt.datatransfer.Transferable"/>
        <import package="java.awt.dnd.DnDConstants"/>
        <import package="java.awt.dnd.DragGestureEvent"/>
        <import package="java.awt.dnd.InvalidDnDOperationException"/>
        <import package="java.util"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <import package="sun.awt.dnd.SunDragSourceContextPeer"/>
        <import package="sun.awt.dnd.SunDropTargetContextPeer"/>
        <import package="sun.awt.SunToolkit"/>
        <import package="sun.awt.AWTAccessor"/>
        <class name="XDragSourceContextPeer" line="15">
            <extends class="SunDragSourceContextPeer"/>
            <implements interface="XDragSourceProtocolListener"/>
            <javadoc line="15">
                The XDragSourceContextPeer class is the class responsible for handling
                  the interaction between the XDnD/Motif DnD subsystem and Java drag sources.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="logger" type="PlatformLogger" line="21"/>
            <declaration name="ROOT_EVENT_MASK" type="int" line="22"/>
            <declaration name="GRAB_EVENT_MASK" type="int" line="23"/>
            <declaration name="rootEventMask" type="long" line="24"/>
            <declaration name="dndInProgress" type="boolean" line="25"/>
            <declaration name="dragInProgress" type="boolean" line="26"/>
            <declaration name="dragRootWindow" type="long" line="27"/>
            <declaration name="dragProtocol" type="XDragSourceProtocol" line="28"/>
            <declaration name="targetAction" type="int" line="29"/>
            <declaration name="sourceActions" type="int" line="30"/>
            <declaration name="sourceAction" type="int" line="31"/>
            <declaration name="sourceFormats" type="long[]" line="32"/>
            <declaration name="targetRootSubwindow" type="long" line="33"/>
            <declaration name="xRoot" type="int" line="34"/>
            <declaration name="yRoot" type="int" line="35"/>
            <declaration name="eventState" type="int" line="36"/>
            <declaration name="proxyModeSourceWindow" type="long" line="37"/>
            <declaration name="theInstance" type="XDragSourceContextPeer" line="38"/>
            <method name="XDragSourceContextPeer" type="constructor" line="39">
                <params>
                    <param name="dge" type="DragGestureEvent"/>
                </params>
            </method>
            <method name="getXDragSourceProtocolListener" type="XDragSourceProtocolListener" line="42"/>
            <method name="createDragSourceContextPeer" type="XDragSourceContextPeer" line="45">
                <params>
                    <param name="dge" type="DragGestureEvent"/>
                </params>
            </method>
            <method name="startDrag" type="void" line="49">
                <params>
                    <param name="transferable" type="Transferable"/>
                    <param name="formats" type="long[]"/>
                    <param name="formatMap" type="Map"/>
                </params>
                <declaration name="component" type="Component" line="50"/>
                <declaration name="c" type="Component" line="51"/>
                <declaration name="wpeer" type="XWindowPeer" line="52"/>
                <scope line="54"/>
                <scope line="57"/>
                <declaration name="xcursor" type="long" line="60"/>
                <declaration name="rootWindow" type="long" line="61"/>
                <declaration name="dragWindow" type="long" line="62"/>
                <declaration name="timeStamp" type="long" line="63"/>
                <scope line="64">
                    <declaration name="cursor" type="Cursor" line="65"/>
                    <scope line="66"/>
                </scope>
                <scope line="71">
                    <scope line="72"/>
                    <scope line="75"/>
                    <scope line="78">
                        <declaration name="screen" type="long" line="79"/>
                    </scope>
                    <declaration name="dropActions" type="int" line="84"/>
                    <declaration name="dragProtocols" type="Iterator" line="85"/>
                    <scope line="86">
                        <declaration name="dragProtocol" type="XDragSourceProtocol" line="87"/>
                        <scope line="88"/>
                        <scope line="91"/>
                    </scope>
                    <scope line="95">
                        <declaration name="status" type="int" line="96"/>
                        <declaration name="wattr" type="XWindowAttributes" line="97"/>
                        <scope line="98">
                            <scope line="100"/>
                        </scope>
                        <scope line="106"/>
                        <scope line="111"/>
                        <scope line="117"/>
                    </scope>
                </scope>
                <scope line="129"/>
            </method>
            <method name="getProxyModeSourceWindow" type="long" line="135"/>
            <method name="setProxyModeSourceWindowImpl" type="void" line="138">
                <params>
                    <param name="window" type="long"/>
                </params>
            </method>
            <method name="setProxyModeSourceWindow" type="void" line="141">
                <params>
                    <param name="window" type="long"/>
                </params>
            </method>
            <javadoc line="144">
                set cursor                
            </javadoc>
            <method name="setCursor" type="void" line="147">
                <params>
                    <param name="c" type="Cursor"/>
                </params>
                <scope line="149"/>
                <scope line="152"/>
            </method>
            <method name="setNativeCursor" type="void" line="156">
                <params>
                    <param name="nativeCtxt" type="long"/>
                    <param name="c" type="Cursor"/>
                    <param name="cType" type="int"/>
                </params>
            </method>
            <method name="needsBogusExitBeforeDrop" type="boolean" line="167"/>
            <method name="throwGrabFailureException" type="void" line="170">
                <params>
                    <param name="msg" type="String"/>
                    <param name="grabStatus" type="int"/>
                </params>
                <declaration name="msgCause" type="String" line="171"/>
            </method>
            <javadoc line="191">
                The caller must own awtLock.                
            </javadoc>
            <method name="cleanup" type="void" line="194">
                <params>
                    <param name="time" type="long"/>
                </params>
                <scope line="195">
                    <scope line="196"/>
                    <scope line="199"/>
                </scope>
                <declaration name="dragProtocols" type="Iterator" line="204"/>
                <scope line="205">
                    <declaration name="dragProtocol" type="XDragSourceProtocol" line="206"/>
                    <scope line="207"/>
                    <scope line="210"/>
                </scope>
            </method>
            <javadoc line="225">
                The caller must own awtLock.                
            </javadoc>
            <method name="cleanupTargetInfo" type="void" line="228"/>
            <method name="removeDnDGrab" type="void" line="233">
                <params>
                    <param name="time" type="long"/>
                </params>
            </method>
            <method name="processClientMessage" type="boolean" line="243">
                <params>
                    <param name="xclient" type="XClientMessageEvent"/>
                </params>
                <scope line="244"/>
            </method>
            <javadoc line="249">
                Updates the source action according to the specified state.                
                <returns>
                    true if the source                    
                </returns>
            </javadoc>
            <method name="updateSourceAction" type="boolean" line="253">
                <params>
                    <param name="state" type="int"/>
                </params>
                <declaration name="action" type="int" line="254"/>
                <scope line="255"/>
            </method>
            <javadoc line="261">
                Returns the client window under the specified root subwindow.                
            </javadoc>
            <method name="findClientWindow" type="long" line="264">
                <params>
                    <param name="window" type="long"/>
                </params>
                <scope line="265"/>
                <declaration name="children" type="Set&lt;Long&gt;" line="268"/>
                <scope line="269">
                    <declaration name="win" type="long" line="270"/>
                    <scope line="271"/>
                </scope>
            </method>
            <method name="doUpdateTargetWindow" type="void" line="277">
                <params>
                    <param name="subwindow" type="long"/>
                    <param name="time" type="long"/>
                </params>
                <declaration name="clientWindow" type="long" line="278"/>
                <declaration name="proxyWindow" type="long" line="279"/>
                <declaration name="protocol" type="XDragSourceProtocol" line="280"/>
                <declaration name="isReceiver" type="boolean" line="281"/>
                <scope line="282"/>
                <scope line="285">
                    <declaration name="dragProtocols" type="Iterator" line="286"/>
                    <scope line="287">
                        <declaration name="dragProtocol" type="XDragSourceProtocol" line="288"/>
                        <scope line="289"/>
                    </scope>
                </scope>
            </method>
            <method name="updateTargetWindow" type="void" line="299">
                <params>
                    <param name="xmotion" type="XMotionEvent"/>
                </params>
            </method>
            <method name="processMouseMove" type="void" line="322">
                <params>
                    <param name="xmotion" type="XMotionEvent"/>
                </params>
                <scope line="323"/>
                <scope line="326"/>
                <scope line="331">
                    <scope line="332"/>
                </scope>
                <scope line="338"/>
            </method>
            <method name="processDrop" type="void" line="342">
                <params>
                    <param name="xbutton" type="XButtonEvent"/>
                </params>
                <scope line="343"/>
                <scope line="346"/>
            </method>
            <method name="processProxyModeEvent" type="boolean" line="350">
                <params>
                    <param name="ev" type="XEvent"/>
                </params>
                <scope line="351"/>
                <scope line="354"/>
                <scope line="357"/>
                <declaration name="xclient" type="XClientMessageEvent" line="360"/>
                <declaration name="dragProtocols" type="Iterator" line="361"/>
                <scope line="362">
                    <declaration name="dragProtocol" type="XDragSourceProtocol" line="363"/>
                    <scope line="364"/>
                </scope>
            </method>
            <javadoc line="370">
                The caller must own awtLock.                
                <returns>
                    true if the even was processed and shouldn't be passed along.                    
                </returns>
            </javadoc>
            <method name="doProcessEvent" type="boolean" line="374">
                <params>
                    <param name="ev" type="XEvent"/>
                </params>
            </method>
            <method name="processEvent" type="boolean" line="494">
                <params>
                    <param name="ev" type="XEvent"/>
                </params>
                <scope line="496">
                    <scope line="497"/>
                    <scope line="500"/>
                </scope>
                <scope line="505"/>
            </method>
            <method name="handleDragReply" type="void" line="509">
                <params>
                    <param name="action" type="int"/>
                </params>
            </method>
            <method name="handleDragReply" type="void" line="512">
                <params>
                    <param name="action" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
            </method>
            <method name="handleDragReply" type="void" line="515">
                <params>
                    <param name="action" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="modifiers" type="int"/>
                </params>
                <scope line="516"/>
                <scope line="519">
                    <declaration name="type" type="int" line="520"/>
                    <scope line="521"/>
                    <scope line="524"/>
                </scope>
            </method>
            <method name="handleDragFinished" type="void" line="531"/>
            <method name="handleDragFinished" type="void" line="534">
                <params>
                    <param name="success" type="boolean"/>
                </params>
            </method>
            <method name="handleDragFinished" type="void" line="537">
                <params>
                    <param name="success" type="boolean"/>
                    <param name="action" type="int"/>
                </params>
            </method>
            <method name="handleDragFinished" type="void" line="540">
                <params>
                    <param name="success" type="boolean"/>
                    <param name="action" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
            </method>
        </class>
    </source>