<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt.Dimension"/>
        <import package="java.awt.GraphicsEnvironment"/>
        <import package="java.awt.Point"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.util.Collections"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Set"/>
        <import package="sun.awt.X11GraphicsConfig"/>
        <import package="sun.awt.X11GraphicsDevice"/>
        <import package="sun.awt.X11GraphicsEnvironment"/>
        <class name="XlibUtil" line="12">
            <javadoc line="13">
                The constructor is made private to eliminate any
                  instances of this class                
            </javadoc>
            <method name="XlibUtil" type="constructor" line="17"/>
            <javadoc line="19">
                Xinerama-aware version of XlibWrapper.RootWindow method.                
            </javadoc>
            <method name="getRootWindow" type="long" line="22">
                <params>
                    <param name="screenNumber" type="int"/>
                </params>
                <scope line="24">
                    <declaration name="x11ge" type="X11GraphicsEnvironment" line="25"/>
                    <scope line="26"/>
                    <scope line="29"/>
                </scope>
                <scope line="33"/>
            </method>
            <javadoc line="37">
                Checks if the given window is a root window for the given screen                
            </javadoc>
            <method name="isRoot" type="boolean" line="40">
                <params>
                    <param name="rootCandidate" type="long"/>
                    <param name="screenNumber" type="long"/>
                </params>
                <declaration name="root" type="long" line="41"/>
                <scope line="43"/>
                <scope line="46"/>
            </method>
            <javadoc line="51">
                Returns the bounds of the given window, in absolute coordinates                
            </javadoc>
            <method name="getWindowGeometry" type="Rectangle" line="54">
                <params>
                    <param name="window" type="long"/>
                </params>
                <scope line="56">
                    <declaration name="res" type="int" line="57"/>
                    <scope line="58"/>
                    <declaration name="x" type="int" line="61"/>
                    <declaration name="y" type="int" line="62"/>
                    <declaration name="width" type="long" line="63"/>
                    <declaration name="height" type="long" line="64"/>
                </scope>
                <scope line="67"/>
            </method>
            <javadoc line="71">
                Translates the given point from one window to another. Returns
                  null if the translation is failed                
            </javadoc>
            <method name="translateCoordinates" type="Point" line="75">
                <params>
                    <param name="src" type="long"/>
                    <param name="dst" type="long"/>
                    <param name="p" type="Point"/>
                </params>
                <declaration name="translated" type="Point" line="76"/>
                <scope line="78">
                    <declaration name="xtc" type="XTranslateCoordinates" line="79"/>
                    <scope line="80">
                        <declaration name="status" type="int" line="81"/>
                        <scope line="82"/>
                    </scope>
                    <scope line="86"/>
                </scope>
                <scope line="90"/>
            </method>
            <javadoc line="95">
                Translates the given rectangle from one window to another.
                  Returns null if the translation is failed                
            </javadoc>
            <method name="translateCoordinates" type="Rectangle" line="99">
                <params>
                    <param name="src" type="long"/>
                    <param name="dst" type="long"/>
                    <param name="r" type="Rectangle"/>
                </params>
                <declaration name="translatedLoc" type="Point" line="100"/>
                <scope line="101"/>
                <scope line="104"/>
            </method>
            <javadoc line="108">
                Returns the parent for the given window                
            </javadoc>
            <method name="getParentWindow" type="long" line="111">
                <params>
                    <param name="window" type="long"/>
                </params>
                <scope line="113">
                    <declaration name="bw" type="XBaseWindow" line="114"/>
                    <scope line="115">
                        <declaration name="pbw" type="XBaseWindow" line="116"/>
                        <scope line="117"/>
                    </scope>
                    <declaration name="qt" type="XQueryTree" line="121"/>
                    <scope line="122">
                        <scope line="123"/>
                        <scope line="126"/>
                    </scope>
                    <scope line="130"/>
                </scope>
                <scope line="134"/>
            </method>
            <javadoc line="138">
                Returns all the children for the given window                
            </javadoc>
            <method name="getChildWindows" type="Set<Long>" line="141">
                <params>
                    <param name="window" type="long"/>
                </params>
                <scope line="143">
                    <declaration name="bw" type="XBaseWindow" line="144"/>
                    <scope line="145"/>
                    <declaration name="xqt" type="XQueryTree" line="148"/>
                    <scope line="149">
                        <declaration name="status" type="int" line="150"/>
                        <scope line="151"/>
                        <declaration name="children" type="long" line="154"/>
                        <scope line="155"/>
                        <declaration name="childrenCount" type="int" line="158"/>
                        <declaration name="childrenSet" type="Set&lt;Long&gt;" line="159"/>
                        <scope line="160"/>
                    </scope>
                    <scope line="165"/>
                </scope>
                <scope line="169"/>
            </method>
            <javadoc line="173">
                Checks if the given window is a Java window and is an
                  instance of XWindowPeer                
            </javadoc>
            <method name="isXAWTToplevelWindow" type="boolean" line="177">
                <params>
                    <param name="window" type="long"/>
                </params>
            </method>
            <javadoc line="180">
                NOTICE: Right now returns only decorated top-levels (not Window)                
            </javadoc>
            <method name="isToplevelWindow" type="boolean" line="183">
                <params>
                    <param name="window" type="long"/>
                </params>
                <scope line="184"/>
                <scope line="188">
                    <declaration name="wpg" type="WindowPropertyGetter" line="189"/>
                    <scope line="190">
                        <scope line="192"/>
                    </scope>
                    <scope line="196"/>
                </scope>
                <scope line="201"/>
            </method>
            <javadoc line="205">
                The same as isToplevelWindow(window), but doesn&apos;t treat
                  XEmbeddedFramePeer as toplevel.                
            </javadoc>
            <method name="isTrueToplevelWindow" type="boolean" line="209">
                <params>
                    <param name="window" type="long"/>
                </params>
                <scope line="210"/>
            </method>
            <method name="getWindowMapState" type="int" line="215">
                <params>
                    <param name="window" type="long"/>
                </params>
                <declaration name="wattr" type="XWindowAttributes" line="217"/>
                <scope line="218">
                    <declaration name="status" type="int" line="220"/>
                    <scope line="222"/>
                </scope>
                <scope line="226"/>
            </method>
            <declaration name="isShapingSupported" type="Boolean" line="232"/>
            <javadoc line="232">
                XSHAPE extension support.                
            </javadoc>
            <javadoc line="236">
                Returns whether the XSHAPE extension available                
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="isShapingSupported" type="boolean" line="240">
                <scope line="241">
                    <scope line="243"/>
                    <scope line="246"/>
                </scope>
            </method>
        </class>
    </source>