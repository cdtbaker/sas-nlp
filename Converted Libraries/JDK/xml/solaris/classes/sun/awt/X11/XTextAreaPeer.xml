<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt"/>
        <import package="java.awt.peer.ComponentPeer"/>
        <import package="java.awt.peer.TextAreaPeer"/>
        <import package="java.awt.event"/>
        <import package="javax.swing.event.DocumentListener"/>
        <import package="javax.swing.event.DocumentEvent"/>
        <import package="javax.swing.JTextArea"/>
        <import package="javax.swing.JComponent"/>
        <import package="javax.swing.JScrollPane"/>
        <import package="javax.swing.JScrollBar"/>
        <import package="javax.swing.plaf.ComponentUI"/>
        <import package="com.sun.java.swing.plaf.motif.MotifTextAreaUI"/>
        <import package="javax.swing.plaf.UIResource"/>
        <import package="javax.swing.UIDefaults"/>
        <import package="javax.swing.border.Border"/>
        <import package="javax.swing.border.EmptyBorder"/>
        <import package="javax.swing.border.CompoundBorder"/>
        <import package="javax.swing.border.AbstractBorder"/>
        <import package="javax.swing.JButton"/>
        <import package="javax.swing.JViewport"/>
        <import package="javax.swing.InputMap"/>
        <import package="javax.swing.SwingUtilities"/>
        <import package="javax.swing.TransferHandler"/>
        <import package="javax.swing.plaf.basic.BasicArrowButton"/>
        <import package="javax.swing.plaf.basic.BasicScrollBarUI"/>
        <import package="javax.swing.plaf.basic.BasicScrollPaneUI"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="javax.swing.text.Caret"/>
        <import package="javax.swing.text.DefaultCaret"/>
        <import package="javax.swing.text.JTextComponent"/>
        <import package="javax.swing.plaf.BorderUIResource"/>
        <import package="java.awt.im.InputMethodRequests"/>
        <import package="sun.awt.CausedFocusEvent"/>
        <import package="sun.awt.AWTAccessor"/>
        <import package="sun.awt.SunToolkit"/>
        <class name="XTextAreaPeer" line="38">
            <extends class="XComponentPeer"/>
            <implements interface="TextAreaPeer"/>
            <declaration name="editable" type="boolean" line="39"/>
            <declaration name="textPane" type="AWTTextPane" line="40"/>
            <declaration name="jtext" type="AWTTextArea" line="41"/>
            <declaration name="firstChangeSkipped" type="boolean" line="42"/>
            <declaration name="javaMouseEventHandler" type="JavaMouseEventHandler" line="43"/>
            <method name="filterEvents" type="long" line="44">
                <params>
                    <param name="mask" type="long"/>
                </params>
            </method>
            <method name="getCharacterBounds" type="Rectangle" line="48">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="getIndexAtPoint" type="int" line="52">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
            </method>
            <javadoc line="56">
                Create a Text area.                
            </javadoc>
            <method name="XTextAreaPeer" type="constructor" line="59">
                <params>
                    <param name="target" type="TextArea"/>
                </params>
                <declaration name="text" type="String" line="64"/>
                <declaration name="compAccessor" type="AWTAccessor.ComponentAccessor" line="74"/>
                <scope line="76"/>
                <scope line="81"/>
                <scope line="86"/>
                <scope line="89"/>
                <declaration name="start" type="int" line="93"/>
                <declaration name="end" type="int" line="94"/>
                <scope line="95"/>
                <declaration name="caretPosition" type="int" line="98"/>
            </method>
            <method name="dispose" type="void" line="105"/>
            <method name="pSetCursor" type="void" line="111">
                <params>
                    <param name="cursor" type="Cursor"/>
                    <param name="ignoreSubComponents" type="boolean"/>
                </params>
                <declaration name="onScreen" type="Point" line="112"/>
                <scope line="113"/>
                <declaration name="cursorPos" type="Point" line="117"/>
                <declaration name="localPoint" type="Point" line="119"/>
            </method>
            <method name="setScrollBarVisibility" type="void" line="123">
                <declaration name="visibility" type="int" line="124"/>
                <scope line="126"/>
                <scope line="131"/>
                <scope line="135"/>
                <scope line="140"/>
            </method>
            <javadoc line="145">
                Compute minimum size.                
            </javadoc>
            <method name="getMinimumSize" type="Dimension" line="148"/>
            <method name="getPreferredSize" type="Dimension" line="151">
                <params>
                    <param name="rows" type="int"/>
                    <param name="cols" type="int"/>
                </params>
            </method>
            <javadoc line="154">
                @see java.awt.peer.TextAreaPeer                
            </javadoc>
            <method name="getMinimumSize" type="Dimension" line="157">
                <params>
                    <param name="rows" type="int"/>
                    <param name="cols" type="int"/>
                </params>
                <declaration name="vsbwidth" type="int" line="158"/>
                <declaration name="hsbheight" type="int" line="159"/>
                <declaration name="vsb" type="JScrollBar" line="160"/>
                <scope line="161"/>
                <declaration name="hsb" type="JScrollBar" line="164"/>
                <scope line="165"/>
                <declaration name="f" type="Font" line="168"/>
                <declaration name="fm" type="FontMetrics" line="169"/>
            </method>
            <method name="isFocusable" type="boolean" line="172"/>
            <method name="setVisible" type="void" line="175">
                <params>
                    <param name="b" type="boolean"/>
                </params>
            </method>
            <method name="repaintText" type="void" line="179"/>
            <method name="focusGained" type="void" line="182">
                <params>
                    <param name="e" type="FocusEvent"/>
                </params>
            </method>
            <method name="focusLost" type="void" line="186">
                <params>
                    <param name="e" type="FocusEvent"/>
                </params>
            </method>
            <javadoc line="190">
                Paint the component
                  this method is called when the repaint instruction has been used                
            </javadoc>
            <method name="repaint" type="void" line="194">
                <scope line="195"/>
            </method>
            <method name="paint" type="void" line="199">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <scope line="200"/>
            </method>
            <method name="setBounds" type="void" line="204">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="op" type="int"/>
                </params>
                <scope line="206">
                    <declaration name="childX" type="int" line="207"/>
                    <declaration name="childY" type="int" line="208"/>
                    <declaration name="parent" type="Component" line="209"/>
                    <scope line="210"/>
                </scope>
            </method>
            <method name="handleJavaKeyEvent" type="void" line="219">
                <params>
                    <param name="e" type="KeyEvent"/>
                </params>
            </method>
            <method name="handlesWheelScrolling" type="boolean" line="222"/>
            <method name="handleJavaMouseWheelEvent" type="void" line="225">
                <params>
                    <param name="e" type="MouseWheelEvent"/>
                </params>
            </method>
            <method name="handleJavaMouseEvent" type="void" line="228">
                <params>
                    <param name="e" type="MouseEvent"/>
                </params>
            </method>
            <method name="handleJavaInputMethodEvent" type="void" line="232">
                <params>
                    <param name="e" type="InputMethodEvent"/>
                </params>
            </method>
            <javadoc line="235">
                @see java.awt.peer.TextComponentPeer                
            </javadoc>
            <method name="select" type="void" line="238">
                <params>
                    <param name="s" type="int"/>
                    <param name="e" type="int"/>
                </params>
            </method>
            <method name="setBackground" type="void" line="242">
                <params>
                    <param name="c" type="Color"/>
                </params>
                <scope line="244"/>
            </method>
            <method name="setForeground" type="void" line="249">
                <params>
                    <param name="c" type="Color"/>
                </params>
                <scope line="251"/>
            </method>
            <method name="setFont" type="void" line="257">
                <params>
                    <param name="f" type="Font"/>
                </params>
                <scope line="259"/>
            </method>
            <javadoc line="264">
                @see java.awt.peer.TextComponentPeer                
            </javadoc>
            <method name="setEditable" type="void" line="267">
                <params>
                    <param name="editable" type="boolean"/>
                </params>
            </method>
            <javadoc line="272">
                @see java.awt.peer.ComponentPeer                
            </javadoc>
            <method name="setEnabled" type="void" line="275">
                <params>
                    <param name="enabled" type="boolean"/>
                </params>
                <scope line="277"/>
            </method>
            <javadoc line="282">
                @see java.awt.peer.TextComponentPeer                
            </javadoc>
            <method name="getInputMethodRequests" type="InputMethodRequests" line="285"/>
            <javadoc line="289">
                @see java.awt.peer.TextComponentPeer                
            </javadoc>
            <method name="getSelectionStart" type="int" line="292"/>
            <javadoc line="295">
                @see java.awt.peer.TextComponentPeer                
            </javadoc>
            <method name="getSelectionEnd" type="int" line="298"/>
            <javadoc line="301">
                @see java.awt.peer.TextComponentPeer                
            </javadoc>
            <method name="getText" type="String" line="304"/>
            <javadoc line="307">
                @see java.awt.peer.TextComponentPeer                
            </javadoc>
            <method name="setText" type="void" line="310">
                <params>
                    <param name="txt" type="String"/>
                </params>
            </method>
            <method name="setTextImpl" type="boolean" line="314">
                <params>
                    <param name="txt" type="String"/>
                </params>
                <scope line="315">
                    <scope line="316"/>
                    <scope line="321"/>
                </scope>
            </method>
            <javadoc line="328">
                insert the text &quot;txt on position &quot;pos&quot; in the array lines                
                <see>
                    java.awt.peer.TextAreaPeer                    
                </see>
            </javadoc>
            <method name="insert" type="void" line="332">
                <params>
                    <param name="txt" type="String"/>
                    <param name="p" type="int"/>
                </params>
                <scope line="333">
                    <declaration name="doScroll" type="boolean" line="334"/>
                    <scope line="337">
                        <declaration name="bar" type="JScrollBar" line="338"/>
                        <scope line="339"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="345">
                replace the text between the position &quot;s&quot; and &quot;e&quot; with &quot;txt&quot;                
                <see>
                    java.awt.peer.TextAreaPeer                    
                </see>
            </javadoc>
            <method name="replaceRange" type="void" line="349">
                <params>
                    <param name="txt" type="String"/>
                    <param name="s" type="int"/>
                    <param name="e" type="int"/>
                </params>
                <scope line="350"/>
            </method>
            <javadoc line="357">
                to be implemented.                
                <see>
                    java.awt.peer.TextComponentPeer                    
                </see>
            </javadoc>
            <method name="setCaretPosition" type="void" line="361">
                <params>
                    <param name="position" type="int"/>
                </params>
            </method>
            <javadoc line="364">
                to be implemented.                
                <see>
                    java.awt.peer.TextComponentPeer                    
                </see>
            </javadoc>
            <method name="getCaretPosition" type="int" line="368"/>
            <javadoc line="371">
                DEPRECATED                
                <see>
                    java.awt.peer.TextAreaPeer                    
                </see>
            </javadoc>
            <method name="insertText" type="void" line="375">
                <params>
                    <param name="txt" type="String"/>
                    <param name="pos" type="int"/>
                </params>
            </method>
            <javadoc line="378">
                DEPRECATED                
                <see>
                    java.awt.peer.TextAreaPeer                    
                </see>
            </javadoc>
            <method name="replaceText" type="void" line="382">
                <params>
                    <param name="txt" type="String"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
            </method>
            <javadoc line="385">
                DEPRECATED                
                <see>
                    java.awt.peer.TextAreaPeer                    
                </see>
            </javadoc>
            <method name="minimumSize" type="Dimension" line="389">
                <params>
                    <param name="rows" type="int"/>
                    <param name="cols" type="int"/>
                </params>
            </method>
            <javadoc line="392">
                DEPRECATED                
                <see>
                    java.awt.peer.TextAreaPeer                    
                </see>
            </javadoc>
            <method name="preferredSize" type="Dimension" line="396">
                <params>
                    <param name="rows" type="int"/>
                    <param name="cols" type="int"/>
                </params>
            </method>
            <class name="AWTTextAreaUI" line="399">
                <extends class="MotifTextAreaUI"/>
                <declaration name="jta" type="JTextArea" line="400"/>
                <javadoc line="400">
                    Creates a UI for a JTextArea.                    
                    <param>
                        c the text field                        
                    </param>
                    <return>
                        the UI                        
                    </return>
                </javadoc>
                <method name="getPropertyPrefix" type="String" line="406"/>
                <method name="installUI" type="void" line="409">
                    <params>
                        <param name="c" type="JComponent"/>
                    </params>
                    <declaration name="editor" type="JTextArea" line="412"/>
                    <declaration name="uidefaults" type="UIDefaults" line="413"/>
                    <declaration name="prefix" type="String" line="414"/>
                    <declaration name="f" type="Font" line="415"/>
                    <scope line="416"/>
                    <declaration name="bg" type="Color" line="419"/>
                    <scope line="420"/>
                    <declaration name="fg" type="Color" line="423"/>
                    <scope line="424"/>
                    <declaration name="color" type="Color" line="427"/>
                    <scope line="428"/>
                    <declaration name="s" type="Color" line="431"/>
                    <scope line="432"/>
                    <declaration name="sfg" type="Color" line="435"/>
                    <scope line="436"/>
                    <declaration name="dfg" type="Color" line="439"/>
                    <scope line="440"/>
                    <declaration name="b" type="Border" line="443"/>
                    <declaration name="margin" type="Insets" line="445"/>
                    <scope line="446"/>
                </method>
                <method name="installKeyboardActions" type="void" line="450">
                    <declaration name="comp" type="JTextComponent" line="452"/>
                    <declaration name="uidefaults" type="UIDefaults" line="453"/>
                    <declaration name="prefix" type="String" line="454"/>
                    <declaration name="map" type="InputMap" line="455"/>
                    <scope line="456"/>
                </method>
                <method name="createCaret" type="Caret" line="460"/>
            </class>
            <class name="XAWTCaret" line="464">
                <extends class="DefaultCaret"/>
                <method name="focusGained" type="void" line="465">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                </method>
                <method name="focusLost" type="void" line="469">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                </method>
                <method name="setSelectionVisible" type="void" line="473">
                    <params>
                        <param name="vis" type="boolean"/>
                    </params>
                    <scope line="474"/>
                    <scope line="477"/>
                </method>
            </class>
            <class name="XAWTScrollBarButton" line="482">
                <extends class="BasicArrowButton"/>
                <declaration name="uidefaults" type="UIDefaults" line="483"/>
                <declaration name="darkShadow" type="Color" line="484"/>
                <declaration name="lightShadow" type="Color" line="485"/>
                <declaration name="buttonBack" type="Color" line="486"/>
                <method name="XAWTScrollBarButton" type="constructor" line="487">
                    <params>
                        <param name="direction" type="int"/>
                    </params>
                </method>
                <method name="getPreferredSize" type="Dimension" line="504"/>
                <method name="getMinimumSize" type="Dimension" line="515"/>
                <method name="getMaximumSize" type="Dimension" line="518"/>
                <method name="isFocusTraversable" type="boolean" line="521"/>
                <method name="paint" type="void" line="524">
                    <params>
                        <param name="g" type="Graphics"/>
                    </params>
                    <declaration name="w" type="int" line="525"/>
                    <declaration name="h" type="int" line="526"/>
                    <scope line="527"/>
                    <declaration name="isPressed" type="boolean" line="531"/>
                    <declaration name="lead" type="Color" line="532"/>
                    <declaration name="trail" type="Color" line="533"/>
                    <declaration name="fill" type="Color" line="534"/>
                    <declaration name="cx" type="int" line="535"/>
                    <declaration name="cy" type="int" line="536"/>
                    <declaration name="s" type="int" line="537"/>
                    <scope line="542">
                        <scope line="545"/>
                        <scope line="550"/>
                        <scope line="555"/>
                    </scope>
                    <scope line="565">
                        <scope line="568"/>
                        <scope line="573"/>
                    </scope>
                    <scope line="585">
                        <scope line="588"/>
                        <scope line="593"/>
                    </scope>
                    <scope line="605">
                        <scope line="608"/>
                        <scope line="613"/>
                        <scope line="618"/>
                    </scope>
                </method>
            </class>
            <class name="XAWTScrollBarUI" line="628">
                <extends class="BasicScrollBarUI"/>
                <method name="XAWTScrollBarUI" type="constructor" line="629"/>
                <method name="installDefaults" type="void" line="632"/>
                <method name="configureScrollBarColors" type="void" line="636">
                    <declaration name="uidefaults" type="UIDefaults" line="637"/>
                    <declaration name="bg" type="Color" line="638"/>
                    <scope line="639"/>
                    <declaration name="fg" type="Color" line="642"/>
                    <scope line="643"/>
                </method>
                <method name="createDecreaseButton" type="JButton" line="653">
                    <params>
                        <param name="orientation" type="int"/>
                    </params>
                    <declaration name="b" type="JButton" line="654"/>
                </method>
                <method name="createIncreaseButton" type="JButton" line="657">
                    <params>
                        <param name="orientation" type="int"/>
                    </params>
                    <declaration name="b" type="JButton" line="658"/>
                </method>
                <method name="getDecreaseButton" type="JButton" line="661"/>
                <method name="getIncreaseButton" type="JButton" line="664"/>
                <method name="paint" type="void" line="667">
                    <params>
                        <param name="g" type="Graphics"/>
                        <param name="c" type="JComponent"/>
                    </params>
                    <declaration name="thumbBounds" type="Rectangle" line="669"/>
                </method>
                <method name="paintThumb" type="void" line="672">
                    <params>
                        <param name="g" type="Graphics"/>
                        <param name="c" type="JComponent"/>
                        <param name="thumbBounds" type="Rectangle"/>
                    </params>
                    <scope line="673"/>
                    <declaration name="w" type="int" line="677"/>
                    <declaration name="h" type="int" line="678"/>
                </method>
            </class>
            <class name="AWTTextArea" line="691">
                <extends class="JTextArea"/>
                <implements interface="DocumentListener"/>
                <declaration name="isFocused" type="boolean" line="692"/>
                <declaration name="peer" type="XTextAreaPeer" line="693"/>
                <method name="AWTTextArea" type="constructor" line="694">
                    <params>
                        <param name="text" type="String"/>
                        <param name="peer" type="XTextAreaPeer"/>
                    </params>
                </method>
                <method name="insertUpdate" type="void" line="699">
                    <params>
                        <param name="e" type="DocumentEvent"/>
                    </params>
                    <scope line="700"/>
                </method>
                <method name="removeUpdate" type="void" line="704">
                    <params>
                        <param name="e" type="DocumentEvent"/>
                    </params>
                    <scope line="705"/>
                </method>
                <method name="changedUpdate" type="void" line="709">
                    <params>
                        <param name="e" type="DocumentEvent"/>
                    </params>
                    <scope line="710"/>
                </method>
                <method name="forwardFocusGained" type="void" line="714">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                    <declaration name="fe" type="FocusEvent" line="716"/>
                </method>
                <method name="forwardFocusLost" type="void" line="719">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                    <declaration name="fe" type="FocusEvent" line="721"/>
                </method>
                <method name="hasFocus" type="boolean" line="724"/>
                <method name="repaintNow" type="void" line="727"/>
                <method name="processMouseEventPublic" type="void" line="730">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="processMouseMotionEventPublic" type="void" line="733">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="processInputMethodEventPublic" type="void" line="736">
                    <params>
                        <param name="e" type="InputMethodEvent"/>
                    </params>
                </method>
                <method name="updateUI" type="void" line="739">
                    <declaration name="ui" type="ComponentUI" line="740"/>
                </method>
                <method name="setTransferHandler" type="void" line="743">
                    <params>
                        <param name="newHandler" type="TransferHandler"/>
                    </params>
                    <declaration name="oldHandler" type="TransferHandler" line="744"/>
                </method>
            </class>
            <class name="XAWTScrollPaneUI" line="749">
                <extends class="BasicScrollPaneUI"/>
                <declaration name="vsbMarginBorderR" type="Border" line="750"/>
                <declaration name="vsbMarginBorderL" type="Border" line="751"/>
                <declaration name="hsbMarginBorder" type="Border" line="752"/>
                <declaration name="vsbBorder" type="Border" line="753"/>
                <declaration name="hsbBorder" type="Border" line="754"/>
                <declaration name="propertyChangeHandler" type="PropertyChangeListener" line="755"/>
                <method name="installListeners" type="void" line="756">
                    <params>
                        <param name="scrollPane" type="JScrollPane"/>
                    </params>
                </method>
                <method name="paint" type="void" line="761">
                    <params>
                        <param name="g" type="Graphics"/>
                        <param name="c" type="JComponent"/>
                    </params>
                    <declaration name="vpBorder" type="Border" line="762"/>
                    <scope line="763">
                        <declaration name="r" type="Rectangle" line="764"/>
                    </scope>
                </method>
                <method name="uninstallListeners" type="void" line="768">
                    <params>
                        <param name="scrollPane" type="JScrollPane"/>
                    </params>
                </method>
                <method name="createPropertyChangeHandler" type="PropertyChangeListener" line="772">
                    <anonymous_class line="773">
                        <method name="propertyChange" type="void" line="774">
                            <params>
                                <param name="e" type="PropertyChangeEvent"/>
                            </params>
                            <declaration name="propertyName" type="String" line="775"/>
                            <scope line="776">
                                <declaration name="pane" type="JScrollPane" line="777"/>
                                <declaration name="vsb" type="JScrollBar" line="778"/>
                                <scope line="779">
                                    <scope line="780"/>
                                    <scope line="783"/>
                                </scope>
                            </scope>
                        </method>
                    </anonymous_class>
                </method>
                <method name="isLeftToRight" type="boolean" line="793">
                    <params>
                        <param name="c" type="Component"/>
                    </params>
                </method>
                <method name="installDefaults" type="void" line="796">
                    <params>
                        <param name="scrollpane" type="JScrollPane"/>
                    </params>
                    <declaration name="b" type="Border" line="797"/>
                    <declaration name="uidefaults" type="UIDefaults" line="798"/>
                    <declaration name="vsb" type="JScrollBar" line="802"/>
                    <scope line="803">
                        <scope line="804"/>
                        <scope line="807"/>
                    </scope>
                    <declaration name="hsb" type="JScrollBar" line="812"/>
                    <scope line="813"/>
                </method>
                <method name="uninstallDefaults" type="void" line="818">
                    <params>
                        <param name="c" type="JScrollPane"/>
                    </params>
                    <declaration name="vsb" type="JScrollBar" line="820"/>
                    <scope line="821">
                        <scope line="822"/>
                    </scope>
                    <declaration name="hsb" type="JScrollBar" line="827"/>
                    <scope line="828">
                        <scope line="829"/>
                    </scope>
                </method>
            </class>
            <class name="AWTTextPane" line="836">
                <extends class="JScrollPane"/>
                <implements interface="FocusListener"/>
                <declaration name="jtext" type="JTextArea" line="837"/>
                <declaration name="xwin" type="XWindow" line="838"/>
                <declaration name="control" type="Color" line="839"/>
                <declaration name="focus" type="Color" line="840"/>
                <method name="AWTTextPane" type="constructor" line="841">
                    <params>
                        <param name="jt" type="JTextArea"/>
                        <param name="xwin" type="XWindow"/>
                        <param name="parent" type="Container"/>
                    </params>
                </method>
                <method name="focusGained" type="void" line="852">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                    <declaration name="g" type="Graphics" line="853"/>
                    <declaration name="r" type="Rectangle" line="854"/>
                </method>
                <method name="focusLost" type="void" line="859">
                    <params>
                        <param name="e" type="FocusEvent"/>
                    </params>
                    <declaration name="g" type="Graphics" line="860"/>
                    <declaration name="r" type="Rectangle" line="861"/>
                </method>
                <method name="getRealParent" type="Window" line="866"/>
                <method name="getPeer" type="ComponentPeer" line="869"/>
                <method name="updateUI" type="void" line="872">
                    <declaration name="ui" type="ComponentUI" line="873"/>
                </method>
                <method name="createVerticalScrollBar" type="JScrollBar" line="876"/>
                <method name="createHorizontalScrollBar" type="JScrollBar" line="879"/>
                <method name="getTextArea" type="JTextArea" line="882"/>
                <method name="getGraphics" type="Graphics" line="885"/>
                <class name="XAWTScrollBar" line="888">
                    <extends class="ScrollBar"/>
                    <method name="XAWTScrollBar" type="constructor" line="889">
                        <params>
                            <param name="i" type="int"/>
                        </params>
                    </method>
                    <method name="updateUI" type="void" line="893">
                        <declaration name="ui" type="ComponentUI" line="894"/>
                    </method>
                </class>
            </class>
            <class name="BevelBorder" line="899">
                <extends class="AbstractBorder"/>
                <implements interface="UIResource"/>
                <declaration name="darkShadow" type="Color" line="900"/>
                <declaration name="lightShadow" type="Color" line="901"/>
                <declaration name="control" type="Color" line="902"/>
                <declaration name="isRaised" type="boolean" line="903"/>
                <method name="BevelBorder" type="constructor" line="904">
                    <params>
                        <param name="isRaised" type="boolean"/>
                        <param name="darkShadow" type="Color"/>
                        <param name="lightShadow" type="Color"/>
                    </params>
                </method>
                <method name="paintBorder" type="void" line="909">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="w" type="int"/>
                        <param name="h" type="int"/>
                    </params>
                </method>
                <method name="getBorderInsets" type="Insets" line="923">
                    <params>
                        <param name="c" type="Component"/>
                    </params>
                </method>
                <method name="getBorderInsets" type="Insets" line="926">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="insets" type="Insets"/>
                    </params>
                </method>
                <method name="isOpaque" type="boolean" line="930">
                    <params>
                        <param name="c" type="Component"/>
                    </params>
                </method>
            </class>
            <class name="JavaMouseEventHandler" line="934">
                <declaration name="outer" type="XTextAreaPeer" line="935"/>
                <declaration name="current" type="Pointer" line="936"/>
                <declaration name="grabbed" type="boolean" line="937"/>
                <method name="JavaMouseEventHandler" type="constructor" line="938">
                    <params>
                        <param name="outer" type="XTextAreaPeer"/>
                    </params>
                </method>
                <method name="handle" type="void" line="941">
                    <params>
                        <param name="event" type="MouseEvent"/>
                    </params>
                    <scope line="942"/>
                    <declaration name="wasGrabbed" type="boolean" line="946"/>
                    <scope line="948"/>
                </method>
                <method name="dispatch" type="void" line="953">
                    <params>
                        <param name="event" type="MouseEvent"/>
                    </params>
                    <declaration name="point" type="Point" line="956"/>
                    <declaration name="jtext" type="XTextAreaPeer.AWTTextArea" line="957"/>
                    <declaration name="newEvent" type="MouseEvent" line="958"/>
                    <declaration name="id" type="int" line="959"/>
                    <scope line="960"/>
                    <scope line="963"/>
                    <declaration name="c" type="Component" line="969"/>
                    <declaration name="p" type="Point" line="970"/>
                    <scope line="971"/>
                </method>
                <method name="newMouseEvent" type="MouseEvent" line="979">
                    <params>
                        <param name="source" type="Component"/>
                        <param name="point" type="Point"/>
                        <param name="template" type="MouseEvent"/>
                    </params>
                    <declaration name="e" type="MouseEvent" line="980"/>
                    <declaration name="nme" type="MouseEvent" line="981"/>
                </method>
                <method name="setCursor" type="void" line="985">
                    <scope line="986"/>
                    <scope line="989"/>
                </method>
                <method name="grabbed_update" type="void" line="993">
                    <params>
                        <param name="event" type="MouseEvent"/>
                    </params>
                    <declaration name="allButtonsMask" type="int" line="994"/>
                </method>
                <method name="toLocalSpace" type="Point" line="997">
                    <params>
                        <param name="local" type="Component"/>
                        <param name="inParentSpace" type="Point"/>
                    </params>
                    <declaration name="p" type="Point" line="998"/>
                    <declaration name="l" type="Point" line="999"/>
                </method>
                <method name="toViewportChildLocalSpace" type="Point" line="1002">
                    <params>
                        <param name="v" type="JViewport"/>
                        <param name="inViewportParentSpace" type="Point"/>
                    </params>
                    <declaration name="l" type="Point" line="1003"/>
                    <declaration name="p" type="Point" line="1004"/>
                </method>
                <method name="setPointerToUnderPoint" type="void" line="1009">
                    <params>
                        <param name="point" type="Point"/>
                    </params>
                    <scope line="1010"/>
                    <scope line="1013">
                        <scope line="1014"/>
                    </scope>
                </method>
                <method name="setPointerIfPointOverScrollbar" type="boolean" line="1019">
                    <params>
                        <param name="bar" type="JScrollBar"/>
                        <param name="point" type="Point"/>
                    </params>
                    <scope line="1020"/>
                    <declaration name="local" type="Point" line="1024"/>
                    <declaration name="ui" type="XTextAreaPeer.XAWTScrollBarUI" line="1025"/>
                    <scope line="1026"/>
                </method>
                <method name="setPointerIfPointOverButton" type="boolean" line="1031">
                    <params>
                        <param name="button" type="JButton"/>
                        <param name="point" type="Point"/>
                    </params>
                    <scope line="1032"/>
                </method>
                <class name="Pointer" line="1038">
                    <declaration name="Type" type="enum" line="1039"/>
                    <scope line="1039"/>
                    <method name="getType" type="Type" line="1040"/>
                    <method name="isNone" type="boolean" line="1043"/>
                    <method name="getBar" type="JScrollBar" line="1046">
                        <declaration name="ok" type="boolean" line="1047"/>
                        <declaration name="ok" type="assert" line="1048"/>
                    </method>
                    <method name="getButton" type="JButton" line="1051">
                        <declaration name="ok" type="boolean" line="1052"/>
                        <declaration name="ok" type="assert" line="1053"/>
                    </method>
                    <method name="setNone" type="void" line="1056"/>
                    <method name="setText" type="void" line="1059"/>
                    <method name="setBar" type="void" line="1062">
                        <params>
                            <param name="bar" type="JScrollBar"/>
                        </params>
                    </method>
                    <method name="setButton" type="void" line="1066">
                        <params>
                            <param name="button" type="JButton"/>
                        </params>
                    </method>
                    <declaration name="type" type="Type" line="1070"/>
                    <declaration name="bar" type="JScrollBar" line="1071"/>
                    <declaration name="button" type="JButton" line="1072"/>
                </class>
            </class>
        </class>
    </source>