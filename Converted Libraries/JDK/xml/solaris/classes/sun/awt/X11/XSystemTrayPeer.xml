<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt"/>
        <import package="java.awt.peer.SystemTrayPeer"/>
        <import package="java.lang.reflect.Method"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="sun.awt.SunToolkit"/>
        <import package="sun.awt.AppContext"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <class name="XSystemTrayPeer" line="36">
            <comment line="41">
                there is only one SystemTray peer per application                
            </comment>
            <comment line="110">
                ***********************************************************************
                 ***********************************************************************                
            </comment>
            <implements interface="SystemTrayPeer"/>
            <implements interface="XMSelectionListener"/>
            <declaration name="log" type="PlatformLogger" line="37"/>
            <declaration name="target" type="SystemTray" line="39"/>
            <declaration name="peerInstance" type="XSystemTrayPeer" line="40"/>
            <declaration name="available" type="boolean" line="42"/>
            <declaration name="selection" type="XMSelection" line="43"/>
            <declaration name="firePropertyChangeMethod" type="Method" line="45"/>
            <declaration name="addNotifyMethod" type="Method" line="47"/>
            <declaration name="removeNotifyMethod" type="Method" line="48"/>
            <declaration name="SCREEN" type="int" line="50"/>
            <declaration name="SYSTEM_TRAY_PROPERTY_NAME" type="String" line="51"/>
            <declaration name="_NET_SYSTEM_TRAY" type="XAtom" line="52"/>
            <declaration name="_XEMBED_INFO" type="XAtom" line="53"/>
            <declaration name="_NET_SYSTEM_TRAY_OPCODE" type="XAtom" line="54"/>
            <declaration name="_NET_WM_ICON" type="XAtom" line="55"/>
            <declaration name="SYSTEM_TRAY_REQUEST_DOCK" type="long" line="56"/>
            <method name="XSystemTrayPeer" type="constructor" line="58">
                <params>
                    <param name="target" type="SystemTray"/>
                </params>
                <declaration name="selection_owner" type="long" line="64"/>
            </method>
            <method name="ownerChanged" type="void" line="70">
                <params>
                    <param name="screen" type="int"/>
                    <param name="sel" type="XMSelection"/>
                    <param name="newOwner" type="long"/>
                    <param name="data" type="long"/>
                    <param name="timestamp" type="long"/>
                </params>
                <scope line="71"/>
                <scope line="74"/>
                <scope line="77"/>
            </method>
            <method name="ownerDeath" type="void" line="83">
                <params>
                    <param name="screen" type="int"/>
                    <param name="sel" type="XMSelection"/>
                    <param name="deadOwner" type="long"/>
                </params>
                <scope line="84"/>
                <scope line="87"/>
            </method>
            <method name="selectionChanged" type="void" line="94">
                <params>
                    <param name="screen" type="int"/>
                    <param name="sel" type="XMSelection"/>
                    <param name="owner" type="long"/>
                    <param name="event" type="XPropertyEvent"/>
                </params>
            </method>
            <method name="getTrayIconSize" type="Dimension" line="97"/>
            <method name="isAvailable" type="boolean" line="101"/>
            <method name="dispose" type="void" line="105"/>
            <method name="addTrayIcon" type="void" line="112">
                <params>
                    <param name="tiPeer" type="XTrayIconPeer"/>
                </params>
                <declaration name="selection_owner" type="long" line="113"/>
                <scope line="117"/>
                <declaration name="tray_window" type="long" line="121"/>
                <declaration name="data" type="long" line="122"/>
                <declaration name="data_ptr" type="long" line="123"/>
            </method>
            <method name="sendMessage" type="void" line="130">
                <params>
                    <param name="win" type="long"/>
                    <param name="msg" type="long"/>
                    <param name="data1" type="long"/>
                    <param name="data2" type="long"/>
                    <param name="data3" type="long"/>
                </params>
                <declaration name="xev" type="XClientMessageEvent" line="131"/>
                <scope line="133">
                    <scope line="145"/>
                    <scope line="148"/>
                </scope>
                <scope line="151"/>
            </method>
            <method name="getPeerInstance" type="XSystemTrayPeer" line="156"/>
            <method name="firePropertyChange" type="void" line="160">
                <params>
                    <param name="propertyName" type="String"/>
                    <param name="oldValue" type="Object"/>
                    <param name="newValue" type="Object"/>
                </params>
                <anonymous_class line="161">
                    <method name="run" type="void" line="162">
                        <declaration name="args" type="Object[]" line="163"/>
                    </method>
                </anonymous_class>
                <declaration name="runnable" type="Runnable" line="161"/>
            </method>
            <method name="createTrayPeers" type="void" line="170"/>
            <method name="removeTrayPeers" type="void" line="174"/>
            <method name="invokeOnEachTrayIcon" type="void" line="178">
                <params>
                    <param name="method" type="Method"/>
                </params>
                <anonymous_class line="179">
                    <method name="run" type="void" line="180">
                        <declaration name="icons" type="TrayIcon[]" line="181"/>
                        <scope line="182"/>
                    </method>
                </anonymous_class>
                <declaration name="runnable" type="Runnable" line="179"/>
            </method>
            <method name="invokeMethod" type="void" line="190">
                <params>
                    <param name="method" type="Method"/>
                    <param name="obj" type="Object"/>
                    <param name="args" type="Object[]"/>
                </params>
                <scope line="191"/>
                <scope line="193"/>
                <scope line="195"/>
            </method>
            <method name="invokeOnEachAppContext" type="void" line="200">
                <params>
                    <param name="runnable" type="Runnable"/>
                </params>
                <scope line="201"/>
            </method>
        </class>
    </source>