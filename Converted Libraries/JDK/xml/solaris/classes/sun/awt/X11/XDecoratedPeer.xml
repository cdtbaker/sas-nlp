<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt"/>
        <import package="java.awt.event.ComponentEvent"/>
        <import package="java.awt.event.InvocationEvent"/>
        <import package="java.awt.event.WindowEvent"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <import package="sun.awt.AWTAccessor"/>
        <import package="sun.awt.SunToolkit"/>
        <class name="XDecoratedPeer" line="9">
            <extends class="XWindowPeer"/>
            <declaration name="log" type="PlatformLogger" line="10"/>
            <declaration name="insLog" type="PlatformLogger" line="11"/>
            <declaration name="focusLog" type="PlatformLogger" line="12"/>
            <declaration name="iconLog" type="PlatformLogger" line="13"/>
            <declaration name="configure_seen" type="boolean" line="14"/>
            <declaration name="insets_corrected" type="boolean" line="15"/>
            <declaration name="iconWindow" type="XIconWindow" line="16"/>
            <declaration name="dimensions" type="WindowDimensions" line="17"/>
            <declaration name="content" type="XContentWindow" line="18"/>
            <declaration name="currentInsets" type="Insets" line="19"/>
            <declaration name="focusProxy" type="XFocusProxyWindow" line="20"/>
            <method name="XDecoratedPeer" type="constructor" line="21">
                <params>
                    <param name="target" type="Window"/>
                </params>
            </method>
            <method name="XDecoratedPeer" type="constructor" line="24">
                <params>
                    <param name="params" type="XCreateWindowParams"/>
                </params>
            </method>
            <method name="getShell" type="long" line="27"/>
            <method name="getContentWindow" type="long" line="30"/>
            <method name="preInit" type="void" line="33">
                <params>
                    <param name="params" type="XCreateWindowParams"/>
                </params>
                <declaration name="bounds" type="Rectangle" line="38"/>
                <declaration name="eventMask" type="Long" line="42"/>
            </method>
            <method name="postInit" type="void" line="45">
                <params>
                    <param name="params" type="XCreateWindowParams"/>
                </params>
                <scope line="51"/>
            </method>
            <method name="setIconHints" type="void" line="56">
                <params>
                    <param name="icons" type="java.util.List<XIconInfo>"/>
                </params>
                <scope line="57">
                    <scope line="58">
                        <scope line="59"/>
                    </scope>
                </scope>
            </method>
            <method name="updateMinimumSize" type="void" line="66"/>
            <method name="updateMinSizeHints" type="void" line="70">
                <scope line="71">
                    <declaration name="minimumSize" type="Dimension" line="72"/>
                    <scope line="73">
                        <declaration name="insets" type="Insets" line="74"/>
                        <declaration name="minWidth" type="int" line="75"/>
                        <declaration name="minHeight" type="int" line="76"/>
                        <scope line="80">
                            <declaration name="bounds" type="Rectangle" line="81"/>
                            <declaration name="nw" type="int" line="82"/>
                            <declaration name="nh" type="int" line="83"/>
                            <scope line="84"/>
                        </scope>
                    </scope>
                    <scope line="89">
                        <declaration name="isMinSizeSet" type="boolean" line="90"/>
                        <scope line="92"/>
                    </scope>
                </scope>
            </method>
            <method name="createFocusProxy" type="XFocusProxyWindow" line="100"/>
            <method name="getWMProtocols" type="XAtomList" line="103">
                <declaration name="protocols" type="XAtomList" line="104"/>
            </method>
            <method name="getGraphics" type="Graphics" line="109">
                <declaration name="compAccessor" type="AWTAccessor.ComponentAccessor" line="110"/>
            </method>
            <method name="setTitle" type="void" line="113">
                <params>
                    <param name="title" type="String"/>
                </params>
            </method>
            <method name="getWMName" type="String" line="118">
                <scope line="119"/>
                <scope line="122"/>
            </method>
            <method name="updateWMName" type="void" line="126">
                <declaration name="name" type="String" line="128"/>
                <scope line="130">
                    <scope line="131"/>
                    <declaration name="iconNameAtom" type="XAtom" line="134"/>
                    <declaration name="netIconNameAtom" type="XAtom" line="136"/>
                </scope>
                <scope line="139"/>
            </method>
            <method name="handleIconify" type="void" line="143"/>
            <method name="handleDeiconify" type="void" line="146"/>
            <method name="handleFocusEvent" type="void" line="149">
                <params>
                    <param name="xev" type="XEvent"/>
                </params>
                <declaration name="xfe" type="XFocusChangeEvent" line="151"/>
            </method>
            <javadoc line="154">
                I N S E T S   C O D E                
            </javadoc>
            <method name="isInitialReshape" type="boolean" line="157"/>
            <method name="difference" type="Insets" line="160">
                <params>
                    <param name="i1" type="Insets"/>
                    <param name="i2" type="Insets"/>
                </params>
            </method>
            <method name="isNull" type="boolean" line="163">
                <params>
                    <param name="i" type="Insets"/>
                </params>
            </method>
            <method name="copy" type="Insets" line="166">
                <params>
                    <param name="i" type="Insets"/>
                </params>
            </method>
            <declaration name="wm_set_insets" type="Insets" line="169"/>
            <method name="getWMSetInsets" type="Insets" line="170">
                <params>
                    <param name="changedAtom" type="XAtom"/>
                </params>
                <scope line="171"/>
                <scope line="174"/>
                <scope line="177"/>
                <scope line="180"/>
                <scope line="184"/>
            </method>
            <method name="resetWMSetInsets" type="void" line="189"/>
            <method name="handlePropertyNotify" type="void" line="192">
                <params>
                    <param name="xev" type="XEvent"/>
                </params>
                <declaration name="ev" type="XPropertyEvent" line="194"/>
                <scope line="195"/>
            </method>
            <declaration name="reparent_serial" type="long" line="199"/>
            <method name="handleReparentNotifyEvent" type="void" line="200">
                <params>
                    <param name="xev" type="XEvent"/>
                </params>
                <declaration name="xe" type="XReparentEvent" line="201"/>
                <scope line="205">
                    <declaration name="root" type="long" line="206"/>
                    <scope line="207"/>
                    <declaration name="t" type="Component" line="212"/>
                    <scope line="213"/>
                    <scope line="218">
                        <scope line="221"/>
                        <scope line="225"/>
                    </scope>
                    <scope line="229">
                        <declaration name="correctWM" type="Insets" line="232"/>
                        <scope line="233">
                            <declaration name="dimInsets" type="Insets" line="235"/>
                            <scope line="236"/>
                        </scope>
                        <scope line="244">
                            <scope line="246"/>
                            <scope line="249"/>
                        </scope>
                        <scope line="253"/>
                    </scope>
                </scope>
                <scope line="258"/>
            </method>
            <method name="handleCorrectInsets" type="void" line="262">
                <params>
                    <param name="correctWM" type="Insets"/>
                </params>
                <scope line="264">
                    <declaration name="correction" type="Insets" line="265"/>
                    <scope line="267"/>
                    <scope line="275"/>
                    <scope line="278"/>
                    <scope line="281"/>
                </scope>
                <scope line="285"/>
            </method>
            <method name="handleMoved" type="void" line="289">
                <params>
                    <param name="dims" type="WindowDimensions"/>
                </params>
                <declaration name="loc" type="Point" line="290"/>
            </method>
            <method name="guessInsets" type="Insets" line="294">
                <scope line="295"/>
                <scope line="298">
                    <scope line="299"/>
                    <scope line="302">
                        <declaration name="res" type="Insets" line="303"/>
                        <scope line="304"/>
                    </scope>
                </scope>
            </method>
            <method name="applyGuessedInsets" type="void" line="311">
                <declaration name="guessed" type="Insets" line="312"/>
            </method>
            <method name="revalidate" type="void" line="315">
                <anonymous_class line="316">
                    <method name="run" type="void" line="317"/>
                </anonymous_class>
            </method>
            <method name="getRealInsets" type="Insets" line="324">
                <scope line="325"/>
            </method>
            <method name="getInsets" type="Insets" line="330">
                <declaration name="in" type="Insets" line="331"/>
                <scope line="333"/>
            </method>
            <method name="gravityBug" type="boolean" line="338"/>
            <method name="getInputMethodHeight" type="int" line="341"/>
            <method name="updateSizeHints" type="void" line="344">
                <params>
                    <param name="dims" type="WindowDimensions"/>
                </params>
                <declaration name="rec" type="Rectangle" line="345"/>
            </method>
            <method name="updateSizeHints" type="void" line="349"/>
            <method name="reshape" type="void" line="352">
                <params>
                    <param name="newDimensions" type="WindowDimensions"/>
                    <param name="op" type="int"/>
                    <param name="userReshape" type="boolean"/>
                </params>
                <scope line="353"/>
                <scope line="356">
                    <declaration name="newBounds" type="Rectangle" line="357"/>
                    <declaration name="insets" type="Insets" line="358"/>
                    <scope line="359"/>
                </scope>
                <scope line="365">
                    <scope line="366">
                        <declaration name="oldLocation" type="Point" line="368"/>
                        <declaration name="newLocation" type="Point" line="369"/>
                        <scope line="370"/>
                        <declaration name="client" type="Rectangle" line="375"/>
                        <scope line="378"/>
                    </scope>
                    <declaration name="wm" type="int" line="383"/>
                    <declaration name="shellRect" type="Rectangle" line="386"/>
                    <scope line="387">
                        <declaration name="in" type="Insets" line="388"/>
                    </scope>
                    <scope line="391"/>
                    <scope line="395"/>
                    <scope line="399"/>
                    <scope line="402">
                        <scope line="403"/>
                        <scope line="406"/>
                    </scope>
                    <scope line="410">
                        <scope line="412"/>
                    </scope>
                </scope>
                <scope line="418"/>
            </method>
            <javadoc line="422">
                @param x, y, width, heith - dimensions of the window with insets                
            </javadoc>
            <method name="reshape" type="void" line="425">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="operation" type="int"/>
                    <param name="userReshape" type="boolean"/>
                </params>
                <declaration name="newRec" type="Rectangle" line="426"/>
                <declaration name="setClient" type="boolean" line="427"/>
                <declaration name="dims" type="WindowDimensions" line="428"/>
                <scope line="437">
                    <declaration name="in" type="Insets" line="438"/>
                </scope>
            </method>
            <method name="isTargetUndecorated" type="boolean" line="453"/>
            <javadoc line="454">
                @see java.awt.peer.ComponentPeer#setBounds                
            </javadoc>
            <method name="setBounds" type="void" line="457">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="op" type="int"/>
                </params>
            </method>
            <method name="reconfigureContentWindow" type="void" line="461">
                <params>
                    <param name="dims" type="WindowDimensions"/>
                </params>
                <scope line="462"/>
            </method>
            <declaration name="no_reparent_artifacts" type="boolean" line="468"/>
            <method name="handleConfigureNotifyEvent" type="void" line="469">
                <params>
                    <param name="xev" type="XEvent"/>
                </params>
                <declaration name="xe" type="XConfigureEvent" line="471"/>
                <scope line="473"/>
                <scope line="476"/>
                <scope line="481"/>
                <declaration name="runningWM" type="int" line="485"/>
                <scope line="486"/>
                <scope line="489"/>
                <scope line="493">
                    <declaration name="parent" type="long" line="494"/>
                    <declaration name="correctWM" type="Insets" line="495"/>
                    <scope line="496">
                        <scope line="497"/>
                        <scope line="500"/>
                    </scope>
                    <scope line="504"/>
                    <scope line="507"/>
                </scope>
                <declaration name="targetBounds" type="Rectangle" line="512"/>
                <declaration name="newLocation" type="Point" line="513"/>
                <scope line="514"/>
                <scope line="517">
                    <scope line="523">
                        <declaration name="xlocation" type="Point" line="524"/>
                        <scope line="526"/>
                    </scope>
                </scope>
                <declaration name="newDimensions" type="WindowDimensions" line="535"/>
                <declaration name="oldLocation" type="Point" line="538"/>
                <scope line="540"/>
            </method>
            <method name="checkShellRectSize" type="void" line="547">
                <params>
                    <param name="shellRect" type="Rectangle"/>
                </params>
            </method>
            <method name="checkShellRectPos" type="void" line="551">
                <params>
                    <param name="shellRect" type="Rectangle"/>
                </params>
                <declaration name="wm" type="int" line="552"/>
                <scope line="553">
                    <scope line="554"/>
                </scope>
            </method>
            <method name="checkShellRect" type="void" line="559">
                <params>
                    <param name="shellRect" type="Rectangle"/>
                </params>
            </method>
            <method name="setShellBounds" type="void" line="563">
                <params>
                    <param name="rec" type="Rectangle"/>
                </params>
                <scope line="566"/>
                <scope line="571"/>
            </method>
            <method name="setShellSize" type="void" line="575">
                <params>
                    <param name="rec" type="Rectangle"/>
                </params>
                <scope line="578"/>
                <scope line="582"/>
            </method>
            <method name="setShellPosition" type="void" line="586">
                <params>
                    <param name="rec" type="Rectangle"/>
                </params>
                <scope line="589"/>
                <scope line="593"/>
            </method>
            <method name="initResizability" type="void" line="597"/>
            <method name="setResizable" type="void" line="600">
                <params>
                    <param name="resizable" type="boolean"/>
                </params>
                <declaration name="fs" type="int" line="601"/>
                <scope line="602">
                    <scope line="605"/>
                    <scope line="609"/>
                    <scope line="612"/>
                </scope>
                <scope line="618">
                    <scope line="621"/>
                    <scope line="625"/>
                    <scope line="628"/>
                </scope>
            </method>
            <method name="getShellBounds" type="Rectangle" line="635"/>
            <method name="getBounds" type="Rectangle" line="638"/>
            <method name="getSize" type="Dimension" line="641"/>
            <method name="getX" type="int" line="644"/>
            <method name="getY" type="int" line="647"/>
            <method name="getLocation" type="Point" line="650"/>
            <method name="getAbsoluteX" type="int" line="653"/>
            <method name="getAbsoluteY" type="int" line="656"/>
            <method name="getWidth" type="int" line="659"/>
            <method name="getHeight" type="int" line="662"/>
            <method name="getDimensions" type="WindowDimensions" line="665"/>
            <method name="getLocationOnScreen" type="Point" line="668">
                <scope line="670">
                    <scope line="671"/>
                    <scope line="674">
                        <declaration name="location" type="Point" line="675"/>
                    </scope>
                </scope>
                <scope line="680"/>
            </method>
            <javadoc line="684">
                END            OF             I N S E T S   C O D E                
            </javadoc>
            <method name="isEventDisabled" type="boolean" line="687">
                <params>
                    <param name="e" type="XEvent"/>
                </params>
            </method>
            <method name="getDecorations" type="int" line="698"/>
            <method name="getFunctions" type="int" line="701"/>
            <method name="setVisible" type="void" line="704">
                <params>
                    <param name="vis" type="boolean"/>
                </params>
                <scope line="706">
                    <scope line="709"/>
                </scope>
                <scope line="714"/>
            </method>
            <method name="suppressWmTakeFocus" type="void" line="718">
                <params>
                    <param name="doSuppress" type="boolean"/>
                </params>
                <declaration name="protocols" type="XAtomList" line="719"/>
                <scope line="720"/>
                <scope line="723"/>
            </method>
            <method name="dispose" type="void" line="728">
                <scope line="729"/>
                <scope line="733"/>
            </method>
            <method name="handleClientMessage" type="void" line="738">
                <params>
                    <param name="xev" type="XEvent"/>
                </params>
                <declaration name="cl" type="XClientMessageEvent" line="740"/>
                <scope line="741">
                    <scope line="742"/>
                    <scope line="745"/>
                </scope>
            </method>
            <method name="handleWmTakeFocus" type="void" line="750">
                <params>
                    <param name="cl" type="XClientMessageEvent"/>
                </params>
            </method>
            <javadoc line="754">
                Requests focus to this decorated top-level by requesting X input focus
                  to the shell window.                
            </javadoc>
            <method name="requestXFocus" type="void" line="758">
                <params>
                    <param name="time" type="long"/>
                    <param name="timeProvided" type="boolean"/>
                </params>
                <scope line="759"/>
                <scope line="762">
                    <scope line="764"/>
                    <scope line="767"/>
                </scope>
            </method>
            <method name="getFocusProxy" type="XFocusProxyWindow" line="772"/>
            <method name="handleQuit" type="void" line="775"/>
            <method name="dumpMe" type="void" line="778"/>
            <method name="dumpTarget" type="void" line="781">
                <declaration name="compAccessor" type="AWTAccessor.ComponentAccessor" line="782"/>
                <declaration name="getWidth" type="int" line="783"/>
                <declaration name="getHeight" type="int" line="784"/>
                <declaration name="getTargetX" type="int" line="785"/>
                <declaration name="getTargetY" type="int" line="786"/>
            </method>
            <method name="dumpShell" type="void" line="789"/>
            <method name="dumpContent" type="void" line="792"/>
            <method name="dumpParent" type="void" line="795">
                <declaration name="parent" type="long" line="796"/>
                <scope line="797"/>
                <scope line="800"/>
            </method>
            <method name="dumpWindow" type="void" line="804">
                <params>
                    <param name="id" type="String"/>
                    <param name="window" type="long"/>
                </params>
                <declaration name="pattr" type="XWindowAttributes" line="805"/>
                <scope line="806">
                    <scope line="808">
                        <declaration name="status" type="int" line="809"/>
                    </scope>
                    <scope line="811"/>
                </scope>
                <scope line="816"/>
            </method>
            <method name="dumpAll" type="void" line="820"/>
            <method name="isMaximized" type="boolean" line="827"/>
            <method name="isOverrideRedirect" type="boolean" line="830"/>
            <method name="requestWindowFocus" type="boolean" line="833">
                <params>
                    <param name="time" type="long"/>
                    <param name="timeProvided" type="boolean"/>
                </params>
                <declaration name="focusedWindow" type="Window" line="835"/>
                <declaration name="activeWindow" type="Window" line="836"/>
                <declaration name="toFocus" type="XWindowPeer" line="838"/>
                <scope line="839"/>
                <scope line="842"/>
                <scope line="845">
                    <scope line="846"/>
                    <scope line="850"/>
                    <declaration name="realNativeFocusedWindow" type="Window" line="855"/>
                    <scope line="857"/>
                </scope>
                <scope line="863"/>
                <scope line="866"/>
            </method>
            <declaration name="actualFocusedWindow" type="XWindowPeer" line="871"/>
            <method name="setActualFocusedWindow" type="void" line="872">
                <params>
                    <param name="actualFocusedWindow" type="XWindowPeer"/>
                </params>
                <scope line="873"/>
            </method>
            <method name="requestWindowFocus" type="boolean" line="877">
                <params>
                    <param name="actualFocusedWindow" type="XWindowPeer"/>
                    <param name="time" type="long"/>
                    <param name="timeProvided" type="boolean"/>
                </params>
            </method>
            <method name="handleWindowFocusIn" type="void" line="881">
                <params>
                    <param name="serial" type="long"/>
                </params>
                <scope line="882"/>
                <scope line="885">
                    <anonymous_class line="886">
                        <method name="run" type="void" line="887">
                            <declaration name="fw" type="XWindowPeer" line="888"/>
                            <scope line="889">
                                <scope line="892"/>
                            </scope>
                        </method>
                    </anonymous_class>
                </scope>
            </method>
            <method name="handleWindowFocusOut" type="void" line="902">
                <params>
                    <param name="oppositeWindow" type="Window"/>
                    <param name="serial" type="long"/>
                </params>
                <declaration name="actualFocusedWindow" type="Window" line="903"/>
                <scope line="904">
                    <declaration name="owner" type="Window" line="905"/>
                    <scope line="906"/>
                </scope>
            </method>
            <method name="queryXLocation" type="Point" line="912"/>
        </class>
    </source>