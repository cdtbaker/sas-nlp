<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.X11">
        <import package="java.awt"/>
        <import package="java.awt.event.ComponentEvent"/>
        <import package="java.awt.event.InvocationEvent"/>
        <import package="java.awt.event.WindowEvent"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <import package="sun.awt.AWTAccessor"/>
        <import package="sun.awt.SunToolkit"/>
        <class name="XDecoratedPeer" line="38">
            <extends class="XWindowPeer"/>
            <comment line="45">
                Set to true when we get the first ConfigureNotify after being
                 reparented - indicates that WM has adopted the top-level.                
            </comment>
            <comment line="213">
                NOTE: This method may be called by privileged threads.
                       DO NOT INVOKE CLIENT CODE ON THIS THREAD!                
            </comment>
            <comment line="219">
                NOTE: This method may be called by privileged threads.
                       DO NOT INVOKE CLIENT CODE ON THIS THREAD!                
            </comment>
            <comment line="255">
                insets which we get from WM (e.g from _NET_FRAME_EXTENTS)                
            </comment>
            <comment line="469">
                The height of area used to display current active input method                
            </comment>
            <comment line="484">
                Coordinates are that of the target
                 Called only on Toolkit thread                
            </comment>
            <comment line="623">
                This method gets overriden in XFramePeer &amp; XDialogPeer.                
            </comment>
            <comment line="635">
                Coordinates are that of the shell                
            </comment>
            <declaration name="log" type="PlatformLogger" line="39"/>
            <declaration name="insLog" type="PlatformLogger" line="40"/>
            <declaration name="focusLog" type="PlatformLogger" line="41"/>
            <declaration name="iconLog" type="PlatformLogger" line="42"/>
            <declaration name="configure_seen" type="boolean" line="46"/>
            <declaration name="insets_corrected" type="boolean" line="47"/>
            <declaration name="iconWindow" type="XIconWindow" line="49"/>
            <declaration name="dimensions" type="WindowDimensions" line="50"/>
            <declaration name="content" type="XContentWindow" line="51"/>
            <declaration name="currentInsets" type="Insets" line="52"/>
            <declaration name="focusProxy" type="XFocusProxyWindow" line="53"/>
            <method name="XDecoratedPeer" type="constructor" line="55">
                <params>
                    <param name="target" type="Window"/>
                </params>
            </method>
            <method name="XDecoratedPeer" type="constructor" line="59">
                <params>
                    <param name="params" type="XCreateWindowParams"/>
                </params>
            </method>
            <method name="getShell" type="long" line="63"/>
            <method name="getContentWindow" type="long" line="67"/>
            <method name="preInit" type="void" line="71">
                <params>
                    <param name="params" type="XCreateWindowParams"/>
                </params>
                <comment line="84">
                    Deny default processing of these events on the shell - proxy will take care of
                     them instead                    
                </comment>
                <declaration name="bounds" type="Rectangle" line="78"/>
                <declaration name="eventMask" type="Long" line="85"/>
            </method>
            <method name="postInit" type="void" line="89">
                <params>
                    <param name="params" type="XCreateWindowParams"/>
                </params>
                <comment line="91">
                    The size hints must be set BEFORE mapping the window (see 6895647)                    
                </comment>
                <comment line="94">
                    The super method maps the window if it&apos;s visible on the shared level                    
                </comment>
                <comment line="97">
                    The lines that follow need to be in a postInit, so they
                     happen after the X window is created.                    
                </comment>
                <scope line="103"/>
            </method>
            <method name="setIconHints" type="void" line="109">
                <params>
                    <param name="icons" type="java.util.List&lt;XIconInfo&gt;"/>
                </params>
                <scope line="110">
                    <scope line="111">
                        <scope line="112"/>
                    </scope>
                </scope>
            </method>
            <method name="updateMinimumSize" type="void" line="120"/>
            <method name="updateMinSizeHints" type="void" line="125">
                <comment line="148">
                                        
                </comment>
                <comment line="150">
                    Do the remapping at the Xlib level.  Since we essentially
                     work around a WM bug we don&apos;t want this hack to be exposed
                     to Intrinsics (i.e. don&apos;t mess with grabs, callbacks etc).                    
                </comment>
                <scope line="126">
                    <declaration name="minimumSize" type="Dimension" line="127"/>
                    <scope line="128">
                        <declaration name="insets" type="Insets" line="129"/>
                        <declaration name="minWidth" type="int" line="130"/>
                        <declaration name="minHeight" type="int" line="131"/>
                        <scope line="136">
                            <declaration name="bounds" type="Rectangle" line="137"/>
                            <declaration name="nw" type="int" line="138"/>
                            <declaration name="nh" type="int" line="139"/>
                            <scope line="140"/>
                        </scope>
                    </scope>
                    <scope line="144">
                        <declaration name="isMinSizeSet" type="boolean" line="145"/>
                        <scope line="148"/>
                    </scope>
                </scope>
            </method>
            <method name="createFocusProxy" type="XFocusProxyWindow" line="162"/>
            <method name="getWMProtocols" type="XAtomList" line="166">
                <declaration name="protocols" type="XAtomList" line="167"/>
            </method>
            <method name="getGraphics" type="Graphics" line="173">
                <declaration name="compAccessor" type="AWTAccessor.ComponentAccessor" line="174"/>
            </method>
            <method name="setTitle" type="void" line="181">
                <params>
                    <param name="title" type="String"/>
                </params>
            </method>
            <method name="getWMName" type="String" line="187">
                <scope line="188"/>
                <scope line="190"/>
            </method>
            <method name="updateWMName" type="void" line="195">
                <declaration name="name" type="String" line="197"/>
                <scope line="199">
                    <scope line="200"/>
                    <declaration name="iconNameAtom" type="XAtom" line="203"/>
                    <declaration name="netIconNameAtom" type="XAtom" line="205"/>
                </scope>
                <scope line="207"/>
            </method>
            <method name="handleIconify" type="void" line="214"/>
            <method name="handleDeiconify" type="void" line="220"/>
            <method name="handleFocusEvent" type="void" line="224">
                <params>
                    <param name="xev" type="XEvent"/>
                </params>
                <comment line="229">
                    If we somehow received focus events forward it instead to proxy
                     FIXME: Shouldn&apos;t we instead check for inferrior?                    
                </comment>
                <comment line="232">
                    focusProxy.xRequestFocus();                    
                </comment>
                <declaration name="xfe" type="XFocusChangeEvent" line="226"/>
            </method>
            <javadoc line="234">
                I N S E T S   C O D E                
            </javadoc>
            <method name="isInitialReshape" type="boolean" line="238"/>
            <method name="difference" type="Insets" line="242">
                <params>
                    <param name="i1" type="Insets"/>
                    <param name="i2" type="Insets"/>
                </params>
            </method>
            <method name="isNull" type="boolean" line="246">
                <params>
                    <param name="i" type="Insets"/>
                </params>
            </method>
            <method name="copy" type="Insets" line="250">
                <params>
                    <param name="i" type="Insets"/>
                </params>
            </method>
            <declaration name="wm_set_insets" type="Insets" line="255"/>
            <method name="getWMSetInsets" type="Insets" line="257">
                <params>
                    <param name="changedAtom" type="XAtom"/>
                </params>
                <scope line="258"/>
                <scope line="262"/>
                <scope line="266"/>
                <scope line="268"/>
                <scope line="274"/>
            </method>
            <method name="resetWMSetInsets" type="void" line="280"/>
            <method name="handlePropertyNotify" type="void" line="284">
                <params>
                    <param name="xev" type="XEvent"/>
                </params>
                <declaration name="ev" type="XPropertyEvent" line="287"/>
                <scope line="290"/>
            </method>
            <declaration name="reparent_serial" type="long" line="295"/>
            <method name="handleReparentNotifyEvent" type="void" line="297">
                <params>
                    <param name="xev" type="XEvent"/>
                </params>
                <comment line="320">
                    We can be repareted to root for two reasons:
                       . setVisible(false)
                       . WM exited                    
                </comment>
                <comment line="325">
                                        
                </comment>
                <comment line="326">
                                        
                </comment>
                <comment line="332">
                                        
                </comment>
                <comment line="336">
                    Check if we have insets provided by the WM                    
                </comment>
                <comment line="340">
                    If these insets are equal to our current insets - no actions are necessary                    
                </comment>
                <declaration name="xe" type="XReparentEvent" line="298"/>
                <scope line="302">
                    <declaration name="root" type="long" line="303"/>
                    <scope line="305"/>
                    <declaration name="t" type="Component" line="310"/>
                    <scope line="311"/>
                    <scope line="315">
                        <scope line="324"/>
                        <scope line="328"/>
                    </scope>
                    <scope line="331">
                        <declaration name="correctWM" type="Insets" line="336"/>
                        <scope line="337">
                            <declaration name="dimInsets" type="Insets" line="340"/>
                            <scope line="341"/>
                        </scope>
                        <scope line="348">
                            <scope line="351"/>
                            <scope line="353"/>
                        </scope>
                        <scope line="358"/>
                    </scope>
                </scope>
                <scope line="362"/>
            </method>
            <method name="handleCorrectInsets" type="void" line="367">
                <params>
                    <param name="correctWM" type="Insets"/>
                </params>
                <comment line="371">
                    Ok, now see if we need adjust window size because
                     initial insets were wrong (most likely they were).                    
                </comment>
                <comment line="381">
                    Fix for 6318109: PIT: Min Size is not honored properly when a
                    smaller size is specified in setSize(), XToolkit
                    update minimum size hints                    
                </comment>
                <comment line="395">
                    If this window has been sized by a pack() we need
                     to keep the interior geometry intact.  Since pack()
                     computed width and height with wrong insets, we
                     must adjust the target dimensions appropriately.                    
                </comment>
                <scope line="369">
                    <declaration name="correction" type="Insets" line="374"/>
                    <scope line="376"/>
                    <scope line="390"/>
                    <scope line="400"/>
                    <scope line="402"/>
                </scope>
                <scope line="405"/>
            </method>
            <method name="handleMoved" type="void" line="410">
                <params>
                    <param name="dims" type="WindowDimensions"/>
                </params>
                <declaration name="loc" type="Point" line="411"/>
            </method>
            <method name="guessInsets" type="Insets" line="417">
                <comment line="423">
                                        
                </comment>
                <scope line="418"/>
                <scope line="420">
                    <scope line="421"/>
                    <scope line="424">
                        <declaration name="res" type="Insets" line="425"/>
                        <scope line="426"/>
                    </scope>
                </scope>
            </method>
            <method name="applyGuessedInsets" type="void" line="434">
                <declaration name="guessed" type="Insets" line="435"/>
            </method>
            <method name="revalidate" type="void" line="439">
                <anonymous_class line="440">
                    <method name="run" type="void" line="441"/>
                </anonymous_class>
            </method>
            <method name="getRealInsets" type="Insets" line="448">
                <scope line="449"/>
            </method>
            <method name="getInsets" type="Insets" line="455">
                <declaration name="in" type="Insets" line="456"/>
                <scope line="458"/>
            </method>
            <method name="gravityBug" type="boolean" line="464"/>
            <method name="getInputMethodHeight" type="int" line="469"/>
            <method name="updateSizeHints" type="void" line="473">
                <params>
                    <param name="dims" type="WindowDimensions"/>
                </params>
                <declaration name="rec" type="Rectangle" line="474"/>
            </method>
            <method name="updateSizeHints" type="void" line="479"/>
            <method name="reshape" type="void" line="487">
                <params>
                    <param name="newDimensions" type="WindowDimensions"/>
                    <param name="op" type="int"/>
                    <param name="userReshape" type="boolean"/>
                </params>
                <comment line="493">
                    We handle only userReshape == true cases. It means that
                     if the window manager or any other part of the windowing
                     system sets inappropriate size for this window, we can
                     do nothing but accept it.                    
                </comment>
                <comment line="499">
                    Inherit isClientSizeSet from newDimensions                    
                </comment>
                <comment line="513">
                    Fix for 6323293.
                     This actually is needed to preserve compatibility with previous releases -
                     some of licensees are expecting componentMoved event on invisible one while
                     its location changes.                    
                </comment>
                <scope line="488"/>
                <scope line="491">
                    <declaration name="newBounds" type="Rectangle" line="496"/>
                    <declaration name="insets" type="Insets" line="497"/>
                    <scope line="499"/>
                </scope>
                <scope line="507">
                    <scope line="508">
                        <declaration name="oldLocation" type="Point" line="516"/>
                        <declaration name="newLocation" type="Point" line="518"/>
                        <scope line="521"/>
                        <declaration name="client" type="Rectangle" line="527"/>
                        <scope line="532"/>
                    </scope>
                    <declaration name="wm" type="int" line="538"/>
                    <declaration name="shellRect" type="Rectangle" line="542"/>
                    <scope line="544">
                        <declaration name="in" type="Insets" line="545"/>
                    </scope>
                    <scope line="549"/>
                    <scope line="554"/>
                    <scope line="560"/>
                    <scope line="562">
                        <scope line="563"/>
                        <scope line="565"/>
                    </scope>
                    <scope line="568">
                        <scope line="570"/>
                    </scope>
                </scope>
                <scope line="576"/>
            </method>
            <javadoc line="581">
                @param x, y, width, heith - dimensions of the window with insets                
            </javadoc>
            <method name="reshape" type="void" line="586">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="operation" type="int"/>
                    <param name="userReshape" type="boolean"/>
                </params>
                <comment line="593">
                    Set location always sets bounds location. However, until the window is mapped we
                     should use client coordinates                    
                </comment>
                <comment line="598">
                    Set size sets bounds size. However, until the window is mapped we
                     should use client coordinates                    
                </comment>
                <comment line="603">
                    Sets client rect size. Width and height contain insets.                    
                </comment>
                <declaration name="newRec" type="Rectangle" line="587"/>
                <declaration name="setClient" type="boolean" line="588"/>
                <declaration name="dims" type="WindowDimensions" line="589"/>
                <scope line="601">
                    <declaration name="in" type="Insets" line="603"/>
                </scope>
            </method>
            <method name="isTargetUndecorated" type="boolean" line="623"/>
            <javadoc line="625">
                @see java.awt.peer.ComponentPeer#setBounds                
            </javadoc>
            <method name="setBounds" type="void" line="628">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="op" type="int"/>
                </params>
                <comment line="630">
                    TODO: Rewrite with WindowDimensions                    
                </comment>
            </method>
            <method name="reconfigureContentWindow" type="void" line="635">
                <params>
                    <param name="dims" type="WindowDimensions"/>
                </params>
                <scope line="636"/>
            </method>
            <declaration name="no_reparent_artifacts" type="boolean" line="643"/>
            <method name="handleConfigureNotifyEvent" type="void" line="644">
                <params>
                    <param name="xev" type="XEvent"/>
                </params>
                <comment line="650">
                    XXX: should really only consider synthetic events, but                    
                </comment>
                <comment line="664">
                    When there is a WM we receive some CN before being visible and after.
                     We should skip all CN which are before being visible, because we assume
                     the gravity is in action while it is not yet.
                    
                     When there is no WM we receive CN only _before_ being visible.
                     We should process these CNs.                    
                </comment>
                <comment line="677">
                    Some window managers configure before we are reparented and
                     the send event flag is set! ugh... (Enlighetenment for one,
                     possibly MWM as well).  If we haven&apos;t been reparented yet
                     this is just the WM shuffling us into position.  Ignore
                     it!!!! or we wind up in a bogus location.                    
                </comment>
                <comment line="695">
                    Last chance to correct insets                    
                </comment>
                <comment line="709">
                    Only one attempt to correct insets is made (to lower risk)
                    if insets are still not available we simply set the flag                    
                </comment>
                <comment line="717">
                    Bounds of the window                    
                </comment>
                <comment line="722">
                    Location, Client size + insets                    
                </comment>
                <comment line="725">
                    CDE/MWM/Metacity/Sawfish bug: if shell is resized using
                     top or left border, we don&apos;t receive synthetic
                     ConfigureNotify, only the one from X with zero
                     coordinates.  This is the workaround to get real
                     location, 6261336                    
                </comment>
                <declaration name="xe" type="XConfigureEvent" line="646"/>
                <scope line="650"/>
                <scope line="657"/>
                <scope line="671"/>
                <declaration name="runningWM" type="int" line="683"/>
                <scope line="684"/>
                <scope line="690"/>
                <scope line="695">
                    <declaration name="parent" type="long" line="696"/>
                    <declaration name="correctWM" type="Insets" line="697"/>
                    <scope line="698">
                        <scope line="699"/>
                        <scope line="701"/>
                    </scope>
                    <scope line="705"/>
                    <scope line="707"/>
                </scope>
                <declaration name="targetBounds" type="Rectangle" line="717"/>
                <declaration name="newLocation" type="Point" line="719"/>
                <scope line="720"/>
                <scope line="723">
                    <scope line="734">
                        <declaration name="xlocation" type="Point" line="735"/>
                        <scope line="737"/>
                    </scope>
                </scope>
                <declaration name="newDimensions" type="WindowDimensions" line="747"/>
                <declaration name="oldLocation" type="Point" line="758"/>
                <scope line="760"/>
            </method>
            <method name="checkShellRectSize" type="void" line="769">
                <params>
                    <param name="shellRect" type="Rectangle"/>
                </params>
            </method>
            <method name="checkShellRectPos" type="void" line="774">
                <params>
                    <param name="shellRect" type="Rectangle"/>
                </params>
                <declaration name="wm" type="int" line="775"/>
                <scope line="776">
                    <scope line="777"/>
                </scope>
            </method>
            <method name="checkShellRect" type="void" line="783">
                <params>
                    <param name="shellRect" type="Rectangle"/>
                </params>
            </method>
            <method name="setShellBounds" type="void" line="788">
                <params>
                    <param name="rec" type="Rectangle"/>
                </params>
                <scope line="792"/>
                <scope line="797"/>
            </method>
            <method name="setShellSize" type="void" line="801">
                <params>
                    <param name="rec" type="Rectangle"/>
                </params>
                <scope line="805"/>
                <scope line="809"/>
            </method>
            <method name="setShellPosition" type="void" line="813">
                <params>
                    <param name="rec" type="Rectangle"/>
                </params>
                <scope line="817"/>
                <scope line="821"/>
            </method>
            <method name="initResizability" type="void" line="826"/>
            <method name="setResizable" type="void" line="829">
                <params>
                    <param name="resizable" type="boolean"/>
                </params>
                <declaration name="fs" type="int" line="830"/>
                <scope line="831">
                    <scope line="834"/>
                    <scope line="838"/>
                    <scope line="840"/>
                </scope>
                <scope line="845">
                    <scope line="848"/>
                    <scope line="852"/>
                    <scope line="854"/>
                </scope>
            </method>
            <method name="getShellBounds" type="Rectangle" line="862"/>
            <method name="getBounds" type="Rectangle" line="866"/>
            <method name="getSize" type="Dimension" line="870"/>
            <method name="getX" type="int" line="874"/>
            <method name="getY" type="int" line="878"/>
            <method name="getLocation" type="Point" line="882"/>
            <method name="getAbsoluteX" type="int" line="886">
                <comment line="888">
                    NOTE: returning this peer&apos;s location which is shell location                    
                </comment>
            </method>
            <method name="getAbsoluteY" type="int" line="891">
                <comment line="893">
                    NOTE: returning this peer&apos;s location which is shell location                    
                </comment>
            </method>
            <method name="getWidth" type="int" line="896"/>
            <method name="getHeight" type="int" line="900"/>
            <method name="getDimensions" type="WindowDimensions" line="904"/>
            <method name="getLocationOnScreen" type="Point" line="908">
                <scope line="910">
                    <scope line="911"/>
                    <scope line="913">
                        <declaration name="location" type="Point" line="914"/>
                    </scope>
                </scope>
                <scope line="920"/>
            </method>
            <javadoc line="926">
                END            OF             I N S E T S   C O D E                
            </javadoc>
            <method name="isEventDisabled" type="boolean" line="930">
                <params>
                    <param name="e" type="XEvent"/>
                </params>
                <comment line="933">
                    Do not generate MOVED/RESIZED events since we generate them by ourselves                    
                </comment>
                <comment line="938">
                    Disable crossing event on outer borders of Frame so
                     we receive only one set of cross notifications(first set is from content window)                    
                </comment>
            </method>
            <method name="getDecorations" type="int" line="945"/>
            <method name="getFunctions" type="int" line="949"/>
            <method name="setVisible" type="void" line="953">
                <params>
                    <param name="vis" type="boolean"/>
                </params>
                <comment line="960">
                    Fix for 4320050: Minimum size for java.awt.Frame is not being enforced.
                    We need to update frame&apos;s minimum size, not to reset it                    
                </comment>
                <scope line="955">
                    <scope line="958"/>
                </scope>
                <scope line="964"/>
            </method>
            <method name="suppressWmTakeFocus" type="void" line="969">
                <params>
                    <param name="doSuppress" type="boolean"/>
                </params>
                <declaration name="protocols" type="XAtomList" line="970"/>
                <scope line="971"/>
                <scope line="973"/>
            </method>
            <method name="dispose" type="void" line="979">
                <scope line="980"/>
                <scope line="985"/>
            </method>
            <method name="handleClientMessage" type="void" line="992">
                <params>
                    <param name="xev" type="XEvent"/>
                </params>
                <declaration name="cl" type="XClientMessageEvent" line="994"/>
                <scope line="995">
                    <scope line="996"/>
                    <scope line="998"/>
                </scope>
            </method>
            <method name="handleWmTakeFocus" type="void" line="1004">
                <params>
                    <param name="cl" type="XClientMessageEvent"/>
                </params>
            </method>
            <javadoc line="1009">
                Requests focus to this decorated top-level by requesting X input focus
                  to the shell window.                
            </javadoc>
            <method name="requestXFocus" type="void" line="1013">
                <params>
                    <param name="time" type="long"/>
                    <param name="timeProvided" type="boolean"/>
                </params>
                <comment line="1015">
                    We have proxied focus mechanism - instead of shell the focus is held
                     by &quot;proxy&quot; - invisible mapped window. When we want to set X input focus to
                     toplevel set it on proxy instead.                    
                </comment>
                <scope line="1017"/>
                <scope line="1019">
                    <scope line="1021"/>
                    <scope line="1023"/>
                </scope>
            </method>
            <method name="getFocusProxy" type="XFocusProxyWindow" line="1029"/>
            <method name="handleQuit" type="void" line="1033"/>
            <method name="dumpMe" type="void" line="1037"/>
            <method name="dumpTarget" type="void" line="1041">
                <declaration name="compAccessor" type="AWTAccessor.ComponentAccessor" line="1042"/>
                <declaration name="getWidth" type="int" line="1043"/>
                <declaration name="getHeight" type="int" line="1044"/>
                <declaration name="getTargetX" type="int" line="1045"/>
                <declaration name="getTargetY" type="int" line="1046"/>
            </method>
            <method name="dumpShell" type="void" line="1050"/>
            <method name="dumpContent" type="void" line="1053"/>
            <method name="dumpParent" type="void" line="1056">
                <declaration name="parent" type="long" line="1057"/>
                <scope line="1059"/>
                <scope line="1063"/>
            </method>
            <method name="dumpWindow" type="void" line="1068">
                <params>
                    <param name="id" type="String"/>
                    <param name="window" type="long"/>
                </params>
                <declaration name="pattr" type="XWindowAttributes" line="1069"/>
                <scope line="1070">
                    <scope line="1072">
                        <declaration name="status" type="int" line="1073"/>
                    </scope>
                    <scope line="1077"/>
                </scope>
                <scope line="1083"/>
            </method>
            <method name="dumpAll" type="void" line="1088"/>
            <method name="isMaximized" type="boolean" line="1096"/>
            <method name="isOverrideRedirect" type="boolean" line="1101"/>
            <method name="requestWindowFocus" type="boolean" line="1105">
                <params>
                    <param name="time" type="long"/>
                    <param name="timeProvided" type="boolean"/>
                </params>
                <comment line="1108">
                    If this is Frame or Dialog we can&apos;t assure focus request success - but we still can try
                     If this is Window and its owner Frame is active we can be sure request succedded.                    
                </comment>
                <comment line="1122">
                    This might change when WM will have property to determine focus policy.
                     Right now, because policy is unknown we can&apos;t be sure we succedded                    
                </comment>
                <comment line="1132">
                    Happens when an owned window is currently focused                    
                </comment>
                <comment line="1141">
                    See 6522725, 6613426.                    
                </comment>
                <declaration name="focusedWindow" type="Window" line="1109"/>
                <declaration name="activeWindow" type="Window" line="1110"/>
                <declaration name="toFocus" type="XWindowPeer" line="1116"/>
                <scope line="1117"/>
                <scope line="1120"/>
                <scope line="1125">
                    <scope line="1126"/>
                    <scope line="1130"/>
                    <declaration name="realNativeFocusedWindow" type="Window" line="1136"/>
                    <scope line="1141"/>
                </scope>
                <scope line="1148"/>
                <scope line="1150"/>
            </method>
            <declaration name="actualFocusedWindow" type="XWindowPeer" line="1156"/>
            <method name="setActualFocusedWindow" type="void" line="1157">
                <params>
                    <param name="actualFocusedWindow" type="XWindowPeer"/>
                </params>
                <scope line="1158"/>
            </method>
            <method name="requestWindowFocus" type="boolean" line="1165">
                <params>
                    <param name="actualFocusedWindow" type="XWindowPeer"/>
                    <param name="time" type="long"/>
                    <param name="timeProvided" type="boolean"/>
                </params>
            </method>
            <method name="handleWindowFocusIn" type="void" line="1169">
                <params>
                    <param name="serial" type="long"/>
                </params>
                <comment line="1174">
                    Fix for 6314575.
                     If this is a result of clicking on one of the Frame&apos;s component
                     then &apos;actualFocusedWindow&apos; shouldn&apos;t be focused. A decision of focusing
                     it or not should be made after the appropriate Java mouse event (if any)
                     is handled by the component where &apos;actualFocusedWindow&apos; value may be reset.
                    
                     The fix is based on the empiric fact consisting in that the component
                     receives native mouse event nearly at the same time the Frame receives
                     WM_TAKE_FOCUS (when FocusIn is generated via XSetInputFocus call) but
                     definetely before the Frame gets FocusIn event (when this method is called).                    
                </comment>
                <scope line="1170"/>
                <scope line="1172">
                    <anonymous_class line="1185">
                        <method name="run" type="void" line="1186">
                            <declaration name="fw" type="XWindowPeer" line="1187"/>
                            <scope line="1188">
                                <scope line="1191"/>
                            </scope>
                        </method>
                    </anonymous_class>
                </scope>
            </method>
            <method name="handleWindowFocusOut" type="void" line="1201">
                <params>
                    <param name="oppositeWindow" type="Window"/>
                    <param name="serial" type="long"/>
                </params>
                <comment line="1205">
                    If the actual focused window is not this decorated window then retain it.                    
                </comment>
                <declaration name="actualFocusedWindow" type="Window" line="1202"/>
                <scope line="1205">
                    <declaration name="owner" type="Window" line="1206"/>
                    <scope line="1208"/>
                </scope>
            </method>
            <method name="queryXLocation" type="Point" line="1216"/>
        </class>
    </source>