<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.opengl">
        <import package="java.awt.BufferCapabilities"/>
        <import package="java.awt.BufferCapabilities.FlipContents"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.GraphicsConfiguration"/>
        <import package="java.awt.Transparency"/>
        <import package="java.awt.image.ColorModel"/>
        <import package="sun.awt.image.SunVolatileImage"/>
        <import package="sun.awt.image.VolatileSurfaceManager"/>
        <import package="sun.awt.windows.WComponentPeer"/>
        <import package="sun.java2d.SurfaceData"/>
        <import package="sun.java2d.opengl.OGLContext.OGLContextCaps"/>
        <import package="sun.java2d.pipe.hw.AccelSurface"/>
        <import package="sun.java2d.pipe.hw.ExtendedBufferCapabilities"/>
        <import package="sun.java2d.pipe.hw.ExtendedBufferCapabilities.VSyncType"/>
        <class name="WGLVolatileSurfaceManager" line="16">
            <extends class="VolatileSurfaceManager"/>
            <declaration name="accelerationEnabled" type="boolean" line="17"/>
            <method name="WGLVolatileSurfaceManager" type="constructor" line="18">
                <params>
                    <param name="vImg" type="SunVolatileImage"/>
                    <param name="context" type="Object"/>
                </params>
                <declaration name="transparency" type="int" line="20"/>
                <declaration name="gc" type="WGLGraphicsConfig" line="21"/>
            </method>
            <method name="isAccelerationEnabled" type="boolean" line="24"/>
            <javadoc line="27">
                Create a pbuffer-based SurfaceData object (or init the backbuffer
                  of an existing window if this is a double buffered GraphicsConfig).                
            </javadoc>
            <method name="initAcceleratedSurface" type="SurfaceData" line="31">
                <declaration name="sData" type="SurfaceData" line="32"/>
                <declaration name="comp" type="Component" line="33"/>
                <declaration name="peer" type="WComponentPeer" line="34"/>
                <scope line="35">
                    <declaration name="createVSynced" type="boolean" line="36"/>
                    <declaration name="forceback" type="boolean" line="37"/>
                    <scope line="38">
                        <scope line="40">
                            <declaration name="caps" type="BufferCapabilities" line="41"/>
                            <scope line="42">
                                <declaration name="ebc" type="ExtendedBufferCapabilities" line="43"/>
                                <scope line="44"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="51"/>
                    <scope line="54">
                        <declaration name="gc" type="WGLGraphicsConfig" line="55"/>
                        <declaration name="cm" type="ColorModel" line="56"/>
                        <declaration name="type" type="int" line="57"/>
                        <scope line="58"/>
                        <scope line="61"/>
                        <scope line="64"/>
                    </scope>
                </scope>
                <scope line="69"/>
                <scope line="72"/>
            </method>
            <method name="isConfigValid" type="boolean" line="77">
                <params>
                    <param name="gc" type="GraphicsConfiguration"/>
                </params>
            </method>
            <method name="initContents" type="void" line="80">
                <scope line="81"/>
            </method>
        </class>
    </source>