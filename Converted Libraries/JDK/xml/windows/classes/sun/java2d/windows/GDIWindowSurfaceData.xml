<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.windows">
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.GraphicsConfiguration"/>
        <import package="java.awt.color.ColorSpace"/>
        <import package="java.awt.image.ColorModel"/>
        <import package="java.awt.image.ComponentColorModel"/>
        <import package="java.awt.image.DirectColorModel"/>
        <import package="java.awt.image.IndexColorModel"/>
        <import package="java.awt.image.Raster"/>
        <import package="sun.awt.SunHints"/>
        <import package="sun.awt.Win32GraphicsConfig"/>
        <import package="sun.awt.Win32GraphicsDevice"/>
        <import package="sun.awt.windows.WComponentPeer"/>
        <import package="sun.java2d.ScreenUpdateManager"/>
        <import package="sun.java2d.SunGraphics2D"/>
        <import package="sun.java2d.SurfaceData"/>
        <import package="sun.java2d.SurfaceDataProxy"/>
        <import package="sun.java2d.pipe.Region"/>
        <import package="sun.java2d.pipe.PixelToShapeConverter"/>
        <import package="sun.java2d.loops.GraphicsPrimitive"/>
        <import package="sun.java2d.loops.SurfaceType"/>
        <import package="sun.java2d.loops.CompositeType"/>
        <import package="sun.java2d.loops.RenderLoops"/>
        <import package="sun.java2d.loops.XORComposite"/>
        <class name="GDIWindowSurfaceData" line="25">
            <extends class="SurfaceData"/>
            <declaration name="peer" type="WComponentPeer" line="26"/>
            <declaration name="graphicsConfig" type="Win32GraphicsConfig" line="27"/>
            <declaration name="solidloops" type="RenderLoops" line="28"/>
            <declaration name="DESC_GDI" type="String" line="29"/>
            <declaration name="AnyGdi" type="SurfaceType" line="30"/>
            <declaration name="IntRgbGdi" type="SurfaceType" line="31"/>
            <declaration name="Ushort565RgbGdi" type="SurfaceType" line="32"/>
            <declaration name="Ushort555RgbGdi" type="SurfaceType" line="33"/>
            <declaration name="ThreeByteBgrGdi" type="SurfaceType" line="34"/>
            <method name="initIDs" type="void" line="35"/>
            <scope line="36">
                <scope line="38"/>
            </scope>
            <method name="getSurfaceType" type="SurfaceType" line="42">
                <params>
                    <param name="cm" type="ColorModel"/>
                </params>
                <scope line="46">
                    <scope line="47"/>
                    <scope line="50"/>
                </scope>
                <scope line="54"/>
                <scope line="60"/>
                <scope line="63"/>
                <scope line="67"/>
                <scope line="70"/>
                <scope line="73"/>
            </method>
            <method name="createData" type="GDIWindowSurfaceData" line="80">
                <params>
                    <param name="peer" type="WComponentPeer"/>
                </params>
                <declaration name="sType" type="SurfaceType" line="81"/>
            </method>
            <method name="makeProxyFor" type="SurfaceDataProxy" line="84">
                <params>
                    <param name="srcData" type="SurfaceData"/>
                </params>
            </method>
            <method name="getRaster" type="Raster" line="87">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <declaration name="gdiPipe" type="GDIRenderer" line="90"/>
            <declaration name="gdiTxPipe" type="PixelToShapeConverter" line="91"/>
            <scope line="92">
                <scope line="94"/>
            </scope>
            <method name="validatePipe" type="void" line="99">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                </params>
                <scope line="100">
                    <scope line="101"/>
                    <scope line="104"/>
                    <scope line="128"/>
                    <scope line="132"/>
                    <scope line="136"/>
                    <scope line="141"/>
                </scope>
                <scope line="145"/>
            </method>
            <method name="getRenderLoops" type="RenderLoops" line="149">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                </params>
                <scope line="150"/>
            </method>
            <method name="getDeviceConfiguration" type="GraphicsConfiguration" line="155"/>
            <method name="initOps" type="void" line="158"/>
            <javadoc line="158">
                Initializes the native Ops pointer.                
            </javadoc>
            <method name="GDIWindowSurfaceData" type="constructor" line="162">
                <params>
                    <param name="peer" type="WComponentPeer"/>
                    <param name="sType" type="SurfaceType"/>
                </params>
                <declaration name="cm" type="ColorModel" line="164"/>
                <declaration name="rMask" type="int" line="166"/>
                <declaration name="depth" type="int" line="167"/>
                <scope line="171"/>
                <scope line="174"/>
                <scope line="181">
                    <declaration name="dcm" type="DirectColorModel" line="182"/>
                </scope>
                <declaration name="gd" type="Win32GraphicsDevice" line="189"/>
            </method>
            <javadoc line="193">
                {@inheritDoc}Overridden to use ScreenUpdateManager to obtain the replacement surface.                
                <see>
                    sun.java2d.ScreenUpdateManager#getReplacementScreenSurface                    
                </see>
            </javadoc>
            <method name="getReplacement" type="SurfaceData" line="197">
                <declaration name="mgr" type="ScreenUpdateManager" line="198"/>
            </method>
            <method name="getBounds" type="Rectangle" line="201">
                <declaration name="r" type="Rectangle" line="202"/>
            </method>
            <method name="copyArea" type="boolean" line="206">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="dx" type="int"/>
                    <param name="dy" type="int"/>
                </params>
                <declaration name="comptype" type="CompositeType" line="207"/>
                <scope line="208">
                    <declaration name="dstx1" type="int" line="211"/>
                    <declaration name="dsty1" type="int" line="212"/>
                    <declaration name="dstx2" type="int" line="213"/>
                    <declaration name="dsty2" type="int" line="214"/>
                    <declaration name="clip" type="Region" line="215"/>
                    <scope line="220"/>
                </scope>
            </method>
            <method name="invalidateSD" type="void" line="227"/>
            <method name="invalidate" type="void" line="228">
                <scope line="229"/>
            </method>
            <javadoc line="234">
                Returns destination Component associated with this SurfaceData.                
            </javadoc>
            <method name="getDestination" type="Object" line="237"/>
            <method name="getPeer" type="WComponentPeer" line="240"/>
        </class>
    </source>