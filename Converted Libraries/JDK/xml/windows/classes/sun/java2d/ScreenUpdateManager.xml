<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d">
        <import package="java.awt.Color"/>
        <import package="java.awt.Font"/>
        <import package="java.awt.Graphics2D"/>
        <import package="sun.awt.Win32GraphicsConfig"/>
        <import package="sun.awt.windows.WComponentPeer"/>
        <import package="sun.java2d.d3d.D3DScreenUpdateManager"/>
        <import package="sun.java2d.windows.WindowsFlags"/>
        <class name="ScreenUpdateManager" line="9">
            <javadoc line="9">
                This class handles the creation of on-screen surfaces and
                  corresponding graphics objects.
                  By default it delegates the surface creation to the
                  particular GraphicsConfiguration classes.                
            </javadoc>
            <declaration name="theInstance" type="ScreenUpdateManager" line="16"/>
            <method name="ScreenUpdateManager" type="constructor" line="17"/>
            <javadoc line="19">
                Creates a SunGraphics2D object for the surface,
                  given the parameters.                
                <param>
                    sd surface data for which a graphics is to be created                    
                </param>
                <param>
                    peer peer which owns the surface                    
                </param>
                <param>
                    fgColor fg color to be used in the graphics                    
                </param>
                <param>
                    bgColor bg color to be used in the graphics                    
                </param>
                <param>
                    font font to be used in the graphics                    
                </param>
                <return>
                    a SunGraphics2D object for rendering to the passed surface                    
                </return>
            </javadoc>
            <method name="createGraphics" type="Graphics2D" line="29">
                <params>
                    <param name="sd" type="SurfaceData"/>
                    <param name="peer" type="WComponentPeer"/>
                    <param name="fgColor" type="Color"/>
                    <param name="bgColor" type="Color"/>
                    <param name="font" type="Font"/>
                </params>
            </method>
            <javadoc line="32">
                Creates and returns the surface for the peer. This surface becomes
                  managed by this manager. To remove the surface from the managed list{@code}dropScreenSurface(SurfaceData){@code} will need to be called.
                  The default implementation delegates surface creation
                  to the passed in GraphicsConfiguration object.                
                <param>
                    gc graphics configuration for which the surface is to be created                    
                </param>
                <param>
                    peer peer for which the onscreen surface is to be created                    
                </param>
                <param>
                    bbNum number of back-buffers requested for this peer                    
                </param>
                <param>
                    isResize whether this surface is being created in response to
                      a component resize event                    
                </param>
                <return>
                    a SurfaceData to be used for on-screen rendering for this peer.                    
                </return>
                <see>
                    #dropScreenSurface(SurfaceData)                    
                </see>
            </javadoc>
            <method name="createScreenSurface" type="SurfaceData" line="45">
                <params>
                    <param name="gc" type="Win32GraphicsConfig"/>
                    <param name="peer" type="WComponentPeer"/>
                    <param name="bbNum" type="int"/>
                    <param name="isResize" type="boolean"/>
                </params>
            </method>
            <javadoc line="48">
                Drops the passed surface from the list of managed surfaces.
                  Nothing happens if the surface wasn&apos;t managed by this manager.                
                <param>
                    sd SurfaceData to be removed from the list of managed surfaces                    
                </param>
            </javadoc>
            <method name="dropScreenSurface" type="void" line="53">
                <params>
                    <param name="sd" type="SurfaceData"/>
                </params>
            </method>
            <javadoc line="55">
                Returns a replacement SurfaceData for the invalid passed one.
                  This method should be used by SurfaceData&apos;s created by
                  the ScreenUpdateManager for providing replacement surfaces.                
                <param>
                    peer to which the old surface belongs                    
                </param>
                <param>
                    oldsd the old (invalid) surface to get replaced                    
                </param>
                <return>
                    a replacement surface                    
                </return>
                <see>
                    sun.java2d.d3d.D3DSurfaceData.D3DWindowSurfaceData#getReplacement()                    
                </see>
                <see>
                    sun.java2d.windows.GDIWindowSurfaceData#getReplacement()                    
                </see>
            </javadoc>
            <method name="getReplacementScreenSurface" type="SurfaceData" line="65">
                <params>
                    <param name="peer" type="WComponentPeer"/>
                    <param name="oldsd" type="SurfaceData"/>
                </params>
            </method>
            <javadoc line="68">
                Returns an (singleton) instance of the screen surfaces
                  manager class.                
                <return>
                    instance of onscreen surfaces manager                    
                </return>
            </javadoc>
            <method name="getInstance" type="ScreenUpdateManager" line="73">
                <scope line="74">
                    <scope line="75"/>
                    <scope line="78"/>
                </scope>
            </method>
        </class>
    </source>