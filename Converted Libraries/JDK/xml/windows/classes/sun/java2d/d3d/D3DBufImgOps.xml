<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.d3d">
        <import package="java.awt.image.AffineTransformOp"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.awt.image.BufferedImageOp"/>
        <import package="java.awt.image.ConvolveOp"/>
        <import package="java.awt.image.LookupOp"/>
        <import package="java.awt.image.RescaleOp"/>
        <import package="sun.java2d.SunGraphics2D"/>
        <import package="sun.java2d.SurfaceData"/>
        <import package="sun.java2d.loops.CompositeType"/>
        <import package="sun.java2d.pipe.BufferedBufImgOps"/>
        <import package="sun.java2d.d3d.D3DContext.D3DContextCaps"/>
        <class name="D3DBufImgOps" line="40">
            <extends class="BufferedBufImgOps"/>
            <javadoc line="42">
                This method is called from D3DDrawImage.transformImage() only.  It
                  validates the provided BufferedImageOp to determine whether the op
                  is one that can be accelerated by the D3D pipeline.  If the operation
                  cannot be completed for any reason, this method returns false;
                  otherwise, the given BufferedImage is rendered to the destination
                  using the provided BufferedImageOp and this method returns true.                
            </javadoc>
            <method name="renderImageWithOp" type="boolean" line="52">
                <params>
                    <param name="sg" type="SunGraphics2D"/>
                    <param name="img" type="BufferedImage"/>
                    <param name="biop" type="BufferedImageOp"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <comment line="53">
                    Validate the provided BufferedImage (make sure it is one that                    
                </comment>
                <comment line="54">
                    is supported, and that its properties are acceleratable)                    
                </comment>
                <comment line="68">
                    No acceleration for other BufferedImageOps (yet)                    
                </comment>
                <comment line="84">
                    REMIND: this hack tries to ensure that we have a cached texture                    
                </comment>
                <comment line="93">
                    Verify that the source surface is actually a texture and that                    
                </comment>
                <comment line="94">
                    shaders are supported                    
                </comment>
                <scope line="55">
                    <scope line="56"/>
                </scope>
                <scope line="59">
                    <scope line="60"/>
                </scope>
                <scope line="63">
                    <scope line="64"/>
                </scope>
                <scope line="67"/>
                <declaration name="dstData" type="SurfaceData" line="72"/>
                <scope line="76"/>
                <declaration name="srcData" type="SurfaceData" line="80"/>
                <scope line="83">
                    <scope line="88"/>
                </scope>
                <declaration name="d3dSrc" type="D3DSurfaceData" line="95"/>
                <declaration name="gd" type="D3DGraphicsDevice" line="96"/>
                <scope line="100"/>
                <declaration name="sw" type="int" line="104"/>
                <declaration name="sh" type="int" line="105"/>
            </method>
        </class>
    </source>