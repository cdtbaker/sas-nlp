<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.nio.channels"/>
        <import package="java.net.InetSocketAddress"/>
        <import package="java.util.concurrent.Future"/>
        <import package="java.util.concurrent.atomic.AtomicBoolean"/>
        <import package="java.io.IOException"/>
        <import package="java.security.AccessControlContext"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="sun.misc.Unsafe"/>
        <class name="WindowsAsynchronousServerSocketChannelImpl" line="11">
            <extends class="AsynchronousServerSocketChannelImpl"/>
            <implements interface="Iocp.OverlappedChannel"/>
            <javadoc line="11">
                Windows implementation of AsynchronousServerSocketChannel using overlapped I/O.                
            </javadoc>
            <declaration name="unsafe" type="Unsafe" line="15"/>
            <declaration name="DATA_BUFFER_SIZE" type="int" line="16"/>
            <declaration name="handle" type="long" line="17"/>
            <declaration name="completionKey" type="int" line="18"/>
            <declaration name="iocp" type="Iocp" line="19"/>
            <declaration name="ioCache" type="PendingIoCache" line="20"/>
            <declaration name="dataBuffer" type="long" line="21"/>
            <declaration name="accepting" type="AtomicBoolean" line="22"/>
            <method name="WindowsAsynchronousServerSocketChannelImpl" type="constructor" line="23">
                <params>
                    <param name="iocp" type="Iocp"/>
                </params>
                <declaration name="h" type="long" line="25"/>
                <declaration name="key" type="int" line="26"/>
                <scope line="27"/>
                <scope line="30"/>
            </method>
            <method name="getByOverlapped" type="PendingFuture<V,A>" line="40">
                <params>
                    <param name="overlapped" type="long"/>
                </params>
            </method>
            <method name="implClose" type="void" line="43"/>
            <method name="group" type="AsynchronousChannelGroupImpl" line="49"/>
            <class name="AcceptTask" line="52">
                <implements interface="Runnable"/>
                <implements interface="Iocp.ResultHandler"/>
                <javadoc line="52">
                    Task to initiate accept operation and to handle result.                    
                </javadoc>
                <declaration name="channel" type="WindowsAsynchronousSocketChannelImpl" line="56"/>
                <declaration name="acc" type="AccessControlContext" line="57"/>
                <declaration name="result" type="PendingFuture&lt;AsynchronousSocketChannel,Object&gt;" line="58"/>
                <method name="AcceptTask" type="constructor" line="59">
                    <params>
                        <param name="channel" type="WindowsAsynchronousSocketChannelImpl"/>
                        <param name="acc" type="AccessControlContext"/>
                        <param name="result" type="PendingFuture<AsynchronousSocketChannel,Object>"/>
                    </params>
                </method>
                <method name="enableAccept" type="void" line="64"/>
                <method name="closeChildChannel" type="void" line="67">
                    <scope line="68"/>
                    <scope line="71"/>
                </method>
                <method name="finishAccept" type="void" line="74">
                    <declaration name="local" type="InetSocketAddress" line="76"/>
                    <declaration name="remote" type="InetSocketAddress" line="77"/>
                    <scope line="79">
                        <anonymous_class line="80">
                            <method name="run" type="Void" line="81">
                                <declaration name="sm" type="SecurityManager" line="82"/>
                            </method>
                        </anonymous_class>
                    </scope>
                </method>
                <javadoc line="90">
                    Initiates the accept operation.                    
                </javadoc>
                <method name="run" type="void" line="93">
                    <declaration name="overlapped" type="long" line="94"/>
                    <scope line="95">
                        <scope line="97">
                            <scope line="99">
                                <declaration name="n" type="int" line="101"/>
                                <scope line="102"/>
                            </scope>
                        </scope>
                        <scope line="110"/>
                    </scope>
                    <scope line="114"/>
                    <scope line="122"/>
                    <scope line="125"/>
                </method>
                <javadoc line="130">
                    Executed when the I/O has completed                    
                </javadoc>
                <method name="completed" type="void" line="133">
                    <params>
                        <param name="bytesTransferred" type="int"/>
                        <param name="canInvokeDirect" type="boolean"/>
                    </params>
                    <scope line="134">
                        <scope line="135"/>
                        <scope line="138">
                            <scope line="140"/>
                            <scope line="144"/>
                        </scope>
                        <scope line="148"/>
                    </scope>
                    <scope line="154"/>
                    <scope line="161"/>
                </method>
                <method name="failed" type="void" line="166">
                    <params>
                        <param name="error" type="int"/>
                        <param name="x" type="IOException"/>
                    </params>
                    <scope line="169"/>
                    <scope line="172"/>
                </method>
            </class>
            <method name="implAccept" type="Future<AsynchronousSocketChannel>" line="178">
                <params>
                    <param name="attachment" type="Object"/>
                    <param name="handler" type="CompletionHandler<AsynchronousSocketChannel,Object>"/>
                </params>
                <scope line="179">
                    <declaration name="exc" type="Throwable" line="180"/>
                </scope>
                <declaration name="ch" type="WindowsAsynchronousSocketChannelImpl" line="187"/>
                <declaration name="ioe" type="IOException" line="188"/>
                <scope line="189"/>
                <scope line="193"/>
                <scope line="196"/>
                <scope line="199"/>
                <declaration name="acc" type="AccessControlContext" line="204"/>
                <declaration name="result" type="PendingFuture&lt;AsynchronousSocketChannel,Object&gt;" line="205"/>
                <declaration name="task" type="AcceptTask" line="206"/>
                <scope line="209"/>
                <scope line="212"/>
            </method>
            <method name="initIDs" type="void" line="217"/>
            <method name="accept0" type="int" line="218"/>
            <method name="updateAcceptContext" type="void" line="219"/>
            <method name="closesocket0" type="void" line="220"/>
            <scope line="221"/>
        </class>
    </source>