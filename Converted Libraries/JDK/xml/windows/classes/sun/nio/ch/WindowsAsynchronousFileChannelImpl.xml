<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.nio.channels"/>
        <import package="java.util.concurrent"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.BufferOverflowException"/>
        <import package="java.io.IOException"/>
        <import package="java.io.FileDescriptor"/>
        <import package="sun.misc.SharedSecrets"/>
        <import package="sun.misc.JavaIOFileDescriptorAccess"/>
        <class name="WindowsAsynchronousFileChannelImpl" line="10">
            <extends class="AsynchronousFileChannelImpl"/>
            <implements interface="Iocp.OverlappedChannel"/>
            <implements interface="Groupable"/>
            <javadoc line="10">
                Windows implementation of AsynchronousFileChannel using overlapped I/O.                
            </javadoc>
            <declaration name="fdAccess" type="JavaIOFileDescriptorAccess" line="14"/>
            <declaration name="ERROR_HANDLE_EOF" type="int" line="15"/>
            <class name="DefaultIocpHolder" line="16">
                <declaration name="defaultIocp" type="Iocp" line="17"/>
                <method name="defaultIocp" type="Iocp" line="18">
                    <scope line="19"/>
                    <scope line="22">
                        <declaration name="e" type="InternalError" line="23"/>
                    </scope>
                </method>
            </class>
            <declaration name="nd" type="FileDispatcher" line="29"/>
            <declaration name="handle" type="long" line="30"/>
            <declaration name="completionKey" type="int" line="31"/>
            <declaration name="iocp" type="Iocp" line="32"/>
            <declaration name="isDefaultIocp" type="boolean" line="33"/>
            <declaration name="ioCache" type="PendingIoCache" line="34"/>
            <method name="WindowsAsynchronousFileChannelImpl" type="constructor" line="35">
                <params>
                    <param name="fdObj" type="FileDescriptor"/>
                    <param name="reading" type="boolean"/>
                    <param name="writing" type="boolean"/>
                    <param name="iocp" type="Iocp"/>
                    <param name="isDefaultIocp" type="boolean"/>
                </params>
            </method>
            <method name="open" type="AsynchronousFileChannel" line="43">
                <params>
                    <param name="fdo" type="FileDescriptor"/>
                    <param name="reading" type="boolean"/>
                    <param name="writing" type="boolean"/>
                    <param name="pool" type="ThreadPool"/>
                </params>
                <declaration name="iocp" type="Iocp" line="44"/>
                <declaration name="isDefaultIocp" type="boolean" line="45"/>
                <scope line="46"/>
                <scope line="50"/>
                <scope line="54"/>
                <scope line="57"/>
            </method>
            <method name="getByOverlapped" type="PendingFuture<V,A>" line="62">
                <params>
                    <param name="overlapped" type="long"/>
                </params>
            </method>
            <method name="close" type="void" line="65">
                <scope line="67"/>
                <scope line="71"/>
            </method>
            <method name="group" type="AsynchronousChannelGroupImpl" line="80"/>
            <javadoc line="83">
                Translates Throwable to IOException                
            </javadoc>
            <method name="toIOException" type="IOException" line="86">
                <params>
                    <param name="x" type="Throwable"/>
                </params>
                <scope line="87"/>
            </method>
            <method name="size" type="long" line="93">
                <scope line="94"/>
                <scope line="98"/>
            </method>
            <method name="truncate" type="AsynchronousFileChannel" line="102">
                <params>
                    <param name="size" type="long"/>
                </params>
                <scope line="105"/>
                <scope line="110"/>
            </method>
            <method name="force" type="void" line="115">
                <params>
                    <param name="metaData" type="boolean"/>
                </params>
                <scope line="116"/>
                <scope line="120"/>
            </method>
            <class name="LockTask" line="124">
                <type_params>
                    <type_param name="A"/>
                </type_params>
                <implements interface="Runnable"/>
                <implements interface="Iocp.ResultHandler"/>
                <javadoc line="124">
                    Task that initiates locking operation and handles completion result.                    
                </javadoc>
                <declaration name="position" type="long" line="128"/>
                <declaration name="fli" type="FileLockImpl" line="129"/>
                <declaration name="result" type="PendingFuture&lt;FileLock,A&gt;" line="130"/>
                <method name="LockTask" type="constructor" line="131">
                    <params>
                        <param name="position" type="long"/>
                        <param name="fli" type="FileLockImpl"/>
                        <param name="result" type="PendingFuture<FileLock,A>"/>
                    </params>
                </method>
                <method name="run" type="void" line="136">
                    <declaration name="overlapped" type="long" line="137"/>
                    <scope line="138">
                        <scope line="141">
                            <declaration name="n" type="int" line="142"/>
                            <scope line="143"/>
                        </scope>
                    </scope>
                    <scope line="149"/>
                    <scope line="154"/>
                </method>
                <method name="completed" type="void" line="159">
                    <params>
                        <param name="bytesTransferred" type="int"/>
                        <param name="canInvokeDirect" type="boolean"/>
                    </params>
                    <scope line="161"/>
                    <scope line="164"/>
                </method>
                <method name="failed" type="void" line="168">
                    <params>
                        <param name="error" type="int"/>
                        <param name="x" type="IOException"/>
                    </params>
                    <scope line="170"/>
                    <scope line="173"/>
                </method>
            </class>
            <method name="implLock" type="Future<FileLock>" line="179">
                <params>
                    <param name="position" type="long"/>
                    <param name="size" type="long"/>
                    <param name="shared" type="boolean"/>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler<FileLock,? super A>"/>
                </params>
                <declaration name="fli" type="FileLockImpl" line="182"/>
                <scope line="183">
                    <declaration name="exc" type="Throwable" line="184"/>
                </scope>
                <declaration name="result" type="PendingFuture&lt;FileLock,A&gt;" line="189"/>
                <declaration name="lockTask" type="LockTask" line="190"/>
                <scope line="192"/>
                <scope line="195">
                    <declaration name="executed" type="boolean" line="196"/>
                    <scope line="197"/>
                    <scope line="201">
                        <scope line="202"/>
                    </scope>
                </scope>
            </method>
            <declaration name="NO_LOCK" type="int" line="209"/>
            <declaration name="LOCKED" type="int" line="210"/>
            <method name="tryLock" type="FileLock" line="211">
                <params>
                    <param name="position" type="long"/>
                    <param name="size" type="long"/>
                    <param name="shared" type="boolean"/>
                </params>
                <declaration name="fli" type="FileLockImpl" line="214"/>
                <declaration name="gotLock" type="boolean" line="216"/>
                <scope line="217">
                    <declaration name="res" type="int" line="219"/>
                </scope>
                <scope line="224"/>
            </method>
            <method name="implRelease" type="void" line="229">
                <params>
                    <param name="fli" type="FileLockImpl"/>
                </params>
            </method>
            <class name="ReadTask" line="232">
                <type_params>
                    <type_param name="A"/>
                </type_params>
                <implements interface="Runnable"/>
                <implements interface="Iocp.ResultHandler"/>
                <javadoc line="232">
                    Task that initiates read operation and handles completion result.                    
                </javadoc>
                <declaration name="dst" type="ByteBuffer" line="236"/>
                <declaration name="pos" type="int" line="237"/>
                <declaration name="position" type="long" line="238"/>
                <declaration name="result" type="PendingFuture&lt;Integer,A&gt;" line="239"/>
                <declaration name="buf" type="ByteBuffer" line="240"/>
                <method name="ReadTask" type="constructor" line="241">
                    <params>
                        <param name="dst" type="ByteBuffer"/>
                        <param name="pos" type="int"/>
                        <param name="rem" type="int"/>
                        <param name="position" type="long"/>
                        <param name="result" type="PendingFuture<Integer,A>"/>
                    </params>
                </method>
                <method name="releaseBufferIfSubstituted" type="void" line="248"/>
                <method name="updatePosition" type="void" line="251">
                    <params>
                        <param name="bytesTransferred" type="int"/>
                    </params>
                    <scope line="252">
                        <scope line="253">
                            <scope line="254"/>
                            <scope line="257"/>
                        </scope>
                        <scope line="260">
                            <scope line="262"/>
                            <scope line="265"/>
                        </scope>
                    </scope>
                </method>
                <method name="run" type="void" line="270">
                    <declaration name="n" type="int" line="271"/>
                    <declaration name="overlapped" type="long" line="272"/>
                    <declaration name="address" type="long" line="273"/>
                    <scope line="274"/>
                    <scope line="278"/>
                    <declaration name="pending" type="boolean" line="282"/>
                    <scope line="283">
                        <scope line="287"/>
                        <scope line="291"/>
                        <scope line="294"/>
                    </scope>
                    <scope line="298"/>
                    <scope line="301">
                        <scope line="302"/>
                    </scope>
                </method>
                <javadoc line="310">
                    Executed when the I/O has completed                    
                </javadoc>
                <method name="completed" type="void" line="313">
                    <params>
                        <param name="bytesTransferred" type="int"/>
                        <param name="canInvokeDirect" type="boolean"/>
                    </params>
                    <scope line="317"/>
                    <scope line="320"/>
                </method>
                <method name="failed" type="void" line="324">
                    <params>
                        <param name="error" type="int"/>
                        <param name="x" type="IOException"/>
                    </params>
                    <scope line="325"/>
                    <scope line="328">
                        <scope line="330"/>
                        <scope line="333"/>
                    </scope>
                </method>
            </class>
            <method name="implRead" type="Future<Integer>" line="340">
                <params>
                    <param name="dst" type="ByteBuffer"/>
                    <param name="position" type="long"/>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler<Integer,? super A>"/>
                </params>
                <scope line="344">
                    <declaration name="exc" type="Throwable" line="345"/>
                </scope>
                <declaration name="pos" type="int" line="350"/>
                <declaration name="lim" type="int" line="351"/>
                <declaration name="rem" type="int" line="353"/>
                <scope line="354"/>
                <declaration name="result" type="PendingFuture&lt;Integer,A&gt;" line="359"/>
                <declaration name="readTask" type="ReadTask" line="360"/>
                <scope line="362"/>
                <scope line="365"/>
            </method>
            <class name="WriteTask" line="370">
                <type_params>
                    <type_param name="A"/>
                </type_params>
                <implements interface="Runnable"/>
                <implements interface="Iocp.ResultHandler"/>
                <javadoc line="370">
                    Task that initiates write operation and handles completion result.                    
                </javadoc>
                <declaration name="src" type="ByteBuffer" line="374"/>
                <declaration name="pos" type="int" line="375"/>
                <declaration name="position" type="long" line="376"/>
                <declaration name="result" type="PendingFuture&lt;Integer,A&gt;" line="377"/>
                <declaration name="buf" type="ByteBuffer" line="378"/>
                <method name="WriteTask" type="constructor" line="379">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="pos" type="int"/>
                        <param name="rem" type="int"/>
                        <param name="position" type="long"/>
                        <param name="result" type="PendingFuture<Integer,A>"/>
                    </params>
                </method>
                <method name="releaseBufferIfSubstituted" type="void" line="386"/>
                <method name="updatePosition" type="void" line="389">
                    <params>
                        <param name="bytesTransferred" type="int"/>
                    </params>
                    <scope line="390">
                        <scope line="391"/>
                        <scope line="394"/>
                    </scope>
                </method>
                <method name="run" type="void" line="398">
                    <declaration name="n" type="int" line="399"/>
                    <declaration name="overlapped" type="long" line="400"/>
                    <declaration name="address" type="long" line="401"/>
                    <scope line="402"/>
                    <scope line="406"/>
                    <scope line="413">
                        <scope line="417"/>
                        <scope line="420"/>
                    </scope>
                    <scope line="424"/>
                    <scope line="429"/>
                </method>
                <javadoc line="434">
                    Executed when the I/O has completed                    
                </javadoc>
                <method name="completed" type="void" line="437">
                    <params>
                        <param name="bytesTransferred" type="int"/>
                        <param name="canInvokeDirect" type="boolean"/>
                    </params>
                    <scope line="441"/>
                    <scope line="444"/>
                </method>
                <method name="failed" type="void" line="448">
                    <params>
                        <param name="error" type="int"/>
                        <param name="x" type="IOException"/>
                    </params>
                    <scope line="450"/>
                    <scope line="453"/>
                </method>
            </class>
            <method name="implWrite" type="Future<Integer>" line="459">
                <params>
                    <param name="src" type="ByteBuffer"/>
                    <param name="position" type="long"/>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler<Integer,? super A>"/>
                </params>
                <scope line="462">
                    <declaration name="exc" type="Throwable" line="463"/>
                </scope>
                <declaration name="pos" type="int" line="468"/>
                <declaration name="lim" type="int" line="469"/>
                <declaration name="rem" type="int" line="471"/>
                <scope line="472"/>
                <declaration name="result" type="PendingFuture&lt;Integer,A&gt;" line="477"/>
                <declaration name="writeTask" type="WriteTask" line="478"/>
                <scope line="480"/>
                <scope line="483"/>
            </method>
            <method name="readFile" type="int" line="488"/>
            <method name="writeFile" type="int" line="489"/>
            <method name="lockFile" type="int" line="490"/>
            <method name="close0" type="void" line="491"/>
            <scope line="492"/>
        </class>
    </source>