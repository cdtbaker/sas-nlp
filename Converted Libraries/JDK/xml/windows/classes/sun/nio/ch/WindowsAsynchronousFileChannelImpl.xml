<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.nio.channels"/>
        <import package="java.util.concurrent"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.BufferOverflowException"/>
        <import package="java.io.IOException"/>
        <import package="java.io.FileDescriptor"/>
        <import package="sun.misc.SharedSecrets"/>
        <import package="sun.misc.JavaIOFileDescriptorAccess"/>
        <class name="WindowsAsynchronousFileChannelImpl" line="37">
            <extends class="AsynchronousFileChannelImpl"/>
            <comment line="49">
                error when EOF is detected asynchronously.                
            </comment>
            <comment line="52">
                Lazy initialization of default I/O completion port                
            </comment>
            <comment line="66">
                Used for force/truncate/size methods                
            </comment>
            <comment line="69">
                The handle is extracted for use in native methods invoked from this class.                
            </comment>
            <comment line="72">
                The key that identifies the channel&apos;s association with the I/O port                
            </comment>
            <comment line="75">
                I/O completion port (group)                
            </comment>
            <comment line="80">
                Caches OVERLAPPED structure for each outstanding I/O operation                
            </comment>
            <comment line="212">
                -- file locking --                
            </comment>
            <comment line="339">
                Failed to lock                
            </comment>
            <comment line="340">
                Obtained requested lock                
            </comment>
            <comment line="742">
                -- Native methods --                
            </comment>
            <implements interface="Iocp.OverlappedChannel"/>
            <implements interface="Groupable"/>
            <javadoc line="37">
                Windows implementation of AsynchronousFileChannel using overlapped I/O.                
            </javadoc>
            <declaration name="fdAccess" type="JavaIOFileDescriptorAccess" line="45"/>
            <declaration name="ERROR_HANDLE_EOF" type="int" line="49"/>
            <class name="DefaultIocpHolder" line="52">
                <comment line="382">
                    buffer position/remaining                    
                </comment>
                <comment line="383">
                    file position                    
                </comment>
                <comment line="386">
                    set to dst if direct; otherwise set to substituted direct buffer                    
                </comment>
                <comment line="573">
                    buffer position/remaining                    
                </comment>
                <comment line="574">
                    file position                    
                </comment>
                <comment line="577">
                    set to src if direct; otherwise set to substituted direct buffer                    
                </comment>
                <declaration name="defaultIocp" type="Iocp" line="53"/>
                <method name="defaultIocp" type="Iocp" line="54">
                    <scope line="55"/>
                    <scope line="57">
                        <declaration name="e" type="InternalError" line="58"/>
                    </scope>
                </method>
            </class>
            <declaration name="nd" type="FileDispatcher" line="66"/>
            <declaration name="handle" type="long" line="69"/>
            <declaration name="completionKey" type="int" line="72"/>
            <declaration name="iocp" type="Iocp" line="75"/>
            <declaration name="isDefaultIocp" type="boolean" line="77"/>
            <declaration name="ioCache" type="PendingIoCache" line="80"/>
            <method name="WindowsAsynchronousFileChannelImpl" type="constructor" line="89">
                <params>
                    <param name="fdObj" type="FileDescriptor"/>
                    <param name="reading" type="boolean"/>
                    <param name="writing" type="boolean"/>
                    <param name="iocp" type="Iocp"/>
                    <param name="isDefaultIocp" type="boolean"/>
                </params>
            </method>
            <method name="open" type="AsynchronousFileChannel" line="103">
                <params>
                    <param name="fdo" type="FileDescriptor"/>
                    <param name="reading" type="boolean"/>
                    <param name="writing" type="boolean"/>
                    <param name="pool" type="ThreadPool"/>
                </params>
                <comment line="117">
                    error binding to port so need to close it (if created for this channel)                    
                </comment>
                <declaration name="iocp" type="Iocp" line="104"/>
                <declaration name="isDefaultIocp" type="boolean" line="105"/>
                <scope line="106"/>
                <scope line="109"/>
                <scope line="113"/>
                <scope line="116"/>
            </method>
            <method name="getByOverlapped" type="PendingFuture<V,A>" line="125">
                <params>
                    <param name="overlapped" type="long"/>
                </params>
            </method>
            <method name="close" type="void" line="130">
                <comment line="134">
                    already closed                    
                </comment>
                <comment line="140">
                    invalidate all locks held for this channel                    
                </comment>
                <comment line="143">
                    close the file                    
                </comment>
                <comment line="146">
                    waits until all I/O operations have completed                    
                </comment>
                <comment line="149">
                    disassociate from port                    
                </comment>
                <comment line="152">
                    for the non-default group close the port                    
                </comment>
                <scope line="132"/>
                <scope line="136"/>
            </method>
            <method name="group" type="AsynchronousChannelGroupImpl" line="158"/>
            <javadoc line="162">
                Translates Throwable to IOException                
            </javadoc>
            <method name="toIOException" type="IOException" line="165">
                <params>
                    <param name="x" type="Throwable"/>
                </params>
                <scope line="166"/>
            </method>
            <method name="size" type="long" line="175">
                <scope line="176"/>
                <scope line="179"/>
            </method>
            <method name="truncate" type="AsynchronousFileChannel" line="185">
                <params>
                    <param name="size" type="long"/>
                </params>
                <scope line="190"/>
                <scope line="195"/>
            </method>
            <method name="force" type="void" line="202">
                <params>
                    <param name="metaData" type="boolean"/>
                </params>
                <scope line="203"/>
                <scope line="206"/>
            </method>
            <class name="LockTask" line="213">
                <type_params>
                    <type_param name="A"/>
                </type_params>
                <comment line="382">
                    buffer position/remaining                    
                </comment>
                <comment line="383">
                    file position                    
                </comment>
                <comment line="386">
                    set to dst if direct; otherwise set to substituted direct buffer                    
                </comment>
                <comment line="573">
                    buffer position/remaining                    
                </comment>
                <comment line="574">
                    file position                    
                </comment>
                <comment line="577">
                    set to src if direct; otherwise set to substituted direct buffer                    
                </comment>
                <implements interface="Runnable"/>
                <implements interface="Iocp.ResultHandler"/>
                <javadoc line="213">
                    Task that initiates locking operation and handles completion result.                    
                </javadoc>
                <declaration name="position" type="long" line="217"/>
                <declaration name="fli" type="FileLockImpl" line="218"/>
                <declaration name="result" type="PendingFuture&lt;FileLock,A&gt;" line="219"/>
                <method name="LockTask" type="constructor" line="224">
                    <params>
                        <param name="position" type="long"/>
                        <param name="fli" type="FileLockImpl"/>
                        <param name="result" type="PendingFuture<FileLock,A>"/>
                    </params>
                </method>
                <method name="run" type="void" line="231">
                    <comment line="236">
                        allocate OVERLAPPED structure                        
                    </comment>
                    <comment line="239">
                        synchronize on result to avoid race with handler thread                        
                    </comment>
                    <comment line="240">
                        when lock is acquired immediately.                        
                    </comment>
                    <comment line="245">
                        I/O is pending                        
                    </comment>
                    <comment line="248">
                        acquired lock immediately                        
                    </comment>
                    <comment line="253">
                        lock failed or channel closed                        
                    </comment>
                    <comment line="262">
                        invoke completion handler                        
                    </comment>
                    <declaration name="overlapped" type="long" line="232"/>
                    <scope line="233">
                        <scope line="241">
                            <declaration name="n" type="int" line="242"/>
                            <scope line="244"/>
                        </scope>
                    </scope>
                    <scope line="252"/>
                    <scope line="258"/>
                </method>
                <method name="completed" type="void" line="267">
                    <params>
                        <param name="bytesTransferred" type="int"/>
                        <param name="canInvokeDirect" type="boolean"/>
                    </params>
                    <comment line="268">
                        release waiters and invoke completion handler                        
                    </comment>
                    <scope line="270"/>
                    <scope line="272"/>
                </method>
                <method name="failed" type="void" line="278">
                    <params>
                        <param name="error" type="int"/>
                        <param name="x" type="IOException"/>
                    </params>
                    <comment line="279">
                        lock not acquired so remove from lock table                        
                    </comment>
                    <comment line="282">
                        release waiters                        
                    </comment>
                    <scope line="283"/>
                    <scope line="285"/>
                </method>
            </class>
            <method name="implLock" type="Future<FileLock>" line="298">
                <params>
                    <param name="position" type="long"/>
                    <param name="size" type="long"/>
                    <param name="shared" type="boolean"/>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler<FileLock,? super A>"/>
                </params>
                <comment line="304">
                    add to lock table                    
                </comment>
                <comment line="314">
                    create Future and task that will be invoked to acquire lock                    
                </comment>
                <comment line="320">
                    initiate I/O                    
                </comment>
                <comment line="330">
                    rollback                    
                </comment>
                <declaration name="fli" type="FileLockImpl" line="305"/>
                <scope line="306">
                    <declaration name="exc" type="Throwable" line="307"/>
                </scope>
                <declaration name="result" type="PendingFuture&lt;FileLock,A&gt;" line="315"/>
                <declaration name="lockTask" type="LockTask" line="317"/>
                <scope line="321"/>
                <scope line="323">
                    <declaration name="executed" type="boolean" line="324"/>
                    <scope line="325"/>
                    <scope line="328">
                        <scope line="329"/>
                    </scope>
                </scope>
            </method>
            <declaration name="NO_LOCK" type="int" line="338"/>
            <declaration name="LOCKED" type="int" line="339"/>
            <method name="tryLock" type="FileLock" line="344">
                <params>
                    <param name="position" type="long"/>
                    <param name="size" type="long"/>
                    <param name="shared" type="boolean"/>
                </params>
                <comment line="350">
                    add to lock table                    
                </comment>
                <comment line="358">
                    try to acquire the lock                    
                </comment>
                <declaration name="fli" type="FileLockImpl" line="351"/>
                <declaration name="gotLock" type="boolean" line="355"/>
                <scope line="356">
                    <declaration name="res" type="int" line="359"/>
                </scope>
                <scope line="364"/>
            </method>
            <method name="implRelease" type="void" line="372">
                <params>
                    <param name="fli" type="FileLockImpl"/>
                </params>
            </method>
            <class name="ReadTask" line="376">
                <type_params>
                    <type_param name="A"/>
                </type_params>
                <comment line="382">
                    buffer position/remaining                    
                </comment>
                <comment line="383">
                    file position                    
                </comment>
                <comment line="386">
                    set to dst if direct; otherwise set to substituted direct buffer                    
                </comment>
                <comment line="573">
                    buffer position/remaining                    
                </comment>
                <comment line="574">
                    file position                    
                </comment>
                <comment line="577">
                    set to src if direct; otherwise set to substituted direct buffer                    
                </comment>
                <implements interface="Runnable"/>
                <implements interface="Iocp.ResultHandler"/>
                <javadoc line="376">
                    Task that initiates read operation and handles completion result.                    
                </javadoc>
                <declaration name="dst" type="ByteBuffer" line="380"/>
                <declaration name="pos" type="int" line="381"/>
                <declaration name="position" type="long" line="382"/>
                <declaration name="result" type="PendingFuture&lt;Integer,A&gt;" line="383"/>
                <declaration name="buf" type="ByteBuffer" line="386"/>
                <method name="ReadTask" type="constructor" line="393">
                    <params>
                        <param name="dst" type="ByteBuffer"/>
                        <param name="pos" type="int"/>
                        <param name="rem" type="int"/>
                        <param name="position" type="long"/>
                        <param name="result" type="PendingFuture<Integer,A>"/>
                    </params>
                </method>
                <method name="releaseBufferIfSubstituted" type="void" line="401"/>
                <method name="updatePosition" type="void" line="406">
                    <params>
                        <param name="bytesTransferred" type="int"/>
                    </params>
                    <comment line="407">
                        if the I/O succeeded then adjust buffer position                        
                    </comment>
                    <comment line="413">
                        someone has changed the position; ignore                        
                    </comment>
                    <comment line="416">
                        had to substitute direct buffer                        
                    </comment>
                    <comment line="421">
                        someone has changed the position; ignore                        
                    </comment>
                    <scope line="408">
                        <scope line="409">
                            <scope line="410"/>
                            <scope line="412"/>
                        </scope>
                        <scope line="415">
                            <scope line="418"/>
                            <scope line="420"/>
                        </scope>
                    </scope>
                </method>
                <method name="run" type="void" line="428">
                    <comment line="433">
                        Substitute a native buffer if not direct                        
                    </comment>
                    <comment line="446">
                        allocate OVERLAPPED                        
                    </comment>
                    <comment line="449">
                        initiate read                        
                    </comment>
                    <comment line="452">
                        I/O is pending                        
                    </comment>
                    <comment line="462">
                        failed to initiate read                        
                    </comment>
                    <comment line="466">
                        release resources                        
                    </comment>
                    <comment line="474">
                        invoke completion handler                        
                    </comment>
                    <declaration name="n" type="int" line="429"/>
                    <declaration name="overlapped" type="long" line="430"/>
                    <declaration name="address" type="long" line="431"/>
                    <scope line="434"/>
                    <scope line="437"/>
                    <declaration name="pending" type="boolean" line="442"/>
                    <scope line="443">
                        <scope line="451"/>
                        <scope line="455"/>
                        <scope line="457"/>
                    </scope>
                    <scope line="461"/>
                    <scope line="464">
                        <scope line="465"/>
                    </scope>
                </method>
                <javadoc line="478">
                    Executed when the I/O has completed                    
                </javadoc>
                <method name="completed" type="void" line="482">
                    <params>
                        <param name="bytesTransferred" type="int"/>
                        <param name="canInvokeDirect" type="boolean"/>
                    </params>
                    <comment line="485">
                        return direct buffer to cache if substituted                        
                    </comment>
                    <comment line="488">
                        release waiters and invoke completion handler                        
                    </comment>
                    <scope line="490"/>
                    <scope line="492"/>
                </method>
                <method name="failed" type="void" line="498">
                    <params>
                        <param name="error" type="int"/>
                        <param name="x" type="IOException"/>
                    </params>
                    <comment line="499">
                        if EOF detected asynchronously then it is reported as error                        
                    </comment>
                    <comment line="503">
                        return direct buffer to cache if substituted                        
                    </comment>
                    <comment line="506">
                        release waiters                        
                    </comment>
                    <scope line="500"/>
                    <scope line="502">
                        <scope line="507"/>
                        <scope line="509"/>
                    </scope>
                </method>
            </class>
            <method name="implRead" type="Future<Integer>" line="522">
                <params>
                    <param name="dst" type="ByteBuffer"/>
                    <param name="position" type="long"/>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler<Integer,? super A>"/>
                </params>
                <comment line="530">
                    check if channel is closed                    
                </comment>
                <comment line="544">
                    no space remaining                    
                </comment>
                <comment line="552">
                    create Future and task that initiates read                    
                </comment>
                <comment line="558">
                    initiate I/O                    
                </comment>
                <scope line="531">
                    <declaration name="exc" type="Throwable" line="532"/>
                </scope>
                <declaration name="pos" type="int" line="539"/>
                <declaration name="lim" type="int" line="540"/>
                <declaration name="rem" type="int" line="542"/>
                <scope line="545"/>
                <declaration name="result" type="PendingFuture&lt;Integer,A&gt;" line="553"/>
                <declaration name="readTask" type="ReadTask" line="555"/>
                <scope line="559"/>
                <scope line="561"/>
            </method>
            <class name="WriteTask" line="567">
                <type_params>
                    <type_param name="A"/>
                </type_params>
                <comment line="382">
                    buffer position/remaining                    
                </comment>
                <comment line="383">
                    file position                    
                </comment>
                <comment line="386">
                    set to dst if direct; otherwise set to substituted direct buffer                    
                </comment>
                <comment line="573">
                    buffer position/remaining                    
                </comment>
                <comment line="574">
                    file position                    
                </comment>
                <comment line="577">
                    set to src if direct; otherwise set to substituted direct buffer                    
                </comment>
                <implements interface="Runnable"/>
                <implements interface="Iocp.ResultHandler"/>
                <javadoc line="567">
                    Task that initiates write operation and handles completion result.                    
                </javadoc>
                <declaration name="src" type="ByteBuffer" line="571"/>
                <declaration name="pos" type="int" line="572"/>
                <declaration name="position" type="long" line="573"/>
                <declaration name="result" type="PendingFuture&lt;Integer,A&gt;" line="574"/>
                <declaration name="buf" type="ByteBuffer" line="577"/>
                <method name="WriteTask" type="constructor" line="584">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="pos" type="int"/>
                        <param name="rem" type="int"/>
                        <param name="position" type="long"/>
                        <param name="result" type="PendingFuture<Integer,A>"/>
                    </params>
                </method>
                <method name="releaseBufferIfSubstituted" type="void" line="592"/>
                <method name="updatePosition" type="void" line="597">
                    <params>
                        <param name="bytesTransferred" type="int"/>
                    </params>
                    <comment line="598">
                        if the I/O succeeded then adjust buffer position                        
                    </comment>
                    <comment line="603">
                        someone has changed the position                        
                    </comment>
                    <scope line="599">
                        <scope line="600"/>
                        <scope line="602"/>
                    </scope>
                </method>
                <method name="run" type="void" line="609">
                    <comment line="614">
                        Substitute a native buffer if not direct                        
                    </comment>
                    <comment line="622">
                        temporarily restore position as we don&apos;t know how many bytes                        
                    </comment>
                    <comment line="623">
                        will be written                        
                    </comment>
                    <comment line="631">
                        allocate an OVERLAPPED structure                        
                    </comment>
                    <comment line="634">
                        initiate the write                        
                    </comment>
                    <comment line="637">
                        I/O is pending                        
                    </comment>
                    <comment line="644">
                        failed to initiate read:                        
                    </comment>
                    <comment line="647">
                        release resources                        
                    </comment>
                    <comment line="656">
                        invoke completion handler                        
                    </comment>
                    <declaration name="n" type="int" line="610"/>
                    <declaration name="overlapped" type="long" line="611"/>
                    <declaration name="address" type="long" line="612"/>
                    <scope line="615"/>
                    <scope line="618"/>
                    <scope line="628">
                        <scope line="636"/>
                        <scope line="639"/>
                    </scope>
                    <scope line="643"/>
                    <scope line="652"/>
                </method>
                <javadoc line="660">
                    Executed when the I/O has completed                    
                </javadoc>
                <method name="completed" type="void" line="664">
                    <params>
                        <param name="bytesTransferred" type="int"/>
                        <param name="canInvokeDirect" type="boolean"/>
                    </params>
                    <comment line="667">
                        return direct buffer to cache if substituted                        
                    </comment>
                    <comment line="670">
                        release waiters and invoke completion handler                        
                    </comment>
                    <scope line="672"/>
                    <scope line="674"/>
                </method>
                <method name="failed" type="void" line="680">
                    <params>
                        <param name="error" type="int"/>
                        <param name="x" type="IOException"/>
                    </params>
                    <comment line="681">
                        return direct buffer to cache if substituted                        
                    </comment>
                    <comment line="684">
                        release waiters and invoker completion handler                        
                    </comment>
                    <scope line="685"/>
                    <scope line="687"/>
                </method>
            </class>
            <method name="implWrite" type="Future<Integer>" line="698">
                <params>
                    <param name="src" type="ByteBuffer"/>
                    <param name="position" type="long"/>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler<Integer,? super A>"/>
                </params>
                <comment line="704">
                    check if channel is closed                    
                </comment>
                <comment line="718">
                    nothing to write                    
                </comment>
                <comment line="726">
                    create Future and task to initiate write                    
                </comment>
                <comment line="732">
                    initiate I/O                    
                </comment>
                <scope line="705">
                    <declaration name="exc" type="Throwable" line="706"/>
                </scope>
                <declaration name="pos" type="int" line="713"/>
                <declaration name="lim" type="int" line="714"/>
                <declaration name="rem" type="int" line="716"/>
                <scope line="719"/>
                <declaration name="result" type="PendingFuture&lt;Integer,A&gt;" line="727"/>
                <declaration name="writeTask" type="WriteTask" line="729"/>
                <scope line="733"/>
                <scope line="735"/>
            </method>
            <method name="readFile" type="int" line="743"/>
            <method name="writeFile" type="int" line="746"/>
            <method name="lockFile" type="int" line="749"/>
            <method name="close0" type="void" line="752"/>
            <scope line="754"/>
        </class>
    </source>