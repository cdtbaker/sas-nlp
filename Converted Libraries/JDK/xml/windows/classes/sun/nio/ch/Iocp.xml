<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.nio.channels"/>
        <import package="java.nio.channels.spi.AsynchronousChannelProvider"/>
        <import package="java.io.Closeable"/>
        <import package="java.io.IOException"/>
        <import package="java.io.FileDescriptor"/>
        <import package="java.util"/>
        <import package="java.util.concurrent"/>
        <import package="java.util.concurrent.locks.ReadWriteLock"/>
        <import package="java.util.concurrent.locks.ReentrantReadWriteLock"/>
        <import package="java.security.AccessController"/>
        <import package="sun.security.action.GetPropertyAction"/>
        <import package="sun.misc.Unsafe"/>
        <class name="Iocp" line="14">
            <extends class="AsynchronousChannelGroupImpl"/>
            <javadoc line="14">
                Windows implementation of AsynchronousChannelGroup encapsulating an I/O
                  completion port.                
            </javadoc>
            <declaration name="unsafe" type="Unsafe" line="19"/>
            <declaration name="INVALID_HANDLE_VALUE" type="long" line="20"/>
            <declaration name="supportsThreadAgnosticIo" type="boolean" line="21"/>
            <declaration name="keyToChannelLock" type="ReadWriteLock" line="22"/>
            <declaration name="keyToChannel" type="Map&lt;Integer,OverlappedChannel&gt;" line="23"/>
            <declaration name="nextCompletionKey" type="int" line="24"/>
            <declaration name="port" type="long" line="25"/>
            <declaration name="closed" type="boolean" line="26"/>
            <declaration name="staleIoSet" type="Set&lt;Long&gt;" line="27"/>
            <method name="Iocp" type="constructor" line="28">
                <params>
                    <param name="provider" type="AsynchronousChannelProvider"/>
                    <param name="pool" type="ThreadPool"/>
                </params>
            </method>
            <method name="start" type="Iocp" line="33"/>
            <interface name="OverlappedChannel">
                <implements interface="Closeable"/>
                <method name="getByOverlapped" type="PendingFuture<V,A>" line="38"/>
                <javadoc line="38">
                    Returns a reference to the pending I/O result.                    
                </javadoc>
            </interface>
            <javadoc line="43">
                Indicates if this operating system supports thread agnostic I/O.                
            </javadoc>
            <method name="supportsThreadAgnosticIo" type="boolean" line="46"/>
            <method name="implClose" type="void" line="49">
                <scope line="50"/>
                <scope line="55">
                    <scope line="56"/>
                </scope>
            </method>
            <method name="isEmpty" type="boolean" line="62">
                <scope line="64"/>
                <scope line="67"/>
            </method>
            <method name="attachForeignChannel" type="Object" line="71">
                <params>
                    <param name="channel" type="Channel"/>
                    <param name="fdObj" type="FileDescriptor"/>
                </params>
                <anonymous_class line="72">
                    <method name="getByOverlapped" type="PendingFuture<V,A>" line="73">
                        <params>
                            <param name="overlapped" type="long"/>
                        </params>
                    </method>
                    <method name="close" type="void" line="76"/>
                </anonymous_class>
                <declaration name="key" type="int" line="72"/>
            </method>
            <method name="detachForeignChannel" type="void" line="83">
                <params>
                    <param name="key" type="Object"/>
                </params>
            </method>
            <method name="closeAllChannels" type="void" line="86">
                <declaration name="MAX_BATCH_SIZE" type="int" line="87"/>
                <declaration name="channels" type="OverlappedChannel" line="88"/>
                <declaration name="count" type="int" line="89"/>
                <scope line="90">
                    <scope line="93">
                        <scope line="94"/>
                    </scope>
                    <scope line="99"/>
                    <scope line="102">
                        <scope line="103"/>
                        <scope line="106"/>
                    </scope>
                </scope>
            </method>
            <method name="wakeup" type="void" line="112">
                <scope line="113"/>
                <scope line="116"/>
            </method>
            <method name="executeOnHandlerTask" type="void" line="120">
                <params>
                    <param name="task" type="Runnable"/>
                </params>
                <scope line="121"/>
            </method>
            <method name="shutdownHandlerTasks" type="void" line="127">
                <declaration name="nThreads" type="int" line="128"/>
                <scope line="129"/>
            </method>
            <javadoc line="133">
                Associate the given handle with this group                
            </javadoc>
            <method name="associate" type="int" line="136">
                <params>
                    <param name="ch" type="OverlappedChannel"/>
                    <param name="handle" type="long"/>
                </params>
                <declaration name="key" type="int" line="138"/>
                <scope line="139">
                    <scope line="141"/>
                    <scope line="145"/>
                </scope>
                <scope line="150"/>
            </method>
            <javadoc line="155">
                Disassociate channel from the group.                
            </javadoc>
            <method name="disassociate" type="void" line="158">
                <params>
                    <param name="key" type="int"/>
                </params>
                <declaration name="checkForShutdown" type="boolean" line="159"/>
                <scope line="161"/>
                <scope line="165"/>
                <scope line="168">
                    <scope line="169"/>
                    <scope line="172"/>
                </scope>
            </method>
            <javadoc line="176">
                Invoked when a channel associated with this port is closed before
                  notifications for all outstanding I/O operations have been received.                
            </javadoc>
            <method name="makeStale" type="void" line="180">
                <params>
                    <param name="overlapped" type="Long"/>
                </params>
                <scope line="181"/>
            </method>
            <javadoc line="185">
                Checks if the given OVERLAPPED is stale and if so, releases it.                
            </javadoc>
            <method name="checkIfStale" type="void" line="188">
                <params>
                    <param name="ov" type="long"/>
                </params>
                <scope line="189">
                    <declaration name="removed" type="boolean" line="190"/>
                    <scope line="191"/>
                </scope>
            </method>
            <interface name="ResultHandler">
                <javadoc line="196">
                    The handler for consuming the result of an asynchronous I/O operation.                    
                </javadoc>
                <method name="completed" type="void" line="200"/>
                <javadoc line="200">
                    Invoked if the I/O operation completes successfully.                    
                </javadoc>
                <method name="failed" type="void" line="204"/>
                <javadoc line="204">
                    Invoked if the I/O operation fails.                    
                </javadoc>
            </interface>
            <method name="translateErrorToIOException" type="IOException" line="209">
                <params>
                    <param name="error" type="int"/>
                </params>
                <declaration name="msg" type="String" line="210"/>
            </method>
            <class name="EventHandlerTask" line="214">
                <implements interface="Runnable"/>
                <javadoc line="214">
                    Long-running task servicing system-wide or per-file completion port                    
                </javadoc>
                <method name="run" type="void" line="218">
                    <declaration name="myGroupAndInvokeCount" type="Invoker.GroupAndInvokeCount" line="219"/>
                    <declaration name="canInvokeDirect" type="boolean" line="220"/>
                    <declaration name="ioResult" type="CompletionStatus" line="221"/>
                    <declaration name="replaceMe" type="boolean" line="222"/>
                    <scope line="223">
                        <scope line="224">
                            <scope line="227"/>
                            <scope line="230"/>
                            <scope line="234">
                                <declaration name="task" type="Runnable" line="235"/>
                                <scope line="236"/>
                            </scope>
                            <declaration name="ch" type="OverlappedChannel" line="243"/>
                            <scope line="245">
                                <scope line="247"/>
                            </scope>
                            <scope line="252"/>
                            <declaration name="result" type="PendingFuture&lt;?,?&gt;" line="255"/>
                            <scope line="256"/>
                            <scope line="260">
                                <scope line="261"/>
                            </scope>
                            <declaration name="error" type="int" line="265"/>
                            <declaration name="rh" type="ResultHandler" line="266"/>
                            <scope line="268"/>
                            <scope line="271"/>
                        </scope>
                    </scope>
                    <scope line="276">
                        <declaration name="remaining" type="int" line="277"/>
                        <scope line="278"/>
                    </scope>
                </method>
            </class>
            <class name="CompletionStatus" line="284">
                <javadoc line="284">
                    Container for data returned by GetQueuedCompletionStatus                    
                </javadoc>
                <declaration name="error" type="int" line="288"/>
                <declaration name="bytesTransferred" type="int" line="289"/>
                <declaration name="completionKey" type="int" line="290"/>
                <declaration name="overlapped" type="long" line="291"/>
                <method name="CompletionStatus" type="constructor" line="292"/>
                <method name="error" type="int" line="294"/>
                <method name="bytesTransferred" type="int" line="297"/>
                <method name="completionKey" type="int" line="300"/>
                <method name="overlapped" type="long" line="303"/>
            </class>
            <method name="initIDs" type="void" line="307"/>
            <method name="createIoCompletionPort" type="long" line="308"/>
            <method name="close0" type="void" line="309"/>
            <method name="getQueuedCompletionStatus" type="void" line="310"/>
            <method name="postQueuedCompletionStatus" type="void" line="311"/>
            <method name="getErrorMessage" type="String" line="312"/>
            <scope line="313">
                <declaration name="osversion" type="String" line="316"/>
                <declaration name="vers" type="String" line="317"/>
            </scope>
        </class>
    </source>