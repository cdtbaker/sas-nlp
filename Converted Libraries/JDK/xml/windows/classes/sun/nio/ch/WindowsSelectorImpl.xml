<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.nio.channels.spi.SelectorProvider"/>
        <import package="java.nio.channels.Selector"/>
        <import package="java.nio.channels.ClosedSelectorException"/>
        <import package="java.nio.channels.Pipe"/>
        <import package="java.nio.channels.SelectableChannel"/>
        <import package="java.io.IOException"/>
        <import package="java.util.List"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Iterator"/>
        <class name="WindowsSelectorImpl" line="12">
            <extends class="SelectorImpl"/>
            <javadoc line="12">
                A multi-threaded implementation of Selector for Windows.                
                <author>
                    Konstantin Kladko                    
                </author>
                <author>
                    Mark Reinhold                    
                </author>
            </javadoc>
            <declaration name="INIT_CAP" type="int" line="18"/>
            <declaration name="MAX_SELECTABLE_FDS" type="int" line="19"/>
            <declaration name="channelArray" type="SelectionKeyImpl[]" line="20"/>
            <declaration name="pollWrapper" type="PollArrayWrapper" line="21"/>
            <declaration name="totalChannels" type="int" line="22"/>
            <declaration name="threadsCount" type="int" line="23"/>
            <declaration name="threads" type="List&lt;SelectThread&gt;" line="24"/>
            <declaration name="wakeupPipe" type="Pipe" line="25"/>
            <declaration name="wakeupSourceFd" type="int" line="26"/>
            <declaration name="closeLock" type="Object" line="27"/>
            <class name="FdMap" line="28">
                <extends class="HashMap">
                    <type_params>
                        <type_param name="Integer"/>
                        <type_param name="MapEntry"/>
                    </type_params>
                </extends>
                <declaration name="serialVersionUID" type="long" line="29"/>
                <method name="get" type="MapEntry" line="30">
                    <params>
                        <param name="desc" type="int"/>
                    </params>
                </method>
                <method name="put" type="MapEntry" line="33">
                    <params>
                        <param name="ski" type="SelectionKeyImpl"/>
                    </params>
                </method>
                <method name="remove" type="MapEntry" line="36">
                    <params>
                        <param name="ski" type="SelectionKeyImpl"/>
                    </params>
                    <declaration name="fd" type="Integer" line="37"/>
                    <declaration name="x" type="MapEntry" line="38"/>
                </method>
            </class>
            <class name="MapEntry" line="43">
                <declaration name="ski" type="SelectionKeyImpl" line="44"/>
                <declaration name="updateCount" type="long" line="45"/>
                <declaration name="clearedCount" type="long" line="46"/>
                <method name="MapEntry" type="constructor" line="47">
                    <params>
                        <param name="ski" type="SelectionKeyImpl"/>
                    </params>
                </method>
            </class>
            <declaration name="fdMap" type="FdMap" line="51"/>
            <declaration name="subSelector" type="SubSelector" line="52"/>
            <declaration name="timeout" type="long" line="53"/>
            <declaration name="interruptLock" type="Object" line="54"/>
            <declaration name="interruptTriggered" type="boolean" line="55"/>
            <method name="WindowsSelectorImpl" type="constructor" line="56">
                <params>
                    <param name="sp" type="SelectorProvider"/>
                </params>
                <declaration name="sink" type="SinkChannelImpl" line="61"/>
            </method>
            <method name="doSelect" type="int" line="66">
                <params>
                    <param name="timeout" type="long"/>
                </params>
                <scope line="70"/>
                <scope line="77">
                    <scope line="79"/>
                    <scope line="82"/>
                </scope>
                <scope line="87"/>
                <declaration name="updated" type="int" line="92"/>
            </method>
            <declaration name="startLock" type="StartLock" line="96"/>
            <class name="StartLock" line="97">
                <declaration name="runsCounter" type="long" line="98"/>
                <method name="startThreads" type="void" line="99"/>
                <method name="waitForStart" type="boolean" line="103">
                    <params>
                        <param name="thread" type="SelectThread"/>
                    </params>
                    <scope line="104">
                        <scope line="105">
                            <scope line="106"/>
                            <scope line="109"/>
                        </scope>
                        <scope line="113"/>
                        <scope line="116"/>
                    </scope>
                </method>
            </class>
            <declaration name="finishLock" type="FinishLock" line="123"/>
            <class name="FinishLock" line="124">
                <declaration name="threadsToFinish" type="int" line="125"/>
                <declaration name="exception" type="IOException" line="126"/>
                <method name="reset" type="void" line="127"/>
                <method name="threadFinished" type="void" line="130">
                    <scope line="131"/>
                </method>
                <method name="waitForHelperThreads" type="void" line="137">
                    <scope line="138"/>
                    <scope line="141">
                        <scope line="142"/>
                        <scope line="145"/>
                    </scope>
                </method>
                <method name="setException" type="void" line="150">
                    <params>
                        <param name="e" type="IOException"/>
                    </params>
                </method>
                <method name="checkForException" type="void" line="153">
                    <declaration name="message" type="StringBuffer" line="155"/>
                </method>
            </class>
            <class name="SubSelector" line="162">
                <declaration name="pollArrayIndex" type="int" line="163"/>
                <declaration name="readFds" type="int[]" line="164"/>
                <declaration name="writeFds" type="int[]" line="165"/>
                <declaration name="exceptFds" type="int[]" line="166"/>
                <method name="SubSelector" type="constructor" line="167"/>
                <method name="SubSelector" type="constructor" line="170">
                    <params>
                        <param name="threadIndex" type="int"/>
                    </params>
                </method>
                <method name="poll" type="int" line="173"/>
                <method name="poll" type="int" line="176">
                    <params>
                        <param name="index" type="int"/>
                    </params>
                </method>
                <method name="poll0" type="int" line="179"/>
                <method name="processSelectedKeys" type="int" line="180">
                    <params>
                        <param name="updateCount" type="long"/>
                    </params>
                    <declaration name="numKeysUpdated" type="int" line="181"/>
                </method>
                <javadoc line="187">
                    Note, clearedCount is used to determine if the readyOps have
                      been reset in this select operation. updateCount is used to
                      tell if a key has been counted as updated in this select
                      operation.
                      me.updateCount &lt;= me.clearedCount &lt;= updateCount                    
                </javadoc>
                <method name="processFDSet" type="int" line="194">
                    <params>
                        <param name="updateCount" type="long"/>
                        <param name="fds" type="int[]"/>
                        <param name="rOps" type="int"/>
                        <param name="isExceptFds" type="boolean"/>
                    </params>
                    <declaration name="numKeysUpdated" type="int" line="195"/>
                    <scope line="196">
                        <declaration name="desc" type="int" line="197"/>
                        <scope line="198">
                            <scope line="199"/>
                        </scope>
                        <declaration name="me" type="MapEntry" line="204"/>
                        <declaration name="sk" type="SelectionKeyImpl" line="206"/>
                        <scope line="207"/>
                        <scope line="210">
                            <scope line="211">
                                <scope line="212"/>
                            </scope>
                            <scope line="217">
                                <scope line="218"/>
                            </scope>
                        </scope>
                        <scope line="225">
                            <scope line="226">
                                <scope line="228"/>
                            </scope>
                            <scope line="234">
                                <scope line="236"/>
                            </scope>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="SelectThread" line="248">
                <extends class="Thread"/>
                <declaration name="index" type="int" line="249"/>
                <declaration name="subSelector" type="SubSelector" line="250"/>
                <declaration name="lastRun" type="long" line="251"/>
                <declaration name="zombie" type="boolean" line="252"/>
                <method name="SelectThread" type="constructor" line="253">
                    <params>
                        <param name="i" type="int"/>
                    </params>
                </method>
                <method name="makeZombie" type="void" line="258"/>
                <method name="isZombie" type="boolean" line="261"/>
                <method name="run" type="void" line="264">
                    <scope line="265">
                        <scope line="267"/>
                        <scope line="270"/>
                    </scope>
                </method>
            </class>
            <method name="adjustThreadsCount" type="void" line="277">
                <scope line="278">
                    <scope line="279">
                        <declaration name="newThread" type="SelectThread" line="280"/>
                    </scope>
                </scope>
                <scope line="286"/>
            </method>
            <method name="setWakeupSocket" type="void" line="290"/>
            <method name="setWakeupSocket0" type="void" line="293"/>
            <method name="resetWakeupSocket" type="void" line="294">
                <scope line="295"/>
            </method>
            <method name="resetWakeupSocket0" type="void" line="301"/>
            <method name="discardUrgentData" type="boolean" line="302"/>
            <declaration name="updateCount" type="long" line="303"/>
            <method name="updateSelectedKeys" type="int" line="304">
                <declaration name="numKeysUpdated" type="int" line="306"/>
                <scope line="308"/>
            </method>
            <method name="implClose" type="void" line="313">
                <scope line="314">
                    <scope line="315">
                        <scope line="316">
                            <scope line="317"/>
                            <scope line="322">
                                <scope line="323">
                                    <declaration name="selch" type="SelectableChannel" line="325"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="implRegister" type="void" line="339">
                <params>
                    <param name="ski" type="SelectionKeyImpl"/>
                </params>
                <scope line="340"/>
            </method>
            <method name="growIfNeeded" type="void" line="351">
                <scope line="352">
                    <declaration name="newSize" type="int" line="353"/>
                    <declaration name="temp" type="SelectionKeyImpl" line="354"/>
                </scope>
                <scope line="359"/>
            </method>
            <method name="implDereg" type="void" line="365">
                <params>
                    <param name="ski" type="SelectionKeyImpl"/>
                </params>
                <declaration name="i" type="int" line="366"/>
                <scope line="368">
                    <declaration name="endChannel" type="SelectionKeyImpl" line="369"/>
                </scope>
                <scope line="377"/>
                <declaration name="selch" type="SelectableChannel" line="385"/>
            </method>
            <method name="putEventOps" type="void" line="388">
                <params>
                    <param name="sk" type="SelectionKeyImpl"/>
                    <param name="ops" type="int"/>
                </params>
                <scope line="389"/>
            </method>
            <method name="wakeup" type="Selector" line="394">
                <scope line="395">
                    <scope line="396"/>
                </scope>
            </method>
            <scope line="403"/>
        </class>
    </source>