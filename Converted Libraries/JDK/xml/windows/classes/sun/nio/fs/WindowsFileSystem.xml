<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.fs">
        <import package="java.nio.file"/>
        <import package="java.nio.file.attribute"/>
        <import package="java.nio.file.spi"/>
        <import package="java.util"/>
        <import package="java.util.regex.Pattern"/>
        <import package="java.io.IOException"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="sun.security.action.GetPropertyAction"/>
        <class name="WindowsFileSystem" line="11">
            <extends class="FileSystem"/>
            <declaration name="provider" type="WindowsFileSystemProvider" line="12"/>
            <declaration name="defaultDirectory" type="String" line="13"/>
            <declaration name="defaultRoot" type="String" line="14"/>
            <declaration name="supportsLinks" type="boolean" line="15"/>
            <declaration name="supportsStreamEnumeration" type="boolean" line="16"/>
            <method name="WindowsFileSystem" type="constructor" line="17">
                <params>
                    <param name="provider" type="WindowsFileSystemProvider"/>
                    <param name="dir" type="String"/>
                </params>
                <declaration name="result" type="WindowsPathParser.Result" line="19"/>
                <declaration name="pa" type="PrivilegedAction&lt;String&gt;" line="23"/>
                <declaration name="osversion" type="String" line="24"/>
                <declaration name="vers" type="String[]" line="25"/>
                <declaration name="major" type="int" line="26"/>
                <declaration name="minor" type="int" line="27"/>
            </method>
            <method name="defaultDirectory" type="String" line="31"/>
            <method name="defaultRoot" type="String" line="34"/>
            <method name="supportsLinks" type="boolean" line="37"/>
            <method name="supportsStreamEnumeration" type="boolean" line="40"/>
            <method name="provider" type="FileSystemProvider" line="43"/>
            <method name="getSeparator" type="String" line="46"/>
            <method name="isOpen" type="boolean" line="49"/>
            <method name="isReadOnly" type="boolean" line="52"/>
            <method name="close" type="void" line="55"/>
            <method name="getRootDirectories" type="Iterable<Path>" line="58">
                <declaration name="drives" type="int" line="59"/>
                <scope line="60"/>
                <scope line="63"/>
                <declaration name="result" type="ArrayList&lt;Path&gt;" line="66"/>
                <declaration name="sm" type="SecurityManager" line="67"/>
                <scope line="68">
                    <scope line="69">
                        <declaration name="sb" type="StringBuilder" line="70"/>
                        <declaration name="root" type="String" line="73"/>
                        <scope line="74">
                            <scope line="75"/>
                            <scope line="78"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <class name="FileStoreIterator" line="87">
                <implements interface="Iterator">
                    <type_params>
                        <type_param name="FileStore"/>
                    </type_params>
                </implements>
                <javadoc line="87">
                    Iterator returned by getFileStores method.                    
                </javadoc>
                <declaration name="roots" type="Iterator&lt;Path&gt;" line="91"/>
                <declaration name="next" type="FileStore" line="92"/>
                <method name="FileStoreIterator" type="constructor" line="93"/>
                <method name="readNext" type="FileStore" line="96"/>
                <method name="hasNext" type="boolean" line="115"/>
                <method name="next" type="FileStore" line="120">
                    <scope line="122"/>
                    <scope line="125">
                        <declaration name="result" type="FileStore" line="126"/>
                    </scope>
                </method>
                <method name="remove" type="void" line="131"/>
            </class>
            <method name="getFileStores" type="Iterable<FileStore>" line="135">
                <declaration name="sm" type="SecurityManager" line="136"/>
                <scope line="137">
                    <scope line="138"/>
                    <scope line="141"/>
                </scope>
                <anonymous_class line="145">
                    <method name="iterator" type="Iterator<FileStore>" line="146"/>
                </anonymous_class>
            </method>
            <declaration name="supportedFileAttributeViews" type="Set&lt;String&gt;" line="152"/>
            <method name="supportedFileAttributeViews" type="Set<String>" line="153"/>
            <method name="getPath" type="Path" line="156">
                <params>
                    <param name="first" type="String"/>
                    <param name="more" type="String"/>
                </params>
                <declaration name="path" type="String" line="157"/>
                <scope line="158"/>
                <scope line="161">
                    <declaration name="sb" type="StringBuilder" line="162"/>
                    <scope line="164">
                        <scope line="165"/>
                    </scope>
                </scope>
            </method>
            <method name="getUserPrincipalLookupService" type="UserPrincipalLookupService" line="174"/>
            <class name="LookupService" line="177">
                <declaration name="instance" type="UserPrincipalLookupService" line="178"/>
                <anonymous_class line="178">
                    <method name="lookupPrincipalByName" type="UserPrincipal" line="179">
                        <params>
                            <param name="name" type="String"/>
                        </params>
                    </method>
                    <method name="lookupPrincipalByGroupName" type="GroupPrincipal" line="182">
                        <params>
                            <param name="group" type="String"/>
                        </params>
                        <declaration name="user" type="UserPrincipal" line="183"/>
                    </method>
                </anonymous_class>
            </class>
            <method name="getPathMatcher" type="PathMatcher" line="190">
                <params>
                    <param name="syntaxAndInput" type="String"/>
                </params>
                <declaration name="pos" type="int" line="191"/>
                <declaration name="syntax" type="String" line="193"/>
                <declaration name="input" type="String" line="194"/>
                <declaration name="expr" type="String" line="195"/>
                <scope line="196"/>
                <scope line="199">
                    <scope line="200"/>
                    <scope line="203"/>
                </scope>
                <declaration name="pattern" type="Pattern" line="207"/>
                <anonymous_class line="208">
                    <method name="matches" type="boolean" line="209">
                        <params>
                            <param name="path" type="Path"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <declaration name="GLOB_SYNTAX" type="String" line="215"/>
            <declaration name="REGEX_SYNTAX" type="String" line="216"/>
            <method name="newWatchService" type="WatchService" line="217"/>
        </class>
    </source>