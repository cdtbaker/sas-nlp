<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.fs">
        <import package="java.nio.file"/>
        <import package="java.io.IOException"/>
        <import package="java.util"/>
        <import package="com.sun.nio.file.ExtendedWatchEventModifier"/>
        <import package="sun.misc.Unsafe"/>
        <import package="sun.nio.fs.WindowsNativeDispatcher"/>
        <import package="sun.nio.fs.WindowsConstants"/>
        <class name="WindowsWatchService" line="41">
            <extends class="AbstractWatchService"/>
            <comment line="47">
                background thread to service I/O completion port                
            </comment>
            <comment line="201">
                file key to unique identify (open) directory                
            </comment>
            <comment line="232">
                all change events                
            </comment>
            <declaration name="unsafe" type="Unsafe" line="44"/>
            <declaration name="poller" type="Poller" line="47"/>
            <javadoc line="49">
                Creates an I/O completion port and a daemon thread to service it                
            </javadoc>
            <method name="WindowsWatchService" type="constructor" line="52">
                <params>
                    <param name="fs" type="WindowsFileSystem"/>
                </params>
                <comment line="54">
                    create I/O completion port                    
                </comment>
                <declaration name="port" type="long" line="54"/>
                <scope line="55"/>
                <scope line="57"/>
            </method>
            <method name="register" type="WatchKey" line="70">
                <params>
                    <param name="path" type="Path"/>
                    <param name="events" type="WatchEvent.Kind&lt;?&gt;[]"/>
                    <param name="modifiers" type="WatchEvent.Modifier"/>
                </params>
                <comment line="72">
                    delegate to poller                    
                </comment>
            </method>
            <method name="implClose" type="void" line="76">
                <comment line="78">
                    delegate to poller                    
                </comment>
            </method>
            <class name="WindowsWatchKey" line="81">
                <extends class="AbstractWatchKey"/>
                <comment line="86">
                    file key (used to detect existing registrations)                    
                </comment>
                <comment line="89">
                    handle to directory                    
                </comment>
                <comment line="92">
                    interest events                    
                </comment>
                <comment line="95">
                    subtree                    
                </comment>
                <comment line="98">
                    buffer for change events                    
                </comment>
                <comment line="101">
                    pointer to bytes returned (in buffer)                    
                </comment>
                <comment line="104">
                    pointer to overlapped structure (in buffer)                    
                </comment>
                <comment line="107">
                    completion key (used to map I/O completion to WatchKey)                    
                </comment>
                <comment line="172">
                    close directory and release buffer                    
                </comment>
                <comment line="178">
                    Invalidate key by closing directory and releasing buffer                    
                </comment>
                <comment line="246">
                    typedef struct _OVERLAPPED {
                         DWORD  Internal;
                         DWORD  InternalHigh;
                         DWORD  Offset;
                         DWORD  OffsetHigh;
                         HANDLE hEvent;
                     } OVERLAPPED;                    
                </comment>
                <comment line="256">
                    20 on 32-bit                    
                </comment>
                <comment line="258">
                    typedef struct _FILE_NOTIFY_INFORMATION {
                         DWORD NextEntryOffset;
                         DWORD Action;
                         DWORD FileNameLength;
                         WCHAR FileName[1];
                     } FileNameLength;                    
                </comment>
                <comment line="271">
                    size of per-directory buffer for events (FIXME - make this configurable)                    
                </comment>
                <comment line="278">
                    maps completion key to WatchKey                    
                </comment>
                <comment line="281">
                    maps file key to WatchKey                    
                </comment>
                <comment line="284">
                    unique completion key for each directory                    
                </comment>
                <comment line="438">
                    cancel single key                    
                </comment>
                <comment line="449">
                    close watch service                    
                </comment>
                <comment line="463">
                    Translate file change action into watch event                    
                </comment>
                <comment line="483">
                    process events (list of FILE_NOTIFY_INFORMATION structures)                    
                </comment>
                <javadoc line="81">
                    Windows implementation of WatchKey.                    
                </javadoc>
                <declaration name="fileKey" type="FileKey" line="86"/>
                <declaration name="handle" type="long" line="89"/>
                <declaration name="events" type="Set&amp;lt;? extends WatchEvent.Kind&amp;lt;?&amp;gt;&amp;gt;" line="92"/>
                <declaration name="watchSubtree" type="boolean" line="95"/>
                <declaration name="buffer" type="NativeBuffer" line="98"/>
                <declaration name="countAddress" type="long" line="101"/>
                <declaration name="overlappedAddress" type="long" line="104"/>
                <declaration name="completionKey" type="int" line="107"/>
                <method name="WindowsWatchKey" type="constructor" line="112">
                    <params>
                        <param name="dir" type="Path"/>
                        <param name="watcher" type="AbstractWatchService"/>
                        <param name="fileKey" type="FileKey"/>
                    </params>
                </method>
                <method name="init" type="WindowsWatchKey" line="124">
                    <params>
                        <param name="handle" type="long"/>
                        <param name="events" type="Set&lt;? extends WatchEvent.Kind&lt;?&gt;&gt;"/>
                        <param name="watchSubtree" type="boolean"/>
                        <param name="buffer" type="NativeBuffer"/>
                        <param name="countAddress" type="long"/>
                        <param name="overlappedAddress" type="long"/>
                        <param name="completionKey" type="int"/>
                    </params>
                </method>
                <method name="handle" type="long" line="135"/>
                <method name="events" type="Set&lt;? extends WatchEvent.Kind&lt;?&gt;&gt;" line="139"/>
                <method name="setEvents" type="void" line="143">
                    <params>
                        <param name="events" type="Set&lt;? extends WatchEvent.Kind&lt;?&gt;&gt;"/>
                    </params>
                </method>
                <method name="watchSubtree" type="boolean" line="147"/>
                <method name="buffer" type="NativeBuffer" line="151"/>
                <method name="countAddress" type="long" line="155"/>
                <method name="overlappedAddress" type="long" line="159"/>
                <method name="fileKey" type="FileKey" line="163"/>
                <method name="completionKey" type="int" line="167"/>
                <method name="releaseResources" type="void" line="172"/>
                <method name="invalidate" type="void" line="178"/>
                <method name="isValid" type="boolean" line="187"/>
                <method name="cancel" type="void" line="192">
                    <comment line="195">
                        delegate to poller                        
                    </comment>
                    <scope line="193"/>
                </method>
            </class>
            <class name="FileKey" line="201">
                <comment line="86">
                    file key (used to detect existing registrations)                    
                </comment>
                <comment line="89">
                    handle to directory                    
                </comment>
                <comment line="92">
                    interest events                    
                </comment>
                <comment line="95">
                    subtree                    
                </comment>
                <comment line="98">
                    buffer for change events                    
                </comment>
                <comment line="101">
                    pointer to bytes returned (in buffer)                    
                </comment>
                <comment line="104">
                    pointer to overlapped structure (in buffer)                    
                </comment>
                <comment line="107">
                    completion key (used to map I/O completion to WatchKey)                    
                </comment>
                <comment line="172">
                    close directory and release buffer                    
                </comment>
                <comment line="178">
                    Invalidate key by closing directory and releasing buffer                    
                </comment>
                <comment line="246">
                    typedef struct _OVERLAPPED {
                         DWORD  Internal;
                         DWORD  InternalHigh;
                         DWORD  Offset;
                         DWORD  OffsetHigh;
                         HANDLE hEvent;
                     } OVERLAPPED;                    
                </comment>
                <comment line="256">
                    20 on 32-bit                    
                </comment>
                <comment line="258">
                    typedef struct _FILE_NOTIFY_INFORMATION {
                         DWORD NextEntryOffset;
                         DWORD Action;
                         DWORD FileNameLength;
                         WCHAR FileName[1];
                     } FileNameLength;                    
                </comment>
                <comment line="271">
                    size of per-directory buffer for events (FIXME - make this configurable)                    
                </comment>
                <comment line="278">
                    maps completion key to WatchKey                    
                </comment>
                <comment line="281">
                    maps file key to WatchKey                    
                </comment>
                <comment line="284">
                    unique completion key for each directory                    
                </comment>
                <comment line="438">
                    cancel single key                    
                </comment>
                <comment line="449">
                    close watch service                    
                </comment>
                <comment line="463">
                    Translate file change action into watch event                    
                </comment>
                <comment line="483">
                    process events (list of FILE_NOTIFY_INFORMATION structures)                    
                </comment>
                <declaration name="volSerialNumber" type="int" line="202"/>
                <declaration name="fileIndexHigh" type="int" line="203"/>
                <declaration name="fileIndexLow" type="int" line="204"/>
                <method name="FileKey" type="constructor" line="206">
                    <params>
                        <param name="volSerialNumber" type="int"/>
                        <param name="fileIndexHigh" type="int"/>
                        <param name="fileIndexLow" type="int"/>
                    </params>
                </method>
                <method name="hashCode" type="int" line="213"/>
                <method name="equals" type="boolean" line="218">
                    <params>
                        <param name="obj" type="Object"/>
                    </params>
                    <declaration name="other" type="FileKey" line="223"/>
                </method>
            </class>
            <declaration name="ALL_FILE_NOTIFY_EVENTS" type="int" line="232"/>
            <class name="Poller" line="241">
                <extends class="AbstractPoller"/>
                <comment line="86">
                    file key (used to detect existing registrations)                    
                </comment>
                <comment line="89">
                    handle to directory                    
                </comment>
                <comment line="92">
                    interest events                    
                </comment>
                <comment line="95">
                    subtree                    
                </comment>
                <comment line="98">
                    buffer for change events                    
                </comment>
                <comment line="101">
                    pointer to bytes returned (in buffer)                    
                </comment>
                <comment line="104">
                    pointer to overlapped structure (in buffer)                    
                </comment>
                <comment line="107">
                    completion key (used to map I/O completion to WatchKey)                    
                </comment>
                <comment line="172">
                    close directory and release buffer                    
                </comment>
                <comment line="178">
                    Invalidate key by closing directory and releasing buffer                    
                </comment>
                <comment line="246">
                    typedef struct _OVERLAPPED {
                         DWORD  Internal;
                         DWORD  InternalHigh;
                         DWORD  Offset;
                         DWORD  OffsetHigh;
                         HANDLE hEvent;
                     } OVERLAPPED;                    
                </comment>
                <comment line="256">
                    20 on 32-bit                    
                </comment>
                <comment line="258">
                    typedef struct _FILE_NOTIFY_INFORMATION {
                         DWORD NextEntryOffset;
                         DWORD Action;
                         DWORD FileNameLength;
                         WCHAR FileName[1];
                     } FileNameLength;                    
                </comment>
                <comment line="271">
                    size of per-directory buffer for events (FIXME - make this configurable)                    
                </comment>
                <comment line="278">
                    maps completion key to WatchKey                    
                </comment>
                <comment line="281">
                    maps file key to WatchKey                    
                </comment>
                <comment line="284">
                    unique completion key for each directory                    
                </comment>
                <comment line="438">
                    cancel single key                    
                </comment>
                <comment line="449">
                    close watch service                    
                </comment>
                <comment line="463">
                    Translate file change action into watch event                    
                </comment>
                <comment line="483">
                    process events (list of FILE_NOTIFY_INFORMATION structures)                    
                </comment>
                <javadoc line="241">
                    Background thread to service I/O completion port.                    
                </javadoc>
                <declaration name="SIZEOF_DWORD" type="short" line="254"/>
                <declaration name="SIZEOF_OVERLAPPED" type="short" line="255"/>
                <declaration name="OFFSETOF_NEXTENTRYOFFSET" type="short" line="265"/>
                <declaration name="OFFSETOF_ACTION" type="short" line="266"/>
                <declaration name="OFFSETOF_FILENAMELENGTH" type="short" line="267"/>
                <declaration name="OFFSETOF_FILENAME" type="short" line="268"/>
                <declaration name="CHANGES_BUFFER_SIZE" type="int" line="271"/>
                <declaration name="fs" type="WindowsFileSystem" line="273"/>
                <declaration name="watcher" type="WindowsWatchService" line="274"/>
                <declaration name="port" type="long" line="275"/>
                <declaration name="int2key" type="Map&amp;lt;Integer,WindowsWatchKey&amp;gt;" line="278"/>
                <declaration name="fk2key" type="Map&amp;lt;FileKey,WindowsWatchKey&amp;gt;" line="281"/>
                <declaration name="lastCompletionKey" type="int" line="284"/>
                <method name="Poller" type="constructor" line="286">
                    <params>
                        <param name="fs" type="WindowsFileSystem"/>
                        <param name="watcher" type="WindowsWatchService"/>
                        <param name="port" type="long"/>
                    </params>
                </method>
                <method name="wakeup" type="void" line="296">
                    <scope line="297"/>
                    <scope line="299"/>
                </method>
                <javadoc line="304">
                    Register a directory for changes as follows:
                      1. Open directory
                      2. Read its attributes (and check it really is a directory)
                      3. Assign completion key and associated handle with completion port
                      4. Call ReadDirectoryChangesW to start (async) read of changes
                      5. Create or return existing key representing registration                    
                </javadoc>
                <method name="implRegister" type="Object" line="317">
                    <params>
                        <param name="obj" type="Path"/>
                        <param name="events" type="Set&lt;? extends WatchEvent.Kind&lt;?&gt;&gt;"/>
                        <param name="modifiers" type="WatchEvent.Modifier"/>
                    </params>
                    <comment line="322">
                        FILE_TREE modifier allowed                        
                    </comment>
                    <comment line="331">
                        ignore                        
                    </comment>
                    <comment line="336">
                        open directory                        
                    </comment>
                    <comment line="350">
                        read attributes and check file is a directory                        
                    </comment>
                    <comment line="361">
                        check if this directory is already registered                        
                    </comment>
                    <comment line="367">
                        if already registered and we&apos;re not changing the subtree
                         modifier then simply update the event and return the key.                        
                    </comment>
                    <comment line="374">
                        unique completion key (skip 0)                        
                    </comment>
                    <comment line="379">
                        associate handle with completion port                        
                    </comment>
                    <comment line="386">
                        allocate memory for events, including space for other structures
                         needed to do overlapped I/O                        
                    </comment>
                    <comment line="395">
                        start async read of changes to directory                        
                    </comment>
                    <comment line="411">
                        not registered so create new watch key                        
                    </comment>
                    <comment line="415">
                        map file key to watch key                        
                    </comment>
                    <comment line="418">
                        directory already registered so need to:
                         1. remove mapping from old completion key to existing watch key
                         2. release existing key&apos;s resources (handle/buffer)
                         3. re-initialize key with new handle/buffer                        
                    </comment>
                    <comment line="427">
                        map completion map to watch key                        
                    </comment>
                    <declaration name="dir" type="WindowsPath" line="318"/>
                    <declaration name="watchSubtree" type="boolean" line="319"/>
                    <scope line="322">
                        <scope line="323"/>
                        <scope line="326"/>
                    </scope>
                    <declaration name="handle" type="long" line="336"/>
                    <scope line="337"/>
                    <scope line="343"/>
                    <declaration name="registered" type="boolean" line="347"/>
                    <scope line="348">
                        <declaration name="attrs" type="WindowsFileAttributes" line="350"/>
                        <scope line="351"/>
                        <scope line="353"/>
                        <scope line="356"/>
                        <declaration name="fk" type="FileKey" line="361"/>
                        <declaration name="existing" type="WindowsWatchKey" line="364"/>
                        <scope line="368"/>
                        <declaration name="completionKey" type="int" line="374"/>
                        <scope line="379"/>
                        <scope line="381"/>
                        <declaration name="size" type="int" line="387"/>
                        <declaration name="buffer" type="NativeBuffer" line="388"/>
                        <declaration name="bufferAddress" type="long" line="390"/>
                        <declaration name="overlappedAddress" type="long" line="391"/>
                        <declaration name="countAddress" type="long" line="392"/>
                        <scope line="395"/>
                        <scope line="403"/>
                        <declaration name="watchKey" type="WindowsWatchKey" line="408"/>
                        <scope line="409"/>
                        <scope line="416"/>
                    </scope>
                    <scope line="432"/>
                </method>
                <method name="implCancelKey" type="void" line="439">
                    <params>
                        <param name="obj" type="WatchKey"/>
                    </params>
                    <declaration name="key" type="WindowsWatchKey" line="440"/>
                    <scope line="441"/>
                </method>
                <method name="implCloseAll" type="void" line="450">
                    <comment line="452">
                        cancel all keys                        
                    </comment>
                    <comment line="459">
                        close I/O completion port                        
                    </comment>
                    <scope line="452"/>
                </method>
                <method name="translateActionToEvent" type="WatchEvent.Kind&lt;?&gt;" line="464">
                    <params>
                        <param name="action" type="int"/>
                    </params>
                    <comment line="479">
                        action not recognized                        
                    </comment>
                </method>
                <method name="processEvents" type="void" line="483">
                    <params>
                        <param name="key" type="WindowsWatchKey"/>
                        <param name="size" type="int"/>
                    </params>
                    <comment line="491">
                        map action to event                        
                    </comment>
                    <comment line="494">
                        copy the name                        
                    </comment>
                    <comment line="503">
                        create FileName and queue event                        
                    </comment>
                    <comment line="509">
                        next event                        
                    </comment>
                    <declaration name="address" type="long" line="484"/>
                    <declaration name="nextOffset" type="int" line="486"/>
                    <scope line="487">
                        <declaration name="action" type="int" line="488"/>
                        <declaration name="kind" type="WatchEvent.Kind&amp;lt;?&amp;gt;" line="491"/>
                        <scope line="492">
                            <declaration name="nameLengthInBytes" type="int" line="494"/>
                            <scope line="495"/>
                            <declaration name="nameAsArray" type="char[]" line="498"/>
                            <declaration name="name" type="WindowsPath" line="503"/>
                        </scope>
                    </scope>
                </method>
                <javadoc line="514">
                    Poller main loop                    
                </javadoc>
                <method name="run" type="void" line="518">
                    <comment line="525">
                        this should not happen                        
                    </comment>
                    <comment line="530">
                        wakeup                        
                    </comment>
                    <comment line="539">
                        map completionKey to get WatchKey                        
                    </comment>
                    <comment line="542">
                        We get here when a registration is changed. In that case
                         the directory is closed which causes an event with the
                         old completion key.                        
                    </comment>
                    <comment line="548">
                        ReadDirectoryChangesW failed                        
                    </comment>
                    <comment line="550">
                        buffer overflow                        
                    </comment>
                    <comment line="554">
                        other error so cancel key                        
                    </comment>
                    <comment line="561">
                        process the events                        
                    </comment>
                    <comment line="565">
                        insufficient buffer size                        
                    </comment>
                    <comment line="569">
                        start read for next batch of changes                        
                    </comment>
                    <comment line="579">
                        no choice but to cancel key                        
                    </comment>
                    <scope line="519">
                        <declaration name="info" type="CompletionStatus" line="520"/>
                        <scope line="521"/>
                        <scope line="523"/>
                        <scope line="530">
                            <declaration name="shutdown" type="boolean" line="531"/>
                            <scope line="532"/>
                        </scope>
                        <declaration name="key" type="WindowsWatchKey" line="539"/>
                        <scope line="540"/>
                        <scope line="548">
                            <scope line="550"/>
                            <scope line="552"/>
                        </scope>
                        <scope line="561"/>
                        <scope line="563"/>
                        <scope line="569"/>
                        <scope line="577"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>