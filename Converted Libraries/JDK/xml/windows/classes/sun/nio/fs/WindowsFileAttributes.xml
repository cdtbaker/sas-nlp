<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.fs">
        <import package="java.nio.file.attribute"/>
        <import package="java.util.concurrent.TimeUnit"/>
        <import package="java.security.AccessController"/>
        <import package="sun.misc.Unsafe"/>
        <import package="sun.security.action.GetPropertyAction"/>
        <import package="sun.nio.fs.WindowsNativeDispatcher"/>
        <import package="sun.nio.fs.WindowsConstants"/>
        <class name="WindowsFileAttributes" line="37">
            <comment line="47">
                typedef struct _BY_HANDLE_FILE_INFORMATION {
                     DWORD    dwFileAttributes;
                     FILETIME ftCreationTime;
                     FILETIME ftLastAccessTime;
                     FILETIME ftLastWriteTime;
                     DWORD    dwVolumeSerialNumber;
                     DWORD    nFileSizeHigh;
                     DWORD    nFileSizeLow;
                     DWORD    nNumberOfLinks;
                     DWORD    nFileIndexHigh;
                     DWORD    nFileIndexLow;
                 } BY_HANDLE_FILE_INFORMATION;                
            </comment>
            <comment line="72">
                typedef struct _WIN32_FILE_ATTRIBUTE_DATA {
                   DWORD dwFileAttributes;
                   FILETIME ftCreationTime;
                   FILETIME ftLastAccessTime;
                   FILETIME ftLastWriteTime;
                   DWORD nFileSizeHigh;
                   DWORD nFileSizeLow;
                 } WIN32_FILE_ATTRIBUTE_DATA;                
            </comment>
            <comment line="113">
                used to adjust values between Windows and java epoch                
            </comment>
            <comment line="116">
                indicates if accurate metadata is required (interesting on NTFS only)                
            </comment>
            <comment line="125">
                attributes                
            </comment>
            <comment line="133">
                additional attributes when using GetFileInformationByHandle                
            </comment>
            <comment line="381">
                package-private                
            </comment>
            <comment line="429">
                package private                
            </comment>
            <implements interface="DosFileAttributes"/>
            <javadoc line="37">
                Windows implementation of DosFileAttributes/BasicFileAttributes                
            </javadoc>
            <declaration name="unsafe" type="Unsafe" line="44"/>
            <declaration name="SIZEOF_FILE_INFORMATION" type="short" line="60"/>
            <declaration name="OFFSETOF_FILE_INFORMATION_ATTRIBUTES" type="short" line="61"/>
            <declaration name="OFFSETOF_FILE_INFORMATION_CREATETIME" type="short" line="62"/>
            <declaration name="OFFSETOF_FILE_INFORMATION_LASTACCESSTIME" type="short" line="63"/>
            <declaration name="OFFSETOF_FILE_INFORMATION_LASTWRITETIME" type="short" line="64"/>
            <declaration name="OFFSETOF_FILE_INFORMATION_VOLSERIALNUM" type="short" line="65"/>
            <declaration name="OFFSETOF_FILE_INFORMATION_SIZEHIGH" type="short" line="66"/>
            <declaration name="OFFSETOF_FILE_INFORMATION_SIZELOW" type="short" line="67"/>
            <declaration name="OFFSETOF_FILE_INFORMATION_INDEXHIGH" type="short" line="68"/>
            <declaration name="OFFSETOF_FILE_INFORMATION_INDEXLOW" type="short" line="69"/>
            <declaration name="SIZEOF_FILE_ATTRIBUTE_DATA" type="short" line="81"/>
            <declaration name="OFFSETOF_FILE_ATTRIBUTE_DATA_ATTRIBUTES" type="short" line="82"/>
            <declaration name="OFFSETOF_FILE_ATTRIBUTE_DATA_CREATETIME" type="short" line="83"/>
            <declaration name="OFFSETOF_FILE_ATTRIBUTE_DATA_LASTACCESSTIME" type="short" line="84"/>
            <declaration name="OFFSETOF_FILE_ATTRIBUTE_DATA_LASTWRITETIME" type="short" line="85"/>
            <declaration name="OFFSETOF_FILE_ATTRIBUTE_DATA_SIZEHIGH" type="short" line="86"/>
            <declaration name="OFFSETOF_FILE_ATTRIBUTE_DATA_SIZELOW" type="short" line="87"/>
            <declaration name="SIZEOF_FIND_DATA" type="short" line="89"/>
            <javadoc line="89">
                typedef struct _WIN32_FIND_DATA {
                  DWORD dwFileAttributes;
                  FILETIME ftCreationTime;
                  FILETIME ftLastAccessTime;
                  FILETIME ftLastWriteTime;
                  DWORD nFileSizeHigh;
                  DWORD nFileSizeLow;
                  DWORD dwReserved0;
                  DWORD dwReserved1;
                  TCHAR cFileName[MAX_PATH];
                  TCHAR cAlternateFileName[14];
                  } WIN32_FIND_DATA;                
            </javadoc>
            <declaration name="OFFSETOF_FIND_DATA_ATTRIBUTES" type="short" line="104"/>
            <declaration name="OFFSETOF_FIND_DATA_CREATETIME" type="short" line="105"/>
            <declaration name="OFFSETOF_FIND_DATA_LASTACCESSTIME" type="short" line="106"/>
            <declaration name="OFFSETOF_FIND_DATA_LASTWRITETIME" type="short" line="107"/>
            <declaration name="OFFSETOF_FIND_DATA_SIZEHIGH" type="short" line="108"/>
            <declaration name="OFFSETOF_FIND_DATA_SIZELOW" type="short" line="109"/>
            <declaration name="OFFSETOF_FIND_DATA_RESERVED0" type="short" line="110"/>
            <declaration name="WINDOWS_EPOCH_IN_MICROSECONDS" type="long" line="113"/>
            <declaration name="ensureAccurateMetadata" type="boolean" line="116"/>
            <scope line="117">
                <declaration name="propValue" type="String" line="118"/>
            </scope>
            <declaration name="fileAttrs" type="int" line="125"/>
            <declaration name="creationTime" type="long" line="126"/>
            <declaration name="lastAccessTime" type="long" line="127"/>
            <declaration name="lastWriteTime" type="long" line="128"/>
            <declaration name="size" type="long" line="129"/>
            <declaration name="reparseTag" type="int" line="130"/>
            <declaration name="volSerialNumber" type="int" line="133"/>
            <declaration name="fileIndexHigh" type="int" line="134"/>
            <declaration name="fileIndexLow" type="int" line="135"/>
            <javadoc line="137">
                Convert 64-bit value representing the number of 100-nanosecond intervals
                  since January 1, 1601 to a FileTime.                
            </javadoc>
            <method name="toFileTime" type="FileTime" line="141">
                <params>
                    <param name="time" type="long"/>
                </params>
                <comment line="143">
                    100ns -&gt; us                    
                </comment>
                <comment line="145">
                    adjust to java epoch                    
                </comment>
            </method>
            <javadoc line="149">
                Convert FileTime to 64-bit value representing the number of 100-nanosecond
                  intervals since January 1, 1601.                
            </javadoc>
            <method name="toWindowsTime" type="long" line="153">
                <params>
                    <param name="time" type="FileTime"/>
                </params>
                <comment line="156">
                    adjust to Windows epoch+= 11644473600000000L;                    
                </comment>
                <comment line="158">
                    us -&gt; 100ns                    
                </comment>
                <declaration name="value" type="long" line="154"/>
            </method>
            <javadoc line="162">
                Initialize a new instance of this class                
            </javadoc>
            <method name="WindowsFileAttributes" type="constructor" line="174">
                <params>
                    <param name="fileAttrs" type="int"/>
                    <param name="creationTime" type="long"/>
                    <param name="lastAccessTime" type="long"/>
                    <param name="lastWriteTime" type="long"/>
                    <param name="size" type="long"/>
                    <param name="reparseTag" type="int"/>
                    <param name="volSerialNumber" type="int"/>
                    <param name="fileIndexHigh" type="int"/>
                    <param name="fileIndexLow" type="int"/>
                </params>
            </method>
            <javadoc line="186">
                Create a WindowsFileAttributes from a BY_HANDLE_FILE_INFORMATION structure                
            </javadoc>
            <method name="fromFileInformation" type="WindowsFileAttributes" line="189">
                <params>
                    <param name="address" type="long"/>
                    <param name="reparseTag" type="int"/>
                </params>
                <declaration name="fileAttrs" type="int" line="190"/>
                <declaration name="creationTime" type="long" line="191"/>
                <declaration name="lastAccessTime" type="long" line="192"/>
                <declaration name="lastWriteTime" type="long" line="193"/>
                <declaration name="size" type="long" line="194"/>
                <declaration name="volSerialNumber" type="int" line="196"/>
                <declaration name="fileIndexHigh" type="int" line="197"/>
                <declaration name="fileIndexLow" type="int" line="198"/>
            </method>
            <javadoc line="210">
                Create a WindowsFileAttributes from a WIN32_FILE_ATTRIBUTE_DATA structure                
            </javadoc>
            <method name="fromFileAttributeData" type="WindowsFileAttributes" line="213">
                <params>
                    <param name="address" type="long"/>
                    <param name="reparseTag" type="int"/>
                </params>
                <comment line="227">
                    volSerialNumber                    
                </comment>
                <comment line="228">
                    fileIndexHigh                    
                </comment>
                <comment line="229">
                    fileIndexLow                    
                </comment>
                <declaration name="fileAttrs" type="int" line="214"/>
                <declaration name="creationTime" type="long" line="215"/>
                <declaration name="lastAccessTime" type="long" line="216"/>
                <declaration name="lastWriteTime" type="long" line="217"/>
                <declaration name="size" type="long" line="218"/>
            </method>
            <javadoc line="232">
                Allocates a native buffer for a WIN32_FIND_DATA structure                
            </javadoc>
            <method name="getBufferForFindData" type="NativeBuffer" line="235"/>
            <javadoc line="239">
                Create a WindowsFileAttributes from a WIN32_FIND_DATA structure                
            </javadoc>
            <method name="fromFindData" type="WindowsFileAttributes" line="242">
                <params>
                    <param name="address" type="long"/>
                </params>
                <comment line="258">
                    volSerialNumber                    
                </comment>
                <comment line="259">
                    fileIndexHigh                    
                </comment>
                <comment line="260">
                    fileIndexLow                    
                </comment>
                <declaration name="fileAttrs" type="int" line="243"/>
                <declaration name="creationTime" type="long" line="244"/>
                <declaration name="lastAccessTime" type="long" line="245"/>
                <declaration name="lastWriteTime" type="long" line="246"/>
                <declaration name="size" type="long" line="247"/>
                <declaration name="reparseTag" type="int" line="249"/>
            </method>
            <javadoc line="262">
                Reads the attributes of an open file                
            </javadoc>
            <method name="readAttributes" type="WindowsFileAttributes" line="267">
                <params>
                    <param name="handle" type="long"/>
                </params>
                <comment line="275">
                    if file is a reparse point then read the tag                    
                </comment>
                <declaration name="buffer" type="NativeBuffer" line="268"/>
                <scope line="270">
                    <declaration name="address" type="long" line="271"/>
                    <declaration name="reparseTag" type="int" line="275"/>
                    <declaration name="fileAttrs" type="int" line="276"/>
                    <scope line="278">
                        <declaration name="size" type="int" line="279"/>
                        <declaration name="reparseBuffer" type="NativeBuffer" line="280"/>
                        <scope line="281"/>
                        <scope line="284"/>
                    </scope>
                </scope>
                <scope line="290"/>
            </method>
            <javadoc line="295">
                Returns attributes of given file.                
            </javadoc>
            <method name="get" type="WindowsFileAttributes" line="300">
                <params>
                    <param name="path" type="WindowsPath"/>
                    <param name="followLinks" type="boolean"/>
                </params>
                <comment line="305">
                    GetFileAttributesEx is the fastest way to read the attributes                    
                </comment>
                <comment line="311">
                    if reparse point then file may be a sym link; otherwise
                     just return the attributes                    
                </comment>
                <comment line="325">
                    For sharing violations, fallback to FindFirstFile if the file
                     is not a root directory.                    
                </comment>
                <comment line="337">
                    FindFirstFile does not follow sym links. Even if
                     followLinks is false, there isn&apos;t sufficient information
                     in the WIN32_FIND_DATA structure to know if the reparse
                     point is a sym link.                    
                </comment>
                <comment line="352">
                    file is reparse point so need to open file to get attributes                    
                </comment>
                <scope line="301">
                    <declaration name="firstException" type="WindowsException" line="302"/>
                    <declaration name="buffer" type="NativeBuffer" line="305"/>
                    <scope line="307">
                        <declaration name="address" type="long" line="308"/>
                        <declaration name="fileAttrs" type="int" line="312"/>
                    </scope>
                    <scope line="316"/>
                    <scope line="320"/>
                    <scope line="326">
                        <declaration name="search" type="String" line="327"/>
                        <declaration name="last" type="char" line="328"/>
                        <scope line="332">
                            <declaration name="handle" type="long" line="333"/>
                            <declaration name="attrs" type="WindowsFileAttributes" line="335"/>
                        </scope>
                        <scope line="343"/>
                        <scope line="345"/>
                    </scope>
                </scope>
                <declaration name="handle" type="long" line="352"/>
                <scope line="353"/>
                <scope line="355"/>
            </method>
            <javadoc line="360">
                Returns true if the attributes are of the same file - both files must
                  be open.                
            </javadoc>
            <method name="isSameFile" type="boolean" line="366">
                <params>
                    <param name="attrs1" type="WindowsFileAttributes"/>
                    <param name="attrs2" type="WindowsFileAttributes"/>
                </params>
                <comment line="368">
                    volume serial number and file index must be the same                    
                </comment>
            </method>
            <javadoc line="373">
                Returns true if the attributes are of a file with a reparse point.                
            </javadoc>
            <method name="isReparsePoint" type="boolean" line="376">
                <params>
                    <param name="attributes" type="int"/>
                </params>
            </method>
            <method name="attributes" type="int" line="381"/>
            <method name="volSerialNumber" type="int" line="385"/>
            <method name="fileIndexHigh" type="int" line="391"/>
            <method name="fileIndexLow" type="int" line="397"/>
            <method name="size" type="long" line="404"/>
            <method name="lastModifiedTime" type="FileTime" line="409"/>
            <method name="lastAccessTime" type="FileTime" line="414"/>
            <method name="creationTime" type="FileTime" line="419"/>
            <method name="fileKey" type="Object" line="424"/>
            <method name="isReparsePoint" type="boolean" line="429"/>
            <method name="isDirectoryLink" type="boolean" line="433"/>
            <method name="isSymbolicLink" type="boolean" line="438"/>
            <method name="isDirectory" type="boolean" line="443">
                <comment line="445">
                    ignore FILE_ATTRIBUTE_DIRECTORY attribute if file is a sym link                    
                </comment>
            </method>
            <method name="isOther" type="boolean" line="451">
                <comment line="455">
                    return true if device or reparse point                    
                </comment>
            </method>
            <method name="isRegularFile" type="boolean" line="459"/>
            <method name="isReadOnly" type="boolean" line="464"/>
            <method name="isHidden" type="boolean" line="469"/>
            <method name="isArchive" type="boolean" line="474"/>
            <method name="isSystem" type="boolean" line="479"/>
        </class>
    </source>