<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.fs">
        <import package="java.nio.file.attribute"/>
        <import package="java.util.concurrent.TimeUnit"/>
        <import package="java.security.AccessController"/>
        <import package="sun.misc.Unsafe"/>
        <import package="sun.security.action.GetPropertyAction"/>
        <import package="sun.nio.fs.WindowsNativeDispatcher"/>
        <import package="sun.nio.fs.WindowsConstants"/>
        <class name="WindowsFileAttributes" line="9">
            <implements interface="DosFileAttributes"/>
            <javadoc line="9">
                Windows implementation of DosFileAttributes/BasicFileAttributes                
            </javadoc>
            <declaration name="unsafe" type="Unsafe" line="13"/>
            <declaration name="SIZEOF_FILE_INFORMATION" type="short" line="14"/>
            <declaration name="OFFSETOF_FILE_INFORMATION_ATTRIBUTES" type="short" line="15"/>
            <declaration name="OFFSETOF_FILE_INFORMATION_CREATETIME" type="short" line="16"/>
            <declaration name="OFFSETOF_FILE_INFORMATION_LASTACCESSTIME" type="short" line="17"/>
            <declaration name="OFFSETOF_FILE_INFORMATION_LASTWRITETIME" type="short" line="18"/>
            <declaration name="OFFSETOF_FILE_INFORMATION_VOLSERIALNUM" type="short" line="19"/>
            <declaration name="OFFSETOF_FILE_INFORMATION_SIZEHIGH" type="short" line="20"/>
            <declaration name="OFFSETOF_FILE_INFORMATION_SIZELOW" type="short" line="21"/>
            <declaration name="OFFSETOF_FILE_INFORMATION_INDEXHIGH" type="short" line="22"/>
            <declaration name="OFFSETOF_FILE_INFORMATION_INDEXLOW" type="short" line="23"/>
            <declaration name="SIZEOF_FILE_ATTRIBUTE_DATA" type="short" line="24"/>
            <declaration name="OFFSETOF_FILE_ATTRIBUTE_DATA_ATTRIBUTES" type="short" line="25"/>
            <declaration name="OFFSETOF_FILE_ATTRIBUTE_DATA_CREATETIME" type="short" line="26"/>
            <declaration name="OFFSETOF_FILE_ATTRIBUTE_DATA_LASTACCESSTIME" type="short" line="27"/>
            <declaration name="OFFSETOF_FILE_ATTRIBUTE_DATA_LASTWRITETIME" type="short" line="28"/>
            <declaration name="OFFSETOF_FILE_ATTRIBUTE_DATA_SIZEHIGH" type="short" line="29"/>
            <declaration name="OFFSETOF_FILE_ATTRIBUTE_DATA_SIZELOW" type="short" line="30"/>
            <declaration name="SIZEOF_FIND_DATA" type="short" line="31"/>
            <javadoc line="31">
                typedef struct _WIN32_FIND_DATA {
                  DWORD dwFileAttributes;
                  FILETIME ftCreationTime;
                  FILETIME ftLastAccessTime;
                  FILETIME ftLastWriteTime;
                  DWORD nFileSizeHigh;
                  DWORD nFileSizeLow;
                  DWORD dwReserved0;
                  DWORD dwReserved1;
                  TCHAR cFileName[MAX_PATH];
                  TCHAR cAlternateFileName[14];
                  } WIN32_FIND_DATA;                
            </javadoc>
            <declaration name="OFFSETOF_FIND_DATA_ATTRIBUTES" type="short" line="46"/>
            <declaration name="OFFSETOF_FIND_DATA_CREATETIME" type="short" line="47"/>
            <declaration name="OFFSETOF_FIND_DATA_LASTACCESSTIME" type="short" line="48"/>
            <declaration name="OFFSETOF_FIND_DATA_LASTWRITETIME" type="short" line="49"/>
            <declaration name="OFFSETOF_FIND_DATA_SIZEHIGH" type="short" line="50"/>
            <declaration name="OFFSETOF_FIND_DATA_SIZELOW" type="short" line="51"/>
            <declaration name="OFFSETOF_FIND_DATA_RESERVED0" type="short" line="52"/>
            <declaration name="WINDOWS_EPOCH_IN_MICROSECONDS" type="long" line="53"/>
            <declaration name="ensureAccurateMetadata" type="boolean" line="54"/>
            <scope line="55">
                <declaration name="propValue" type="String" line="56"/>
            </scope>
            <declaration name="fileAttrs" type="int" line="59"/>
            <declaration name="creationTime" type="long" line="60"/>
            <declaration name="lastAccessTime" type="long" line="61"/>
            <declaration name="lastWriteTime" type="long" line="62"/>
            <declaration name="size" type="long" line="63"/>
            <declaration name="reparseTag" type="int" line="64"/>
            <declaration name="volSerialNumber" type="int" line="65"/>
            <declaration name="fileIndexHigh" type="int" line="66"/>
            <declaration name="fileIndexLow" type="int" line="67"/>
            <javadoc line="68">
                Convert 64-bit value representing the number of 100-nanosecond intervals
                  since January 1, 1601 to a FileTime.                
            </javadoc>
            <method name="toFileTime" type="FileTime" line="72">
                <params>
                    <param name="time" type="long"/>
                </params>
            </method>
            <javadoc line="77">
                Convert FileTime to 64-bit value representing the number of 100-nanosecond
                  intervals since January 1, 1601.                
            </javadoc>
            <method name="toWindowsTime" type="long" line="81">
                <params>
                    <param name="time" type="FileTime"/>
                </params>
                <declaration name="value" type="long" line="82"/>
            </method>
            <javadoc line="87">
                Initialize a new instance of this class                
            </javadoc>
            <method name="WindowsFileAttributes" type="constructor" line="90">
                <params>
                    <param name="fileAttrs" type="int"/>
                    <param name="creationTime" type="long"/>
                    <param name="lastAccessTime" type="long"/>
                    <param name="lastWriteTime" type="long"/>
                    <param name="size" type="long"/>
                    <param name="reparseTag" type="int"/>
                    <param name="volSerialNumber" type="int"/>
                    <param name="fileIndexHigh" type="int"/>
                    <param name="fileIndexLow" type="int"/>
                </params>
            </method>
            <javadoc line="101">
                Create a WindowsFileAttributes from a BY_HANDLE_FILE_INFORMATION structure                
            </javadoc>
            <method name="fromFileInformation" type="WindowsFileAttributes" line="104">
                <params>
                    <param name="address" type="long"/>
                    <param name="reparseTag" type="int"/>
                </params>
                <declaration name="fileAttrs" type="int" line="105"/>
                <declaration name="creationTime" type="long" line="106"/>
                <declaration name="lastAccessTime" type="long" line="107"/>
                <declaration name="lastWriteTime" type="long" line="108"/>
                <declaration name="size" type="long" line="109"/>
                <declaration name="volSerialNumber" type="int" line="110"/>
                <declaration name="fileIndexHigh" type="int" line="111"/>
                <declaration name="fileIndexLow" type="int" line="112"/>
            </method>
            <javadoc line="115">
                Create a WindowsFileAttributes from a WIN32_FILE_ATTRIBUTE_DATA structure                
            </javadoc>
            <method name="fromFileAttributeData" type="WindowsFileAttributes" line="118">
                <params>
                    <param name="address" type="long"/>
                    <param name="reparseTag" type="int"/>
                </params>
                <declaration name="fileAttrs" type="int" line="119"/>
                <declaration name="creationTime" type="long" line="120"/>
                <declaration name="lastAccessTime" type="long" line="121"/>
                <declaration name="lastWriteTime" type="long" line="122"/>
                <declaration name="size" type="long" line="123"/>
            </method>
            <javadoc line="126">
                Allocates a native buffer for a WIN32_FIND_DATA structure                
            </javadoc>
            <method name="getBufferForFindData" type="NativeBuffer" line="129"/>
            <javadoc line="132">
                Create a WindowsFileAttributes from a WIN32_FIND_DATA structure                
            </javadoc>
            <method name="fromFindData" type="WindowsFileAttributes" line="135">
                <params>
                    <param name="address" type="long"/>
                </params>
                <declaration name="fileAttrs" type="int" line="136"/>
                <declaration name="creationTime" type="long" line="137"/>
                <declaration name="lastAccessTime" type="long" line="138"/>
                <declaration name="lastWriteTime" type="long" line="139"/>
                <declaration name="size" type="long" line="140"/>
                <declaration name="reparseTag" type="int" line="141"/>
            </method>
            <javadoc line="144">
                Reads the attributes of an open file                
            </javadoc>
            <method name="readAttributes" type="WindowsFileAttributes" line="147">
                <params>
                    <param name="handle" type="long"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="148"/>
                <scope line="149">
                    <declaration name="address" type="long" line="150"/>
                    <declaration name="reparseTag" type="int" line="152"/>
                    <declaration name="fileAttrs" type="int" line="153"/>
                    <scope line="154">
                        <declaration name="size" type="int" line="155"/>
                        <declaration name="reparseBuffer" type="NativeBuffer" line="156"/>
                        <scope line="157"/>
                        <scope line="161"/>
                    </scope>
                </scope>
                <scope line="167"/>
            </method>
            <javadoc line="171">
                Returns attributes of given file.                
            </javadoc>
            <method name="get" type="WindowsFileAttributes" line="174">
                <params>
                    <param name="path" type="WindowsPath"/>
                    <param name="followLinks" type="boolean"/>
                </params>
                <scope line="175">
                    <declaration name="firstException" type="WindowsException" line="176"/>
                    <declaration name="buffer" type="NativeBuffer" line="177"/>
                    <scope line="178">
                        <declaration name="address" type="long" line="179"/>
                        <declaration name="fileAttrs" type="int" line="181"/>
                    </scope>
                    <scope line="184"/>
                    <scope line="188"/>
                    <scope line="191">
                        <declaration name="search" type="String" line="192"/>
                        <declaration name="last" type="char" line="193"/>
                        <scope line="196">
                            <declaration name="handle" type="long" line="197"/>
                            <declaration name="attrs" type="WindowsFileAttributes" line="199"/>
                        </scope>
                        <scope line="203"/>
                        <scope line="206"/>
                    </scope>
                </scope>
                <declaration name="handle" type="long" line="211"/>
                <scope line="212"/>
                <scope line="215"/>
            </method>
            <javadoc line="219">
                Returns true if the attributes are of the same file - both files must
                  be open.                
            </javadoc>
            <method name="isSameFile" type="boolean" line="223">
                <params>
                    <param name="attrs1" type="WindowsFileAttributes"/>
                    <param name="attrs2" type="WindowsFileAttributes"/>
                </params>
            </method>
            <javadoc line="226">
                Returns true if the attributes are of a file with a reparse point.                
            </javadoc>
            <method name="isReparsePoint" type="boolean" line="229">
                <params>
                    <param name="attributes" type="int"/>
                </params>
            </method>
            <method name="attributes" type="int" line="232"/>
            <method name="volSerialNumber" type="int" line="235"/>
            <method name="fileIndexHigh" type="int" line="239"/>
            <method name="fileIndexLow" type="int" line="243"/>
            <method name="size" type="long" line="247"/>
            <method name="lastModifiedTime" type="FileTime" line="250"/>
            <method name="lastAccessTime" type="FileTime" line="253"/>
            <method name="creationTime" type="FileTime" line="256"/>
            <method name="fileKey" type="Object" line="259"/>
            <method name="isReparsePoint" type="boolean" line="262"/>
            <method name="isDirectoryLink" type="boolean" line="265"/>
            <method name="isSymbolicLink" type="boolean" line="268"/>
            <method name="isDirectory" type="boolean" line="271"/>
            <method name="isOther" type="boolean" line="275"/>
            <method name="isRegularFile" type="boolean" line="279"/>
            <method name="isReadOnly" type="boolean" line="282"/>
            <method name="isHidden" type="boolean" line="285"/>
            <method name="isArchive" type="boolean" line="288"/>
            <method name="isSystem" type="boolean" line="291"/>
        </class>
    </source>