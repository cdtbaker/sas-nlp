<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.fs">
        <import package="java.nio.file.InvalidPathException"/>
        <class name="WindowsPathParser" line="30">
            <comment line="219">
                Reserved characters for window path name                
            </comment>
            <javadoc line="30">
                A parser of Windows path strings                
            </javadoc>
            <method name="WindowsPathParser" type="constructor" line="35"/>
            <class name="Result" line="37">
                <javadoc line="37">
                    The result of a parse operation                    
                </javadoc>
                <declaration name="type" type="WindowsPathType" line="41"/>
                <declaration name="root" type="String" line="42"/>
                <declaration name="path" type="String" line="43"/>
                <method name="Result" type="constructor" line="45">
                    <params>
                        <param name="type" type="WindowsPathType"/>
                        <param name="root" type="String"/>
                        <param name="path" type="String"/>
                    </params>
                </method>
                <javadoc line="51">
                    The path type                    
                </javadoc>
                <method name="type" type="WindowsPathType" line="54"/>
                <javadoc line="58">
                    The root component                    
                </javadoc>
                <method name="root" type="String" line="61"/>
                <javadoc line="65">
                    The normalized path (includes root)                    
                </javadoc>
                <method name="path" type="String" line="68"/>
            </class>
            <javadoc line="73">
                Parses the given input as a Windows path                
            </javadoc>
            <method name="parse" type="Result" line="76">
                <params>
                    <param name="input" type="String"/>
                </params>
            </method>
            <javadoc line="80">
                Parses the given input as a Windows path where it is known that the
                  path is already normalized.                
            </javadoc>
            <method name="parseNormalizedPath" type="Result" line="84">
                <params>
                    <param name="input" type="String"/>
                </params>
            </method>
            <javadoc line="88">
                Parses the given input as a Windows path.                
                <param>
                    requireToNormalizeIndicates if the path requires to be normalized                    
                </param>
            </javadoc>
            <method name="parse" type="Result" line="94">
                <params>
                    <param name="input" type="String"/>
                    <param name="requireToNormalize" type="boolean"/>
                </params>
                <comment line="106">
                    UNC: We keep the first two slash, collapse all the                    
                </comment>
                <comment line="107">
                    following, then take the hostname and share name out,                    
                </comment>
                <comment line="108">
                    meanwhile collapsing all the redundant slashes.                    
                </comment>
                <comment line="114">
                    host                    
                </comment>
                <declaration name="root" type="String" line="95"/>
                <declaration name="type" type="WindowsPathType" line="96"/>
                <declaration name="len" type="int" line="98"/>
                <declaration name="off" type="int" line="99"/>
                <scope line="100">
                    <declaration name="c0" type="char" line="101"/>
                    <declaration name="c1" type="char" line="102"/>
                    <declaration name="c" type="char" line="103"/>
                    <declaration name="next" type="int" line="104"/>
                    <scope line="105">
                        <declaration name="host" type="String" line="114"/>
                    </scope>
                    <scope line="121">
                        <scope line="122">
                            <scope line="124"/>
                            <scope line="128"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="135">
                    <scope line="136"/>
                    <scope line="139"/>
                </scope>
                <scope line="144">
                    <declaration name="sb" type="StringBuilder" line="145"/>
                </scope>
                <scope line="148"/>
            </method>
            <javadoc line="153">
                Remove redundant slashes from the rest of the path, forcing all slashes
                  into the preferred slash.                
            </javadoc>
            <method name="normalize" type="String" line="157">
                <params>
                    <param name="sb" type="StringBuilder"/>
                    <param name="path" type="String"/>
                    <param name="off" type="int"/>
                </params>
                <comment line="171">
                    no slash at the end of normalized path                    
                </comment>
                <declaration name="len" type="int" line="158"/>
                <declaration name="start" type="int" line="160"/>
                <declaration name="lastC" type="char" line="161"/>
                <scope line="162">
                    <declaration name="c" type="char" line="163"/>
                    <scope line="164"/>
                    <scope line="174"/>
                </scope>
                <scope line="183"/>
            </method>
            <method name="isSlash" type="boolean" line="193">
                <params>
                    <param name="c" type="char"/>
                </params>
            </method>
            <method name="nextNonSlash" type="int" line="197">
                <params>
                    <param name="path" type="String"/>
                    <param name="off" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <scope line="198"/>
            </method>
            <method name="nextSlash" type="int" line="202">
                <params>
                    <param name="path" type="String"/>
                    <param name="off" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <declaration name="c" type="char" line="203"/>
                <scope line="204"/>
            </method>
            <method name="isLetter" type="boolean" line="214">
                <params>
                    <param name="c" type="char"/>
                </params>
            </method>
            <declaration name="reservedChars" type="String" line="219"/>
            <method name="isInvalidPathChar" type="boolean" line="220">
                <params>
                    <param name="ch" type="char"/>
                </params>
            </method>
        </class>
    </source>