<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.fs">
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="sun.misc.Unsafe"/>
        <class name="WindowsNativeDispatcher" line="5">
            <javadoc line="5">
                Win32 and library calls.                
            </javadoc>
            <method name="WindowsNativeDispatcher" type="constructor" line="9"/>
            <javadoc line="11">
                HANDLE CreateFile(
                  LPCTSTR lpFileName,
                  DWORD dwDesiredAccess,
                  DWORD dwShareMode,
                  LPSECURITY_ATTRIBUTES lpSecurityAttributes,
                  DWORD dwCreationDisposition,
                  DWORD dwFlagsAndAttributes,
                  HANDLE hTemplateFile
                  )                
            </javadoc>
            <method name="CreateFile" type="long" line="22">
                <params>
                    <param name="path" type="String"/>
                    <param name="dwDesiredAccess" type="int"/>
                    <param name="dwShareMode" type="int"/>
                    <param name="lpSecurityAttributes" type="long"/>
                    <param name="dwCreationDisposition" type="int"/>
                    <param name="dwFlagsAndAttributes" type="int"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="23"/>
                <scope line="24"/>
                <scope line="27"/>
            </method>
            <method name="CreateFile" type="long" line="31">
                <params>
                    <param name="path" type="String"/>
                    <param name="dwDesiredAccess" type="int"/>
                    <param name="dwShareMode" type="int"/>
                    <param name="dwCreationDisposition" type="int"/>
                    <param name="dwFlagsAndAttributes" type="int"/>
                </params>
            </method>
            <method name="CreateFile0" type="long" line="34"/>
            <method name="CloseHandle" type="void" line="35"/>
            <javadoc line="35">
                CloseHandle(
                  HANDLE hObject
                  )                
            </javadoc>
            <javadoc line="41">
                DeleteFile(
                  LPCTSTR lpFileName
                  )                
            </javadoc>
            <method name="DeleteFile" type="void" line="46">
                <params>
                    <param name="path" type="String"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="47"/>
                <scope line="48"/>
                <scope line="51"/>
            </method>
            <method name="DeleteFile0" type="void" line="55"/>
            <javadoc line="56">
                CreateDirectory(
                  LPCTSTR lpPathName,
                  LPSECURITY_ATTRIBUTES lpSecurityAttributes
                  )                
            </javadoc>
            <method name="CreateDirectory" type="void" line="62">
                <params>
                    <param name="path" type="String"/>
                    <param name="lpSecurityAttributes" type="long"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="63"/>
                <scope line="64"/>
                <scope line="67"/>
            </method>
            <method name="CreateDirectory0" type="void" line="71"/>
            <javadoc line="72">
                RemoveDirectory(
                  LPCTSTR lpPathName
                  )                
            </javadoc>
            <method name="RemoveDirectory" type="void" line="77">
                <params>
                    <param name="path" type="String"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="78"/>
                <scope line="79"/>
                <scope line="82"/>
            </method>
            <method name="RemoveDirectory0" type="void" line="86"/>
            <method name="DeviceIoControlSetSparse" type="void" line="87"/>
            <javadoc line="87">
                Marks a file as a sparse file.
                  DeviceIoControl(
                  FSCTL_SET_SPARSE
                  )                
            </javadoc>
            <method name="DeviceIoControlGetReparsePoint" type="void" line="94"/>
            <javadoc line="94">
                Retrieves the reparse point data associated with the file or directory.
                  DeviceIoControl(
                  FSCTL_GET_REPARSE_POINT
                  )                
            </javadoc>
            <javadoc line="101">
                HANDLE FindFirstFile(
                  LPCTSTR lpFileName,
                  LPWIN32_FIND_DATA lpFindFileData
                  )                
            </javadoc>
            <method name="FindFirstFile" type="FirstFile" line="107">
                <params>
                    <param name="path" type="String"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="108"/>
                <scope line="109">
                    <declaration name="data" type="FirstFile" line="110"/>
                </scope>
                <scope line="114"/>
            </method>
            <class name="FirstFile" line="118">
                <declaration name="handle" type="long" line="119"/>
                <declaration name="name" type="String" line="120"/>
                <declaration name="attributes" type="int" line="121"/>
                <method name="FirstFile" type="constructor" line="122"/>
                <method name="handle" type="long" line="124"/>
                <method name="name" type="String" line="127"/>
                <method name="attributes" type="int" line="130"/>
            </class>
            <method name="FindFirstFile0" type="void" line="134"/>
            <javadoc line="135">
                HANDLE FindFirstFile(
                  LPCTSTR lpFileName,
                  LPWIN32_FIND_DATA lpFindFileData
                  )                
            </javadoc>
            <method name="FindFirstFile" type="long" line="141">
                <params>
                    <param name="path" type="String"/>
                    <param name="address" type="long"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="142"/>
                <scope line="143"/>
                <scope line="146"/>
            </method>
            <method name="FindFirstFile1" type="long" line="150"/>
            <method name="FindNextFile" type="String" line="151"/>
            <javadoc line="151">
                FindNextFile(
                  HANDLE hFindFile,
                  LPWIN32_FIND_DATA lpFindFileData
                  )                
                <return>
                    lpFindFileData->cFileName or null                    
                </return>
            </javadoc>
            <javadoc line="159">
                HANDLE FindFirstStreamW(
                  LPCWSTR lpFileName,
                  STREAM_INFO_LEVELS InfoLevel,
                  LPVOID lpFindStreamData,
                  DWORD dwFlags
                  )                
            </javadoc>
            <method name="FindFirstStream" type="FirstStream" line="167">
                <params>
                    <param name="path" type="String"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="168"/>
                <scope line="169">
                    <declaration name="data" type="FirstStream" line="170"/>
                </scope>
                <scope line="175"/>
            </method>
            <class name="FirstStream" line="179">
                <declaration name="handle" type="long" line="180"/>
                <declaration name="name" type="String" line="181"/>
                <method name="FirstStream" type="constructor" line="182"/>
                <method name="handle" type="long" line="184"/>
                <method name="name" type="String" line="187"/>
            </class>
            <method name="FindFirstStream0" type="void" line="191"/>
            <method name="FindNextStream" type="String" line="192"/>
            <method name="FindClose" type="void" line="193"/>
            <javadoc line="193">
                FindClose(
                  HANDLE hFindFile
                  )                
            </javadoc>
            <method name="GetFileInformationByHandle" type="void" line="199"/>
            <javadoc line="199">
                GetFileInformationByHandle(
                  HANDLE hFile,
                  LPBY_HANDLE_FILE_INFORMATION lpFileInformation
                  )                
            </javadoc>
            <javadoc line="206">
                CopyFileEx(
                  LPCWSTR lpExistingFileName
                  LPCWSTR lpNewFileName,
                  LPPROGRESS_ROUTINE lpProgressRoutine
                  LPVOID lpData,
                  LPBOOL pbCancel,
                  DWORD dwCopyFlags
                  )                
            </javadoc>
            <method name="CopyFileEx" type="void" line="216">
                <params>
                    <param name="source" type="String"/>
                    <param name="target" type="String"/>
                    <param name="flags" type="int"/>
                    <param name="addressToPollForCancel" type="long"/>
                </params>
                <declaration name="sourceBuffer" type="NativeBuffer" line="217"/>
                <declaration name="targetBuffer" type="NativeBuffer" line="218"/>
                <scope line="219"/>
                <scope line="222"/>
            </method>
            <method name="CopyFileEx0" type="void" line="227"/>
            <javadoc line="228">
                MoveFileEx(
                  LPCTSTR lpExistingFileName,
                  LPCTSTR lpNewFileName,
                  DWORD dwFlags
                  )                
            </javadoc>
            <method name="MoveFileEx" type="void" line="235">
                <params>
                    <param name="source" type="String"/>
                    <param name="target" type="String"/>
                    <param name="flags" type="int"/>
                </params>
                <declaration name="sourceBuffer" type="NativeBuffer" line="236"/>
                <declaration name="targetBuffer" type="NativeBuffer" line="237"/>
                <scope line="238"/>
                <scope line="241"/>
            </method>
            <method name="MoveFileEx0" type="void" line="246"/>
            <javadoc line="247">
                DWORD GetFileAttributes(
                  LPCTSTR lpFileName
                  )                
            </javadoc>
            <method name="GetFileAttributes" type="int" line="252">
                <params>
                    <param name="path" type="String"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="253"/>
                <scope line="254"/>
                <scope line="257"/>
            </method>
            <method name="GetFileAttributes0" type="int" line="261"/>
            <javadoc line="262">
                SetFileAttributes(
                  LPCTSTR lpFileName,
                  DWORD dwFileAttributes                
            </javadoc>
            <method name="SetFileAttributes" type="void" line="267">
                <params>
                    <param name="path" type="String"/>
                    <param name="dwFileAttributes" type="int"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="268"/>
                <scope line="269"/>
                <scope line="272"/>
            </method>
            <method name="SetFileAttributes0" type="void" line="276"/>
            <javadoc line="277">
                GetFileAttributesEx(
                  LPCTSTR lpFileName,
                  GET_FILEEX_INFO_LEVELS fInfoLevelId,
                  LPVOID lpFileInformation
                  );                
            </javadoc>
            <method name="GetFileAttributesEx" type="void" line="284">
                <params>
                    <param name="path" type="String"/>
                    <param name="address" type="long"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="285"/>
                <scope line="286"/>
                <scope line="289"/>
            </method>
            <method name="GetFileAttributesEx0" type="void" line="293"/>
            <method name="SetFileTime" type="void" line="294"/>
            <javadoc line="294">
                SetFileTime(
                  HANDLE hFile,
                  CONST FILETIME lpCreationTime,
                  CONST FILETIME lpLastAccessTime,
                  CONST FILETIME lpLastWriteTime
                  )                
            </javadoc>
            <method name="SetEndOfFile" type="void" line="303"/>
            <javadoc line="303">
                SetEndOfFile(
                  HANDLE hFile
                  )                
            </javadoc>
            <method name="GetLogicalDrives" type="int" line="309"/>
            <javadoc line="309">
                DWORD GetLogicalDrives(VOID)                
            </javadoc>
            <javadoc line="313">
                GetVolumeInformation(
                  LPCTSTR lpRootPathName,
                  LPTSTR lpVolumeNameBuffer,
                  DWORD nVolumeNameSize,
                  LPDWORD lpVolumeSerialNumber,
                  LPDWORD lpMaximumComponentLength,
                  LPDWORD lpFileSystemFlags,
                  LPTSTR lpFileSystemNameBuffer,
                  DWORD nFileSystemNameSize
                  )                
            </javadoc>
            <method name="GetVolumeInformation" type="VolumeInformation" line="325">
                <params>
                    <param name="root" type="String"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="326"/>
                <scope line="327">
                    <declaration name="info" type="VolumeInformation" line="328"/>
                </scope>
                <scope line="332"/>
            </method>
            <class name="VolumeInformation" line="336">
                <declaration name="fileSystemName" type="String" line="337"/>
                <declaration name="volumeName" type="String" line="338"/>
                <declaration name="volumeSerialNumber" type="int" line="339"/>
                <declaration name="flags" type="int" line="340"/>
                <method name="VolumeInformation" type="constructor" line="341"/>
                <method name="fileSystemName" type="String" line="343"/>
                <method name="volumeName" type="String" line="346"/>
                <method name="volumeSerialNumber" type="int" line="349"/>
                <method name="flags" type="int" line="352"/>
            </class>
            <method name="GetVolumeInformation0" type="void" line="356"/>
            <javadoc line="357">
                UINT GetDriveType(
                  LPCTSTR lpRootPathName
                  )                
            </javadoc>
            <method name="GetDriveType" type="int" line="362">
                <params>
                    <param name="root" type="String"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="363"/>
                <scope line="364"/>
                <scope line="367"/>
            </method>
            <method name="GetDriveType0" type="int" line="371"/>
            <javadoc line="372">
                GetDiskFreeSpaceEx(
                  LPCTSTR lpDirectoryName,
                  PULARGE_INTEGER lpFreeBytesAvailableToCaller,
                  PULARGE_INTEGER lpTotalNumberOfBytes,
                  PULARGE_INTEGER lpTotalNumberOfFreeBytes
                  )                
            </javadoc>
            <method name="GetDiskFreeSpaceEx" type="DiskFreeSpace" line="380">
                <params>
                    <param name="path" type="String"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="381"/>
                <scope line="382">
                    <declaration name="space" type="DiskFreeSpace" line="383"/>
                </scope>
                <scope line="387"/>
            </method>
            <class name="DiskFreeSpace" line="391">
                <declaration name="freeBytesAvailable" type="long" line="392"/>
                <declaration name="totalNumberOfBytes" type="long" line="393"/>
                <declaration name="totalNumberOfFreeBytes" type="long" line="394"/>
                <method name="DiskFreeSpace" type="constructor" line="395"/>
                <method name="freeBytesAvailable" type="long" line="397"/>
                <method name="totalNumberOfBytes" type="long" line="400"/>
                <method name="totalNumberOfFreeBytes" type="long" line="403"/>
            </class>
            <method name="GetDiskFreeSpaceEx0" type="void" line="407"/>
            <javadoc line="408">
                GetVolumePathName(
                  LPCTSTR lpszFileName,
                  LPTSTR lpszVolumePathName,
                  DWORD cchBufferLength
                  )                
                <return>
                    lpFileName                    
                </return>
            </javadoc>
            <method name="GetVolumePathName" type="String" line="416">
                <params>
                    <param name="path" type="String"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="417"/>
                <scope line="418"/>
                <scope line="421"/>
            </method>
            <method name="GetVolumePathName0" type="String" line="425"/>
            <method name="InitializeSecurityDescriptor" type="void" line="426"/>
            <javadoc line="426">
                InitializeSecurityDescriptor(
                  PSECURITY_DESCRIPTOR pSecurityDescriptor,
                  DWORD dwRevision
                  )                
            </javadoc>
            <method name="InitializeAcl" type="void" line="433"/>
            <javadoc line="433">
                InitializeAcl(
                  PACL pAcl,
                  DWORD nAclLength,
                  DWORD dwAclRevision
                  )                
            </javadoc>
            <javadoc line="441">
                GetFileSecurity(
                  LPCTSTR lpFileName,
                  SECURITY_INFORMATION RequestedInformation,
                  PSECURITY_DESCRIPTOR pSecurityDescriptor,
                  DWORD nLength,
                  LPDWORD lpnLengthNeeded
                  )                
            </javadoc>
            <method name="GetFileSecurity" type="int" line="450">
                <params>
                    <param name="path" type="String"/>
                    <param name="requestedInformation" type="int"/>
                    <param name="pSecurityDescriptor" type="long"/>
                    <param name="nLength" type="int"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="451"/>
                <scope line="452"/>
                <scope line="455"/>
            </method>
            <method name="GetFileSecurity0" type="int" line="459"/>
            <javadoc line="460">
                SetFileSecurity(
                  LPCTSTR lpFileName,
                  SECURITY_INFORMATION SecurityInformation,
                  PSECURITY_DESCRIPTOR pSecurityDescriptor
                  )                
            </javadoc>
            <method name="SetFileSecurity" type="void" line="467">
                <params>
                    <param name="path" type="String"/>
                    <param name="securityInformation" type="int"/>
                    <param name="pSecurityDescriptor" type="long"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="468"/>
                <scope line="469"/>
                <scope line="472"/>
            </method>
            <method name="SetFileSecurity0" type="void" line="476"/>
            <method name="GetSecurityDescriptorOwner" type="long" line="477"/>
            <javadoc line="477">
                GetSecurityDescriptorOwner(
                  PSECURITY_DESCRIPTOR pSecurityDescriptor
                  PSID pOwner,
                  LPBOOL lpbOwnerDefaulted
                  )                
                <return>
                    pOwner                    
                </return>
            </javadoc>
            <method name="SetSecurityDescriptorOwner" type="void" line="486"/>
            <javadoc line="486">
                SetSecurityDescriptorOwner(
                  PSECURITY_DESCRIPTOR pSecurityDescriptor,
                  PSID pOwner,
                  BOOL bOwnerDefaulted
                  )                
            </javadoc>
            <method name="GetSecurityDescriptorDacl" type="long" line="494"/>
            <javadoc line="494">
                GetSecurityDescriptorDacl(
                  PSECURITY_DESCRIPTOR pSecurityDescriptor,
                  LPBOOL lpbDaclPresent,
                  PACL pDacl,
                  LPBOOL lpbDaclDefaulted
                  )                
            </javadoc>
            <method name="SetSecurityDescriptorDacl" type="void" line="503"/>
            <javadoc line="503">
                SetSecurityDescriptorDacl(
                  PSECURITY_DESCRIPTOR pSecurityDescriptor,
                  BOOL bDaclPresent,
                  PACL pDacl,
                  BOOL bDaclDefaulted
                  )                
            </javadoc>
            <javadoc line="512">
                GetAclInformation(
                  PACL pAcl,
                  LPVOID pAclInformation,
                  DWORD nAclInformationLength,
                  ACL_INFORMATION_CLASS dwAclInformationClass
                  )                
            </javadoc>
            <method name="GetAclInformation" type="AclInformation" line="520">
                <params>
                    <param name="aclAddress" type="long"/>
                </params>
                <declaration name="info" type="AclInformation" line="521"/>
            </method>
            <class name="AclInformation" line="525">
                <declaration name="aceCount" type="int" line="526"/>
                <method name="AclInformation" type="constructor" line="527"/>
                <method name="aceCount" type="int" line="529"/>
            </class>
            <method name="GetAclInformation0" type="void" line="533"/>
            <method name="GetAce" type="long" line="534"/>
            <javadoc line="534">
                GetAce(
                  PACL pAcl,
                  DWORD dwAceIndex,
                  LPVOID pAce
                  )                
            </javadoc>
            <method name="AddAccessAllowedAceEx" type="void" line="542"/>
            <javadoc line="542">
                AddAccessAllowedAceEx(
                  PACL pAcl,
                  DWORD dwAceRevision,
                  DWORD AceFlags,
                  DWORD AccessMask,
                  PSID pSid
                  )                
            </javadoc>
            <method name="AddAccessDeniedAceEx" type="void" line="552"/>
            <javadoc line="552">
                AddAccessDeniedAceEx(
                  PACL pAcl,
                  DWORD dwAceRevision,
                  DWORD AceFlags,
                  DWORD AccessMask,
                  PSID pSid
                  )                
            </javadoc>
            <javadoc line="562">
                LookupAccountSid(
                  LPCTSTR lpSystemName,
                  PSID Sid,
                  LPTSTR Name,
                  LPDWORD cbName,
                  LPTSTR ReferencedDomainName,
                  LPDWORD cbReferencedDomainName,
                  PSID_NAME_USE peUse
                  )                
            </javadoc>
            <method name="LookupAccountSid" type="Account" line="573">
                <params>
                    <param name="sidAddress" type="long"/>
                </params>
                <declaration name="acc" type="Account" line="574"/>
            </method>
            <class name="Account" line="578">
                <declaration name="domain" type="String" line="579"/>
                <declaration name="name" type="String" line="580"/>
                <declaration name="use" type="int" line="581"/>
                <method name="Account" type="constructor" line="582"/>
                <method name="domain" type="String" line="584"/>
                <method name="name" type="String" line="587"/>
                <method name="use" type="int" line="590"/>
            </class>
            <method name="LookupAccountSid0" type="void" line="594"/>
            <javadoc line="595">
                LookupAccountName(
                  LPCTSTR lpSystemName,
                  LPCTSTR lpAccountName,
                  PSID Sid,
                  LPDWORD cbSid,
                  LPTSTR ReferencedDomainName,
                  LPDWORD cbReferencedDomainName,
                  PSID_NAME_USE peUse
                  )                
                <return>
                    cbSid                    
                </return>
            </javadoc>
            <method name="LookupAccountName" type="int" line="607">
                <params>
                    <param name="accountName" type="String"/>
                    <param name="pSid" type="long"/>
                    <param name="cbSid" type="int"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="608"/>
                <scope line="609"/>
                <scope line="612"/>
            </method>
            <method name="LookupAccountName0" type="int" line="616"/>
            <method name="GetLengthSid" type="int" line="617"/>
            <javadoc line="617">
                DWORD GetLengthSid(
                  PSID pSid
                  )                
            </javadoc>
            <method name="ConvertSidToStringSid" type="String" line="623"/>
            <javadoc line="623">
                ConvertSidToStringSid(
                  PSID Sid,
                  LPTSTR StringSid
                  )                
                <return>
                    StringSid                    
                </return>
            </javadoc>
            <javadoc line="631">
                ConvertStringSidToSid(
                  LPCTSTR StringSid,
                  PSID pSid
                  )                
                <return>
                    pSid                    
                </return>
            </javadoc>
            <method name="ConvertStringSidToSid" type="long" line="638">
                <params>
                    <param name="sidString" type="String"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="639"/>
                <scope line="640"/>
                <scope line="643"/>
            </method>
            <method name="ConvertStringSidToSid0" type="long" line="647"/>
            <method name="GetCurrentProcess" type="long" line="648"/>
            <javadoc line="648">
                HANDLE GetCurrentProcess(VOID)                
            </javadoc>
            <method name="GetCurrentThread" type="long" line="652"/>
            <javadoc line="652">
                HANDLE GetCurrentThread(VOID)                
            </javadoc>
            <method name="OpenProcessToken" type="long" line="656"/>
            <javadoc line="656">
                OpenProcessToken(
                  HANDLE ProcessHandle,
                  DWORD DesiredAccess,
                  PHANDLE TokenHandle
                  )                
            </javadoc>
            <method name="OpenThreadToken" type="long" line="664"/>
            <javadoc line="664">
                OpenThreadToken(
                  HANDLE ThreadHandle,
                  DWORD DesiredAccess,
                  BOOL OpenAsSelf,
                  PHANDLE TokenHandle
                  )                
            </javadoc>
            <method name="DuplicateTokenEx" type="long" line="673"/>
            <javadoc line="673">
                                
            </javadoc>
            <method name="SetThreadToken" type="void" line="676"/>
            <javadoc line="676">
                SetThreadToken(
                  PHANDLE Thread,
                  HANDLE Token
                  )                
            </javadoc>
            <method name="GetTokenInformation" type="int" line="683"/>
            <javadoc line="683">
                GetTokenInformation(
                  HANDLE TokenHandle,
                  TOKEN_INFORMATION_CLASS TokenInformationClass,
                  LPVOID TokenInformation,
                  DWORD TokenInformationLength,
                  PDWORD ReturnLength
                  )                
            </javadoc>
            <method name="AdjustTokenPrivileges" type="void" line="693"/>
            <javadoc line="693">
                AdjustTokenPrivileges(
                  HANDLE TokenHandle,
                  BOOL DisableAllPrivileges
                  PTOKEN_PRIVILEGES NewState
                  DWORD BufferLength
                  PTOKEN_PRIVILEGES
                  PDWORD ReturnLength
                  )                
            </javadoc>
            <javadoc line="704">
                                
            </javadoc>
            <method name="LookupPrivilegeValue" type="long" line="706">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="707"/>
                <scope line="708"/>
                <scope line="711"/>
            </method>
            <method name="LookupPrivilegeValue0" type="long" line="715"/>
            <method name="BuildTrusteeWithSid" type="long" line="716"/>
            <javadoc line="716">
                BuildTrusteeWithSid(
                  PTRUSTEE pTrustee,
                  PSID pSid
                  )                
                <return>
                    pTrustee                    
                </return>
            </javadoc>
            <method name="GetEffectiveRightsFromAcl" type="int" line="724"/>
            <javadoc line="724">
                GetEffectiveRightsFromAcl(
                  PACL pacl,
                  PTRUSTEE pTrustee,
                  PACCESS_MASK pAccessRights
                  )                
                <return>
                    AccessRights                    
                </return>
            </javadoc>
            <javadoc line="733">
                CreateSymbolicLink(
                  LPCWSTR lpSymlinkFileName,
                  LPCWSTR lpTargetFileName,
                  DWORD dwFlags
                  )                
            </javadoc>
            <method name="CreateSymbolicLink" type="void" line="740">
                <params>
                    <param name="link" type="String"/>
                    <param name="target" type="String"/>
                    <param name="flags" type="int"/>
                </params>
                <declaration name="linkBuffer" type="NativeBuffer" line="741"/>
                <declaration name="targetBuffer" type="NativeBuffer" line="742"/>
                <scope line="743"/>
                <scope line="746"/>
            </method>
            <method name="CreateSymbolicLink0" type="void" line="751"/>
            <javadoc line="752">
                CreateHardLink(
                  LPCTSTR lpFileName,
                  LPCTSTR lpExistingFileName,
                  LPSECURITY_ATTRIBUTES lpSecurityAttributes
                  )                
            </javadoc>
            <method name="CreateHardLink" type="void" line="759">
                <params>
                    <param name="newFile" type="String"/>
                    <param name="existingFile" type="String"/>
                </params>
                <declaration name="newFileBuffer" type="NativeBuffer" line="760"/>
                <declaration name="existingFileBuffer" type="NativeBuffer" line="761"/>
                <scope line="762"/>
                <scope line="765"/>
            </method>
            <method name="CreateHardLink0" type="void" line="770"/>
            <javadoc line="771">
                GetFullPathName(
                  LPCTSTR lpFileName,
                  DWORD nBufferLength,
                  LPTSTR lpBuffer,
                  LPTSTR lpFilePart
                  )                
            </javadoc>
            <method name="GetFullPathName" type="String" line="779">
                <params>
                    <param name="path" type="String"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="780"/>
                <scope line="781"/>
                <scope line="784"/>
            </method>
            <method name="GetFullPathName0" type="String" line="788"/>
            <method name="GetFinalPathNameByHandle" type="String" line="789"/>
            <javadoc line="789">
                GetFinalPathNameByHandle(
                  HANDLE hFile,
                  LPTSTR lpszFilePath,
                  DWORD cchFilePath,
                  DWORD dwFlags
                  )                
            </javadoc>
            <method name="FormatMessage" type="String" line="798"/>
            <javadoc line="798">
                FormatMessage(
                  DWORD dwFlags,
                  LPCVOID lpSource,
                  DWORD dwMessageId,
                  DWORD dwLanguageId,
                  LPTSTR lpBuffer,
                  DWORD nSize,
                  va_list Arguments
                  )                
            </javadoc>
            <method name="LocalFree" type="void" line="810"/>
            <javadoc line="810">
                LocalFree(
                  HLOCAL hMem
                  )                
            </javadoc>
            <method name="CreateIoCompletionPort" type="long" line="816"/>
            <javadoc line="816">
                HANDLE CreateIoCompletionPort (
                  HANDLE FileHandle,
                  HANDLE ExistingCompletionPort,
                  DWORD CompletionKey,
                  DWORD NumberOfConcurrentThreads
                  )                
            </javadoc>
            <javadoc line="825">
                GetQueuedCompletionStatus(
                  HANDLE CompletionPort,
                  LPDWORD lpNumberOfBytesTransferred,
                  LPDWORD lpCompletionKey,
                  LPOVERLAPPED lpOverlapped,
                  DWORD dwMilliseconds                
            </javadoc>
            <method name="GetQueuedCompletionStatus" type="CompletionStatus" line="833">
                <params>
                    <param name="completionPort" type="long"/>
                </params>
                <declaration name="status" type="CompletionStatus" line="834"/>
            </method>
            <class name="CompletionStatus" line="838">
                <declaration name="error" type="int" line="839"/>
                <declaration name="bytesTransferred" type="int" line="840"/>
                <declaration name="completionKey" type="int" line="841"/>
                <method name="CompletionStatus" type="constructor" line="842"/>
                <method name="error" type="int" line="844"/>
                <method name="bytesTransferred" type="int" line="847"/>
                <method name="completionKey" type="int" line="850"/>
            </class>
            <method name="GetQueuedCompletionStatus0" type="void" line="854"/>
            <method name="PostQueuedCompletionStatus" type="void" line="855"/>
            <javadoc line="855">
                PostQueuedCompletionStatus(
                  HANDLE CompletionPort,
                  DWORD dwNumberOfBytesTransferred,
                  DWORD dwCompletionKey,
                  LPOVERLAPPED lpOverlapped
                  )                
            </javadoc>
            <method name="ReadDirectoryChangesW" type="void" line="864"/>
            <javadoc line="864">
                ReadDirectoryChangesW(
                  HANDLE hDirectory,
                  LPVOID lpBuffer,
                  DWORD nBufferLength,
                  BOOL bWatchSubtree,
                  DWORD dwNotifyFilter,
                  LPDWORD lpBytesReturned,
                  LPOVERLAPPED lpOverlapped,
                  LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine
                  )                
            </javadoc>
            <javadoc line="877">
                BackupRead(
                  HANDLE hFile,
                  LPBYTE lpBuffer,
                  DWORD nNumberOfBytesToRead,
                  LPDWORD lpNumberOfBytesRead,
                  BOOL bAbort,
                  BOOL bProcessSecurity,
                  LPVOID lpContext
                  )                
            </javadoc>
            <method name="BackupRead" type="BackupResult" line="888">
                <params>
                    <param name="hFile" type="long"/>
                    <param name="bufferAddress" type="long"/>
                    <param name="bufferSize" type="int"/>
                    <param name="abort" type="boolean"/>
                    <param name="context" type="long"/>
                </params>
                <declaration name="result" type="BackupResult" line="889"/>
            </method>
            <class name="BackupResult" line="893">
                <declaration name="bytesTransferred" type="int" line="894"/>
                <declaration name="context" type="long" line="895"/>
                <method name="BackupResult" type="constructor" line="896"/>
                <method name="bytesTransferred" type="int" line="898"/>
                <method name="context" type="long" line="901"/>
            </class>
            <method name="BackupRead0" type="void" line="905"/>
            <method name="BackupSeek" type="void" line="906"/>
            <javadoc line="906">
                BackupSeek(
                  HANDLE hFile,
                  DWORD dwLowBytesToSeek,
                  DWORD dwHighBytesToSeek,
                  LPDWORD lpdwLowByteSeeked,
                  LPDWORD lpdwHighByteSeeked,
                  LPVOID lpContext
                  )                
            </javadoc>
            <declaration name="unsafe" type="Unsafe" line="917"/>
            <method name="asNativeBuffer" type="NativeBuffer" line="918">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="stringLengthInBytes" type="int" line="919"/>
                <declaration name="sizeInBytes" type="int" line="920"/>
                <declaration name="buffer" type="NativeBuffer" line="921"/>
                <scope line="922"/>
                <scope line="925"/>
                <declaration name="chars" type="char[]" line="928"/>
            </method>
            <method name="initIDs" type="void" line="934"/>
            <scope line="935">
                <anonymous_class line="936">
                    <method name="run" type="Void" line="937"/>
                </anonymous_class>
            </scope>
        </class>
    </source>