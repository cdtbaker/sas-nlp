<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.security.krb5.internal.tools">
        <import package="java.io.File"/>
        <import package="sun.security.krb5"/>
        <import package="sun.security.krb5.internal"/>
        <import package="sun.security.krb5.internal.ccache"/>
        <import package="java.io.IOException"/>
        <import package="java.util.Arrays"/>
        <import package="javax.security.auth.kerberos.KerberosPrincipal"/>
        <import package="sun.security.util.Password"/>
        <import package="javax.security.auth.kerberos.KeyTab"/>
        <class name="Kinit" line="11">
            <javadoc line="11">
                Kinit tool for obtaining Kerberos v5 tickets.                
                <author>
                    Yanni Zhang                    
                </author>
                <author>
                    Ram Marti                    
                </author>
            </javadoc>
            <declaration name="options" type="KinitOptions" line="17"/>
            <declaration name="DEBUG" type="boolean" line="18"/>
            <javadoc line="19">
                The main method is used to accept user command line input for ticket
                  request.
                  &lt;p&gt;
                  Usage: kinit [-A] [-f] [-p] [-c cachename] [[-k [-t keytab_file_name]]
                  [principal] [password]
                  &lt;ul&gt;
                  &lt;li&gt;    -A        do not include addresses
                  &lt;li&gt;    -f        forwardable
                  &lt;li&gt;    -p        proxiable
                  &lt;li&gt;    -c        cache name (i.e., FILE://c:\temp\mykrb5cc)
                  &lt;li&gt;    -k        use keytab
                  &lt;li&gt;    -t        keytab file name
                  &lt;li&gt;    principal the principal name (i.e., duke@java.sun.com)
                  &lt;li&gt;    password  the principal&apos;s Kerberos password
                  &lt;/ul&gt;
                  &lt;p&gt;
                  Use java sun.security.krb5.tools.Kinit -help to bring up help menu.
                  &lt;p&gt;
                  We currently support only file-based credentials cache to
                  store the tickets obtained from the KDC.
                  By default, for all Unix platforms a cache file named
                  /tmp/krb5cc_&amp;lt;uid&amp;gt will be generated. The &amp;lt;uid&amp;gt is the
                  numeric user identifier.
                  For all other platforms, a cache file named
                  &amp;lt;USER_HOME&amp;gt/krb5cc_&amp;lt;USER_NAME&amp;gt would be generated.
                  &lt;p&gt;
                  &amp;lt;USER_HOME&amp;gt is obtained from &lt;code&gt;java.lang.System&lt;/code&gt;
                  property &lt;i&gt;user.home&lt;/i&gt;.
                  &amp;lt;USER_NAME&amp;gt is obtained from &lt;code&gt;java.lang.System&lt;/code&gt;
                  property &lt;i&gt;user.name&lt;/i&gt;.
                  If &amp;lt;USER_HOME&amp;gt is null the cache file would be stored in
                  the current directory that the program is running from.
                  &amp;lt;USER_NAME&amp;gt is operating system&apos;s login username.
                  It could be different from user&apos;s principal name.
                  &lt;/p&gt;
                  &lt;p&gt;
                  For instance, on Windows NT, it could be
                  c:\winnt\profiles\duke\krb5cc_duke, in
                  which duke is the &amp;lt;USER_NAME&amp;gt, and c:\winnt\profile\duke is the
                  &amp;lt;USER_HOME&amp;gt.
                  &lt;p&gt;
                  A single user could have multiple principal names,
                  but the primary principal of the credentials cache could only be one,
                  which means one cache file could only store tickets for one
                  specific user principal. If the user switches
                  the principal name at the next Kinit, the cache file generated for the
                  new ticket would overwrite the old cache file by default.
                  To avoid overwriting, you need to specify
                  a different cache file name when you request a
                  new ticket.
                  &lt;/p&gt;
                  &lt;p&gt;
                  You can specify the location of the cache file by using the -c option                
            </javadoc>
            <method name="main" type="void" line="74">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <scope line="75">
                    <declaration name="self" type="Kinit" line="76"/>
                </scope>
                <scope line="78">
                    <declaration name="msg" type="String" line="79"/>
                    <scope line="80"/>
                    <scope line="83"/>
                    <scope line="86"/>
                    <scope line="89"/>
                </scope>
            </method>
            <javadoc line="97">
                Constructs a new Kinit object.                
                <param>
                    args array of ticket request options.
                      Avaiable options are: -f, -p, -c, principal, password.                    
                </param>
                <exception>
                    IOException if an I/O error occurs.                    
                </exception>
                <exception>
                    RealmException if the Realm could not be instantiated.                    
                </exception>
                <exception>
                    KrbException if error occurs during Kerberos operation.                    
                </exception>
            </javadoc>
            <method name="Kinit" type="constructor" line="105">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <scope line="106"/>
                <scope line="109"/>
                <declaration name="princName" type="String" line="112"/>
                <declaration name="principal" type="PrincipalName" line="113"/>
                <scope line="114"/>
                <declaration name="builder" type="KrbAsReqBuilder" line="117"/>
                <scope line="118"/>
                <declaration name="psswd" type="char[]" line="121"/>
                <declaration name="useKeytab" type="boolean" line="122"/>
                <scope line="123">
                    <scope line="124"/>
                    <scope line="127">
                        <scope line="131"/>
                    </scope>
                </scope>
                <scope line="137">
                    <scope line="138"/>
                    <scope line="141"/>
                    <declaration name="ktabName" type="String" line="144"/>
                    <scope line="145">
                        <scope line="146"/>
                    </scope>
                </scope>
                <declaration name="opt" type="KDCOptions" line="152"/>
                <declaration name="realm" type="String" line="156"/>
                <scope line="157"/>
                <scope line="160"/>
                <declaration name="sname" type="PrincipalName" line="163"/>
                <scope line="166"/>
                <declaration name="credentials" type="sun.security.krb5.internal.ccache.Credentials" line="171"/>
                <declaration name="cache" type="CredentialsCache" line="173"/>
                <scope line="174"/>
                <scope line="179"/>
                <scope line="182"/>
                <scope line="185"/>
            </method>
            <method name="setOptions" type="void" line="190">
                <params>
                    <param name="flag" type="int"/>
                    <param name="option" type="int"/>
                    <param name="opt" type="KDCOptions"/>
                </params>
            </method>
        </class>
    </source>