<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt">
        <import package="java.awt.FontFormatException"/>
        <import package="java.awt.GraphicsEnvironment"/>
        <import package="java.io.File"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Locale"/>
        <import package="java.util.NoSuchElementException"/>
        <import package="java.util.StringTokenizer"/>
        <import package="sun.awt.Win32GraphicsEnvironment"/>
        <import package="sun.awt.windows.WFontConfiguration"/>
        <import package="sun.font.FontManager"/>
        <import package="sun.font.SunFontManager"/>
        <import package="sun.font.TrueTypeFont"/>
        <import package="sun.java2d.HeadlessGraphicsEnvironment"/>
        <import package="sun.java2d.SunGraphicsEnvironment"/>
        <class name="Win32FontManager" line="48">
            <extends class="SunFontManager"/>
            <comment line="80">
                Used on Windows to obtain from the windows registry the name
                 of a file containing the system EUFC font. If running in one of
                 the locales for which this applies, and one is defined, the font
                 defined by this file is appended to all composite fonts as a
                 fallback component.                
            </comment>
            <comment line="115">
                Unlike the shared code version, this expects a base file name -
                 not a full path name.
                 The font configuration file has base file names and the FontConfiguration
                 class reports these back to the GraphicsEnvironment, so these
                 are the componentFileNames of CompositeFonts.                
            </comment>
            <comment line="255">
                register only TrueTypeOpenType fonts
                 Because these need to be registed just for use when printing,
                 we defer the actual registration and the static initialiser
                 for the printing class makes the call to registerJREFontsForPrinting()                
            </comment>
            <javadoc line="48">
                The X11 implementation of {@link FontManager}.                
            </javadoc>
            <declaration name="defaultPlatformFont" type="String[]" line="53"/>
            <declaration name="eudcFont" type="TrueTypeFont" line="55"/>
            <scope line="57">
                <anonymous_class line="59">
                    <method name="run" type="Object" line="61">
                        <comment line="66">
                            Must use Java rasteriser since GDI doesn&apos;t
                             enumerate (allow direct use) of EUDC fonts.                            
                        </comment>
                        <declaration name="eudcFile" type="String" line="62"/>
                        <scope line="63">
                            <scope line="64"/>
                            <scope line="70"/>
                        </scope>
                    </method>
                </anonymous_class>
            </scope>
            <method name="getEUDCFontFile" type="String" line="85"/>
            <method name="getEUDCFont" type="TrueTypeFont" line="87"/>
            <method name="Win32FontManager" type="constructor" line="91">
                <comment line="97">
                    Register the JRE fonts so that the native platform can
                     access them. This is used only on Windows so that when
                     printing the printer driver can access the fonts.                    
                </comment>
                <anonymous_class line="93">
                    <method name="run" type="Object" line="94">
                        <comment line="97">
                            Register the JRE fonts so that the native platform can
                             access them. This is used only on Windows so that when
                             printing the printer driver can access the fonts.                            
                        </comment>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="106">
                Whether registerFontFile expects absolute or relative
                  font file names.                
            </javadoc>
            <method name="useAbsoluteFontFileNames" type="boolean" line="110"/>
            <method name="registerFontFile" type="void" line="121">
                <params>
                    <param name="fontFileName" type="String"/>
                    <param name="nativeNames" type="String[]"/>
                    <param name="fontRank" type="int"/>
                    <param name="defer" type="boolean"/>
                </params>
                <comment line="124">
                    REMIND: case compare depends on platform                    
                </comment>
                <comment line="136">
                                        
                </comment>
                <comment line="144">
                    Look in the JRE font directory first.
                     This is playing it safe as we would want to find fonts in the
                     JRE font directory ahead of those in the system directory                    
                </comment>
                <scope line="124"/>
                <declaration name="fontFormat" type="int" line="129"/>
                <scope line="130"/>
                <scope line="132"/>
                <scope line="134"/>
                <scope line="139"/>
                <declaration name="tmpFontPath" type="String" line="147"/>
                <declaration name="parser" type="StringTokenizer" line="148"/>
                <declaration name="found" type="boolean" line="151"/>
                <scope line="152">
                    <scope line="153">
                        <declaration name="newPath" type="String" line="154"/>
                        <declaration name="isJREFont" type="boolean" line="155"/>
                        <declaration name="theFile" type="File" line="156"/>
                        <scope line="157">
                            <declaration name="path" type="String" line="159"/>
                            <scope line="160"/>
                            <scope line="165"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="173"/>
                <scope line="176"/>
            </method>
            <method name="createFontConfiguration" type="FontConfiguration" line="182">
                <declaration name="fc" type="FontConfiguration" line="184"/>
            </method>
            <method name="createFontConfiguration" type="FontConfiguration" line="191">
                <params>
                    <param name="preferLocaleFonts" type="boolean"/>
                    <param name="preferPropFonts" type="boolean"/>
                </params>
            </method>
            <method name="populateFontFileNameMap" type="void" line="202">
                <params>
                    <param name="fontToFileMap" type="HashMap<String,String>"/>
                    <param name="fontToFamilyNameMap" type="HashMap<String,String>"/>
                    <param name="familyToFontListMap" type="HashMap<String,ArrayList<String>>"/>
                    <param name="locale" type="Locale"/>
                </params>
            </method>
            <method name="populateFontFileNameMap0" type="void" line="209"/>
            <method name="getFontPath" type="String" line="216"/>
            <method name="getDefaultPlatformFont" type="String[]" line="218">
                <scope line="220"/>
                <declaration name="info" type="String[]" line="224"/>
                <declaration name="dirs" type="String[]" line="227"/>
                <scope line="228">
                    <anonymous_class line="230">
                        <method name="run" type="Object" line="231">
                            <scope line="232">
                                <declaration name="path" type="String" line="233"/>
                                <declaration name="file" type="File" line="235"/>
                                <scope line="236"/>
                            </scope>
                        </method>
                    </anonymous_class>
                    <declaration name="dir" type="String" line="229"/>
                    <scope line="243"/>
                </scope>
                <scope line="246"/>
            </method>
            <declaration name="fontsForPrinting" type="String" line="259"/>
            <method name="registerJREFontsWithPlatform" type="void" line="260">
                <params>
                    <param name="pathName" type="String"/>
                </params>
            </method>
            <method name="registerJREFontsForPrinting" type="void" line="264">
                <declaration name="pathName" type="String" line="265"/>
                <scope line="266">
                    <scope line="268"/>
                </scope>
                <anonymous_class line="275">
                    <method name="run" type="Object" line="276">
                        <declaration name="f1" type="File" line="277"/>
                        <declaration name="ls" type="String[]" line="278"/>
                        <scope line="280"/>
                        <scope line="283">
                            <declaration name="fontFile" type="File" line="284"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <method name="registerFontWithPlatform" type="void" line="292"/>
            <method name="deRegisterFontWithPlatform" type="void" line="294"/>
            <javadoc line="296">
                populate the map with the most common windows fonts.                
            </javadoc>
            <method name="populateHardcodedFileNameMap" type="HashMap<String,FamilyDescription>" line="300">
                <comment line="306">
                    Segoe UI is the default UI font for Vista and later, and
                     is used by the Win L&amp;F which is used by FX too.
                     Tahoma is used for the Win L&amp;F on XP.
                     Verdana is used in some FX UI controls.                    
                </comment>
                <comment line="343">
                    The following are important because they are the core
                     members of the default &quot;Dialog&quot; font.                    
                </comment>
                <declaration name="platformFontMap" type="HashMap&lt;String,FamilyDescription&gt;" line="301"/>
                <declaration name="fd" type="FamilyDescription" line="303"/>
            </method>
        </class>
    </source>