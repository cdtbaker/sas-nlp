<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt">
        <import package="java.awt.FontFormatException"/>
        <import package="java.awt.GraphicsEnvironment"/>
        <import package="java.io.File"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Locale"/>
        <import package="java.util.NoSuchElementException"/>
        <import package="java.util.StringTokenizer"/>
        <import package="sun.awt.Win32GraphicsEnvironment"/>
        <import package="sun.awt.windows.WFontConfiguration"/>
        <import package="sun.font.FontManager"/>
        <import package="sun.font.SunFontManager"/>
        <import package="sun.font.TrueTypeFont"/>
        <import package="sun.java2d.HeadlessGraphicsEnvironment"/>
        <import package="sun.java2d.SunGraphicsEnvironment"/>
        <class name="Win32FontManager" line="19">
            <extends class="SunFontManager"/>
            <javadoc line="19">
                The X11 implementation of {@link FontManager}.                
            </javadoc>
            <declaration name="defaultPlatformFont" type="String[]" line="23"/>
            <declaration name="eudcFont" type="TrueTypeFont" line="24"/>
            <scope line="25">
                <anonymous_class line="26">
                    <method name="run" type="Object" line="27">
                        <declaration name="eudcFile" type="String" line="28"/>
                        <scope line="29">
                            <scope line="30"/>
                            <scope line="33"/>
                        </scope>
                    </method>
                </anonymous_class>
            </scope>
            <method name="getEUDCFontFile" type="String" line="41"/>
            <method name="getEUDCFont" type="TrueTypeFont" line="42"/>
            <method name="Win32FontManager" type="constructor" line="45">
                <anonymous_class line="47">
                    <method name="run" type="Object" line="48"/>
                </anonymous_class>
            </method>
            <javadoc line="55">
                Whether registerFontFile expects absolute or relative
                  font file names.                
            </javadoc>
            <method name="useAbsoluteFontFileNames" type="boolean" line="59"/>
            <method name="registerFontFile" type="void" line="62">
                <params>
                    <param name="fontFileName" type="String"/>
                    <param name="nativeNames" type="String[]"/>
                    <param name="fontRank" type="int"/>
                    <param name="defer" type="boolean"/>
                </params>
                <scope line="63"/>
                <declaration name="fontFormat" type="int" line="67"/>
                <scope line="68"/>
                <scope line="71"/>
                <scope line="74"/>
                <scope line="77"/>
                <declaration name="tmpFontPath" type="String" line="80"/>
                <declaration name="parser" type="StringTokenizer" line="81"/>
                <declaration name="found" type="boolean" line="82"/>
                <scope line="83">
                    <scope line="84">
                        <declaration name="newPath" type="String" line="85"/>
                        <declaration name="isJREFont" type="boolean" line="86"/>
                        <declaration name="theFile" type="File" line="87"/>
                        <scope line="88">
                            <declaration name="path" type="String" line="90"/>
                            <scope line="91"/>
                            <scope line="94"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="101"/>
                <scope line="104"/>
            </method>
            <method name="createFontConfiguration" type="FontConfiguration" line="108">
                <declaration name="fc" type="FontConfiguration" line="109"/>
            </method>
            <method name="createFontConfiguration" type="FontConfiguration" line="113">
                <params>
                    <param name="preferLocaleFonts" type="boolean"/>
                    <param name="preferPropFonts" type="boolean"/>
                </params>
            </method>
            <method name="populateFontFileNameMap" type="void" line="116">
                <params>
                    <param name="fontToFileMap" type="HashMap<String,String>"/>
                    <param name="fontToFamilyNameMap" type="HashMap<String,String>"/>
                    <param name="familyToFontListMap" type="HashMap<String,ArrayList<String>>"/>
                    <param name="locale" type="Locale"/>
                </params>
            </method>
            <method name="populateFontFileNameMap0" type="void" line="119"/>
            <method name="getFontPath" type="String" line="120"/>
            <method name="getDefaultPlatformFont" type="String[]" line="121">
                <scope line="122"/>
                <declaration name="info" type="String[]" line="125"/>
                <declaration name="dirs" type="String[]" line="128"/>
                <scope line="129">
                    <anonymous_class line="130">
                        <method name="run" type="Object" line="131">
                            <scope line="132">
                                <declaration name="path" type="String" line="133"/>
                                <declaration name="file" type="File" line="134"/>
                                <scope line="135"/>
                            </scope>
                        </method>
                    </anonymous_class>
                    <declaration name="dir" type="String" line="130"/>
                    <scope line="143"/>
                </scope>
                <scope line="147"/>
            </method>
            <declaration name="fontsForPrinting" type="String" line="154"/>
            <method name="registerJREFontsWithPlatform" type="void" line="155">
                <params>
                    <param name="pathName" type="String"/>
                </params>
            </method>
            <method name="registerJREFontsForPrinting" type="void" line="158">
                <declaration name="pathName" type="String" line="159"/>
                <scope line="160">
                    <scope line="162"/>
                </scope>
                <anonymous_class line="168">
                    <method name="run" type="Object" line="169">
                        <declaration name="f1" type="File" line="170"/>
                        <declaration name="ls" type="String[]" line="171"/>
                        <scope line="172"/>
                        <scope line="175">
                            <declaration name="fontFile" type="File" line="176"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <method name="registerFontWithPlatform" type="void" line="184"/>
            <method name="deRegisterFontWithPlatform" type="void" line="185"/>
            <javadoc line="186">
                populate the map with the most common windows fonts.                
            </javadoc>
            <method name="populateHardcodedFileNameMap" type="HashMap<String,FamilyDescription>" line="189">
                <declaration name="platformFontMap" type="HashMap&lt;String,FamilyDescription&gt;" line="190"/>
                <declaration name="fd" type="FamilyDescription" line="191"/>
            </method>
        </class>
    </source>