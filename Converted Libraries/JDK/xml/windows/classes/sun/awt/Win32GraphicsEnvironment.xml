<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt">
        <import package="java.awt.GraphicsConfiguration"/>
        <import package="java.awt.GraphicsDevice"/>
        <import package="java.awt.GraphicsEnvironment"/>
        <import package="java.awt.Toolkit"/>
        <import package="java.awt.peer.ComponentPeer"/>
        <import package="java.io.File"/>
        <import package="java.io.IOException"/>
        <import package="java.lang.ref.WeakReference"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.ListIterator"/>
        <import package="java.util.NoSuchElementException"/>
        <import package="java.util.StringTokenizer"/>
        <import package="sun.awt.DisplayChangedListener"/>
        <import package="sun.awt.SunDisplayChanger"/>
        <import package="sun.awt.windows.WPrinterJob"/>
        <import package="sun.awt.windows.WToolkit"/>
        <import package="sun.java2d.SunGraphicsEnvironment"/>
        <import package="sun.java2d.SurfaceManagerFactory"/>
        <import package="sun.java2d.WindowsSurfaceManagerFactory"/>
        <import package="sun.java2d.d3d.D3DGraphicsDevice"/>
        <import package="sun.java2d.windows.WindowsFlags"/>
        <class name="Win32GraphicsEnvironment" line="23">
            <extends class="SunGraphicsEnvironment"/>
            <javadoc line="23">
                This is an implementation of a GraphicsEnvironment object for the
                  default local GraphicsEnvironment used by the Java Runtime Environment
                  for Windows.                
                <see>
                    GraphicsDevice                    
                </see>
                <see>
                    GraphicsConfiguration                    
                </see>
            </javadoc>
            <scope line="31"/>
            <method name="initDisplay" type="void" line="37"/>
            <javadoc line="37">
                Initializes native components of the graphics environment.  This
                  includes everything from the native GraphicsDevice elements to
                  the DirectX rendering layer.                
            </javadoc>
            <declaration name="displayInitialized" type="boolean" line="43"/>
            <method name="initDisplayWrapper" type="void" line="44">
                <scope line="45"/>
            </method>
            <method name="Win32GraphicsEnvironment" type="constructor" line="50"/>
            <method name="getNumScreens" type="int" line="52"/>
            <method name="getDefaultScreen" type="int" line="53"/>
            <method name="getDefaultScreenDevice" type="GraphicsDevice" line="54"/>
            <method name="getXResolution" type="int" line="57"/>
            <javadoc line="57">
                Returns the number of pixels per logical inch along the screen width.
                  In a system with multiple display monitors, this value is the same for
                  all monitors.                
                <returns>
                    number of pixels per logical inch in X direction                    
                </returns>
            </javadoc>
            <method name="getYResolution" type="int" line="64"/>
            <javadoc line="64">
                Returns the number of pixels per logical inch along the screen height.
                  In a system with multiple display monitors, this value is the same for
                  all monitors.                
                <returns>
                    number of pixels per logical inch in Y direction                    
                </returns>
            </javadoc>
            <declaration name="oldDevices" type="ArrayList&lt;WeakReference&lt;Win32GraphicsDevice&gt;&gt;" line="71"/>
            <method name="displayChanged" type="void" line="72"/>
            <method name="makeScreenDevice" type="GraphicsDevice" line="121">
                <params>
                    <param name="screennum" type="int"/>
                </params>
                <declaration name="device" type="GraphicsDevice" line="122"/>
                <scope line="123"/>
                <scope line="126"/>
            </method>
            <method name="isDisplayLocal" type="boolean" line="131"/>
            <method name="isFlipStrategyPreferred" type="boolean" line="134">
                <params>
                    <param name="peer" type="ComponentPeer"/>
                </params>
                <declaration name="gc" type="GraphicsConfiguration" line="135"/>
                <scope line="136">
                    <declaration name="gd" type="GraphicsDevice" line="137"/>
                    <scope line="138"/>
                </scope>
            </method>
            <declaration name="isDWMCompositionEnabled" type="boolean" line="144"/>
            <javadoc line="145">
                Returns true if dwm composition is currently enabled, false otherwise.                
                <return>
                    true if dwm composition is enabled, false otherwise                    
                </return>
            </javadoc>
            <method name="isDWMCompositionEnabled" type="boolean" line="149"/>
            <javadoc line="152">
                Called from the native code when DWM composition state changed.
                  May be called multiple times during the lifetime of the application.
                  REMIND: we may want to create a listener mechanism for this.
                  Note: called on the Toolkit thread, no user code or locks are allowed.                
                <param>
                    enabled indicates the state of dwm composition                    
                </param>
            </javadoc>
            <method name="dwmCompositionChanged" type="void" line="159">
                <params>
                    <param name="enabled" type="boolean"/>
                </params>
            </method>
            <method name="isVistaOS" type="boolean" line="162"/>
            <javadoc line="162">
                Used to find out if the OS is Windows Vista or later.                
                <return>
                    {@code true} if the OS is Vista or later, {@code false} otherwise                    
                </return>
            </javadoc>
        </class>
    </source>