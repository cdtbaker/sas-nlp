<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.windows">
        <import package="java.io.InputStream"/>
        <import package="java.io.FileInputStream"/>
        <import package="java.io.FileNotFoundException"/>
        <import package="java.io.IOException"/>
        <import package="sun.awt.PeerEvent"/>
        <import package="sun.awt.SunToolkit"/>
        <import package="sun.awt.dnd.SunDropTargetContextPeer"/>
        <import package="sun.awt.dnd.SunDropTargetEvent"/>
        <class name="WDropTargetContextPeer" line="38">
            <extends class="SunDropTargetContextPeer"/>
            <comment line="160">
                fields                
            </comment>
            <comment line="232">
                fields                
            </comment>
            <javadoc line="38">
                &lt;p&gt;
                  The WDropTargetContextPeer class is the class responsible for handling
                  the interaction between the win32 DnD system and Java.
                  &lt;/p&gt;                
            </javadoc>
            <javadoc line="48">
                create the peer typically upcall from C++                
            </javadoc>
            <method name="getWDropTargetContextPeer" type="WDropTargetContextPeer" line="52"/>
            <javadoc line="56">
                create the peer                
            </javadoc>
            <method name="WDropTargetContextPeer" type="constructor" line="60"/>
            <javadoc line="64">
                upcall to encapsulate file transfer                
            </javadoc>
            <method name="getFileStream" type="FileInputStream" line="70">
                <params>
                    <param name="file" type="String"/>
                    <param name="stgmedium" type="long"/>
                </params>
            </method>
            <javadoc line="74">
                upcall to encapsulate IStream buffer transfer                
            </javadoc>
            <method name="getIStream" type="Object" line="78">
                <params>
                    <param name="istream" type="long"/>
                </params>
            </method>
            <method name="getNativeData" type="Object" line="82">
                <params>
                    <param name="format" type="long"/>
                </params>
            </method>
            <javadoc line="86">
                signal drop complete                
            </javadoc>
            <method name="doDropDone" type="void" line="91">
                <params>
                    <param name="success" type="boolean"/>
                    <param name="dropAction" type="int"/>
                    <param name="isLocal" type="boolean"/>
                </params>
            </method>
            <method name="eventPosted" type="void" line="95">
                <params>
                    <param name="e" type="SunDropTargetEvent"/>
                </params>
                <comment line="102">
                    NOTE: this PeerEvent must be a NORM_PRIORITY event to be                    
                </comment>
                <comment line="103">
                    dispatched after this SunDropTargetEvent, but before the next                    
                </comment>
                <comment line="104">
                    one, so we should pass zero flags.                    
                </comment>
                <scope line="96">
                    <anonymous_class line="97">
                        <method name="run" type="void" line="98"/>
                    </anonymous_class>
                    <declaration name="runnable" type="Runnable" line="97"/>
                    <declaration name="peerEvent" type="PeerEvent" line="105"/>
                </scope>
            </method>
            <method name="getData" type="Object" line="110"/>
            <javadoc line="110">
                downcall to bind transfer data.                
            </javadoc>
            <method name="dropDone" type="void" line="116"/>
            <javadoc line="116">
                downcall to notify that drop is complete                
            </javadoc>
        </class>
        <class name="WDropTargetContextPeerFileStream" line="123">
            <extends class="FileInputStream"/>
            <comment line="160">
                fields                
            </comment>
            <comment line="232">
                fields                
            </comment>
            <javadoc line="123">
                package private class to handle file transfers                
            </javadoc>
            <javadoc line="129">
                construct file input stream                
            </javadoc>
            <method name="WDropTargetContextPeerFileStream" type="constructor" line="135">
                <params>
                    <param name="name" type="String"/>
                    <param name="stgmedium" type="long"/>
                </params>
            </method>
            <javadoc line="141">
                close                
            </javadoc>
            <method name="close" type="void" line="145">
                <scope line="146"/>
            </method>
            <method name="freeStgMedium" type="void" line="153"/>
            <javadoc line="153">
                free underlying windows data structure                
            </javadoc>
            <declaration name="stgmedium" type="long" line="163"/>
        </class>
        <class name="WDropTargetContextPeerIStream" line="166">
            <extends class="InputStream"/>
            <comment line="160">
                fields                
            </comment>
            <comment line="232">
                fields                
            </comment>
            <javadoc line="166">
                Package private class to access IStream objects                
            </javadoc>
            <javadoc line="172">
                construct a WDropTargetContextPeerIStream wrapper                
            </javadoc>
            <method name="WDropTargetContextPeerIStream" type="constructor" line="176">
                <params>
                    <param name="istream" type="long"/>
                </params>
            </method>
            <javadoc line="184">
                @return bytes available                
            </javadoc>
            <method name="available" type="int" line="188"/>
            <method name="Available" type="int" line="193"/>
            <javadoc line="195">
                read                
            </javadoc>
            <method name="read" type="int" line="199"/>
            <method name="Read" type="int" line="204"/>
            <javadoc line="206">
                read into buffer                
            </javadoc>
            <method name="read" type="int" line="210">
                <params>
                    <param name="b" type="byte[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <method name="ReadBytes" type="int" line="215"/>
            <javadoc line="217">
                close                
            </javadoc>
            <method name="close" type="void" line="221">
                <scope line="222"/>
            </method>
            <method name="Close" type="void" line="229"/>
            <declaration name="istream" type="long" line="235"/>
        </class>
    </source>