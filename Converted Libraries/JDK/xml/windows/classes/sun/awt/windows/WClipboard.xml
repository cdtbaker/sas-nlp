<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.windows">
        <import package="java.awt.datatransfer.DataFlavor"/>
        <import package="java.awt.datatransfer.Transferable"/>
        <import package="java.awt.datatransfer.UnsupportedFlavorException"/>
        <import package="java.io.IOException"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.Map"/>
        <import package="sun.awt.datatransfer.SunClipboard"/>
        <import package="sun.awt.datatransfer.DataTransferer"/>
        <class name="WClipboard" line="10">
            <extends class="SunClipboard"/>
            <javadoc line="10">
                A class which interfaces with the Windows clipboard in order to support
                  data transfer via Clipboard operations. Most of the work is provided by
                  sun.awt.datatransfer.DataTransferer.                
                <author>
                    Tom Ball                    
                </author>
                <author>
                    David Mendenhall                    
                </author>
                <author>
                    Danila Sinopalnikov                    
                </author>
                <author>
                    Alexander Gerasimov                    
                </author>
                <since>
                    JDK1.1                    
                </since>
            </javadoc>
            <declaration name="isClipboardViewerRegistered" type="boolean" line="21"/>
            <method name="WClipboard" type="constructor" line="22"/>
            <method name="getID" type="long" line="25"/>
            <method name="setContentsNative" type="void" line="28">
                <params>
                    <param name="contents" type="Transferable"/>
                </params>
                <declaration name="formatMap" type="Map" line="29"/>
                <scope line="31">
                    <scope line="32">
                        <declaration name="lFormat" type="Long" line="33"/>
                        <declaration name="format" type="long" line="34"/>
                        <declaration name="flavor" type="DataFlavor" line="35"/>
                        <scope line="36">
                            <declaration name="bytes" type="byte[]" line="37"/>
                        </scope>
                        <scope line="40">
                            <scope line="41"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="47"/>
            </method>
            <method name="lostSelectionOwnershipImpl" type="void" line="51"/>
            <javadoc line="54">
                Currently delayed data rendering is not used for the Windows clipboard,
                  so there is no native context to clear.                
            </javadoc>
            <method name="clearNativeContext" type="void" line="58"/>
            <method name="openClipboard" type="void" line="60"/>
            <javadoc line="60">
                Call the Win32 OpenClipboard function. If newOwner is non-null,
                  we also call EmptyClipboard and take ownership.                
                <throws>
                    IllegalStateException if the clipboard has not been opened                    
                </throws>
            </javadoc>
            <method name="closeClipboard" type="void" line="66"/>
            <javadoc line="66">
                Call the Win32 CloseClipboard function if we have clipboard ownership,
                  does nothing if we have not ownership.                
            </javadoc>
            <method name="publishClipboardData" type="void" line="71"/>
            <javadoc line="71">
                Call the Win32 SetClipboardData function.                
            </javadoc>
            <method name="init" type="void" line="75"/>
            <scope line="76"/>
            <method name="getClipboardFormats" type="long[]" line="79"/>
            <method name="getClipboardData" type="byte[]" line="80"/>
            <method name="registerClipboardViewerChecked" type="void" line="81">
                <scope line="82"/>
            </method>
            <method name="registerClipboardViewer" type="void" line="87"/>
            <javadoc line="88">
                The clipboard viewer (it&apos;s the toolkit window) is not unregistered
                  until the toolkit window disposing since MSDN suggests removing
                  the window from the clipboard viewer chain just before it is destroyed.                
            </javadoc>
            <method name="unregisterClipboardViewerChecked" type="void" line="93"/>
            <javadoc line="95">
                Upcall from native code.                
            </javadoc>
            <method name="handleContentsChanged" type="void" line="98">
                <scope line="99"/>
                <declaration name="formats" type="long[]" line="102"/>
                <scope line="103"/>
                <scope line="107"/>
                <scope line="109"/>
            </method>
            <javadoc line="114">
                The clipboard must be opened.                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="createLocaleTransferable" type="Transferable" line="118">
                <params>
                    <param name="formats" type="long[]"/>
                </params>
                <declaration name="found" type="boolean" line="119"/>
                <scope line="120">
                    <scope line="121"/>
                </scope>
                <scope line="126"/>
                <declaration name="localeData" type="byte[]" line="129"/>
                <scope line="130"/>
                <scope line="133"/>
                <declaration name="localeDataFinal" type="byte[]" line="136"/>
                <anonymous_class line="137">
                    <method name="getTransferDataFlavors" type="DataFlavor[]" line="138"/>
                    <method name="isDataFlavorSupported" type="boolean" line="141">
                        <params>
                            <param name="flavor" type="DataFlavor"/>
                        </params>
                    </method>
                    <method name="getTransferData" type="Object" line="144">
                        <params>
                            <param name="flavor" type="DataFlavor"/>
                        </params>
                        <scope line="145"/>
                    </method>
                </anonymous_class>
            </method>
        </class>
    </source>