<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.windows">
        <import package="java.awt"/>
        <import package="java.awt.peer"/>
        <import package="java.awt.event"/>
        <import package="java.awt.im"/>
        <import package="java.awt.im.spi.InputMethodContext"/>
        <import package="java.awt.font"/>
        <import package="java.text"/>
        <import package="java.text.AttributedCharacterIterator.Attribute"/>
        <import package="java.lang.Character.Subset"/>
        <import package="java.lang.Character.UnicodeBlock"/>
        <import package="java.util.Collections"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Locale"/>
        <import package="java.util.Map"/>
        <import package="sun.awt.im.InputMethodAdapter"/>
        <class name="WInputMethod" line="17">
            <extends class="InputMethodAdapter"/>
            <declaration name="inputContext" type="InputMethodContext" line="18"/>
            <javadoc line="18">
                The input method context, which is used to dispatch input method
                  events to the client component and to request information from
                  the client component.                
            </javadoc>
            <declaration name="awtFocussedComponent" type="Component" line="24"/>
            <declaration name="awtFocussedComponentPeer" type="WComponentPeer" line="25"/>
            <declaration name="lastFocussedComponentPeer" type="WComponentPeer" line="26"/>
            <declaration name="isLastFocussedActiveClient" type="boolean" line="27"/>
            <declaration name="isActive" type="boolean" line="28"/>
            <declaration name="context" type="int" line="29"/>
            <declaration name="open" type="boolean" line="30"/>
            <declaration name="cmode" type="int" line="31"/>
            <declaration name="currentLocale" type="Locale" line="32"/>
            <declaration name="statusWindowHidden" type="boolean" line="33"/>
            <declaration name="ATTR_INPUT" type="byte" line="34"/>
            <declaration name="ATTR_TARGET_CONVERTED" type="byte" line="35"/>
            <declaration name="ATTR_CONVERTED" type="byte" line="36"/>
            <declaration name="ATTR_TARGET_NOTCONVERTED" type="byte" line="37"/>
            <declaration name="ATTR_INPUT_ERROR" type="byte" line="38"/>
            <declaration name="IME_CMODE_ALPHANUMERIC" type="int" line="39"/>
            <declaration name="IME_CMODE_NATIVE" type="int" line="40"/>
            <declaration name="IME_CMODE_KATAKANA" type="int" line="41"/>
            <declaration name="IME_CMODE_LANGUAGE" type="int" line="42"/>
            <declaration name="IME_CMODE_FULLSHAPE" type="int" line="43"/>
            <declaration name="IME_CMODE_HANJACONVERT" type="int" line="44"/>
            <declaration name="IME_CMODE_ROMAN" type="int" line="45"/>
            <declaration name="COMMIT_INPUT" type="boolean" line="46"/>
            <declaration name="DISCARD_INPUT" type="boolean" line="47"/>
            <declaration name="highlightStyles" type="Map[]" line="48"/>
            <scope line="49">
                <declaration name="styles" type="Map" line="50"/>
                <declaration name="map" type="HashMap" line="51"/>
                <declaration name="navyBlue" type="Color" line="62"/>
            </scope>
            <method name="WInputMethod" type="constructor" line="70">
                <scope line="75"/>
            </method>
            <method name="finalize" type="void" line="79">
                <scope line="80"/>
            </method>
            <method name="setInputMethodContext" type="void" line="86">
                <params>
                    <param name="context" type="InputMethodContext"/>
                </params>
            </method>
            <method name="dispose" type="void" line="89"/>
            <javadoc line="91">
                Returns null.                
                <see>
                    java.awt.im.spi.InputMethod#getControlObject                    
                </see>
            </javadoc>
            <method name="getControlObject" type="Object" line="95"/>
            <method name="setLocale" type="boolean" line="98">
                <params>
                    <param name="lang" type="Locale"/>
                </params>
            </method>
            <method name="setLocale" type="boolean" line="101">
                <params>
                    <param name="lang" type="Locale"/>
                    <param name="onActivate" type="boolean"/>
                </params>
                <declaration name="available" type="Locale[]" line="102"/>
                <scope line="103">
                    <declaration name="locale" type="Locale" line="104"/>
                    <scope line="105">
                        <scope line="106"/>
                    </scope>
                </scope>
            </method>
            <method name="getLocale" type="Locale" line="115">
                <scope line="116">
                    <scope line="118"/>
                </scope>
            </method>
            <javadoc line="124">
                Implements InputMethod.setCharacterSubsets for Windows.                
                <see>
                    java.awt.im.spi.InputMethod#setCharacterSubsets                    
                </see>
            </javadoc>
            <method name="setCharacterSubsets" type="void" line="128">
                <params>
                    <param name="subsets" type="Subset[]"/>
                </params>
                <scope line="129"/>
                <declaration name="subset1" type="Subset" line="134"/>
                <declaration name="locale" type="Locale" line="135"/>
                <declaration name="newmode" type="int" line="136"/>
                <scope line="137"/>
                <scope line="140">
                    <scope line="141"/>
                    <scope line="144"/>
                </scope>
                <scope line="155">
                    <scope line="156"/>
                    <scope line="159"/>
                </scope>
                <scope line="167">
                    <scope line="168"/>
                    <scope line="171"/>
                </scope>
            </method>
            <method name="dispatchEvent" type="void" line="180">
                <params>
                    <param name="e" type="AWTEvent"/>
                </params>
                <scope line="181">
                    <declaration name="comp" type="Component" line="182"/>
                    <scope line="183">
                        <scope line="184"/>
                        <scope line="187"/>
                    </scope>
                </scope>
            </method>
            <method name="activate" type="void" line="193">
                <declaration name="isAc" type="boolean" line="194"/>
                <scope line="195">
                    <scope line="196"/>
                    <scope line="199"/>
                </scope>
                <scope line="206"/>
                <scope line="209"/>
            </method>
            <method name="deactivate" type="void" line="214">
                <params>
                    <param name="isTemporary" type="boolean"/>
                </params>
                <scope line="216"/>
            </method>
            <javadoc line="222">
                Explicitly disable the native IME. Native IME is not disabled when
                  deactivate is called.                
            </javadoc>
            <method name="disableInputMethod" type="void" line="226">
                <scope line="227"/>
            </method>
            <javadoc line="233">
                Returns a string with information about the windows input method,
                  or null.                
            </javadoc>
            <method name="getNativeInputMethodInfo" type="String" line="237"/>
            <javadoc line="240">
                @see sun.awt.im.InputMethodAdapter#stopListeningThis method is called when the input method is swapped out.
                  Calling stopListening to give other input method the keybaord input
                  focus.                
            </javadoc>
            <method name="stopListening" type="void" line="245"/>
            <method name="setAWTFocussedComponent" type="void" line="248">
                <params>
                    <param name="component" type="Component"/>
                </params>
                <scope line="249"/>
                <declaration name="peer" type="WComponentPeer" line="252"/>
                <scope line="253">
                    <scope line="254"/>
                    <scope line="257"/>
                </scope>
            </method>
            <method name="hideWindows" type="void" line="264">
                <scope line="265"/>
            </method>
            <javadoc line="270">
                @see java.awt.im.spi.InputMethod#removeNotify                
            </javadoc>
            <method name="removeNotify" type="void" line="273"/>
            <javadoc line="278">
                @see java.awt.Toolkit#mapInputMethodHighlight                
            </javadoc>
            <method name="mapInputMethodHighlight" type="Map" line="281">
                <params>
                    <param name="highlight" type="InputMethodHighlight"/>
                </params>
                <declaration name="index" type="int" line="282"/>
                <declaration name="state" type="int" line="283"/>
                <scope line="284"/>
                <scope line="287"/>
                <scope line="290"/>
                <scope line="293"/>
            </method>
            <method name="supportsBelowTheSpot" type="boolean" line="298"/>
            <method name="endComposition" type="void" line="301"/>
            <javadoc line="304">
                @see java.awt.im.spi.InputMethod#setCompositionEnabled(boolean)                
            </javadoc>
            <method name="setCompositionEnabled" type="void" line="307">
                <params>
                    <param name="enable" type="boolean"/>
                </params>
            </method>
            <javadoc line="310">
                @see java.awt.im.spi.InputMethod#isCompositionEnabled                
            </javadoc>
            <method name="isCompositionEnabled" type="boolean" line="313"/>
            <method name="sendInputMethodEvent" type="void" line="316">
                <params>
                    <param name="id" type="int"/>
                    <param name="when" type="long"/>
                    <param name="text" type="String"/>
                    <param name="clauseBoundary" type="int[]"/>
                    <param name="clauseReading" type="String[]"/>
                    <param name="attributeBoundary" type="int[]"/>
                    <param name="attributeValue" type="byte[]"/>
                    <param name="commitedTextLength" type="int"/>
                    <param name="caretPos" type="int"/>
                    <param name="visiblePos" type="int"/>
                </params>
                <declaration name="iterator" type="AttributedCharacterIterator" line="317"/>
                <scope line="318">
                    <declaration name="attrStr" type="AttributedString" line="319"/>
                    <scope line="321">
                        <scope line="322"/>
                    </scope>
                    <scope line="327"/>
                    <scope line="331">
                        <scope line="332">
                            <declaration name="highlight" type="InputMethodHighlight" line="333"/>
                        </scope>
                    </scope>
                    <scope line="353"/>
                </scope>
                <declaration name="source" type="Component" line="358"/>
                <declaration name="event" type="InputMethodEvent" line="360"/>
            </method>
            <method name="inquireCandidatePosition" type="void" line="363">
                <declaration name="source" type="Component" line="364"/>
                <scope line="365"/>
                <anonymous_class line="368">
                    <method name="run" type="void" line="369">
                        <declaration name="x" type="int" line="370"/>
                        <declaration name="y" type="int" line="371"/>
                        <declaration name="client" type="Component" line="372"/>
                        <scope line="373">
                            <scope line="374">
                                <declaration name="rc" type="Rectangle" line="375"/>
                            </scope>
                            <scope line="379">
                                <declaration name="pt" type="Point" line="380"/>
                                <declaration name="size" type="Dimension" line="381"/>
                            </scope>
                        </scope>
                    </method>
                </anonymous_class>
                <declaration name="r" type="Runnable" line="368"/>
            </method>
            <method name="getNearestNativePeer" type="WComponentPeer" line="392">
                <params>
                    <param name="comp" type="Component"/>
                </params>
                <declaration name="peer" type="ComponentPeer" line="394"/>
                <scope line="396"/>
            </method>
            <method name="createNativeContext" type="int" line="405"/>
            <method name="destroyNativeContext" type="void" line="406"/>
            <method name="enableNativeIME" type="void" line="407"/>
            <method name="disableNativeIME" type="void" line="408"/>
            <method name="handleNativeIMEEvent" type="void" line="409"/>
            <method name="endCompositionNative" type="void" line="410"/>
            <method name="setConversionStatus" type="void" line="411"/>
            <method name="getConversionStatus" type="int" line="412"/>
            <method name="setOpenStatus" type="void" line="413"/>
            <method name="getOpenStatus" type="boolean" line="414"/>
            <method name="setStatusWindowVisible" type="void" line="415"/>
            <method name="getNativeIMMDescription" type="String" line="416"/>
            <method name="getNativeLocale" type="Locale" line="417"/>
            <method name="setNativeLocale" type="boolean" line="418"/>
            <method name="openCandidateWindow" type="void" line="419"/>
        </class>
    </source>