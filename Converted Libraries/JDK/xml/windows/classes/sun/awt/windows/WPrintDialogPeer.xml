<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.windows">
        <import package="java.awt"/>
        <import package="java.awt.peer.DialogPeer"/>
        <import package="java.awt.peer.ComponentPeer"/>
        <import package="java.awt.dnd.DropTarget"/>
        <import package="java.util.Vector"/>
        <import package="sun.awt.AppContext"/>
        <import package="sun.awt.CausedFocusEvent"/>
        <import package="sun.awt.AWTAccessor"/>
        <class name="WPrintDialogPeer" line="37">
            <extends class="WWindowPeer"/>
            <comment line="56">
                fix for CR 6178323:
                 don&apos;t use checkCreation() from WComponentPeer to avoid hwnd check                
            </comment>
            <comment line="118">
                unused methods.  Overridden to disable this functionality as
                 it requires HWND which is not available for FileDialog                
            </comment>
            <comment line="159">
                The effects are not supported for system dialogs.                
            </comment>
            <comment line="165">
                the file/print dialogs are native dialogs and
                 the native system does their own rendering                
            </comment>
            <implements interface="DialogPeer"/>
            <scope line="39"/>
            <declaration name="parent" type="WComponentPeer" line="43"/>
            <declaration name="blockedWindows" type="Vector&lt;WWindowPeer&gt;" line="45"/>
            <method name="WPrintDialogPeer" type="constructor" line="47">
                <params>
                    <param name="target" type="WPrintDialog"/>
                </params>
            </method>
            <method name="create" type="void" line="51">
                <params>
                    <param name="parent" type="WComponentPeer"/>
                </params>
            </method>
            <method name="checkCreation" type="void" line="57"/>
            <method name="disposeImpl" type="void" line="60"/>
            <method name="_show" type="boolean" line="64"/>
            <method name="show" type="void" line="66">
                <comment line="73">
                    No exception should be thrown by native dialog code,
                     but if it is we need to trap it so the thread does
                     not hide is called and the thread doesn&apos;t hang.                    
                </comment>
                <anonymous_class line="67">
                    <method name="run" type="void" line="68">
                        <comment line="73">
                            No exception should be thrown by native dialog code,
                             but if it is we need to trap it so the thread does
                             not hide is called and the thread doesn&apos;t hang.                            
                        </comment>
                        <scope line="69"/>
                        <scope line="71"/>
                    </method>
                </anonymous_class>
            </method>
            <method name="setHWnd" type="void" line="81">
                <params>
                    <param name="hwnd" type="long"/>
                </params>
                <scope line="83">
                    <scope line="84"/>
                    <scope line="86"/>
                </scope>
            </method>
            <method name="blockWindow" type="void" line="92">
                <params>
                    <param name="window" type="WWindowPeer"/>
                </params>
                <scope line="94"/>
            </method>
            <method name="unblockWindow" type="void" line="98">
                <params>
                    <param name="window" type="WWindowPeer"/>
                </params>
                <scope line="100"/>
            </method>
            <method name="blockWindows" type="void" line="105">
                <params>
                    <param name="toBlock" type="java.util.List<Window>"/>
                </params>
                <scope line="106">
                    <declaration name="wp" type="WWindowPeer" line="107"/>
                    <scope line="108"/>
                </scope>
            </method>
            <method name="toFront" type="void" line="114"/>
            <method name="toBack" type="void" line="115"/>
            <method name="initialize" type="void" line="119"/>
            <method name="setAlwaysOnTop" type="void" line="120">
                <params>
                    <param name="b" type="boolean"/>
                </params>
            </method>
            <method name="setResizable" type="void" line="121">
                <params>
                    <param name="resizable" type="boolean"/>
                </params>
            </method>
            <method name="hide" type="void" line="122"/>
            <method name="enable" type="void" line="123"/>
            <method name="disable" type="void" line="124"/>
            <method name="reshape" type="void" line="125">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
            </method>
            <method name="handleEvent" type="boolean" line="126">
                <params>
                    <param name="e" type="Event"/>
                </params>
            </method>
            <method name="setForeground" type="void" line="127">
                <params>
                    <param name="c" type="Color"/>
                </params>
            </method>
            <method name="setBackground" type="void" line="128">
                <params>
                    <param name="c" type="Color"/>
                </params>
            </method>
            <method name="setFont" type="void" line="129">
                <params>
                    <param name="f" type="Font"/>
                </params>
            </method>
            <method name="updateMinimumSize" type="void" line="130"/>
            <method name="updateIconImages" type="void" line="131"/>
            <method name="requestFocus" type="boolean" line="132">
                <params>
                    <param name="temporary" type="boolean"/>
                    <param name="focusedWindowChangeAllowed" type="boolean"/>
                </params>
            </method>
            <method name="requestFocus" type="boolean" line="139">
                <params>
                    <param name="lightweightChild" type="Component"/>
                    <param name="temporary" type="boolean"/>
                    <param name="focusedWindowChangeAllowed" type="boolean"/>
                    <param name="time" type="long"/>
                    <param name="cause" type="CausedFocusEvent.Cause"/>
                </params>
            </method>
            <method name="updateFocusableWindowState" type="void" line="144"/>
            <method name="start" type="void" line="145"/>
            <method name="beginValidate" type="void" line="146"/>
            <method name="endValidate" type="void" line="147"/>
            <method name="invalidate" type="void" line="148">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
            </method>
            <method name="addDropTarget" type="void" line="149">
                <params>
                    <param name="dt" type="DropTarget"/>
                </params>
            </method>
            <method name="removeDropTarget" type="void" line="150">
                <params>
                    <param name="dt" type="DropTarget"/>
                </params>
            </method>
            <method name="setZOrder" type="void" line="151">
                <params>
                    <param name="above" type="ComponentPeer"/>
                </params>
            </method>
            <method name="initIDs" type="void" line="153"/>
            <javadoc line="153">
                Initialize JNI field and method ids                
            </javadoc>
            <method name="applyShape" type="void" line="159">
                <params>
                    <param name="shape" type="sun.java2d.pipe.Region"/>
                </params>
            </method>
            <method name="setOpacity" type="void" line="160">
                <params>
                    <param name="opacity" type="float"/>
                </params>
            </method>
            <method name="setOpaque" type="void" line="161">
                <params>
                    <param name="isOpaque" type="boolean"/>
                </params>
            </method>
            <method name="updateWindow" type="void" line="162">
                <params>
                    <param name="backBuffer" type="java.awt.image.BufferedImage"/>
                </params>
            </method>
            <method name="createScreenSurface" type="void" line="167">
                <params>
                    <param name="isResize" type="boolean"/>
                </params>
            </method>
            <method name="replaceSurfaceData" type="void" line="169"/>
        </class>
    </source>