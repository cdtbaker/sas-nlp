<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.windows">
        <import package="sun.awt"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.awt.peer.ComponentPeer"/>
        <import package="java.util"/>
        <import package="java.awt.color"/>
        <import package="java.awt.image"/>
        <import package="sun.awt.image.ByteInterleavedRaster"/>
        <import package="sun.security.action.GetPropertyAction"/>
        <import package="java.lang.reflect"/>
        <class name="WEmbeddedFrame" line="12">
            <extends class="EmbeddedFrame"/>
            <scope line="13"/>
            <declaration name="handle" type="long" line="16"/>
            <declaration name="bandWidth" type="int" line="17"/>
            <declaration name="bandHeight" type="int" line="18"/>
            <declaration name="imgWid" type="int" line="19"/>
            <declaration name="imgHgt" type="int" line="20"/>
            <declaration name="pScale" type="int" line="21"/>
            <declaration name="MAX_BAND_SIZE" type="int" line="22"/>
            <declaration name="printScale" type="String" line="23"/>
            <method name="WEmbeddedFrame" type="constructor" line="24"/>
            <javadoc line="27">
                @deprecated This constructor will be removed in 1.5                
            </javadoc>
            <method name="WEmbeddedFrame" type="constructor" line="30">
                <params>
                    <param name="handle" type="int"/>
                </params>
            </method>
            <method name="WEmbeddedFrame" type="constructor" line="33">
                <params>
                    <param name="handle" type="long"/>
                </params>
                <scope line="35"/>
            </method>
            <method name="addNotify" type="void" line="40">
                <scope line="41">
                    <declaration name="toolkit" type="WToolkit" line="42"/>
                </scope>
            </method>
            <method name="getEmbedderHandle" type="long" line="47"/>
            <method name="print" type="void" line="50">
                <params>
                    <param name="hdc" type="long"/>
                </params>
                <declaration name="bandImage" type="BufferedImage" line="51"/>
                <declaration name="xscale" type="int" line="52"/>
                <declaration name="yscale" type="int" line="53"/>
                <scope line="54"/>
                <declaration name="frameHeight" type="int" line="57"/>
                <scope line="58">
                    <scope line="60"/>
                    <scope line="63"/>
                </scope>
                <declaration name="clearGraphics" type="Graphics" line="71"/>
                <declaration name="g2d" type="Graphics2D" line="73"/>
                <declaration name="ras" type="ByteInterleavedRaster" line="76"/>
                <declaration name="data" type="byte[]" line="77"/>
                <scope line="78">
                    <declaration name="imageOffset" type="int" line="81"/>
                    <declaration name="currBandHeight" type="int" line="82"/>
                    <declaration name="currImgHeight" type="int" line="83"/>
                    <scope line="84"/>
                </scope>
            </method>
            <method name="getPrintScaleFactor" type="int" line="93">
                <scope line="95">
                    <anonymous_class line="96">
                        <method name="run" type="Object" line="97"/>
                    </anonymous_class>
                </scope>
                <declaration name="default_printDC_scale" type="int" line="103"/>
                <declaration name="scale" type="int" line="104"/>
                <scope line="105">
                    <scope line="106">
                        <scope line="108"/>
                    </scope>
                    <scope line="112"/>
                </scope>
            </method>
            <method name="isPrinterDC" type="boolean" line="118"/>
            <method name="printBand" type="void" line="119"/>
            <method name="initIDs" type="void" line="120"/>
            <javadoc line="120">
                Initialize JNI field IDs                
            </javadoc>
            <javadoc line="124">
                This method is called from the native code when this embedded
                  frame should be activated. It is expected to be overridden in
                  subclasses, for example, in plugin to activate the browser
                  window that contains this embedded frame.
                  NOTE: This method may be called by privileged threads.
                  DO NOT INVOKE CLIENT CODE ON THIS THREAD!                
            </javadoc>
            <method name="activateEmbeddingTopLevel" type="void" line="132"/>
            <method name="synthesizeWindowActivation" type="void" line="134">
                <params>
                    <param name="doActivate" type="boolean"/>
                </params>
                <scope line="135"/>
                <scope line="138">
                    <anonymous_class line="139">
                        <method name="run" type="void" line="140"/>
                    </anonymous_class>
                </scope>
            </method>
            <method name="registerAccelerator" type="void" line="147">
                <params>
                    <param name="stroke" type="AWTKeyStroke"/>
                </params>
            </method>
            <method name="unregisterAccelerator" type="void" line="149">
                <params>
                    <param name="stroke" type="AWTKeyStroke"/>
                </params>
            </method>
            <javadoc line="151">
                Should be overridden in subclasses. Call to
                  super.notifyModalBlocked(blocker, blocked) must be present
                  when overriding.
                  It may occur that embedded frame is not put into its
                  container at the moment when it is blocked, for example,
                  when running an applet in IE. Then the call to this method
                  should be delayed until embedded frame is reparented.
                  NOTE: This method may be called by privileged threads.
                  DO NOT INVOKE CLIENT CODE ON THIS THREAD!                
            </javadoc>
            <method name="notifyModalBlocked" type="void" line="162">
                <params>
                    <param name="blocker" type="Dialog"/>
                    <param name="blocked" type="boolean"/>
                </params>
                <scope line="163">
                    <declaration name="thisPeer" type="ComponentPeer" line="164"/>
                    <declaration name="blockerPeer" type="ComponentPeer" line="165"/>
                </scope>
                <scope line="168"/>
            </method>
            <method name="notifyModalBlockedImpl" type="void" line="172"/>
        </class>
    </source>