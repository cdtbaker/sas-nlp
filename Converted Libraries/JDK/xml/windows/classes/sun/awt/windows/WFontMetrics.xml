<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.windows">
        <import package="java.awt"/>
        <import package="java.util.Hashtable"/>
        <class name="WFontMetrics" line="4">
            <extends class="FontMetrics"/>
            <javadoc line="4">
                A font metrics object for a WServer font.                
                <author>
                    Jim Graham                    
                </author>
            </javadoc>
            <scope line="9"/>
            <declaration name="widths" type="int" line="12"/>
            <javadoc line="12">
                The widths of the first 256 characters.                
            </javadoc>
            <declaration name="ascent" type="int" line="16"/>
            <javadoc line="16">
                The standard ascent of the font.  This is the logical height
                  above the baseline for the Alphanumeric characters and should
                  be used for determining line spacing.  Note, however, that some
                  characters in the font may extend above this height.                
            </javadoc>
            <declaration name="descent" type="int" line="23"/>
            <javadoc line="23">
                The standard descent of the font.  This is the logical height
                  below the baseline for the Alphanumeric characters and should
                  be used for determining line spacing.  Note, however, that some
                  characters in the font may extend below this height.                
            </javadoc>
            <declaration name="leading" type="int" line="30"/>
            <javadoc line="30">
                The standard leading for the font.  This is the logical amount
                  of space to be reserved between the descent of one line of text
                  and the ascent of the next line.  The height metric is calculated
                  to include this extra space.                
            </javadoc>
            <declaration name="height" type="int" line="37"/>
            <javadoc line="37">
                The standard height of a line of text in this font.  This is
                  the distance between the baseline of adjacent lines of text.
                  It is the sum of the ascent+descent+leading.  There is no
                  guarantee that lines of text spaced at this distance will be
                  disjoint; such lines may overlap if some characters overshoot
                  the standard ascent and descent metrics.                
            </javadoc>
            <declaration name="maxAscent" type="int" line="46"/>
            <javadoc line="46">
                The maximum ascent for all characters in this font.  No character
                  will extend further above the baseline than this metric.                
            </javadoc>
            <declaration name="maxDescent" type="int" line="51"/>
            <javadoc line="51">
                The maximum descent for all characters in this font.  No character
                  will descend further below the baseline than this metric.                
            </javadoc>
            <declaration name="maxHeight" type="int" line="56"/>
            <javadoc line="56">
                The maximum possible height of a line of text in this font.
                  Adjacent lines of text spaced this distance apart will be
                  guaranteed not to overlap.  Note, however, that many paragraphs
                  that contain ordinary alphanumeric text may look too widely
                  spaced if this metric is used to determine line spacing.  The
                  height field should be preferred unless the text in a given
                  line contains particularly tall characters.                
            </javadoc>
            <declaration name="maxAdvance" type="int" line="66"/>
            <javadoc line="66">
                The maximum advance width of any character in this font.                
            </javadoc>
            <javadoc line="70">
                Calculate the metrics from the given WServer and font.                
            </javadoc>
            <method name="WFontMetrics" type="constructor" line="73">
                <params>
                    <param name="font" type="Font"/>
                </params>
            </method>
            <javadoc line="77">
                Get leading                
            </javadoc>
            <method name="getLeading" type="int" line="80"/>
            <javadoc line="83">
                Get ascent.                
            </javadoc>
            <method name="getAscent" type="int" line="86"/>
            <javadoc line="89">
                Get descent                
            </javadoc>
            <method name="getDescent" type="int" line="92"/>
            <javadoc line="95">
                Get height                
            </javadoc>
            <method name="getHeight" type="int" line="98"/>
            <javadoc line="101">
                Get maxAscent                
            </javadoc>
            <method name="getMaxAscent" type="int" line="104"/>
            <javadoc line="107">
                Get maxDescent                
            </javadoc>
            <method name="getMaxDescent" type="int" line="110"/>
            <javadoc line="113">
                Get maxAdvance                
            </javadoc>
            <method name="getMaxAdvance" type="int" line="116"/>
            <method name="stringWidth" type="int" line="119"/>
            <javadoc line="119">
                Return the width of the specified string in this Font.                
            </javadoc>
            <method name="charsWidth" type="int" line="123"/>
            <javadoc line="123">
                Return the width of the specified char[] in this Font.                
            </javadoc>
            <method name="bytesWidth" type="int" line="127"/>
            <javadoc line="127">
                Return the width of the specified byte[] in this Font.                
            </javadoc>
            <javadoc line="131">
                Get the widths of the first 256 characters in the font.                
            </javadoc>
            <method name="getWidths" type="int[]" line="134"/>
            <method name="init" type="void" line="137"/>
            <declaration name="table" type="Hashtable" line="138"/>
            <method name="getFontMetrics" type="FontMetrics" line="139">
                <params>
                    <param name="font" type="Font"/>
                </params>
                <declaration name="fm" type="FontMetrics" line="140"/>
                <scope line="141"/>
            </method>
            <method name="initIDs" type="void" line="146"/>
            <javadoc line="146">
                Initialize JNI field and method IDs                
            </javadoc>
        </class>
    </source>