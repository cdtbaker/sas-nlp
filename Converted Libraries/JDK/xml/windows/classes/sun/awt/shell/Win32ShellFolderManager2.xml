<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.shell">
        <import package="java.awt"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.io.File"/>
        <import package="java.io.FileNotFoundException"/>
        <import package="java.io.IOException"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.util"/>
        <import package="java.util.List"/>
        <import package="java.util.concurrent"/>
        <import package="sun.security.action.LoadLibraryAction"/>
        <import package="sun.awt.shell.Win32ShellFolder2"/>
        <import package="sun.awt.OSInfo"/>
        <class name="Win32ShellFolderManager2" line="15">
            <extends class="ShellFolderManager"/>
            <javadoc line="15">
                @author Michael Martak                
                <author>
                    Leif Samuelsson                    
                </author>
                <author>
                    Kenneth Russell                    
                </author>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <scope line="22"/>
            <method name="createShellFolder" type="ShellFolder" line="25">
                <params>
                    <param name="file" type="File"/>
                </params>
                <scope line="26"/>
                <scope line="29"/>
            </method>
            <method name="createShellFolder" type="Win32ShellFolder2" line="33">
                <params>
                    <param name="parent" type="Win32ShellFolder2"/>
                    <param name="file" type="File"/>
                </params>
                <declaration name="pIDL" type="long" line="34"/>
                <scope line="35"/>
                <scope line="38"/>
                <scope line="41"/>
                <scope line="44"/>
                <scope line="47"/>
            </method>
            <method name="createShellFolderFromRelativePIDL" type="Win32ShellFolder2" line="51">
                <params>
                    <param name="parent" type="Win32ShellFolder2"/>
                    <param name="pIDL" type="long"/>
                </params>
                <scope line="52">
                    <declaration name="curPIDL" type="long" line="53"/>
                    <scope line="54"/>
                    <scope line="58"/>
                </scope>
            </method>
            <declaration name="VIEW_LIST" type="int" line="64"/>
            <declaration name="VIEW_DETAILS" type="int" line="65"/>
            <declaration name="VIEW_PARENTFOLDER" type="int" line="66"/>
            <declaration name="VIEW_NEWFOLDER" type="int" line="67"/>
            <declaration name="STANDARD_VIEW_BUTTONS" type="Image[]" line="68"/>
            <method name="getStandardViewButton" type="Image" line="69">
                <params>
                    <param name="iconIndex" type="int"/>
                </params>
                <declaration name="result" type="Image" line="70"/>
                <scope line="71"/>
                <declaration name="img" type="BufferedImage" line="74"/>
            </method>
            <declaration name="desktop" type="Win32ShellFolder2" line="79"/>
            <declaration name="drives" type="Win32ShellFolder2" line="80"/>
            <declaration name="recent" type="Win32ShellFolder2" line="81"/>
            <declaration name="network" type="Win32ShellFolder2" line="82"/>
            <declaration name="personal" type="Win32ShellFolder2" line="83"/>
            <method name="getDesktop" type="Win32ShellFolder2" line="84">
                <scope line="85">
                    <scope line="86"/>
                    <scope line="89"/>
                    <scope line="91"/>
                </scope>
            </method>
            <method name="getDrives" type="Win32ShellFolder2" line="96">
                <scope line="97">
                    <scope line="98"/>
                    <scope line="101"/>
                    <scope line="103"/>
                </scope>
            </method>
            <method name="getRecent" type="Win32ShellFolder2" line="108">
                <scope line="109">
                    <scope line="110">
                        <declaration name="path" type="String" line="111"/>
                        <scope line="112"/>
                    </scope>
                    <scope line="116"/>
                    <scope line="118"/>
                </scope>
            </method>
            <method name="getNetwork" type="Win32ShellFolder2" line="123">
                <scope line="124">
                    <scope line="125"/>
                    <scope line="128"/>
                    <scope line="130"/>
                </scope>
            </method>
            <method name="getPersonal" type="Win32ShellFolder2" line="135">
                <scope line="136">
                    <scope line="137">
                        <declaration name="path" type="String" line="138"/>
                        <scope line="139">
                            <declaration name="desktop" type="Win32ShellFolder2" line="140"/>
                            <scope line="142"/>
                            <scope line="145"/>
                        </scope>
                    </scope>
                    <scope line="150"/>
                    <scope line="152"/>
                </scope>
            </method>
            <declaration name="roots" type="File[]" line="157"/>
            <javadoc line="158">
                @param key a &lt;code&gt;String&lt;/code&gt;
                  &quot;fileChooserDefaultFolder&quot;:
                  Returns a &lt;code&gt;File&lt;/code&gt; - the default shellfolder for a new filechooser
                  &quot;roots&quot;:
                  Returns a &lt;code&gt;File[]&lt;/code&gt; - containing the root(s) of the displayable hierarchy
                  &quot;fileChooserComboBoxFolders&quot;:
                  Returns a &lt;code&gt;File[]&lt;/code&gt; - an array of shellfolders representing the list to
                  show by default in the file chooser&apos;s combobox
                  &quot;fileChooserShortcutPanelFolders&quot;:
                  Returns a &lt;code&gt;File[]&lt;/code&gt; - an array of shellfolders representing well-known
                  folders, such as Desktop, Documents, History, Network, Home, etc.
                  This is used in the shortcut panel of the filechooser on Windows 2000
                  and Windows Me.
                  &quot;fileChooserIcon &lt;icon&gt;&quot;:
                  Returns an &lt;code&gt;Image&lt;/code&gt; - icon can be ListView, DetailsView, UpFolder, NewFolder or
                  ViewMenu (Windows only).
                  &quot;optionPaneIcon iconName&quot;:
                  Returns an &lt;code&gt;Image&lt;/code&gt; - icon from the system icon list                
                <return>
                    An Object matching the key string.                    
                </return>
            </javadoc>
            <method name="get" type="Object" line="179">
                <params>
                    <param name="key" type="String"/>
                </params>
                <scope line="180">
                    <declaration name="file" type="File" line="181"/>
                    <scope line="182"/>
                </scope>
                <scope line="187">
                    <scope line="188">
                        <declaration name="desktop" type="File" line="189"/>
                        <scope line="190"/>
                        <scope line="193"/>
                    </scope>
                </scope>
                <scope line="199">
                    <declaration name="desktop" type="Win32ShellFolder2" line="200"/>
                    <scope line="201">
                        <declaration name="folders" type="ArrayList&lt;File&gt;" line="202"/>
                        <declaration name="drives" type="Win32ShellFolder2" line="203"/>
                        <declaration name="recentFolder" type="Win32ShellFolder2" line="204"/>
                        <scope line="205"/>
                        <declaration name="secondLevelFolders" type="File[]" line="209"/>
                        <scope line="211">
                            <declaration name="folder" type="Win32ShellFolder2" line="212"/>
                            <scope line="213">
                                <scope line="215">
                                    <declaration name="thirdLevelFolders" type="File[]" line="216"/>
                                    <scope line="217">
                                        <declaration name="thirdLevelFoldersList" type="List&lt;File&gt;" line="218"/>
                                    </scope>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="227"/>
                </scope>
                <scope line="231">
                    <declaration name="toolkit" type="Toolkit" line="232"/>
                    <declaration name="folders" type="ArrayList&lt;File&gt;" line="233"/>
                    <declaration name="i" type="int" line="234"/>
                    <declaration name="value" type="Object" line="235"/>
                    <scope line="236">
                        <scope line="238">
                            <scope line="239"/>
                            <scope line="242"/>
                        </scope>
                        <scope line="246"/>
                        <scope line="248"/>
                    </scope>
                    <scope line="253">
                        <scope line="254">
                            <scope line="255"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="262">
                    <declaration name="name" type="String" line="263"/>
                    <declaration name="iconIndex" type="int" line="264"/>
                    <scope line="265"/>
                    <scope line="268"/>
                    <scope line="271"/>
                    <scope line="274"/>
                    <scope line="277"/>
                </scope>
                <scope line="282">
                    <declaration name="iconType" type="Win32ShellFolder2.SystemIcon" line="283"/>
                    <scope line="284"/>
                    <scope line="287"/>
                    <scope line="290"/>
                    <scope line="293"/>
                    <scope line="296"/>
                </scope>
                <scope line="301">
                    <declaration name="name" type="String" line="302"/>
                    <scope line="303">
                        <declaration name="i" type="int" line="304"/>
                        <scope line="305"/>
                    </scope>
                    <scope line="309"/>
                </scope>
            </method>
            <javadoc line="314">
                Does &lt;code&gt;dir&lt;/code&gt; represent a &quot;computer&quot; such as a node on the network, or
                  &quot;My Computer&quot; on the desktop.                
            </javadoc>
            <method name="isComputerNode" type="boolean" line="318">
                <params>
                    <param name="dir" type="File"/>
                </params>
                <scope line="319"/>
                <scope line="322">
                    <anonymous_class line="323">
                        <method name="run" type="String" line="324"/>
                    </anonymous_class>
                    <declaration name="path" type="String" line="323"/>
                </scope>
            </method>
            <method name="isFileSystemRoot" type="boolean" line="332">
                <params>
                    <param name="dir" type="File"/>
                </params>
                <scope line="333">
                    <declaration name="drives" type="Win32ShellFolder2" line="334"/>
                    <scope line="335">
                        <declaration name="sf" type="Win32ShellFolder2" line="336"/>
                        <scope line="337">
                            <scope line="338"/>
                        </scope>
                        <scope line="342"/>
                    </scope>
                    <declaration name="path" type="String" line="346"/>
                    <scope line="347"/>
                    <declaration name="files" type="File[]" line="350"/>
                </scope>
            </method>
            <declaration name="topFolderList" type="List" line="355"/>
            <method name="compareShellFolders" type="int" line="356">
                <params>
                    <param name="sf1" type="Win32ShellFolder2"/>
                    <param name="sf2" type="Win32ShellFolder2"/>
                </params>
                <declaration name="special1" type="boolean" line="357"/>
                <declaration name="special2" type="boolean" line="358"/>
                <scope line="359">
                    <scope line="360">
                        <declaration name="tmpTopFolderList" type="ArrayList" line="361"/>
                    </scope>
                    <declaration name="i1" type="int" line="368"/>
                    <declaration name="i2" type="int" line="369"/>
                    <scope line="370"/>
                    <scope line="373"/>
                    <scope line="376"/>
                </scope>
                <scope line="380"/>
                <scope line="383"/>
            </method>
            <method name="compareNames" type="int" line="388">
                <params>
                    <param name="name1" type="String"/>
                    <param name="name2" type="String"/>
                </params>
                <declaration name="diff" type="int" line="389"/>
                <scope line="390"/>
                <scope line="393"/>
            </method>
            <method name="createInvoker" type="Invoker" line="397"/>
            <class name="ComInvoker" line="400">
                <extends class="ThreadPoolExecutor"/>
                <implements interface="ThreadFactory"/>
                <implements interface="ShellFolder.Invoker"/>
                <declaration name="comThread" type="Thread" line="401"/>
                <method name="ComInvoker" type="constructor" line="402">
                    <anonymous_class line="406">
                        <method name="run" type="void" line="407">
                            <anonymous_class line="408">
                                <method name="run" type="Void" line="409"/>
                            </anonymous_class>
                        </method>
                    </anonymous_class>
                    <declaration name="shutdownHook" type="Runnable" line="406"/>
                    <anonymous_class line="418">
                        <method name="run" type="Void" line="419"/>
                    </anonymous_class>
                </method>
                <method name="newThread" type="Thread" line="426">
                    <params>
                        <param name="task" type="Runnable"/>
                    </params>
                    <anonymous_class line="427">
                        <method name="run" type="void" line="428">
                            <scope line="429"/>
                            <scope line="433"/>
                        </method>
                    </anonymous_class>
                    <declaration name="comRun" type="Runnable" line="427"/>
                    <anonymous_class line="439">
                        <method name="run" type="Thread" line="440">
                            <declaration name="tg" type="ThreadGroup" line="441"/>
                            <declaration name="thread" type="Thread" line="443"/>
                        </method>
                    </anonymous_class>
                </method>
                <method name="invoke" type="T" line="451">
                    <params>
                        <param name="task" type="Callable<T>"/>
                    </params>
                    <scope line="452"/>
                    <scope line="455">
                        <declaration name="future" type="Future&lt;T&gt;" line="456"/>
                        <scope line="457"/>
                        <scope line="460"/>
                        <scope line="463"/>
                        <scope line="466">
                            <anonymous_class line="467">
                                <method name="run" type="Void" line="468"/>
                            </anonymous_class>
                        </scope>
                        <scope line="476">
                            <declaration name="cause" type="Throwable" line="477"/>
                            <scope line="478"/>
                            <scope line="481"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <method name="initializeCom" type="void" line="489"/>
            <method name="uninitializeCom" type="void" line="490"/>
        </class>
    </source>