<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.shell">
        <import package="java.awt"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.io.File"/>
        <import package="java.io.FileNotFoundException"/>
        <import package="java.io.IOException"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.util"/>
        <import package="java.util.List"/>
        <import package="java.util.concurrent"/>
        <import package="sun.security.action.LoadLibraryAction"/>
        <import package="sun.awt.shell.Win32ShellFolder2"/>
        <import package="sun.awt.OSInfo"/>
        <class name="Win32ShellFolderManager2" line="48">
            <extends class="ShellFolderManager"/>
            <comment line="130">
                Special folders                
            </comment>
            <javadoc line="48">
                @author Michael Martak                
                <author>
                    Leif Samuelsson                    
                </author>
                <author>
                    Kenneth Russell                    
                </author>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <scope line="57"/>
            <method name="createShellFolder" type="ShellFolder" line="62">
                <params>
                    <param name="file" type="File"/>
                </params>
                <scope line="63"/>
                <scope line="65"/>
            </method>
            <method name="createShellFolder" type="Win32ShellFolder2" line="71">
                <params>
                    <param name="parent" type="Win32ShellFolder2"/>
                    <param name="file" type="File"/>
                </params>
                <comment line="80">
                    Shouldn&apos;t happen but watch for it anyway                    
                </comment>
                <declaration name="pIDL" type="long" line="72"/>
                <scope line="73"/>
                <scope line="75"/>
                <scope line="78"/>
                <scope line="83"/>
                <scope line="85"/>
            </method>
            <method name="createShellFolderFromRelativePIDL" type="Win32ShellFolder2" line="91">
                <params>
                    <param name="parent" type="Win32ShellFolder2"/>
                    <param name="pIDL" type="long"/>
                </params>
                <comment line="93">
                    Walk down this relative pIDL, creating new nodes for each of the entries                    
                </comment>
                <comment line="100">
                    The list is empty if the parent is Desktop and pIDL is a shortcut to Desktop                    
                </comment>
                <scope line="93">
                    <declaration name="curPIDL" type="long" line="94"/>
                    <scope line="95"/>
                    <scope line="98"/>
                </scope>
            </method>
            <declaration name="VIEW_LIST" type="int" line="106"/>
            <declaration name="VIEW_DETAILS" type="int" line="107"/>
            <declaration name="VIEW_PARENTFOLDER" type="int" line="108"/>
            <declaration name="VIEW_NEWFOLDER" type="int" line="109"/>
            <declaration name="STANDARD_VIEW_BUTTONS" type="Image[]" line="111"/>
            <method name="getStandardViewButton" type="Image" line="113">
                <params>
                    <param name="iconIndex" type="int"/>
                </params>
                <declaration name="result" type="Image" line="114"/>
                <scope line="116"/>
                <declaration name="img" type="BufferedImage" line="120"/>
            </method>
            <declaration name="desktop" type="Win32ShellFolder2" line="130"/>
            <declaration name="drives" type="Win32ShellFolder2" line="131"/>
            <declaration name="recent" type="Win32ShellFolder2" line="132"/>
            <declaration name="network" type="Win32ShellFolder2" line="133"/>
            <declaration name="personal" type="Win32ShellFolder2" line="134"/>
            <method name="getDesktop" type="Win32ShellFolder2" line="136">
                <comment line="142">
                    Ignore error                    
                </comment>
                <comment line="144">
                    Ignore error                    
                </comment>
                <scope line="137">
                    <scope line="138"/>
                    <scope line="140"/>
                    <scope line="142"/>
                </scope>
            </method>
            <method name="getDrives" type="Win32ShellFolder2" line="149">
                <comment line="155">
                    Ignore error                    
                </comment>
                <comment line="157">
                    Ignore error                    
                </comment>
                <scope line="150">
                    <scope line="151"/>
                    <scope line="153"/>
                    <scope line="155"/>
                </scope>
            </method>
            <method name="getRecent" type="Win32ShellFolder2" line="162">
                <comment line="171">
                    Ignore error                    
                </comment>
                <comment line="173">
                    Ignore error                    
                </comment>
                <scope line="163">
                    <scope line="164">
                        <declaration name="path" type="String" line="165"/>
                        <scope line="166"/>
                    </scope>
                    <scope line="169"/>
                    <scope line="171"/>
                </scope>
            </method>
            <method name="getNetwork" type="Win32ShellFolder2" line="178">
                <comment line="184">
                    Ignore error                    
                </comment>
                <comment line="186">
                    Ignore error                    
                </comment>
                <scope line="179">
                    <scope line="180"/>
                    <scope line="182"/>
                    <scope line="184"/>
                </scope>
            </method>
            <method name="getPersonal" type="Win32ShellFolder2" line="191">
                <comment line="207">
                    Ignore error                    
                </comment>
                <comment line="209">
                    Ignore error                    
                </comment>
                <scope line="192">
                    <scope line="193">
                        <declaration name="path" type="String" line="194"/>
                        <scope line="195">
                            <declaration name="desktop" type="Win32ShellFolder2" line="196"/>
                            <scope line="198"/>
                            <scope line="201"/>
                        </scope>
                    </scope>
                    <scope line="205"/>
                    <scope line="207"/>
                </scope>
            </method>
            <declaration name="roots" type="File[]" line="215"/>
            <javadoc line="217">
                @param key a &lt;code&gt;String&lt;/code&gt;
                  &quot;fileChooserDefaultFolder&quot;:
                  Returns a &lt;code&gt;File&lt;/code&gt; - the default shellfolder for a new filechooser
                  &quot;roots&quot;:
                  Returns a &lt;code&gt;File[]&lt;/code&gt; - containing the root(s) of the displayable hierarchy
                  &quot;fileChooserComboBoxFolders&quot;:
                  Returns a &lt;code&gt;File[]&lt;/code&gt; - an array of shellfolders representing the list to
                  show by default in the file chooser&apos;s combobox
                  &quot;fileChooserShortcutPanelFolders&quot;:
                  Returns a &lt;code&gt;File[]&lt;/code&gt; - an array of shellfolders representing well-known
                  folders, such as Desktop, Documents, History, Network, Home, etc.
                  This is used in the shortcut panel of the filechooser on Windows 2000
                  and Windows Me.
                  &quot;fileChooserIcon &lt;icon&gt;&quot;:
                  Returns an &lt;code&gt;Image&lt;/code&gt; - icon can be ListView, DetailsView, UpFolder, NewFolder or
                  ViewMenu (Windows only).
                  &quot;optionPaneIcon iconName&quot;:
                  Returns an &lt;code&gt;Image&lt;/code&gt; - icon from the system icon list                
                <return>
                    An Object matching the key string.                    
                </return>
            </javadoc>
            <method name="get" type="Object" line="239">
                <params>
                    <param name="key" type="String"/>
                </params>
                <comment line="248">
                    Should be &quot;History&quot; and &quot;Desktop&quot; ?                    
                </comment>
                <comment line="271">
                    Add all second level folders                    
                </comment>
                <comment line="278">
                    Add third level for &quot;My Computer&quot;                    
                </comment>
                <comment line="303">
                    A CSIDL                    
                </comment>
                <comment line="306">
                    A path                    
                </comment>
                <comment line="310">
                    Skip this value                    
                </comment>
                <comment line="312">
                    Return empty result                    
                </comment>
                <comment line="318">
                    Use default list of places                    
                </comment>
                <scope line="240">
                    <declaration name="file" type="File" line="241"/>
                    <scope line="242"/>
                </scope>
                <scope line="246">
                    <scope line="248">
                        <declaration name="desktop" type="File" line="249"/>
                        <scope line="250"/>
                        <scope line="252"/>
                    </scope>
                </scope>
                <scope line="257">
                    <declaration name="desktop" type="Win32ShellFolder2" line="258"/>
                    <scope line="260">
                        <declaration name="folders" type="ArrayList&lt;File&gt;" line="261"/>
                        <declaration name="drives" type="Win32ShellFolder2" line="262"/>
                        <declaration name="recentFolder" type="Win32ShellFolder2" line="264"/>
                        <scope line="265"/>
                        <declaration name="secondLevelFolders" type="File[]" line="271"/>
                        <scope line="273">
                            <declaration name="folder" type="Win32ShellFolder2" line="274"/>
                            <scope line="275">
                                <scope line="278">
                                    <declaration name="thirdLevelFolders" type="File[]" line="279"/>
                                    <scope line="280">
                                        <declaration name="thirdLevelFoldersList" type="List&lt;File&gt;" line="281"/>
                                    </scope>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="290"/>
                </scope>
                <scope line="293">
                    <declaration name="toolkit" type="Toolkit" line="294"/>
                    <declaration name="folders" type="ArrayList&lt;File&gt;" line="295"/>
                    <declaration name="i" type="int" line="296"/>
                    <declaration name="value" type="Object" line="297"/>
                    <scope line="298">
                        <scope line="300">
                            <scope line="301"/>
                            <scope line="304"/>
                        </scope>
                        <scope line="308"/>
                        <scope line="310"/>
                    </scope>
                    <scope line="316">
                        <scope line="320">
                            <scope line="321"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="327">
                    <declaration name="name" type="String" line="328"/>
                    <declaration name="iconIndex" type="int" line="330"/>
                    <scope line="332"/>
                    <scope line="334"/>
                    <scope line="336"/>
                    <scope line="338"/>
                    <scope line="340"/>
                </scope>
                <scope line="345">
                    <declaration name="iconType" type="Win32ShellFolder2.SystemIcon" line="346"/>
                    <scope line="347"/>
                    <scope line="349"/>
                    <scope line="351"/>
                    <scope line="353"/>
                    <scope line="355"/>
                </scope>
                <scope line="359">
                    <declaration name="name" type="String" line="360"/>
                    <scope line="361">
                        <declaration name="i" type="int" line="362"/>
                        <scope line="363"/>
                    </scope>
                    <scope line="366"/>
                </scope>
            </method>
            <javadoc line="372">
                Does &lt;code&gt;dir&lt;/code&gt; represent a &quot;computer&quot; such as a node on the network, or
                  &quot;My Computer&quot; on the desktop.                
            </javadoc>
            <method name="isComputerNode" type="boolean" line="376">
                <params>
                    <param name="dir" type="File"/>
                </params>
                <comment line="387">
                    Network path                    
                </comment>
                <scope line="377"/>
                <scope line="379">
                    <anonymous_class line="380">
                        <method name="run" type="String" line="381"/>
                    </anonymous_class>
                    <declaration name="path" type="String" line="380"/>
                </scope>
            </method>
            <method name="isFileSystemRoot" type="boolean" line="390">
                <params>
                    <param name="dir" type="File"/>
                </params>
                <comment line="392">
                    Note: Removable drives don&apos;t &quot;exist&quot; but are listed in &quot;My Computer&quot;                    
                </comment>
                <comment line="401">
                    else fall through ...                    
                </comment>
                <scope line="392">
                    <declaration name="drives" type="Win32ShellFolder2" line="393"/>
                    <scope line="394">
                        <declaration name="sf" type="Win32ShellFolder2" line="395"/>
                        <scope line="396">
                            <scope line="397"/>
                        </scope>
                        <scope line="401"/>
                    </scope>
                    <declaration name="path" type="String" line="405"/>
                    <scope line="407"/>
                    <declaration name="files" type="File[]" line="411"/>
                </scope>
            </method>
            <declaration name="topFolderList" type="List" line="418"/>
            <method name="compareShellFolders" type="int" line="419">
                <params>
                    <param name="sf1" type="Win32ShellFolder2"/>
                    <param name="sf2" type="Win32ShellFolder2"/>
                </params>
                <comment line="444">
                    Non-file shellfolders sort before files                    
                </comment>
                <declaration name="special1" type="boolean" line="420"/>
                <declaration name="special2" type="boolean" line="421"/>
                <scope line="423">
                    <scope line="424">
                        <declaration name="tmpTopFolderList" type="ArrayList" line="425"/>
                    </scope>
                    <declaration name="i1" type="int" line="432"/>
                    <declaration name="i2" type="int" line="433"/>
                    <scope line="434"/>
                    <scope line="436"/>
                    <scope line="438"/>
                </scope>
                <scope line="444"/>
                <scope line="446"/>
            </method>
            <method name="compareNames" type="int" line="453">
                <params>
                    <param name="name1" type="String"/>
                    <param name="name2" type="String"/>
                </params>
                <comment line="455">
                    First ignore case when comparing                    
                </comment>
                <comment line="460">
                    May differ in case (e.g. &quot;mail&quot; vs. &quot;Mail&quot;)
                     We need this test for consistent sorting                    
                </comment>
                <declaration name="diff" type="int" line="455"/>
                <scope line="456"/>
                <scope line="458"/>
            </method>
            <method name="createInvoker" type="Invoker" line="466"/>
            <class name="ComInvoker" line="470">
                <extends class="ThreadPoolExecutor"/>
                <implements interface="ThreadFactory"/>
                <implements interface="ShellFolder.Invoker"/>
                <declaration name="comThread" type="Thread" line="471"/>
                <method name="ComInvoker" type="constructor" line="473">
                    <anonymous_class line="477">
                        <method name="run" type="void" line="478">
                            <anonymous_class line="479">
                                <method name="run" type="Void" line="480"/>
                            </anonymous_class>
                        </method>
                    </anonymous_class>
                    <declaration name="shutdownHook" type="Runnable" line="477"/>
                    <anonymous_class line="487">
                        <method name="run" type="Void" line="488"/>
                    </anonymous_class>
                </method>
                <method name="newThread" type="Thread" line="497">
                    <params>
                        <param name="task" type="Runnable"/>
                    </params>
                    <comment line="513">
                        The thread must be a member of a thread group
                         which will not get GCed before VM exit.
                         Make its parent the top-level thread group.                        
                    </comment>
                    <anonymous_class line="498">
                        <method name="run" type="void" line="499">
                            <scope line="500"/>
                            <scope line="503"/>
                        </method>
                    </anonymous_class>
                    <declaration name="comRun" type="Runnable" line="498"/>
                    <anonymous_class line="510">
                        <method name="run" type="Thread" line="511">
                            <comment line="513">
                                The thread must be a member of a thread group
                                 which will not get GCed before VM exit.
                                 Make its parent the top-level thread group.                                
                            </comment>
                            <declaration name="tg" type="ThreadGroup" line="516"/>
                            <declaration name="thread" type="Thread" line="520"/>
                        </method>
                    </anonymous_class>
                </method>
                <method name="invoke" type="T" line="529">
                    <params>
                        <param name="task" type="Callable<T>"/>
                    </params>
                    <comment line="532">
                        if it&apos;s already called from the COM
                         thread, we don&apos;t need to delegate the task                        
                    </comment>
                    <scope line="530"/>
                    <scope line="534">
                        <declaration name="future" type="Future&lt;T&gt;" line="535"/>
                        <scope line="537"/>
                        <scope line="539"/>
                        <scope line="543"/>
                        <scope line="545">
                            <anonymous_class line="546">
                                <method name="run" type="Void" line="547"/>
                            </anonymous_class>
                        </scope>
                        <scope line="555">
                            <declaration name="cause" type="Throwable" line="556"/>
                            <scope line="558"/>
                            <scope line="562"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <method name="initializeCom" type="void" line="572"/>
            <method name="uninitializeCom" type="void" line="574"/>
        </class>
    </source>