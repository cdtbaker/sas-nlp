<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.net">
        <import package="java.io.IOException"/>
        <import package="java.io.FileDescriptor"/>
        <import package="sun.misc.SharedSecrets"/>
        <import package="sun.misc.JavaIOFileDescriptorAccess"/>
        <class name="DualStackPlainDatagramSocketImpl" line="6">
            <extends class="AbstractPlainDatagramSocketImpl"/>
            <javadoc line="6">
                This class defines the plain DatagramSocketImpl that is used on
                  Windows platforms greater than or equal to Windows Vista. These
                  platforms have a dual layer TCP/IP stack and can handle both IPv4
                  and IPV6 through a single file descriptor.
                  &lt;p&gt;
                  Note: Multicasting on a dual layer TCP/IP stack is always done with
                  TwoStacksPlainDatagramSocketImpl. This is to overcome the lack
                  of behavior defined for multicasting over a dual layer socket by the RFC.                
                <author>
                    Chris Hegarty                    
                </author>
            </javadoc>
            <declaration name="fdAccess" type="JavaIOFileDescriptorAccess" line="18"/>
            <method name="datagramSocketCreate" type="void" line="19">
                <declaration name="newfd" type="int" line="21"/>
            </method>
            <method name="bind0" type="void" line="24">
                <params>
                    <param name="lport" type="int"/>
                    <param name="laddr" type="InetAddress"/>
                </params>
                <declaration name="nativefd" type="int" line="25"/>
                <scope line="28"/>
                <scope line="31"/>
            </method>
            <method name="peek" type="int" line="35">
                <params>
                    <param name="address" type="InetAddress"/>
                </params>
                <declaration name="nativefd" type="int" line="36"/>
                <declaration name="peekPacket" type="DatagramPacket" line="38"/>
                <declaration name="peekPort" type="int" line="39"/>
            </method>
            <method name="peekData" type="int" line="43">
                <params>
                    <param name="p" type="DatagramPacket"/>
                </params>
                <declaration name="nativefd" type="int" line="44"/>
            </method>
            <method name="receive0" type="void" line="49">
                <params>
                    <param name="p" type="DatagramPacket"/>
                </params>
                <declaration name="nativefd" type="int" line="50"/>
            </method>
            <method name="send" type="void" line="55">
                <params>
                    <param name="p" type="DatagramPacket"/>
                </params>
                <declaration name="nativefd" type="int" line="56"/>
            </method>
            <method name="connect0" type="void" line="61">
                <params>
                    <param name="address" type="InetAddress"/>
                    <param name="port" type="int"/>
                </params>
                <declaration name="nativefd" type="int" line="62"/>
            </method>
            <method name="disconnect0" type="void" line="66">
                <params>
                    <param name="family" type="int"/>
                </params>
            </method>
            <method name="datagramSocketClose" type="void" line="70"/>
            <method name="socketSetOption" type="void" line="75">
                <params>
                    <param name="opt" type="int"/>
                    <param name="val" type="Object"/>
                </params>
                <declaration name="nativefd" type="int" line="76"/>
                <declaration name="optionValue" type="int" line="77"/>
            </method>
            <method name="socketGetOption" type="Object" line="93">
                <params>
                    <param name="opt" type="int"/>
                </params>
                <declaration name="nativefd" type="int" line="94"/>
                <scope line="95"/>
                <declaration name="value" type="int" line="98"/>
                <declaration name="returnValue" type="Object" line="99"/>
            </method>
            <method name="join" type="void" line="115">
                <params>
                    <param name="inetaddr" type="InetAddress"/>
                    <param name="netIf" type="NetworkInterface"/>
                </params>
            </method>
            <method name="leave" type="void" line="118">
                <params>
                    <param name="inetaddr" type="InetAddress"/>
                    <param name="netIf" type="NetworkInterface"/>
                </params>
            </method>
            <method name="setTimeToLive" type="void" line="121">
                <params>
                    <param name="ttl" type="int"/>
                </params>
            </method>
            <method name="getTimeToLive" type="int" line="124"/>
            <method name="setTTL" type="void" line="127">
                <params>
                    <param name="ttl" type="byte"/>
                </params>
            </method>
            <method name="getTTL" type="byte" line="130"/>
            <method name="checkAndReturnNativeFD" type="int" line="133"/>
            <method name="initIDs" type="void" line="137"/>
            <method name="socketCreate" type="int" line="138"/>
            <method name="socketBind" type="void" line="139"/>
            <method name="socketConnect" type="void" line="140"/>
            <method name="socketDisconnect" type="void" line="141"/>
            <method name="socketClose" type="void" line="142"/>
            <method name="socketLocalPort" type="int" line="143"/>
            <method name="socketLocalAddress" type="Object" line="144"/>
            <method name="socketReceiveOrPeekData" type="int" line="145"/>
            <method name="socketSend" type="void" line="146"/>
            <method name="socketSetIntOption" type="void" line="147"/>
            <method name="socketGetIntOption" type="int" line="148"/>
        </class>
    </source>