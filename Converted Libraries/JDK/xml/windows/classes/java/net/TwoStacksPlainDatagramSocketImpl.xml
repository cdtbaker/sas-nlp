<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.net">
        <import package="java.io.IOException"/>
        <import package="java.io.FileDescriptor"/>
        <import package="sun.net.ResourceManager"/>
        <class name="TwoStacksPlainDatagramSocketImpl" line="31">
            <extends class="AbstractPlainDatagramSocketImpl"/>
            <comment line="46">
                                
            </comment>
            <comment line="49">
                Needed for ipv6 on windows because we need to know
                 if the socket was bound to ::0 or 0.0.0.0, when a caller
                 asks for it. In this case, both sockets are used, but we
                 don&apos;t know whether the caller requested ::0 or 0.0.0.0
                 and need to remember it here.                
            </comment>
            <comment line="58">
                                
            </comment>
            <comment line="60">
                saved between successive calls to receive, if data is detected
                 on both sockets at same time. To ensure that one socket is not
                 starved, they rotate using this field                
            </comment>
            <comment line="119">
                                
            </comment>
            <javadoc line="31">
                This class defines the plain DatagramSocketImpl that is used for all
                  Windows versions lower than Vista. It adds support for IPv6 on
                  these platforms where available.
                  For backward compatibility windows platforms that do not have IPv6
                  support also use this implementation, and fd1 gets set to null
                  during socket creation.                
                <author>
                    Chris Hegarty                    
                </author>
            </javadoc>
            <declaration name="fd1" type="FileDescriptor" line="46"/>
            <declaration name="anyLocalBoundAddr" type="InetAddress" line="55"/>
            <declaration name="fduse" type="int" line="57"/>
            <declaration name="lastfd" type="int" line="63"/>
            <scope line="65"/>
            <method name="create" type="void" line="69"/>
            <method name="bind" type="void" line="75">
                <params>
                    <param name="lport" type="int"/>
                    <param name="laddr" type="InetAddress"/>
                </params>
                <scope line="77"/>
            </method>
            <method name="receive" type="void" line="83">
                <params>
                    <param name="p" type="DatagramPacket"/>
                </params>
                <scope line="84"/>
                <scope line="86"/>
            </method>
            <method name="getOption" type="Object" line="91">
                <params>
                    <param name="optID" type="int"/>
                </params>
                <scope line="92"/>
                <scope line="96">
                    <scope line="97"/>
                </scope>
            </method>
            <method name="isClosed" type="boolean" line="105"/>
            <method name="close" type="void" line="109">
                <scope line="110"/>
            </method>
            <method name="bind0" type="void" line="120"/>
            <method name="send" type="void" line="123"/>
            <method name="peek" type="int" line="125"/>
            <method name="peekData" type="int" line="127"/>
            <method name="receive0" type="void" line="129"/>
            <method name="setTimeToLive" type="void" line="132"/>
            <method name="getTimeToLive" type="int" line="134"/>
            <method name="setTTL" type="void" line="136"/>
            <method name="getTTL" type="byte" line="138"/>
            <method name="join" type="void" line="140"/>
            <method name="leave" type="void" line="143"/>
            <method name="datagramSocketCreate" type="void" line="146"/>
            <method name="datagramSocketClose" type="void" line="148"/>
            <method name="socketSetOption" type="void" line="150"/>
            <method name="socketGetOption" type="Object" line="153"/>
            <method name="connect0" type="void" line="155"/>
            <method name="disconnect0" type="void" line="157"/>
            <method name="init" type="void" line="159"/>
            <javadoc line="159">
                Perform class load-time initializations.                
            </javadoc>
        </class>
    </source>