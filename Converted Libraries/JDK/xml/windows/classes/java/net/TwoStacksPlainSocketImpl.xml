<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.net">
        <import package="java.io.IOException"/>
        <import package="java.io.FileDescriptor"/>
        <class name="TwoStacksPlainSocketImpl" line="42">
            <extends class="AbstractPlainSocketImpl"/>
            <comment line="45">
                second fd, used for ipv6 on windows only.
                 fd1 is used for listeners and for client sockets at initialization
                 until the socket is connected. Up to this point fd always refers
                 to the ipv4 socket and fd1 to the ipv6 socket. After the socket
                 becomes connected, fd always refers to the connected socket
                 (either v4 or v6) and fd1 is closed.
                
                 For ServerSockets, fd always refers to the v4 listener and
                 fd1 the v6 listener.                
            </comment>
            <comment line="57">
                Needed for ipv6 on windows because we need to know
                 if the socket is bound to ::0 or 0.0.0.0, when a caller
                 asks for it. Otherwise we don&apos;t know which socket to ask.                
            </comment>
            <comment line="64">
                to prevent starvation when listening on two sockets, this is
                 is used to hold the id of the last socket we accepted on.                
            </comment>
            <comment line="159">
                Return true if already closed or close is pending                
            </comment>
            <comment line="176">
                                
            </comment>
            <declaration name="fd1" type="FileDescriptor" line="54"/>
            <declaration name="anyLocalBoundAddr" type="InetAddress" line="61"/>
            <declaration name="lastfd" type="int" line="66"/>
            <scope line="68"/>
            <method name="TwoStacksPlainSocketImpl" type="constructor" line="72"/>
            <method name="TwoStacksPlainSocketImpl" type="constructor" line="74">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                </params>
            </method>
            <javadoc line="78">
                Creates a socket with a boolean that specifies whether this
                  is a stream socket (true) or an unconnected UDP socket (false).                
            </javadoc>
            <method name="create" type="void" line="82">
                <params>
                    <param name="stream" type="boolean"/>
                </params>
            </method>
            <javadoc line="87">
                Binds the socket to the specified address of the specified local port.                
                <param>
                    address the address                    
                </param>
                <param>
                    port the port                    
                </param>
            </javadoc>
            <method name="bind" type="void" line="94">
                <params>
                    <param name="address" type="InetAddress"/>
                    <param name="lport" type="int"/>
                </params>
                <scope line="96"/>
            </method>
            <method name="getOption" type="Object" line="101">
                <params>
                    <param name="opt" type="int"/>
                </params>
                <comment line="108">
                                        
                </comment>
                <scope line="102"/>
                <scope line="105">
                    <scope line="106"/>
                    <declaration name="in" type="InetAddressContainer" line="110"/>
                </scope>
            </method>
            <javadoc line="117">
                Closes the socket.                
            </javadoc>
            <method name="close" type="void" line="120">
                <comment line="134">
                    If a thread has acquired the fd and a close
                     isn&apos;t pending then use a deferred close.
                     Also decrement fdUseCount to signal the last
                     thread that releases the fd to close it.                    
                </comment>
                <scope line="121">
                    <scope line="122">
                        <scope line="123">
                            <scope line="124"/>
                        </scope>
                        <scope line="132">
                            <scope line="139"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="reset" type="void" line="149">
                <scope line="150"/>
            </method>
            <method name="isClosedOrPending" type="boolean" line="161">
                <comment line="163">
                    Lock on fdLock to ensure that we wait if a
                     close is in progress.                    
                </comment>
                <scope line="166">
                    <scope line="167"/>
                    <scope line="169"/>
                </scope>
            </method>
            <method name="initProto" type="void" line="177"/>
            <method name="socketCreate" type="void" line="179"/>
            <method name="socketConnect" type="void" line="181"/>
            <method name="socketBind" type="void" line="184"/>
            <method name="socketListen" type="void" line="187"/>
            <method name="socketAccept" type="void" line="189"/>
            <method name="socketAvailable" type="int" line="191"/>
            <method name="socketClose0" type="void" line="193"/>
            <method name="socketShutdown" type="void" line="195"/>
            <method name="socketSetOption" type="void" line="197"/>
            <method name="socketGetOption" type="int" line="200"/>
            <method name="socketSendUrgentData" type="void" line="202"/>
        </class>
    </source>