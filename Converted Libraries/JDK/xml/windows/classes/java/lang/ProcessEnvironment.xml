<?xml version="1.0" encoding="UTF-8"?>
    <source package="java.lang">
        <import package="java.io"/>
        <import package="java.util"/>
        <class name="ProcessEnvironment" line="4">
            <extends class="HashMap">
                <type_params>
                    <type_param name="String"/>
                    <type_param name="String"/>
                </type_params>
            </extends>
            <method name="validateName" type="String" line="5">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="validateValue" type="String" line="9">
                <params>
                    <param name="value" type="String"/>
                </params>
            </method>
            <method name="nonNullString" type="String" line="13">
                <params>
                    <param name="o" type="Object"/>
                </params>
            </method>
            <method name="put" type="String" line="17">
                <params>
                    <param name="key" type="String"/>
                    <param name="value" type="String"/>
                </params>
            </method>
            <method name="get" type="String" line="20">
                <params>
                    <param name="key" type="Object"/>
                </params>
            </method>
            <method name="containsKey" type="boolean" line="23">
                <params>
                    <param name="key" type="Object"/>
                </params>
            </method>
            <method name="containsValue" type="boolean" line="26">
                <params>
                    <param name="value" type="Object"/>
                </params>
            </method>
            <method name="remove" type="String" line="29">
                <params>
                    <param name="key" type="Object"/>
                </params>
            </method>
            <class name="CheckedEntry" line="32">
                <implements interface="Map.Entry">
                    <type_params>
                        <type_param name="String"/>
                        <type_param name="String"/>
                    </type_params>
                </implements>
                <declaration name="e" type="Map.Entry&lt;String,String&gt;" line="33"/>
                <method name="CheckedEntry" type="constructor" line="34">
                    <params>
                        <param name="e" type="Map.Entry<String,String>"/>
                    </params>
                </method>
                <method name="getKey" type="String" line="37"/>
                <method name="getValue" type="String" line="40"/>
                <method name="setValue" type="String" line="43">
                    <params>
                        <param name="value" type="String"/>
                    </params>
                </method>
                <method name="toString" type="String" line="46"/>
                <method name="equals" type="boolean" line="49">
                    <params>
                        <param name="o" type="Object"/>
                    </params>
                </method>
                <method name="hashCode" type="int" line="52"/>
            </class>
            <class name="CheckedEntrySet" line="56">
                <extends class="AbstractSet">
                    <type_params>
                        <type_param name="Map.Entry<String,String>"/>
                    </type_params>
                </extends>
                <declaration name="s" type="Set&lt;Map.Entry&lt;String,String&gt;&gt;" line="57"/>
                <method name="CheckedEntrySet" type="constructor" line="58">
                    <params>
                        <param name="s" type="Set<Map.Entry<String,String>>"/>
                    </params>
                </method>
                <method name="size" type="int" line="61"/>
                <method name="isEmpty" type="boolean" line="64"/>
                <method name="clear" type="void" line="67"/>
                <method name="iterator" type="Iterator<Map.Entry<String,String>>" line="70">
                    <anonymous_class line="71">
                        <declaration name="i" type="Iterator&lt;Map.Entry&lt;String,String&gt;&gt;" line="72"/>
                        <method name="hasNext" type="boolean" line="73"/>
                        <method name="next" type="Map.Entry<String,String>" line="76"/>
                        <method name="remove" type="void" line="79"/>
                    </anonymous_class>
                </method>
                <method name="checkedEntry" type="Map.Entry<String,String>" line="85">
                    <params>
                        <param name="o" type="Object"/>
                    </params>
                    <declaration name="e" type="Map.Entry&lt;String,String&gt;" line="86"/>
                </method>
                <method name="contains" type="boolean" line="91">
                    <params>
                        <param name="o" type="Object"/>
                    </params>
                </method>
                <method name="remove" type="boolean" line="94">
                    <params>
                        <param name="o" type="Object"/>
                    </params>
                </method>
            </class>
            <class name="CheckedValues" line="98">
                <extends class="AbstractCollection">
                    <type_params>
                        <type_param name="String"/>
                    </type_params>
                </extends>
                <declaration name="c" type="Collection&lt;String&gt;" line="99"/>
                <method name="CheckedValues" type="constructor" line="100">
                    <params>
                        <param name="c" type="Collection<String>"/>
                    </params>
                </method>
                <method name="size" type="int" line="103"/>
                <method name="isEmpty" type="boolean" line="106"/>
                <method name="clear" type="void" line="109"/>
                <method name="iterator" type="Iterator<String>" line="112"/>
                <method name="contains" type="boolean" line="115">
                    <params>
                        <param name="o" type="Object"/>
                    </params>
                </method>
                <method name="remove" type="boolean" line="118">
                    <params>
                        <param name="o" type="Object"/>
                    </params>
                </method>
            </class>
            <class name="CheckedKeySet" line="122">
                <extends class="AbstractSet">
                    <type_params>
                        <type_param name="String"/>
                    </type_params>
                </extends>
                <declaration name="s" type="Set&lt;String&gt;" line="123"/>
                <method name="CheckedKeySet" type="constructor" line="124">
                    <params>
                        <param name="s" type="Set<String>"/>
                    </params>
                </method>
                <method name="size" type="int" line="127"/>
                <method name="isEmpty" type="boolean" line="130"/>
                <method name="clear" type="void" line="133"/>
                <method name="iterator" type="Iterator<String>" line="136"/>
                <method name="contains" type="boolean" line="139">
                    <params>
                        <param name="o" type="Object"/>
                    </params>
                </method>
                <method name="remove" type="boolean" line="142">
                    <params>
                        <param name="o" type="Object"/>
                    </params>
                </method>
            </class>
            <method name="keySet" type="Set<String>" line="146"/>
            <method name="values" type="Collection<String>" line="149"/>
            <method name="entrySet" type="Set<Map.Entry<String,String>>" line="152"/>
            <class name="NameComparator" line="155">
                <implements interface="Comparator">
                    <type_params>
                        <type_param name="String"/>
                    </type_params>
                </implements>
                <method name="compare" type="int" line="156">
                    <params>
                        <param name="s1" type="String"/>
                        <param name="s2" type="String"/>
                    </params>
                    <declaration name="n1" type="int" line="157"/>
                    <declaration name="n2" type="int" line="158"/>
                    <declaration name="min" type="int" line="159"/>
                    <scope line="160">
                        <declaration name="c1" type="char" line="161"/>
                        <declaration name="c2" type="char" line="162"/>
                        <scope line="163"/>
                    </scope>
                </method>
            </class>
            <class name="EntryComparator" line="172">
                <implements interface="Comparator">
                    <type_params>
                        <type_param name="Map.Entry<String,String>"/>
                    </type_params>
                </implements>
                <method name="compare" type="int" line="173">
                    <params>
                        <param name="e1" type="Map.Entry<String,String>"/>
                        <param name="e2" type="Map.Entry<String,String>"/>
                    </params>
                </method>
            </class>
            <declaration name="MIN_NAME_LENGTH" type="int" line="177"/>
            <declaration name="nameComparator" type="NameComparator" line="178"/>
            <declaration name="entryComparator" type="EntryComparator" line="179"/>
            <declaration name="theEnvironment" type="ProcessEnvironment" line="180"/>
            <declaration name="theUnmodifiableEnvironment" type="Map&lt;String,String&gt;" line="181"/>
            <declaration name="theCaseInsensitiveEnvironment" type="Map&lt;String,String&gt;" line="182"/>
            <scope line="183">
                <declaration name="envblock" type="String" line="188"/>
                <declaration name="beg" type="int" line="189"/>
                <scope line="190"/>
            </scope>
            <method name="ProcessEnvironment" type="constructor" line="196"/>
            <method name="ProcessEnvironment" type="constructor" line="199">
                <params>
                    <param name="capacity" type="int"/>
                </params>
            </method>
            <method name="getenv" type="String" line="202">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="getenv" type="Map<String,String>" line="205"/>
            <method name="environment" type="Map<String,String>" line="208"/>
            <method name="emptyEnvironment" type="Map<String,String>" line="211">
                <params>
                    <param name="capacity" type="int"/>
                </params>
            </method>
            <method name="environmentBlock" type="String" line="214"/>
            <method name="toEnvironmentBlock" type="String" line="215">
                <declaration name="list" type="List&lt;Map.Entry&lt;String,String&gt;&gt;" line="216"/>
                <declaration name="sb" type="StringBuilder" line="218"/>
                <declaration name="cmp" type="int" line="219"/>
                <declaration name="SYSTEMROOT" type="String" line="220"/>
                <scope line="221">
                    <declaration name="key" type="String" line="222"/>
                    <declaration name="value" type="String" line="223"/>
                    <scope line="224"/>
                </scope>
                <scope line="229"/>
                <scope line="232"/>
            </method>
            <method name="addToEnvIfSet" type="void" line="238">
                <params>
                    <param name="sb" type="StringBuilder"/>
                    <param name="name" type="String"/>
                </params>
                <declaration name="s" type="String" line="239"/>
            </method>
            <method name="addToEnv" type="void" line="242">
                <params>
                    <param name="sb" type="StringBuilder"/>
                    <param name="name" type="String"/>
                    <param name="val" type="String"/>
                </params>
            </method>
            <method name="toEnvironmentBlock" type="String" line="245">
                <params>
                    <param name="map" type="Map<String,String>"/>
                </params>
            </method>
        </class>
    </source>