<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.oracle.net">
        <import package="java.net.Socket"/>
        <import package="java.net.ServerSocket"/>
        <import package="java.net.SocketImpl"/>
        <import package="java.net.SocketImplFactory"/>
        <import package="java.net.SocketException"/>
        <import package="java.nio.channels.SocketChannel"/>
        <import package="java.nio.channels.ServerSocketChannel"/>
        <import package="java.io.IOException"/>
        <import package="java.io.FileDescriptor"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.lang.reflect.Constructor"/>
        <import package="java.lang.reflect.AccessibleObject"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="sun.net.sdp.SdpSupport"/>
        <class name="Sdp" line="17">
            <javadoc line="17">
                This class consists exclusively of static methods that Sockets or Channels to
                  sockets that support the InfiniBand Sockets Direct Protocol (SDP).                
            </javadoc>
            <method name="Sdp" type="constructor" line="22"/>
            <declaration name="serverSocketCtor" type="Constructor&lt;ServerSocket&gt;" line="24"/>
            <javadoc line="24">
                The package-privage ServerSocket(SocketImpl) constructor                
            </javadoc>
            <scope line="28">
                <scope line="29"/>
                <scope line="33"/>
            </scope>
            <declaration name="socketImplCtor" type="Constructor&lt;SocketImpl&gt;" line="37"/>
            <javadoc line="37">
                The package-private SdpSocketImpl() constructor                
            </javadoc>
            <scope line="41">
                <scope line="42">
                    <declaration name="cl" type="Class&lt;?&gt;" line="43"/>
                </scope>
                <scope line="47"/>
                <scope line="50"/>
            </scope>
            <method name="setAccessible" type="void" line="54">
                <params>
                    <param name="o" type="AccessibleObject"/>
                </params>
                <anonymous_class line="55">
                    <method name="run" type="Void" line="56"/>
                </anonymous_class>
            </method>
            <class name="SdpSocket" line="63">
                <extends class="Socket"/>
                <javadoc line="63">
                    SDP enabled Socket.                    
                </javadoc>
                <method name="SdpSocket" type="constructor" line="67">
                    <params>
                        <param name="impl" type="SocketImpl"/>
                    </params>
                </method>
            </class>
            <javadoc line="71">
                Creates a SDP enabled SocketImpl                
            </javadoc>
            <method name="createSocketImpl" type="SocketImpl" line="74">
                <scope line="75"/>
                <scope line="78"/>
                <scope line="81"/>
                <scope line="84"/>
            </method>
            <javadoc line="88">
                Creates an unconnected and unbound SDP socket. The {@code Socket} is
                  associated with a {@link java.net.SocketImpl} of the system-default type.                
                <return>
                    a new Socket                    
                </return>
                <throws>
                    UnsupportedOperationExceptionIf SDP is not supported                    
                </throws>
                <throws>
                    IOExceptionIf an I/O error occurs                    
                </throws>
            </javadoc>
            <method name="openSocket" type="Socket" line="95">
                <declaration name="impl" type="SocketImpl" line="96"/>
            </method>
            <javadoc line="99">
                Creates an unbound SDP server socket. The {@code ServerSocket} is
                  associated with a {@link java.net.SocketImpl} of the system-default type.                
                <return>
                    a new ServerSocket                    
                </return>
                <throws>
                    UnsupportedOperationExceptionIf SDP is not supported                    
                </throws>
                <throws>
                    IOExceptionIf an I/O error occurs                    
                </throws>
            </javadoc>
            <method name="openServerSocket" type="ServerSocket" line="106">
                <declaration name="impl" type="SocketImpl" line="107"/>
                <scope line="108"/>
                <scope line="111"/>
                <scope line="114"/>
                <scope line="117">
                    <declaration name="cause" type="Throwable" line="118"/>
                </scope>
            </method>
            <javadoc line="124">
                Opens a socket channel to a SDP socket.
                  &lt;p&gt; The channel will be associated with the system-wide default{@link java.nio.channels.spi.SelectorProvider SelectorProvider}.                
                <return>
                    a new SocketChannel                    
                </return>
                <throws>
                    UnsupportedOperationExceptionIf SDP is not supported or not supported by the default selector
                      provider                    
                </throws>
                <throws>
                    IOExceptionIf an I/O error occurs.                    
                </throws>
            </javadoc>
            <method name="openSocketChannel" type="SocketChannel" line="132">
                <declaration name="fd" type="FileDescriptor" line="133"/>
            </method>
            <javadoc line="136">
                Opens a socket channel to a SDP socket.
                  &lt;p&gt; The channel will be associated with the system-wide default{@link java.nio.channels.spi.SelectorProvider SelectorProvider}.                
                <return>
                    a new ServerSocketChannel                    
                </return>
                <throws>
                    UnsupportedOperationExceptionIf SDP is not supported or not supported by the default selector
                      provider                    
                </throws>
                <throws>
                    IOExceptionIf an I/O error occurs                    
                </throws>
            </javadoc>
            <method name="openServerSocketChannel" type="ServerSocketChannel" line="144">
                <declaration name="fd" type="FileDescriptor" line="145"/>
            </method>
        </class>
    </source>