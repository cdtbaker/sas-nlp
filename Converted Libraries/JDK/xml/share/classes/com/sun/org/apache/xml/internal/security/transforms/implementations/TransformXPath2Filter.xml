<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.transforms.implementations">
        <import package="java.io.IOException"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="java.util.Set"/>
        <import package="javax.xml.parsers.ParserConfigurationException"/>
        <import package="javax.xml.transform.TransformerException"/>
        <import package="com.sun.org.apache.xml.internal.security.c14n.CanonicalizationException"/>
        <import package="com.sun.org.apache.xml.internal.security.c14n.InvalidCanonicalizerException"/>
        <import package="com.sun.org.apache.xml.internal.security.exceptions.XMLSecurityException"/>
        <import package="com.sun.org.apache.xml.internal.security.signature.NodeFilter"/>
        <import package="com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.Transform"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.TransformSpi"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.TransformationException"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.Transforms"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.params.XPath2FilterContainer"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.CachedXPathAPIHolder"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.CachedXPathFuncHereAPI"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.XMLUtils"/>
        <import package="org.w3c.dom.DOMException"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.w3c.dom.NodeList"/>
        <import package="org.xml.sax.SAXException"/>
        <class name="TransformXPath2Filter" line="55">
            <extends class="TransformSpi"/>
            <comment line="65">
                                
            </comment>
            <comment line="66">
                static java.util.logging.Logger log =
                        java.util.logging.Logger.getLogger(
                                            TransformXPath2Filter.class.getName());                
            </comment>
            <comment line="73">
                J-
                 contains the type of the filter                
            </comment>
            <comment line="76">
                contains the node set                
            </comment>
            <javadoc line="55">
                Implements the &lt;I&gt;XML Signature XPath Filter v2.0&lt;/I&gt;                
                <author>
                    $Author: mullan $                    
                </author>
                <see>
                    &lt;A HREF=&quot;http://www.w3.org/TR/xmldsig-filter2/&quot;&gt;XPath Filter v2.0 (TR)&lt;/A&gt;                    
                </see>
                <see>
                    &lt;a HREF=&quot;http://www.w3.org/Signature/Drafts/xmldsig-xfilter2/&quot;&gt;XPath Filter v2.0 (editors copy)&lt;/a&gt;                    
                </see>
            </javadoc>
            <declaration name="implementedTransformURI" type="String" line="69"/>
            <javadoc line="69">
                Field implementedTransformURI                
            </javadoc>
            <javadoc line="77">
                Method engineGetURI                
                <inheritDoc>
                                        
                </inheritDoc>
            </javadoc>
            <method name="engineGetURI" type="String" line="82"/>
            <javadoc line="88">
                Method enginePerformTransform                
                <inheritDoc>
                                        
                </inheritDoc>
                <param>
                    input                    
                </param>
                <throws>
                    TransformationException                    
                </throws>
            </javadoc>
            <method name="enginePerformTransform" type="XMLSignatureInput" line="96">
                <params>
                    <param name="input" type="XMLSignatureInput"/>
                    <param name="_transformObject" type="Transform"/>
                </params>
                <scope line="98">
                    <declaration name="unionNodes" type="List" line="99"/>
                    <declaration name="substractNodes" type="List" line="100"/>
                    <declaration name="intersectNodes" type="List" line="101"/>
                    <declaration name="xPathFuncHereAPI" type="CachedXPathFuncHereAPI" line="103"/>
                    <declaration name="xpathElements" type="Element[]" line="107"/>
                    <declaration name="noOfSteps" type="int" line="111"/>
                    <scope line="114">
                        <declaration name="exArgs" type="Object" line="115"/>
                    </scope>
                    <declaration name="inputDoc" type="Document" line="120"/>
                    <scope line="121"/>
                    <scope line="123"/>
                    <scope line="127">
                        <declaration name="xpathElement" type="Element" line="128"/>
                        <declaration name="xpathContainer" type="XPath2FilterContainer" line="132"/>
                        <declaration name="subtreeRoots" type="NodeList" line="137"/>
                        <scope line="141"/>
                        <scope line="143"/>
                        <scope line="145"/>
                    </scope>
                </scope>
                <scope line="155"/>
                <scope line="157"/>
                <scope line="159"/>
                <scope line="161"/>
                <scope line="163"/>
                <scope line="165"/>
                <scope line="167"/>
                <scope line="169"/>
            </method>
            <method name="convertNodeListToSet" type="Set" line="173">
                <params>
                    <param name="l" type="List"/>
                </params>
                <declaration name="result" type="Set" line="174"/>
                <scope line="175">
                    <declaration name="rootNodes" type="NodeList" line="176"/>
                    <declaration name="length" type="int" line="177"/>
                    <scope line="179">
                        <declaration name="rootNode" type="Node" line="180"/>
                    </scope>
                </scope>
            </method>
        </class>
        <class name="XPath2NodeFilter" line="190">
            <comment line="65">
                                
            </comment>
            <comment line="66">
                static java.util.logging.Logger log =
                        java.util.logging.Logger.getLogger(
                                            TransformXPath2Filter.class.getName());                
            </comment>
            <comment line="73">
                J-
                 contains the type of the filter                
            </comment>
            <comment line="76">
                contains the node set                
            </comment>
            <implements interface="NodeFilter"/>
            <declaration name="hasUnionNodes" type="boolean" line="191"/>
            <declaration name="hasSubstractNodes" type="boolean" line="192"/>
            <declaration name="hasIntersectNodes" type="boolean" line="193"/>
            <method name="XPath2NodeFilter" type="constructor" line="195">
                <params>
                    <param name="unionNodes" type="Set"/>
                    <param name="substractNodes" type="Set"/>
                    <param name="intersectNodes" type="Set"/>
                </params>
            </method>
            <declaration name="unionNodes" type="Set" line="203"/>
            <declaration name="substractNodes" type="Set" line="204"/>
            <declaration name="intersectNodes" type="Set" line="205"/>
            <javadoc line="208">
                @see com.sun.org.apache.xml.internal.security.signature.NodeFilter#isNodeInclude(org.w3c.dom.Node)                
            </javadoc>
            <method name="isNodeInclude" type="int" line="211">
                <params>
                    <param name="currentNode" type="Node"/>
                </params>
                <comment line="221">
                    TODO OPTIMIZE                    
                </comment>
                <declaration name="result" type="int" line="212"/>
                <scope line="214"/>
                <scope line="216"/>
                <scope line="223">
                    <scope line="224"/>
                </scope>
            </method>
            <declaration name="inSubstract" type="int" line="232"/>
            <declaration name="inIntersect" type="int" line="233"/>
            <declaration name="inUnion" type="int" line="234"/>
            <method name="isNodeIncludeDO" type="int" line="235">
                <params>
                    <param name="n" type="Node"/>
                    <param name="level" type="int"/>
                </params>
                <declaration name="result" type="int" line="236"/>
                <scope line="237">
                    <scope line="238">
                        <scope line="239"/>
                        <scope line="241"/>
                    </scope>
                    <scope line="245"/>
                </scope>
                <scope line="249">
                    <scope line="250">
                        <scope line="251">
                            <scope line="252"/>
                            <scope line="255"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="266">
                    <scope line="267"/>
                </scope>
            </method>
            <javadoc line="278">
                Method rooted                
                <param>
                    currentNode                    
                </param>
                <param>
                    nodeList                    
                </param>
                <return>
                    if rooted bye the rootnodes                    
                </return>
            </javadoc>
            <method name="rooted" type="boolean" line="285">
                <params>
                    <param name="currentNode" type="Node"/>
                    <param name="nodeList" type="Set"/>
                </params>
                <scope line="286"/>
                <declaration name="it" type="Iterator" line="289"/>
                <scope line="290">
                    <declaration name="rootNode" type="Node" line="291"/>
                    <scope line="292"/>
                </scope>
            </method>
            <javadoc line="299">
                Method rooted                
                <param>
                    currentNode                    
                </param>
                <param>
                    nodeList                    
                </param>
                <return>
                    if rooted bye the rootnodes                    
                </return>
            </javadoc>
            <method name="inList" type="boolean" line="306">
                <params>
                    <param name="currentNode" type="Node"/>
                    <param name="nodeList" type="Set"/>
                </params>
            </method>
        </class>
    </source>