<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.utils">
        <import package="javax.xml.transform.TransformerException"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.implementations.FuncHereContext"/>
        <import package="com.sun.org.apache.xml.internal.utils.PrefixResolver"/>
        <import package="com.sun.org.apache.xml.internal.utils.PrefixResolverDefault"/>
        <import package="com.sun.org.apache.xpath.internal.XPath"/>
        <import package="com.sun.org.apache.xpath.internal.objects.XObject"/>
        <import package="org.w3c.dom.Attr"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.w3c.dom.NodeList"/>
        <import package="org.w3c.dom.ProcessingInstruction"/>
        <import package="org.w3c.dom.Text"/>
        <import package="org.w3c.dom.traversal.NodeIterator"/>
        <class name="XPathFuncHereAPI" line="43">
            <javadoc line="43">
                This class does the same as {@link com.sun.org.apache.xpath.internal.XPathAPI} except that the XPath strings
                  are not supplied as Strings but as {@link Text}, {@link Attr}ibute or
                  {ProcessingInstruction} nodes which contain the XPath string. This enables
                  us to use the &lt;CODE&gt;here()&lt;/CODE&gt; function.
                  &lt;BR&gt;
                  The methods in this class are convenience methods into the low-level XPath API.
                  These functions tend to be a little slow, since a number of objects must be
                  created for each evaluation.  A faster way is to precompile the
                  XPaths using the low-level API, and then just use the XPaths
                  over and over.                
                <author>
                    $Author: mullan $                    
                </author>
                <see>
                    <a href="http://www.w3.org/TR/xpath">XPath Specification</a>                    
                </see>
            </javadoc>
            <javadoc line="60">
                Use an XPath string to select a single node. XPath namespace
                  prefixes are resolved from the context node, which may not
                  be what you want (see the next method).                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode A Node containing a valid XPath string.                    
                </param>
                <return>
                    The first node found that matches the XPath, or null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="selectSingleNode" type="Node" line="72">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                </params>
            </method>
            <javadoc line="76">
                Use an XPath string to select a single node.
                  XPath namespace prefixes are resolved from the namespaceNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <param>
                    namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.                    
                </param>
                <return>
                    The first node found that matches the XPath, or null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="selectSingleNode" type="Node" line="89">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                    <param name="namespaceNode" type="Node"/>
                </params>
                <comment line="92">
                    Have the XObject return its result as a NodeSetDTM.                    
                </comment>
                <comment line="96">
                    Return the first node, or null                    
                </comment>
                <declaration name="nl" type="NodeIterator" line="92"/>
            </method>
            <javadoc line="99">
                Use an XPath string to select a nodelist.
                  XPath namespace prefixes are resolved from the contextNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <return>
                    A NodeIterator, should never be null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="selectNodeIterator" type="NodeIterator" line="110">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                </params>
            </method>
            <javadoc line="114">
                Use an XPath string to select a nodelist.
                  XPath namespace prefixes are resolved from the namespaceNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <param>
                    namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.                    
                </param>
                <return>
                    A NodeIterator, should never be null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="selectNodeIterator" type="NodeIterator" line="127">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                    <param name="namespaceNode" type="Node"/>
                </params>
                <comment line="130">
                    Execute the XPath, and have it return the result                    
                </comment>
                <comment line="133">
                    Have the XObject return its result as a NodeSetDTM.                    
                </comment>
                <declaration name="list" type="XObject" line="130"/>
            </method>
            <javadoc line="136">
                Use an XPath string to select a nodelist.
                  XPath namespace prefixes are resolved from the contextNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <return>
                    A NodeIterator, should never be null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="selectNodeList" type="NodeList" line="147">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                </params>
            </method>
            <javadoc line="151">
                Use an XPath string to select a nodelist.
                  XPath namespace prefixes are resolved from the namespaceNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <param>
                    namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.                    
                </param>
                <return>
                    A NodeIterator, should never be null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="selectNodeList" type="NodeList" line="164">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                    <param name="namespaceNode" type="Node"/>
                </params>
                <comment line="167">
                    Execute the XPath, and have it return the result                    
                </comment>
                <comment line="170">
                    Return a NodeList.                    
                </comment>
                <declaration name="list" type="XObject" line="167"/>
            </method>
            <javadoc line="173">
                Evaluate XPath string to an XObject.  Using this method,
                  XPath namespace prefixes will be resolved from the namespaceNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <return>
                    An XObject, which can be used to obtain a string, number, nodelist, etc, should never be null.                    
                </return>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XObject                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNull                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XBoolean                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNumber                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XString                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XRTreeFrag                    
                </see>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="eval" type="XObject" line="189">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                </params>
            </method>
            <javadoc line="193">
                Evaluate XPath string to an XObject.
                  XPath namespace prefixes are resolved from the namespaceNode.
                  The implementation of this is a little slow, since it creates
                  a number of objects each time it is called.  This could be optimized
                  to keep the same objects around, but then thread-safety issues would arise.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <param>
                    namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.                    
                </param>
                <return>
                    An XObject, which can be used to obtain a string, number, nodelist, etc, should never be null.                    
                </return>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XObject                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNull                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XBoolean                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNumber                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XString                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XRTreeFrag                    
                </see>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="eval" type="XObject" line="215">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                    <param name="namespaceNode" type="Node"/>
                </params>
                <comment line="218">
                    Since we don&apos;t have a XML Parser involved here, install some default support
                     for things like namespaces, etc.
                     (Changed from: XPathContext xpathSupport = new XPathContext();
                        because XPathContext is weak in a number of areas... perhaps
                        XPathContext should be done away with.)                    
                </comment>
                <comment line="225">
                    Create an object to resolve namespace prefixes.
                     XPath namespaces are resolved from the input context node&apos;s document element
                     if it is a root node, or else the current context node (for lack of a better
                     resolution space, given the simplicity of this sample code).                    
                </comment>
                <comment line="237">
                    Create the XPath object.                    
                </comment>
                <comment line="240">
                    Execute the XPath, and have it return the result
                     return xpath.execute(xpathSupport, contextNode, prefixResolver);                    
                </comment>
                <declaration name="xpathSupport" type="FuncHereContext" line="222"/>
                <declaration name="prefixResolver" type="PrefixResolverDefault" line="228"/>
                <declaration name="str" type="String" line="234"/>
                <declaration name="xpath" type="XPath" line="237"/>
                <declaration name="ctxtNode" type="int" line="241"/>
            </method>
            <javadoc line="246">
                Evaluate XPath string to an XObject.
                  XPath namespace prefixes are resolved from the namespaceNode.
                  The implementation of this is a little slow, since it creates
                  a number of objects each time it is called.  This could be optimized
                  to keep the same objects around, but then thread-safety issues would arise.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <param>
                    prefixResolver Will be called if the parser encounters namespace
                      prefixes, to resolve the prefixes to URLs.                    
                </param>
                <return>
                    An XObject, which can be used to obtain a string, number, nodelist, etc, should never be null.                    
                </return>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XObject                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNull                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XBoolean                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNumber                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XString                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XRTreeFrag                    
                </see>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="eval" type="XObject" line="269">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                    <param name="prefixResolver" type="PrefixResolver"/>
                </params>
                <comment line="274">
                    Since we don&apos;t have a XML Parser involved here, install some default support
                     for things like namespaces, etc.
                     (Changed from: XPathContext xpathSupport = new XPathContext();
                        because XPathContext is weak in a number of areas... perhaps
                        XPathContext should be done away with.)
                     Create the XPath object.                    
                </comment>
                <comment line="282">
                    Execute the XPath, and have it return the result                    
                </comment>
                <declaration name="str" type="String" line="271"/>
                <declaration name="xpath" type="XPath" line="279"/>
                <declaration name="xpathSupport" type="FuncHereContext" line="282"/>
                <declaration name="ctxtNode" type="int" line="283"/>
            </method>
            <javadoc line="288">
                Method getStrFromNode                
                <param>
                    xpathnode                    
                </param>
                <return>
                    the string from the node                    
                </return>
            </javadoc>
            <method name="getStrFromNode" type="String" line="294">
                <params>
                    <param name="xpathnode" type="Node"/>
                </params>
                <scope line="296"/>
                <scope line="298"/>
                <scope line="300"/>
            </method>
        </class>
    </source>