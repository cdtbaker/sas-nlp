<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.utils">
        <import package="javax.xml.transform.TransformerException"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.implementations.FuncHereContext"/>
        <import package="com.sun.org.apache.xml.internal.utils.PrefixResolver"/>
        <import package="com.sun.org.apache.xml.internal.utils.PrefixResolverDefault"/>
        <import package="com.sun.org.apache.xpath.internal.XPath"/>
        <import package="com.sun.org.apache.xpath.internal.objects.XObject"/>
        <import package="org.w3c.dom.Attr"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.w3c.dom.NodeList"/>
        <import package="org.w3c.dom.ProcessingInstruction"/>
        <import package="org.w3c.dom.Text"/>
        <import package="org.w3c.dom.traversal.NodeIterator"/>
        <class name="XPathFuncHereAPI" line="15">
            <javadoc line="15">
                This class does the same as {@link com.sun.org.apache.xpath.internal.XPathAPI} except that the XPath strings
                  are not supplied as Strings but as {@link Text}, {@link Attr}ibute or
                  {ProcessingInstruction} nodes which contain the XPath string. This enables
                  us to use the &lt;CODE&gt;here()&lt;/CODE&gt; function.
                  &lt;BR&gt;
                  The methods in this class are convenience methods into the low-level XPath API.
                  These functions tend to be a little slow, since a number of objects must be
                  created for each evaluation.  A faster way is to precompile the
                  XPaths using the low-level API, and then just use the XPaths
                  over and over.                
                <author>
                    $Author: mullan $                    
                </author>
                <see>
                    &lt;a href=&quot;http://www.w3.org/TR/xpath&quot;&gt;XPath Specification&lt;/a&gt;                    
                </see>
            </javadoc>
            <javadoc line="30">
                Use an XPath string to select a single node. XPath namespace
                  prefixes are resolved from the context node, which may not
                  be what you want (see the next method).                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode A Node containing a valid XPath string.                    
                </param>
                <return>
                    The first node found that matches the XPath, or null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="selectSingleNode" type="Node" line="39">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                </params>
            </method>
            <javadoc line="42">
                Use an XPath string to select a single node.
                  XPath namespace prefixes are resolved from the namespaceNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <param>
                    namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.                    
                </param>
                <return>
                    The first node found that matches the XPath, or null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="selectSingleNode" type="Node" line="51">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                    <param name="namespaceNode" type="Node"/>
                </params>
                <declaration name="nl" type="NodeIterator" line="52"/>
            </method>
            <javadoc line="55">
                Use an XPath string to select a nodelist.
                  XPath namespace prefixes are resolved from the contextNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <return>
                    A NodeIterator, should never be null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="selectNodeIterator" type="NodeIterator" line="63">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                </params>
            </method>
            <javadoc line="66">
                Use an XPath string to select a nodelist.
                  XPath namespace prefixes are resolved from the namespaceNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <param>
                    namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.                    
                </param>
                <return>
                    A NodeIterator, should never be null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="selectNodeIterator" type="NodeIterator" line="75">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                    <param name="namespaceNode" type="Node"/>
                </params>
                <declaration name="list" type="XObject" line="76"/>
            </method>
            <javadoc line="79">
                Use an XPath string to select a nodelist.
                  XPath namespace prefixes are resolved from the contextNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <return>
                    A NodeIterator, should never be null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="selectNodeList" type="NodeList" line="87">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                </params>
            </method>
            <javadoc line="90">
                Use an XPath string to select a nodelist.
                  XPath namespace prefixes are resolved from the namespaceNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <param>
                    namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.                    
                </param>
                <return>
                    A NodeIterator, should never be null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="selectNodeList" type="NodeList" line="99">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                    <param name="namespaceNode" type="Node"/>
                </params>
                <declaration name="list" type="XObject" line="100"/>
            </method>
            <javadoc line="103">
                Evaluate XPath string to an XObject.  Using this method,
                  XPath namespace prefixes will be resolved from the namespaceNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <return>
                    An XObject, which can be used to obtain a string, number, nodelist, etc, should never be null.                    
                </return>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XObject                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNull                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XBoolean                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNumber                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XString                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XRTreeFrag                    
                </see>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="eval" type="XObject" line="117">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                </params>
            </method>
            <javadoc line="120">
                Evaluate XPath string to an XObject.
                  XPath namespace prefixes are resolved from the namespaceNode.
                  The implementation of this is a little slow, since it creates
                  a number of objects each time it is called.  This could be optimized
                  to keep the same objects around, but then thread-safety issues would arise.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <param>
                    namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.                    
                </param>
                <return>
                    An XObject, which can be used to obtain a string, number, nodelist, etc, should never be null.                    
                </return>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XObject                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNull                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XBoolean                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNumber                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XString                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XRTreeFrag                    
                </see>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="eval" type="XObject" line="138">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                    <param name="namespaceNode" type="Node"/>
                </params>
                <declaration name="xpathSupport" type="FuncHereContext" line="139"/>
                <declaration name="prefixResolver" type="PrefixResolverDefault" line="140"/>
                <declaration name="str" type="String" line="141"/>
                <declaration name="xpath" type="XPath" line="142"/>
                <declaration name="ctxtNode" type="int" line="143"/>
            </method>
            <javadoc line="146">
                Evaluate XPath string to an XObject.
                  XPath namespace prefixes are resolved from the namespaceNode.
                  The implementation of this is a little slow, since it creates
                  a number of objects each time it is called.  This could be optimized
                  to keep the same objects around, but then thread-safety issues would arise.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <param>
                    prefixResolver Will be called if the parser encounters namespace
                      prefixes, to resolve the prefixes to URLs.                    
                </param>
                <return>
                    An XObject, which can be used to obtain a string, number, nodelist, etc, should never be null.                    
                </return>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XObject                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNull                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XBoolean                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNumber                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XString                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XRTreeFrag                    
                </see>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="eval" type="XObject" line="165">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                    <param name="prefixResolver" type="PrefixResolver"/>
                </params>
                <declaration name="str" type="String" line="166"/>
                <declaration name="xpath" type="XPath" line="167"/>
                <declaration name="xpathSupport" type="FuncHereContext" line="168"/>
                <declaration name="ctxtNode" type="int" line="169"/>
            </method>
            <javadoc line="172">
                Method getStrFromNode                
                <param>
                    xpathnode                    
                </param>
                <return>
                    the string from the node                    
                </return>
            </javadoc>
            <method name="getStrFromNode" type="String" line="177">
                <params>
                    <param name="xpathnode" type="Node"/>
                </params>
                <scope line="178"/>
                <scope line="181"/>
                <scope line="184"/>
            </method>
        </class>
    </source>