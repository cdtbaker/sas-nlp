<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.c14n">
        <import package="java.io.ByteArrayInputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Map"/>
        <import package="java.util.Set"/>
        <import package="javax.xml.parsers.DocumentBuilder"/>
        <import package="javax.xml.parsers.DocumentBuilderFactory"/>
        <import package="com.sun.org.apache.xml.internal.security.exceptions.AlgorithmAlreadyRegisteredException"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.w3c.dom.NodeList"/>
        <import package="org.xml.sax.InputSource"/>
        <class name="Canonicalizer" line="38">
            <javadoc line="38">
                @author Christian Geuer-Pollmann                
            </javadoc>
            <declaration name="ENCODING" type="String" line="44"/>
            <javadoc line="44">
                The output encoding of canonicalized data                
            </javadoc>
            <declaration name="XPATH_C14N_WITH_COMMENTS_SINGLE_NODE" type="String" line="47"/>
            <javadoc line="47">
                XPath Expresion for selecting every node and continuous comments joined
                  in only one node                
            </javadoc>
            <declaration name="ALGO_ID_C14N_OMIT_COMMENTS" type="String" line="54"/>
            <javadoc line="54">
                The URL defined in XML-SEC Rec for inclusive c14n &lt;b&gt;without&lt;/b&gt; comments.                
            </javadoc>
            <declaration name="ALGO_ID_C14N_WITH_COMMENTS" type="String" line="59"/>
            <javadoc line="59">
                The URL defined in XML-SEC Rec for inclusive c14n &lt;b&gt;with&lt;/b&gt; comments.                
            </javadoc>
            <declaration name="ALGO_ID_C14N_EXCL_OMIT_COMMENTS" type="String" line="64"/>
            <javadoc line="64">
                The URL defined in XML-SEC Rec for exclusive c14n &lt;b&gt;without&lt;/b&gt; comments.                
            </javadoc>
            <declaration name="ALGO_ID_C14N_EXCL_WITH_COMMENTS" type="String" line="69"/>
            <javadoc line="69">
                The URL defined in XML-SEC Rec for exclusive c14n &lt;b&gt;with&lt;/b&gt; comments.                
            </javadoc>
            <declaration name="ALGO_ID_C14N11_OMIT_COMMENTS" type="String" line="74"/>
            <javadoc line="74">
                The URI for inclusive c14n 1.1 &lt;b&gt;without&lt;/b&gt; comments.                
            </javadoc>
            <declaration name="ALGO_ID_C14N11_WITH_COMMENTS" type="String" line="79"/>
            <javadoc line="79">
                The URI for inclusive c14n 1.1 &lt;b&gt;with&lt;/b&gt; comments.                
            </javadoc>
            <declaration name="_alreadyInitialized" type="boolean" line="85"/>
            <declaration name="_canonicalizerHash" type="Map" line="86"/>
            <declaration name="canonicalizerSpi" type="CanonicalizerSpi" line="88"/>
            <javadoc line="90">
                Method init                
            </javadoc>
            <method name="init" type="void" line="94">
                <scope line="96"/>
            </method>
            <javadoc line="102">
                Constructor Canonicalizer                
                <param>
                    algorithmURI                    
                </param>
                <throws>
                    InvalidCanonicalizerException                    
                </throws>
            </javadoc>
            <method name="Canonicalizer" type="constructor" line="109">
                <params>
                    <param name="algorithmURI" type="String"/>
                </params>
                <scope line="111">
                    <declaration name="implementingClass" type="Class" line="112"/>
                </scope>
                <scope line="117">
                    <declaration name="exArgs" type="Object" line="118"/>
                </scope>
            </method>
            <javadoc line="125">
                Method getInstance                
                <param>
                    algorithmURI                    
                </param>
                <return>
                    a Conicicalizer instance ready for the job                    
                </return>
                <throws>
                    InvalidCanonicalizerException                    
                </throws>
            </javadoc>
            <method name="getInstance" type="Canonicalizer" line="133">
                <params>
                    <param name="algorithmURI" type="String"/>
                </params>
                <declaration name="c14nizer" type="Canonicalizer" line="135"/>
            </method>
            <javadoc line="140">
                Method register                
                <param>
                    algorithmURI                    
                </param>
                <param>
                    implementingClass                    
                </param>
                <throws>
                    AlgorithmAlreadyRegisteredException                    
                </throws>
            </javadoc>
            <method name="register" type="void" line="148">
                <params>
                    <param name="algorithmURI" type="String"/>
                    <param name="implementingClass" type="String"/>
                </params>
                <comment line="150">
                    check whether URI is already registered                    
                </comment>
                <declaration name="registeredClass" type="Class" line="151"/>
                <scope line="153">
                    <declaration name="exArgs" type="Object" line="154"/>
                </scope>
                <scope line="160"/>
                <scope line="162"/>
            </method>
            <javadoc line="167">
                Method getURI                
                <return>
                    the URI defined for this c14n instance.                    
                </return>
            </javadoc>
            <method name="getURI" type="String" line="172"/>
            <javadoc line="176">
                Method getIncludeComments                
                <return>
                    true if the c14n respect the comments.                    
                </return>
            </javadoc>
            <method name="getIncludeComments" type="boolean" line="181"/>
            <javadoc line="185">
                This method tries to canonicalize the given bytes. It&apos;s possible to even
                  canonicalize non-wellformed sequences if they are well-formed after being
                  wrapped with a &lt;CODE&gt;&amp;gt;a&amp;lt;...&amp;gt;/a&amp;lt;&lt;/CODE&gt;.                
                <param>
                    inputBytes                    
                </param>
                <return>
                    the result of the conicalization.                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
                <throws>
                    java.io.IOException                    
                </throws>
                <throws>
                    javax.xml.parsers.ParserConfigurationException                    
                </throws>
                <throws>
                    org.xml.sax.SAXException                    
                </throws>
            </javadoc>
            <method name="canonicalize" type="byte[]" line="200">
                <params>
                    <param name="inputBytes" type="byte[]"/>
                </params>
                <comment line="208">
                    needs to validate for ID attribute nomalization                    
                </comment>
                <comment line="213">
                    for some of the test vectors from the specification,
                     there has to be a validatin parser for ID attributes, default
                     attribute values, NMTOKENS, etc.
                     Unfortunaltely, the test vectors do use different DTDs or
                     even no DTD. So Xerces 1.3.1 fires many warnings about using
                     ErrorHandlers.
                    
                     Text from the spec:
                    
                     The input octet stream MUST contain a well-formed XML document,
                     but the input need not be validated. However, the attribute
                     value normalization and entity reference resolution MUST be
                     performed in accordance with the behaviors of a validating
                     XML processor. As well, nodes for default attributes (declared
                     in the ATTLIST with an AttValue but not specified) are created
                     in each element. Thus, the declarations in the document type
                     declaration are used to help create the canonical form, even
                     though the document type declaration is not retained in the
                     canonical form.                    
                </comment>
                <declaration name="bais" type="ByteArrayInputStream" line="202"/>
                <declaration name="in" type="InputSource" line="203"/>
                <declaration name="dfactory" type="DocumentBuilderFactory" line="204"/>
                <declaration name="db" type="DocumentBuilder" line="211"/>
                <declaration name="document" type="Document" line="238"/>
                <declaration name="result" type="byte" line="239"/>
            </method>
            <javadoc line="244">
                Canonicalizes the subtree rooted by &lt;CODE&gt;node&lt;/CODE&gt;.                
                <param>
                    node The node to canicalize                    
                </param>
                <return>
                    the result of the c14n.                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="canonicalizeSubtree" type="byte[]" line="253">
                <params>
                    <param name="node" type="Node"/>
                </params>
            </method>
            <javadoc line="257">
                Canonicalizes the subtree rooted by &lt;CODE&gt;node&lt;/CODE&gt;.                
                <param>
                    node                    
                </param>
                <param>
                    inclusiveNamespaces                    
                </param>
                <return>
                    the result of the c14n.                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="canonicalizeSubtree" type="byte[]" line="266">
                <params>
                    <param name="node" type="Node"/>
                    <param name="inclusiveNamespaces" type="String"/>
                </params>
            </method>
            <javadoc line="271">
                Canonicalizes an XPath node set. The &lt;CODE&gt;xpathNodeSet&lt;/CODE&gt; is treated
                  as a list of XPath nodes, not as a list of subtrees.                
                <param>
                    xpathNodeSet                    
                </param>
                <return>
                    the result of the c14n.                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="canonicalizeXPathNodeSet" type="byte[]" line="280">
                <params>
                    <param name="xpathNodeSet" type="NodeList"/>
                </params>
            </method>
            <javadoc line="284">
                Canonicalizes an XPath node set. The &lt;CODE&gt;xpathNodeSet&lt;/CODE&gt; is treated
                  as a list of XPath nodes, not as a list of subtrees.                
                <param>
                    xpathNodeSet                    
                </param>
                <param>
                    inclusiveNamespaces                    
                </param>
                <return>
                    the result of the c14n.                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="canonicalizeXPathNodeSet" type="byte[]" line="295">
                <params>
                    <param name="xpathNodeSet" type="NodeList"/>
                    <param name="inclusiveNamespaces" type="String"/>
                </params>
            </method>
            <javadoc line="300">
                Canonicalizes an XPath node set.                
                <param>
                    xpathNodeSet                    
                </param>
                <return>
                    the result of the c14n.                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="canonicalizeXPathNodeSet" type="byte[]" line="308">
                <params>
                    <param name="xpathNodeSet" type="Set"/>
                </params>
            </method>
            <javadoc line="312">
                Canonicalizes an XPath node set.                
                <param>
                    xpathNodeSet                    
                </param>
                <param>
                    inclusiveNamespaces                    
                </param>
                <return>
                    the result of the c14n.                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="canonicalizeXPathNodeSet" type="byte[]" line="321">
                <params>
                    <param name="xpathNodeSet" type="Set"/>
                    <param name="inclusiveNamespaces" type="String"/>
                </params>
            </method>
            <javadoc line="326">
                Sets the writer where the canonicalization ends.  ByteArrayOutputStream
                  if none is set.                
                <param>
                    os                    
                </param>
            </javadoc>
            <method name="setWriter" type="void" line="331">
                <params>
                    <param name="os" type="OutputStream"/>
                </params>
            </method>
            <javadoc line="335">
                Returns the name of the implementing {@link CanonicalizerSpi} class                
                <return>
                    the name of the implementing {@link CanonicalizerSpi} class                    
                </return>
            </javadoc>
            <method name="getImplementingCanonicalizerClass" type="String" line="340"/>
            <javadoc line="344">
                Method getImplementingClass                
                <param>
                    URI                    
                </param>
                <return>
                    the name of the class that implements the given URI                    
                </return>
            </javadoc>
            <method name="getImplementingClass" type="Class" line="350">
                <params>
                    <param name="URI" type="String"/>
                </params>
            </method>
            <javadoc line="354">
                Set the canonicalizer behaviour to not reset.                
            </javadoc>
            <method name="notReset" type="void" line="357"/>
        </class>
    </source>