<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.keys.keyresolver.implementations">
        <import package="java.io.ByteArrayInputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.security.PublicKey"/>
        <import package="java.security.cert.CertificateException"/>
        <import package="java.security.cert.CertificateFactory"/>
        <import package="java.security.cert.X509Certificate"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="java.util.ListIterator"/>
        <import package="java.util.Set"/>
        <import package="javax.xml.parsers.ParserConfigurationException"/>
        <import package="com.sun.org.apache.xml.internal.security.c14n.CanonicalizationException"/>
        <import package="com.sun.org.apache.xml.internal.security.exceptions.XMLSecurityException"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.content.RetrievalMethod"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.content.x509.XMLX509Certificate"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.keyresolver.KeyResolver"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.keyresolver.KeyResolverException"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.keyresolver.KeyResolverSpi"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.storage.StorageResolver"/>
        <import package="com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.Transforms"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.Constants"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.XMLUtils"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.resolver.ResourceResolver"/>
        <import package="org.w3c.dom.Attr"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.xml.sax.SAXException"/>
        <class name="RetrievalMethodResolver" line="58">
            <extends class="KeyResolverSpi"/>
            <javadoc line="58">
                The RetrievalMethodResolver can retrieve public keys and certificates from
                  other locations. The location is specified using the ds:RetrievalMethod
                  element which points to the location. This includes the handling of raw
                  (binary) X.509 certificate which are not encapsulated in an XML structure.
                  If the retrieval process encounters an element which the
                  RetrievalMethodResolver cannot handle itself, resolving of the extracted
                  element is delegated back to the KeyResolver mechanism.                
                <author>
                    $Author: mullan $ modified by Dave Garcia                    
                </author>
            </javadoc>
            <declaration name="log" type="java.util.logging.Logger" line="71"/>
            <javadoc line="71">
                {@link java.util.logging} logging facility                
            </javadoc>
            <javadoc line="76">
                Method engineResolvePublicKey                
                <inheritDoc>
                                        
                </inheritDoc>
                <param>
                    element                    
                </param>
                <param>
                    BaseURI                    
                </param>
                <param>
                    storage                    
                </param>
            </javadoc>
            <method name="engineLookupAndResolvePublicKey" type="PublicKey" line="86">
                <params>
                    <param name="element" type="Element"/>
                    <param name="BaseURI" type="String"/>
                    <param name="storage" type="StorageResolver"/>
                </params>
                <comment line="93">
                    Create a retrieval method over the given element                    
                </comment>
                <comment line="98">
                    a raw certificate, direct parsing is done!                    
                </comment>
                <scope line="88"/>
                <scope line="92">
                    <declaration name="rm" type="RetrievalMethod" line="94"/>
                    <declaration name="type" type="String" line="95"/>
                    <declaration name="resource" type="XMLSignatureInput" line="96"/>
                    <scope line="97">
                        <declaration name="cert" type="X509Certificate" line="99"/>
                        <scope line="100"/>
                    </scope>
                    <declaration name="e" type="Element" line="105"/>
                </scope>
                <scope line="107"/>
                <scope line="109"/>
                <scope line="111"/>
                <scope line="113"/>
                <scope line="115"/>
            </method>
            <method name="obtainRefrenceElement" type="Element" line="121">
                <params>
                    <param name="resource" type="XMLSignatureInput"/>
                </params>
                <comment line="126">
                    Retrieved resource is a nodeSet                    
                </comment>
                <comment line="129">
                    Retrieved resource is an inputStream                    
                </comment>
                <comment line="132">
                    otherwise, we parse the resource, create an Element and delegate                    
                </comment>
                <declaration name="e" type="Element" line="122"/>
                <scope line="123"/>
                <scope line="125"/>
                <scope line="128">
                    <declaration name="inputBytes" type="byte" line="130"/>
                </scope>
            </method>
            <javadoc line="139">
                Method engineResolveX509Certificate                
                <inheritDoc>
                                        
                </inheritDoc>
                <param>
                    element                    
                </param>
                <param>
                    BaseURI                    
                </param>
                <param>
                    storage                    
                </param>
            </javadoc>
            <method name="engineLookupResolveX509Certificate" type="X509Certificate" line="149">
                <params>
                    <param name="element" type="Element"/>
                    <param name="BaseURI" type="String"/>
                    <param name="storage" type="StorageResolver"/>
                </params>
                <scope line="151"/>
                <scope line="155">
                    <declaration name="rm" type="RetrievalMethod" line="156"/>
                    <declaration name="type" type="String" line="157"/>
                    <declaration name="resource" type="XMLSignatureInput" line="158"/>
                    <scope line="159">
                        <declaration name="cert" type="X509Certificate" line="160"/>
                    </scope>
                    <declaration name="e" type="Element" line="163"/>
                </scope>
                <scope line="165"/>
                <scope line="167"/>
                <scope line="169"/>
                <scope line="171"/>
                <scope line="173"/>
            </method>
            <javadoc line="179">
                Retrieves a x509Certificate from the given information                
                <param>
                    e                    
                </param>
                <param>
                    BaseURI                    
                </param>
                <param>
                    storage                    
                </param>
                <return>
                                        
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="resolveCertificate" type="X509Certificate" line="187">
                <params>
                    <param name="e" type="Element"/>
                    <param name="BaseURI" type="String"/>
                    <param name="storage" type="StorageResolver"/>
                </params>
                <comment line="190">
                    An element has been provided                    
                </comment>
                <scope line="191"/>
            </method>
            <javadoc line="197">
                Retrieves a x509Certificate from the given information                
                <param>
                    e                    
                </param>
                <param>
                    BaseURI                    
                </param>
                <param>
                    storage                    
                </param>
                <return>
                                        
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="resolveKey" type="PublicKey" line="205">
                <params>
                    <param name="e" type="Element"/>
                    <param name="BaseURI" type="String"/>
                    <param name="storage" type="StorageResolver"/>
                </params>
                <comment line="208">
                    An element has been provided                    
                </comment>
                <scope line="209"/>
            </method>
            <method name="getRawCertificate" type="X509Certificate" line="215">
                <params>
                    <param name="resource" type="XMLSignatureInput"/>
                </params>
                <comment line="217">
                    if the resource stores a raw certificate, we have to handle it                    
                </comment>
                <declaration name="inputBytes" type="byte" line="216"/>
                <declaration name="certFact" type="CertificateFactory" line="218"/>
                <declaration name="cert" type="X509Certificate" line="219"/>
            </method>
            <javadoc line="222">
                Resolves the input from the given retrieval method                
                <return>
                                        
                </return>
                <throws>
                    XMLSecurityException                    
                </throws>
            </javadoc>
            <method name="resolveInput" type="XMLSignatureInput" line="227">
                <params>
                    <param name="rm" type="RetrievalMethod"/>
                    <param name="BaseURI" type="String"/>
                </params>
                <comment line="229">
                    Apply the trnasforms                    
                </comment>
                <declaration name="uri" type="Attr" line="228"/>
                <declaration name="transforms" type="Transforms" line="230"/>
                <declaration name="resRes" type="ResourceResolver" line="231"/>
                <scope line="232">
                    <declaration name="resource" type="XMLSignatureInput" line="233"/>
                    <scope line="234"/>
                </scope>
            </method>
            <javadoc line="243">
                Parses a byte array and returns the parsed Element.                
                <param>
                    bytes                    
                </param>
                <return>
                    the Document Element after parsing bytes                    
                </return>
                <throws>
                    KeyResolverException if something goes wrong                    
                </throws>
            </javadoc>
            <method name="getDocFromBytes" type="Element" line="250">
                <params>
                    <param name="bytes" type="byte[]"/>
                </params>
                <scope line="251">
                    <declaration name="dbf" type="javax.xml.parsers.DocumentBuilderFactory" line="252"/>
                    <declaration name="db" type="javax.xml.parsers.DocumentBuilder" line="254"/>
                    <declaration name="doc" type="org.w3c.dom.Document" line="255"/>
                </scope>
                <scope line="258"/>
                <scope line="260"/>
                <scope line="262"/>
            </method>
            <javadoc line="267">
                Method engineResolveSecretKey                
                <inheritDoc>
                                        
                </inheritDoc>
                <param>
                    element                    
                </param>
                <param>
                    BaseURI                    
                </param>
                <param>
                    storage                    
                </param>
            </javadoc>
            <method name="engineLookupAndResolveSecretKey" type="javax.crypto.SecretKey" line="277">
                <params>
                    <param name="element" type="Element"/>
                    <param name="BaseURI" type="String"/>
                    <param name="storage" type="StorageResolver"/>
                </params>
            </method>
            <method name="getDocumentElement" type="Element" line="281">
                <params>
                    <param name="set" type="Set"/>
                </params>
                <comment line="294">
                    Obtain all the parents of the elemnt                    
                </comment>
                <comment line="303">
                    Visit them in reverse order.                    
                </comment>
                <declaration name="it" type="Iterator" line="282"/>
                <declaration name="e" type="Element" line="283"/>
                <scope line="284">
                    <declaration name="currentNode" type="Node" line="285"/>
                    <scope line="286"/>
                </scope>
                <declaration name="parents" type="List" line="292"/>
                <scope line="295">
                    <declaration name="n" type="Node" line="297"/>
                    <scope line="298"/>
                </scope>
                <declaration name="it2" type="ListIterator" line="304"/>
                <declaration name="ele" type="Element" line="305"/>
                <scope line="306">
                    <scope line="308"/>
                </scope>
            </method>
        </class>
    </source>