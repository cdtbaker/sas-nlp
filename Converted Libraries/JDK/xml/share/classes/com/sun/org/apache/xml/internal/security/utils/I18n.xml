<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.utils">
        <import package="java.text.MessageFormat"/>
        <import package="java.util.Locale"/>
        <import package="java.util.ResourceBundle"/>
        <class name="I18n" line="27">
            <comment line="42">
                will be set in static{} block                
            </comment>
            <comment line="45">
                will be set in static{} block                
            </comment>
            <comment line="175">
                                
            </comment>
            <comment line="176">
                Commented out because it modifies shared static                
            </comment>
            <comment line="177">
                state which could be maliciously called by untrusted code                
            </comment>
            <comment line="178">
                                
            </comment>
            <comment line="179">
                /**                
            </comment>
            <comment line="180">
                * Method init                
            </comment>
            <comment line="181">
                *                
            </comment>
            <comment line="182">
                * @param _defaultLanguageCode                
            </comment>
            <comment line="183">
                * @param _defaultCountryCode                
            </comment>
            <comment line="184">
                */                
            </comment>
            <comment line="185">
                public static void init(String _defaultLanguageCode,                
            </comment>
            <comment line="186">
                String _defaultCountryCode) {                
            </comment>
            <comment line="187">
                                
            </comment>
            <comment line="188">
                I18n.defaultLanguageCode = _defaultLanguageCode;                
            </comment>
            <comment line="189">
                                
            </comment>
            <comment line="190">
                if (I18n.defaultLanguageCode == null) {                
            </comment>
            <comment line="191">
                I18n.defaultLanguageCode = Locale.getDefault().getLanguage();                
            </comment>
            <comment line="192">
                }                
            </comment>
            <comment line="193">
                                
            </comment>
            <comment line="194">
                I18n.defaultCountryCode = _defaultCountryCode;                
            </comment>
            <comment line="195">
                                
            </comment>
            <comment line="196">
                if (I18n.defaultCountryCode == null) {                
            </comment>
            <comment line="197">
                I18n.defaultCountryCode = Locale.getDefault().getCountry();                
            </comment>
            <comment line="198">
                }                
            </comment>
            <comment line="199">
                                
            </comment>
            <comment line="200">
                initLocale(I18n.defaultLanguageCode, I18n.defaultCountryCode);                
            </comment>
            <comment line="201">
                }                
            </comment>
            <comment line="203">
                                
            </comment>
            <comment line="204">
                Commented out because it modifies shared static                
            </comment>
            <comment line="205">
                state which could be maliciously called by untrusted code                
            </comment>
            <comment line="206">
                                
            </comment>
            <comment line="207">
                /**                
            </comment>
            <comment line="208">
                * Method initLocale                
            </comment>
            <comment line="209">
                *                
            </comment>
            <comment line="210">
                * @param languageCode                
            </comment>
            <comment line="211">
                * @param countryCode                
            </comment>
            <comment line="212">
                */                
            </comment>
            <comment line="213">
                public static void initLocale(String languageCode, String countryCode) {                
            </comment>
            <comment line="214">
                                
            </comment>
            <comment line="215">
                if (alreadyInitialized &amp;&amp; languageCode.equals(_languageCode)                
            </comment>
            <comment line="216">
                &amp;&amp; countryCode.equals(_countryCode)) {                
            </comment>
            <comment line="217">
                return;                
            </comment>
            <comment line="218">
                }                
            </comment>
            <comment line="219">
                                
            </comment>
            <comment line="220">
                if ((languageCode != null) &amp;&amp; (countryCode != null)                
            </comment>
            <comment line="221">
                &amp;&amp; (languageCode.length() &gt; 0) &amp;&amp; (countryCode.length() &gt; 0)) {                
            </comment>
            <comment line="222">
                _languageCode = languageCode;                
            </comment>
            <comment line="223">
                _countryCode = countryCode;                
            </comment>
            <comment line="224">
                } else {                
            </comment>
            <comment line="225">
                _countryCode = I18n.defaultCountryCode;                
            </comment>
            <comment line="226">
                _languageCode = I18n.defaultLanguageCode;                
            </comment>
            <comment line="227">
                }                
            </comment>
            <comment line="228">
                                
            </comment>
            <comment line="229">
                I18n.resourceBundle =                
            </comment>
            <comment line="230">
                ResourceBundle.getBundle(Constants.exceptionMessagesResourceBundleBase,                
            </comment>
            <comment line="231">
                new Locale(_languageCode, _countryCode));                
            </comment>
            <comment line="232">
                }                
            </comment>
            <javadoc line="27">
                The Internationalization (I18N) pack.                
                <author>
                    Christian Geuer-Pollmann                    
                </author>
            </javadoc>
            <declaration name="NOT_INITIALIZED_MSG" type="String" line="34"/>
            <javadoc line="34">
                Field NOT_INITIALIZED_MSG                
            </javadoc>
            <declaration name="defaultLanguageCode" type="String" line="40"/>
            <javadoc line="40">
                Field defaultLanguageCode                
            </javadoc>
            <declaration name="defaultCountryCode" type="String" line="43"/>
            <javadoc line="43">
                Field defaultCountryCode                
            </javadoc>
            <declaration name="resourceBundle" type="ResourceBundle" line="46"/>
            <javadoc line="46">
                Field resourceBundle                
            </javadoc>
            <declaration name="alreadyInitialized" type="boolean" line="51"/>
            <javadoc line="51">
                Field alreadyInitialized                
            </javadoc>
            <declaration name="_languageCode" type="String" line="54"/>
            <javadoc line="54">
                Field _languageCode                
            </javadoc>
            <declaration name="_countryCode" type="String" line="57"/>
            <javadoc line="57">
                Field _countryCode                
            </javadoc>
            <javadoc line="60">
                Constructor I18n                
            </javadoc>
            <method name="I18n" type="constructor" line="64">
                <comment line="66">
                    we don&apos;t allow instantiation                    
                </comment>
            </method>
            <javadoc line="69">
                Method translate
                  translates a message ID into an internationalized String, see alse
                  &lt;CODE&gt;XMLSecurityException.getExceptionMEssage()&lt;/CODE&gt;. The strings are
                  stored in the &lt;CODE&gt;ResourceBundle&lt;/CODE&gt;, which is identified in
                  &lt;CODE&gt;exceptionMessagesResourceBundleBase&lt;/CODE&gt;                
                <param>
                    message                    
                </param>
                <param>
                    args is an <CODE>Object[]</CODE> array of strings which are inserted into the String which is retrieved from the <CODE>ResouceBundle</CODE>                    
                </param>
                <return>
                    message translated                    
                </return>
            </javadoc>
            <method name="translate" type="String" line="81">
                <params>
                    <param name="message" type="String"/>
                    <param name="args" type="Object[]"/>
                </params>
            </method>
            <javadoc line="85">
                Method translate
                  translates a message ID into an internationalized String, see alse
                  &lt;CODE&gt;XMLSecurityException.getExceptionMEssage()&lt;/CODE&gt;                
                <param>
                    message                    
                </param>
                <return>
                    message translated                    
                </return>
            </javadoc>
            <method name="translate" type="String" line="94">
                <params>
                    <param name="message" type="String"/>
                </params>
            </method>
            <javadoc line="98">
                Method getExceptionMessage                
                <param>
                    msgID                    
                </param>
                <return>
                    message translated                    
                </return>
            </javadoc>
            <method name="getExceptionMessage" type="String" line="105">
                <params>
                    <param name="msgID" type="String"/>
                </params>
                <scope line="107">
                    <declaration name="s" type="String" line="108"/>
                </scope>
                <scope line="111">
                    <scope line="112"/>
                </scope>
            </method>
            <javadoc line="121">
                Method getExceptionMessage                
                <param>
                    msgID                    
                </param>
                <param>
                    originalException                    
                </param>
                <return>
                    message translated                    
                </return>
            </javadoc>
            <method name="getExceptionMessage" type="String" line="129">
                <params>
                    <param name="msgID" type="String"/>
                    <param name="originalException" type="Exception"/>
                </params>
                <scope line="131">
                    <declaration name="exArgs" type="Object" line="132"/>
                    <declaration name="s" type="String" line="133"/>
                </scope>
                <scope line="137">
                    <scope line="138"/>
                </scope>
            </method>
            <javadoc line="150">
                Method getExceptionMessage                
                <param>
                    msgID                    
                </param>
                <param>
                    exArgs                    
                </param>
                <return>
                    message translated                    
                </return>
            </javadoc>
            <method name="getExceptionMessage" type="String" line="157">
                <params>
                    <param name="msgID" type="String"/>
                    <param name="exArgs" type="Object"/>
                </params>
                <scope line="159">
                    <declaration name="s" type="String" line="160"/>
                </scope>
                <scope line="164">
                    <scope line="165"/>
                </scope>
            </method>
        </class>
    </source>