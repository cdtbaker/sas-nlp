<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.keys.keyresolver.implementations">
        <import package="java.security.Key"/>
        <import package="java.security.PublicKey"/>
        <import package="java.security.cert.X509Certificate"/>
        <import package="javax.crypto.SecretKey"/>
        <import package="com.sun.org.apache.xml.internal.security.encryption.EncryptedKey"/>
        <import package="com.sun.org.apache.xml.internal.security.encryption.XMLCipher"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.keyresolver.KeyResolverSpi"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.storage.StorageResolver"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.EncryptionConstants"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.XMLUtils"/>
        <import package="org.w3c.dom.Element"/>
        <class name="EncryptedKeyResolver" line="38">
            <extends class="KeyResolverSpi"/>
            <javadoc line="38">
                The &lt;code&gt;EncryptedKeyResolver&lt;/code&gt; is not a generic resolver.  It can
                  only be for specific instantiations, as the key being unwrapped will
                  always be of a particular type and will always have been wrapped by
                  another key which needs to be recursively resolved.
                  The &lt;code&gt;EncryptedKeyResolver&lt;/code&gt; can therefore only be instantiated
                  with an algorithm.  It can also be instantiated with a key (the KEK) or
                  will search the static KeyResolvers to find the appropriate key.                
                <author>
                    Berin Lautenbach                    
                </author>
            </javadoc>
            <declaration name="log" type="java.util.logging.Logger" line="53"/>
            <javadoc line="53">
                {@link java.util.logging} logging facility                
            </javadoc>
            <declaration name="_kek" type="Key" line="59"/>
            <declaration name="_algorithm" type="String" line="60"/>
            <javadoc line="62">
                Constructor for use when a KEK needs to be derived from a KeyInfo
                  list                
                <param>
                    algorithm                    
                </param>
            </javadoc>
            <method name="EncryptedKeyResolver" type="constructor" line="67">
                <params>
                    <param name="algorithm" type="String"/>
                </params>
            </method>
            <javadoc line="72">
                Constructor used for when a KEK has been set                
                <param>
                    algorithm                    
                </param>
                <param>
                    kek                    
                </param>
            </javadoc>
            <method name="EncryptedKeyResolver" type="constructor" line="78">
                <params>
                    <param name="algorithm" type="String"/>
                    <param name="kek" type="Key"/>
                </params>
            </method>
            <javadoc line="84">
                @inheritDoc                
            </javadoc>
            <method name="engineLookupAndResolvePublicKey" type="PublicKey" line="86">
                <params>
                    <param name="element" type="Element"/>
                    <param name="BaseURI" type="String"/>
                    <param name="storage" type="StorageResolver"/>
                </params>
            </method>
            <javadoc line="91">
                @inheritDoc                
            </javadoc>
            <method name="engineLookupResolveX509Certificate" type="X509Certificate" line="93">
                <params>
                    <param name="element" type="Element"/>
                    <param name="BaseURI" type="String"/>
                    <param name="storage" type="StorageResolver"/>
                </params>
            </method>
            <javadoc line="97">
                @inheritDoc                
            </javadoc>
            <method name="engineLookupAndResolveSecretKey" type="javax.crypto.SecretKey" line="99">
                <params>
                    <param name="element" type="Element"/>
                    <param name="BaseURI" type="String"/>
                    <param name="storage" type="StorageResolver"/>
                </params>
                <declaration name="key" type="SecretKey" line="100"/>
                <scope line="104"/>
                <declaration name="isEncryptedKey" type="boolean" line="108"/>
                <scope line="111">
                    <scope line="113">
                        <declaration name="cipher" type="XMLCipher" line="114"/>
                        <declaration name="ek" type="EncryptedKey" line="116"/>
                    </scope>
                    <scope line="119"/>
                </scope>
            </method>
        </class>
    </source>