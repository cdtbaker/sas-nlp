<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.transforms.implementations">
        <import package="com.sun.org.apache.xml.internal.security.signature.NodeFilter"/>
        <import package="com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.Transform"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.TransformSpi"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.TransformationException"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.Transforms"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.Constants"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.XMLUtils"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.Node"/>
        <class name="TransformEnvelopedSignature" line="34">
            <extends class="TransformSpi"/>
            <javadoc line="34">
                Implements the &lt;CODE&gt;http://www.w3.org/2000/09/xmldsig#enveloped-signature&lt;/CODE&gt;
                  transform.                
                <author>
                    Christian Geuer-Pollmann                    
                </author>
            </javadoc>
            <declaration name="implementedTransformURI" type="String" line="42"/>
            <javadoc line="42">
                Field implementedTransformURI                
            </javadoc>
            <javadoc line="46">
                Method engineGetURI                
                <inheritDoc>
                                        
                </inheritDoc>
            </javadoc>
            <method name="engineGetURI" type="String" line="51"/>
            <javadoc line="55">
                @inheritDoc                
            </javadoc>
            <method name="enginePerformTransform" type="XMLSignatureInput" line="59">
                <params>
                    <param name="input" type="XMLSignatureInput"/>
                    <param name="_transformObject" type="Transform"/>
                </params>
                <comment line="63">
                    If the actual input is an octet stream, then the application MUST
                     convert the octet stream to an XPath node-set suitable for use by
                     Canonical XML with Comments. (A subsequent application of the
                     REQUIRED Canonical XML algorithm would strip away these comments.)
                    
                     ...
                    
                     The evaluation of this expression includes all of the document&apos;s nodes
                     (including comments) in the node-set representing the octet stream.                    
                </comment>
                <comment line="83">
                                        
                </comment>
                <declaration name="signatureElement" type="Node" line="75"/>
            </method>
            <javadoc line="88">
                @param signatureElement                
                <return>
                    the node that is the signature                    
                </return>
                <throws>
                    TransformationException                    
                </throws>
            </javadoc>
            <method name="searchSignatureElement" type="Node" line="93">
                <params>
                    <param name="signatureElement" type="Node"/>
                </params>
                <declaration name="found" type="boolean" line="94"/>
                <scope line="96">
                    <scope line="98"/>
                    <declaration name="el" type="Element" line="101"/>
                    <scope line="104"/>
                </scope>
                <scope line="112"/>
            </method>
            <class name="EnvelopedNodeFilter" line="118">
                <implements interface="NodeFilter"/>
                <declaration name="exclude" type="Node" line="119"/>
                <method name="EnvelopedNodeFilter" type="constructor" line="120">
                    <params>
                        <param name="n" type="Node"/>
                    </params>
                </method>
                <method name="isNodeIncludeDO" type="int" line="123">
                    <params>
                        <param name="n" type="Node"/>
                        <param name="level" type="int"/>
                    </params>
                </method>
                <javadoc line="128">
                    @see com.sun.org.apache.xml.internal.security.signature.NodeFilter#isNodeInclude(org.w3c.dom.Node)                    
                </javadoc>
                <method name="isNodeInclude" type="int" line="131">
                    <params>
                        <param name="n" type="Node"/>
                    </params>
                    <comment line="135">
                        return !XMLUtils.isDescendantOrSelf(exclude,n);                        
                    </comment>
                </method>
            </class>
        </class>
    </source>