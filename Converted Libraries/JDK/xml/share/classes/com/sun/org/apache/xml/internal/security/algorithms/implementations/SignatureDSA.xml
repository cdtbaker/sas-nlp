<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.algorithms.implementations">
        <import package="java.io.IOException"/>
        <import package="java.security.InvalidAlgorithmParameterException"/>
        <import package="java.security.InvalidKeyException"/>
        <import package="java.security.Key"/>
        <import package="java.security.PrivateKey"/>
        <import package="java.security.PublicKey"/>
        <import package="java.security.SecureRandom"/>
        <import package="java.security.Signature"/>
        <import package="java.security.SignatureException"/>
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <import package="com.sun.org.apache.xml.internal.security.algorithms.JCEMapper"/>
        <import package="com.sun.org.apache.xml.internal.security.algorithms.SignatureAlgorithmSpi"/>
        <import package="com.sun.org.apache.xml.internal.security.signature.XMLSignatureException"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.Base64"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.Constants"/>
        <class name="SignatureDSA" line="17">
            <extends class="SignatureAlgorithmSpi"/>
            <javadoc line="17">
                @author $Author: mullan $                
            </javadoc>
            <declaration name="log" type="java.util.logging.Logger" line="21"/>
            <javadoc line="21">
                {@link java.util.logging} logging facility                
            </javadoc>
            <declaration name="_URI" type="String" line="25"/>
            <javadoc line="25">
                Field _URI                
            </javadoc>
            <declaration name="_signatureAlgorithm" type="java.security.Signature" line="29"/>
            <javadoc line="29">
                Field algorithm                
            </javadoc>
            <javadoc line="33">
                Method engineGetURI                
                <inheritDoc>
                                        
                </inheritDoc>
            </javadoc>
            <method name="engineGetURI" type="String" line="37"/>
            <javadoc line="40">
                Constructor SignatureDSA                
                <throws>
                    XMLSignatureException                    
                </throws>
            </javadoc>
            <method name="SignatureDSA" type="constructor" line="44">
                <declaration name="algorithmID" type="String" line="45"/>
                <declaration name="provider" type="String" line="47"/>
                <scope line="48">
                    <scope line="49"/>
                    <scope line="52"/>
                </scope>
                <scope line="56">
                    <declaration name="exArgs" type="Object[]" line="57"/>
                </scope>
                <scope line="60">
                    <declaration name="exArgs" type="Object[]" line="61"/>
                </scope>
            </method>
            <javadoc line="65">
                @inheritDoc                
            </javadoc>
            <method name="engineSetParameter" type="void" line="68">
                <params>
                    <param name="params" type="AlgorithmParameterSpec"/>
                </params>
                <scope line="69"/>
                <scope line="72"/>
            </method>
            <javadoc line="76">
                @inheritDoc                
            </javadoc>
            <method name="engineVerify" type="boolean" line="79">
                <params>
                    <param name="signature" type="byte[]"/>
                </params>
                <scope line="80">
                    <declaration name="jcebytes" type="byte[]" line="82"/>
                </scope>
                <scope line="85"/>
                <scope line="88"/>
            </method>
            <javadoc line="92">
                @inheritDoc                
            </javadoc>
            <method name="engineInitVerify" type="void" line="95">
                <params>
                    <param name="publicKey" type="Key"/>
                </params>
                <scope line="96">
                    <declaration name="supplied" type="String" line="97"/>
                    <declaration name="needed" type="String" line="98"/>
                    <declaration name="exArgs" type="Object" line="99"/>
                </scope>
                <scope line="102"/>
                <scope line="105">
                    <declaration name="sig" type="Signature" line="106"/>
                    <scope line="107"/>
                    <scope line="110">
                        <scope line="111"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="119">
                @inheritDoc                
            </javadoc>
            <method name="engineSign" type="byte[]" line="122">
                <scope line="123">
                    <declaration name="jcebytes" type="byte" line="124"/>
                </scope>
                <scope line="127"/>
                <scope line="130"/>
            </method>
            <javadoc line="134">
                @inheritDoc                
            </javadoc>
            <method name="engineInitSign" type="void" line="137">
                <params>
                    <param name="privateKey" type="Key"/>
                    <param name="secureRandom" type="SecureRandom"/>
                </params>
                <scope line="138">
                    <declaration name="supplied" type="String" line="139"/>
                    <declaration name="needed" type="String" line="140"/>
                    <declaration name="exArgs" type="Object" line="141"/>
                </scope>
                <scope line="144"/>
                <scope line="147"/>
            </method>
            <javadoc line="151">
                @inheritDoc                
            </javadoc>
            <method name="engineInitSign" type="void" line="154">
                <params>
                    <param name="privateKey" type="Key"/>
                </params>
                <scope line="155">
                    <declaration name="supplied" type="String" line="156"/>
                    <declaration name="needed" type="String" line="157"/>
                    <declaration name="exArgs" type="Object" line="158"/>
                </scope>
                <scope line="161"/>
                <scope line="164"/>
            </method>
            <javadoc line="168">
                @inheritDoc                
            </javadoc>
            <method name="engineUpdate" type="void" line="171">
                <params>
                    <param name="input" type="byte[]"/>
                </params>
                <scope line="172"/>
                <scope line="175"/>
            </method>
            <javadoc line="179">
                @inheritDoc                
            </javadoc>
            <method name="engineUpdate" type="void" line="182">
                <params>
                    <param name="input" type="byte"/>
                </params>
                <scope line="183"/>
                <scope line="186"/>
            </method>
            <javadoc line="190">
                @inheritDoc                
            </javadoc>
            <method name="engineUpdate" type="void" line="193">
                <params>
                    <param name="buf" type="byte"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="194"/>
                <scope line="197"/>
            </method>
            <javadoc line="201">
                Method engineGetJCEAlgorithmString                
                <inheritDoc>
                                        
                </inheritDoc>
            </javadoc>
            <method name="engineGetJCEAlgorithmString" type="String" line="205"/>
            <javadoc line="208">
                Method engineGetJCEProviderName                
                <inheritDoc>
                                        
                </inheritDoc>
            </javadoc>
            <method name="engineGetJCEProviderName" type="String" line="212"/>
            <javadoc line="215">
                Converts an ASN.1 DSA value to a XML Signature DSA Value.
                  The JAVA JCE DSA Signature algorithm creates ASN.1 encoded (r,s) value
                  pairs; the XML Signature requires the core BigInteger values.                
                <param>
                    asn1Bytes                    
                </param>
                <return>
                    the decode bytes                    
                </return>
                <throws>
                    IOException                    
                </throws>
                <see>
                    <A HREF="http://www.w3.org/TR/xmldsig-core/#dsa-sha1">6.4.1 DSA</A>                    
                </see>
            </javadoc>
            <method name="convertASN1toXMLDSIG" type="byte[]" line="224">
                <params>
                    <param name="asn1Bytes" type="byte"/>
                </params>
                <declaration name="rLength" type="byte" line="225"/>
                <declaration name="i" type="int" line="226"/>
                <declaration name="sLength" type="byte" line="228"/>
                <declaration name="j" type="int" line="229"/>
                <scope line="231"/>
                <declaration name="xmldsigBytes" type="byte" line="234"/>
            </method>
            <javadoc line="239">
                Converts a XML Signature DSA Value to an ASN.1 DSA value.
                  The JAVA JCE DSA Signature algorithm creates ASN.1 encoded (r,s) value
                  pairs; the XML Signature requires the core BigInteger values.                
                <param>
                    xmldsigBytes                    
                </param>
                <return>
                    the encoded ASN.1 bytes                    
                </return>
                <throws>
                    IOException                    
                </throws>
                <see>
                    <A HREF="http://www.w3.org/TR/xmldsig-core/#dsa-sha1">6.4.1 DSA</A>                    
                </see>
            </javadoc>
            <method name="convertXMLDSIGtoASN1" type="byte[]" line="248">
                <params>
                    <param name="xmldsigBytes" type="byte"/>
                </params>
                <scope line="249"/>
                <declaration name="i" type="int" line="252"/>
                <declaration name="j" type="int" line="254"/>
                <scope line="255"/>
                <declaration name="k" type="int" line="258"/>
                <declaration name="l" type="int" line="260"/>
                <scope line="261"/>
                <declaration name="asn1Bytes" type="byte" line="264"/>
            </method>
            <javadoc line="275">
                Method engineSetHMACOutputLength                
                <param>
                    HMACOutputLength                    
                </param>
                <throws>
                    XMLSignatureException                    
                </throws>
            </javadoc>
            <method name="engineSetHMACOutputLength" type="void" line="280">
                <params>
                    <param name="HMACOutputLength" type="int"/>
                </params>
            </method>
            <javadoc line="283">
                Method engineInitSign                
                <param>
                    signingKey                    
                </param>
                <param>
                    algorithmParameterSpec                    
                </param>
                <throws>
                    XMLSignatureException                    
                </throws>
            </javadoc>
            <method name="engineInitSign" type="void" line="289">
                <params>
                    <param name="signingKey" type="Key"/>
                    <param name="algorithmParameterSpec" type="AlgorithmParameterSpec"/>
                </params>
            </method>
        </class>
    </source>