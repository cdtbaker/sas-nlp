<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.c14n.implementations">
        <import package="java.io.IOException"/>
        <import package="java.net.URI"/>
        <import package="java.net.URISyntaxException"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collection"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.util.Set"/>
        <import package="java.util.SortedSet"/>
        <import package="java.util.TreeSet"/>
        <import package="javax.xml.parsers.ParserConfigurationException"/>
        <import package="org.w3c.dom.Attr"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.NamedNodeMap"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.xml.sax.SAXException"/>
        <import package="java.util.logging.Logger"/>
        <import package="java.util.logging.Logger"/>
        <import package="com.sun.org.apache.xml.internal.security.c14n.CanonicalizationException"/>
        <import package="com.sun.org.apache.xml.internal.security.c14n.helper.C14nHelper"/>
        <import package="com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.Constants"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.XMLUtils"/>
        <class name="Canonicalizer11" line="51">
            <extends class="CanonicalizerBase"/>
            <javadoc line="51">
                Implements &lt;A HREF=&quot;http://www.w3.org/TR/2008/PR-xml-c14n11-20080129/&quot;&gt;
                  Canonical XML Version 1.1&lt;/A&gt;, a W3C Proposed Recommendation from 29
                  January 2008.                
                <author>
                    Sean Mullan                    
                </author>
                <author>
                    Raul Benito                    
                </author>
                <version>
                    $Revision: 1.2 $                    
                </version>
            </javadoc>
            <declaration name="firstCall" type="boolean" line="61"/>
            <declaration name="result" type="SortedSet" line="62"/>
            <declaration name="XMLNS_URI" type="String" line="63"/>
            <declaration name="XML_LANG_URI" type="String" line="64"/>
            <declaration name="log" type="Logger" line="66"/>
            <class name="XmlAttrStack" line="68">
                <declaration name="currentLevel" type="int" line="69"/>
                <declaration name="lastlevel" type="int" line="70"/>
                <declaration name="cur" type="XmlsStackElement" line="71"/>
                <class name="XmlsStackElement" line="72">
                    <declaration name="level" type="int" line="73"/>
                    <declaration name="rendered" type="boolean" line="74"/>
                    <declaration name="nodes" type="List" line="75"/>
                </class>
                <declaration name="levels" type="List" line="77"/>
                <method name="push" type="void" line="78">
                    <params>
                        <param name="level" type="int"/>
                    </params>
                    <scope line="83">
                        <scope line="85"/>
                    </scope>
                </method>
                <method name="addXmlnsAttr" type="void" line="92">
                    <params>
                        <param name="n" type="Attr"/>
                    </params>
                    <scope line="93"/>
                </method>
                <method name="getXmlnsAttr" type="void" line="101">
                    <params>
                        <param name="col" type="Collection"/>
                    </params>
                    <scope line="102"/>
                    <declaration name="size" type="int" line="108"/>
                    <declaration name="parentRendered" type="boolean" line="109"/>
                    <declaration name="e" type="XmlsStackElement" line="110"/>
                    <scope line="111"/>
                    <scope line="113"/>
                    <scope line="118"/>
                    <declaration name="loa" type="Map" line="124"/>
                    <declaration name="baseAttrs" type="List" line="125"/>
                    <declaration name="successiveOmitted" type="boolean" line="126"/>
                    <scope line="127">
                        <scope line="129"/>
                        <declaration name="it" type="Iterator" line="132"/>
                        <scope line="133">
                            <declaration name="n" type="Attr" line="134"/>
                            <scope line="135">
                                <scope line="136"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="143">
                        <declaration name="it" type="Iterator" line="144"/>
                        <declaration name="base" type="String" line="145"/>
                        <declaration name="baseAttr" type="Attr" line="146"/>
                        <scope line="147">
                            <declaration name="n" type="Attr" line="148"/>
                            <scope line="149"/>
                        </scope>
                        <scope line="156">
                            <declaration name="n" type="Attr" line="157"/>
                            <scope line="158"/>
                            <scope line="161">
                                <scope line="162"/>
                                <scope line="164"/>
                            </scope>
                        </scope>
                        <scope line="169"/>
                    </scope>
                </method>
            </class>
            <declaration name="xmlattrStack" type="XmlAttrStack" line="179"/>
            <javadoc line="181">
                Constructor Canonicalizer11                
                <param>
                    includeComments                    
                </param>
            </javadoc>
            <method name="Canonicalizer11" type="constructor" line="186">
                <params>
                    <param name="includeComments" type="boolean"/>
                </params>
            </method>
            <javadoc line="190">
                Returns the Attr[]s to be outputted for the given element.
                  &lt;br&gt;
                  The code of this method is a copy of {@link #handleAttributes(Element,NameSpaceSymbTable)},
                  whereas it takes into account that subtree-c14n is -- well --
                  subtree-based.
                  So if the element in question isRoot of c14n, it&apos;s parent is not in the
                  node set, as well as all other ancestors.                
                <param>
                    E                    
                </param>
                <param>
                    ns                    
                </param>
                <return>
                    the Attr[]s to be outputted                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="handleAttributesSubtree" type="Iterator" line="206">
                <params>
                    <param name="E" type="Element"/>
                    <param name="ns" type="NameSpaceSymbTable"/>
                </params>
                <comment line="211">
                    result will contain the attrs which have to be outputted                    
                </comment>
                <comment line="222">
                    It&apos;s not a namespace attr node. Add to the result and
                     continue.                    
                </comment>
                <comment line="232">
                    The default mapping for xml must not be output.                    
                </comment>
                <comment line="239">
                    Render the ns definition                    
                </comment>
                <comment line="250">
                    It is the first node of the subtree
                     Obtain all the namespaces defined in the parents, and added
                     to the output.                    
                </comment>
                <comment line="254">
                    output the attributes in the xml namespace.                    
                </comment>
                <scope line="207"/>
                <declaration name="result" type="SortedSet" line="211"/>
                <declaration name="attrs" type="NamedNodeMap" line="213"/>
                <declaration name="attrsLength" type="int" line="214"/>
                <scope line="216">
                    <declaration name="N" type="Attr" line="217"/>
                    <declaration name="NUri" type="String" line="218"/>
                    <scope line="220"/>
                    <declaration name="NName" type="String" line="227"/>
                    <declaration name="NValue" type="String" line="228"/>
                    <scope line="230"/>
                    <declaration name="n" type="Node" line="235"/>
                    <scope line="237">
                        <scope line="240">
                            <declaration name="exArgs" type="Object" line="241"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="248"/>
            </method>
            <javadoc line="261">
                Returns the Attr[]s to be outputted for the given element.
                  &lt;br&gt;
                  IMPORTANT: This method expects to work on a modified DOM tree, i.e. a
                  DOM which has been prepared using{@link com.sun.org.apache.xml.internal.security.utils.XMLUtils#circumventBug2650(org.w3c.dom.Document)}.                
                <param>
                    E                    
                </param>
                <param>
                    ns                    
                </param>
                <return>
                    the Attr[]s to be outputted                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="handleAttributes" type="Iterator" line="275">
                <params>
                    <param name="E" type="Element"/>
                    <param name="ns" type="NameSpaceSymbTable"/>
                </params>
                <comment line="277">
                    result will contain the attrs which have to be output                    
                </comment>
                <comment line="295">
                    A non namespace definition node.                    
                </comment>
                <comment line="299">
                    treat xml:id like any other attribute
                     (emit it, but don&apos;t inherit it)                    
                </comment>
                <comment line="307">
                    The node is visible add the attribute to the list of
                     output attributes.                    
                </comment>
                <comment line="311">
                    keep working                    
                </comment>
                <comment line="319">
                    except omit namespace node with local name xml, which defines
                     the xml prefix, if its string value is
                     http:www.w3.orgXML1998namespace.                    
                </comment>
                <comment line="325">
                    add the prefix binding to the ns symb table.
                     ns.addInclusiveMapping(NName,NValue,N,isRealVisible);                    
                </comment>
                <comment line="331">
                    The xpath select this node output it if needed.
                     Node n = ns.addMappingAndRenderXNodeSet
                          (NName, NValue, N, isRealVisible);                    
                </comment>
                <comment line="353">
                    The element is visible, handle the xmlns definition                    
                </comment>
                <comment line="357">
                    No xmlns def just get the already defined.                    
                </comment>
                <comment line="360">
                    There is a defn but the xmlns is not selected by the xpath.
                     then xmlns=&quot;&quot;                    
                </comment>
                <comment line="364">
                    output the xmlns def if needed.                    
                </comment>
                <comment line="368">
                    Float all xml:* attributes of the unselected parent elements to
                     this one. addXmlAttributes(E,result);                    
                </comment>
                <declaration name="isRealVisible" type="boolean" line="278"/>
                <declaration name="attrs" type="NamedNodeMap" line="279"/>
                <declaration name="attrsLength" type="int" line="280"/>
                <scope line="281"/>
                <declaration name="result" type="SortedSet" line="286"/>
                <scope line="289">
                    <declaration name="N" type="Attr" line="290"/>
                    <declaration name="NUri" type="String" line="291"/>
                    <scope line="293">
                        <scope line="295">
                            <scope line="296">
                                <scope line="297"/>
                            </scope>
                            <scope line="302"/>
                        </scope>
                        <scope line="305"/>
                    </scope>
                    <declaration name="NName" type="String" line="314"/>
                    <declaration name="NValue" type="String" line="315"/>
                    <scope line="317"/>
                    <scope line="326">
                        <scope line="327"/>
                        <declaration name="n" type="Node" line="333"/>
                        <scope line="334">
                            <scope line="336">
                                <declaration name="exArgs" type="Object" line="337"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="343">
                        <scope line="344"/>
                        <scope line="346"/>
                    </scope>
                </scope>
                <scope line="351">
                    <declaration name="xmlns" type="Attr" line="353"/>
                    <declaration name="n" type="Node" line="354"/>
                    <scope line="355"/>
                    <scope line="358"/>
                    <scope line="364"/>
                </scope>
            </method>
            <javadoc line="376">
                Always throws a CanonicalizationException because this is inclusive c14n.                
                <param>
                    xpathNodeSet                    
                </param>
                <param>
                    inclusiveNamespaces                    
                </param>
                <return>
                    none it always fails                    
                </return>
                <throws>
                    CanonicalizationException always                    
                </throws>
            </javadoc>
            <method name="engineCanonicalizeXPathNodeSet" type="byte[]" line="385">
                <params>
                    <param name="xpathNodeSet" type="Set"/>
                    <param name="inclusiveNamespaces" type="String"/>
                </params>
            </method>
            <javadoc line="390">
                Always throws a CanonicalizationException because this is inclusive c14n.                
                <param>
                    rootNode                    
                </param>
                <param>
                    inclusiveNamespaces                    
                </param>
                <return>
                    none it always fails                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="engineCanonicalizeSubTree" type="byte[]" line="399">
                <params>
                    <param name="rootNode" type="Node"/>
                    <param name="inclusiveNamespaces" type="String"/>
                </params>
            </method>
            <method name="circumventBugIfNeeded" type="void" line="406">
                <params>
                    <param name="input" type="XMLSignatureInput"/>
                </params>
                <declaration name="doc" type="Document" line="409"/>
                <scope line="410"/>
                <scope line="412"/>
            </method>
            <method name="handleParent" type="void" line="418">
                <params>
                    <param name="e" type="Element"/>
                    <param name="ns" type="NameSpaceSymbTable"/>
                </params>
                <comment line="429">
                    Not a namespace definition, ignore.                    
                </comment>
                <scope line="419"/>
                <declaration name="attrs" type="NamedNodeMap" line="423"/>
                <declaration name="attrsLength" type="int" line="424"/>
                <scope line="425">
                    <declaration name="N" type="Attr" line="426"/>
                    <scope line="427">
                        <scope line="429"/>
                    </scope>
                    <declaration name="NName" type="String" line="435"/>
                    <declaration name="NValue" type="String" line="436"/>
                    <scope line="438"/>
                </scope>
            </method>
            <method name="joinURI" type="String" line="446">
                <params>
                    <param name="baseURI" type="String"/>
                    <param name="relativeURI" type="String"/>
                </params>
                <comment line="452">
                    Is this correct?                    
                </comment>
                <comment line="454">
                    pre-parse the baseURI                    
                </comment>
                <declaration name="bscheme" type="String" line="447"/>
                <declaration name="bauthority" type="String" line="448"/>
                <declaration name="bpath" type="String" line="449"/>
                <declaration name="bquery" type="String" line="450"/>
                <declaration name="bfragment" type="String" line="451"/>
                <scope line="454">
                    <scope line="455"/>
                    <declaration name="base" type="URI" line="458"/>
                </scope>
                <declaration name="r" type="URI" line="466"/>
                <declaration name="rscheme" type="String" line="467"/>
                <declaration name="rauthority" type="String" line="468"/>
                <declaration name="rpath" type="String" line="469"/>
                <declaration name="rquery" type="String" line="470"/>
                <declaration name="rfragment" type="String" line="471"/>
                <declaration name="tscheme" type="String" line="473"/>
                <scope line="474"/>
                <scope line="477"/>
                <scope line="482">
                    <scope line="483"/>
                    <scope line="487">
                        <scope line="488">
                            <scope line="490"/>
                            <scope line="492"/>
                        </scope>
                        <scope line="495">
                            <scope line="496"/>
                            <scope line="498">
                                <scope line="499"/>
                                <scope line="501">
                                    <declaration name="last" type="int" line="502"/>
                                    <scope line="503"/>
                                    <scope line="505"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="removeDotSegments" type="String" line="521">
                <params>
                    <param name="path" type="String"/>
                </params>
                <comment line="526">
                    1. The input buffer is initialized with the now-appended path
                     components then replace occurrences of &quot;&quot; in the input buffer
                     with &quot;/&quot; until no more occurrences of &quot;&quot; are in the input buffer.                    
                </comment>
                <comment line="534">
                    Initialize the output buffer with the empty string.                    
                </comment>
                <comment line="537">
                    If the input buffer starts with a root slash &quot;/&quot; then move this
                     character to the output buffer.                    
                </comment>
                <comment line="546">
                    While the input buffer is not empty, loop as follows                    
                </comment>
                <comment line="548">
                    2A. If the input buffer begins with a prefix of &quot;./&quot;,
                     then remove that prefix from the input buffer
                     else if the input buffer begins with a prefix of &quot;../&quot;, then
                     if also the output does not contain the root slash &quot;/&quot; only,
                     then move this prefix to the end of the output buffer else
                     remove that prefix                    
                </comment>
                <comment line="563">
                    2B. if the input buffer begins with a prefix of &quot;/./&quot; or &quot;/.&quot;,
                     where &quot;.&quot; is a complete path segment, then replace that prefix
                     with &quot;/&quot; in the input buffer; otherwise,                    
                </comment>
                <comment line="570">
                    FIXME: what is complete path segment?                    
                </comment>
                <comment line="573">
                    2C. if the input buffer begins with a prefix of &quot;/../&quot; or &quot;/..&quot;,
                     where &quot;..&quot; is a complete path segment, then replace that prefix
                     with &quot;/&quot; in the input buffer and if also the output buffer is
                     empty, last segment in the output buffer equals &quot;../&quot; or &quot;..&quot;,
                     where &quot;..&quot; is a complete path segment, then append &quot;..&quot; or &quot;/..&quot;
                     for the latter case respectively to the output buffer else
                     remove the last segment and its preceding &quot;/&quot; (if any) from the
                     output buffer and if hereby the first character in the output
                     buffer was removed and it was not the root slash then delete a
                     leading slash from the input buffer; otherwise,                    
                </comment>
                <comment line="604">
                    FIXME: what is complete path segment?                    
                </comment>
                <comment line="624">
                    2D. if the input buffer consists only of &quot;.&quot;, then remove
                     that from the input buffer else if the input buffer consists
                     only of &quot;..&quot; and if the output buffer does not contain only
                     the root slash &quot;/&quot;, then move the &quot;..&quot; to the output buffer
                     else delte it.; otherwise,                    
                </comment>
                <comment line="637">
                    2E. move the first path segment (if any) in the input buffer
                     to the end of the output buffer, including the initial &quot;/&quot;
                     character (if any) and any subsequent characters up to, but not
                     including, the next &quot;/&quot; character or the end of the input buffer.                    
                </comment>
                <comment line="663">
                    3. Finally, if the only or last segment of the output buffer is
                     &quot;..&quot;, where &quot;..&quot; is a complete path segment not followed by a slash
                     then append a slash &quot;/&quot;. The output buffer is returned as the result
                     of remove_dot_segments                    
                </comment>
                <declaration name="input" type="String" line="528"/>
                <scope line="529"/>
                <declaration name="output" type="StringBuffer" line="534"/>
                <scope line="538"/>
                <scope line="546">
                    <scope line="553"/>
                    <scope line="556">
                        <scope line="558"/>
                    </scope>
                    <scope line="565"/>
                    <scope line="568"/>
                    <scope line="582">
                        <scope line="584"/>
                        <scope line="586"/>
                        <scope line="588"/>
                        <scope line="590">
                            <declaration name="index" type="int" line="591"/>
                            <scope line="592">
                                <scope line="594"/>
                            </scope>
                            <scope line="597"/>
                        </scope>
                    </scope>
                    <scope line="602">
                        <scope line="605"/>
                        <scope line="607"/>
                        <scope line="609"/>
                        <scope line="611">
                            <declaration name="index" type="int" line="612"/>
                            <scope line="613">
                                <scope line="615"/>
                            </scope>
                            <scope line="618"/>
                        </scope>
                    </scope>
                    <scope line="628"/>
                    <scope line="631"/>
                    <scope line="640">
                        <declaration name="end" type="int" line="641"/>
                        <declaration name="begin" type="int" line="642"/>
                        <scope line="643"/>
                        <scope line="645"/>
                        <declaration name="segment" type="String" line="649"/>
                        <scope line="650"/>
                        <scope line="653"/>
                    </scope>
                </scope>
                <scope line="666"/>
            </method>
            <method name="printStep" type="void" line="674">
                <params>
                    <param name="step" type="String"/>
                    <param name="output" type="String"/>
                    <param name="input" type="String"/>
                </params>
                <scope line="675">
                    <scope line="677"/>
                    <scope line="679"/>
                </scope>
            </method>
        </class>
    </source>