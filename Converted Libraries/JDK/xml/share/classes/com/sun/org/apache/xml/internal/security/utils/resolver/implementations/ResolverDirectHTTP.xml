<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.utils.resolver.implementations">
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.net.MalformedURLException"/>
        <import package="java.net.URL"/>
        <import package="java.net.URLConnection"/>
        <import package="com.sun.org.apache.xml.internal.utils.URI"/>
        <import package="com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.Base64"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.resolver.ResourceResolverException"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.resolver.ResourceResolverSpi"/>
        <import package="org.w3c.dom.Attr"/>
        <class name="ResolverDirectHTTP" line="14">
            <extends class="ResourceResolverSpi"/>
            <javadoc line="14">
                A simple ResourceResolver for HTTP requests. This class handles only &apos;pure&apos;
                  HTTP URIs which means without a fragment. The Fragment handling is done by the{@link ResolverFragment} class.
                  &lt;BR&gt;
                  If the user has a corporate HTTP proxy which is to be used, the usage can be
                  switched on by setting properties for the resolver:
                  &lt;PRE&gt;
                  resourceResolver.setProperty(&quot;http.proxy.host&quot;, &quot;proxy.company.com&quot;);
                  resourceResolver.setProperty(&quot;http.proxy.port&quot;, &quot;8080&quot;);
                  // if we need a password for the proxy
                  resourceResolver.setProperty(&quot;http.proxy.username&quot;, &quot;proxyuser3&quot;);
                  resourceResolver.setProperty(&quot;http.proxy.password&quot;, &quot;secretca&quot;);
                  &lt;/PRE&gt;                
                <author>
                    $Author: mullan $                    
                </author>
                <see>
                    <A HREF="http://www.javaworld.com/javaworld/javatips/jw-javatip42_p.html">Java Tip 42: Write Java apps that work with proxy-based firewalls</A>                    
                </see>
                <see>
                    <A HREF="http://java.sun.com/j2se/1.4/docs/guide/net/properties.html">SUN J2SE docs for network properties</A>                    
                </see>
                <see>
                    <A HREF="http://metalab.unc.edu/javafaq/javafaq.html#proxy">The JAVA FAQ Question 9.5: How do I make Java work with a proxy server?</A>
                      $todo$ the proxy behaviour seems not to work; if a on-existing proxy is set, it works ?!?                    
                </see>
            </javadoc>
            <declaration name="log" type="java.util.logging.Logger" line="34"/>
            <javadoc line="34">
                {@link java.util.logging} logging facility                
            </javadoc>
            <declaration name="properties" type="String" line="38"/>
            <javadoc line="38">
                Field properties[]                
            </javadoc>
            <declaration name="HttpProxyHost" type="int" line="42"/>
            <javadoc line="42">
                Field HttpProxyHost                
            </javadoc>
            <declaration name="HttpProxyPort" type="int" line="46"/>
            <javadoc line="46">
                Field HttpProxyPort                
            </javadoc>
            <declaration name="HttpProxyUser" type="int" line="50"/>
            <javadoc line="50">
                Field HttpProxyUser                
            </javadoc>
            <declaration name="HttpProxyPass" type="int" line="54"/>
            <javadoc line="54">
                Field HttpProxyPass                
            </javadoc>
            <declaration name="HttpBasicUser" type="int" line="58"/>
            <javadoc line="58">
                Field HttpProxyUser                
            </javadoc>
            <declaration name="HttpBasicPass" type="int" line="62"/>
            <javadoc line="62">
                Field HttpProxyPass                
            </javadoc>
            <method name="engineIsThreadSafe" type="boolean" line="66"/>
            <javadoc line="69">
                Method resolve                
                <param>
                    uri                    
                </param>
                <param>
                    BaseURI                    
                </param>
                <throws>
                    ResourceResolverException                    
                </throws>
                <return$todo$>
                    calculate the correct URI from the attribute and the BaseURI                    
                </return$todo$>
            </javadoc>
            <method name="engineResolve" type="XMLSignatureInput" line="76">
                <params>
                    <param name="uri" type="Attr"/>
                    <param name="BaseURI" type="String"/>
                </params>
                <scope line="77">
                    <declaration name="useProxy" type="boolean" line="78"/>
                    <declaration name="proxyHost" type="String" line="79"/>
                    <declaration name="proxyPort" type="String" line="80"/>
                    <scope line="81"/>
                    <declaration name="oldProxySet" type="String" line="84"/>
                    <declaration name="oldProxyHost" type="String" line="85"/>
                    <declaration name="oldProxyPort" type="String" line="86"/>
                    <scope line="87">
                        <scope line="88"/>
                    </scope>
                    <declaration name="switchBackProxy" type="boolean" line="98"/>
                    <declaration name="uriNew" type="URI" line="99"/>
                    <declaration name="uriNewNoFrag" type="URI" line="100"/>
                    <declaration name="url" type="URL" line="102"/>
                    <declaration name="urlConnection" type="URLConnection" line="103"/>
                    <scope line="104">
                        <declaration name="proxyUser" type="String" line="105"/>
                        <declaration name="proxyPass" type="String" line="106"/>
                        <scope line="107">
                            <declaration name="password" type="String" line="108"/>
                            <declaration name="encodedPassword" type="String" line="109"/>
                        </scope>
                    </scope>
                    <scope line="113">
                        <declaration name="auth" type="String" line="114"/>
                        <scope line="115">
                            <scope line="116">
                                <declaration name="user" type="String" line="117"/>
                                <declaration name="pass" type="String" line="118"/>
                                <scope line="119">
                                    <declaration name="password" type="String" line="121"/>
                                    <declaration name="encodedPassword" type="String" line="122"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <declaration name="mimeType" type="String" line="128"/>
                    <declaration name="inputStream" type="InputStream" line="129"/>
                    <declaration name="baos" type="ByteArrayOutputStream" line="130"/>
                    <declaration name="buf" type="byte" line="131"/>
                    <declaration name="read" type="int" line="132"/>
                    <declaration name="summarized" type="int" line="133"/>
                    <scope line="134"/>
                    <declaration name="result" type="XMLSignatureInput" line="139"/>
                    <scope line="142"/>
                </scope>
                <scope line="149"/>
                <scope line="152"/>
            </method>
            <javadoc line="156">
                We resolve http URIs &lt;I&gt;without&lt;/I&gt; fragment...                
                <param>
                    uri                    
                </param>
                <param>
                    BaseURI                    
                </param>
                <return>
                    true if can be resolved                    
                </return>
            </javadoc>
            <method name="engineCanResolve" type="boolean" line="162">
                <params>
                    <param name="uri" type="Attr"/>
                    <param name="BaseURI" type="String"/>
                </params>
                <scope line="163"/>
                <declaration name="uriNodeValue" type="String" line="167"/>
                <scope line="168"/>
                <scope line="172"/>
                <scope line="175">
                    <scope line="176"/>
                </scope>
                <scope line="181"/>
            </method>
            <javadoc line="186">
                @inheritDoc                
            </javadoc>
            <method name="engineGetPropertyKeys" type="String[]" line="189"/>
            <method name="getNewURI" type="URI" line="192">
                <params>
                    <param name="uri" type="String"/>
                    <param name="BaseURI" type="String"/>
                </params>
                <scope line="193"/>
            </method>
        </class>
    </source>