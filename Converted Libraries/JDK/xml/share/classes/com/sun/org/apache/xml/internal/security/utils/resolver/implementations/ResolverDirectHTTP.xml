<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.utils.resolver.implementations">
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.net.MalformedURLException"/>
        <import package="java.net.URL"/>
        <import package="java.net.URLConnection"/>
        <import package="com.sun.org.apache.xml.internal.utils.URI"/>
        <import package="com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.Base64"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.resolver.ResourceResolverException"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.resolver.ResourceResolverSpi"/>
        <import package="org.w3c.dom.Attr"/>
        <class name="ResolverDirectHTTP" line="38">
            <extends class="ResourceResolverSpi"/>
            <javadoc line="38">
                A simple ResourceResolver for HTTP requests. This class handles only &apos;pure&apos;
                  HTTP URIs which means without a fragment. The Fragment handling is done by the{@link ResolverFragment} class.
                  &lt;BR&gt;
                  If the user has a corporate HTTP proxy which is to be used, the usage can be
                  switched on by setting properties for the resolver:
                  &lt;PRE&gt;
                  resourceResolver.setProperty(&quot;http.proxy.host&quot;, &quot;proxy.company.com&quot;);
                  resourceResolver.setProperty(&quot;http.proxy.port&quot;, &quot;8080&quot;);
                  // if we need a password for the proxy
                  resourceResolver.setProperty(&quot;http.proxy.username&quot;, &quot;proxyuser3&quot;);
                  resourceResolver.setProperty(&quot;http.proxy.password&quot;, &quot;secretca&quot;);
                  &lt;/PRE&gt;                
                <author>
                    $Author: mullan $                    
                </author>
                <see>
                    <A HREF="http://www.javaworld.com/javaworld/javatips/jw-javatip42_p.html">Java Tip 42: Write Java apps that work with proxy-based firewalls</A>                    
                </see>
                <see>
                    <A HREF="http://java.sun.com/j2se/1.4/docs/guide/net/properties.html">SUN J2SE docs for network properties</A>                    
                </see>
                <see>
                    <A HREF="http://metalab.unc.edu/javafaq/javafaq.html#proxy">The JAVA FAQ Question 9.5: How do I make Java work with a proxy server?</A>
                      $todo$ the proxy behaviour seems not to work; if a on-existing proxy is set, it works ?!?                    
                </see>
            </javadoc>
            <declaration name="log" type="java.util.logging.Logger" line="63"/>
            <javadoc line="63">
                {@link java.util.logging} logging facility                
            </javadoc>
            <declaration name="properties" type="String" line="68"/>
            <javadoc line="68">
                Field properties[]                
            </javadoc>
            <declaration name="HttpProxyHost" type="int" line="76"/>
            <javadoc line="76">
                Field HttpProxyHost                
            </javadoc>
            <declaration name="HttpProxyPort" type="int" line="79"/>
            <javadoc line="79">
                Field HttpProxyPort                
            </javadoc>
            <declaration name="HttpProxyUser" type="int" line="82"/>
            <javadoc line="82">
                Field HttpProxyUser                
            </javadoc>
            <declaration name="HttpProxyPass" type="int" line="85"/>
            <javadoc line="85">
                Field HttpProxyPass                
            </javadoc>
            <declaration name="HttpBasicUser" type="int" line="88"/>
            <javadoc line="88">
                Field HttpProxyUser                
            </javadoc>
            <declaration name="HttpBasicPass" type="int" line="91"/>
            <javadoc line="91">
                Field HttpProxyPass                
            </javadoc>
            <method name="engineIsThreadSafe" type="boolean" line="94"/>
            <javadoc line="97">
                Method resolve                
                <param>
                    uri                    
                </param>
                <param>
                    BaseURI                    
                </param>
                <throws>
                    ResourceResolverException                    
                </throws>
                <return>
                    $todo$ calculate the correct URI from the attribute and the BaseURI                    
                </return>
            </javadoc>
            <method name="engineResolve" type="XMLSignatureInput" line="108">
                <params>
                    <param name="uri" type="Attr"/>
                    <param name="BaseURI" type="String"/>
                </params>
                <comment line="127">
                    switch on proxy usage                    
                </comment>
                <comment line="145">
                    calculate new URI                    
                </comment>
                <comment line="148">
                    if the URI contains a fragment, ignore it                    
                </comment>
                <comment line="158">
                    set proxy pass                    
                </comment>
                <comment line="170">
                    or was it Proxy-Authenticate ?                    
                </comment>
                <comment line="178">
                    check if Basic authentication is required                    
                </comment>
                <comment line="183">
                    do http basic authentication                    
                </comment>
                <comment line="199">
                    set authentication property in the http header                    
                </comment>
                <comment line="226">
                    XMLSignatureInput result = new XMLSignatureInput(inputStream);                    
                </comment>
                <comment line="230">
                    switch off proxy usage                    
                </comment>
                <scope line="110">
                    <declaration name="useProxy" type="boolean" line="111"/>
                    <declaration name="proxyHost" type="String" line="112"/>
                    <declaration name="proxyPort" type="String" line="115"/>
                    <scope line="119"/>
                    <declaration name="oldProxySet" type="String" line="123"/>
                    <declaration name="oldProxyHost" type="String" line="124"/>
                    <declaration name="oldProxyPort" type="String" line="125"/>
                    <scope line="127">
                        <scope line="128"/>
                    </scope>
                    <declaration name="switchBackProxy" type="boolean" line="140"/>
                    <declaration name="uriNew" type="URI" line="145"/>
                    <declaration name="uriNewNoFrag" type="URI" line="148"/>
                    <declaration name="url" type="URL" line="152"/>
                    <declaration name="urlConnection" type="URLConnection" line="153"/>
                    <scope line="155">
                        <declaration name="proxyUser" type="String" line="158"/>
                        <declaration name="proxyPass" type="String" line="161"/>
                        <scope line="165">
                            <declaration name="password" type="String" line="166"/>
                            <declaration name="encodedPassword" type="String" line="167"/>
                        </scope>
                    </scope>
                    <scope line="175">
                        <declaration name="auth" type="String" line="178"/>
                        <scope line="180">
                            <scope line="183">
                                <declaration name="user" type="String" line="184"/>
                                <declaration name="pass" type="String" line="187"/>
                                <scope line="191">
                                    <declaration name="password" type="String" line="194"/>
                                    <declaration name="encodedPassword" type="String" line="195"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <declaration name="mimeType" type="String" line="207"/>
                    <declaration name="inputStream" type="InputStream" line="208"/>
                    <declaration name="baos" type="ByteArrayOutputStream" line="209"/>
                    <declaration name="buf" type="byte" line="210"/>
                    <declaration name="read" type="int" line="211"/>
                    <declaration name="summarized" type="int" line="212"/>
                    <scope line="214"/>
                    <declaration name="result" type="XMLSignatureInput" line="223"/>
                    <scope line="230"/>
                </scope>
                <scope line="237"/>
                <scope line="240"/>
            </method>
            <javadoc line="246">
                We resolve http URIs &lt;I&gt;without&lt;/I&gt; fragment...                
                <param>
                    uri                    
                </param>
                <param>
                    BaseURI                    
                </param>
                <return>
                    true if can be resolved                    
                </return>
            </javadoc>
            <method name="engineCanResolve" type="boolean" line="253">
                <params>
                    <param name="uri" type="Attr"/>
                    <param name="BaseURI" type="String"/>
                </params>
                <scope line="254"/>
                <declaration name="uriNodeValue" type="String" line="260"/>
                <scope line="262"/>
                <scope line="268"/>
                <scope line="273">
                    <scope line="274"/>
                </scope>
                <scope line="281"/>
            </method>
            <javadoc line="288">
                @inheritDoc                
            </javadoc>
            <method name="engineGetPropertyKeys" type="String[]" line="291"/>
            <method name="getNewURI" type="URI" line="296">
                <params>
                    <param name="uri" type="String"/>
                    <param name="BaseURI" type="String"/>
                </params>
                <scope line="298"/>
            </method>
        </class>
    </source>