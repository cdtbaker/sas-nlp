<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.signature">
        <import package="java.io.IOException"/>
        <import package="java.io.StringWriter"/>
        <import package="java.io.Writer"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.Set"/>
        <import package="com.sun.org.apache.xml.internal.security.c14n.helper.AttrCompare"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.XMLUtils"/>
        <import package="org.w3c.dom.Attr"/>
        <import package="org.w3c.dom.Comment"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.NamedNodeMap"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.w3c.dom.ProcessingInstruction"/>
        <class name="XMLSignatureInputDebugger" line="39">
            <comment line="61">
                J-
                 public static final String HTMLPrefix = &quot;&lt;!DOCTYPE HTML PUBLIC
                 \&quot;-W3CDTD HTML 4.01 TransitionalEN\&quot;&gt;&lt;html&gt;&lt;head&gt;&lt;style
                 type=\&quot;text/css\&quot;&gt;&lt;!-- .INCLUDED { color: #000000; background-color:
                 #FFFFFF; font-weight: bold; } .EXCLUDED { color: #666666;
                 background-color: #999999; } .INCLUDEDINCLUSIVENAMESPACE { color:
                 #0000FF; background-color: #FFFFFF; font-weight: bold; font-style:
                 italic; } .EXCLUDEDINCLUSIVENAMESPACE { color: #0000FF; background-color:
                 #999999; font-style: italic; } --&gt; &lt;/style&gt; &lt;/head&gt;&lt;body
                 bgcolor=\&quot;#999999\&quot;&gt;&lt;pre&gt;&quot;;                
            </comment>
            <comment line="136">
                J+                
            </comment>
            <javadoc line="39">
                Class XMLSignatureInputDebugger                
                <author>
                    $Author: mullan $                    
                </author>
                <version>
                    $Revision: 1.3 $                    
                </version>
            </javadoc>
            <declaration name="_xpathNodeSet" type="Set" line="49"/>
            <javadoc line="49">
                Field _xmlSignatureInput                
            </javadoc>
            <declaration name="_inclusiveNamespaces" type="Set" line="52"/>
            <declaration name="_doc" type="Document" line="54"/>
            <javadoc line="54">
                Field _doc                
            </javadoc>
            <declaration name="_writer" type="Writer" line="57"/>
            <javadoc line="57">
                Field _writer                
            </javadoc>
            <declaration name="HTMLPrefix" type="String" line="70"/>
            <javadoc line="70">
                The HTML Prefix                
            </javadoc>
            <declaration name="HTMLSuffix" type="String" line="108"/>
            <javadoc line="108">
                HTML Suffix                
            </javadoc>
            <declaration name="HTMLExcludePrefix" type="String" line="111"/>
            <declaration name="HTMLExcludeSuffix" type="String" line="113"/>
            <declaration name="HTMLIncludePrefix" type="String" line="115"/>
            <declaration name="HTMLIncludeSuffix" type="String" line="117"/>
            <declaration name="HTMLIncludedInclusiveNamespacePrefix" type="String" line="119"/>
            <declaration name="HTMLIncludedInclusiveNamespaceSuffix" type="String" line="121"/>
            <declaration name="HTMLExcludedInclusiveNamespacePrefix" type="String" line="123"/>
            <declaration name="HTMLExcludedInclusiveNamespaceSuffix" type="String" line="125"/>
            <declaration name="NODE_BEFORE_DOCUMENT_ELEMENT" type="int" line="127"/>
            <declaration name="NODE_NOT_BEFORE_OR_AFTER_DOCUMENT_ELEMENT" type="int" line="129"/>
            <declaration name="NODE_AFTER_DOCUMENT_ELEMENT" type="int" line="131"/>
            <declaration name="ATTR_COMPARE" type="AttrCompare" line="133"/>
            <method name="XMLSignatureInputDebugger" type="constructor" line="136">
                <comment line="138">
                    do nothing                    
                </comment>
            </method>
            <javadoc line="140">
                Constructor XMLSignatureInputDebugger                
                <param>
                    xmlSignatureInput the signatur to pretty print                    
                </param>
            </javadoc>
            <method name="XMLSignatureInputDebugger" type="constructor" line="146">
                <params>
                    <param name="xmlSignatureInput" type="XMLSignatureInput"/>
                </params>
                <scope line="148"/>
                <scope line="150"/>
            </method>
            <javadoc line="155">
                Constructor XMLSignatureInputDebugger                
                <param>
                    xmlSignatureInput the signatur to pretty print                    
                </param>
                <param>
                    inclusiveNamespace                    
                </param>
            </javadoc>
            <method name="XMLSignatureInputDebugger" type="constructor" line="162">
                <params>
                    <param name="xmlSignatureInput" type="XMLSignatureInput"/>
                    <param name="inclusiveNamespace" type="Set"/>
                </params>
            </method>
            <javadoc line="169">
                Method getHTMLRepresentation                
                <return>
                    The HTML Representation.                    
                </return>
                <throws>
                    XMLSignatureException                    
                </throws>
            </javadoc>
            <method name="getHTMLRepresentation" type="String" line="175">
                <comment line="185">
                    get only a single node as anchor to fetch the owner document                    
                </comment>
                <scope line="177"/>
                <scope line="182">
                    <declaration name="n" type="Node" line="185"/>
                </scope>
                <scope line="190"/>
                <scope line="197"/>
                <scope line="199"/>
            </method>
            <javadoc line="206">
                Method canonicalizeXPathNodeSet                
                <param>
                    currentNode                    
                </param>
                <throws>
                    XMLSignatureException                    
                </throws>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="canonicalizeXPathNodeSet" type="void" line="214">
                <params>
                    <param name="currentNode" type="Node"/>
                </params>
                <comment line="307">
                    The XPath data model allows to select only the first of a
                     sequence of mixed text and CDATA nodes. But we must output
                     them all, so we must search:
                    
                     @see http:nagoya.apache.orgbugzillashow_bug.cgi?id=6329                    
                </comment>
                <comment line="342">
                    we output all Attrs which are available                    
                </comment>
                <comment line="363">
                    included and inclusive                    
                </comment>
                <comment line="368">
                    included and not inclusive                    
                </comment>
                <comment line="374">
                    excluded and inclusive                    
                </comment>
                <comment line="379">
                    excluded and not inclusive                    
                </comment>
                <comment line="389">
                    included and inclusive                    
                </comment>
                <comment line="394">
                    included and not inclusive                    
                </comment>
                <comment line="400">
                    excluded and inclusive                    
                </comment>
                <comment line="405">
                    excluded and not inclusive                    
                </comment>
                <comment line="425">
                    traversal                    
                </comment>
                <declaration name="currentNodeType" type="int" line="216"/>
                <scope line="232"/>
                <scope line="240"/>
                <scope line="242"/>
                <declaration name="position" type="int" line="246"/>
                <scope line="248"/>
                <scope line="254"/>
                <scope line="258"/>
                <scope line="260"/>
                <scope line="266"/>
                <scope line="268"/>
                <scope line="274"/>
                <scope line="280"/>
                <scope line="284"/>
                <scope line="286"/>
                <scope line="293"/>
                <scope line="295"/>
                <scope line="304"/>
                <scope line="316"/>
                <scope line="318"/>
                <declaration name="currentElement" type="Element" line="324"/>
                <scope line="326"/>
                <scope line="328"/>
                <scope line="335"/>
                <scope line="337"/>
                <declaration name="attrs" type="NamedNodeMap" line="342"/>
                <declaration name="attrsLength" type="int" line="343"/>
                <declaration name="attrs2" type="Object" line="344"/>
                <scope line="346"/>
                <declaration name="attrs3" type="Object" line="351"/>
                <scope line="353">
                    <declaration name="a" type="Attr" line="354"/>
                    <declaration name="included" type="boolean" line="355"/>
                    <declaration name="inclusive" type="boolean" line="356"/>
                    <scope line="359">
                        <scope line="360"/>
                        <scope line="365"/>
                    </scope>
                    <scope line="370">
                        <scope line="371"/>
                        <scope line="376"/>
                    </scope>
                    <scope line="385">
                        <scope line="386"/>
                        <scope line="391"/>
                    </scope>
                    <scope line="396">
                        <scope line="397"/>
                        <scope line="402"/>
                    </scope>
                </scope>
                <scope line="410"/>
                <scope line="412"/>
                <scope line="418"/>
                <scope line="420"/>
                <scope line="426"/>
                <scope line="430"/>
                <scope line="432"/>
                <scope line="440"/>
                <scope line="442"/>
            </method>
            <javadoc line="449">
                Checks whether a Comment or ProcessingInstruction is before or after the
                  document element. This is needed for prepending or appending &quot;\n&quot;s.                
                <param>
                    currentNodecomment or pi to check                    
                </param>
                <return>
                    NODE_BEFORE_DOCUMENT_ELEMENT,
                      NODE_NOT_BEFORE_OR_AFTER_DOCUMENT_ELEMENT or
                      NODE_AFTER_DOCUMENT_ELEMENT                    
                </return>
                <see>
                    #NODE_BEFORE_DOCUMENT_ELEMENT                    
                </see>
                <see>
                    #NODE_NOT_BEFORE_OR_AFTER_DOCUMENT_ELEMENT                    
                </see>
                <see>
                    #NODE_AFTER_DOCUMENT_ELEMENT                    
                </see>
            </javadoc>
            <method name="getPositionRelativeToDocumentElement" type="int" line="462">
                <params>
                    <param name="currentNode" type="Node"/>
                </params>
                <scope line="464"/>
                <declaration name="doc" type="Document" line="468"/>
                <scope line="470"/>
                <declaration name="documentElement" type="Element" line="474"/>
                <scope line="476"/>
                <scope line="480"/>
                <scope line="484">
                    <scope line="485"/>
                </scope>
            </method>
            <javadoc line="493">
                Normalizes an {@link Attr}ibute value
                  The string value of the node is modified by replacing
                  &lt;UL&gt;
                  &lt;LI&gt;all ampersands (&amp;) with &lt;CODE&gt;&amp;amp;amp;&lt;/CODE&gt;&lt;/LI&gt;
                  &lt;LI&gt;all open angle brackets (&lt;) with &lt;CODE&gt;&amp;amp;lt;&lt;/CODE&gt;&lt;/LI&gt;
                  &lt;LI&gt;all quotation mark characters with &lt;CODE&gt;&amp;amp;quot;&lt;/CODE&gt;&lt;/LI&gt;
                  &lt;LI&gt;and the whitespace characters &lt;CODE&gt;#x9&lt;/CODE&gt;, #xA, and #xD,
                  with character references. The character references are written in
                  uppercase hexadecimal with no leading zeroes (for example, &lt;CODE&gt;#xD&lt;/CODE&gt;
                  is represented by the character reference &lt;CODE&gt;&amp;amp;#xD;&lt;/CODE&gt;)&lt;/LI&gt;
                  &lt;/UL&gt;                
                <param>
                    name                    
                </param>
                <param>
                    value                    
                </param>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="outputAttrToWriter" type="void" line="512">
                <params>
                    <param name="name" type="String"/>
                    <param name="value" type="String"/>
                </params>
                <comment line="538">
                    &apos;\t&apos;                    
                </comment>
                <comment line="542">
                    &apos;\n&apos;                    
                </comment>
                <comment line="546">
                    &apos;\r&apos;                    
                </comment>
                <declaration name="length" type="int" line="518"/>
                <scope line="520">
                    <declaration name="c" type="char" line="521"/>
                </scope>
            </method>
            <javadoc line="558">
                Normalizes a {@link org.w3c.dom.Comment} value                
                <param>
                    currentPI                    
                </param>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="outputPItoWriter" type="void" line="565">
                <params>
                    <param name="currentPI" type="ProcessingInstruction"/>
                </params>
                <scope line="567"/>
                <declaration name="target" type="String" line="573"/>
                <declaration name="length" type="int" line="574"/>
                <scope line="576">
                    <declaration name="c" type="char" line="577"/>
                </scope>
                <declaration name="data" type="String" line="599"/>
                <scope line="603">
                    <scope line="606">
                        <declaration name="c" type="char" line="607"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="625">
                Method outputCommentToWriter                
                <param>
                    currentComment                    
                </param>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="outputCommentToWriter" type="void" line="632">
                <params>
                    <param name="currentComment" type="Comment"/>
                </params>
                <scope line="634"/>
                <declaration name="data" type="String" line="640"/>
                <declaration name="length" type="int" line="641"/>
                <scope line="643">
                    <declaration name="c" type="char" line="644"/>
                </scope>
            </method>
            <javadoc line="669">
                Method outputTextToWriter                
                <param>
                    text                    
                </param>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="outputTextToWriter" type="void" line="675">
                <params>
                    <param name="text" type="String"/>
                </params>
                <scope line="677"/>
                <declaration name="length" type="int" line="681"/>
                <scope line="683">
                    <declaration name="c" type="char" line="684"/>
                </scope>
            </method>
        </class>
    </source>