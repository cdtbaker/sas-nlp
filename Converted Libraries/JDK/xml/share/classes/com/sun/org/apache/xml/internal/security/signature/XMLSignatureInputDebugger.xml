<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.signature">
        <import package="java.io.IOException"/>
        <import package="java.io.StringWriter"/>
        <import package="java.io.Writer"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.Set"/>
        <import package="com.sun.org.apache.xml.internal.security.c14n.helper.AttrCompare"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.XMLUtils"/>
        <import package="org.w3c.dom.Attr"/>
        <import package="org.w3c.dom.Comment"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.NamedNodeMap"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.w3c.dom.ProcessingInstruction"/>
        <class name="XMLSignatureInputDebugger" line="16">
            <javadoc line="16">
                Class XMLSignatureInputDebugger                
                <author>
                    $Author: mullan $                    
                </author>
                <version>
                    $Revision: 1.3 $                    
                </version>
            </javadoc>
            <declaration name="_xpathNodeSet" type="Set" line="22"/>
            <javadoc line="22">
                Field _xmlSignatureInput                
            </javadoc>
            <declaration name="_inclusiveNamespaces" type="Set" line="26"/>
            <declaration name="_doc" type="Document" line="27"/>
            <javadoc line="27">
                Field _doc                
            </javadoc>
            <declaration name="_writer" type="Writer" line="31"/>
            <javadoc line="31">
                Field _writer                
            </javadoc>
            <declaration name="HTMLPrefix" type="String" line="35"/>
            <javadoc line="35">
                The HTML Prefix                
            </javadoc>
            <declaration name="HTMLSuffix" type="String" line="39"/>
            <javadoc line="39">
                HTML Suffix                
            </javadoc>
            <declaration name="HTMLExcludePrefix" type="String" line="43"/>
            <declaration name="HTMLExcludeSuffix" type="String" line="44"/>
            <declaration name="HTMLIncludePrefix" type="String" line="45"/>
            <declaration name="HTMLIncludeSuffix" type="String" line="46"/>
            <declaration name="HTMLIncludedInclusiveNamespacePrefix" type="String" line="47"/>
            <declaration name="HTMLIncludedInclusiveNamespaceSuffix" type="String" line="48"/>
            <declaration name="HTMLExcludedInclusiveNamespacePrefix" type="String" line="49"/>
            <declaration name="HTMLExcludedInclusiveNamespaceSuffix" type="String" line="50"/>
            <declaration name="NODE_BEFORE_DOCUMENT_ELEMENT" type="int" line="51"/>
            <declaration name="NODE_NOT_BEFORE_OR_AFTER_DOCUMENT_ELEMENT" type="int" line="52"/>
            <declaration name="NODE_AFTER_DOCUMENT_ELEMENT" type="int" line="53"/>
            <declaration name="ATTR_COMPARE" type="AttrCompare" line="54"/>
            <method name="XMLSignatureInputDebugger" type="constructor" line="55"/>
            <javadoc line="57">
                Constructor XMLSignatureInputDebugger                
                <param>
                    xmlSignatureInput the signatur to pretty print                    
                </param>
            </javadoc>
            <method name="XMLSignatureInputDebugger" type="constructor" line="61">
                <params>
                    <param name="xmlSignatureInput" type="XMLSignatureInput"/>
                </params>
                <scope line="62"/>
                <scope line="65"/>
            </method>
            <javadoc line="69">
                Constructor XMLSignatureInputDebugger                
                <param>
                    xmlSignatureInput the signatur to pretty print                    
                </param>
                <param>
                    inclusiveNamespace                    
                </param>
            </javadoc>
            <method name="XMLSignatureInputDebugger" type="constructor" line="74">
                <params>
                    <param name="xmlSignatureInput" type="XMLSignatureInput"/>
                    <param name="inclusiveNamespace" type="Set"/>
                </params>
            </method>
            <javadoc line="78">
                Method getHTMLRepresentation                
                <return>
                    The HTML Representation.                    
                </return>
                <throws>
                    XMLSignatureException                    
                </throws>
            </javadoc>
            <method name="getHTMLRepresentation" type="String" line="83">
                <scope line="84"/>
                <scope line="87">
                    <declaration name="n" type="Node" line="88"/>
                </scope>
                <scope line="91"/>
                <scope line="97"/>
                <scope line="100"/>
            </method>
            <javadoc line="106">
                Method canonicalizeXPathNodeSet                
                <param>
                    currentNode                    
                </param>
                <throws>
                    XMLSignatureException                    
                </throws>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="canonicalizeXPathNodeSet" type="void" line="112">
                <params>
                    <param name="currentNode" type="Node"/>
                </params>
                <declaration name="currentNodeType" type="int" line="113"/>
                <scope line="125"/>
                <scope line="131"/>
                <scope line="134"/>
                <declaration name="position" type="int" line="137"/>
                <scope line="138"/>
                <scope line="142"/>
                <scope line="145"/>
                <scope line="148"/>
                <scope line="153"/>
                <scope line="156"/>
                <scope line="160"/>
                <scope line="164"/>
                <scope line="167"/>
                <scope line="170"/>
                <scope line="176"/>
                <scope line="179"/>
                <scope line="183"/>
                <scope line="186"/>
                <scope line="189"/>
                <declaration name="currentElement" type="Element" line="194"/>
                <scope line="195"/>
                <scope line="198"/>
                <scope line="203"/>
                <scope line="206"/>
                <declaration name="attrs" type="NamedNodeMap" line="209"/>
                <declaration name="attrsLength" type="int" line="210"/>
                <declaration name="attrs2" type="Object" line="211"/>
                <scope line="212"/>
                <declaration name="attrs3" type="Object" line="216"/>
                <scope line="217">
                    <declaration name="a" type="Attr" line="218"/>
                    <declaration name="included" type="boolean" line="219"/>
                    <declaration name="inclusive" type="boolean" line="220"/>
                    <scope line="221">
                        <scope line="222"/>
                        <scope line="225"/>
                    </scope>
                    <scope line="229">
                        <scope line="230"/>
                        <scope line="233"/>
                    </scope>
                    <scope line="238">
                        <scope line="239"/>
                        <scope line="242"/>
                    </scope>
                    <scope line="246">
                        <scope line="247"/>
                        <scope line="250"/>
                    </scope>
                </scope>
                <scope line="255"/>
                <scope line="258"/>
                <scope line="262"/>
                <scope line="265"/>
                <scope line="268"/>
                <scope line="271"/>
                <scope line="274"/>
                <scope line="280"/>
                <scope line="283"/>
            </method>
            <javadoc line="289">
                Checks whether a Comment or ProcessingInstruction is before or after the
                  document element. This is needed for prepending or appending &quot;\n&quot;s.                
                <param>
                    currentNodecomment or pi to check                    
                </param>
                <return>
                    NODE_BEFORE_DOCUMENT_ELEMENT,
                      NODE_NOT_BEFORE_OR_AFTER_DOCUMENT_ELEMENT or
                      NODE_AFTER_DOCUMENT_ELEMENT                    
                </return>
                <see>
                    #NODE_BEFORE_DOCUMENT_ELEMENT                    
                </see>
                <see>
                    #NODE_NOT_BEFORE_OR_AFTER_DOCUMENT_ELEMENT                    
                </see>
                <see>
                    #NODE_AFTER_DOCUMENT_ELEMENT                    
                </see>
            </javadoc>
            <method name="getPositionRelativeToDocumentElement" type="int" line="300">
                <params>
                    <param name="currentNode" type="Node"/>
                </params>
                <scope line="301"/>
                <declaration name="doc" type="Document" line="304"/>
                <scope line="305"/>
                <declaration name="documentElement" type="Element" line="308"/>
                <scope line="309"/>
                <scope line="312"/>
                <scope line="315">
                    <scope line="316"/>
                </scope>
            </method>
            <javadoc line="322">
                Normalizes an {@link Attr}ibute value
                  The string value of the node is modified by replacing
                  &lt;UL&gt;
                  &lt;LI&gt;all ampersands (&amp;) with &lt;CODE&gt;&amp;amp;amp;&lt;/CODE&gt;&lt;/LI&gt;
                  &lt;LI&gt;all open angle brackets (&lt;) with &lt;CODE&gt;&amp;amp;lt;&lt;/CODE&gt;&lt;/LI&gt;
                  &lt;LI&gt;all quotation mark characters with &lt;CODE&gt;&amp;amp;quot;&lt;/CODE&gt;&lt;/LI&gt;
                  &lt;LI&gt;and the whitespace characters &lt;CODE&gt;#x9&lt;/CODE&gt;, #xA, and #xD,
                  with character references. The character references are written in
                  uppercase hexadecimal with no leading zeroes (for example, &lt;CODE&gt;#xD&lt;/CODE&gt;
                  is represented by the character reference &lt;CODE&gt;&amp;amp;#xD;&lt;/CODE&gt;)&lt;/LI&gt;
                  &lt;/UL&gt;                
                <param>
                    name                    
                </param>
                <param>
                    value                    
                </param>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="outputAttrToWriter" type="void" line="338">
                <params>
                    <param name="name" type="String"/>
                    <param name="value" type="String"/>
                </params>
                <declaration name="length" type="int" line="342"/>
                <scope line="343">
                    <declaration name="c" type="char" line="344"/>
                </scope>
            </method>
            <javadoc line="371">
                Normalizes a {@link org.w3c.dom.Comment} value                
                <param>
                    currentPI                    
                </param>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="outputPItoWriter" type="void" line="376">
                <params>
                    <param name="currentPI" type="ProcessingInstruction"/>
                </params>
                <scope line="377"/>
                <declaration name="target" type="String" line="381"/>
                <declaration name="length" type="int" line="382"/>
                <scope line="383">
                    <declaration name="c" type="char" line="384"/>
                </scope>
                <declaration name="data" type="String" line="400"/>
                <scope line="402">
                    <scope line="404">
                        <declaration name="c" type="char" line="405"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="418">
                Method outputCommentToWriter                
                <param>
                    currentComment                    
                </param>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="outputCommentToWriter" type="void" line="423">
                <params>
                    <param name="currentComment" type="Comment"/>
                </params>
                <scope line="424"/>
                <declaration name="data" type="String" line="428"/>
                <declaration name="length" type="int" line="429"/>
                <scope line="430">
                    <declaration name="c" type="char" line="431"/>
                </scope>
            </method>
            <javadoc line="449">
                Method outputTextToWriter                
                <param>
                    text                    
                </param>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="outputTextToWriter" type="void" line="454">
                <params>
                    <param name="text" type="String"/>
                </params>
                <scope line="455"/>
                <declaration name="length" type="int" line="458"/>
                <scope line="459">
                    <declaration name="c" type="char" line="460"/>
                </scope>
            </method>
        </class>
    </source>