<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.utils">
        <import package="com.sun.org.apache.xml.internal.dtm.DTMManager"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.implementations.FuncHere"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.implementations.FuncHereContext"/>
        <import package="com.sun.org.apache.xml.internal.utils.PrefixResolver"/>
        <import package="com.sun.org.apache.xml.internal.utils.PrefixResolverDefault"/>
        <import package="com.sun.org.apache.xpath.internal.CachedXPathAPI"/>
        <import package="com.sun.org.apache.xpath.internal.Expression"/>
        <import package="com.sun.org.apache.xpath.internal.XPath"/>
        <import package="com.sun.org.apache.xpath.internal.XPathContext"/>
        <import package="com.sun.org.apache.xpath.internal.compiler.FunctionTable"/>
        <import package="com.sun.org.apache.xpath.internal.objects.XObject"/>
        <import package="org.w3c.dom"/>
        <import package="org.w3c.dom.traversal.NodeIterator"/>
        <import package="javax.xml.transform.ErrorListener"/>
        <import package="javax.xml.transform.SourceLocator"/>
        <import package="javax.xml.transform.TransformerException"/>
        <import package="java.lang.reflect.Constructor"/>
        <import package="java.lang.reflect.Method"/>
        <import package="java.lang.reflect.Modifier"/>
        <class name="CachedXPathFuncHereAPI" line="46">
            <javadoc line="46">
                @author $Author: mullan $                
            </javadoc>
            <declaration name="log" type="java.util.logging.Logger" line="52"/>
            <declaration name="_funcHereContext" type="FuncHereContext" line="54"/>
            <javadoc line="54">
                XPathContext, and thus DTMManager and DTMs, persists through multiple
                  calls to this object.                
            </javadoc>
            <declaration name="_dtmManager" type="DTMManager" line="60"/>
            <javadoc line="60">
                Field _dtmManager                
            </javadoc>
            <declaration name="_context" type="XPathContext" line="63"/>
            <declaration name="xpathStr" type="String" line="65"/>
            <declaration name="xpath" type="XPath" line="67"/>
            <declaration name="_funcTable" type="FunctionTable" line="69"/>
            <scope line="71"/>
            <javadoc line="75">
                Method getFuncHereContext                
                <return>
                    the context for this object                    
                </return>
            </javadoc>
            <method name="getFuncHereContext" type="FuncHereContext" line="80"/>
            <javadoc line="84">
                Constructor CachedXPathFuncHereAPI                
            </javadoc>
            <method name="CachedXPathFuncHereAPI" type="constructor" line="88"/>
            <javadoc line="90">
                Constructor CachedXPathFuncHereAPI                
                <param>
                    existingXPathContext                    
                </param>
            </javadoc>
            <method name="CachedXPathFuncHereAPI" type="constructor" line="95">
                <params>
                    <param name="existingXPathContext" type="XPathContext"/>
                </params>
            </method>
            <javadoc line="100">
                Constructor CachedXPathFuncHereAPI                
                <param>
                    previouslyUsed                    
                </param>
            </javadoc>
            <method name="CachedXPathFuncHereAPI" type="constructor" line="105">
                <params>
                    <param name="previouslyUsed" type="CachedXPathAPI"/>
                </params>
            </method>
            <javadoc line="110">
                Use an XPath string to select a single node. XPath namespace
                  prefixes are resolved from the context node, which may not
                  be what you want (see the next method).                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode A Node containing a valid XPath string.                    
                </param>
                <return>
                    The first node found that matches the XPath, or null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="selectSingleNode" type="Node" line="122">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                </params>
            </method>
            <javadoc line="126">
                Use an XPath string to select a single node.
                  XPath namespace prefixes are resolved from the namespaceNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <param>
                    namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.                    
                </param>
                <return>
                    The first node found that matches the XPath, or null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="selectSingleNode" type="Node" line="139">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                    <param name="namespaceNode" type="Node"/>
                </params>
                <comment line="142">
                    Have the XObject return its result as a NodeSetDTM.                    
                </comment>
                <comment line="146">
                    Return the first node, or null                    
                </comment>
                <declaration name="nl" type="NodeIterator" line="142"/>
            </method>
            <javadoc line="149">
                Use an XPath string to select a nodelist.
                  XPath namespace prefixes are resolved from the contextNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <return>
                    A NodeIterator, should never be null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="selectNodeIterator" type="NodeIterator" line="160">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                </params>
            </method>
            <javadoc line="164">
                Use an XPath string to select a nodelist.
                  XPath namespace prefixes are resolved from the namespaceNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <param>
                    namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.                    
                </param>
                <return>
                    A NodeIterator, should never be null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
                <deprecated>
                                        
                </deprecated>
            </javadoc>
            <method name="selectNodeIterator" type="NodeIterator" line="178">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                    <param name="namespaceNode" type="Node"/>
                </params>
                <comment line="181">
                    Execute the XPath, and have it return the result                    
                </comment>
                <comment line="184">
                    Have the XObject return its result as a NodeSetDTM.                    
                </comment>
                <declaration name="list" type="XObject" line="181"/>
            </method>
            <javadoc line="187">
                Use an XPath string to select a nodelist.
                  XPath namespace prefixes are resolved from the contextNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <return>
                    A NodeIterator, should never be null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
                <deprecated>
                                        
                </deprecated>
            </javadoc>
            <method name="selectNodeList" type="NodeList" line="199">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                </params>
            </method>
            <javadoc line="203">
                Use an XPath string to select a nodelist.
                  XPath namespace prefixes are resolved from the namespaceNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <param>
                    str                    
                </param>
                <param>
                    namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.                    
                </param>
                <return>
                    A NodeIterator, should never be null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="selectNodeList" type="NodeList" line="217">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                    <param name="str" type="String"/>
                    <param name="namespaceNode" type="Node"/>
                </params>
                <comment line="220">
                    Execute the XPath, and have it return the result                    
                </comment>
                <comment line="223">
                    Return a NodeList.                    
                </comment>
                <declaration name="list" type="XObject" line="220"/>
            </method>
            <javadoc line="226">
                Evaluate XPath string to an XObject.  Using this method,
                  XPath namespace prefixes will be resolved from the namespaceNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <return>
                    An XObject, which can be used to obtain a string, number, nodelist, etc, should never be null.                    
                </return>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XObject                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNull                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XBoolean                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNumber                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XString                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XRTreeFrag                    
                </see>
                <throws>
                    TransformerException                    
                </throws>
                <deprecated>
                                        
                </deprecated>
            </javadoc>
            <method name="eval" type="XObject" line="243">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                </params>
            </method>
            <javadoc line="247">
                Evaluate XPath string to an XObject.
                  XPath namespace prefixes are resolved from the namespaceNode.
                  The implementation of this is a little slow, since it creates
                  a number of objects each time it is called.  This could be optimized
                  to keep the same objects around, but then thread-safety issues would arise.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <param>
                    str                    
                </param>
                <param>
                    namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.                    
                </param>
                <return>
                    An XObject, which can be used to obtain a string, number, nodelist, etc, should never be null.                    
                </return>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XObject                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNull                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XBoolean                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNumber                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XString                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XRTreeFrag                    
                </see>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="eval" type="XObject" line="269">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                    <param name="str" type="String"/>
                    <param name="namespaceNode" type="Node"/>
                </params>
                <comment line="271">
                    Create the XPath object.
                    String str = CachedXPathFuncHereAPI.getStrFromNode(xpathnode);                    
                </comment>
                <comment line="274">
                    Since we don&apos;t have a XML Parser involved here, install some default support
                     for things like namespaces, etc.
                     (Changed from: XPathContext xpathSupport = new XPathContext();
                        because XPathContext is weak in a number of areas... perhaps
                        XPathContext should be done away with.)                    
                </comment>
                <comment line="284">
                    Create an object to resolve namespace prefixes.
                     XPath namespaces are resolved from the input context node&apos;s document element
                     if it is a root node, or else the current context node (for lack of a better
                     resolution space, given the simplicity of this sample code).                    
                </comment>
                <comment line="295">
                    only check if string points to different object (for performance)                    
                </comment>
                <comment line="305">
                    Execute the XPath, and have it return the result
                     return xpath.execute(xpathSupport, contextNode, prefixResolver);                    
                </comment>
                <scope line="278"/>
                <declaration name="prefixResolver" type="PrefixResolverDefault" line="287"/>
                <scope line="295">
                    <scope line="296"/>
                </scope>
                <declaration name="ctxtNode" type="int" line="306"/>
            </method>
            <javadoc line="311">
                Evaluate XPath string to an XObject.
                  XPath namespace prefixes are resolved from the namespaceNode.
                  The implementation of this is a little slow, since it creates
                  a number of objects each time it is called.  This could be optimized
                  to keep the same objects around, but then thread-safety issues would arise.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <param>
                    str                    
                </param>
                <param>
                    prefixResolver Will be called if the parser encounters namespace
                      prefixes, to resolve the prefixes to URLs.                    
                </param>
                <return>
                    An XObject, which can be used to obtain a string, number, nodelist, etc, should never be null.                    
                </return>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XObject                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNull                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XBoolean                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNumber                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XString                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XRTreeFrag                    
                </see>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="eval" type="XObject" line="335">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                    <param name="str" type="String"/>
                    <param name="prefixResolver" type="PrefixResolver"/>
                </params>
                <comment line="338">
                    Since we don&apos;t have a XML Parser involved here, install some default support
                     for things like namespaces, etc.
                     (Changed from: XPathContext xpathSupport = new XPathContext();
                        because XPathContext is weak in a number of areas... perhaps
                        XPathContext should be done away with.)
                     Create the XPath object.
                    String str = CachedXPathFuncHereAPI.getStrFromNode(xpathnode);                    
                </comment>
                <comment line="345">
                    only check if string points to different object (for performance)                    
                </comment>
                <comment line="354">
                    Try to see if it is a problem with the classloader.                    
                </comment>
                <comment line="358">
                                        
                </comment>
                <comment line="366">
                    Execute the XPath, and have it return the result                    
                </comment>
                <scope line="345">
                    <scope line="346"/>
                    <scope line="350"/>
                    <scope line="352">
                        <declaration name="th" type="Throwable" line="354"/>
                        <scope line="355">
                            <scope line="356"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="366"/>
                <declaration name="ctxtNode" type="int" line="371"/>
            </method>
            <method name="createXPath" type="XPath" line="376">
                <params>
                    <param name="str" type="String"/>
                    <param name="prefixResolver" type="PrefixResolver"/>
                </params>
                <declaration name="xpath" type="XPath" line="377"/>
                <declaration name="classes" type="Class[]" line="378"/>
                <declaration name="objects" type="Object[]" line="380"/>
                <scope line="381">
                    <declaration name="constructor" type="Constructor" line="382"/>
                </scope>
                <scope line="384"/>
                <scope line="386"/>
            </method>
            <javadoc line="392">
                Method getStrFromNode                
                <param>
                    xpathnode                    
                </param>
                <return>
                    the string for the node.                    
                </return>
            </javadoc>
            <method name="getStrFromNode" type="String" line="398">
                <params>
                    <param name="xpathnode" type="Node"/>
                </params>
                <comment line="403">
                    we iterate over all siblings of the context node because eventually,
                     the text is &quot;polluted&quot; with pi&apos;s or comments                    
                </comment>
                <scope line="400">
                    <declaration name="sb" type="StringBuffer" line="404"/>
                    <scope line="408">
                        <scope line="409"/>
                    </scope>
                </scope>
                <scope line="415"/>
                <scope line="417"/>
            </method>
            <method name="fixupFunctionTable" type="void" line="424">
                <comment line="428">
                    Try to register our here() implementation as internal function.                    
                </comment>
                <declaration name="installed" type="boolean" line="425"/>
                <scope line="430">
                    <declaration name="args" type="Class[]" line="431"/>
                    <declaration name="installFunction" type="Method" line="432"/>
                    <scope line="433">
                        <declaration name="params" type="Object[]" line="434"/>
                    </scope>
                </scope>
                <scope line="438"/>
                <scope line="441">
                    <scope line="442">
                        <declaration name="args" type="Class[]" line="444"/>
                        <declaration name="installFunction" type="Method" line="445"/>
                        <declaration name="params" type="Object[]" line="446"/>
                    </scope>
                    <scope line="449"/>
                </scope>
                <scope line="453">
                    <scope line="454"/>
                    <scope line="457"/>
                </scope>
            </method>
        </class>
    </source>