<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.utils">
        <import package="com.sun.org.apache.xml.internal.dtm.DTMManager"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.implementations.FuncHere"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.implementations.FuncHereContext"/>
        <import package="com.sun.org.apache.xml.internal.utils.PrefixResolver"/>
        <import package="com.sun.org.apache.xml.internal.utils.PrefixResolverDefault"/>
        <import package="com.sun.org.apache.xpath.internal.CachedXPathAPI"/>
        <import package="com.sun.org.apache.xpath.internal.Expression"/>
        <import package="com.sun.org.apache.xpath.internal.XPath"/>
        <import package="com.sun.org.apache.xpath.internal.XPathContext"/>
        <import package="com.sun.org.apache.xpath.internal.compiler.FunctionTable"/>
        <import package="com.sun.org.apache.xpath.internal.objects.XObject"/>
        <import package="org.w3c.dom"/>
        <import package="org.w3c.dom.traversal.NodeIterator"/>
        <import package="javax.xml.transform.ErrorListener"/>
        <import package="javax.xml.transform.SourceLocator"/>
        <import package="javax.xml.transform.TransformerException"/>
        <import package="java.lang.reflect.Constructor"/>
        <import package="java.lang.reflect.Method"/>
        <import package="java.lang.reflect.Modifier"/>
        <class name="CachedXPathFuncHereAPI" line="21">
            <javadoc line="21">
                @author $Author: mullan $                
            </javadoc>
            <declaration name="log" type="java.util.logging.Logger" line="25"/>
            <declaration name="_funcHereContext" type="FuncHereContext" line="26"/>
            <javadoc line="26">
                XPathContext, and thus DTMManager and DTMs, persists through multiple
                  calls to this object.                
            </javadoc>
            <declaration name="_dtmManager" type="DTMManager" line="31"/>
            <javadoc line="31">
                Field _dtmManager                
            </javadoc>
            <declaration name="_context" type="XPathContext" line="35"/>
            <declaration name="xpathStr" type="String" line="36"/>
            <declaration name="xpath" type="XPath" line="37"/>
            <declaration name="_funcTable" type="FunctionTable" line="38"/>
            <scope line="39"/>
            <javadoc line="42">
                Method getFuncHereContext                
                <return>
                    the context for this object                    
                </return>
            </javadoc>
            <method name="getFuncHereContext" type="FuncHereContext" line="46"/>
            <javadoc line="49">
                Constructor CachedXPathFuncHereAPI                
            </javadoc>
            <method name="CachedXPathFuncHereAPI" type="constructor" line="52"/>
            <javadoc line="54">
                Constructor CachedXPathFuncHereAPI                
                <param>
                    existingXPathContext                    
                </param>
            </javadoc>
            <method name="CachedXPathFuncHereAPI" type="constructor" line="58">
                <params>
                    <param name="existingXPathContext" type="XPathContext"/>
                </params>
            </method>
            <javadoc line="62">
                Constructor CachedXPathFuncHereAPI                
                <param>
                    previouslyUsed                    
                </param>
            </javadoc>
            <method name="CachedXPathFuncHereAPI" type="constructor" line="66">
                <params>
                    <param name="previouslyUsed" type="CachedXPathAPI"/>
                </params>
            </method>
            <javadoc line="70">
                Use an XPath string to select a single node. XPath namespace
                  prefixes are resolved from the context node, which may not
                  be what you want (see the next method).                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode A Node containing a valid XPath string.                    
                </param>
                <return>
                    The first node found that matches the XPath, or null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="selectSingleNode" type="Node" line="79">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                </params>
            </method>
            <javadoc line="82">
                Use an XPath string to select a single node.
                  XPath namespace prefixes are resolved from the namespaceNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <param>
                    namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.                    
                </param>
                <return>
                    The first node found that matches the XPath, or null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="selectSingleNode" type="Node" line="91">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                    <param name="namespaceNode" type="Node"/>
                </params>
                <declaration name="nl" type="NodeIterator" line="92"/>
            </method>
            <javadoc line="95">
                Use an XPath string to select a nodelist.
                  XPath namespace prefixes are resolved from the contextNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <return>
                    A NodeIterator, should never be null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="selectNodeIterator" type="NodeIterator" line="103">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                </params>
            </method>
            <javadoc line="106">
                Use an XPath string to select a nodelist.
                  XPath namespace prefixes are resolved from the namespaceNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <param>
                    namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.                    
                </param>
                <return>
                    A NodeIterator, should never be null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
                <deprecated>
                                        
                </deprecated>
            </javadoc>
            <method name="selectNodeIterator" type="NodeIterator" line="116">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                    <param name="namespaceNode" type="Node"/>
                </params>
                <declaration name="list" type="XObject" line="117"/>
            </method>
            <javadoc line="120">
                Use an XPath string to select a nodelist.
                  XPath namespace prefixes are resolved from the contextNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <return>
                    A NodeIterator, should never be null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
                <deprecated>
                                        
                </deprecated>
            </javadoc>
            <method name="selectNodeList" type="NodeList" line="129">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                </params>
            </method>
            <javadoc line="132">
                Use an XPath string to select a nodelist.
                  XPath namespace prefixes are resolved from the namespaceNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <param>
                    str                    
                </param>
                <param>
                    namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.                    
                </param>
                <return>
                    A NodeIterator, should never be null.                    
                </return>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="selectNodeList" type="NodeList" line="142">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                    <param name="str" type="String"/>
                    <param name="namespaceNode" type="Node"/>
                </params>
                <declaration name="list" type="XObject" line="143"/>
            </method>
            <javadoc line="146">
                Evaluate XPath string to an XObject.  Using this method,
                  XPath namespace prefixes will be resolved from the namespaceNode.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <return>
                    An XObject, which can be used to obtain a string, number, nodelist, etc, should never be null.                    
                </return>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XObject                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNull                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XBoolean                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNumber                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XString                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XRTreeFrag                    
                </see>
                <throws>
                    TransformerException                    
                </throws>
                <deprecated>
                                        
                </deprecated>
            </javadoc>
            <method name="eval" type="XObject" line="161">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                </params>
            </method>
            <javadoc line="164">
                Evaluate XPath string to an XObject.
                  XPath namespace prefixes are resolved from the namespaceNode.
                  The implementation of this is a little slow, since it creates
                  a number of objects each time it is called.  This could be optimized
                  to keep the same objects around, but then thread-safety issues would arise.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <param>
                    str                    
                </param>
                <param>
                    namespaceNode The node from which prefixes in the XPath will be resolved to namespaces.                    
                </param>
                <return>
                    An XObject, which can be used to obtain a string, number, nodelist, etc, should never be null.                    
                </return>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XObject                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNull                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XBoolean                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNumber                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XString                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XRTreeFrag                    
                </see>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="eval" type="XObject" line="183">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                    <param name="str" type="String"/>
                    <param name="namespaceNode" type="Node"/>
                </params>
                <scope line="184"/>
                <declaration name="prefixResolver" type="PrefixResolverDefault" line="187"/>
                <scope line="188">
                    <scope line="189"/>
                </scope>
                <declaration name="ctxtNode" type="int" line="196"/>
            </method>
            <javadoc line="199">
                Evaluate XPath string to an XObject.
                  XPath namespace prefixes are resolved from the namespaceNode.
                  The implementation of this is a little slow, since it creates
                  a number of objects each time it is called.  This could be optimized
                  to keep the same objects around, but then thread-safety issues would arise.                
                <param>
                    contextNode The node to start searching from.                    
                </param>
                <param>
                    xpathnode                    
                </param>
                <param>
                    str                    
                </param>
                <param>
                    prefixResolver Will be called if the parser encounters namespace
                      prefixes, to resolve the prefixes to URLs.                    
                </param>
                <return>
                    An XObject, which can be used to obtain a string, number, nodelist, etc, should never be null.                    
                </return>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XObject                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNull                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XBoolean                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XNumber                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XString                    
                </see>
                <see>
                    com.sun.org.apache.xpath.internal.objects.XRTreeFrag                    
                </see>
                <throws>
                    TransformerException                    
                </throws>
            </javadoc>
            <method name="eval" type="XObject" line="219">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="xpathnode" type="Node"/>
                    <param name="str" type="String"/>
                    <param name="prefixResolver" type="PrefixResolver"/>
                </params>
                <scope line="220">
                    <scope line="221"/>
                    <scope line="225"/>
                    <scope line="228">
                        <declaration name="th" type="Throwable" line="229"/>
                        <scope line="230">
                            <scope line="231"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="239"/>
                <declaration name="ctxtNode" type="int" line="242"/>
            </method>
            <method name="createXPath" type="XPath" line="245">
                <params>
                    <param name="str" type="String"/>
                    <param name="prefixResolver" type="PrefixResolver"/>
                </params>
                <declaration name="xpath" type="XPath" line="246"/>
                <declaration name="classes" type="Class[]" line="247"/>
                <declaration name="objects" type="Object[]" line="248"/>
                <scope line="249">
                    <declaration name="constructor" type="Constructor" line="250"/>
                </scope>
                <scope line="253"/>
                <scope line="255"/>
            </method>
            <javadoc line="260">
                Method getStrFromNode                
                <param>
                    xpathnode                    
                </param>
                <return>
                    the string for the node.                    
                </return>
            </javadoc>
            <method name="getStrFromNode" type="String" line="265">
                <params>
                    <param name="xpathnode" type="Node"/>
                </params>
                <scope line="266">
                    <declaration name="sb" type="StringBuffer" line="267"/>
                    <scope line="268">
                        <scope line="269"/>
                    </scope>
                </scope>
                <scope line="275"/>
                <scope line="278"/>
            </method>
            <method name="fixupFunctionTable" type="void" line="283">
                <declaration name="installed" type="boolean" line="284"/>
                <scope line="286">
                    <declaration name="args" type="Class[]" line="287"/>
                    <declaration name="installFunction" type="Method" line="288"/>
                    <scope line="289">
                        <declaration name="params" type="Object[]" line="290"/>
                    </scope>
                </scope>
                <scope line="295"/>
                <scope line="298">
                    <scope line="299">
                        <declaration name="args" type="Class[]" line="301"/>
                        <declaration name="installFunction" type="Method" line="302"/>
                        <declaration name="params" type="Object[]" line="303"/>
                    </scope>
                    <scope line="307"/>
                </scope>
                <scope line="311">
                    <scope line="312"/>
                    <scope line="315"/>
                </scope>
            </method>
        </class>
    </source>