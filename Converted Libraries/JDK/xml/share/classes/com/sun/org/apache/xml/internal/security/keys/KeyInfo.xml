<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.keys">
        <import package="java.security.PublicKey"/>
        <import package="java.security.cert.X509Certificate"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collections"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="javax.crypto.SecretKey"/>
        <import package="com.sun.org.apache.xml.internal.security.encryption.EncryptedKey"/>
        <import package="com.sun.org.apache.xml.internal.security.encryption.XMLCipher"/>
        <import package="com.sun.org.apache.xml.internal.security.encryption.XMLEncryptionException"/>
        <import package="com.sun.org.apache.xml.internal.security.exceptions.XMLSecurityException"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.content.KeyName"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.content.KeyValue"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.content.MgmtData"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.content.PGPData"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.content.RetrievalMethod"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.content.SPKIData"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.content.X509Data"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.content.keyvalues.DSAKeyValue"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.content.keyvalues.RSAKeyValue"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.keyresolver.KeyResolver"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.keyresolver.KeyResolverException"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.keyresolver.KeyResolverSpi"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.storage.StorageResolver"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.Transforms"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.EncryptionConstants"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.Constants"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.IdResolver"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.SignatureElementProxy"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.XMLUtils"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.w3c.dom.NodeList"/>
        <class name="KeyInfo" line="36">
            <extends class="SignatureElementProxy"/>
            <javadoc line="36">
                This class stand for KeyInfo Element that may contain keys, names,
                  certificates and other public key management information,
                  such as in-band key distribution or key agreement data.
                  &lt;BR /&gt;
                  KeyInfo Element has two basic functions:
                  One is KeyResolve for getting the public key in signature validation processing.
                  the other one is toElement for getting the element in signature generation processing.
                  &lt;BR /&gt;
                  The &lt;CODE&gt;lengthXXX()&lt;/CODE&gt; methods provide access to the internal Key
                  objects:
                  &lt;UL&gt;
                  &lt;LI&gt;If the &lt;CODE&gt;KeyInfo&lt;/CODE&gt; was constructed from an Element
                  (Signature verification), the &lt;CODE&gt;lengthXXX()&lt;/CODE&gt; methods searches
                  for child elements of &lt;CODE&gt;ds:KeyInfo&lt;/CODE&gt; for known types. &lt;/LI&gt;
                  &lt;LI&gt;If the &lt;CODE&gt;KeyInfo&lt;/CODE&gt; was constructed from scratch (during
                  Signature generation), the &lt;CODE&gt;lengthXXX()&lt;/CODE&gt; methods return the number
                  of &lt;CODE&gt;XXXs&lt;/CODE&gt; objects already passed to the KeyInfo&lt;/LI&gt;
                  &lt;/UL&gt;
                  &lt;BR /&gt;
                  The &lt;CODE&gt;addXXX()&lt;/CODE&gt; methods are used for adding Objects of the
                  appropriate type to the &lt;CODE&gt;KeyInfo&lt;/CODE&gt;. This is used during signature
                  generation.
                  &lt;BR /&gt;
                  The &lt;CODE&gt;itemXXX(int i)&lt;/CODE&gt; methods return the i&apos;th object of the
                  corresponding type.
                  &lt;BR /&gt;
                  The &lt;CODE&gt;containsXXX()&lt;/CODE&gt; methods return &lt;I&gt;whether&lt;/I&gt; the KeyInfo
                  contains the corresponding type.                
                <author>
                    $Author: mullan $                    
                </author>
            </javadoc>
            <declaration name="log" type="java.util.logging.Logger" line="68"/>
            <javadoc line="68">
                {@link java.util.logging} logging facility                
            </javadoc>
            <declaration name="x509Datas" type="List" line="72"/>
            <declaration name="encryptedKeys" type="List" line="73"/>
            <declaration name="nullList" type="List" line="74"/>
            <scope line="75">
                <declaration name="list" type="List" line="76"/>
            </scope>
            <javadoc line="80">
                Constructor KeyInfo                
                <param>
                    doc                    
                </param>
            </javadoc>
            <method name="KeyInfo" type="constructor" line="84">
                <params>
                    <param name="doc" type="Document"/>
                </params>
            </method>
            <javadoc line="88">
                Constructor KeyInfo                
                <param>
                    element                    
                </param>
                <param>
                    BaseURI                    
                </param>
                <throws>
                    XMLSecurityException                    
                </throws>
            </javadoc>
            <method name="KeyInfo" type="constructor" line="94">
                <params>
                    <param name="element" type="Element"/>
                    <param name="BaseURI" type="String"/>
                </params>
            </method>
            <javadoc line="97">
                Sets the &lt;code&gt;Id&lt;/code&gt; attribute                
                <param>
                    Id ID                    
                </param>
            </javadoc>
            <method name="setId" type="void" line="101">
                <params>
                    <param name="Id" type="String"/>
                </params>
                <scope line="102"/>
            </method>
            <javadoc line="107">
                Returns the &lt;code&gt;Id&lt;/code&gt; attribute                
                <return>
                    the &lt;code&gt;Id&lt;/code&gt; attribute                    
                </return>
            </javadoc>
            <method name="getId" type="String" line="111"/>
            <javadoc line="114">
                Method addKeyName                
                <param>
                    keynameString                    
                </param>
            </javadoc>
            <method name="addKeyName" type="void" line="118">
                <params>
                    <param name="keynameString" type="String"/>
                </params>
            </method>
            <javadoc line="121">
                Method add                
                <param>
                    keyname                    
                </param>
            </javadoc>
            <method name="add" type="void" line="125">
                <params>
                    <param name="keyname" type="KeyName"/>
                </params>
            </method>
            <javadoc line="129">
                Method addKeyValue                
                <param>
                    pk                    
                </param>
            </javadoc>
            <method name="addKeyValue" type="void" line="133">
                <params>
                    <param name="pk" type="PublicKey"/>
                </params>
            </method>
            <javadoc line="136">
                Method addKeyValue                
                <param>
                    unknownKeyValueElement                    
                </param>
            </javadoc>
            <method name="addKeyValue" type="void" line="140">
                <params>
                    <param name="unknownKeyValueElement" type="Element"/>
                </params>
            </method>
            <javadoc line="143">
                Method add                
                <param>
                    dsakeyvalue                    
                </param>
            </javadoc>
            <method name="add" type="void" line="147">
                <params>
                    <param name="dsakeyvalue" type="DSAKeyValue"/>
                </params>
            </method>
            <javadoc line="150">
                Method add                
                <param>
                    rsakeyvalue                    
                </param>
            </javadoc>
            <method name="add" type="void" line="154">
                <params>
                    <param name="rsakeyvalue" type="RSAKeyValue"/>
                </params>
            </method>
            <javadoc line="157">
                Method add                
                <param>
                    pk                    
                </param>
            </javadoc>
            <method name="add" type="void" line="161">
                <params>
                    <param name="pk" type="PublicKey"/>
                </params>
            </method>
            <javadoc line="164">
                Method add                
                <param>
                    keyvalue                    
                </param>
            </javadoc>
            <method name="add" type="void" line="168">
                <params>
                    <param name="keyvalue" type="KeyValue"/>
                </params>
            </method>
            <javadoc line="172">
                Method addMgmtData                
                <param>
                    mgmtdata                    
                </param>
            </javadoc>
            <method name="addMgmtData" type="void" line="176">
                <params>
                    <param name="mgmtdata" type="String"/>
                </params>
            </method>
            <javadoc line="179">
                Method add                
                <param>
                    mgmtdata                    
                </param>
            </javadoc>
            <method name="add" type="void" line="183">
                <params>
                    <param name="mgmtdata" type="MgmtData"/>
                </params>
            </method>
            <javadoc line="187">
                Method addPGPData                
                <param>
                    pgpdata                    
                </param>
            </javadoc>
            <method name="add" type="void" line="191">
                <params>
                    <param name="pgpdata" type="PGPData"/>
                </params>
            </method>
            <javadoc line="195">
                Method addRetrievalMethod                
                <param>
                    URI                    
                </param>
                <param>
                    transforms                    
                </param>
                <param>
                    Type                    
                </param>
            </javadoc>
            <method name="addRetrievalMethod" type="void" line="201">
                <params>
                    <param name="URI" type="String"/>
                    <param name="transforms" type="Transforms"/>
                    <param name="Type" type="String"/>
                </params>
            </method>
            <javadoc line="204">
                Method add                
                <param>
                    retrievalmethod                    
                </param>
            </javadoc>
            <method name="add" type="void" line="208">
                <params>
                    <param name="retrievalmethod" type="RetrievalMethod"/>
                </params>
            </method>
            <javadoc line="212">
                Method add                
                <param>
                    spkidata                    
                </param>
            </javadoc>
            <method name="add" type="void" line="216">
                <params>
                    <param name="spkidata" type="SPKIData"/>
                </params>
            </method>
            <javadoc line="220">
                Method addX509Data                
                <param>
                    x509data                    
                </param>
            </javadoc>
            <method name="add" type="void" line="224">
                <params>
                    <param name="x509data" type="X509Data"/>
                </params>
            </method>
            <javadoc line="230">
                Method addEncryptedKey                
                <param>
                    encryptedKey                    
                </param>
                <throws>
                    XMLEncryptionException                    
                </throws>
            </javadoc>
            <method name="add" type="void" line="235">
                <params>
                    <param name="encryptedKey" type="EncryptedKey"/>
                </params>
                <declaration name="cipher" type="XMLCipher" line="238"/>
            </method>
            <javadoc line="241">
                Method addUnknownElement                
                <param>
                    element                    
                </param>
            </javadoc>
            <method name="addUnknownElement" type="void" line="245">
                <params>
                    <param name="element" type="Element"/>
                </params>
            </method>
            <javadoc line="249">
                Method lengthKeyName                
                <return>
                    the number of the KeyName tags                    
                </return>
            </javadoc>
            <method name="lengthKeyName" type="int" line="253"/>
            <javadoc line="256">
                Method lengthKeyValue                
                <return>
                    the number of the KeyValue tags                    
                </return>
            </javadoc>
            <method name="lengthKeyValue" type="int" line="260"/>
            <javadoc line="263">
                Method lengthMgmtData                
                <return>
                    the number of the MgmtData tags                    
                </return>
            </javadoc>
            <method name="lengthMgmtData" type="int" line="267"/>
            <javadoc line="270">
                Method lengthPGPData                
                <return>
                    the number of the PGPDat. tags                    
                </return>
            </javadoc>
            <method name="lengthPGPData" type="int" line="274"/>
            <javadoc line="277">
                Method lengthRetrievalMethod                
                <return>
                    the number of the RetrievalMethod tags                    
                </return>
            </javadoc>
            <method name="lengthRetrievalMethod" type="int" line="281"/>
            <javadoc line="284">
                Method lengthSPKIData                
                <return>
                    the number of the SPKIData tags                    
                </return>
            </javadoc>
            <method name="lengthSPKIData" type="int" line="288"/>
            <javadoc line="291">
                Method lengthX509Data                
                <return>
                    the number of the X509Data tags                    
                </return>
            </javadoc>
            <method name="lengthX509Data" type="int" line="295">
                <scope line="296"/>
            </method>
            <javadoc line="301">
                Method lengthUnknownElement
                  NOTE posibly buggy.                
                <return>
                    the number of the UnknownElement tags                    
                </return>
            </javadoc>
            <method name="lengthUnknownElement" type="int" line="306">
                <declaration name="res" type="int" line="307"/>
                <declaration name="nl" type="NodeList" line="308"/>
                <scope line="309">
                    <declaration name="current" type="Node" line="310"/>
                    <scope line="311"/>
                </scope>
            </method>
            <javadoc line="317">
                Method itemKeyName                
                <param>
                    i                    
                </param>
                <return>
                    the asked KeyName element, null if the index is too big                    
                </return>
                <throws>
                    XMLSecurityException                    
                </throws>
            </javadoc>
            <method name="itemKeyName" type="KeyName" line="323">
                <params>
                    <param name="i" type="int"/>
                </params>
                <declaration name="e" type="Element" line="324"/>
                <scope line="325"/>
            </method>
            <javadoc line="330">
                Method itemKeyValue                
                <param>
                    i                    
                </param>
                <return>
                    the asked KeyValue element, null if the index is too big                    
                </return>
                <throws>
                    XMLSecurityException                    
                </throws>
            </javadoc>
            <method name="itemKeyValue" type="KeyValue" line="336">
                <params>
                    <param name="i" type="int"/>
                </params>
                <declaration name="e" type="Element" line="337"/>
                <scope line="338"/>
            </method>
            <javadoc line="343">
                Method itemMgmtData                
                <param>
                    i                    
                </param>
                <return>
                    the asked MgmtData element, null if the index is too big                    
                </return>
                <throws>
                    XMLSecurityException                    
                </throws>
            </javadoc>
            <method name="itemMgmtData" type="MgmtData" line="349">
                <params>
                    <param name="i" type="int"/>
                </params>
                <declaration name="e" type="Element" line="350"/>
                <scope line="351"/>
            </method>
            <javadoc line="356">
                Method itemPGPData                
                <param>
                    i                    
                </param>
                <return>
                    the asked PGPData element, null if the index is too big                    
                </return>
                <throws>
                    XMLSecurityException                    
                </throws>
            </javadoc>
            <method name="itemPGPData" type="PGPData" line="362">
                <params>
                    <param name="i" type="int"/>
                </params>
                <declaration name="e" type="Element" line="363"/>
                <scope line="364"/>
            </method>
            <javadoc line="369">
                Method itemRetrievalMethod                
                <param>
                    i                    
                </param>
                <return>
                    the asked RetrievalMethod element, null if the index is too big                    
                </return>
                <throws>
                    XMLSecurityException                    
                </throws>
            </javadoc>
            <method name="itemRetrievalMethod" type="RetrievalMethod" line="375">
                <params>
                    <param name="i" type="int"/>
                </params>
                <declaration name="e" type="Element" line="376"/>
                <scope line="377"/>
            </method>
            <javadoc line="382">
                Method itemSPKIData                
                <param>
                    i                    
                </param>
                <return>
                    the asked SPKIData element, null if the index is too big                    
                </return>
                <throws>
                    XMLSecurityException                    
                </throws>
            </javadoc>
            <method name="itemSPKIData" type="SPKIData" line="388">
                <params>
                    <param name="i" type="int"/>
                </params>
                <declaration name="e" type="Element" line="389"/>
                <scope line="390"/>
            </method>
            <javadoc line="395">
                Method itemX509Data                
                <return>
                    the asked X509Data element, null if the index is too big                    
                </return>
                <param>
                    i                    
                </param>
                <throws>
                    XMLSecurityException                    
                </throws>
            </javadoc>
            <method name="itemX509Data" type="X509Data" line="401">
                <params>
                    <param name="i" type="int"/>
                </params>
                <scope line="402"/>
                <declaration name="e" type="Element" line="405"/>
                <scope line="406"/>
            </method>
            <javadoc line="411">
                Method itemEncryptedKey                
                <param>
                    i                    
                </param>
                <return>
                    the asked EncryptedKey element, null if the index is too big                    
                </return>
                <throws>
                    XMLSecurityException                    
                </throws>
            </javadoc>
            <method name="itemEncryptedKey" type="EncryptedKey" line="417">
                <params>
                    <param name="i" type="int"/>
                </params>
                <scope line="418"/>
                <declaration name="e" type="Element" line="421"/>
                <scope line="422">
                    <declaration name="cipher" type="XMLCipher" line="423"/>
                </scope>
            </method>
            <javadoc line="429">
                Method itemUnknownElement                
                <param>
                    i index                    
                </param>
                <return>
                    the element number of the unknown elemens                    
                </return>
            </javadoc>
            <method name="itemUnknownElement" type="Element" line="434">
                <params>
                    <param name="i" type="int"/>
                </params>
                <declaration name="nl" type="NodeList" line="435"/>
                <declaration name="res" type="int" line="436"/>
                <scope line="437">
                    <declaration name="current" type="Node" line="438"/>
                    <scope line="439">
                        <scope line="441"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="448">
                Method isEmpty                
                <return>
                    true if the element has no descedants.                    
                </return>
            </javadoc>
            <method name="isEmpty" type="boolean" line="452"/>
            <javadoc line="455">
                Method containsKeyName                
                <return>
                    If the KeyInfo contains a KeyName node                    
                </return>
            </javadoc>
            <method name="containsKeyName" type="boolean" line="459"/>
            <javadoc line="462">
                Method containsKeyValue                
                <return>
                    If the KeyInfo contains a KeyValue node                    
                </return>
            </javadoc>
            <method name="containsKeyValue" type="boolean" line="466"/>
            <javadoc line="469">
                Method containsMgmtData                
                <return>
                    If the KeyInfo contains a MgmtData node                    
                </return>
            </javadoc>
            <method name="containsMgmtData" type="boolean" line="473"/>
            <javadoc line="476">
                Method containsPGPData                
                <return>
                    If the KeyInfo contains a PGPData node                    
                </return>
            </javadoc>
            <method name="containsPGPData" type="boolean" line="480"/>
            <javadoc line="483">
                Method containsRetrievalMethod                
                <return>
                    If the KeyInfo contains a RetrievalMethod node                    
                </return>
            </javadoc>
            <method name="containsRetrievalMethod" type="boolean" line="487"/>
            <javadoc line="490">
                Method containsSPKIData                
                <return>
                    If the KeyInfo contains a SPKIData node                    
                </return>
            </javadoc>
            <method name="containsSPKIData" type="boolean" line="494"/>
            <javadoc line="497">
                Method containsUnknownElement                
                <return>
                    If the KeyInfo contains a UnknownElement node                    
                </return>
            </javadoc>
            <method name="containsUnknownElement" type="boolean" line="501"/>
            <javadoc line="504">
                Method containsX509Data                
                <return>
                    If the KeyInfo contains a X509Data node                    
                </return>
            </javadoc>
            <method name="containsX509Data" type="boolean" line="508"/>
            <javadoc line="511">
                This method returns the public key.                
                <return>
                    If the KeyInfo contains a PublicKey node                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="getPublicKey" type="PublicKey" line="516">
                <declaration name="pk" type="PublicKey" line="517"/>
                <scope line="518"/>
                <scope line="524"/>
            </method>
            <javadoc line="531">
                Searches the library wide keyresolvers for public keys                
                <return>
                    The publick contained in this Node.                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="getPublicKeyFromStaticResolvers" type="PublicKey" line="536">
                <declaration name="length" type="int" line="537"/>
                <declaration name="storageLength" type="int" line="538"/>
                <declaration name="it" type="Iterator" line="539"/>
                <scope line="540">
                    <declaration name="keyResolver" type="KeyResolverSpi" line="541"/>
                    <declaration name="currentChild" type="Node" line="542"/>
                    <declaration name="uri" type="String" line="543"/>
                    <scope line="544">
                        <scope line="545">
                            <scope line="546">
                                <declaration name="storage" type="StorageResolver" line="547"/>
                                <declaration name="pk" type="PublicKey" line="548"/>
                                <scope line="549"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="560">
                Searches the per-KeyInfo keyresolvers for public keys                
                <return>
                    The publick contained in this Node.                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="getPublicKeyFromInternalResolvers" type="PublicKey" line="565">
                <declaration name="length" type="int" line="566"/>
                <declaration name="storageLength" type="int" line="567"/>
                <scope line="568">
                    <declaration name="keyResolver" type="KeyResolverSpi" line="569"/>
                    <declaration name="currentChild" type="Node" line="571"/>
                    <declaration name="uri" type="String" line="572"/>
                    <scope line="573">
                        <scope line="574">
                            <scope line="575">
                                <declaration name="storage" type="StorageResolver" line="576"/>
                                <declaration name="pk" type="PublicKey" line="577"/>
                                <scope line="578"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="588">
                Method getX509Certificate                
                <return>
                    The certificate contined in this KeyInfo                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="getX509Certificate" type="X509Certificate" line="593">
                <declaration name="cert" type="X509Certificate" line="594"/>
                <scope line="595"/>
                <scope line="601"/>
            </method>
            <javadoc line="608">
                This method uses each System-wide {@link KeyResolver} to search the
                  child elements. Each combination of {@link KeyResolver} and child element
                  is checked against all {@link StorageResolver}s.                
                <return>
                    The certificate contined in this KeyInfo                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="getX509CertificateFromStaticResolvers" type="X509Certificate" line="615">
                <declaration name="uri" type="String" line="617"/>
                <declaration name="length" type="int" line="618"/>
                <declaration name="storageLength" type="int" line="619"/>
                <declaration name="it" type="Iterator" line="620"/>
                <scope line="621">
                    <declaration name="keyResolver" type="KeyResolverSpi" line="622"/>
                    <declaration name="cert" type="X509Certificate" line="623"/>
                    <scope line="624"/>
                </scope>
            </method>
            <method name="applyCurrentResolver" type="X509Certificate" line="631">
                <params>
                    <param name="uri" type="String"/>
                    <param name="storageLength" type="int"/>
                    <param name="keyResolver" type="KeyResolverSpi"/>
                </params>
                <declaration name="currentChild" type="Node" line="632"/>
                <scope line="633">
                    <scope line="634">
                        <scope line="635">
                            <declaration name="storage" type="StorageResolver" line="636"/>
                            <declaration name="cert" type="X509Certificate" line="637"/>
                            <scope line="638"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="647">
                Method getX509CertificateFromInternalResolvers                
                <return>
                    The certificate contined in this KeyInfo                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="getX509CertificateFromInternalResolvers" type="X509Certificate" line="652">
                <declaration name="uri" type="String" line="654"/>
                <declaration name="storageLength" type="int" line="655"/>
                <scope line="656">
                    <declaration name="keyResolver" type="KeyResolverSpi" line="657"/>
                    <declaration name="cert" type="X509Certificate" line="659"/>
                    <scope line="660"/>
                </scope>
            </method>
            <javadoc line="666">
                This method returns a secret (symmetric) key. This is for XML Encryption.                
                <return>
                    the secret key contained in this KeyInfo                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="getSecretKey" type="SecretKey" line="671">
                <declaration name="sk" type="SecretKey" line="672"/>
                <scope line="673"/>
                <scope line="679"/>
            </method>
            <javadoc line="686">
                Searches the library wide keyresolvers for Secret keys                
                <return>
                    the secret key contained in this KeyInfo                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="getSecretKeyFromStaticResolvers" type="SecretKey" line="691">
                <declaration name="length" type="int" line="692"/>
                <declaration name="storageLength" type="int" line="693"/>
                <declaration name="it" type="Iterator" line="694"/>
                <scope line="695">
                    <declaration name="keyResolver" type="KeyResolverSpi" line="696"/>
                    <declaration name="currentChild" type="Node" line="697"/>
                    <declaration name="uri" type="String" line="698"/>
                    <scope line="699">
                        <scope line="700">
                            <scope line="701">
                                <declaration name="storage" type="StorageResolver" line="702"/>
                                <declaration name="sk" type="SecretKey" line="703"/>
                                <scope line="704"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="714">
                Searches the per-KeyInfo keyresolvers for secret keys                
                <return>
                    the secret key contained in this KeyInfo                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="getSecretKeyFromInternalResolvers" type="SecretKey" line="719">
                <declaration name="storageLength" type="int" line="720"/>
                <scope line="721">
                    <declaration name="keyResolver" type="KeyResolverSpi" line="722"/>
                    <declaration name="currentChild" type="Node" line="724"/>
                    <declaration name="uri" type="String" line="725"/>
                    <scope line="726">
                        <scope line="727">
                            <scope line="728">
                                <declaration name="storage" type="StorageResolver" line="729"/>
                                <declaration name="sk" type="SecretKey" line="730"/>
                                <scope line="731"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <declaration name="_internalKeyResolvers" type="List" line="741"/>
            <javadoc line="741">
                Stores the individual (per-KeyInfo) {@link KeyResolver}s                
            </javadoc>
            <javadoc line="745">
                This method is used to add a custom {@link KeyResolverSpi} to a KeyInfo
                  object.                
                <param>
                    realKeyResolver                    
                </param>
            </javadoc>
            <method name="registerInternalKeyResolver" type="void" line="750">
                <params>
                    <param name="realKeyResolver" type="KeyResolverSpi"/>
                </params>
                <scope line="751"/>
            </method>
            <javadoc line="756">
                Method lengthInternalKeyResolver                
                <return>
                    the length of the key                    
                </return>
            </javadoc>
            <method name="lengthInternalKeyResolver" type="int" line="760"/>
            <javadoc line="764">
                Method itemInternalKeyResolver                
                <param>
                    i the index                    
                </param>
                <return>
                    the KeyResolverSpi for the index.                    
                </return>
            </javadoc>
            <method name="itemInternalKeyResolver" type="KeyResolverSpi" line="769">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <declaration name="_storageResolvers" type="List" line="772"/>
            <javadoc line="772">
                Field _storageResolvers                
            </javadoc>
            <javadoc line="776">
                Method addStorageResolver                
                <param>
                    storageResolver                    
                </param>
            </javadoc>
            <method name="addStorageResolver" type="void" line="780">
                <params>
                    <param name="storageResolver" type="StorageResolver"/>
                </params>
                <scope line="781"/>
            </method>
            <declaration name="_alreadyInitialized" type="boolean" line="786"/>
            <javadoc line="787">
                init the keyinfo (Still needed?)                
            </javadoc>
            <method name="init" type="void" line="790">
                <scope line="791">
                    <scope line="792"/>
                </scope>
            </method>
            <javadoc line="799">
                @inheritDoc                
            </javadoc>
            <method name="getBaseLocalName" type="String" line="802"/>
        </class>
    </source>