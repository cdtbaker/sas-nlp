<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.keys">
        <import package="java.security.PublicKey"/>
        <import package="java.security.cert.X509Certificate"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collections"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="javax.crypto.SecretKey"/>
        <import package="com.sun.org.apache.xml.internal.security.encryption.EncryptedKey"/>
        <import package="com.sun.org.apache.xml.internal.security.encryption.XMLCipher"/>
        <import package="com.sun.org.apache.xml.internal.security.encryption.XMLEncryptionException"/>
        <import package="com.sun.org.apache.xml.internal.security.exceptions.XMLSecurityException"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.content.KeyName"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.content.KeyValue"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.content.MgmtData"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.content.PGPData"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.content.RetrievalMethod"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.content.SPKIData"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.content.X509Data"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.content.keyvalues.DSAKeyValue"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.content.keyvalues.RSAKeyValue"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.keyresolver.KeyResolver"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.keyresolver.KeyResolverException"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.keyresolver.KeyResolverSpi"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.storage.StorageResolver"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.Transforms"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.EncryptionConstants"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.Constants"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.IdResolver"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.SignatureElementProxy"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.XMLUtils"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.w3c.dom.NodeList"/>
        <class name="KeyInfo" line="63">
            <extends class="SignatureElementProxy"/>
            <comment line="1067">
                J-                
            </comment>
            <javadoc line="63">
                This class stand for KeyInfo Element that may contain keys, names,
                  certificates and other public key management information,
                  such as in-band key distribution or key agreement data.
                  &lt;BR /&gt;
                  KeyInfo Element has two basic functions:
                  One is KeyResolve for getting the public key in signature validation processing.
                  the other one is toElement for getting the element in signature generation processing.
                  &lt;BR /&gt;
                  The &lt;CODE&gt;lengthXXX()&lt;/CODE&gt; methods provide access to the internal Key
                  objects:
                  &lt;UL&gt;
                  &lt;LI&gt;If the &lt;CODE&gt;KeyInfo&lt;/CODE&gt; was constructed from an Element
                  (Signature verification), the &lt;CODE&gt;lengthXXX()&lt;/CODE&gt; methods searches
                  for child elements of &lt;CODE&gt;ds:KeyInfo&lt;/CODE&gt; for known types. &lt;/LI&gt;
                  &lt;LI&gt;If the &lt;CODE&gt;KeyInfo&lt;/CODE&gt; was constructed from scratch (during
                  Signature generation), the &lt;CODE&gt;lengthXXX()&lt;/CODE&gt; methods return the number
                  of &lt;CODE&gt;XXXs&lt;/CODE&gt; objects already passed to the KeyInfo&lt;/LI&gt;
                  &lt;/UL&gt;
                  &lt;BR /&gt;
                  The &lt;CODE&gt;addXXX()&lt;/CODE&gt; methods are used for adding Objects of the
                  appropriate type to the &lt;CODE&gt;KeyInfo&lt;/CODE&gt;. This is used during signature
                  generation.
                  &lt;BR /&gt;
                  The &lt;CODE&gt;itemXXX(int i)&lt;/CODE&gt; methods return the i&apos;th object of the
                  corresponding type.
                  &lt;BR /&gt;
                  The &lt;CODE&gt;containsXXX()&lt;/CODE&gt; methods return &lt;I&gt;whether&lt;/I&gt; the KeyInfo
                  contains the corresponding type.                
                <author>
                    $Author: mullan $                    
                </author>
            </javadoc>
            <declaration name="log" type="java.util.logging.Logger" line="97"/>
            <javadoc line="97">
                {@link java.util.logging} logging facility                
            </javadoc>
            <declaration name="x509Datas" type="List" line="100"/>
            <declaration name="encryptedKeys" type="List" line="101"/>
            <declaration name="nullList" type="List" line="103"/>
            <scope line="104">
                <declaration name="list" type="List" line="105"/>
            </scope>
            <javadoc line="110">
                Constructor KeyInfo                
                <param>
                    doc                    
                </param>
            </javadoc>
            <method name="KeyInfo" type="constructor" line="114">
                <params>
                    <param name="doc" type="Document"/>
                </params>
            </method>
            <javadoc line="122">
                Constructor KeyInfo                
                <param>
                    element                    
                </param>
                <param>
                    BaseURI                    
                </param>
                <throws>
                    XMLSecurityException                    
                </throws>
            </javadoc>
            <method name="KeyInfo" type="constructor" line="129">
                <params>
                    <param name="element" type="Element"/>
                    <param name="BaseURI" type="String"/>
                </params>
                <comment line="131">
                    _storageResolvers.add(null);                    
                </comment>
            </method>
            <javadoc line="135">
                Sets the &lt;code&gt;Id&lt;/code&gt; attribute                
                <param>
                    Id ID                    
                </param>
            </javadoc>
            <method name="setId" type="void" line="140">
                <params>
                    <param name="Id" type="String"/>
                </params>
                <scope line="142"/>
            </method>
            <javadoc line="148">
                Returns the &lt;code&gt;Id&lt;/code&gt; attribute                
                <return>
                    the <code>Id</code> attribute                    
                </return>
            </javadoc>
            <method name="getId" type="String" line="153"/>
            <javadoc line="157">
                Method addKeyName                
                <param>
                    keynameString                    
                </param>
            </javadoc>
            <method name="addKeyName" type="void" line="162">
                <params>
                    <param name="keynameString" type="String"/>
                </params>
            </method>
            <javadoc line="166">
                Method add                
                <param>
                    keyname                    
                </param>
            </javadoc>
            <method name="add" type="void" line="171">
                <params>
                    <param name="keyname" type="KeyName"/>
                </params>
            </method>
            <javadoc line="177">
                Method addKeyValue                
                <param>
                    pk                    
                </param>
            </javadoc>
            <method name="addKeyValue" type="void" line="182">
                <params>
                    <param name="pk" type="PublicKey"/>
                </params>
            </method>
            <javadoc line="186">
                Method addKeyValue                
                <param>
                    unknownKeyValueElement                    
                </param>
            </javadoc>
            <method name="addKeyValue" type="void" line="191">
                <params>
                    <param name="unknownKeyValueElement" type="Element"/>
                </params>
            </method>
            <javadoc line="195">
                Method add                
                <param>
                    dsakeyvalue                    
                </param>
            </javadoc>
            <method name="add" type="void" line="200">
                <params>
                    <param name="dsakeyvalue" type="DSAKeyValue"/>
                </params>
            </method>
            <javadoc line="204">
                Method add                
                <param>
                    rsakeyvalue                    
                </param>
            </javadoc>
            <method name="add" type="void" line="209">
                <params>
                    <param name="rsakeyvalue" type="RSAKeyValue"/>
                </params>
            </method>
            <javadoc line="213">
                Method add                
                <param>
                    pk                    
                </param>
            </javadoc>
            <method name="add" type="void" line="218">
                <params>
                    <param name="pk" type="PublicKey"/>
                </params>
            </method>
            <javadoc line="222">
                Method add                
                <param>
                    keyvalue                    
                </param>
            </javadoc>
            <method name="add" type="void" line="227">
                <params>
                    <param name="keyvalue" type="KeyValue"/>
                </params>
            </method>
            <javadoc line="232">
                Method addMgmtData                
                <param>
                    mgmtdata                    
                </param>
            </javadoc>
            <method name="addMgmtData" type="void" line="237">
                <params>
                    <param name="mgmtdata" type="String"/>
                </params>
            </method>
            <javadoc line="241">
                Method add                
                <param>
                    mgmtdata                    
                </param>
            </javadoc>
            <method name="add" type="void" line="246">
                <params>
                    <param name="mgmtdata" type="MgmtData"/>
                </params>
            </method>
            <javadoc line="251">
                Method addPGPData                
                <param>
                    pgpdata                    
                </param>
            </javadoc>
            <method name="add" type="void" line="256">
                <params>
                    <param name="pgpdata" type="PGPData"/>
                </params>
            </method>
            <javadoc line="261">
                Method addRetrievalMethod                
                <param>
                    URI                    
                </param>
                <param>
                    transforms                    
                </param>
                <param>
                    Type                    
                </param>
            </javadoc>
            <method name="addRetrievalMethod" type="void" line="269">
                <params>
                    <param name="URI" type="String"/>
                    <param name="transforms" type="Transforms"/>
                    <param name="Type" type="String"/>
                </params>
            </method>
            <javadoc line="273">
                Method add                
                <param>
                    retrievalmethod                    
                </param>
            </javadoc>
            <method name="add" type="void" line="278">
                <params>
                    <param name="retrievalmethod" type="RetrievalMethod"/>
                </params>
            </method>
            <javadoc line="283">
                Method add                
                <param>
                    spkidata                    
                </param>
            </javadoc>
            <method name="add" type="void" line="288">
                <params>
                    <param name="spkidata" type="SPKIData"/>
                </params>
            </method>
            <javadoc line="293">
                Method addX509Data                
                <param>
                    x509data                    
                </param>
            </javadoc>
            <method name="add" type="void" line="298">
                <params>
                    <param name="x509data" type="X509Data"/>
                </params>
            </method>
            <javadoc line="306">
                Method addEncryptedKey                
                <param>
                    encryptedKey                    
                </param>
                <throws>
                    XMLEncryptionException                    
                </throws>
            </javadoc>
            <method name="add" type="void" line="314">
                <params>
                    <param name="encryptedKey" type="EncryptedKey"/>
                </params>
                <declaration name="cipher" type="XMLCipher" line="318"/>
            </method>
            <javadoc line="322">
                Method addUnknownElement                
                <param>
                    element                    
                </param>
            </javadoc>
            <method name="addUnknownElement" type="void" line="327">
                <params>
                    <param name="element" type="Element"/>
                </params>
            </method>
            <javadoc line="332">
                Method lengthKeyName                
                <return>
                    the number of the KeyName tags                    
                </return>
            </javadoc>
            <method name="lengthKeyName" type="int" line="337"/>
            <javadoc line="341">
                Method lengthKeyValue                
                <return>
                    the number of the KeyValue tags                    
                </return>
            </javadoc>
            <method name="lengthKeyValue" type="int" line="346"/>
            <javadoc line="350">
                Method lengthMgmtData                
                <return>
                    the number of the MgmtData tags                    
                </return>
            </javadoc>
            <method name="lengthMgmtData" type="int" line="355"/>
            <javadoc line="359">
                Method lengthPGPData                
                <return>
                    the number of the PGPDat. tags                    
                </return>
            </javadoc>
            <method name="lengthPGPData" type="int" line="364"/>
            <javadoc line="368">
                Method lengthRetrievalMethod                
                <return>
                    the number of the RetrievalMethod tags                    
                </return>
            </javadoc>
            <method name="lengthRetrievalMethod" type="int" line="373"/>
            <javadoc line="378">
                Method lengthSPKIData                
                <return>
                    the number of the SPKIData tags                    
                </return>
            </javadoc>
            <method name="lengthSPKIData" type="int" line="383"/>
            <javadoc line="387">
                Method lengthX509Data                
                <return>
                    the number of the X509Data tags                    
                </return>
            </javadoc>
            <method name="lengthX509Data" type="int" line="392">
                <scope line="393"/>
            </method>
            <javadoc line="399">
                Method lengthUnknownElement
                  NOTE posibly buggy.                
                <return>
                    the number of the UnknownElement tags                    
                </return>
            </javadoc>
            <method name="lengthUnknownElement" type="int" line="404">
                <comment line="412">
                    $todo$ using this method, we don&apos;t see unknown Elements
                      from Signature NS; revisit                    
                </comment>
                <declaration name="res" type="int" line="406"/>
                <declaration name="nl" type="NodeList" line="407"/>
                <scope line="409">
                    <declaration name="current" type="Node" line="410"/>
                    <scope line="418"/>
                </scope>
            </method>
            <javadoc line="426">
                Method itemKeyName                
                <param>
                    i                    
                </param>
                <return>
                    the asked KeyName element, null if the index is too big                    
                </return>
                <throws>
                    XMLSecurityException                    
                </throws>
            </javadoc>
            <method name="itemKeyName" type="KeyName" line="433">
                <params>
                    <param name="i" type="int"/>
                </params>
                <declaration name="e" type="Element" line="435"/>
                <scope line="438"/>
            </method>
            <javadoc line="444">
                Method itemKeyValue                
                <param>
                    i                    
                </param>
                <return>
                    the asked KeyValue element, null if the index is too big                    
                </return>
                <throws>
                    XMLSecurityException                    
                </throws>
            </javadoc>
            <method name="itemKeyValue" type="KeyValue" line="451">
                <params>
                    <param name="i" type="int"/>
                </params>
                <declaration name="e" type="Element" line="453"/>
                <scope line="456"/>
            </method>
            <javadoc line="462">
                Method itemMgmtData                
                <param>
                    i                    
                </param>
                <return>
                    the asked MgmtData element, null if the index is too big                    
                </return>
                <throws>
                    XMLSecurityException                    
                </throws>
            </javadoc>
            <method name="itemMgmtData" type="MgmtData" line="469">
                <params>
                    <param name="i" type="int"/>
                </params>
                <declaration name="e" type="Element" line="471"/>
                <scope line="474"/>
            </method>
            <javadoc line="480">
                Method itemPGPData                
                <param>
                    i                    
                </param>
                <return>
                    the asked PGPData element, null if the index is too big                    
                </return>
                <throws>
                    XMLSecurityException                    
                </throws>
            </javadoc>
            <method name="itemPGPData" type="PGPData" line="487">
                <params>
                    <param name="i" type="int"/>
                </params>
                <declaration name="e" type="Element" line="489"/>
                <scope line="492"/>
            </method>
            <javadoc line="498">
                Method itemRetrievalMethod                
                <param>
                    i                    
                </param>
                <return>
                    the asked RetrievalMethod element, null if the index is too big                    
                </return>
                <throws>
                    XMLSecurityException                    
                </throws>
            </javadoc>
            <method name="itemRetrievalMethod" type="RetrievalMethod" line="506">
                <params>
                    <param name="i" type="int"/>
                </params>
                <declaration name="e" type="Element" line="508"/>
                <scope line="511"/>
            </method>
            <javadoc line="517">
                Method itemSPKIData                
                <param>
                    i                    
                </param>
                <return>
                    the asked SPKIData element, null if the index is too big                    
                </return>
                <throws>
                    XMLSecurityException                    
                </throws>
            </javadoc>
            <method name="itemSPKIData" type="SPKIData" line="524">
                <params>
                    <param name="i" type="int"/>
                </params>
                <declaration name="e" type="Element" line="526"/>
                <scope line="529"/>
            </method>
            <javadoc line="535">
                Method itemX509Data                
                <return>
                    the asked X509Data element, null if the index is too big                    
                </return>
                <param>
                    i                    
                </param>
                <throws>
                    XMLSecurityException                    
                </throws>
            </javadoc>
            <method name="itemX509Data" type="X509Data" line="542">
                <params>
                    <param name="i" type="int"/>
                </params>
                <scope line="543"/>
                <declaration name="e" type="Element" line="546"/>
                <scope line="549"/>
            </method>
            <javadoc line="555">
                Method itemEncryptedKey                
                <param>
                    i                    
                </param>
                <return>
                    the asked EncryptedKey element, null if the index is too big                    
                </return>
                <throws>
                    XMLSecurityException                    
                </throws>
            </javadoc>
            <method name="itemEncryptedKey" type="EncryptedKey" line="563">
                <params>
                    <param name="i" type="int"/>
                </params>
                <scope line="564"/>
                <declaration name="e" type="Element" line="567"/>
                <scope line="571">
                    <declaration name="cipher" type="XMLCipher" line="572"/>
                </scope>
            </method>
            <javadoc line="579">
                Method itemUnknownElement                
                <param>
                    i index                    
                </param>
                <return>
                    the element number of the unknown elemens                    
                </return>
            </javadoc>
            <method name="itemUnknownElement" type="Element" line="585">
                <params>
                    <param name="i" type="int"/>
                </params>
                <comment line="593">
                    $todo$ using this method, we don&apos;t see unknown Elements
                      from Signature NS; revisit                    
                </comment>
                <declaration name="nl" type="NodeList" line="587"/>
                <declaration name="res" type="int" line="588"/>
                <scope line="590">
                    <declaration name="current" type="Node" line="591"/>
                    <scope line="599">
                        <scope line="602"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="611">
                Method isEmpty                
                <return>
                    true if the element has no descedants.                    
                </return>
            </javadoc>
            <method name="isEmpty" type="boolean" line="616"/>
            <javadoc line="620">
                Method containsKeyName                
                <return>
                    If the KeyInfo contains a KeyName node                    
                </return>
            </javadoc>
            <method name="containsKeyName" type="boolean" line="625"/>
            <javadoc line="629">
                Method containsKeyValue                
                <return>
                    If the KeyInfo contains a KeyValue node                    
                </return>
            </javadoc>
            <method name="containsKeyValue" type="boolean" line="634"/>
            <javadoc line="638">
                Method containsMgmtData                
                <return>
                    If the KeyInfo contains a MgmtData node                    
                </return>
            </javadoc>
            <method name="containsMgmtData" type="boolean" line="643"/>
            <javadoc line="647">
                Method containsPGPData                
                <return>
                    If the KeyInfo contains a PGPData node                    
                </return>
            </javadoc>
            <method name="containsPGPData" type="boolean" line="652"/>
            <javadoc line="656">
                Method containsRetrievalMethod                
                <return>
                    If the KeyInfo contains a RetrievalMethod node                    
                </return>
            </javadoc>
            <method name="containsRetrievalMethod" type="boolean" line="661"/>
            <javadoc line="665">
                Method containsSPKIData                
                <return>
                    If the KeyInfo contains a SPKIData node                    
                </return>
            </javadoc>
            <method name="containsSPKIData" type="boolean" line="670"/>
            <javadoc line="674">
                Method containsUnknownElement                
                <return>
                    If the KeyInfo contains a UnknownElement node                    
                </return>
            </javadoc>
            <method name="containsUnknownElement" type="boolean" line="679"/>
            <javadoc line="683">
                Method containsX509Data                
                <return>
                    If the KeyInfo contains a X509Data node                    
                </return>
            </javadoc>
            <method name="containsX509Data" type="boolean" line="688"/>
            <javadoc line="692">
                This method returns the public key.                
                <return>
                    If the KeyInfo contains a PublicKey node                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="getPublicKey" type="PublicKey" line="699">
                <declaration name="pk" type="PublicKey" line="701"/>
                <scope line="703"/>
                <scope line="712"/>
            </method>
            <javadoc line="722">
                Searches the library wide keyresolvers for public keys                
                <return>
                    The publick contained in this Node.                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="getPublicKeyFromStaticResolvers" type="PublicKey" line="728">
                <declaration name="length" type="int" line="729"/>
                <declaration name="storageLength" type="int" line="730"/>
                <declaration name="it" type="Iterator" line="731"/>
                <scope line="732">
                    <declaration name="keyResolver" type="KeyResolverSpi" line="733"/>
                    <declaration name="currentChild" type="Node" line="734"/>
                    <declaration name="uri" type="String" line="735"/>
                    <scope line="736">
                        <scope line="737">
                            <scope line="738">
                                <declaration name="storage" type="StorageResolver" line="739"/>
                                <declaration name="pk" type="PublicKey" line="742"/>
                                <scope line="747"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="759">
                Searches the per-KeyInfo keyresolvers for public keys                
                <return>
                    The publick contained in this Node.                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="getPublicKeyFromInternalResolvers" type="PublicKey" line="765">
                <declaration name="length" type="int" line="766"/>
                <declaration name="storageLength" type="int" line="767"/>
                <scope line="768">
                    <declaration name="keyResolver" type="KeyResolverSpi" line="769"/>
                    <declaration name="currentChild" type="Node" line="773"/>
                    <declaration name="uri" type="String" line="774"/>
                    <scope line="775">
                        <scope line="776">
                            <scope line="777">
                                <declaration name="storage" type="StorageResolver" line="778"/>
                                <declaration name="pk" type="PublicKey" line="780"/>
                                <scope line="783"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="795">
                Method getX509Certificate                
                <return>
                    The certificate contined in this KeyInfo                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="getX509Certificate" type="X509Certificate" line="801">
                <comment line="803">
                    First search using the individual resolvers from the user                    
                </comment>
                <comment line="816">
                    Then use the system-wide Resolvers                    
                </comment>
                <declaration name="cert" type="X509Certificate" line="804"/>
                <scope line="806"/>
                <scope line="819"/>
            </method>
            <javadoc line="832">
                This method uses each System-wide {@link KeyResolver} to search the
                  child elements. Each combination of {@link KeyResolver} and child element
                  is checked against all {@link StorageResolver}s.                
                <return>
                    The certificate contined in this KeyInfo                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="getX509CertificateFromStaticResolvers" type="X509Certificate" line="841">
                <declaration name="uri" type="String" line="845"/>
                <declaration name="length" type="int" line="846"/>
                <declaration name="storageLength" type="int" line="847"/>
                <declaration name="it" type="Iterator" line="848"/>
                <scope line="849">
                    <declaration name="keyResolver" type="KeyResolverSpi" line="850"/>
                    <declaration name="cert" type="X509Certificate" line="851"/>
                    <scope line="852"/>
                </scope>
            </method>
            <method name="applyCurrentResolver" type="X509Certificate" line="860">
                <params>
                    <param name="uri" type="String"/>
                    <param name="storageLength" type="int"/>
                    <param name="keyResolver" type="KeyResolverSpi"/>
                </params>
                <declaration name="currentChild" type="Node" line="861"/>
                <scope line="862">
                    <scope line="863">
                        <scope line="864">
                            <declaration name="storage" type="StorageResolver" line="865"/>
                            <declaration name="cert" type="X509Certificate" line="868"/>
                            <scope line="872"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="882">
                Method getX509CertificateFromInternalResolvers                
                <return>
                    The certificate contined in this KeyInfo                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="getX509CertificateFromInternalResolvers" type="X509Certificate" line="889">
                <declaration name="uri" type="String" line="893"/>
                <declaration name="storageLength" type="int" line="894"/>
                <scope line="895">
                    <declaration name="keyResolver" type="KeyResolverSpi" line="896"/>
                    <declaration name="cert" type="X509Certificate" line="899"/>
                    <scope line="900"/>
                </scope>
            </method>
            <javadoc line="908">
                This method returns a secret (symmetric) key. This is for XML Encryption.                
                <return>
                    the secret key contained in this KeyInfo                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="getSecretKey" type="SecretKey" line="913">
                <declaration name="sk" type="SecretKey" line="914"/>
                <scope line="916"/>
                <scope line="926"/>
            </method>
            <javadoc line="937">
                Searches the library wide keyresolvers for Secret keys                
                <return>
                    the secret key contained in this KeyInfo                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="getSecretKeyFromStaticResolvers" type="SecretKey" line="944">
                <declaration name="length" type="int" line="945"/>
                <declaration name="storageLength" type="int" line="946"/>
                <declaration name="it" type="Iterator" line="947"/>
                <scope line="948">
                    <declaration name="keyResolver" type="KeyResolverSpi" line="949"/>
                    <declaration name="currentChild" type="Node" line="951"/>
                    <declaration name="uri" type="String" line="952"/>
                    <scope line="953">
                        <scope line="954">
                            <scope line="955">
                                <declaration name="storage" type="StorageResolver" line="956"/>
                                <declaration name="sk" type="SecretKey" line="959"/>
                                <scope line="964"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="975">
                Searches the per-KeyInfo keyresolvers for secret keys                
                <return>
                    the secret key contained in this KeyInfo                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="getSecretKeyFromInternalResolvers" type="SecretKey" line="982">
                <declaration name="storageLength" type="int" line="983"/>
                <scope line="984">
                    <declaration name="keyResolver" type="KeyResolverSpi" line="985"/>
                    <declaration name="currentChild" type="Node" line="989"/>
                    <declaration name="uri" type="String" line="990"/>
                    <scope line="991">
                        <scope line="992">
                            <scope line="993">
                                <declaration name="storage" type="StorageResolver" line="994"/>
                                <declaration name="sk" type="SecretKey" line="997"/>
                                <scope line="1000"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <declaration name="_internalKeyResolvers" type="List" line="1012"/>
            <javadoc line="1012">
                Stores the individual (per-KeyInfo) {@link KeyResolver}s                
            </javadoc>
            <javadoc line="1017">
                This method is used to add a custom {@link KeyResolverSpi} to a KeyInfo
                  object.                
                <param>
                    realKeyResolver                    
                </param>
            </javadoc>
            <method name="registerInternalKeyResolver" type="void" line="1023">
                <params>
                    <param name="realKeyResolver" type="KeyResolverSpi"/>
                </params>
                <scope line="1024"/>
            </method>
            <javadoc line="1030">
                Method lengthInternalKeyResolver                
                <return>
                    the length of the key                    
                </return>
            </javadoc>
            <method name="lengthInternalKeyResolver" type="int" line="1034"/>
            <javadoc line="1040">
                Method itemInternalKeyResolver                
                <param>
                    i the index                    
                </param>
                <return>
                    the KeyResolverSpi for the index.                    
                </return>
            </javadoc>
            <method name="itemInternalKeyResolver" type="KeyResolverSpi" line="1046">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <declaration name="_storageResolvers" type="List" line="1050"/>
            <javadoc line="1050">
                Field _storageResolvers                
            </javadoc>
            <javadoc line="1053">
                Method addStorageResolver                
                <param>
                    storageResolver                    
                </param>
            </javadoc>
            <method name="addStorageResolver" type="void" line="1058">
                <params>
                    <param name="storageResolver" type="StorageResolver"/>
                </params>
                <scope line="1059"/>
            </method>
            <declaration name="_alreadyInitialized" type="boolean" line="1067"/>
            <javadoc line="1068">
                init the keyinfo (Still needed?)                
            </javadoc>
            <method name="init" type="void" line="1069">
                <comment line="1074">
                    $todo$ why the hell does the static initialization from the
                      start not work ?                    
                </comment>
                <comment line="1084">
                    KeyInfo._contentHandlerHash = new HashMap(10);                    
                </comment>
                <scope line="1071">
                    <scope line="1072"/>
                </scope>
            </method>
            <javadoc line="1089">
                @inheritDoc                
            </javadoc>
            <method name="getBaseLocalName" type="String" line="1090"/>
        </class>
    </source>