<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.transforms">
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="com.sun.org.apache.xml.internal.security.c14n.CanonicalizationException"/>
        <import package="com.sun.org.apache.xml.internal.security.c14n.Canonicalizer"/>
        <import package="com.sun.org.apache.xml.internal.security.c14n.InvalidCanonicalizerException"/>
        <import package="com.sun.org.apache.xml.internal.security.exceptions.XMLSecurityException"/>
        <import package="com.sun.org.apache.xml.internal.security.signature.XMLSignatureException"/>
        <import package="com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.Constants"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.SignatureElementProxy"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.XMLUtils"/>
        <import package="org.w3c.dom.DOMException"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.NodeList"/>
        <class name="Transforms" line="17">
            <extends class="SignatureElementProxy"/>
            <javadoc line="17">
                Holder of the {@link com.sun.org.apache.xml.internal.security.transforms.Transform} steps to
                  be performed on the data.
                  The input to the first Transform is the result of dereferencing the
                  &lt;code&gt;URI&lt;/code&gt; attribute of the &lt;code&gt;Reference&lt;/code&gt; element.
                  The output from the last Transform is the input for the
                  &lt;code&gt;DigestMethod algorithm&lt;/code&gt;                
                <author>
                    Christian Geuer-Pollmann                    
                </author>
                <see>
                    Transform                    
                </see>
                <see>
                    com.sun.org.apache.xml.internal.security.signature.Reference                    
                </see>
            </javadoc>
            <declaration name="log" type="java.util.logging.Logger" line="29"/>
            <javadoc line="29">
                {@link java.util.logging} logging facility                
            </javadoc>
            <declaration name="TRANSFORM_C14N_OMIT_COMMENTS" type="String" line="33"/>
            <javadoc line="33">
                Canonicalization - Required Canonical XML (omits comments)                
            </javadoc>
            <declaration name="TRANSFORM_C14N_WITH_COMMENTS" type="String" line="37"/>
            <javadoc line="37">
                Canonicalization - Recommended Canonical XML with Comments                
            </javadoc>
            <declaration name="TRANSFORM_C14N11_OMIT_COMMENTS" type="String" line="41"/>
            <javadoc line="41">
                Canonicalization - Required Canonical XML 1.1 (omits comments)                
            </javadoc>
            <declaration name="TRANSFORM_C14N11_WITH_COMMENTS" type="String" line="45"/>
            <javadoc line="45">
                Canonicalization - Recommended Canonical XML 1.1 with Comments                
            </javadoc>
            <declaration name="TRANSFORM_C14N_EXCL_OMIT_COMMENTS" type="String" line="49"/>
            <javadoc line="49">
                Canonicalization - Required Exclusive Canonicalization (omits comments)                
            </javadoc>
            <declaration name="TRANSFORM_C14N_EXCL_WITH_COMMENTS" type="String" line="53"/>
            <javadoc line="53">
                Canonicalization - Recommended Exclusive Canonicalization with Comments                
            </javadoc>
            <declaration name="TRANSFORM_XSLT" type="String" line="57"/>
            <javadoc line="57">
                Transform - Optional XSLT                
            </javadoc>
            <declaration name="TRANSFORM_BASE64_DECODE" type="String" line="61"/>
            <javadoc line="61">
                Transform - Required base64 decoding                
            </javadoc>
            <declaration name="TRANSFORM_XPATH" type="String" line="65"/>
            <javadoc line="65">
                Transform - Recommended XPath                
            </javadoc>
            <declaration name="TRANSFORM_ENVELOPED_SIGNATURE" type="String" line="69"/>
            <javadoc line="69">
                Transform - Required Enveloped Signature                
            </javadoc>
            <declaration name="TRANSFORM_XPOINTER" type="String" line="73"/>
            <javadoc line="73">
                Transform - XPointer                
            </javadoc>
            <declaration name="TRANSFORM_XPATH2FILTER04" type="String" line="77"/>
            <javadoc line="77">
                Transform - XPath Filter v2.0                
            </javadoc>
            <declaration name="TRANSFORM_XPATH2FILTER" type="String" line="81"/>
            <javadoc line="81">
                Transform - XPath Filter                
            </javadoc>
            <declaration name="TRANSFORM_XPATHFILTERCHGP" type="String" line="85"/>
            <javadoc line="85">
                Transform - XPath Filter  CHGP private                
            </javadoc>
            <declaration name="transforms" type="Element[]" line="89"/>
            <method name="Transforms" type="constructor" line="90"/>
            <javadoc line="92">
                Constructs {@link Transforms}.                
                <param>
                    doc the {@link Document} in which <code>XMLSignature</code> will
                      be placed                    
                </param>
            </javadoc>
            <method name="Transforms" type="constructor" line="97">
                <params>
                    <param name="doc" type="Document"/>
                </params>
            </method>
            <javadoc line="101">
                Constructs {@link Transforms} from {@link Element} which is
                  &lt;code&gt;Transforms&lt;/code&gt; Element                
                <param>
                    element  is <code>Transforms</code> element                    
                </param>
                <param>
                    BaseURI the URI where the XML instance was stored                    
                </param>
                <throws>
                    DOMException                    
                </throws>
                <throws>
                    InvalidTransformException                    
                </throws>
                <throws>
                    TransformationException                    
                </throws>
                <throws>
                    XMLSecurityException                    
                </throws>
                <throws>
                    XMLSignatureException                    
                </throws>
            </javadoc>
            <method name="Transforms" type="constructor" line="112">
                <params>
                    <param name="element" type="Element"/>
                    <param name="BaseURI" type="String"/>
                </params>
                <declaration name="numberOfTransformElems" type="int" line="114"/>
                <scope line="115">
                    <declaration name="exArgs" type="Object" line="116"/>
                </scope>
            </method>
            <javadoc line="120">
                Adds the &lt;code&gt;Transform&lt;/code&gt; with the specified &lt;code&gt;Transform
                  algorithm URI&lt;/code&gt;                
                <param>
                    transformURI the URI form of transform that indicates which
                      transformation is applied to data                    
                </param>
                <throws>
                    TransformationException                    
                </throws>
            </javadoc>
            <method name="addTransform" type="void" line="127">
                <params>
                    <param name="transformURI" type="String"/>
                </params>
                <scope line="128">
                    <declaration name="transform" type="Transform" line="130"/>
                </scope>
                <scope line="133"/>
            </method>
            <javadoc line="137">
                Adds the &lt;code&gt;Transform&lt;/code&gt; with the specified &lt;code&gt;Transform
                  algorithm URI&lt;/code&gt;                
                <param>
                    transformURI the URI form of transform that indicates which
                      transformation is applied to data                    
                </param>
                <param>
                    contextElement                    
                </param>
                <throws>
                    TransformationException                    
                </throws>
                <see>
                    Transform#getInstance(Document doc,String algorithmURI,Element childElement)                    
                </see>
            </javadoc>
            <method name="addTransform" type="void" line="146">
                <params>
                    <param name="transformURI" type="String"/>
                    <param name="contextElement" type="Element"/>
                </params>
                <scope line="147">
                    <declaration name="transform" type="Transform" line="149"/>
                </scope>
                <scope line="152"/>
            </method>
            <javadoc line="156">
                Adds the &lt;code&gt;Transform&lt;/code&gt; with the specified &lt;code&gt;Transform
                  algorithm URI&lt;/code&gt;.                
                <param>
                    transformURI the URI form of transform that indicates which
                      transformation is applied to data                    
                </param>
                <param>
                    contextNodes                    
                </param>
                <throws>
                    TransformationException                    
                </throws>
                <see>
                    Transform#getInstance(Document doc,String algorithmURI,NodeList contextNodes)                    
                </see>
            </javadoc>
            <method name="addTransform" type="void" line="165">
                <params>
                    <param name="transformURI" type="String"/>
                    <param name="contextNodes" type="NodeList"/>
                </params>
                <scope line="166">
                    <declaration name="transform" type="Transform" line="167"/>
                </scope>
                <scope line="170"/>
            </method>
            <javadoc line="174">
                Adds a user-provided Transform step.                
                <param>
                    transform {@link Transform} object                    
                </param>
            </javadoc>
            <method name="addTransform" type="void" line="178">
                <params>
                    <param name="transform" type="Transform"/>
                </params>
                <declaration name="transformElement" type="Element" line="180"/>
            </method>
            <javadoc line="184">
                Applies all included &lt;code&gt;Transform&lt;/code&gt;s to xmlSignatureInput and
                  returns the result of these transformations.                
                <param>
                    xmlSignatureInput the input for the <code>Transform</code>s                    
                </param>
                <return>
                    the result of the <code>Transforms</code>                    
                </return>
                <throws>
                    TransformationException                    
                </throws>
            </javadoc>
            <method name="performTransforms" type="XMLSignatureInput" line="191">
                <params>
                    <param name="xmlSignatureInput" type="XMLSignatureInput"/>
                </params>
            </method>
            <javadoc line="194">
                Applies all included &lt;code&gt;Transform&lt;/code&gt;s to xmlSignatureInput and
                  returns the result of these transformations.                
                <param>
                    xmlSignatureInput the input for the <code>Transform</code>s                    
                </param>
                <param>
                    os where to output the last transformation.                    
                </param>
                <return>
                    the result of the <code>Transforms</code>                    
                </return>
                <throws>
                    TransformationException                    
                </throws>
            </javadoc>
            <method name="performTransforms" type="XMLSignatureInput" line="202">
                <params>
                    <param name="xmlSignatureInput" type="XMLSignatureInput"/>
                    <param name="os" type="OutputStream"/>
                </params>
                <scope line="203">
                    <declaration name="last" type="int" line="204"/>
                    <scope line="205">
                        <declaration name="t" type="Transform" line="206"/>
                        <scope line="207"/>
                    </scope>
                    <scope line="212">
                        <declaration name="t" type="Transform" line="213"/>
                    </scope>
                </scope>
                <scope line="218"/>
                <scope line="221"/>
                <scope line="224"/>
            </method>
            <javadoc line="228">
                Return the nonnegative number of transformations.                
                <return>
                    the number of transformations                    
                </return>
            </javadoc>
            <method name="getLength" type="int" line="232">
                <scope line="233"/>
            </method>
            <javadoc line="238">
                Return the &lt;it&gt;i&lt;/it&gt;&lt;sup&gt;th&lt;/sup&gt; &lt;code&gt;{@link Transform}&lt;/code&gt;.
                  Valid &lt;code&gt;i&lt;/code&gt; values are 0 to &lt;code&gt;{@link #getLength}-1&lt;/code&gt;.                
                <param>
                    i index of {@link Transform} to return                    
                </param>
                <return>
                    the <it>i</it><sup>th</sup> Transform                    
                </return>
                <throws>
                    TransformationException                    
                </throws>
            </javadoc>
            <method name="item" type="Transform" line="245">
                <params>
                    <param name="i" type="int"/>
                </params>
                <scope line="246">
                    <scope line="247"/>
                </scope>
                <scope line="252"/>
            </method>
            <javadoc line="256">
                @inheritDoc                
            </javadoc>
            <method name="getBaseLocalName" type="String" line="259"/>
        </class>
    </source>