<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.transforms.params">
        <import package="java.util.Iterator"/>
        <import package="java.util.Set"/>
        <import package="java.util.SortedSet"/>
        <import package="java.util.StringTokenizer"/>
        <import package="java.util.TreeSet"/>
        <import package="com.sun.org.apache.xml.internal.security.exceptions.XMLSecurityException"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.TransformParam"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.ElementProxy"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Element"/>
        <class name="InclusiveNamespaces" line="38">
            <extends class="ElementProxy"/>
            <implements interface="TransformParam"/>
            <javadoc line="38">
                This Object serves as Content for the ds:Transforms for exclusive
                  Canonicalization.
                  &lt;BR /&gt;
                  It implements the {@link Element} interface
                  and can be used directly in a DOM tree.                
                <author>
                    Christian Geuer-Pollmann                    
                </author>
            </javadoc>
            <declaration name="_TAG_EC_INCLUSIVENAMESPACES" type="String" line="50"/>
            <javadoc line="50">
                Field _TAG_EC_INCLUSIVENAMESPACES                
            </javadoc>
            <declaration name="_ATT_EC_PREFIXLIST" type="String" line="54"/>
            <javadoc line="54">
                Field _ATT_EC_PREFIXLIST                
            </javadoc>
            <declaration name="ExclusiveCanonicalizationNamespace" type="String" line="57"/>
            <javadoc line="57">
                Field ExclusiveCanonicalizationNamespace                
            </javadoc>
            <javadoc line="61">
                Constructor XPathContainer                
                <param>
                    doc                    
                </param>
                <param>
                    prefixList                    
                </param>
            </javadoc>
            <method name="InclusiveNamespaces" type="constructor" line="67">
                <params>
                    <param name="doc" type="Document"/>
                    <param name="prefixList" type="String"/>
                </params>
            </method>
            <javadoc line="71">
                Constructor InclusiveNamespaces                
                <param>
                    doc                    
                </param>
                <param>
                    prefixes                    
                </param>
            </javadoc>
            <method name="InclusiveNamespaces" type="constructor" line="77">
                <params>
                    <param name="doc" type="Document"/>
                    <param name="prefixes" type="Set"/>
                </params>
                <declaration name="sb" type="StringBuffer" line="81"/>
                <declaration name="prefixList" type="SortedSet" line="82"/>
                <declaration name="it" type="Iterator" line="85"/>
                <scope line="87">
                    <declaration name="prefix" type="String" line="88"/>
                    <scope line="90"/>
                    <scope line="92"/>
                </scope>
            </method>
            <javadoc line="102">
                Method getInclusiveNamespaces                
                <return>
                    The Inclusive Namespace string                    
                </return>
            </javadoc>
            <method name="getInclusiveNamespaces" type="String" line="107"/>
            <javadoc line="112">
                Constructor InclusiveNamespaces                
                <param>
                    element                    
                </param>
                <param>
                    BaseURI                    
                </param>
                <throws>
                    XMLSecurityException                    
                </throws>
            </javadoc>
            <method name="InclusiveNamespaces" type="constructor" line="120">
                <params>
                    <param name="element" type="Element"/>
                    <param name="BaseURI" type="String"/>
                </params>
            </method>
            <javadoc line="124">
                Decodes the &lt;code&gt;inclusiveNamespaces&lt;/code&gt; String and returns all
                  selected namespace prefixes as a Set. The &lt;code&gt;#default&lt;/code&gt;
                  namespace token is represented as an empty namespace prefix
                  (&lt;code&gt;&quot;xmlns&quot;&lt;/code&gt;).
                  &lt;BR/&gt;
                  The String &lt;code&gt;inclusiveNamespaces=&quot; xenc    ds #default&quot;&lt;/code&gt;
                  is returned as a Set containing the following Strings:
                  &lt;UL&gt;
                  &lt;LI&gt;&lt;code&gt;xmlns&lt;/code&gt;&lt;/LI&gt;
                  &lt;LI&gt;&lt;code&gt;xenc&lt;/code&gt;&lt;/LI&gt;
                  &lt;LI&gt;&lt;code&gt;ds&lt;/code&gt;&lt;/LI&gt;
                  &lt;/UL&gt;                
                <param>
                    inclusiveNamespaces                    
                </param>
                <return>
                    A set to string                    
                </return>
            </javadoc>
            <method name="prefixStr2Set" type="SortedSet" line="141">
                <params>
                    <param name="inclusiveNamespaces" type="String"/>
                </params>
                <declaration name="prefixes" type="SortedSet" line="143"/>
                <scope line="146"/>
                <declaration name="st" type="StringTokenizer" line="150"/>
                <scope line="152">
                    <declaration name="prefix" type="String" line="153"/>
                    <scope line="155"/>
                    <scope line="157"/>
                </scope>
            </method>
            <javadoc line="165">
                Method getBaseNamespace                
                <inheritDoc>
                                        
                </inheritDoc>
            </javadoc>
            <method name="getBaseNamespace" type="String" line="170"/>
            <javadoc line="174">
                Method getBaseLocalName                
                <inheritDoc>
                                        
                </inheritDoc>
            </javadoc>
            <method name="getBaseLocalName" type="String" line="179"/>
        </class>
    </source>