<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.utils">
        <import package="java.io.BufferedReader"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.math.BigInteger"/>
        <import package="com.sun.org.apache.xml.internal.security.exceptions.Base64DecodingException"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.w3c.dom.Text"/>
        <class name="Base64" line="12">
            <javadoc line="12">
                Implementation of MIME&apos;s Base64 encoding and decoding conversions.
                  Optimized code. (raw version taken from oreilly.jonathan.util,
                  and currently com.sun.org.apache.xerces.internal.ds.util.Base64)                
                <author>
                    Raul Benito(Of the xerces copy, and little adaptations).                    
                </author>
                <author>
                    Anli Shundi                    
                </author>
                <author>
                    Christian Geuer-Pollmann                    
                </author>
                <see>
                    &lt;A HREF=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045&lt;/A&gt;                    
                </see>
                <see>
                    com.sun.org.apache.xml.internal.security.transforms.implementations.TransformBase64Decode                    
                </see>
            </javadoc>
            <declaration name="BASE64DEFAULTLENGTH" type="int" line="23"/>
            <javadoc line="23">
                Field BASE64DEFAULTLENGTH                
            </javadoc>
            <method name="Base64" type="constructor" line="27"/>
            <javadoc line="29">
                Returns a byte-array representation of a &lt;code&gt;{@link BigInteger}&lt;code&gt;.
                  No sign-bit is outputed.
                  &lt;b&gt;N.B.:&lt;/B&gt; &lt;code&gt;{@link BigInteger}&lt;code&gt;&apos;s toByteArray
                  retunrs eventually longer arrays because of the leading sign-bit.                
                <param>
                    big &lt;code&gt;BigInteger&lt;code&gt; to be converted                    
                </param>
                <param>
                    bitlen &lt;code&gt;int&lt;code&gt; the desired length in bits of the representation                    
                </param>
                <return>
                    a byte array with &lt;code&gt;bitlen&lt;/code&gt; bits of &lt;code&gt;big&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="getBytes" type="byte[]" line="38">
                <params>
                    <param name="big" type="BigInteger"/>
                    <param name="bitlen" type="int"/>
                </params>
                <scope line="40"/>
                <declaration name="bigBytes" type="byte[]" line="43"/>
                <scope line="44"/>
                <declaration name="startSrc" type="int" line="47"/>
                <declaration name="bigLen" type="int" line="48"/>
                <scope line="49"/>
                <declaration name="startDst" type="int" line="53"/>
                <declaration name="resizedBytes" type="byte[]" line="54"/>
            </method>
            <javadoc line="58">
                Encode in Base64 the given &lt;code&gt;{@link BigInteger}&lt;code&gt;.                
                <param>
                    big                    
                </param>
                <return>
                    String with Base64 encoding                    
                </return>
            </javadoc>
            <method name="encode" type="String" line="63">
                <params>
                    <param name="big" type="BigInteger"/>
                </params>
            </method>
            <javadoc line="66">
                Returns a byte-array representation of a &lt;code&gt;{@link BigInteger}&lt;code&gt;.
                  No sign-bit is outputed.
                  &lt;b&gt;N.B.:&lt;/B&gt; &lt;code&gt;{@link BigInteger}&lt;code&gt;&apos;s toByteArray
                  retunrs eventually longer arrays because of the leading sign-bit.                
                <param>
                    big &lt;code&gt;BigInteger&lt;code&gt; to be converted                    
                </param>
                <param>
                    bitlen &lt;code&gt;int&lt;code&gt; the desired length in bits of the representation                    
                </param>
                <return>
                    a byte array with &lt;code&gt;bitlen&lt;/code&gt; bits of &lt;code&gt;big&lt;/code&gt;                    
                </return>
            </javadoc>
            <method name="encode" type="byte[]" line="75">
                <params>
                    <param name="big" type="BigInteger"/>
                    <param name="bitlen" type="int"/>
                </params>
                <scope line="77"/>
                <declaration name="bigBytes" type="byte[]" line="80"/>
                <scope line="81"/>
                <declaration name="startSrc" type="int" line="84"/>
                <declaration name="bigLen" type="int" line="85"/>
                <scope line="86"/>
                <declaration name="startDst" type="int" line="90"/>
                <declaration name="resizedBytes" type="byte[]" line="91"/>
            </method>
            <javadoc line="95">
                Method decodeBigIntegerFromElement                
                <param>
                    element                    
                </param>
                <return>
                    the biginter obtained from the node                    
                </return>
                <throws>
                    Base64DecodingException                    
                </throws>
            </javadoc>
            <method name="decodeBigIntegerFromElement" type="BigInteger" line="101">
                <params>
                    <param name="element" type="Element"/>
                </params>
            </method>
            <javadoc line="104">
                Method decodeBigIntegerFromText                
                <param>
                    text                    
                </param>
                <return>
                    the biginter obtained from the text node                    
                </return>
                <throws>
                    Base64DecodingException                    
                </throws>
            </javadoc>
            <method name="decodeBigIntegerFromText" type="BigInteger" line="110">
                <params>
                    <param name="text" type="Text"/>
                </params>
            </method>
            <javadoc line="113">
                This method takes an (empty) Element and a BigInteger and adds the
                  base64 encoded BigInteger to the Element.                
                <param>
                    element                    
                </param>
                <param>
                    biginteger                    
                </param>
            </javadoc>
            <method name="fillElementWithBigInteger" type="void" line="119">
                <params>
                    <param name="element" type="Element"/>
                    <param name="biginteger" type="BigInteger"/>
                </params>
                <declaration name="encodedInt" type="String" line="120"/>
                <scope line="121"/>
                <declaration name="doc" type="Document" line="124"/>
                <declaration name="text" type="Text" line="125"/>
            </method>
            <javadoc line="128">
                Method decode
                  Takes the &lt;CODE&gt;Text&lt;/CODE&gt; children of the Element and interprets
                  them as input for the &lt;CODE&gt;Base64.decode()&lt;/CODE&gt; function.                
                <param>
                    element                    
                </param>
                <return>
                    the byte obtained of the decoding the element
                      $todo$ not tested yet                    
                </return>
                <throws>
                    Base64DecodingException                    
                </throws>
            </javadoc>
            <method name="decode" type="byte[]" line="137">
                <params>
                    <param name="element" type="Element"/>
                </params>
                <declaration name="sibling" type="Node" line="138"/>
                <declaration name="sb" type="StringBuffer" line="139"/>
                <scope line="140">
                    <scope line="141">
                        <declaration name="t" type="Text" line="142"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="149">
                Method encodeToElement                
                <param>
                    doc                    
                </param>
                <param>
                    localName                    
                </param>
                <param>
                    bytes                    
                </param>
                <return>
                    an Element with the base64 encoded in the text.                    
                </return>
            </javadoc>
            <method name="encodeToElement" type="Element" line="156">
                <params>
                    <param name="doc" type="Document"/>
                    <param name="localName" type="String"/>
                    <param name="bytes" type="byte[]"/>
                </params>
                <declaration name="el" type="Element" line="157"/>
                <declaration name="text" type="Text" line="158"/>
            </method>
            <javadoc line="162">
                Method decode                
                <param>
                    base64                    
                </param>
                <return>
                    the UTF bytes of the base64                    
                </return>
                <throws>
                    Base64DecodingException                    
                </throws>
            </javadoc>
            <method name="decode" type="byte[]" line="168">
                <params>
                    <param name="base64" type="byte[]"/>
                </params>
            </method>
            <javadoc line="171">
                Encode a byte array and fold lines at the standard 76th character unless
                  ignore line breaks property is set.                
                <param>
                    binaryData &lt;code&gt;byte[]&lt;code&gt; to be base64 encoded                    
                </param>
                <return>
                    the &lt;code&gt;String&lt;code&gt; with encoded data                    
                </return>
            </javadoc>
            <method name="encode" type="String" line="177">
                <params>
                    <param name="binaryData" type="byte[]"/>
                </params>
            </method>
            <javadoc line="180">
                Base64 decode the lines from the reader and return an InputStream
                  with the bytes.                
                <param>
                    reader                    
                </param>
                <return>
                    InputStream with the decoded bytes                    
                </return>
                <exception>
                    IOException passes what the reader throws                    
                </exception>
                <throws>
                    IOException                    
                </throws>
                <throws>
                    Base64DecodingException                    
                </throws>
            </javadoc>
            <method name="decode" type="byte[]" line="189">
                <params>
                    <param name="reader" type="BufferedReader"/>
                </params>
                <declaration name="baos" type="UnsyncByteArrayOutputStream" line="190"/>
                <declaration name="line" type="String" line="191"/>
                <scope line="192">
                    <declaration name="bytes" type="byte[]" line="193"/>
                </scope>
            </method>
            <declaration name="BASELENGTH" type="int" line="198"/>
            <declaration name="LOOKUPLENGTH" type="int" line="199"/>
            <declaration name="TWENTYFOURBITGROUP" type="int" line="200"/>
            <declaration name="EIGHTBIT" type="int" line="201"/>
            <declaration name="SIXTEENBIT" type="int" line="202"/>
            <declaration name="FOURBYTE" type="int" line="203"/>
            <declaration name="SIGN" type="int" line="204"/>
            <declaration name="PAD" type="char" line="205"/>
            <declaration name="base64Alphabet" type="byte[]" line="206"/>
            <declaration name="lookUpBase64Alphabet" type="char[]" line="207"/>
            <scope line="208">
                <scope line="209"/>
                <scope line="212"/>
                <scope line="215"/>
                <scope line="218"/>
            </scope>
            <method name="isWhiteSpace" type="boolean" line="229">
                <params>
                    <param name="octect" type="byte"/>
                </params>
            </method>
            <method name="isPad" type="boolean" line="232">
                <params>
                    <param name="octect" type="byte"/>
                </params>
            </method>
            <javadoc line="235">
                Encode a byte array in Base64 format and return an optionally
                  wrapped line.                
                <param>
                    binaryData &lt;code&gt;byte[]&lt;/code&gt; data to be encoded                    
                </param>
                <param>
                    length &lt;code&gt;int&lt;code&gt; length of wrapped lines; No wrapping if less than 4.                    
                </param>
                <return>
                    a &lt;code&gt;String&lt;/code&gt; with encoded data                    
                </return>
            </javadoc>
            <method name="encode" type="String" line="242">
                <params>
                    <param name="binaryData" type="byte[]"/>
                    <param name="length" type="int"/>
                </params>
                <scope line="243"/>
                <declaration name="lengthDataBits" type="int" line="247"/>
                <scope line="248"/>
                <declaration name="fewerThan24bits" type="int" line="251"/>
                <declaration name="numberTriplets" type="int" line="252"/>
                <declaration name="numberQuartet" type="int" line="253"/>
                <declaration name="quartesPerLine" type="int" line="254"/>
                <declaration name="numberLines" type="int" line="255"/>
                <declaration name="encodedData" type="char" line="256"/>
                <declaration name="k" type="byte" line="258"/>
                <declaration name="encodedIndex" type="int" line="259"/>
                <declaration name="dataIndex" type="int" line="260"/>
                <declaration name="i" type="int" line="261"/>
                <scope line="262">
                    <scope line="263">
                        <declaration name="val1" type="byte" line="269"/>
                        <declaration name="val2" type="byte" line="270"/>
                        <declaration name="val3" type="byte" line="271"/>
                    </scope>
                </scope>
                <scope line="280">
                    <declaration name="val1" type="byte" line="286"/>
                    <declaration name="val2" type="byte" line="287"/>
                    <declaration name="val3" type="byte" line="288"/>
                </scope>
                <scope line="294">
                    <declaration name="val1" type="byte" line="297"/>
                </scope>
                <scope line="303">
                    <declaration name="val1" type="byte" line="308"/>
                    <declaration name="val2" type="byte" line="309"/>
                </scope>
            </method>
            <javadoc line="317">
                Decodes Base64 data into octects                
                <param>
                    encoded String containing base64 encoded data                    
                </param>
                <return>
                    byte array containing the decoded data                    
                </return>
                <throws>
                    Base64DecodingException if there is a problem decoding the data                    
                </throws>
            </javadoc>
            <method name="decode" type="byte[]" line="323">
                <params>
                    <param name="encoded" type="String"/>
                </params>
                <declaration name="bytes" type="byte[]" line="325"/>
                <declaration name="len" type="int" line="326"/>
            </method>
            <method name="getBytesInternal" type="int" line="329">
                <params>
                    <param name="s" type="String"/>
                    <param name="result" type="byte[]"/>
                </params>
                <declaration name="length" type="int" line="330"/>
                <declaration name="newSize" type="int" line="331"/>
                <scope line="332">
                    <declaration name="dataS" type="byte" line="333"/>
                </scope>
            </method>
            <method name="decodeInternal" type="byte[]" line="338">
                <params>
                    <param name="base64Data" type="byte[]"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="340"/>
                <declaration name="numberQuadruple" type="int" line="343"/>
                <declaration name="decodedData" type="byte" line="345"/>
                <declaration name="b1" type="byte" line="346"/>
                <declaration name="i" type="int" line="347"/>
                <declaration name="encodedIndex" type="int" line="348"/>
                <declaration name="dataIndex" type="int" line="349"/>
                <scope line="354"/>
                <declaration name="d3" type="byte" line="357"/>
                <scope line="360">
                    <scope line="361"/>
                    <scope line="366"/>
                    <scope line="372"/>
                </scope>
                <scope line="376"/>
                <scope line="384">
                    <scope line="389"/>
                </scope>
            </method>
            <javadoc line="398">
                Decodes Base64 data into  outputstream                
                <param>
                    base64Data String containing Base64 data                    
                </param>
                <param>
                    os the outputstream                    
                </param>
                <throws>
                    IOException                    
                </throws>
                <throws>
                    Base64DecodingException                    
                </throws>
            </javadoc>
            <method name="decode" type="void" line="405">
                <params>
                    <param name="base64Data" type="String"/>
                    <param name="os" type="OutputStream"/>
                </params>
                <declaration name="bytes" type="byte[]" line="406"/>
                <declaration name="len" type="int" line="407"/>
            </method>
            <javadoc line="410">
                Decodes Base64 data into  outputstream                
                <param>
                    base64Data Byte array containing Base64 data                    
                </param>
                <param>
                    os the outputstream                    
                </param>
                <throws>
                    IOException                    
                </throws>
                <throws>
                    Base64DecodingException                    
                </throws>
            </javadoc>
            <method name="decode" type="void" line="417">
                <params>
                    <param name="base64Data" type="byte[]"/>
                    <param name="os" type="OutputStream"/>
                </params>
            </method>
            <method name="decode" type="void" line="420">
                <params>
                    <param name="base64Data" type="byte[]"/>
                    <param name="os" type="OutputStream"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="422"/>
                <declaration name="numberQuadruple" type="int" line="425"/>
                <declaration name="b1" type="byte" line="427"/>
                <declaration name="i" type="int" line="428"/>
                <declaration name="dataIndex" type="int" line="429"/>
                <scope line="430"/>
                <scope line="442"/>
                <declaration name="d3" type="byte" line="445"/>
                <scope line="448">
                    <scope line="449"/>
                    <scope line="453"/>
                    <scope line="458"/>
                </scope>
                <scope line="462"/>
            </method>
            <javadoc line="469">
                Decodes Base64 data into  outputstream                
                <param>
                    is containing Base64 data                    
                </param>
                <param>
                    os the outputstream                    
                </param>
                <throws>
                    IOException                    
                </throws>
                <throws>
                    Base64DecodingException                    
                </throws>
            </javadoc>
            <method name="decode" type="void" line="476">
                <params>
                    <param name="is" type="InputStream"/>
                    <param name="os" type="OutputStream"/>
                </params>
                <declaration name="b1" type="byte" line="477"/>
                <declaration name="index" type="int" line="478"/>
                <declaration name="data" type="byte[]" line="479"/>
                <declaration name="read" type="int" line="480"/>
                <scope line="481">
                    <declaration name="readed" type="byte" line="482"/>
                    <scope line="483"/>
                    <scope line="486"/>
                    <scope line="491"/>
                    <scope line="494"/>
                </scope>
                <declaration name="d1" type="byte" line="506"/>
                <scope line="511">
                    <scope line="512"/>
                    <scope line="516"/>
                    <scope line="522"/>
                </scope>
                <scope line="526"/>
            </method>
            <javadoc line="533">
                remove WhiteSpace from MIME containing encoded Base64 data.                
                <param>
                    data  the byte array of base64 data (with WS)                    
                </param>
                <return>
                    the new length                    
                </return>
            </javadoc>
            <method name="removeWhiteSpace" type="int" line="538">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
                <declaration name="newSize" type="int" line="540"/>
                <declaration name="len" type="int" line="541"/>
                <scope line="542">
                    <declaration name="dataS" type="byte" line="543"/>
                </scope>
            </method>
        </class>
    </source>