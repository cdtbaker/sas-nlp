<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.transforms.implementations">
        <import package="java.io.ByteArrayInputStream"/>
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.lang.reflect.Method"/>
        <import package="javax.xml.transform.Source"/>
        <import package="javax.xml.transform.Transformer"/>
        <import package="javax.xml.transform.TransformerConfigurationException"/>
        <import package="javax.xml.transform.TransformerException"/>
        <import package="javax.xml.transform.TransformerFactory"/>
        <import package="javax.xml.transform.dom.DOMSource"/>
        <import package="javax.xml.transform.stream.StreamResult"/>
        <import package="javax.xml.transform.stream.StreamSource"/>
        <import package="com.sun.org.apache.xml.internal.security.exceptions.XMLSecurityException"/>
        <import package="com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.Transform"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.TransformSpi"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.TransformationException"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.Transforms"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.XMLUtils"/>
        <import package="org.w3c.dom.Element"/>
        <class name="TransformXSLT" line="47">
            <extends class="TransformSpi"/>
            <comment line="61">
                J-                
            </comment>
            <comment line="66">
                check for secure processing feature                
            </comment>
            <javadoc line="47">
                Class TransformXSLT
                  Implements the &lt;CODE&gt;http://www.w3.org/TR/1999/REC-xslt-19991116&lt;/CODE&gt;
                  transform.                
                <author>
                    Christian Geuer-Pollmann                    
                </author>
            </javadoc>
            <declaration name="implementedTransformURI" type="String" line="57"/>
            <javadoc line="57">
                Field implementedTransformURI                
            </javadoc>
            <declaration name="XSLTSpecNS" type="String" line="61"/>
            <declaration name="defaultXSLTSpecNSprefix" type="String" line="62"/>
            <declaration name="XSLTSTYLESHEET" type="String" line="63"/>
            <declaration name="xClass" type="Class" line="66"/>
            <scope line="67">
                <scope line="68"/>
                <scope line="70"/>
            </scope>
            <declaration name="log" type="java.util.logging.Logger" line="73"/>
            <javadoc line="77">
                Method engineGetURI                
                <inheritDoc>
                                        
                </inheritDoc>
            </javadoc>
            <method name="engineGetURI" type="String" line="82"/>
            <javadoc line="86">
                Method enginePerformTransform                
                <param>
                    input the input for this transform                    
                </param>
                <return>
                    the result of this Transform                    
                </return>
                <throws>
                    IOException                    
                </throws>
                <throws>
                    TransformationException                    
                </throws>
            </javadoc>
            <method name="enginePerformTransform" type="XMLSignatureInput" line="97">
                <params>
                    <param name="input" type="XMLSignatureInput"/>
                    <param name="_transformObject" type="Transform"/>
                </params>
            </method>
            <method name="enginePerformTransform" type="XMLSignatureInput" line="103">
                <params>
                    <param name="input" type="XMLSignatureInput"/>
                    <param name="baos" type="OutputStream"/>
                    <param name="_transformObject" type="Transform"/>
                </params>
                <comment line="125">
                    Process XSLT stylesheets in a secure manner                    
                </comment>
                <comment line="128">
                    This transform requires an octet stream as input. If the actual
                     input is an XPath node-set, then the signature application should
                     attempt to convert it to octets (apply Canonical XML]) as described
                     in the Reference Processing Model (section 4.3.3.2).                    
                </comment>
                <comment line="138">
                    This complicated transformation of the stylesheet itself is necessary
                     because of the need to get the pure style sheet. If we simply say
                     Source stylesheet = new DOMSource(this._xsltElement);
                     whereby this._xsltElement is not the rootElement of the Document,
                     this causes problems;
                     so we convert the stylesheet to byte[] and use this as input stream                    
                </comment>
                <comment line="160">
                    Force Xalan to use \n as line separator on all OSes. This
                     avoids OS specific signature validation failures due to line
                     separator differences in the transformed output. Unfortunately,
                     this is not a standard JAXP property so will not work with non-Xalan
                     implementations.                    
                </comment>
                <scope line="104">
                    <declaration name="exArgs" type="Object" line="105"/>
                </scope>
                <scope line="108">
                    <declaration name="transformElement" type="Element" line="109"/>
                    <declaration name="_xsltElement" type="Element" line="111"/>
                    <scope line="115">
                        <declaration name="exArgs" type="Object" line="116"/>
                    </scope>
                    <declaration name="tFactory" type="TransformerFactory" line="121"/>
                    <declaration name="c" type="Class" line="122"/>
                    <declaration name="m" type="Method" line="123"/>
                    <declaration name="xmlSource" type="Source" line="133"/>
                    <declaration name="stylesheet" type="Source" line="135"/>
                    <scope line="145">
                        <declaration name="os" type="ByteArrayOutputStream" line="146"/>
                        <declaration name="transformer" type="Transformer" line="147"/>
                        <declaration name="source" type="DOMSource" line="148"/>
                        <declaration name="result" type="StreamResult" line="149"/>
                    </scope>
                    <declaration name="transformer" type="Transformer" line="157"/>
                    <scope line="164"/>
                    <scope line="167"/>
                    <scope line="172">
                        <declaration name="baos1" type="ByteArrayOutputStream" line="173"/>
                        <declaration name="outputTarget" type="StreamResult" line="174"/>
                    </scope>
                    <declaration name="outputTarget" type="StreamResult" line="178"/>
                    <declaration name="output" type="XMLSignatureInput" line="181"/>
                </scope>
                <scope line="184">
                    <declaration name="exArgs" type="Object" line="185"/>
                </scope>
                <scope line="188">
                    <declaration name="exArgs" type="Object" line="189"/>
                </scope>
                <scope line="192">
                    <declaration name="exArgs" type="Object" line="193"/>
                </scope>
                <scope line="196">
                    <declaration name="exArgs" type="Object" line="197"/>
                </scope>
                <scope line="200">
                    <declaration name="exArgs" type="Object" line="201"/>
                </scope>
                <scope line="204">
                    <declaration name="exArgs" type="Object" line="205"/>
                </scope>
            </method>
        </class>
    </source>