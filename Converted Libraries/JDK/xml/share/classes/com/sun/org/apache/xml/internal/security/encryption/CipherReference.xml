<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.encryption">
        <import package="org.w3c.dom.Attr"/>
        <interface name="CipherReference">
            <javadoc line="3">
                &lt;code&gt;CipherReference&lt;/code&gt; identifies a source which, when processed,
                  yields the encrypted octet sequence.
                  &lt;p&gt;
                  The actual value is obtained as follows. The &lt;code&gt;CipherReference URI&lt;/code&gt;
                  contains an identifier that is dereferenced. Should the
                  &lt;code&gt;CipherReference&lt;/code&gt; element contain an OPTIONAL sequence of
                  Transforms, the data resulting from dereferencing the &lt;code&gt;URI&lt;/code&gt; is
                  transformed as specified so as to yield the intended cipher value. For
                  example, if the value is base64 encoded within an XML document; the
                  transforms could specify an XPath expression followed by a base64 decoding so
                  as to extract the octets.
                  &lt;p&gt;
                  The syntax of the &lt;code&gt;URI&lt;/code&gt; and Transforms is similar to that of
                  [XML-DSIG]. However, there is a difference between signature and encryption
                  processing. In [XML-DSIG] both generation and validation processing start
                  with the same source data and perform that transform in the same order. In
                  encryption, the decryptor has only the cipher data and the specified
                  transforms are enumerated for the decryptor, in the order necessary to obtain
                  the octets. Consequently, because it has different semantics Transforms is in
                  the &amp;xenc; namespace.
                  &lt;p&gt;
                  The schema definition is as follows:
                  &lt;xmp&gt;
                  &lt;element name=&apos;CipherReference&apos; type=&apos;xenc:CipherReferenceType&apos;/&gt;
                  &lt;complexType name=&apos;CipherReferenceType&apos;&gt;
                  &lt;sequence&gt;
                  &lt;element name=&apos;Transforms&apos; type=&apos;xenc:TransformsType&apos; minOccurs=&apos;0&apos;/&gt;
                  &lt;/sequence&gt;
                  &lt;attribute name=&apos;URI&apos; type=&apos;anyURI&apos; use=&apos;required&apos;/&gt;
                  &lt;/complexType&gt;
                  &lt;/xmp&gt;                
                <author>
                    Axl Mattheus                    
                </author>
            </javadoc>
            <method name="getURI" type="String" line="38"/>
            <javadoc line="38">
                Returns an &lt;code&gt;URI&lt;/code&gt; that contains an identifier that should be
                  dereferenced.                
                <return>
                                        
                </return>
            </javadoc>
            <method name="getURIAsAttr" type="Attr" line="44"/>
            <javadoc line="44">
                Gets the URI as an Attribute node.  Used to meld the CipherREference
                  with the XMLSignature ResourceResolvers                
                <return>
                                        
                </return>
            </javadoc>
            <method name="getTransforms" type="Transforms" line="50"/>
            <javadoc line="50">
                Returns the &lt;code&gt;Transforms&lt;/code&gt; that specifies how to transform the
                  &lt;code&gt;URI&lt;/code&gt; to yield the appropiate cipher value.                
                <return>
                    the transform that specifies how to transform the reference to
                      yield the intended cipher value.                    
                </return>
            </javadoc>
            <method name="setTransforms" type="void" line="57"/>
            <javadoc line="57">
                Sets the &lt;code&gt;Transforms&lt;/code&gt; that specifies how to transform the
                  &lt;code&gt;URI&lt;/code&gt; to yield the appropiate cipher value.                
                <param>
                    transforms the set of &lt;code&gt;Transforms&lt;/code&gt; that specifies how
                      to transform the reference to yield the intended cipher value.                    
                </param>
            </javadoc>
        </interface>
    </source>