<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.encryption">
        <import package="java.io.IOException"/>
        <import package="com.sun.org.apache.xml.internal.security.c14n.CanonicalizationException"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.resolver.ResourceResolver"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.resolver.ResourceResolverException"/>
        <import package="com.sun.org.apache.xml.internal.security.exceptions.Base64DecodingException"/>
        <import package="com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput"/>
        <import package="com.sun.org.apache.xml.internal.security.transforms.TransformationException"/>
        <import package="org.w3c.dom.Attr"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.Base64"/>
        <class name="XMLCipherInput" line="36">
            <javadoc line="36">
                &lt;code&gt;XMLCipherInput&lt;/code&gt; is used to wrap input passed into the
                  XMLCipher encryption operations.
                  In decryption mode, it takes a &lt;code&gt;CipherData&lt;/code&gt; object and allows
                  callers to dereference the CipherData into the encrypted bytes that it
                  actually represents.  This takes care of all base64 encoding etc.
                  While primarily an internal class, this can be used by applications to
                  quickly and easily retrieve the encrypted bytes from an EncryptedType
                  object                
                <author>
                    Berin Lautenbach                    
                </author>
            </javadoc>
            <declaration name="logger" type="java.util.logging.Logger" line="52"/>
            <declaration name="_cipherData" type="CipherData" line="55"/>
            <javadoc line="55">
                The data we are working with                
            </javadoc>
            <declaration name="_mode" type="int" line="58"/>
            <javadoc line="58">
                MODES                
            </javadoc>
            <javadoc line="61">
                Constructor for processing encrypted octets                
                <param>
                    data The <code>CipherData</code> object to read the bytes from                    
                </param>
                <throws>
                    XMLEncryptionException {@link XMLEncryptionException}                    
                </throws>
            </javadoc>
            <method name="XMLCipherInput" type="constructor" line="68">
                <params>
                    <param name="data" type="CipherData"/>
                </params>
                <scope line="72"/>
            </method>
            <javadoc line="78">
                Constructor for processing encrypted octets                
                <param>
                    input The <code>EncryptedType</code> object to read
                      the bytes from.                    
                </param>
                <throws>
                    XMLEncryptionException {@link XMLEncryptionException}                    
                </throws>
            </javadoc>
            <method name="XMLCipherInput" type="constructor" line="86">
                <params>
                    <param name="input" type="EncryptedType"/>
                </params>
                <scope line="90"/>
            </method>
            <javadoc line="96">
                Dereferences the input and returns it as a single byte array.                
                <throws>
                    XMLEncryptionException                    
                </throws>
                <return>
                    The decripted bytes.                    
                </return>
            </javadoc>
            <method name="getBytes" type="byte[]" line="103">
                <scope line="105"/>
            </method>
            <javadoc line="111">
                Internal method to get bytes in decryption mode                
                <return>
                    the decripted bytes                    
                </return>
                <throws>
                    XMLEncryptionException                    
                </throws>
            </javadoc>
            <method name="getDecryptBytes" type="byte[]" line="116">
                <comment line="122">
                    Fun time!                    
                </comment>
                <comment line="126">
                    Need to wrap the uri in an Attribute node so that we can
                     Pass to the resource resolvers                    
                </comment>
                <comment line="146">
                    Lets see if there are any transforms                    
                </comment>
                <comment line="167">
                    retrieve the cipher text                    
                </comment>
                <declaration name="base64EncodedEncryptedOctets" type="String" line="118"/>
                <scope line="120">
                    <declaration name="cr" type="CipherReference" line="123"/>
                    <declaration name="uriAttr" type="Attr" line="128"/>
                    <declaration name="input" type="XMLSignatureInput" line="129"/>
                    <scope line="131">
                        <declaration name="resolver" type="ResourceResolver" line="132"/>
                    </scope>
                    <scope line="135"/>
                    <scope line="139"/>
                    <scope line="141"/>
                    <declaration name="transforms" type="Transforms" line="146"/>
                    <scope line="147">
                        <scope line="149">
                            <declaration name="dsTransforms" type="com.sun.org.apache.xml.internal.security.transforms.Transforms" line="150"/>
                        </scope>
                        <scope line="153"/>
                    </scope>
                    <scope line="158"/>
                    <scope line="160"/>
                    <scope line="162"/>
                </scope>
                <scope line="167"/>
                <scope line="170"/>
                <declaration name="encryptedBytes" type="byte[]" line="176"/>
                <scope line="177"/>
                <scope line="179"/>
            </method>
        </class>
    </source>