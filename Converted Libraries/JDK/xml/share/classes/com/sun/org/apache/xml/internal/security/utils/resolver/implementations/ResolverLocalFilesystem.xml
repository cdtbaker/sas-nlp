<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.utils.resolver.implementations">
        <import package="java.io.FileInputStream"/>
        <import package="com.sun.org.apache.xml.internal.utils.URI"/>
        <import package="com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.resolver.ResourceResolverException"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.resolver.ResourceResolverSpi"/>
        <import package="org.w3c.dom.Attr"/>
        <class name="ResolverLocalFilesystem" line="31">
            <extends class="ResourceResolverSpi"/>
            <javadoc line="31">
                A simple ResourceResolver for requests into the local filesystem.                
                <author>
                    $Author: mullan $                    
                </author>
            </javadoc>
            <declaration name="log" type="java.util.logging.Logger" line="38"/>
            <javadoc line="38">
                {@link java.util.logging} logging facility                
            </javadoc>
            <method name="engineIsThreadSafe" type="boolean" line="43"/>
            <javadoc line="46">
                @inheritDoc                
            </javadoc>
            <method name="engineResolve" type="XMLSignatureInput" line="50">
                <params>
                    <param name="uri" type="Attr"/>
                    <param name="BaseURI" type="String"/>
                </params>
                <comment line="56">
                    if the URI contains a fragment, ignore it                    
                </comment>
                <scope line="52">
                    <declaration name="uriNew" type="URI" line="53"/>
                    <declaration name="uriNewNoFrag" type="URI" line="56"/>
                    <declaration name="fileName" type="String" line="60"/>
                    <declaration name="inputStream" type="FileInputStream" line="63"/>
                    <declaration name="result" type="XMLSignatureInput" line="64"/>
                </scope>
                <scope line="69"/>
            </method>
            <declaration name="FILE_URI_LENGTH" type="int" line="75"/>
            <javadoc line="76">
                Method translateUriToFilename                
                <param>
                    uri                    
                </param>
                <return>
                    the string of the filename                    
                </return>
            </javadoc>
            <method name="translateUriToFilename" type="String" line="82">
                <params>
                    <param name="uri" type="String"/>
                </params>
                <comment line="108">
                    we&apos;re running M$ Windows, so this works fine                    
                </comment>
                <comment line="111">
                    we&apos;re running some UNIX, so we have to prepend a slash                    
                </comment>
                <declaration name="subStr" type="String" line="84"/>
                <scope line="87">
                    <declaration name="offset" type="int" line="88"/>
                    <declaration name="index" type="int" line="89"/>
                    <declaration name="temp" type="StringBuffer" line="90"/>
                    <scope line="92">
                        <scope line="96"/>
                    </scope>
                </scope>
                <scope line="106"/>
            </method>
            <javadoc line="114">
                @inheritDoc                
            </javadoc>
            <method name="engineCanResolve" type="boolean" line="117">
                <params>
                    <param name="uri" type="Attr"/>
                    <param name="BaseURI" type="String"/>
                </params>
                <comment line="132">
                    URI uriNew = new URI(new URI(BaseURI), uri.getNodeValue());                    
                </comment>
                <comment line="134">
                                        
                </comment>
                <comment line="137">
                                        
                </comment>
                <comment line="139">
                                        
                </comment>
                <scope line="119"/>
                <declaration name="uriNodeValue" type="String" line="123"/>
                <scope line="126"/>
                <scope line="130">
                    <scope line="136"/>
                </scope>
                <scope line="142"/>
            </method>
            <method name="getNewURI" type="URI" line="150">
                <params>
                    <param name="uri" type="String"/>
                    <param name="BaseURI" type="String"/>
                </params>
                <scope line="152"/>
            </method>
        </class>
    </source>