<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.c14n.implementations">
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.io.UnsupportedEncodingException"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="java.util.ListIterator"/>
        <import package="java.util.Map"/>
        <import package="java.util.Set"/>
        <import package="javax.xml.parsers.DocumentBuilderFactory"/>
        <import package="javax.xml.parsers.ParserConfigurationException"/>
        <import package="com.sun.org.apache.xml.internal.security.c14n.CanonicalizationException"/>
        <import package="com.sun.org.apache.xml.internal.security.c14n.CanonicalizerSpi"/>
        <import package="com.sun.org.apache.xml.internal.security.c14n.helper.AttrCompare"/>
        <import package="com.sun.org.apache.xml.internal.security.signature.NodeFilter"/>
        <import package="com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.Constants"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.UnsyncByteArrayOutputStream"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.XMLUtils"/>
        <import package="org.w3c.dom.Attr"/>
        <import package="org.w3c.dom.Comment"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.NamedNodeMap"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.w3c.dom.ProcessingInstruction"/>
        <import package="org.xml.sax.SAXException"/>
        <class name="CanonicalizerBase" line="30">
            <extends class="CanonicalizerSpi"/>
            <javadoc line="30">
                Abstract base class for canonicalization algorithms.                
                <author>
                    Christian Geuer-Pollmann &lt;geuerp@apache.org&gt;                    
                </author>
                <version>
                    $Revision: 1.5 $                    
                </version>
            </javadoc>
            <declaration name="_END_PI" type="byte[]" line="36"/>
            <declaration name="_BEGIN_PI" type="byte[]" line="37"/>
            <declaration name="_END_COMM" type="byte[]" line="38"/>
            <declaration name="_BEGIN_COMM" type="byte[]" line="39"/>
            <declaration name="__XA_" type="byte[]" line="40"/>
            <declaration name="__X9_" type="byte[]" line="41"/>
            <declaration name="_QUOT_" type="byte[]" line="42"/>
            <declaration name="__XD_" type="byte[]" line="43"/>
            <declaration name="_GT_" type="byte[]" line="44"/>
            <declaration name="_LT_" type="byte[]" line="45"/>
            <declaration name="_END_TAG" type="byte[]" line="46"/>
            <declaration name="_AMP_" type="byte[]" line="47"/>
            <declaration name="COMPARE" type="AttrCompare" line="48"/>
            <declaration name="XML" type="String" line="49"/>
            <declaration name="XMLNS" type="String" line="50"/>
            <declaration name="equalsStr" type="byte[]" line="51"/>
            <declaration name="NODE_BEFORE_DOCUMENT_ELEMENT" type="int" line="52"/>
            <declaration name="NODE_NOT_BEFORE_OR_AFTER_DOCUMENT_ELEMENT" type="int" line="53"/>
            <declaration name="NODE_AFTER_DOCUMENT_ELEMENT" type="int" line="54"/>
            <declaration name="nullNode" type="Attr" line="55"/>
            <scope line="56">
                <scope line="57"/>
                <scope line="61"/>
            </scope>
            <declaration name="nodeFilter" type="List" line="65"/>
            <declaration name="_includeComments" type="boolean" line="66"/>
            <declaration name="_xpathNodeSet" type="Set" line="67"/>
            <declaration name="_excludeNode" type="Node" line="68"/>
            <javadoc line="68">
                The node to be skiped/excluded from the DOM tree
                  in subtree canonicalizations.                
            </javadoc>
            <declaration name="_writer" type="OutputStream" line="73"/>
            <javadoc line="74">
                Constructor CanonicalizerBase                
                <param>
                    includeComments                    
                </param>
            </javadoc>
            <method name="CanonicalizerBase" type="constructor" line="78">
                <params>
                    <param name="includeComments" type="boolean"/>
                </params>
            </method>
            <javadoc line="81">
                Method engineCanonicalizeSubTree                
                <inheritDoc>
                                        
                </inheritDoc>
                <param>
                    rootNode                    
                </param>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="engineCanonicalizeSubTree" type="byte[]" line="87">
                <params>
                    <param name="rootNode" type="Node"/>
                </params>
            </method>
            <javadoc line="90">
                Method engineCanonicalizeXPathNodeSet                
                <inheritDoc>
                                        
                </inheritDoc>
                <param>
                    xpathNodeSet                    
                </param>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="engineCanonicalizeXPathNodeSet" type="byte[]" line="96">
                <params>
                    <param name="xpathNodeSet" type="Set"/>
                </params>
            </method>
            <javadoc line="100">
                Canonicalizes a Subtree node.                
                <param>
                    input the root of the subtree to canicalize                    
                </param>
                <return>
                    The canonicalize stream.                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="engineCanonicalize" type="byte[]" line="106">
                <params>
                    <param name="input" type="XMLSignatureInput"/>
                </params>
                <scope line="107">
                    <declaration name="bytes" type="byte[]" line="109"/>
                    <scope line="110"/>
                    <scope line="113"/>
                    <scope line="117">
                        <scope line="120"/>
                        <scope line="123"/>
                    </scope>
                </scope>
                <scope line="130"/>
                <scope line="133"/>
                <scope line="136"/>
                <scope line="139"/>
            </method>
            <javadoc line="143">
                @param _writer The _writer to set.                
            </javadoc>
            <method name="setWriter" type="void" line="146">
                <params>
                    <param name="_writer" type="OutputStream"/>
                </params>
            </method>
            <javadoc line="149">
                Canonicalizes a Subtree node.                
                <param>
                    rootNodethe root of the subtree to canicalize                    
                </param>
                <param>
                    excludeNodea node to be excluded from the canicalize operation                    
                </param>
                <return>
                    The canonicalize stream.                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="engineCanonicalizeSubTree" type="byte[]" line="156">
                <params>
                    <param name="rootNode" type="Node"/>
                    <param name="excludeNode" type="Node"/>
                </params>
                <scope line="158">
                    <declaration name="ns" type="NameSpaceSymbTable" line="159"/>
                    <declaration name="nodeLevel" type="int" line="160"/>
                    <scope line="161"/>
                    <scope line="167">
                        <declaration name="result" type="byte[]" line="168"/>
                        <scope line="169"/>
                    </scope>
                    <scope line="174">
                        <declaration name="result" type="byte[]" line="175"/>
                        <scope line="176"/>
                    </scope>
                </scope>
                <scope line="183"/>
                <scope line="186"/>
            </method>
            <javadoc line="190">
                Method canonicalizeSubTree, this function is a recursive one.                
                <param>
                    currentNode                    
                </param>
                <param>
                    ns                    
                </param>
                <param>
                    endnode                    
                </param>
                <throws>
                    CanonicalizationException                    
                </throws>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="canonicalizeSubTree" type="void" line="198">
                <params>
                    <param name="currentNode" type="Node"/>
                    <param name="ns" type="NameSpaceSymbTable"/>
                    <param name="endnode" type="Node"/>
                    <param name="documentLevel" type="int"/>
                </params>
                <declaration name="sibling" type="Node" line="200"/>
                <declaration name="parentNode" type="Node" line="201"/>
                <declaration name="writer" type="OutputStream" line="202"/>
                <declaration name="excludeNode" type="Node" line="203"/>
                <declaration name="includeComments" type="boolean" line="204"/>
                <declaration name="cache" type="Map" line="205"/>
                <scope line="206">
                    <scope line="221"/>
                    <scope line="234"/>
                    <declaration name="currentElement" type="Element" line="237"/>
                    <declaration name="name" type="String" line="240"/>
                    <declaration name="attrs" type="Iterator" line="242"/>
                    <scope line="243">
                        <scope line="244">
                            <declaration name="attr" type="Attr" line="245"/>
                        </scope>
                    </scope>
                    <scope line="251">
                        <scope line="256"/>
                    </scope>
                    <scope line="260"/>
                    <scope line="265">
                        <scope line="273"/>
                    </scope>
                </scope>
            </method>
            <method name="engineCanonicalizeXPathNodeSetInternal" type="byte[]" line="284">
                <params>
                    <param name="doc" type="Node"/>
                </params>
                <scope line="285">
                    <scope line="288">
                        <declaration name="sol" type="byte[]" line="289"/>
                        <scope line="290"/>
                    </scope>
                    <scope line="295">
                        <declaration name="result" type="byte[]" line="296"/>
                        <scope line="297"/>
                    </scope>
                </scope>
                <scope line="304"/>
                <scope line="307"/>
            </method>
            <javadoc line="311">
                Canoicalizes all the nodes included in the currentNode and contained in the
                  _xpathNodeSet field.                
                <param>
                    currentNode                    
                </param>
                <param>
                    endnode                    
                </param>
                <throws>
                    CanonicalizationException                    
                </throws>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="canonicalizeXPathNodeSet" type="void" line="319">
                <params>
                    <param name="currentNode" type="Node"/>
                    <param name="endnode" type="Node"/>
                </params>
                <declaration name="currentNodeIsVisible" type="boolean" line="321"/>
                <declaration name="ns" type="NameSpaceSymbTable" line="322"/>
                <declaration name="sibling" type="Node" line="324"/>
                <declaration name="parentNode" type="Node" line="325"/>
                <declaration name="writer" type="OutputStream" line="326"/>
                <declaration name="documentLevel" type="int" line="327"/>
                <declaration name="cache" type="Map" line="328"/>
                <scope line="329">
                    <scope line="344"/>
                    <scope line="353">
                        <scope line="355"/>
                    </scope>
                    <declaration name="currentElement" type="Element" line="364"/>
                    <declaration name="name" type="String" line="365"/>
                    <declaration name="i" type="int" line="366"/>
                    <scope line="367"/>
                    <scope line="372"/>
                    <scope line="378"/>
                    <declaration name="attrs" type="Iterator" line="381"/>
                    <scope line="382">
                        <scope line="383">
                            <declaration name="attr" type="Attr" line="384"/>
                        </scope>
                    </scope>
                    <scope line="388"/>
                    <scope line="392">
                        <scope line="393"/>
                        <scope line="399"/>
                        <scope line="402"/>
                    </scope>
                    <scope line="406"/>
                    <scope line="411">
                        <scope line="412"/>
                        <scope line="418"/>
                        <scope line="424"/>
                    </scope>
                </scope>
            </method>
            <method name="isVisibleDO" type="int" line="435">
                <params>
                    <param name="currentNode" type="Node"/>
                    <param name="level" type="int"/>
                </params>
                <scope line="436">
                    <declaration name="it" type="Iterator" line="437"/>
                    <scope line="438">
                        <declaration name="i" type="int" line="439"/>
                    </scope>
                </scope>
            </method>
            <method name="isVisibleInt" type="int" line="446">
                <params>
                    <param name="currentNode" type="Node"/>
                </params>
                <scope line="447">
                    <declaration name="it" type="Iterator" line="448"/>
                    <scope line="449">
                        <declaration name="i" type="int" line="450"/>
                    </scope>
                </scope>
            </method>
            <method name="isVisible" type="boolean" line="457">
                <params>
                    <param name="currentNode" type="Node"/>
                </params>
                <scope line="458">
                    <declaration name="it" type="Iterator" line="459"/>
                    <scope line="460"/>
                </scope>
            </method>
            <method name="handleParent" type="void" line="467">
                <params>
                    <param name="e" type="Element"/>
                    <param name="ns" type="NameSpaceSymbTable"/>
                </params>
                <scope line="468"/>
                <declaration name="attrs" type="NamedNodeMap" line="471"/>
                <declaration name="attrsLength" type="int" line="472"/>
                <scope line="473">
                    <declaration name="N" type="Attr" line="474"/>
                    <scope line="475"/>
                    <declaration name="NName" type="String" line="478"/>
                    <declaration name="NValue" type="String" line="479"/>
                    <scope line="480"/>
                </scope>
            </method>
            <javadoc line="486">
                Adds to ns the definitons from the parent elements of el                
                <param>
                    el                    
                </param>
                <param>
                    ns                    
                </param>
            </javadoc>
            <method name="getParentNameSpaces" type="void" line="491">
                <params>
                    <param name="el" type="Element"/>
                    <param name="ns" type="NameSpaceSymbTable"/>
                </params>
                <declaration name="parents" type="List" line="492"/>
                <declaration name="n1" type="Node" line="493"/>
                <scope line="494"/>
                <declaration name="parent" type="Element" line="497"/>
                <scope line="498">
                    <declaration name="n" type="Node" line="500"/>
                    <scope line="501"/>
                </scope>
                <declaration name="it" type="ListIterator" line="506"/>
                <scope line="507">
                    <declaration name="ele" type="Element" line="508"/>
                </scope>
                <declaration name="nsprefix" type="Attr" line="511"/>
                <scope line="512"/>
            </method>
            <method name="handleAttributes" type="Iterator" line="516"/>
            <javadoc line="516">
                Obtain the attributes to output for this node in XPathNodeSet c14n.                
                <param>
                    E                    
                </param>
                <param>
                    ns                    
                </param>
                <return>
                    the attributes nodes to output.                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="handleAttributesSubtree" type="Iterator" line="524"/>
            <javadoc line="524">
                Obtain the attributes to output for this node in a Subtree c14n.                
                <param>
                    E                    
                </param>
                <param>
                    ns                    
                </param>
                <return>
                    the attributes nodes to output.                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="circumventBugIfNeeded" type="void" line="532"/>
            <javadoc line="533">
                Outputs an Attribute to the internal Writer.
                  The string value of the node is modified by replacing
                  &lt;UL&gt;
                  &lt;LI&gt;all ampersands (&amp;) with &lt;CODE&gt;&amp;amp;amp;&lt;/CODE&gt;&lt;/LI&gt;
                  &lt;LI&gt;all open angle brackets (&lt;) with &lt;CODE&gt;&amp;amp;lt;&lt;/CODE&gt;&lt;/LI&gt;
                  &lt;LI&gt;all quotation mark characters with &lt;CODE&gt;&amp;amp;quot;&lt;/CODE&gt;&lt;/LI&gt;
                  &lt;LI&gt;and the whitespace characters &lt;CODE&gt;#x9&lt;/CODE&gt;, #xA, and #xD, with character
                  references. The character references are written in uppercase
                  hexadecimal with no leading zeroes (for example, &lt;CODE&gt;#xD&lt;/CODE&gt; is represented
                  by the character reference &lt;CODE&gt;&amp;amp;#xD;&lt;/CODE&gt;)&lt;/LI&gt;
                  &lt;/UL&gt;                
                <param>
                    name                    
                </param>
                <param>
                    value                    
                </param>
                <param>
                    writer                    
                </param>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="outputAttrToWriter" type="void" line="550">
                <params>
                    <param name="name" type="String"/>
                    <param name="value" type="String"/>
                    <param name="writer" type="OutputStream"/>
                    <param name="cache" type="Map"/>
                </params>
                <declaration name="toWrite" type="byte[]" line="554"/>
                <declaration name="length" type="int" line="555"/>
                <declaration name="i" type="int" line="556"/>
                <scope line="557">
                    <declaration name="c" type="char" line="558"/>
                    <scope line="579"/>
                    <scope line="582"/>
                </scope>
            </method>
            <javadoc line="592">
                Outputs a PI to the internal Writer.                
                <param>
                    currentPI                    
                </param>
                <param>
                    writer where to write the things                    
                </param>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="outputPItoWriter" type="void" line="598">
                <params>
                    <param name="currentPI" type="ProcessingInstruction"/>
                    <param name="writer" type="OutputStream"/>
                    <param name="position" type="int"/>
                </params>
                <scope line="599"/>
                <declaration name="target" type="String" line="603"/>
                <declaration name="length" type="int" line="604"/>
                <scope line="605">
                    <declaration name="c" type="char" line="606"/>
                    <scope line="607"/>
                    <scope line="610">
                        <scope line="611"/>
                        <scope line="614"/>
                    </scope>
                </scope>
                <declaration name="data" type="String" line="620"/>
                <scope line="622">
                    <scope line="624">
                        <declaration name="c" type="char" line="625"/>
                        <scope line="626"/>
                        <scope line="629"/>
                    </scope>
                </scope>
                <scope line="635"/>
            </method>
            <javadoc line="639">
                Method outputCommentToWriter                
                <param>
                    currentComment                    
                </param>
                <param>
                    writer writer where to write the things                    
                </param>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="outputCommentToWriter" type="void" line="645">
                <params>
                    <param name="currentComment" type="Comment"/>
                    <param name="writer" type="OutputStream"/>
                    <param name="position" type="int"/>
                </params>
                <scope line="646"/>
                <declaration name="data" type="String" line="650"/>
                <declaration name="length" type="int" line="651"/>
                <scope line="652">
                    <declaration name="c" type="char" line="653"/>
                    <scope line="654"/>
                    <scope line="657">
                        <scope line="658"/>
                        <scope line="661"/>
                    </scope>
                </scope>
                <scope line="668"/>
            </method>
            <javadoc line="672">
                Outputs a Text of CDATA section to the internal Writer.                
                <param>
                    text                    
                </param>
                <param>
                    writer writer where to write the things                    
                </param>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="outputTextToWriter" type="void" line="678">
                <params>
                    <param name="text" type="String"/>
                    <param name="writer" type="OutputStream"/>
                </params>
                <declaration name="length" type="int" line="679"/>
                <declaration name="toWrite" type="byte[]" line="680"/>
                <scope line="681">
                    <declaration name="c" type="char" line="682"/>
                    <scope line="697"/>
                    <scope line="700"/>
                </scope>
            </method>
        </class>
    </source>