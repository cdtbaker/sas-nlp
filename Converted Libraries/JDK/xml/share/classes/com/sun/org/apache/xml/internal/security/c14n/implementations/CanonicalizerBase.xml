<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.c14n.implementations">
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.io.UnsupportedEncodingException"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="java.util.ListIterator"/>
        <import package="java.util.Map"/>
        <import package="java.util.Set"/>
        <import package="javax.xml.parsers.DocumentBuilderFactory"/>
        <import package="javax.xml.parsers.ParserConfigurationException"/>
        <import package="com.sun.org.apache.xml.internal.security.c14n.CanonicalizationException"/>
        <import package="com.sun.org.apache.xml.internal.security.c14n.CanonicalizerSpi"/>
        <import package="com.sun.org.apache.xml.internal.security.c14n.helper.AttrCompare"/>
        <import package="com.sun.org.apache.xml.internal.security.signature.NodeFilter"/>
        <import package="com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.Constants"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.UnsyncByteArrayOutputStream"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.XMLUtils"/>
        <import package="org.w3c.dom.Attr"/>
        <import package="org.w3c.dom.Comment"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.NamedNodeMap"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.w3c.dom.ProcessingInstruction"/>
        <import package="org.xml.sax.SAXException"/>
        <class name="CanonicalizerBase" line="57">
            <extends class="CanonicalizerSpi"/>
            <comment line="65">
                Constants to be outputed, In char array form, so                
            </comment>
            <comment line="66">
                less garbage is generate when outputed.                
            </comment>
            <comment line="86">
                The null xmlns definiton.                
            </comment>
            <javadoc line="57">
                Abstract base class for canonicalization algorithms.                
                <author>
                    Christian Geuer-Pollmann <geuerp@apache.org>                    
                </author>
                <version>
                    $Revision: 1.5 $                    
                </version>
            </javadoc>
            <declaration name="_END_PI" type="byte[]" line="66"/>
            <declaration name="_BEGIN_PI" type="byte[]" line="67"/>
            <declaration name="_END_COMM" type="byte[]" line="68"/>
            <declaration name="_BEGIN_COMM" type="byte[]" line="69"/>
            <declaration name="__XA_" type="byte[]" line="70"/>
            <declaration name="__X9_" type="byte[]" line="71"/>
            <declaration name="_QUOT_" type="byte[]" line="72"/>
            <declaration name="__XD_" type="byte[]" line="73"/>
            <declaration name="_GT_" type="byte[]" line="74"/>
            <declaration name="_LT_" type="byte[]" line="75"/>
            <declaration name="_END_TAG" type="byte[]" line="76"/>
            <declaration name="_AMP_" type="byte[]" line="77"/>
            <declaration name="COMPARE" type="AttrCompare" line="78"/>
            <declaration name="XML" type="String" line="79"/>
            <declaration name="XMLNS" type="String" line="80"/>
            <declaration name="equalsStr" type="byte[]" line="81"/>
            <declaration name="NODE_BEFORE_DOCUMENT_ELEMENT" type="int" line="82"/>
            <declaration name="NODE_NOT_BEFORE_OR_AFTER_DOCUMENT_ELEMENT" type="int" line="83"/>
            <declaration name="NODE_AFTER_DOCUMENT_ELEMENT" type="int" line="84"/>
            <declaration name="nullNode" type="Attr" line="86"/>
            <scope line="87">
                <scope line="88"/>
                <scope line="92"/>
            </scope>
            <declaration name="nodeFilter" type="List" line="97"/>
            <declaration name="_includeComments" type="boolean" line="99"/>
            <declaration name="_xpathNodeSet" type="Set" line="100"/>
            <declaration name="_excludeNode" type="Node" line="101"/>
            <javadoc line="101">
                The node to be skiped/excluded from the DOM tree
                  in subtree canonicalizations.                
            </javadoc>
            <declaration name="_writer" type="OutputStream" line="106"/>
            <javadoc line="108">
                Constructor CanonicalizerBase                
                <param>
                    includeComments                    
                </param>
            </javadoc>
            <method name="CanonicalizerBase" type="constructor" line="113">
                <params>
                    <param name="includeComments" type="boolean"/>
                </params>
            </method>
            <javadoc line="117">
                Method engineCanonicalizeSubTree                
                <inheritDoc>
                                        
                </inheritDoc>
                <param>
                    rootNode                    
                </param>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="engineCanonicalizeSubTree" type="byte[]" line="124">
                <params>
                    <param name="rootNode" type="Node"/>
                </params>
            </method>
            <javadoc line="127">
                Method engineCanonicalizeXPathNodeSet                
                <inheritDoc>
                                        
                </inheritDoc>
                <param>
                    xpathNodeSet                    
                </param>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="engineCanonicalizeXPathNodeSet" type="byte[]" line="134">
                <params>
                    <param name="xpathNodeSet" type="Set"/>
                </params>
            </method>
            <javadoc line="139">
                Canonicalizes a Subtree node.                
                <param>
                    input the root of the subtree to canicalize                    
                </param>
                <return>
                    The canonicalize stream.                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="engineCanonicalize" type="byte[]" line="146">
                <params>
                    <param name="input" type="XMLSignatureInput"/>
                </params>
                <scope line="147">
                    <declaration name="bytes" type="byte[]" line="150"/>
                    <scope line="151"/>
                    <scope line="154"/>
                    <scope line="158">
                        <scope line="163"/>
                        <scope line="165"/>
                    </scope>
                </scope>
                <scope line="172"/>
                <scope line="174"/>
                <scope line="176"/>
                <scope line="178"/>
            </method>
            <javadoc line="182">
                @param _writer The _writer to set.                
            </javadoc>
            <method name="setWriter" type="void" line="185">
                <params>
                    <param name="_writer" type="OutputStream"/>
                </params>
            </method>
            <javadoc line="189">
                Canonicalizes a Subtree node.                
                <param>
                    rootNodethe root of the subtree to canicalize                    
                </param>
                <param>
                    excludeNodea node to be excluded from the canicalize operation                    
                </param>
                <return>
                    The canonicalize stream.                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="engineCanonicalizeSubTree" type="byte[]" line="200">
                <params>
                    <param name="rootNode" type="Node"/>
                    <param name="excludeNode" type="Node"/>
                </params>
                <comment line="206">
                    Fills the nssymbtable with the definitions of the parent of the root subnode                    
                </comment>
                <scope line="202">
                    <declaration name="ns" type="NameSpaceSymbTable" line="203"/>
                    <declaration name="nodeLevel" type="int" line="204"/>
                    <scope line="205"/>
                    <scope line="212">
                        <declaration name="result" type="byte[]" line="213"/>
                        <scope line="214"/>
                    </scope>
                    <scope line="218">
                        <declaration name="result" type="byte[]" line="219"/>
                        <scope line="220"/>
                    </scope>
                </scope>
                <scope line="227"/>
                <scope line="229"/>
            </method>
            <javadoc line="235">
                Method canonicalizeSubTree, this function is a recursive one.                
                <param>
                    currentNode                    
                </param>
                <param>
                    ns                    
                </param>
                <param>
                    endnode                    
                </param>
                <throws>
                    CanonicalizationException                    
                </throws>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="canonicalizeSubTree" type="void" line="246">
                <params>
                    <param name="currentNode" type="Node"/>
                    <param name="ns" type="NameSpaceSymbTable"/>
                    <param name="endnode" type="Node"/>
                    <param name="documentLevel" type="int"/>
                </params>
                <comment line="265">
                    illegal node type during traversal                    
                </comment>
                <comment line="295">
                    Add a level to the nssymbtable. So latter can be pop-back.                    
                </comment>
                <comment line="303">
                    we output all Attrs which are available                    
                </comment>
                <comment line="315">
                    We fineshed with this level, pop to the previous definitions.                    
                </comment>
                <comment line="329">
                    We fineshed with this level, pop to the previous definitions.                    
                </comment>
                <declaration name="sibling" type="Node" line="249"/>
                <declaration name="parentNode" type="Node" line="250"/>
                <declaration name="writer" type="OutputStream" line="251"/>
                <declaration name="excludeNode" type="Node" line="252"/>
                <declaration name="includeComments" type="boolean" line="253"/>
                <declaration name="cache" type="Map" line="254"/>
                <scope line="255">
                    <scope line="275"/>
                    <scope line="291"/>
                    <declaration name="currentElement" type="Element" line="294"/>
                    <declaration name="name" type="String" line="298"/>
                    <declaration name="attrs" type="Iterator" line="301"/>
                    <scope line="302">
                        <scope line="304">
                            <declaration name="attr" type="Attr" line="305"/>
                        </scope>
                    </scope>
                    <scope line="311">
                        <scope line="317"/>
                    </scope>
                    <scope line="320"/>
                    <scope line="325">
                        <scope line="335"/>
                    </scope>
                </scope>
            </method>
            <method name="engineCanonicalizeXPathNodeSetInternal" type="byte[]" line="350">
                <params>
                    <param name="doc" type="Node"/>
                </params>
                <scope line="352">
                    <scope line="355">
                        <declaration name="sol" type="byte[]" line="356"/>
                        <scope line="357"/>
                    </scope>
                    <scope line="361">
                        <declaration name="result" type="byte[]" line="362"/>
                        <scope line="363"/>
                    </scope>
                </scope>
                <scope line="369"/>
                <scope line="371"/>
            </method>
            <javadoc line="376">
                Canoicalizes all the nodes included in the currentNode and contained in the
                  _xpathNodeSet field.                
                <param>
                    currentNode                    
                </param>
                <param>
                    endnode                    
                </param>
                <throws>
                    CanonicalizationException                    
                </throws>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="canonicalizeXPathNodeSet" type="void" line="386">
                <params>
                    <param name="currentNode" type="Node"/>
                    <param name="endnode" type="Node"/>
                </params>
                <comment line="408">
                    illegal node type during traversal                    
                </comment>
                <comment line="414">
                    currentNode = currentNode.getFirstChild();                    
                </comment>
                <comment line="450">
                    Add a level to the nssymbtable. So latter can be pop-back.                    
                </comment>
                <comment line="469">
                    we output all Attrs which are available                    
                </comment>
                <comment line="485">
                    We fineshed with this level, pop to the previous definitions.                    
                </comment>
                <comment line="503">
                    We fineshed with this level, pop to the previous definitions.                    
                </comment>
                <declaration name="currentNodeIsVisible" type="boolean" line="389"/>
                <declaration name="ns" type="NameSpaceSymbTable" line="390"/>
                <declaration name="sibling" type="Node" line="393"/>
                <declaration name="parentNode" type="Node" line="394"/>
                <declaration name="writer" type="OutputStream" line="395"/>
                <declaration name="documentLevel" type="int" line="396"/>
                <declaration name="cache" type="Map" line="397"/>
                <scope line="398">
                    <scope line="419"/>
                    <scope line="431">
                        <scope line="438"/>
                    </scope>
                    <declaration name="currentElement" type="Element" line="449"/>
                    <declaration name="name" type="String" line="451"/>
                    <declaration name="i" type="int" line="452"/>
                    <scope line="453"/>
                    <scope line="458"/>
                    <scope line="463"/>
                    <declaration name="attrs" type="Iterator" line="467"/>
                    <scope line="468">
                        <scope line="470">
                            <declaration name="attr" type="Attr" line="471"/>
                        </scope>
                    </scope>
                    <scope line="475"/>
                    <scope line="480">
                        <scope line="481"/>
                        <scope line="487"/>
                        <scope line="490"/>
                    </scope>
                    <scope line="493"/>
                    <scope line="498">
                        <scope line="499"/>
                        <scope line="505"/>
                        <scope line="512"/>
                    </scope>
                </scope>
            </method>
            <method name="isVisibleDO" type="int" line="523">
                <params>
                    <param name="currentNode" type="Node"/>
                    <param name="level" type="int"/>
                </params>
                <scope line="524">
                    <declaration name="it" type="Iterator" line="525"/>
                    <scope line="526">
                        <declaration name="i" type="int" line="527"/>
                    </scope>
                </scope>
            </method>
            <method name="isVisibleInt" type="int" line="536">
                <params>
                    <param name="currentNode" type="Node"/>
                </params>
                <scope line="537">
                    <declaration name="it" type="Iterator" line="538"/>
                    <scope line="539">
                        <declaration name="i" type="int" line="540"/>
                    </scope>
                </scope>
            </method>
            <method name="isVisible" type="boolean" line="550">
                <params>
                    <param name="currentNode" type="Node"/>
                </params>
                <scope line="551">
                    <declaration name="it" type="Iterator" line="552"/>
                    <scope line="553"/>
                </scope>
            </method>
            <method name="handleParent" type="void" line="563">
                <params>
                    <param name="e" type="Element"/>
                    <param name="ns" type="NameSpaceSymbTable"/>
                </params>
                <comment line="572">
                    Not a namespace definition, ignore.                    
                </comment>
                <scope line="564"/>
                <declaration name="attrs" type="NamedNodeMap" line="567"/>
                <declaration name="attrsLength" type="int" line="568"/>
                <scope line="569">
                    <declaration name="N" type="Attr" line="570"/>
                    <scope line="571"/>
                    <declaration name="NName" type="String" line="576"/>
                    <declaration name="NValue" type="String" line="577"/>
                    <scope line="579"/>
                </scope>
            </method>
            <javadoc line="586">
                Adds to ns the definitons from the parent elements of el                
                <param>
                    el                    
                </param>
                <param>
                    ns                    
                </param>
            </javadoc>
            <method name="getParentNameSpaces" type="void" line="591">
                <params>
                    <param name="el" type="Element"/>
                    <param name="ns" type="NameSpaceSymbTable"/>
                </params>
                <comment line="597">
                    Obtain all the parents of the elemnt                    
                </comment>
                <comment line="607">
                    Visit them in reverse order.                    
                </comment>
                <declaration name="parents" type="List" line="592"/>
                <declaration name="n1" type="Node" line="593"/>
                <scope line="594"/>
                <declaration name="parent" type="Element" line="598"/>
                <scope line="599">
                    <declaration name="n" type="Node" line="601"/>
                    <scope line="602"/>
                </scope>
                <declaration name="it" type="ListIterator" line="608"/>
                <scope line="609">
                    <declaration name="ele" type="Element" line="610"/>
                </scope>
                <declaration name="nsprefix" type="Attr" line="613"/>
                <scope line="615"/>
            </method>
            <method name="handleAttributes" type="Iterator" line="619"/>
            <javadoc line="619">
                Obtain the attributes to output for this node in XPathNodeSet c14n.                
                <param>
                    E                    
                </param>
                <param>
                    ns                    
                </param>
                <return>
                    the attributes nodes to output.                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="handleAttributesSubtree" type="Iterator" line="630"/>
            <javadoc line="630">
                Obtain the attributes to output for this node in a Subtree c14n.                
                <param>
                    E                    
                </param>
                <param>
                    ns                    
                </param>
                <return>
                    the attributes nodes to output.                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="circumventBugIfNeeded" type="void" line="641"/>
            <javadoc line="643">
                Outputs an Attribute to the internal Writer.
                  The string value of the node is modified by replacing
                  &lt;UL&gt;
                  &lt;LI&gt;all ampersands (&amp;) with &lt;CODE&gt;&amp;amp;amp;&lt;/CODE&gt;&lt;/LI&gt;
                  &lt;LI&gt;all open angle brackets (&lt;) with &lt;CODE&gt;&amp;amp;lt;&lt;/CODE&gt;&lt;/LI&gt;
                  &lt;LI&gt;all quotation mark characters with &lt;CODE&gt;&amp;amp;quot;&lt;/CODE&gt;&lt;/LI&gt;
                  &lt;LI&gt;and the whitespace characters &lt;CODE&gt;#x9&lt;/CODE&gt;, #xA, and #xD, with character
                  references. The character references are written in uppercase
                  hexadecimal with no leading zeroes (for example, &lt;CODE&gt;#xD&lt;/CODE&gt; is represented
                  by the character reference &lt;CODE&gt;&amp;amp;#xD;&lt;/CODE&gt;)&lt;/LI&gt;
                  &lt;/UL&gt;                
                <param>
                    name                    
                </param>
                <param>
                    value                    
                </param>
                <param>
                    writer                    
                </param>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="outputAttrToWriter" type="void" line="663">
                <params>
                    <param name="name" type="String"/>
                    <param name="value" type="String"/>
                    <param name="writer" type="OutputStream"/>
                    <param name="cache" type="Map"/>
                </params>
                <comment line="687">
                    &apos;\t&apos;                    
                </comment>
                <comment line="691">
                    &apos;\n&apos;                    
                </comment>
                <comment line="695">
                    &apos;\r&apos;                    
                </comment>
                <declaration name="toWrite" type="byte[]" line="667"/>
                <declaration name="length" type="int" line="668"/>
                <declaration name="i" type="int" line="669"/>
                <scope line="670">
                    <declaration name="c" type="char" line="671"/>
                    <scope line="700"/>
                    <scope line="702"/>
                </scope>
            </method>
            <javadoc line="713">
                Outputs a PI to the internal Writer.                
                <param>
                    currentPI                    
                </param>
                <param>
                    writer where to write the things                    
                </param>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="outputPItoWriter" type="void" line="720">
                <params>
                    <param name="currentPI" type="ProcessingInstruction"/>
                    <param name="writer" type="OutputStream"/>
                    <param name="position" type="int"/>
                </params>
                <scope line="722"/>
                <declaration name="target" type="String" line="727"/>
                <declaration name="length" type="int" line="728"/>
                <scope line="730">
                    <declaration name="c" type="char" line="731"/>
                    <scope line="732"/>
                    <scope line="734">
                        <scope line="735"/>
                        <scope line="737"/>
                    </scope>
                </scope>
                <declaration name="data" type="String" line="743"/>
                <scope line="747">
                    <scope line="750">
                        <declaration name="c" type="char" line="751"/>
                        <scope line="752"/>
                        <scope line="754"/>
                    </scope>
                </scope>
                <scope line="761"/>
            </method>
            <javadoc line="766">
                Method outputCommentToWriter                
                <param>
                    currentComment                    
                </param>
                <param>
                    writer writer where to write the things                    
                </param>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="outputCommentToWriter" type="void" line="773">
                <params>
                    <param name="currentComment" type="Comment"/>
                    <param name="writer" type="OutputStream"/>
                    <param name="position" type="int"/>
                </params>
                <scope line="774"/>
                <declaration name="data" type="String" line="779"/>
                <declaration name="length" type="int" line="780"/>
                <scope line="782">
                    <declaration name="c" type="char" line="783"/>
                    <scope line="784"/>
                    <scope line="786">
                        <scope line="787"/>
                        <scope line="789"/>
                    </scope>
                </scope>
                <scope line="796"/>
            </method>
            <javadoc line="801">
                Outputs a Text of CDATA section to the internal Writer.                
                <param>
                    text                    
                </param>
                <param>
                    writer writer where to write the things                    
                </param>
                <throws>
                    IOException                    
                </throws>
            </javadoc>
            <method name="outputTextToWriter" type="void" line="808">
                <params>
                    <param name="text" type="String"/>
                    <param name="writer" type="OutputStream"/>
                </params>
                <declaration name="length" type="int" line="809"/>
                <declaration name="toWrite" type="byte[]" line="810"/>
                <scope line="811">
                    <declaration name="c" type="char" line="812"/>
                    <scope line="833"/>
                    <scope line="835"/>
                </scope>
            </method>
        </class>
    </source>