<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.utils.resolver">
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput"/>
        <import package="org.w3c.dom.Attr"/>
        <class name="ResourceResolver" line="7">
            <javadoc line="7">
                During reference validation, we have to retrieve resources from somewhere.
                  This is done by retrieving a Resolver. The resolver needs two arguments: The
                  URI in which the link to the new resource is defined and the BaseURI of the
                  file/entity in which the URI occurs (the BaseURI is the same as the SystemId.
                  &lt;UL xml:lang=&quot;DE&quot; LANG=&quot;DE&quot;&gt;
                  &lt;LI&gt; Verschiedene Implementierungen k??nnen sich als Resolver registrieren.
                  &lt;LI&gt; Standardm????ig werden erste Implementierungen auf dem XML config file registrirt.
                  &lt;LI&gt; Der Benutzer kann bei Bedarf Implementierungen voranstellen oder anf??gen.
                  &lt;LI&gt; Implementierungen k??nnen mittels Features customized werden ??
                  (z.B. um Proxy-Passworter ??bergeben zu k??nnen).
                  &lt;LI&gt; Jede Implementierung bekommt das URI Attribut und den Base URI
                  ??bergeben und muss antworten, ob sie aufl??sen kann.
                  &lt;LI&gt; Die erste Implementierung, die die Aufgabe erf??llt, f??hrt die Aufl??sung durch.
                  &lt;/UL&gt;                
                <author>
                    $Author: mullan $                    
                </author>
            </javadoc>
            <declaration name="log" type="java.util.logging.Logger" line="25"/>
            <javadoc line="25">
                {@link java.util.logging} logging facility                
            </javadoc>
            <declaration name="_alreadyInitialized" type="boolean" line="29"/>
            <javadoc line="29">
                Field _alreadyInitialized                
            </javadoc>
            <declaration name="_resolverVector" type="List" line="33"/>
            <javadoc line="33">
                these are the system-wide resolvers                
            </javadoc>
            <declaration name="allThreadSafeInList" type="boolean" line="37"/>
            <declaration name="_resolverSpi" type="ResourceResolverSpi" line="38"/>
            <javadoc line="38">
                Field transformSpi                
            </javadoc>
            <javadoc line="42">
                Constructor ResourceResolver                
                <param>
                    className                    
                </param>
                <throws>
                    ClassNotFoundException                    
                </throws>
                <throws>
                    IllegalAccessException                    
                </throws>
                <throws>
                    InstantiationException                    
                </throws>
            </javadoc>
            <method name="ResourceResolver" type="constructor" line="49">
                <params>
                    <param name="className" type="String"/>
                </params>
            </method>
            <javadoc line="52">
                Constructor ResourceResolver                
                <param>
                    resourceResolver                    
                </param>
            </javadoc>
            <method name="ResourceResolver" type="constructor" line="56">
                <params>
                    <param name="resourceResolver" type="ResourceResolverSpi"/>
                </params>
            </method>
            <javadoc line="59">
                Method getInstance                
                <param>
                    uri                    
                </param>
                <param>
                    BaseURI                    
                </param>
                <return>
                    the instnace                    
                </return>
                <throws>
                    ResourceResolverException                    
                </throws>
            </javadoc>
            <method name="getInstance" type="ResourceResolver" line="66">
                <params>
                    <param name="uri" type="Attr"/>
                    <param name="BaseURI" type="String"/>
                </params>
                <declaration name="length" type="int" line="67"/>
                <scope line="68">
                    <declaration name="resolver" type="ResourceResolver" line="69"/>
                    <declaration name="resolverTmp" type="ResourceResolver" line="70"/>
                    <scope line="71"/>
                    <scope line="74"/>
                    <scope line="77"/>
                    <scope line="81">
                        <scope line="82">
                            <declaration name="resolverVector" type="List" line="83"/>
                        </scope>
                        <scope line="88"/>
                    </scope>
                </scope>
                <declaration name="exArgs" type="Object" line="93"/>
            </method>
            <javadoc line="96">
                Method getInstance                
                <param>
                    uri                    
                </param>
                <param>
                    BaseURI                    
                </param>
                <param>
                    individualResolvers                    
                </param>
                <return>
                    the instance                    
                </return>
                <throws>
                    ResourceResolverException                    
                </throws>
            </javadoc>
            <method name="getInstance" type="ResourceResolver" line="104">
                <params>
                    <param name="uri" type="Attr"/>
                    <param name="BaseURI" type="String"/>
                    <param name="individualResolvers" type="List"/>
                </params>
                <scope line="105"/>
                <declaration name="size" type="int" line="109"/>
                <scope line="110">
                    <scope line="111">
                        <declaration name="resolver" type="ResourceResolver" line="112"/>
                        <scope line="113">
                            <declaration name="currentClass" type="String" line="114"/>
                            <scope line="116"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="124">
                The init() function is called by com.sun.org.apache.xml.internal.security.Init.init()                
            </javadoc>
            <method name="init" type="void" line="127">
                <scope line="128"/>
            </method>
            <javadoc line="133">
                Registers a ResourceResolverSpi class. This method logs a warning if
                  the class cannot be registered.                
                <param>
                    className the name of the ResourceResolverSpi class to be
                      registered                    
                </param>
            </javadoc>
            <method name="register" type="void" line="139">
                <params>
                    <param name="className" type="String"/>
                </params>
            </method>
            <javadoc line="142">
                Registers a ResourceResolverSpi class at the beginning of the provider
                  list. This method logs a warning if the class cannot be registered.                
                <param>
                    className the name of the ResourceResolverSpi class to be
                      registered                    
                </param>
            </javadoc>
            <method name="registerAtStart" type="void" line="148">
                <params>
                    <param name="className" type="String"/>
                </params>
            </method>
            <method name="register" type="void" line="151">
                <params>
                    <param name="className" type="String"/>
                    <param name="start" type="boolean"/>
                </params>
                <scope line="152">
                    <declaration name="resolver" type="ResourceResolver" line="153"/>
                    <scope line="154"/>
                    <scope line="158"/>
                    <scope line="161"/>
                </scope>
                <scope line="165"/>
                <scope line="168"/>
            </method>
            <javadoc line="172">
                Method resolve                
                <param>
                    uri                    
                </param>
                <param>
                    BaseURI                    
                </param>
                <return>
                    the resource                    
                </return>
                <throws>
                    ResourceResolverException                    
                </throws>
            </javadoc>
            <method name="resolveStatic" type="XMLSignatureInput" line="179">
                <params>
                    <param name="uri" type="Attr"/>
                    <param name="BaseURI" type="String"/>
                </params>
                <declaration name="myResolver" type="ResourceResolver" line="180"/>
            </method>
            <javadoc line="183">
                Method resolve                
                <param>
                    uri                    
                </param>
                <param>
                    BaseURI                    
                </param>
                <return>
                    the resource                    
                </return>
                <throws>
                    ResourceResolverException                    
                </throws>
            </javadoc>
            <method name="resolve" type="XMLSignatureInput" line="190">
                <params>
                    <param name="uri" type="Attr"/>
                    <param name="BaseURI" type="String"/>
                </params>
            </method>
            <javadoc line="193">
                Method setProperty                
                <param>
                    key                    
                </param>
                <param>
                    value                    
                </param>
            </javadoc>
            <method name="setProperty" type="void" line="198">
                <params>
                    <param name="key" type="String"/>
                    <param name="value" type="String"/>
                </params>
            </method>
            <javadoc line="201">
                Method getProperty                
                <param>
                    key                    
                </param>
                <return>
                    the value of the property                    
                </return>
            </javadoc>
            <method name="getProperty" type="String" line="206">
                <params>
                    <param name="key" type="String"/>
                </params>
            </method>
            <javadoc line="209">
                Method addProperties                
                <param>
                    properties                    
                </param>
            </javadoc>
            <method name="addProperties" type="void" line="213">
                <params>
                    <param name="properties" type="Map"/>
                </params>
            </method>
            <javadoc line="216">
                Method getPropertyKeys                
                <return>
                    all property keys.                    
                </return>
            </javadoc>
            <method name="getPropertyKeys" type="String[]" line="220"/>
            <javadoc line="223">
                Method understandsProperty                
                <param>
                    propertyToTest                    
                </param>
                <return>
                    true if the resolver understands the property                    
                </return>
            </javadoc>
            <method name="understandsProperty" type="boolean" line="228">
                <params>
                    <param name="propertyToTest" type="String"/>
                </params>
            </method>
            <javadoc line="231">
                Method canResolve                
                <param>
                    uri                    
                </param>
                <param>
                    BaseURI                    
                </param>
                <return>
                    true if it can resolve the uri                    
                </return>
            </javadoc>
            <method name="canResolve" type="boolean" line="237">
                <params>
                    <param name="uri" type="Attr"/>
                    <param name="BaseURI" type="String"/>
                </params>
            </method>
        </class>
    </source>