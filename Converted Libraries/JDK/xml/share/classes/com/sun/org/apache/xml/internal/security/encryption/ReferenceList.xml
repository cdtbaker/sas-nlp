<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.encryption">
        <import package="java.util.Iterator"/>
        <interface name="ReferenceList">
            <javadoc line="3">
                &lt;code&gt;ReferenceList&lt;/code&gt; is an element that contains pointers from a key
                  value of an &lt;code&gt;EncryptedKey&lt;/code&gt; to items encrypted by that key value
                  (&lt;code&gt;EncryptedData&lt;/code&gt; or &lt;code&gt;EncryptedKey&lt;/code&gt; elements).
                  &lt;p&gt;
                  It is defined as follows:
                  &lt;xmp&gt;
                  &lt;element name=&apos;ReferenceList&apos;&gt;
                  &lt;complexType&gt;
                  &lt;choice minOccurs=&apos;1&apos; maxOccurs=&apos;unbounded&apos;&gt;
                  &lt;element name=&apos;DataReference&apos; type=&apos;xenc:ReferenceType&apos;/&gt;
                  &lt;element name=&apos;KeyReference&apos; type=&apos;xenc:ReferenceType&apos;/&gt;
                  &lt;/choice&gt;
                  &lt;/complexType&gt;
                  &lt;/element&gt;
                  &lt;/xmp&gt;                
                <author>
                    Axl Mattheus                    
                </author>
                <see>
                    Reference                    
                </see>
            </javadoc>
            <declaration name="DATA_REFERENCE" type="int" line="23"/>
            <javadoc line="23">
                DATA TAG                
            </javadoc>
            <declaration name="KEY_REFERENCE" type="int" line="27"/>
            <javadoc line="27">
                KEY TAG                
            </javadoc>
            <method name="add" type="void" line="31"/>
            <javadoc line="31">
                Adds a reference to this reference list.                
                <param>
                    reference the reference to add.                    
                </param>
                <throws>
                    IllegalAccessException if the &lt;code&gt;Reference&lt;/code&gt; is not an
                      instance of &lt;code&gt;DataReference&lt;/code&gt; or &lt;code&gt;KeyReference&lt;/code&gt;.                    
                </throws>
            </javadoc>
            <method name="remove" type="void" line="38"/>
            <javadoc line="38">
                Removes a reference from the &lt;code&gt;ReferenceList&lt;/code&gt;.                
                <param>
                    reference the reference to remove.                    
                </param>
            </javadoc>
            <method name="size" type="int" line="43"/>
            <javadoc line="43">
                Returns the size of the &lt;code&gt;ReferenceList&lt;/code&gt;.                
                <return>
                    the size of the &lt;code&gt;ReferenceList&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="isEmpty" type="boolean" line="48"/>
            <javadoc line="48">
                Indicates if the &lt;code&gt;ReferenceList&lt;/code&gt; is empty.                
                <return>
                    &lt;code&gt;&lt;b&gt;true&lt;/b&gt;&lt;/code&gt; if the &lt;code&gt;ReferenceList&lt;/code&gt; is
                      empty, else &lt;code&gt;&lt;b&gt;false&lt;/b&gt;&lt;/code&gt;.                    
                </return>
            </javadoc>
            <method name="getReferences" type="Iterator" line="54"/>
            <javadoc line="54">
                Returns an &lt;code&gt;Iterator&lt;/code&gt; over all the &lt;code&gt;Reference&lt;/code&gt;s
                  contatined in this &lt;code&gt;ReferenceList&lt;/code&gt;.                
                <return>
                    Iterator.                    
                </return>
            </javadoc>
            <method name="newDataReference" type="Reference" line="60"/>
            <javadoc line="60">
                &lt;code&gt;DataReference&lt;/code&gt; factory method. Returns a
                  &lt;code&gt;DataReference&lt;/code&gt;.                
                <param>
                    uri                    
                </param>
                <return>
                                        
                </return>
            </javadoc>
            <method name="newKeyReference" type="Reference" line="67"/>
            <javadoc line="67">
                &lt;code&gt;KeyReference&lt;/code&gt; factory method. Returns a
                  &lt;code&gt;KeyReference&lt;/code&gt;.                
                <param>
                    uri                    
                </param>
                <return>
                                        
                </return>
            </javadoc>
        </interface>
    </source>