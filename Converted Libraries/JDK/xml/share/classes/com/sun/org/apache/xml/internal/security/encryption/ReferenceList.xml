<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.encryption">
        <import package="java.util.Iterator"/>
        <interface name="ReferenceList">
            <javadoc line="27">
                &lt;code&gt;ReferenceList&lt;/code&gt; is an element that contains pointers from a key
                  value of an &lt;code&gt;EncryptedKey&lt;/code&gt; to items encrypted by that key value
                  (&lt;code&gt;EncryptedData&lt;/code&gt; or &lt;code&gt;EncryptedKey&lt;/code&gt; elements).
                  &lt;p&gt;
                  It is defined as follows:
                  &lt;xmp&gt;
                  &lt;element name=&apos;ReferenceList&apos;&gt;
                  &lt;complexType&gt;
                  &lt;choice minOccurs=&apos;1&apos; maxOccurs=&apos;unbounded&apos;&gt;
                  &lt;element name=&apos;DataReference&apos; type=&apos;xenc:ReferenceType&apos;/&gt;
                  &lt;element name=&apos;KeyReference&apos; type=&apos;xenc:ReferenceType&apos;/&gt;
                  &lt;/choice&gt;
                  &lt;/complexType&gt;
                  &lt;/element&gt;
                  &lt;/xmp&gt;                
                <author>
                    Axl Mattheus                    
                </author>
                <see>
                    Reference                    
                </see>
            </javadoc>
            <declaration name="DATA_REFERENCE" type="int" line="48"/>
            <javadoc line="48">
                DATA TAG                
            </javadoc>
            <declaration name="KEY_REFERENCE" type="int" line="50"/>
            <javadoc line="50">
                KEY TAG                
            </javadoc>
            <method name="add" type="void" line="53"/>
            <javadoc line="53">
                Adds a reference to this reference list.                
                <param>
                    reference the reference to add.                    
                </param>
                <throws>
                    IllegalAccessException if the <code>Reference</code> is not an
                      instance of <code>DataReference</code> or <code>KeyReference</code>.                    
                </throws>
            </javadoc>
            <method name="remove" type="void" line="62"/>
            <javadoc line="62">
                Removes a reference from the &lt;code&gt;ReferenceList&lt;/code&gt;.                
                <param>
                    reference the reference to remove.                    
                </param>
            </javadoc>
            <method name="size" type="int" line="69"/>
            <javadoc line="69">
                Returns the size of the &lt;code&gt;ReferenceList&lt;/code&gt;.                
                <return>
                    the size of the <code>ReferenceList</code>.                    
                </return>
            </javadoc>
            <method name="isEmpty" type="boolean" line="76"/>
            <javadoc line="76">
                Indicates if the &lt;code&gt;ReferenceList&lt;/code&gt; is empty.                
                <return>
                    <code><b>true</b></code> if the <code>ReferenceList</code> is
                      empty, else <code><b>false</b></code>.                    
                </return>
            </javadoc>
            <method name="getReferences" type="Iterator" line="84"/>
            <javadoc line="84">
                Returns an &lt;code&gt;Iterator&lt;/code&gt; over all the &lt;code&gt;Reference&lt;/code&gt;s
                  contatined in this &lt;code&gt;ReferenceList&lt;/code&gt;.                
                <return>
                    Iterator.                    
                </return>
            </javadoc>
            <method name="newDataReference" type="Reference" line="92"/>
            <javadoc line="92">
                &lt;code&gt;DataReference&lt;/code&gt; factory method. Returns a
                  &lt;code&gt;DataReference&lt;/code&gt;.                
                <param>
                    uri                    
                </param>
                <return>
                                        
                </return>
            </javadoc>
            <method name="newKeyReference" type="Reference" line="100"/>
            <javadoc line="100">
                &lt;code&gt;KeyReference&lt;/code&gt; factory method. Returns a
                  &lt;code&gt;KeyReference&lt;/code&gt;.                
                <param>
                    uri                    
                </param>
                <return>
                                        
                </return>
            </javadoc>
        </interface>
    </source>