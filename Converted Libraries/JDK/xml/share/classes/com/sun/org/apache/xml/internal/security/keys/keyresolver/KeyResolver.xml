<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.keys.keyresolver">
        <import package="java.security.PublicKey"/>
        <import package="java.security.cert.X509Certificate"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="javax.crypto.SecretKey"/>
        <import package="com.sun.org.apache.xml.internal.security.keys.storage.StorageResolver"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.Node"/>
        <class name="KeyResolver" line="38">
            <javadoc line="38">
                KeyResolver is factory class for subclass of KeyResolverSpi that
                  represent child element of KeyInfo.                
                <author>
                    $Author: mullan $                    
                </author>
                <version>
                    %I%, %G%                    
                </version>
            </javadoc>
            <declaration name="log" type="java.util.logging.Logger" line="47"/>
            <javadoc line="47">
                {@link java.util.logging} logging facility                
            </javadoc>
            <declaration name="_alreadyInitialized" type="boolean" line="51"/>
            <javadoc line="51">
                Field _alreadyInitialized                
            </javadoc>
            <declaration name="_resolverVector" type="List" line="54"/>
            <javadoc line="54">
                Field _resolverVector                
            </javadoc>
            <declaration name="_resolverSpi" type="KeyResolverSpi" line="57"/>
            <javadoc line="57">
                Field _resolverSpi                
            </javadoc>
            <declaration name="_storage" type="StorageResolver" line="60"/>
            <javadoc line="60">
                Field _storage                
            </javadoc>
            <javadoc line="63">
                Constructor ResourceResolver                
                <param>
                    className                    
                </param>
                <throws>
                    ClassNotFoundException                    
                </throws>
                <throws>
                    IllegalAccessException                    
                </throws>
                <throws>
                    InstantiationException                    
                </throws>
            </javadoc>
            <method name="KeyResolver" type="constructor" line="73">
                <params>
                    <param name="className" type="String"/>
                </params>
            </method>
            <javadoc line="79">
                Method length                
                <return>
                    the length of resolvers registed                    
                </return>
            </javadoc>
            <method name="length" type="int" line="84"/>
            <method name="hit" type="void" line="88">
                <params>
                    <param name="hintI" type="Iterator"/>
                </params>
                <comment line="97">
                    System.out.println(&quot;KeyResolver hitting&quot;);                    
                </comment>
                <declaration name="hint" type="ResolverIterator" line="89"/>
                <declaration name="i" type="int" line="90"/>
                <scope line="91">
                    <declaration name="resolverVector" type="List" line="92"/>
                    <declaration name="ob" type="Object" line="93"/>
                </scope>
                <scope line="96"/>
            </method>
            <javadoc line="101">
                Method getInstance                
                <param>
                    element                    
                </param>
                <param>
                    BaseURI                    
                </param>
                <param>
                    storage                    
                </param>
                <return>
                    The certificate represented by the element.                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="getX509Certificate" type="X509Certificate" line="113">
                <params>
                    <param name="element" type="Element"/>
                    <param name="BaseURI" type="String"/>
                    <param name="storage" type="StorageResolver"/>
                </params>
                <comment line="115">
                    use the old vector to not be hit by updates                    
                </comment>
                <declaration name="resolverVector" type="List" line="116"/>
                <scope line="117">
                    <declaration name="resolver" type="KeyResolver" line="118"/>
                    <scope line="121">
                        <declaration name="exArgs" type="Object" line="122"/>
                    </scope>
                    <declaration name="cert" type="X509Certificate" line="133"/>
                    <scope line="134"/>
                </scope>
                <declaration name="exArgs" type="Object" line="139"/>
            </method>
            <javadoc line="146">
                Method getInstance                
                <param>
                    element                    
                </param>
                <param>
                    BaseURI                    
                </param>
                <param>
                    storage                    
                </param>
                <return>
                    the public key contained in the element                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="getPublicKey" type="PublicKey" line="158">
                <params>
                    <param name="element" type="Element"/>
                    <param name="BaseURI" type="String"/>
                    <param name="storage" type="StorageResolver"/>
                </params>
                <comment line="180">
                    update resolver.                    
                </comment>
                <declaration name="resolverVector" type="List" line="160"/>
                <scope line="161">
                    <declaration name="resolver" type="KeyResolver" line="162"/>
                    <scope line="165">
                        <declaration name="exArgs" type="Object" line="166"/>
                    </scope>
                    <declaration name="cert" type="PublicKey" line="177"/>
                    <scope line="178">
                        <scope line="179">
                            <declaration name="ob" type="Object" line="182"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="exArgs" type="Object" line="190"/>
            </method>
            <javadoc line="198">
                The init() function is called by com.sun.org.apache.xml.internal.security.Init.init()                
            </javadoc>
            <method name="init" type="void" line="201">
                <scope line="203"/>
            </method>
            <javadoc line="209">
                This method is used for registering {@link KeyResolverSpi}s which are
                  available to &lt;I&gt;all&lt;/I&gt; {@link com.sun.org.apache.xml.internal.security.keys.KeyInfo} objects. This means that
                  personalized {@link KeyResolverSpi}s should only be registered directly
                  to the {@link com.sun.org.apache.xml.internal.security.keys.KeyInfo} using{@link com.sun.org.apache.xml.internal.security.keys.KeyInfo#registerInternalKeyResolver}.                
                <param>
                    className                    
                </param>
                <throws>
                    InstantiationException                    
                </throws>
                <throws>
                    IllegalAccessException                    
                </throws>
                <throws>
                    ClassNotFoundException                    
                </throws>
            </javadoc>
            <method name="register" type="void" line="221">
                <params>
                    <param name="className" type="String"/>
                </params>
            </method>
            <javadoc line="225">
                This method is used for registering {@link KeyResolverSpi}s which are
                  available to &lt;I&gt;all&lt;/I&gt; {@link com.sun.org.apache.xml.internal.security.keys.KeyInfo} objects. This means that
                  personalized {@link KeyResolverSpi}s should only be registered directly
                  to the {@link com.sun.org.apache.xml.internal.security.keys.KeyInfo} using {@link com.sun.org.apache.xml.internal.security.keys.KeyInfo#registerInternalKeyResolver}.                
                <param>
                    className                    
                </param>
            </javadoc>
            <method name="registerAtStart" type="void" line="233">
                <params>
                    <param name="className" type="String"/>
                </params>
            </method>
            <javadoc line="237">
                Method resolve                
                <param>
                    element                    
                </param>
                <param>
                    BaseURI                    
                </param>
                <param>
                    storage                    
                </param>
                <return>
                    resolved public key from the registered from the elements                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="resolvePublicKey" type="PublicKey" line="249">
                <params>
                    <param name="element" type="Element"/>
                    <param name="BaseURI" type="String"/>
                    <param name="storage" type="StorageResolver"/>
                </params>
            </method>
            <javadoc line="253">
                Method resolveX509Certificate                
                <param>
                    element                    
                </param>
                <param>
                    BaseURI                    
                </param>
                <param>
                    storage                    
                </param>
                <return>
                    resolved X509certificate key from the registered from the elements                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="resolveX509Certificate" type="X509Certificate" line="265">
                <params>
                    <param name="element" type="Element"/>
                    <param name="BaseURI" type="String"/>
                    <param name="storage" type="StorageResolver"/>
                </params>
            </method>
            <javadoc line="270">
                @param element                
                <param>
                    BaseURI                    
                </param>
                <param>
                    storage                    
                </param>
                <return>
                    resolved SecretKey key from the registered from the elements                    
                </return>
                <throws>
                    KeyResolverException                    
                </throws>
            </javadoc>
            <method name="resolveSecretKey" type="SecretKey" line="279">
                <params>
                    <param name="element" type="Element"/>
                    <param name="BaseURI" type="String"/>
                    <param name="storage" type="StorageResolver"/>
                </params>
            </method>
            <javadoc line="284">
                Method setProperty                
                <param>
                    key                    
                </param>
                <param>
                    value                    
                </param>
            </javadoc>
            <method name="setProperty" type="void" line="290">
                <params>
                    <param name="key" type="String"/>
                    <param name="value" type="String"/>
                </params>
            </method>
            <javadoc line="294">
                Method getProperty                
                <param>
                    key                    
                </param>
                <return>
                    the property setted for this resolver                    
                </return>
            </javadoc>
            <method name="getProperty" type="String" line="300">
                <params>
                    <param name="key" type="String"/>
                </params>
            </method>
            <javadoc line="305">
                Method understandsProperty                
                <param>
                    propertyToTest                    
                </param>
                <return>
                    true if the resolver understands property propertyToTest                    
                </return>
            </javadoc>
            <method name="understandsProperty" type="boolean" line="311">
                <params>
                    <param name="propertyToTest" type="String"/>
                </params>
            </method>
            <javadoc line="316">
                Method resolverClassName                
                <return>
                    the name of the resolver.                    
                </return>
            </javadoc>
            <method name="resolverClassName" type="String" line="321"/>
            <class name="ResolverIterator" line="325">
                <implements interface="Iterator"/>
                <declaration name="res" type="List" line="326"/>
                <declaration name="it" type="Iterator" line="327"/>
                <declaration name="i" type="int" line="328"/>
                <method name="ResolverIterator" type="constructor" line="329">
                    <params>
                        <param name="list" type="List"/>
                    </params>
                </method>
                <method name="hasNext" type="boolean" line="333">
                    <comment line="334">
                        TODO Auto-generated method stub                        
                    </comment>
                </method>
                <method name="next" type="Object" line="338">
                    <declaration name="resolver" type="KeyResolver" line="340"/>
                    <scope line="341"/>
                </method>
                <method name="remove" type="void" line="348">
                    <comment line="349">
                        TODO Auto-generated method stub                        
                    </comment>
                </method>
            </class>
            <method name="iterator" type="Iterator" line="354"/>
        </class>
    </source>