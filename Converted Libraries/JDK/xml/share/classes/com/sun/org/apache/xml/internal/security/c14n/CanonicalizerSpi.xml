<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.c14n">
        <import package="java.io.ByteArrayInputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.util.Set"/>
        <import package="javax.xml.parsers.DocumentBuilder"/>
        <import package="javax.xml.parsers.DocumentBuilderFactory"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.XMLUtils"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.w3c.dom.NodeList"/>
        <import package="org.xml.sax.InputSource"/>
        <class name="CanonicalizerSpi" line="39">
            <comment line="137">
                J-                
            </comment>
            <comment line="199">
                J+                
            </comment>
            <javadoc line="39">
                Base class which all Caninicalization algorithms extend.
                  $todo$ cange JavaDoc                
                <author>
                    Christian Geuer-Pollmann                    
                </author>
            </javadoc>
            <javadoc line="47">
                Method canonicalize                
                <param>
                    inputBytes                    
                </param>
                <return>
                    the c14n bytes.                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
                <throws>
                    java.io.IOException                    
                </throws>
                <throws>
                    javax.xml.parsers.ParserConfigurationException                    
                </throws>
                <throws>
                    org.xml.sax.SAXException                    
                </throws>
            </javadoc>
            <method name="engineCanonicalize" type="byte[]" line="64">
                <params>
                    <param name="inputBytes" type="byte[]"/>
                </params>
                <comment line="70">
                    needs to validate for ID attribute nomalization                    
                </comment>
                <comment line="75">
                    for some of the test vectors from the specification,
                     there has to be a validatin parser for ID attributes, default
                     attribute values, NMTOKENS, etc.
                     Unfortunaltely, the test vectors do use different DTDs or
                     even no DTD. So Xerces 1.3.1 fires many warnings about using
                     ErrorHandlers.
                    
                     Text from the spec:
                    
                     The input octet stream MUST contain a well-formed XML document,
                     but the input need not be validated. However, the attribute
                     value normalization and entity reference resolution MUST be
                     performed in accordance with the behaviors of a validating
                     XML processor. As well, nodes for default attributes (declared
                     in the ATTLIST with an AttValue but not specified) are created
                     in each element. Thus, the declarations in the document type
                     declaration are used to help create the canonical form, even
                     though the document type declaration is not retained in the
                     canonical form.                    
                </comment>
                <comment line="98">
                    ErrorHandler eh = new C14NErrorHandler();                    
                </comment>
                <comment line="99">
                    db.setErrorHandler(eh);                    
                </comment>
                <declaration name="bais" type="java.io.ByteArrayInputStream" line="66"/>
                <declaration name="in" type="InputSource" line="67"/>
                <declaration name="dfactory" type="DocumentBuilderFactory" line="68"/>
                <declaration name="db" type="DocumentBuilder" line="73"/>
                <declaration name="document" type="Document" line="100"/>
                <declaration name="result" type="byte" line="101"/>
            </method>
            <javadoc line="105">
                Method engineCanonicalizeXPathNodeSet                
                <param>
                    xpathNodeSet                    
                </param>
                <return>
                    the c14n bytes                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="engineCanonicalizeXPathNodeSet" type="byte[]" line="113">
                <params>
                    <param name="xpathNodeSet" type="NodeList"/>
                </params>
            </method>
            <javadoc line="120">
                Method engineCanonicalizeXPathNodeSet                
                <param>
                    xpathNodeSet                    
                </param>
                <param>
                    inclusiveNamespaces                    
                </param>
                <return>
                    the c14n bytes                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="engineCanonicalizeXPathNodeSet" type="byte[]" line="129">
                <params>
                    <param name="xpathNodeSet" type="NodeList"/>
                    <param name="inclusiveNamespaces" type="String"/>
                </params>
            </method>
            <method name="engineGetURI" type="String" line="137"/>
            <javadoc line="137">
                Returns the URI of this engine.                
                <return>
                    the URI                    
                </return>
            </javadoc>
            <method name="engineGetIncludeComments" type="boolean" line="142"/>
            <javadoc line="142">
                Returns the URI if include comments                
                <return>
                    true if include.                    
                </return>
            </javadoc>
            <method name="engineCanonicalizeXPathNodeSet" type="byte[]" line="147"/>
            <javadoc line="147">
                C14n a nodeset                
                <param>
                    xpathNodeSet                    
                </param>
                <return>
                    the c14n bytes                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="engineCanonicalizeXPathNodeSet" type="byte[]" line="157"/>
            <javadoc line="157">
                C14n a nodeset                
                <param>
                    xpathNodeSet                    
                </param>
                <param>
                    inclusiveNamespaces                    
                </param>
                <return>
                    the c14n bytes                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="engineCanonicalizeSubTree" type="byte[]" line="168"/>
            <javadoc line="168">
                C14n a node tree.                
                <param>
                    rootNode                    
                </param>
                <return>
                    the c14n bytes                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="engineCanonicalizeSubTree" type="byte[]" line="178"/>
            <javadoc line="178">
                C14n a node tree.                
                <param>
                    rootNode                    
                </param>
                <param>
                    inclusiveNamespaces                    
                </param>
                <return>
                    the c14n bytes                    
                </return>
                <throws>
                    CanonicalizationException                    
                </throws>
            </javadoc>
            <method name="setWriter" type="void" line="189"/>
            <javadoc line="189">
                Sets the writter where the cannocalization ends. ByteArrayOutputStream if
                  none is setted.                
                <param>
                    os                    
                </param>
            </javadoc>
            <declaration name="reset" type="boolean" line="196"/>
            <javadoc line="196">
                Reset the writter after a c14n                
            </javadoc>
        </class>
    </source>