<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.utils">
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.Map"/>
        <import package="java.util.Set"/>
        <import package="com.sun.org.apache.xml.internal.security.c14n.CanonicalizationException"/>
        <import package="com.sun.org.apache.xml.internal.security.c14n.Canonicalizer"/>
        <import package="com.sun.org.apache.xml.internal.security.c14n.InvalidCanonicalizerException"/>
        <import package="org.w3c.dom.Attr"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.NamedNodeMap"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.w3c.dom.NodeList"/>
        <import package="org.w3c.dom.Text"/>
        <class name="XMLUtils" line="21">
            <javadoc line="21">
                DOM and XML accessibility and comfort functions.                
                <author>
                    Christian Geuer-Pollmann                    
                </author>
            </javadoc>
            <declaration name="ignoreLineBreaks" type="boolean" line="26"/>
            <anonymous_class line="26">
                <method name="run" type="Boolean" line="27"/>
            </anonymous_class>
            <javadoc line="32">
                Constructor XMLUtils                
            </javadoc>
            <method name="XMLUtils" type="constructor" line="35"/>
            <method name="getNextElement" type="Element" line="37">
                <params>
                    <param name="el" type="Node"/>
                </params>
                <scope line="38"/>
            </method>
            <javadoc line="43">
                @param rootNode                
                <param>
                    result                    
                </param>
                <param>
                    exclude                    
                </param>
                <param>
                    com wheather comments or not                    
                </param>
            </javadoc>
            <method name="getSet" type="void" line="49">
                <params>
                    <param name="rootNode" type="Node"/>
                    <param name="result" type="Set"/>
                    <param name="exclude" type="Node"/>
                    <param name="com" type="boolean"/>
                </params>
                <scope line="50"/>
            </method>
            <method name="getSetRec" type="void" line="55">
                <params>
                    <param name="rootNode" type="Node"/>
                    <param name="result" type="Set"/>
                    <param name="exclude" type="Node"/>
                    <param name="com" type="boolean"/>
                </params>
                <scope line="56"/>
                <declaration name="el" type="Element" line="62"/>
                <scope line="63">
                    <declaration name="nl" type="NamedNodeMap" line="64"/>
                    <scope line="65"/>
                </scope>
                <scope line="70">
                    <scope line="71">
                        <scope line="73"/>
                    </scope>
                </scope>
                <scope line="82"/>
            </method>
            <javadoc line="93">
                Outputs a DOM tree to an {@link OutputStream}.                
                <param>
                    contextNode root node of the DOM tree                    
                </param>
                <param>
                    os the {@link OutputStream}                    
                </param>
            </javadoc>
            <method name="outputDOM" type="void" line="98">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="os" type="OutputStream"/>
                </params>
            </method>
            <javadoc line="101">
                Outputs a DOM tree to an {@link OutputStream}. &lt;I&gt;If an Exception is
                  thrown during execution, it&apos;s StackTrace is output to System.out, but the
                  Exception is not re-thrown.&lt;/I&gt;                
                <param>
                    contextNode root node of the DOM tree                    
                </param>
                <param>
                    os the {@link OutputStream}                    
                </param>
                <param>
                    addPreamble                    
                </param>
            </javadoc>
            <method name="outputDOM" type="void" line="109">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="os" type="OutputStream"/>
                    <param name="addPreamble" type="boolean"/>
                </params>
                <scope line="110">
                    <scope line="111"/>
                </scope>
                <scope line="116"/>
                <scope line="118"/>
                <scope line="121"/>
            </method>
            <javadoc line="125">
                Serializes the &lt;CODE&gt;contextNode&lt;/CODE&gt; into the OutputStream, &lt;I&gt;but
                  supresses all Exceptions&lt;/I&gt;.
                  &lt;BR /&gt;
                  NOTE: &lt;I&gt;This should only be used for debugging purposes,
                  NOT in a production environment; this method ignores all exceptions,
                  so you won&apos;t notice if something goes wrong. If you&apos;re asking what is to
                  be used in a production environment, simply use the code inside the
                  &lt;code&gt;try{}&lt;/code&gt; statement, but handle the Exceptions appropriately.&lt;/I&gt;                
                <param>
                    contextNode                    
                </param>
                <param>
                    os                    
                </param>
            </javadoc>
            <method name="outputDOMc14nWithComments" type="void" line="137">
                <params>
                    <param name="contextNode" type="Node"/>
                    <param name="os" type="OutputStream"/>
                </params>
                <scope line="138"/>
                <scope line="141"/>
                <scope line="143"/>
                <scope line="145"/>
            </method>
            <javadoc line="148">
                Method getFullTextChildrenFromElement                
                <param>
                    element                    
                </param>
                <return>
                    the string of chi;ds                    
                </return>
            </javadoc>
            <method name="getFullTextChildrenFromElement" type="String" line="153">
                <params>
                    <param name="element" type="Element"/>
                </params>
                <declaration name="sb" type="StringBuffer" line="154"/>
                <declaration name="children" type="NodeList" line="155"/>
                <declaration name="iMax" type="int" line="156"/>
                <scope line="157">
                    <declaration name="curr" type="Node" line="158"/>
                    <scope line="159"/>
                </scope>
            </method>
            <declaration name="dsPrefix" type="String" line="165"/>
            <declaration name="namePrefixes" type="Map" line="166"/>
            <javadoc line="167">
                Creates an Element in the XML Signature specification namespace.                
                <param>
                    doc the factory Document                    
                </param>
                <param>
                    elementName the local name of the Element                    
                </param>
                <return>
                    the Element                    
                </return>
            </javadoc>
            <method name="createElementInSignatureSpace" type="Element" line="173">
                <params>
                    <param name="doc" type="Document"/>
                    <param name="elementName" type="String"/>
                </params>
                <scope line="174"/>
                <scope line="177"/>
                <declaration name="namePrefix" type="String" line="180"/>
                <scope line="181">
                    <declaration name="tag" type="StringBuffer" line="182"/>
                </scope>
            </method>
            <javadoc line="190">
                Returns true if the element is in XML Signature namespace and the local
                  name equals the supplied one.                
                <param>
                    element                    
                </param>
                <param>
                    localName                    
                </param>
                <return>
                    true if the element is in XML Signature namespace and the local name equals the supplied one                    
                </return>
            </javadoc>
            <method name="elementIsInSignatureSpace" type="boolean" line="197">
                <params>
                    <param name="element" type="Element"/>
                    <param name="localName" type="String"/>
                </params>
            </method>
            <javadoc line="200">
                Returns true if the element is in XML Encryption namespace and the local
                  name equals the supplied one.                
                <param>
                    element                    
                </param>
                <param>
                    localName                    
                </param>
                <return>
                    true if the element is in XML Encryption namespace and the local name equals the supplied one                    
                </return>
            </javadoc>
            <method name="elementIsInEncryptionSpace" type="boolean" line="207">
                <params>
                    <param name="element" type="Element"/>
                    <param name="localName" type="String"/>
                </params>
            </method>
            <javadoc line="210">
                This method returns the owner document of a particular node.
                  This method is necessary because it &lt;I&gt;always&lt;/I&gt; returns a{@link Document}. {@link Node#getOwnerDocument} returns &lt;CODE&gt;null&lt;/CODE&gt;
                  if the {@link Node} is a {@link Document}.                
                <param>
                    node                    
                </param>
                <return>
                    the owner document of the node                    
                </return>
            </javadoc>
            <method name="getOwnerDocument" type="Document" line="217">
                <params>
                    <param name="node" type="Node"/>
                </params>
                <scope line="218"/>
                <scope line="221"/>
                <scope line="224"/>
            </method>
            <javadoc line="228">
                This method returns the first non-null owner document of the Node&apos;s in this Set.
                  This method is necessary because it &lt;I&gt;always&lt;/I&gt; returns a{@link Document}. {@link Node#getOwnerDocument} returns &lt;CODE&gt;null&lt;/CODE&gt;
                  if the {@link Node} is a {@link Document}.                
                <param>
                    xpathNodeSet                    
                </param>
                <return>
                    the owner document                    
                </return>
            </javadoc>
            <method name="getOwnerDocument" type="Document" line="235">
                <params>
                    <param name="xpathNodeSet" type="Set"/>
                </params>
                <declaration name="npe" type="NullPointerException" line="236"/>
                <declaration name="iterator" type="Iterator" line="237"/>
                <scope line="238">
                    <declaration name="node" type="Node" line="239"/>
                    <declaration name="nodeType" type="int" line="240"/>
                    <scope line="241"/>
                    <scope line="244">
                        <scope line="245"/>
                    </scope>
                    <scope line="250"/>
                </scope>
            </method>
            <javadoc line="256">
                Method createDSctx                
                <param>
                    doc                    
                </param>
                <param>
                    prefix                    
                </param>
                <param>
                    namespace                    
                </param>
                <return>
                    the element.                    
                </return>
            </javadoc>
            <method name="createDSctx" type="Element" line="263">
                <params>
                    <param name="doc" type="Document"/>
                    <param name="prefix" type="String"/>
                    <param name="namespace" type="String"/>
                </params>
                <scope line="264"/>
                <declaration name="ctx" type="Element" line="267"/>
            </method>
            <javadoc line="271">
                Method addReturnToElement                
                <param>
                    e                    
                </param>
            </javadoc>
            <method name="addReturnToElement" type="void" line="275">
                <params>
                    <param name="e" type="Element"/>
                </params>
                <scope line="276">
                    <declaration name="doc" type="Document" line="277"/>
                </scope>
            </method>
            <method name="addReturnToElement" type="void" line="281">
                <params>
                    <param name="doc" type="Document"/>
                    <param name="nl" type="HelperNodeList"/>
                </params>
                <scope line="282"/>
            </method>
            <method name="addReturnBeforeChild" type="void" line="286">
                <params>
                    <param name="e" type="Element"/>
                    <param name="child" type="Node"/>
                </params>
                <scope line="287">
                    <declaration name="doc" type="Document" line="288"/>
                </scope>
            </method>
            <javadoc line="292">
                Method convertNodelistToSet                
                <param>
                    xpathNodeSet                    
                </param>
                <return>
                    the set with the nodelist                    
                </return>
            </javadoc>
            <method name="convertNodelistToSet" type="Set" line="297">
                <params>
                    <param name="xpathNodeSet" type="NodeList"/>
                </params>
                <scope line="298"/>
                <declaration name="length" type="int" line="301"/>
                <declaration name="set" type="Set" line="302"/>
                <scope line="303"/>
            </method>
            <javadoc line="308">
                This method spreads all namespace attributes in a DOM document to their
                  children. This is needed because the XML Signature XPath transform
                  must evaluate the XPath against all nodes in the input, even against
                  XPath namespace nodes. Through a bug in XalanJ2, the namespace nodes are
                  not fully visible in the Xalan XPath model, so we have to do this by
                  hand in DOM spaces so that the nodes become visible in XPath space.                
                <param>
                    doc                    
                </param>
                <see>
                    &lt;A HREF=&quot;http://nagoya.apache.org/bugzilla/show_bug.cgi?id=2650&quot;&gt;Namespace axis resolution is not XPath compliant &lt;/A&gt;                    
                </see>
            </javadoc>
            <method name="circumventBug2650" type="void" line="318">
                <params>
                    <param name="doc" type="Document"/>
                </params>
                <declaration name="documentElement" type="Element" line="319"/>
                <declaration name="xmlnsAttr" type="Attr" line="320"/>
                <scope line="321"/>
            </method>
            <javadoc line="326">
                This is the work horse for {@link #circumventBug2650}.                
                <param>
                    node                    
                </param>
                <see>
                    &lt;A HREF=&quot;http://nagoya.apache.org/bugzilla/show_bug.cgi?id=2650&quot;&gt;Namespace axis resolution is not XPath compliant &lt;/A&gt;                    
                </see>
            </javadoc>
            <method name="circumventBug2650internal" type="void" line="331">
                <params>
                    <param name="node" type="Node"/>
                </params>
                <declaration name="parent" type="Node" line="332"/>
                <declaration name="sibling" type="Node" line="333"/>
                <declaration name="namespaceNs" type="String" line="334"/>
                <scope line="335">
                    <declaration name="element" type="Element" line="338"/>
                    <scope line="340">
                        <declaration name="attributes" type="NamedNodeMap" line="341"/>
                        <declaration name="attributesLength" type="int" line="342"/>
                        <scope line="343">
                            <scope line="344"/>
                            <declaration name="childElement" type="Element" line="347"/>
                            <scope line="348">
                                <declaration name="currentAttr" type="Attr" line="349"/>
                                <scope line="351"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="364"/>
                    <scope line="369"/>
                </scope>
            </method>
            <javadoc line="377">
                @param sibling                
                <param>
                    nodeName                    
                </param>
                <param>
                    number                    
                </param>
                <return>
                    nodes with the constrain                    
                </return>
            </javadoc>
            <method name="selectDsNode" type="Element" line="383">
                <params>
                    <param name="sibling" type="Node"/>
                    <param name="nodeName" type="String"/>
                    <param name="number" type="int"/>
                </params>
                <scope line="384">
                    <scope line="385">
                        <scope line="386"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="395">
                @param sibling                
                <param>
                    nodeName                    
                </param>
                <param>
                    number                    
                </param>
                <return>
                    nodes with the constrain                    
                </return>
            </javadoc>
            <method name="selectXencNode" type="Element" line="401">
                <params>
                    <param name="sibling" type="Node"/>
                    <param name="nodeName" type="String"/>
                    <param name="number" type="int"/>
                </params>
                <scope line="402">
                    <scope line="403">
                        <scope line="404"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="413">
                @param sibling                
                <param>
                    nodeName                    
                </param>
                <param>
                    number                    
                </param>
                <return>
                    nodes with the constrain                    
                </return>
            </javadoc>
            <method name="selectDsNodeText" type="Text" line="419">
                <params>
                    <param name="sibling" type="Node"/>
                    <param name="nodeName" type="String"/>
                    <param name="number" type="int"/>
                </params>
                <declaration name="n" type="Node" line="420"/>
                <scope line="421"/>
                <scope line="425"/>
            </method>
            <javadoc line="430">
                @param sibling                
                <param>
                    uri                    
                </param>
                <param>
                    nodeName                    
                </param>
                <param>
                    number                    
                </param>
                <return>
                    nodes with the constrain                    
                </return>
            </javadoc>
            <method name="selectNodeText" type="Text" line="437">
                <params>
                    <param name="sibling" type="Node"/>
                    <param name="uri" type="String"/>
                    <param name="nodeName" type="String"/>
                    <param name="number" type="int"/>
                </params>
                <declaration name="n" type="Node" line="438"/>
                <scope line="439"/>
                <scope line="443"/>
            </method>
            <javadoc line="448">
                @param sibling                
                <param>
                    uri                    
                </param>
                <param>
                    nodeName                    
                </param>
                <param>
                    number                    
                </param>
                <return>
                    nodes with the constrain                    
                </return>
            </javadoc>
            <method name="selectNode" type="Element" line="455">
                <params>
                    <param name="sibling" type="Node"/>
                    <param name="uri" type="String"/>
                    <param name="nodeName" type="String"/>
                    <param name="number" type="int"/>
                </params>
                <scope line="456">
                    <scope line="457">
                        <scope line="458"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="467">
                @param sibling                
                <param>
                    nodeName                    
                </param>
                <return>
                    nodes with the constrain                    
                </return>
            </javadoc>
            <method name="selectDsNodes" type="Element[]" line="472">
                <params>
                    <param name="sibling" type="Node"/>
                    <param name="nodeName" type="String"/>
                </params>
            </method>
            <javadoc line="475">
                @param sibling                
                <param>
                    uri                    
                </param>
                <param>
                    nodeName                    
                </param>
                <return>
                    nodes with the constrain                    
                </return>
            </javadoc>
            <method name="selectNodes" type="Element[]" line="481">
                <params>
                    <param name="sibling" type="Node"/>
                    <param name="uri" type="String"/>
                    <param name="nodeName" type="String"/>
                </params>
                <declaration name="size" type="int" line="482"/>
                <declaration name="a" type="Element[]" line="483"/>
                <declaration name="curr" type="int" line="484"/>
                <scope line="485">
                    <scope line="486">
                        <scope line="488">
                            <declaration name="cursize" type="int" line="489"/>
                            <declaration name="cp" type="Element[]" line="490"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="af" type="Element[]" line="498"/>
            </method>
            <javadoc line="502">
                @param signatureElement                
                <param>
                    inputSet                    
                </param>
                <return>
                    nodes with the constrain                    
                </return>
            </javadoc>
            <method name="excludeNodeFromSet" type="Set" line="507">
                <params>
                    <param name="signatureElement" type="Node"/>
                    <param name="inputSet" type="Set"/>
                </params>
                <declaration name="resultSet" type="Set" line="508"/>
                <declaration name="iterator" type="Iterator" line="509"/>
                <scope line="510">
                    <declaration name="inputNode" type="Node" line="511"/>
                    <scope line="512"/>
                </scope>
            </method>
            <javadoc line="518">
                Returns true if the descendantOrSelf is on the descendant-or-self axis
                  of the context node.                
                <param>
                    ctx                    
                </param>
                <param>
                    descendantOrSelf                    
                </param>
                <return>
                    true if the node is descendant                    
                </return>
            </javadoc>
            <method name="isDescendantOrSelf" type="boolean" line="525">
                <params>
                    <param name="ctx" type="Node"/>
                    <param name="descendantOrSelf" type="Node"/>
                </params>
                <scope line="526"/>
                <declaration name="parent" type="Node" line="529"/>
                <scope line="530">
                    <scope line="531"/>
                    <scope line="534"/>
                    <scope line="537"/>
                    <scope line="540"/>
                </scope>
            </method>
            <method name="ignoreLineBreaks" type="boolean" line="545"/>
        </class>
    </source>