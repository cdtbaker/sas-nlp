<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.algorithms">
        <import package="java.security.MessageDigest"/>
        <import package="java.security.NoSuchProviderException"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Map"/>
        <import package="com.sun.org.apache.xml.internal.security.signature.XMLSignatureException"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.Constants"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.EncryptionConstants"/>
        <import package="org.w3c.dom.Document"/>
        <class name="MessageDigestAlgorithm" line="34">
            <extends class="Algorithm"/>
            <javadoc line="34">
                Digest Message wrapper &amp; selector class.
                  &lt;pre&gt;
                  MessageDigestAlgorithm.getInstance()
                  &lt;/pre&gt;                
            </javadoc>
            <declaration name="ALGO_ID_DIGEST_NOT_RECOMMENDED_MD5" type="String" line="44"/>
            <javadoc line="44">
                Message Digest - NOT RECOMMENDED MD5                
            </javadoc>
            <declaration name="ALGO_ID_DIGEST_SHA1" type="String" line="46"/>
            <javadoc line="46">
                Digest - Required SHA1                
            </javadoc>
            <declaration name="ALGO_ID_DIGEST_SHA256" type="String" line="48"/>
            <javadoc line="48">
                Message Digest - RECOMMENDED SHA256                
            </javadoc>
            <declaration name="ALGO_ID_DIGEST_SHA384" type="String" line="50"/>
            <javadoc line="50">
                Message Digest - OPTIONAL SHA384                
            </javadoc>
            <declaration name="ALGO_ID_DIGEST_SHA512" type="String" line="52"/>
            <javadoc line="52">
                Message Digest - OPTIONAL SHA512                
            </javadoc>
            <declaration name="ALGO_ID_DIGEST_RIPEMD160" type="String" line="54"/>
            <javadoc line="54">
                Message Digest - OPTIONAL RIPEMD-160                
            </javadoc>
            <declaration name="algorithm" type="java.security.MessageDigest" line="57"/>
            <javadoc line="57">
                Field algorithm stores the actual {@link java.security.MessageDigest}                
            </javadoc>
            <javadoc line="60">
                Constructor for the brave who pass their own message digest algorithms and the corresponding URI.                
                <param>
                    doc                    
                </param>
                <param>
                    messageDigest                    
                </param>
                <param>
                    algorithmURI                    
                </param>
            </javadoc>
            <method name="MessageDigestAlgorithm" type="constructor" line="67">
                <params>
                    <param name="doc" type="Document"/>
                    <param name="messageDigest" type="MessageDigest"/>
                    <param name="algorithmURI" type="String"/>
                </params>
            </method>
            <declaration name="instances" type="ThreadLocal" line="74"/>
            <anonymous_class line="74">
                <method name="initialValue" type="Object" line="75"/>
            </anonymous_class>
            <javadoc line="80">
                Factory method for constructing a message digest algorithm by name.                
                <param>
                    doc                    
                </param>
                <param>
                    algorithmURI                    
                </param>
                <return>
                    The MessageDigestAlgorithm element to attach in document and to digest                    
                </return>
                <throws>
                    XMLSignatureException                    
                </throws>
            </javadoc>
            <method name="getInstance" type="MessageDigestAlgorithm" line="89">
                <params>
                    <param name="doc" type="Document"/>
                    <param name="algorithmURI" type="String"/>
                </params>
                <declaration name="md" type="MessageDigest" line="90"/>
            </method>
            <method name="getDigestInstance" type="MessageDigest" line="94">
                <params>
                    <param name="algorithmURI" type="String"/>
                </params>
                <declaration name="result" type="MessageDigest" line="95"/>
                <declaration name="algorithmID" type="String" line="98"/>
                <scope line="100">
                    <declaration name="exArgs" type="Object[]" line="101"/>
                </scope>
                <declaration name="md" type="MessageDigest" line="105"/>
                <declaration name="provider" type="String" line="106"/>
                <scope line="107">
                    <scope line="108"/>
                    <scope line="110"/>
                </scope>
                <scope line="113">
                    <declaration name="exArgs" type="Object[]" line="114"/>
                </scope>
                <scope line="118">
                    <declaration name="exArgs" type="Object[]" line="119"/>
                </scope>
            </method>
            <javadoc line="128">
                Returns the actual {@link java.security.MessageDigest} algorithm object                
                <return>
                    the actual {@link java.security.MessageDigest} algorithm object                    
                </return>
            </javadoc>
            <method name="getAlgorithm" type="java.security.MessageDigest" line="133"/>
            <javadoc line="137">
                Proxy method for {@link java.security.MessageDigest#isEqual}which is executed on the internal {@link java.security.MessageDigest} object.                
                <param>
                    digesta                    
                </param>
                <param>
                    digestb                    
                </param>
                <return>
                    the result of the {@link java.security.MessageDigest#isEqual} method                    
                </return>
            </javadoc>
            <method name="isEqual" type="boolean" line="145">
                <params>
                    <param name="digesta" type="byte[]"/>
                    <param name="digestb" type="byte[]"/>
                </params>
            </method>
            <javadoc line="149">
                Proxy method for {@link java.security.MessageDigest#digest()}which is executed on the internal {@link java.security.MessageDigest} object.                
                <return>
                    the result of the {@link java.security.MessageDigest#digest()} method                    
                </return>
            </javadoc>
            <method name="digest" type="byte[]" line="155"/>
            <javadoc line="159">
                Proxy method for {@link java.security.MessageDigest#digest(byte[])}which is executed on the internal {@link java.security.MessageDigest} object.                
                <param>
                    input                    
                </param>
                <return>
                    the result of the {@link java.security.MessageDigest#digest(byte[])} method                    
                </return>
            </javadoc>
            <method name="digest" type="byte[]" line="166">
                <params>
                    <param name="input" type="byte"/>
                </params>
            </method>
            <javadoc line="170">
                Proxy method for {@link java.security.MessageDigest#digest(byte[],int,int)}which is executed on the internal {@link java.security.MessageDigest} object.                
                <param>
                    buf                    
                </param>
                <param>
                    offset                    
                </param>
                <param>
                    len                    
                </param>
                <return>
                    the result of the {@link java.security.MessageDigest#digest(byte[],int,int)} method                    
                </return>
                <throws>
                    java.security.DigestException                    
                </throws>
            </javadoc>
            <method name="digest" type="int" line="181">
                <params>
                    <param name="buf" type="byte"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <javadoc line="185">
                Proxy method for {@link java.security.MessageDigest#getAlgorithm}which is executed on the internal {@link java.security.MessageDigest} object.                
                <return>
                    the result of the {@link java.security.MessageDigest#getAlgorithm} method                    
                </return>
            </javadoc>
            <method name="getJCEAlgorithmString" type="String" line="191"/>
            <javadoc line="195">
                Proxy method for {@link java.security.MessageDigest#getProvider}which is executed on the internal {@link java.security.MessageDigest} object.                
                <return>
                    the result of the {@link java.security.MessageDigest#getProvider} method                    
                </return>
            </javadoc>
            <method name="getJCEProvider" type="java.security.Provider" line="201"/>
            <javadoc line="205">
                Proxy method for {@link java.security.MessageDigest#getDigestLength}which is executed on the internal {@link java.security.MessageDigest} object.                
                <return>
                    the result of the {@link java.security.MessageDigest#getDigestLength} method                    
                </return>
            </javadoc>
            <method name="getDigestLength" type="int" line="211"/>
            <javadoc line="215">
                Proxy method for {@link java.security.MessageDigest#reset}which is executed on the internal {@link java.security.MessageDigest} object.                
            </javadoc>
            <method name="reset" type="void" line="220"/>
            <javadoc line="224">
                Proxy method for {@link java.security.MessageDigest#update(byte[])}which is executed on the internal {@link java.security.MessageDigest} object.                
                <param>
                    input                    
                </param>
            </javadoc>
            <method name="update" type="void" line="230">
                <params>
                    <param name="input" type="byte[]"/>
                </params>
            </method>
            <javadoc line="234">
                Proxy method for {@link java.security.MessageDigest#update(byte)}which is executed on the internal {@link java.security.MessageDigest} object.                
                <param>
                    input                    
                </param>
            </javadoc>
            <method name="update" type="void" line="240">
                <params>
                    <param name="input" type="byte"/>
                </params>
            </method>
            <javadoc line="244">
                Proxy method for {@link java.security.MessageDigest#update(byte[],int,int)}which is executed on the internal {@link java.security.MessageDigest} object.                
                <param>
                    buf                    
                </param>
                <param>
                    offset                    
                </param>
                <param>
                    len                    
                </param>
            </javadoc>
            <method name="update" type="void" line="252">
                <params>
                    <param name="buf" type="byte"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <javadoc line="256">
                @inheritDoc                
            </javadoc>
            <method name="getBaseNamespace" type="String" line="257"/>
            <javadoc line="261">
                @inheritDoc                
            </javadoc>
            <method name="getBaseLocalName" type="String" line="262"/>
        </class>
    </source>