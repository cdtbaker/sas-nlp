<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.org.apache.xml.internal.security.algorithms">
        <import package="java.security.MessageDigest"/>
        <import package="java.security.NoSuchProviderException"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Map"/>
        <import package="com.sun.org.apache.xml.internal.security.signature.XMLSignatureException"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.Constants"/>
        <import package="com.sun.org.apache.xml.internal.security.utils.EncryptionConstants"/>
        <import package="org.w3c.dom.Document"/>
        <class name="MessageDigestAlgorithm" line="10">
            <extends class="Algorithm"/>
            <javadoc line="10">
                Digest Message wrapper &amp; selector class.
                  &lt;pre&gt;
                  MessageDigestAlgorithm.getInstance()
                  &lt;/pre&gt;                
            </javadoc>
            <declaration name="ALGO_ID_DIGEST_NOT_RECOMMENDED_MD5" type="String" line="17"/>
            <javadoc line="17">
                Message Digest - NOT RECOMMENDED MD5                
            </javadoc>
            <declaration name="ALGO_ID_DIGEST_SHA1" type="String" line="21"/>
            <javadoc line="21">
                Digest - Required SHA1                
            </javadoc>
            <declaration name="ALGO_ID_DIGEST_SHA256" type="String" line="25"/>
            <javadoc line="25">
                Message Digest - RECOMMENDED SHA256                
            </javadoc>
            <declaration name="ALGO_ID_DIGEST_SHA384" type="String" line="29"/>
            <javadoc line="29">
                Message Digest - OPTIONAL SHA384                
            </javadoc>
            <declaration name="ALGO_ID_DIGEST_SHA512" type="String" line="33"/>
            <javadoc line="33">
                Message Digest - OPTIONAL SHA512                
            </javadoc>
            <declaration name="ALGO_ID_DIGEST_RIPEMD160" type="String" line="37"/>
            <javadoc line="37">
                Message Digest - OPTIONAL RIPEMD-160                
            </javadoc>
            <declaration name="algorithm" type="java.security.MessageDigest" line="41"/>
            <javadoc line="41">
                Field algorithm stores the actual {@link java.security.MessageDigest}                
            </javadoc>
            <javadoc line="45">
                Constructor for the brave who pass their own message digest algorithms and the corresponding URI.                
                <param>
                    doc                    
                </param>
                <param>
                    messageDigest                    
                </param>
                <param>
                    algorithmURI                    
                </param>
            </javadoc>
            <method name="MessageDigestAlgorithm" type="constructor" line="51">
                <params>
                    <param name="doc" type="Document"/>
                    <param name="messageDigest" type="MessageDigest"/>
                    <param name="algorithmURI" type="String"/>
                </params>
            </method>
            <declaration name="instances" type="ThreadLocal" line="55"/>
            <anonymous_class line="55">
                <method name="initialValue" type="Object" line="56"/>
            </anonymous_class>
            <javadoc line="61">
                Factory method for constructing a message digest algorithm by name.                
                <param>
                    doc                    
                </param>
                <param>
                    algorithmURI                    
                </param>
                <return>
                    The MessageDigestAlgorithm element to attach in document and to digest                    
                </return>
                <throws>
                    XMLSignatureException                    
                </throws>
            </javadoc>
            <method name="getInstance" type="MessageDigestAlgorithm" line="68">
                <params>
                    <param name="doc" type="Document"/>
                    <param name="algorithmURI" type="String"/>
                </params>
                <declaration name="md" type="MessageDigest" line="69"/>
            </method>
            <method name="getDigestInstance" type="MessageDigest" line="72">
                <params>
                    <param name="algorithmURI" type="String"/>
                </params>
                <declaration name="result" type="MessageDigest" line="73"/>
                <declaration name="algorithmID" type="String" line="75"/>
                <scope line="76">
                    <declaration name="exArgs" type="Object[]" line="77"/>
                </scope>
                <declaration name="md" type="MessageDigest" line="80"/>
                <declaration name="provider" type="String" line="81"/>
                <scope line="82">
                    <scope line="83"/>
                    <scope line="86"/>
                </scope>
                <scope line="90">
                    <declaration name="exArgs" type="Object[]" line="91"/>
                </scope>
                <scope line="94">
                    <declaration name="exArgs" type="Object[]" line="95"/>
                </scope>
            </method>
            <javadoc line="101">
                Returns the actual {@link java.security.MessageDigest} algorithm object                
                <return>
                    the actual {@link java.security.MessageDigest} algorithm object                    
                </return>
            </javadoc>
            <method name="getAlgorithm" type="java.security.MessageDigest" line="105"/>
            <javadoc line="108">
                Proxy method for {@link java.security.MessageDigest#isEqual}which is executed on the internal {@link java.security.MessageDigest} object.                
                <param>
                    digesta                    
                </param>
                <param>
                    digestb                    
                </param>
                <return>
                    the result of the {@link java.security.MessageDigest#isEqual} method                    
                </return>
            </javadoc>
            <method name="isEqual" type="boolean" line="114">
                <params>
                    <param name="digesta" type="byte[]"/>
                    <param name="digestb" type="byte[]"/>
                </params>
            </method>
            <javadoc line="117">
                Proxy method for {@link java.security.MessageDigest#digest()}which is executed on the internal {@link java.security.MessageDigest} object.                
                <return>
                    the result of the {@link java.security.MessageDigest#digest()} method                    
                </return>
            </javadoc>
            <method name="digest" type="byte[]" line="121"/>
            <javadoc line="124">
                Proxy method for {@link java.security.MessageDigest#digest(byte[])}which is executed on the internal {@link java.security.MessageDigest} object.                
                <param>
                    input                    
                </param>
                <return>
                    the result of the {@link java.security.MessageDigest#digest(byte[])} method                    
                </return>
            </javadoc>
            <method name="digest" type="byte[]" line="129">
                <params>
                    <param name="input" type="byte"/>
                </params>
            </method>
            <javadoc line="132">
                Proxy method for {@link java.security.MessageDigest#digest(byte[],int,int)}which is executed on the internal {@link java.security.MessageDigest} object.                
                <param>
                    buf                    
                </param>
                <param>
                    offset                    
                </param>
                <param>
                    len                    
                </param>
                <return>
                    the result of the {@link java.security.MessageDigest#digest(byte[],int,int)} method                    
                </return>
                <throws>
                    java.security.DigestException                    
                </throws>
            </javadoc>
            <method name="digest" type="int" line="140">
                <params>
                    <param name="buf" type="byte"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <javadoc line="143">
                Proxy method for {@link java.security.MessageDigest#getAlgorithm}which is executed on the internal {@link java.security.MessageDigest} object.                
                <return>
                    the result of the {@link java.security.MessageDigest#getAlgorithm} method                    
                </return>
            </javadoc>
            <method name="getJCEAlgorithmString" type="String" line="147"/>
            <javadoc line="150">
                Proxy method for {@link java.security.MessageDigest#getProvider}which is executed on the internal {@link java.security.MessageDigest} object.                
                <return>
                    the result of the {@link java.security.MessageDigest#getProvider} method                    
                </return>
            </javadoc>
            <method name="getJCEProvider" type="java.security.Provider" line="154"/>
            <javadoc line="157">
                Proxy method for {@link java.security.MessageDigest#getDigestLength}which is executed on the internal {@link java.security.MessageDigest} object.                
                <return>
                    the result of the {@link java.security.MessageDigest#getDigestLength} method                    
                </return>
            </javadoc>
            <method name="getDigestLength" type="int" line="161"/>
            <javadoc line="164">
                Proxy method for {@link java.security.MessageDigest#reset}which is executed on the internal {@link java.security.MessageDigest} object.                
            </javadoc>
            <method name="reset" type="void" line="167"/>
            <javadoc line="170">
                Proxy method for {@link java.security.MessageDigest#update(byte[])}which is executed on the internal {@link java.security.MessageDigest} object.                
                <param>
                    input                    
                </param>
            </javadoc>
            <method name="update" type="void" line="174">
                <params>
                    <param name="input" type="byte[]"/>
                </params>
            </method>
            <javadoc line="177">
                Proxy method for {@link java.security.MessageDigest#update(byte)}which is executed on the internal {@link java.security.MessageDigest} object.                
                <param>
                    input                    
                </param>
            </javadoc>
            <method name="update" type="void" line="181">
                <params>
                    <param name="input" type="byte"/>
                </params>
            </method>
            <javadoc line="184">
                Proxy method for {@link java.security.MessageDigest#update(byte[],int,int)}which is executed on the internal {@link java.security.MessageDigest} object.                
                <param>
                    buf                    
                </param>
                <param>
                    offset                    
                </param>
                <param>
                    len                    
                </param>
            </javadoc>
            <method name="update" type="void" line="190">
                <params>
                    <param name="buf" type="byte"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <javadoc line="193">
                @inheritDoc                
            </javadoc>
            <method name="getBaseNamespace" type="String" line="196"/>
            <javadoc line="199">
                @inheritDoc                
            </javadoc>
            <method name="getBaseLocalName" type="String" line="202"/>
        </class>
    </source>