<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.nio.sctp">
        <interface name="NotificationHandler">
            <type_params>
                <type_param name="T"/>
            </type_params>
            <javadoc line="27">
                A handler for consuming notifications from the SCTP stack.
                  &lt;P&gt; The SCTP channels defined in this package allow a notification handler to
                  be specified to consume notifications from the SCTP stack. When a
                  notification is received the {@linkplain #handleNotificationhandleNotification} method of the handler is invoked to handle that
                  notification.
                  &lt;P&gt; Additionally, an attachment object can be attached to the {@code receive}operation to provide context when consuming the notification. The
                  attachment is important for cases where a &lt;i&gt;state-less&lt;/i&gt; {@codeNotificationHandler} is used to consume the result of many {@code receive}operations.
                  &lt;P&gt; Handler implementations are encouraged to extend the {@link AbstractNotificationHandler} class which implements this interface and
                  provide notification specific methods. However, an API should generally use
                  this handler interface as the type for parameters, return type, etc. rather
                  than the abstract class.                
                <param>
                    T  The type of the object attached to the receive operation                    
                </param>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="handleNotification" type="HandlerResult" line="53"/>
            <javadoc line="53">
                Invoked when a notification is received from the SCTP stack.                
                <param>
                    notificationThe notification                    
                </param>
                <param>
                    attachmentThe object attached to the receive operation when it was initiated.                    
                </param>
                <return>
                    The handler result                    
                </return>
            </javadoc>
        </interface>
    </source>