<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.nio.sctp">
        <import package="java.net.SocketAddress"/>
        <import package="java.net.InetAddress"/>
        <import package="java.io.IOException"/>
        <import package="java.util.Set"/>
        <import package="java.nio.channels.SelectionKey"/>
        <import package="java.nio.channels.spi.SelectorProvider"/>
        <import package="java.nio.channels.spi.AbstractSelectableChannel"/>
        <class name="SctpServerChannel" line="9">
            <extends class="AbstractSelectableChannel"/>
            <javadoc line="9">
                A selectable channel for message-oriented listening SCTP sockets.
                  &lt;p&gt; An {@code SCTPServerChannel} is created by invoking the{@link #open open} method of this class. A newly-created SCTP server
                  channel is open but not yet bound. An attempt to invoke the{@link #accept accept} method of an unbound channel will cause the{@link java.nio.channels.NotYetBoundException} to be thrown. An SCTP server
                  channel can be bound by invoking one of the{@link #bind(java.net.SocketAddress,int) bind} methods defined by this class.
                  &lt;p&gt; Socket options are configured using the{@link #setOption(SctpSocketOption,Object) setOption} method. SCTP server socket
                  channels support the following options:
                  &lt;blockquote&gt;
                  &lt;table border&gt;
                  &lt;tr&gt;
                  &lt;th&gt;Option Name&lt;/th&gt;
                  &lt;th&gt;Description&lt;/th&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt; {@link SctpStandardSocketOptions#SCTP_INIT_MAXSTREAMSSCTP_INIT_MAXSTREAMS} &lt;/td&gt;
                  &lt;td&gt; The maximum number of streams requested by the local endpoint during
                  association initialization &lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;/table&gt;
                  &lt;/blockquote&gt;
                  Additional (implementation specific) options may also be supported. The list
                  of options supported is obtained by invoking the {@link #supportedOptions()supportedOptions} method.
                  &lt;p&gt;SCTP server channels are safe for use by multiple concurrent threads.                
                <since>
                    1.7                    
                </since>
            </javadoc>
            <javadoc line="35">
                Initializes a new instance of this class.                
                <param>
                    providerThe selector provider for this channel                    
                </param>
            </javadoc>
            <method name="SctpServerChannel" type="constructor" line="39">
                <params>
                    <param name="provider" type="SelectorProvider"/>
                </params>
            </method>
            <javadoc line="42">
                Opens an SCTP server channel.
                  &lt;P&gt; The new channel&apos;s socket is initially unbound; it must be bound
                  to a specific address via one of its socket&apos;s {@link #bind bind}methods before associations can be accepted.                
                <return>
                    A new SCTP server channel                    
                </return>
                <throws>
                    UnsupportedOperationExceptionIf the SCTP protocol is not supported                    
                </throws>
                <throws>
                    IOExceptionIf an I/O error occurs                    
                </throws>
            </javadoc>
            <method name="open" type="SctpServerChannel" line="50"/>
            <method name="accept" type="SctpChannel" line="53"/>
            <javadoc line="53">
                Accepts an association on this channel&apos;s socket.
                  &lt;P&gt; If this channel is in non-blocking mode then this method will
                  immediately return {@code null} if there are no pending associations.
                  Otherwise it will block indefinitely until a new association is
                  available or an I/O error occurs.
                  &lt;P&gt; The {@code SCTPChannel} returned by this method, if any, will be in
                  blocking mode regardless of the blocking mode of this channel.
                  &lt;P&gt; If a security manager has been installed then for each new
                  association this method verifies that the address and port number of the
                  assocaitions&apos;s remote peer are permitted by the security manager&apos;s {@link java.lang.SecurityManager#checkAccept(String,int) checkAccept} method.                
                <return>
                    The SCTP channel for the new association, or {@code null}if this channel is in non-blocking mode and no association is
                      available to be accepted                    
                </return>
                <throws>
                    java.nio.channels.ClosedChannelExceptionIf this channel is closed                    
                </throws>
                <throws>
                    java.nio.channels.AsynchronousCloseExceptionIf another thread closes this channel
                      while the accept operation is in progress                    
                </throws>
                <throws>
                    java.nio.channels.ClosedByInterruptExceptionIf another thread interrupts the current thread
                      while the accept operation is in progress, thereby
                      closing the channel and setting the current thread's
                      interrupt status                    
                </throws>
                <throws>
                    java.nio.channels.NotYetBoundExceptionIf this channel's socket has not yet been bound                    
                </throws>
                <throws>
                    SecurityExceptionIf a security manager has been installed and it does not permit
                      access to the remote peer of the new association                    
                </throws>
                <throws>
                    IOExceptionIf some other I/O error occurs                    
                </throws>
            </javadoc>
            <javadoc line="79">
                Binds the channel&apos;s socket to a local address and configures the socket
                  to listen for associations.
                  &lt;P&gt; This method works as if invoking it were equivalent to evaluating the
                  expression:
                  &lt;blockquote&gt;&lt;pre&gt;
                  bind(local, 0);
                  &lt;/pre&gt;&lt;/blockquote&gt;                
                <param>
                    localThe local address to bind the socket, or {@code null} to
                      bind the socket to an automatically assigned socket address                    
                </param>
                <return>
                    This channel                    
                </return>
                <throws>
                    java.nio.channels.ClosedChannelExceptionIf this channel is closed                    
                </throws>
                <throws>
                    java.nio.channels.AlreadyBoundExceptionIf this channel is already bound                    
                </throws>
                <throws>
                    java.nio.channels.UnsupportedAddressTypeExceptionIf the type of the given address is not supported                    
                </throws>
                <throws>
                    SecurityExceptionIf a security manager has been installed and its {@link java.lang.SecurityManager#checkListen(int) checkListen} method
                      denies the operation                    
                </throws>
                <throws>
                    IOExceptionIf some other I/O error occurs                    
                </throws>
            </javadoc>
            <method name="bind" type="SctpServerChannel" line="97">
                <params>
                    <param name="local" type="SocketAddress"/>
                </params>
            </method>
            <method name="bind" type="SctpServerChannel" line="100"/>
            <javadoc line="100">
                Binds the channel&apos;s socket to a local address and configures the socket
                  to listen for associations.
                  &lt;P&gt; This method is used to establish a relationship between the socket
                  and the local address. Once a relationship is established then
                  the socket remains bound until the channel is closed. This relationship
                  may not necesssarily be with the address {@code local} as it may be
                  removed by {@link #unbindAddress unbindAddress}, but there will always be
                  at least one local address bound to the channel&apos;s socket once an
                  invocation of this method successfully completes.
                  &lt;P&gt; Once the channel&apos;s socket has been successfully bound to a specific
                  address, that is not automatically assigned, more addresses
                  may be bound to it using {@link #bindAddress bindAddress}, or removed
                  using {@link #unbindAddress unbindAddress}.
                  &lt;P&gt; The backlog parameter is the maximum number of pending associations
                  on the socket. Its exact semantics are implementation specific. An
                  implementation may impose an implementation specific maximum length or
                  may choose to ignore the parameter. If the backlog parameter has the
                  value {@code 0}, or a negative value, then an implementation specific
                  default is used.                
                <param>
                    localThe local address to bind the socket, or {@code null} to
                      bind the socket to an automatically assigned socket address                    
                </param>
                <param>
                    backlogThe maximum number number of pending associations                    
                </param>
                <return>
                    This channel                    
                </return>
                <throws>
                    java.nio.channels.ClosedChannelExceptionIf this channel is closed                    
                </throws>
                <throws>
                    java.nio.channels.AlreadyBoundExceptionIf this channel is already bound                    
                </throws>
                <throws>
                    java.nio.channels.UnsupportedAddressTypeExceptionIf the type of the given address is not supported                    
                </throws>
                <throws>
                    SecurityExceptionIf a security manager has been installed and its {@link java.lang.SecurityManager#checkListen(int) checkListen} method
                      denies the operation                    
                </throws>
                <throws>
                    IOExceptionIf some other I/O error occurs                    
                </throws>
            </javadoc>
            <method name="bindAddress" type="SctpServerChannel" line="132"/>
            <javadoc line="132">
                Adds the given address to the bound addresses for the channel&apos;s
                  socket.
                  &lt;P&gt; The given address must not be the {@link java.net.InetAddress#isAnyLocalAddress wildcard} address.
                  The channel must be first bound using {@link #bind bind} before
                  invoking this method, otherwise {@link java.nio.channels.NotYetBoundException} is thrown. The {@link #bind bind}method takes a {@code SocketAddress} as its argument which typically
                  contains a port number as well as an address. Addresses subquently bound
                  using this method are simply addresses as the SCTP port number remains
                  the same for the lifetime of the channel.
                  &lt;P&gt; New associations accepted after this method successfully completes
                  will be associated with the given address.                
                <param>
                    addressThe address to add to the bound addresses for the socket                    
                </param>
                <return>
                    This channel                    
                </return>
                <throws>
                    java.nio.channels.ClosedChannelExceptionIf this channel is closed                    
                </throws>
                <throws>
                    java.nio.channels.NotYetBoundExceptionIf this channel is not yet bound                    
                </throws>
                <throws>
                    java.nio.channels.AlreadyBoundExceptionIf this channel is already bound to the given address                    
                </throws>
                <throws>
                    IllegalArgumentExceptionIf address is {@code null} or the {@link java.net.InetAddress#isAnyLocalAddress wildcard} address                    
                </throws>
                <throws>
                    IOExceptionIf some other I/O error occurs                    
                </throws>
            </javadoc>
            <method name="unbindAddress" type="SctpServerChannel" line="152"/>
            <javadoc line="152">
                Removes the given address from the bound addresses for the channel&apos;s
                  socket.
                  &lt;P&gt; The given address must not be the {@link java.net.InetAddress#isAnyLocalAddress wildcard} address.
                  The channel must be first bound using {@link #bind bind} before
                  invoking this method, otherwise{@link java.nio.channels.NotYetBoundException} is thrown.
                  If this method is invoked on a channel that does not have{@code address} as one of its bound addresses, or that has only one
                  local address bound to it, then this method throws {@link IllegalUnbindException}.
                  The initial address that the channel&apos;s socket is bound to using{@link #bind bind} may be removed from the bound addresses for the
                  channel&apos;s socket.
                  &lt;P&gt; New associations accepted after this method successfully completes
                  will not be associated with the given address.                
                <param>
                    addressThe address to remove from the bound addresses for the socket                    
                </param>
                <return>
                    This channel                    
                </return>
                <throws>
                    java.nio.channels.ClosedChannelExceptionIf this channel is closed                    
                </throws>
                <throws>
                    java.nio.channels.NotYetBoundExceptionIf this channel is not yet bound                    
                </throws>
                <throws>
                    IllegalArgumentExceptionIf address is {@code null} or the {@link java.net.InetAddress#isAnyLocalAddress wildcard} address                    
                </throws>
                <throws>
                    IllegalUnbindExceptionIf the implementation does not support removing addresses from a
                      listening socket, {@code address} is not bound to the channel's
                      socket, or the channel has only one address bound to it                    
                </throws>
                <throws>
                    IOExceptionIf some other I/O error occurs                    
                </throws>
            </javadoc>
            <method name="getAllLocalAddresses" type="Set<SocketAddress>" line="175"/>
            <javadoc line="175">
                Returns all of the socket addresses to which this channel&apos;s socket is
                  bound.                
                <return>
                    All the socket addresses that this channel's socket is
                      bound to, or an empty {@code Set} if the channel's socket is not
                      bound                    
                </return>
                <throws>
                    java.nio.channels.ClosedChannelExceptionIf the channel is closed                    
                </throws>
                <throws>
                    IOExceptionIf an I/O error occurs                    
                </throws>
            </javadoc>
            <method name="getOption" type="T" line="185"/>
            <javadoc line="185">
                Returns the value of a socket option.                
                <param>
                    nameThe socket option                    
                </param>
                <return>
                    The value of the socket option. A value of {@code null} may be
                      a valid value for some socket options.                    
                </return>
                <throws>
                    UnsupportedOperationExceptionIf the socket option is not supported by this channel                    
                </throws>
                <throws>
                    java.nio.channels.ClosedChannelExceptionIf this channel is closed                    
                </throws>
                <throws>
                    IOExceptionIf an I/O error occurs                    
                </throws>
                <see>
                    SctpStandardSocketOptions                    
                </see>
            </javadoc>
            <method name="setOption" type="SctpServerChannel" line="196"/>
            <javadoc line="196">
                Sets the value of a socket option.                
                <param>
                    nameThe socket option                    
                </param>
                <param>
                    valueThe value of the socket option. A value of {@code null} may be
                      a valid value for some socket options.                    
                </param>
                <return>
                    This channel                    
                </return>
                <throws>
                    UnsupportedOperationExceptionIf the socket option is not supported by this channel                    
                </throws>
                <throws>
                    IllegalArgumentExceptionIf the value is not a valid value for this socket option                    
                </throws>
                <throws>
                    java.nio.channels.ClosedChannelExceptionIf this channel is closed                    
                </throws>
                <throws>
                    IOExceptionIf an I/O error occurs                    
                </throws>
                <see>
                    SctpStandardSocketOptions                    
                </see>
            </javadoc>
            <method name="supportedOptions" type="Set<SctpSocketOption<?>>" line="209"/>
            <javadoc line="209">
                Returns a set of the socket options supported by this channel.
                  &lt;P&gt; This method will continue to return the set of options even after the
                  channel has been closed.                
                <return>
                    A set of the socket options supported by this channel                    
                </return>
            </javadoc>
            <javadoc line="216">
                Returns an operation set identifying this channel&apos;s supported
                  operations.
                  &lt;P&gt; SCTP server channels only support the accepting of new
                  associations, so this method returns{@link java.nio.channels.SelectionKey#OP_ACCEPT}.                
                <return>
                    The valid-operation set                    
                </return>
            </javadoc>
            <method name="validOps" type="int" line="223"/>
        </class>
    </source>