<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.util.Vector"/>
        <import package="javax.sound.sampled"/>
        <class name="DirectAudioDevice" line="6">
            <extends class="AbstractMixer"/>
            <javadoc line="6">
                A Mixer which provides direct access to audio devices                
                <author>
                    Florian Bomers                    
                </author>
            </javadoc>
            <declaration name="CLIP_BUFFER_TIME" type="int" line="11"/>
            <declaration name="DEFAULT_LINE_BUFFER_TIME" type="int" line="12"/>
            <declaration name="deviceCountOpened" type="int" line="13"/>
            <javadoc line="13">
                number of opened lines                
            </javadoc>
            <declaration name="deviceCountStarted" type="int" line="17"/>
            <javadoc line="17">
                number of started lines                
            </javadoc>
            <method name="DirectAudioDevice" type="constructor" line="21">
                <params>
                    <param name="portMixerInfo" type="DirectAudioDeviceProvider.DirectAudioDeviceInfo"/>
                </params>
                <declaration name="srcLineInfo" type="DirectDLI" line="24"/>
                <scope line="25"/>
                <scope line="30"/>
                <declaration name="dstLineInfo" type="DataLine.Info" line="33"/>
                <scope line="34"/>
                <scope line="38"/>
            </method>
            <method name="createDataLineInfo" type="DirectDLI" line="43">
                <params>
                    <param name="isSource" type="boolean"/>
                </params>
                <declaration name="formats" type="Vector" line="44"/>
                <declaration name="hardwareFormatArray" type="AudioFormat[]" line="45"/>
                <declaration name="formatArray" type="AudioFormat[]" line="46"/>
                <scope line="47">
                    <scope line="49">
                        <declaration name="size" type="int" line="50"/>
                        <declaration name="formatArraySize" type="int" line="51"/>
                        <scope line="53">
                            <declaration name="format" type="AudioFormat" line="54"/>
                            <declaration name="bits" type="int" line="56"/>
                            <declaration name="isSigned" type="boolean" line="57"/>
                            <declaration name="isUnsigned" type="boolean" line="58"/>
                            <scope line="59"/>
                        </scope>
                        <declaration name="formatArrayIndex" type="int" line="64"/>
                        <scope line="65">
                            <declaration name="format" type="AudioFormat" line="66"/>
                            <declaration name="bits" type="int" line="68"/>
                            <declaration name="isSigned" type="boolean" line="69"/>
                            <declaration name="isUnsigned" type="boolean" line="70"/>
                            <scope line="71">
                                <scope line="72"/>
                                <scope line="75"/>
                            </scope>
                            <scope line="79"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="85"/>
            </method>
            <method name="getLine" type="Line" line="90">
                <params>
                    <param name="info" type="Line.Info"/>
                </params>
                <declaration name="fullInfo" type="Line.Info" line="91"/>
                <scope line="92"/>
                <scope line="95">
                    <declaration name="dataLineInfo" type="DataLine.Info" line="96"/>
                    <declaration name="lineFormat" type="AudioFormat" line="97"/>
                    <declaration name="lineBufferSize" type="int" line="98"/>
                    <declaration name="supportedFormats" type="AudioFormat[]" line="99"/>
                    <scope line="100"/>
                    <scope line="104"/>
                    <scope line="107">
                        <scope line="109"/>
                    </scope>
                    <scope line="113"/>
                    <scope line="116"/>
                    <scope line="119"/>
                </scope>
            </method>
            <method name="getMaxLines" type="int" line="125">
                <params>
                    <param name="info" type="Line.Info"/>
                </params>
                <declaration name="fullInfo" type="Line.Info" line="126"/>
                <scope line="127"/>
                <scope line="130"/>
            </method>
            <method name="implOpen" type="void" line="135"/>
            <method name="implClose" type="void" line="138"/>
            <method name="implStart" type="void" line="141"/>
            <method name="implStop" type="void" line="144"/>
            <method name="getMixerIndex" type="int" line="147"/>
            <method name="getDeviceID" type="int" line="150"/>
            <method name="getMaxSimulLines" type="int" line="153"/>
            <method name="addFormat" type="void" line="156">
                <params>
                    <param name="v" type="Vector"/>
                    <param name="bits" type="int"/>
                    <param name="frameSizeInBytes" type="int"/>
                    <param name="channels" type="int"/>
                    <param name="sampleRate" type="float"/>
                    <param name="encoding" type="int"/>
                    <param name="signed" type="boolean"/>
                    <param name="bigEndian" type="boolean"/>
                </params>
                <declaration name="enc" type="AudioFormat.Encoding" line="157"/>
                <scope line="164"/>
                <scope line="172"/>
                <scope line="179"/>
                <scope line="183">
                    <scope line="184"/>
                    <scope line="187"/>
                </scope>
            </method>
            <method name="getSignOrEndianChangedFormat" type="AudioFormat" line="193">
                <params>
                    <param name="format" type="AudioFormat"/>
                </params>
                <declaration name="isSigned" type="boolean" line="194"/>
                <declaration name="isUnsigned" type="boolean" line="195"/>
                <scope line="196"/>
                <scope line="199"/>
            </method>
            <class name="DirectDLI" line="204">
                <extends class="DataLine.Info"/>
                <javadoc line="204">
                    Private inner class for the DataLine.Info objects
                      adds a little magic for the isFormatSupported so
                      that the automagic conversion of endianness and sign
                      does not show up in the formats array.
                      I.e. the formats array contains only the formats
                      that are really supported by the hardware,
                      but isFormatSupported() also returns true
                      for formats with wrong endianness.                    
                </javadoc>
                <declaration name="hardwareFormats" type="AudioFormat[]" line="215"/>
                <method name="DirectDLI" type="constructor" line="216">
                    <params>
                        <param name="clazz" type="Class"/>
                        <param name="formatArray" type="AudioFormat[]"/>
                        <param name="hardwareFormatArray" type="AudioFormat[]"/>
                        <param name="minBuffer" type="int"/>
                        <param name="maxBuffer" type="int"/>
                    </params>
                </method>
                <method name="isFormatSupportedInHardware" type="boolean" line="220">
                    <params>
                        <param name="format" type="AudioFormat"/>
                    </params>
                    <scope line="222">
                        <scope line="223"/>
                    </scope>
                </method>
                <method name="getHardwareFormats" type="AudioFormat[]" line="229"/>
            </class>
            <class name="DirectDL" line="233">
                <extends class="AbstractDataLine"/>
                <implements interface="EventDispatcher.LineMonitor"/>
                <javadoc line="233">
                    Private inner class as base class for direct lines                    
                </javadoc>
                <declaration name="mixerIndex" type="int" line="237"/>
                <declaration name="deviceID" type="int" line="238"/>
                <declaration name="id" type="long" line="239"/>
                <declaration name="waitTime" type="int" line="240"/>
                <declaration name="flushing" type="boolean" line="241"/>
                <declaration name="isSource" type="boolean" line="242"/>
                <declaration name="bytePosition" type="long" line="243"/>
                <declaration name="doIO" type="boolean" line="244"/>
                <declaration name="stoppedWritten" type="boolean" line="245"/>
                <declaration name="drained" type="boolean" line="246"/>
                <declaration name="monitoring" type="boolean" line="247"/>
                <declaration name="softwareConversionSize" type="int" line="248"/>
                <declaration name="hardwareFormat" type="AudioFormat" line="249"/>
                <declaration name="gainControl" type="Gain" line="250"/>
                <declaration name="muteControl" type="Mute" line="251"/>
                <declaration name="balanceControl" type="Balance" line="252"/>
                <declaration name="panControl" type="Pan" line="253"/>
                <declaration name="leftGain" type="float" line="254"/>
                <declaration name="noService" type="boolean" line="255"/>
                <declaration name="lockNative" type="Object" line="256"/>
                <method name="DirectDL" type="constructor" line="257">
                    <params>
                        <param name="info" type="DataLine.Info"/>
                        <param name="mixer" type="DirectAudioDevice"/>
                        <param name="format" type="AudioFormat"/>
                        <param name="bufferSize" type="int"/>
                        <param name="mixerIndex" type="int"/>
                        <param name="deviceID" type="int"/>
                        <param name="isSource" type="boolean"/>
                    </params>
                </method>
                <method name="implOpen" type="void" line="265">
                    <params>
                        <param name="format" type="AudioFormat"/>
                        <param name="bufferSize" type="int"/>
                    </params>
                    <scope line="268"/>
                    <declaration name="encoding" type="int" line="271"/>
                    <scope line="272"/>
                    <scope line="275"/>
                    <scope line="278"/>
                    <declaration name="ddli" type="DirectDLI" line="281"/>
                    <scope line="282"/>
                    <scope line="285">
                        <scope line="286"/>
                        <scope line="289"/>
                        <scope line="292">
                            <scope line="293"/>
                            <scope line="296"/>
                        </scope>
                    </scope>
                    <scope line="308">
                        <declaration name="newFormat" type="AudioFormat" line="309"/>
                        <scope line="310">
                            <scope line="313"/>
                        </scope>
                    </scope>
                    <scope line="322"/>
                    <scope line="326"/>
                    <scope line="331"/>
                    <scope line="334"/>
                </method>
                <method name="implStart" type="void" line="343">
                    <scope line="345"/>
                    <scope line="348"/>
                    <scope line="352"/>
                    <scope line="356"/>
                </method>
                <method name="implStop" type="void" line="362">
                    <scope line="364"/>
                    <scope line="367"/>
                    <scope line="371"/>
                    <scope line="374"/>
                </method>
                <method name="implClose" type="void" line="383">
                    <scope line="385"/>
                    <scope line="388"/>
                    <declaration name="oldID" type="long" line="393"/>
                    <scope line="395"/>
                </method>
                <method name="available" type="int" line="402">
                    <scope line="403"/>
                    <declaration name="a" type="int" line="406"/>
                    <scope line="407"/>
                </method>
                <method name="drain" type="void" line="412">
                    <declaration name="counter" type="int" line="414"/>
                    <declaration name="startPos" type="long" line="415"/>
                    <declaration name="posChanged" type="boolean" line="416"/>
                    <scope line="417">
                        <scope line="418"/>
                        <scope line="421">
                            <declaration name="thisFramePos" type="long" line="422"/>
                            <scope line="424">
                                <scope line="425"/>
                            </scope>
                        </scope>
                        <scope line="434">
                            <scope line="435"/>
                            <scope line="438"/>
                        </scope>
                    </scope>
                    <scope line="442"/>
                </method>
                <method name="flush" type="void" line="447">
                    <scope line="448">
                        <scope line="450"/>
                        <scope line="453">
                            <scope line="454"/>
                        </scope>
                    </scope>
                </method>
                <method name="getLongFramePosition" type="long" line="461">
                    <declaration name="pos" type="long" line="462"/>
                    <scope line="463"/>
                    <scope line="466"/>
                </method>
                <method name="write" type="int" line="472">
                    <params>
                        <param name="b" type="byte[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                    <scope line="474"/>
                    <scope line="477"/>
                    <scope line="480"/>
                    <scope line="483"/>
                    <scope line="486"/>
                    <scope line="489"/>
                    <declaration name="written" type="int" line="493"/>
                    <scope line="494">
                        <declaration name="thisWritten" type="int" line="495"/>
                        <scope line="496">
                            <scope line="498"/>
                            <scope line="502"/>
                        </scope>
                        <scope line="508">
                            <scope line="510">
                                <scope line="511"/>
                                <scope line="514"/>
                            </scope>
                        </scope>
                        <scope line="518"/>
                    </scope>
                    <scope line="522"/>
                </method>
                <method name="requiresServicing" type="boolean" line="527"/>
                <method name="checkLine" type="void" line="530">
                    <scope line="531">
                        <scope line="532"/>
                    </scope>
                </method>
                <method name="calcVolume" type="void" line="537">
                    <scope line="538"/>
                    <scope line="541"/>
                    <declaration name="gain" type="float" line="546"/>
                    <scope line="547"/>
                    <scope line="551">
                        <declaration name="bal" type="float" line="552"/>
                        <scope line="553"/>
                        <scope line="557"/>
                    </scope>
                </method>
                <class name="Gain" line="563">
                    <extends class="FloatControl"/>
                    <declaration name="linearGain" type="float" line="564"/>
                    <method name="Gain" type="constructor" line="565"/>
                    <method name="setValue" type="void" line="568">
                        <params>
                            <param name="newValue" type="float"/>
                        </params>
                        <declaration name="newLinearGain" type="float" line="569"/>
                    </method>
                    <method name="getLinearGain" type="float" line="574"/>
                </class>
                <class name="Mute" line="578">
                    <extends class="BooleanControl"/>
                    <method name="Mute" type="constructor" line="579"/>
                    <method name="setValue" type="void" line="582">
                        <params>
                            <param name="newValue" type="boolean"/>
                        </params>
                    </method>
                </class>
                <class name="Balance" line="587">
                    <extends class="FloatControl"/>
                    <method name="Balance" type="constructor" line="588"/>
                    <method name="setValue" type="void" line="591">
                        <params>
                            <param name="newValue" type="float"/>
                        </params>
                    </method>
                    <method name="setValueImpl" type="void" line="596">
                        <params>
                            <param name="newValue" type="float"/>
                        </params>
                    </method>
                </class>
                <class name="Pan" line="600">
                    <extends class="FloatControl"/>
                    <method name="Pan" type="constructor" line="601"/>
                    <method name="setValue" type="void" line="604">
                        <params>
                            <param name="newValue" type="float"/>
                        </params>
                    </method>
                    <method name="setValueImpl" type="void" line="609">
                        <params>
                            <param name="newValue" type="float"/>
                        </params>
                    </method>
                </class>
            </class>
            <class name="DirectSDL" line="614">
                <extends class="DirectDL"/>
                <implements interface="SourceDataLine"/>
                <javadoc line="614">
                    Private inner class representing a SourceDataLine                    
                </javadoc>
                <method name="DirectSDL" type="constructor" line="618">
                    <params>
                        <param name="info" type="DataLine.Info"/>
                        <param name="format" type="AudioFormat"/>
                        <param name="bufferSize" type="int"/>
                        <param name="mixer" type="DirectAudioDevice"/>
                    </params>
                </method>
            </class>
            <class name="DirectTDL" line="623">
                <extends class="DirectDL"/>
                <implements interface="TargetDataLine"/>
                <javadoc line="623">
                    Private inner class representing a TargetDataLine                    
                </javadoc>
                <method name="DirectTDL" type="constructor" line="627">
                    <params>
                        <param name="info" type="DataLine.Info"/>
                        <param name="format" type="AudioFormat"/>
                        <param name="bufferSize" type="int"/>
                        <param name="mixer" type="DirectAudioDevice"/>
                    </params>
                </method>
                <method name="read" type="int" line="631">
                    <params>
                        <param name="b" type="byte[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                    <scope line="633"/>
                    <scope line="636"/>
                    <scope line="639"/>
                    <scope line="642"/>
                    <scope line="645"/>
                    <scope line="648"/>
                    <declaration name="read" type="int" line="652"/>
                    <scope line="653">
                        <declaration name="thisRead" type="int" line="654"/>
                        <scope line="655">
                            <scope line="657"/>
                            <scope line="661"/>
                        </scope>
                        <scope line="667">
                            <scope line="669">
                                <scope line="670"/>
                                <scope line="673"/>
                            </scope>
                        </scope>
                        <scope line="677"/>
                    </scope>
                    <scope line="681"/>
                </method>
            </class>
            <class name="DirectClip" line="687">
                <extends class="DirectDL"/>
                <implements interface="Clip"/>
                <implements interface="Runnable"/>
                <implements interface="AutoClosingClip"/>
                <javadoc line="687">
                    Private inner class representing a Clip
                      This clip is realized in software only                    
                </javadoc>
                <declaration name="thread" type="Thread" line="692"/>
                <declaration name="audioData" type="byte[]" line="693"/>
                <declaration name="frameSize" type="int" line="694"/>
                <declaration name="m_lengthInFrames" type="int" line="695"/>
                <declaration name="loopCount" type="int" line="696"/>
                <declaration name="clipBytePosition" type="int" line="697"/>
                <declaration name="newFramePosition" type="int" line="698"/>
                <declaration name="loopStartFrame" type="int" line="699"/>
                <declaration name="loopEndFrame" type="int" line="700"/>
                <declaration name="autoclosing" type="boolean" line="701"/>
                <method name="DirectClip" type="constructor" line="702">
                    <params>
                        <param name="info" type="DataLine.Info"/>
                        <param name="format" type="AudioFormat"/>
                        <param name="bufferSize" type="int"/>
                        <param name="mixer" type="DirectAudioDevice"/>
                    </params>
                </method>
                <method name="open" type="void" line="706">
                    <params>
                        <param name="format" type="AudioFormat"/>
                        <param name="data" type="byte[]"/>
                        <param name="offset" type="int"/>
                        <param name="bufferSize" type="int"/>
                    </params>
                    <declaration name="newData" type="byte[]" line="708"/>
                </method>
                <method name="open" type="void" line="712">
                    <params>
                        <param name="format" type="AudioFormat"/>
                        <param name="data" type="byte[]"/>
                        <param name="frameLength" type="int"/>
                    </params>
                    <scope line="714">
                        <scope line="718"/>
                        <scope line="721">
                            <scope line="731"/>
                            <scope line="734"/>
                            <scope line="738"/>
                            <declaration name="priority" type="int" line="742"/>
                        </scope>
                    </scope>
                    <scope line="747"/>
                </method>
                <method name="open" type="void" line="752">
                    <params>
                        <param name="stream" type="AudioInputStream"/>
                    </params>
                    <scope line="754">
                        <declaration name="streamData" type="byte[]" line="756"/>
                        <scope line="757"/>
                        <declaration name="lengthInFrames" type="int" line="760"/>
                        <declaration name="bytesRead" type="int" line="762"/>
                        <scope line="763">
                            <declaration name="arraysize" type="int" line="764"/>
                            <declaration name="bytesRemaining" type="int" line="766"/>
                            <declaration name="thisRead" type="int" line="767"/>
                            <scope line="768">
                                <scope line="770"/>
                                <scope line="774"/>
                            </scope>
                        </scope>
                        <scope line="779">
                            <declaration name="MAX_READ_LIMIT" type="int" line="780"/>
                            <declaration name="dbaos" type="DirectBAOS" line="781"/>
                            <declaration name="tmp" type="byte" line="782"/>
                            <declaration name="thisRead" type="int" line="783"/>
                            <scope line="784">
                                <scope line="786"/>
                                <scope line="790"/>
                            </scope>
                        </scope>
                    </scope>
                </method>
                <method name="getFrameLength" type="int" line="802"/>
                <method name="getMicrosecondLength" type="long" line="805"/>
                <method name="setFramePosition" type="void" line="808">
                    <params>
                        <param name="frames" type="int"/>
                    </params>
                    <scope line="810"/>
                    <scope line="813"/>
                    <scope line="816"/>
                    <scope line="819"/>
                    <scope line="825"/>
                </method>
                <method name="getLongFramePosition" type="long" line="831"/>
                <method name="setMicrosecondPosition" type="void" line="834">
                    <params>
                        <param name="microseconds" type="long"/>
                    </params>
                    <declaration name="frames" type="long" line="836"/>
                </method>
                <method name="setLoopPoints" type="void" line="840">
                    <params>
                        <param name="start" type="int"/>
                        <param name="end" type="int"/>
                    </params>
                    <scope line="842"/>
                    <scope line="845"/>
                    <scope line="848">
                        <scope line="850"/>
                    </scope>
                    <scope line="854"/>
                </method>
                <method name="loop" type="void" line="862">
                    <params>
                        <param name="count" type="int"/>
                    </params>
                </method>
                <method name="implOpen" type="void" line="866">
                    <params>
                        <param name="format" type="AudioFormat"/>
                        <param name="bufferSize" type="int"/>
                    </params>
                    <scope line="867"/>
                </method>
                <method name="implClose" type="void" line="872">
                    <declaration name="oldThread" type="Thread" line="874"/>
                    <scope line="877">
                        <scope line="878"/>
                        <scope line="881"/>
                        <scope line="884"/>
                    </scope>
                </method>
                <method name="implStart" type="void" line="893"/>
                <method name="implStop" type="void" line="898"/>
                <method name="run" type="void" line="904">
                    <scope line="906">
                        <scope line="907">
                            <scope line="908">
                                <scope line="909"/>
                                <scope line="912"/>
                            </scope>
                        </scope>
                        <scope line="916">
                            <scope line="917"/>
                            <declaration name="endFrame" type="int" line="921"/>
                            <scope line="922"/>
                            <declaration name="framePos" type="long" line="925"/>
                            <declaration name="toWriteFrames" type="int" line="926"/>
                            <declaration name="toWriteBytes" type="int" line="927"/>
                            <scope line="928"/>
                            <declaration name="written" type="int" line="931"/>
                            <scope line="933">
                                <scope line="935">
                                    <scope line="936">
                                        <scope line="937"/>
                                    </scope>
                                    <scope line="942"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </method>
                <method name="isAutoClosing" type="boolean" line="955"/>
                <method name="setAutoClosing" type="void" line="958">
                    <params>
                        <param name="value" type="boolean"/>
                    </params>
                    <scope line="959">
                        <scope line="960">
                            <scope line="961"/>
                            <scope line="964"/>
                        </scope>
                    </scope>
                </method>
                <method name="requiresServicing" type="boolean" line="971"/>
            </class>
            <class name="DirectBAOS" line="975">
                <extends class="ByteArrayOutputStream"/>
                <method name="DirectBAOS" type="constructor" line="976"/>
                <method name="getInternalBuffer" type="byte[]" line="979"/>
            </class>
            <method name="nGetFormats" type="void" line="983"/>
            <method name="nOpen" type="long" line="984"/>
            <method name="nStart" type="void" line="985"/>
            <method name="nStop" type="void" line="986"/>
            <method name="nClose" type="void" line="987"/>
            <method name="nWrite" type="int" line="988"/>
            <method name="nRead" type="int" line="989"/>
            <method name="nGetBufferSize" type="int" line="990"/>
            <method name="nIsStillDraining" type="boolean" line="991"/>
            <method name="nFlush" type="void" line="992"/>
            <method name="nAvailable" type="int" line="993"/>
            <method name="nGetBytePosition" type="long" line="994"/>
            <method name="nSetBytePosition" type="void" line="995"/>
            <method name="nRequiresServicing" type="boolean" line="996"/>
            <method name="nService" type="void" line="997"/>
        </class>
    </source>