<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.io.BufferedInputStream"/>
        <import package="java.io.File"/>
        <import package="java.io.FileInputStream"/>
        <import package="java.io.FileOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.lang.ref.WeakReference"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.util.Properties"/>
        <import package="java.util.StringTokenizer"/>
        <import package="java.util.prefs.BackingStoreException"/>
        <import package="java.util.prefs.Preferences"/>
        <import package="javax.sound.midi.Instrument"/>
        <import package="javax.sound.midi.MidiChannel"/>
        <import package="javax.sound.midi.MidiDevice"/>
        <import package="javax.sound.midi.MidiSystem"/>
        <import package="javax.sound.midi.MidiUnavailableException"/>
        <import package="javax.sound.midi.Patch"/>
        <import package="javax.sound.midi.Receiver"/>
        <import package="javax.sound.midi.Soundbank"/>
        <import package="javax.sound.midi.Transmitter"/>
        <import package="javax.sound.midi.VoiceStatus"/>
        <import package="javax.sound.sampled.AudioFormat"/>
        <import package="javax.sound.sampled.AudioInputStream"/>
        <import package="javax.sound.sampled.AudioSystem"/>
        <import package="javax.sound.sampled.LineUnavailableException"/>
        <import package="javax.sound.sampled.SourceDataLine"/>
        <class name="SoftSynthesizer" line="64">
            <comment line="191">
                0: default                
            </comment>
            <comment line="192">
                1: DLS Voice Allocation                
            </comment>
            <comment line="206">
                0: GM Mode off (default)                
            </comment>
            <comment line="207">
                1: GM Level 1                
            </comment>
            <comment line="208">
                2: GM Level 2                
            </comment>
            <comment line="230">
                200 msec                
            </comment>
            <implements interface="AudioSynthesizer"/>
            <implements interface="ReferenceCountingDevice"/>
            <javadoc line="64">
                The software synthesizer class.                
                <author>
                    Karl Helgason                    
                </author>
            </javadoc>
            <class name="WeakAudioStream" line="72">
                <extends class="InputStream"/>
                <declaration name="stream" type="AudioInputStream" line="74"/>
                <declaration name="pusher" type="SoftAudioPusher" line="75"/>
                <declaration name="jitter_stream" type="AudioInputStream" line="76"/>
                <declaration name="sourceDataLine" type="SourceDataLine" line="77"/>
                <declaration name="silent_samples" type="long" line="78"/>
                <declaration name="framesize" type="int" line="79"/>
                <declaration name="weak_stream_link" type="WeakReference&lt;AudioInputStream&gt;" line="80"/>
                <declaration name="converter" type="AudioFloatConverter" line="81"/>
                <declaration name="silentbuffer" type="float[]" line="82"/>
                <declaration name="samplesize" type="int" line="83"/>
                <method name="setInputStream" type="void" line="86">
                    <params>
                        <param name="stream" type="AudioInputStream"/>
                    </params>
                </method>
                <method name="available" type="int" line="90">
                    <declaration name="local_stream" type="AudioInputStream" line="91"/>
                </method>
                <method name="read" type="int" line="97">
                    <declaration name="b" type="byte[]" line="98"/>
                </method>
                <method name="read" type="int" line="104">
                    <params>
                        <param name="b" type="byte[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                    <declaration name="local_stream" type="AudioInputStream" line="105"/>
                    <scope line="109">
                        <declaration name="flen" type="int" line="110"/>
                        <scope line="119">
                            <anonymous_class line="121">
                                <declaration name="_pusher" type="SoftAudioPusher" line="122"/>
                                <declaration name="_jitter_stream" type="AudioInputStream" line="123"/>
                                <declaration name="_sourceDataLine" type="SourceDataLine" line="124"/>
                                <method name="run" type="void" line="126">
                                    <scope line="129"/>
                                    <scope line="131"/>
                                </method>
                            </anonymous_class>
                            <declaration name="runnable" type="Runnable" line="120"/>
                        </scope>
                    </scope>
                </method>
                <method name="WeakAudioStream" type="constructor" line="147">
                    <params>
                        <param name="stream" type="AudioInputStream"/>
                    </params>
                </method>
                <method name="getAudioInputStream" type="AudioInputStream" line="156"/>
                <method name="close" type="void" line="161">
                    <declaration name="astream" type="AudioInputStream" line="162"/>
                </method>
            </class>
            <class name="Info" line="168">
                <extends class="MidiDevice.Info"/>
                <method name="Info" type="constructor" line="169"/>
            </class>
            <declaration name="INFO_NAME" type="String" line="174"/>
            <declaration name="INFO_VENDOR" type="String" line="175"/>
            <declaration name="INFO_DESCRIPTION" type="String" line="176"/>
            <declaration name="INFO_VERSION" type="String" line="177"/>
            <declaration name="info" type="MidiDevice.Info" line="178"/>
            <declaration name="testline" type="SourceDataLine" line="180"/>
            <declaration name="defaultSoundBank" type="Soundbank" line="182"/>
            <declaration name="weakstream" type="WeakAudioStream" line="184"/>
            <declaration name="control_mutex" type="Object" line="186"/>
            <declaration name="voiceIDCounter" type="int" line="188"/>
            <declaration name="voice_allocation_mode" type="int" line="192"/>
            <declaration name="load_default_soundbank" type="boolean" line="194"/>
            <declaration name="reverb_light" type="boolean" line="195"/>
            <declaration name="reverb_on" type="boolean" line="196"/>
            <declaration name="chorus_on" type="boolean" line="197"/>
            <declaration name="agc_on" type="boolean" line="198"/>
            <declaration name="channels" type="SoftChannel[]" line="200"/>
            <declaration name="external_channels" type="SoftChannelProxy[]" line="201"/>
            <declaration name="largemode" type="boolean" line="203"/>
            <declaration name="gmmode" type="int" line="208"/>
            <declaration name="deviceid" type="int" line="210"/>
            <declaration name="format" type="AudioFormat" line="212"/>
            <declaration name="sourceDataLine" type="SourceDataLine" line="214"/>
            <declaration name="pusher" type="SoftAudioPusher" line="216"/>
            <declaration name="pusher_stream" type="AudioInputStream" line="217"/>
            <declaration name="controlrate" type="float" line="219"/>
            <declaration name="open" type="boolean" line="221"/>
            <declaration name="implicitOpen" type="boolean" line="222"/>
            <declaration name="resamplerType" type="String" line="224"/>
            <declaration name="resampler" type="SoftResampler" line="225"/>
            <declaration name="number_of_midi_channels" type="int" line="227"/>
            <declaration name="maxpoly" type="int" line="228"/>
            <declaration name="latency" type="long" line="229"/>
            <declaration name="jitter_correction" type="boolean" line="230"/>
            <declaration name="mainmixer" type="SoftMainMixer" line="232"/>
            <declaration name="voices" type="SoftVoice[]" line="233"/>
            <declaration name="tunings" type="Map&lt;String,SoftTuning&gt;" line="235"/>
            <declaration name="inslist" type="Map&lt;String,SoftInstrument&gt;" line="237"/>
            <declaration name="loadedlist" type="Map&lt;String,ModelInstrument&gt;" line="239"/>
            <declaration name="recvslist" type="ArrayList&lt;Receiver&gt;" line="242"/>
            <method name="getBuffers" type="void" line="245">
                <params>
                    <param name="instrument" type="ModelInstrument"/>
                    <param name="buffers" type="List<ModelByteBuffer>"/>
                </params>
                <scope line="246">
                    <scope line="247">
                        <scope line="248">
                            <scope line="249">
                                <declaration name="w" type="ModelByteBufferWavetable" line="250"/>
                                <declaration name="buff" type="ModelByteBuffer" line="251"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="loadSamples" type="boolean" line="263">
                <params>
                    <param name="instruments" type="List<ModelInstrument>"/>
                </params>
                <declaration name="buffers" type="List&lt;ModelByteBuffer&gt;" line="266"/>
                <scope line="269"/>
                <scope line="271"/>
            </method>
            <method name="loadInstruments" type="boolean" line="277">
                <params>
                    <param name="instruments" type="List<ModelInstrument>"/>
                </params>
                <scope line="283">
                    <scope line="286"/>
                    <scope line="290">
                        <declaration name="pat" type="String" line="291"/>
                        <declaration name="softins" type="SoftInstrument" line="292"/>
                    </scope>
                </scope>
            </method>
            <method name="processPropertyInfo" type="void" line="302">
                <params>
                    <param name="info" type="Map<String,Object>"/>
                </params>
                <declaration name="items" type="AudioSynthesizerPropertyInfo[]" line="303"/>
                <declaration name="resamplerType" type="String" line="305"/>
                <scope line="307"/>
                <scope line="312"/>
                <scope line="317"/>
                <scope line="322"/>
                <scope line="327"/>
                <scope line="332"/>
                <scope line="337"/>
            </method>
            <method name="patchToString" type="String" line="357">
                <params>
                    <param name="patch" type="Patch"/>
                </params>
            </method>
            <method name="setFormat" type="void" line="364">
                <params>
                    <param name="format" type="AudioFormat"/>
                </params>
                <scope line="365"/>
            </method>
            <method name="removeReceiver" type="void" line="374">
                <params>
                    <param name="recv" type="Receiver"/>
                </params>
                <declaration name="perform_close" type="boolean" line="375"/>
                <scope line="376">
                    <scope line="377"/>
                </scope>
            </method>
            <method name="getMainMixer" type="SoftMainMixer" line="386"/>
            <method name="findInstrument" type="SoftInstrument" line="392">
                <params>
                    <param name="program" type="int"/>
                    <param name="bank" type="int"/>
                    <param name="channel" type="int"/>
                </params>
                <comment line="394">
                    Add support for GM2 banks 0x78 and 0x79                    
                </comment>
                <comment line="395">
                    as specified in DLS 2.2 in Section 1.4.6                    
                </comment>
                <comment line="396">
                    which allows using percussion and melodic instruments                    
                </comment>
                <comment line="397">
                    on all channels                    
                </comment>
                <comment line="410">
                    Instrument not found fallback to MSB:bank, LSB:0                    
                </comment>
                <comment line="415">
                    Instrument not found fallback to MSB:0, LSB:bank                    
                </comment>
                <comment line="420">
                    Instrument not found fallback to MSB:0, LSB:0                    
                </comment>
                <comment line="424">
                    Instrument not found fallback to MSB:0, LSB:0, program=0                    
                </comment>
                <comment line="431">
                    Channel 10 uses percussion instruments                    
                </comment>
                <comment line="442">
                    Instrument not found fallback to MSB:0, LSB:0                    
                </comment>
                <comment line="446">
                    Instrument not found fallback to MSB:0, LSB:0, program=0                    
                </comment>
                <scope line="398">
                    <declaration name="current_instrument" type="SoftInstrument" line="399"/>
                    <declaration name="p_plaf" type="String" line="404"/>
                </scope>
                <declaration name="p_plaf" type="String" line="432"/>
                <declaration name="current_instrument" type="SoftInstrument" line="438"/>
            </method>
            <method name="getVoiceAllocationMode" type="int" line="453"/>
            <method name="getGeneralMidiMode" type="int" line="457"/>
            <method name="setGeneralMidiMode" type="void" line="461">
                <params>
                    <param name="gmmode" type="int"/>
                </params>
            </method>
            <method name="getDeviceID" type="int" line="465"/>
            <method name="getControlRate" type="float" line="469"/>
            <method name="getVoices" type="SoftVoice[]" line="473"/>
            <method name="getTuning" type="SoftTuning" line="477">
                <params>
                    <param name="patch" type="Patch"/>
                </params>
                <declaration name="t_id" type="String" line="478"/>
                <declaration name="tuning" type="SoftTuning" line="479"/>
                <scope line="480"/>
            </method>
            <method name="getLatency" type="long" line="487">
                <scope line="488"/>
            </method>
            <method name="getFormat" type="AudioFormat" line="493">
                <scope line="494"/>
            </method>
            <method name="getMaxPolyphony" type="int" line="499">
                <scope line="500"/>
            </method>
            <method name="getChannels" type="MidiChannel[]" line="505">
                <comment line="508">
                    if (external_channels == null) =&gt; the synthesizer is not open,                    
                </comment>
                <comment line="509">
                    create 16 proxy channels                    
                </comment>
                <comment line="510">
                    otherwise external_channels has the same length as channels array                    
                </comment>
                <scope line="507">
                    <scope line="511"/>
                    <declaration name="ret" type="MidiChannel[]" line="516"/>
                </scope>
            </method>
            <method name="getVoiceStatus" type="VoiceStatus[]" line="527">
                <scope line="528">
                    <declaration name="tempVoiceStatusArray" type="VoiceStatus[]" line="529"/>
                    <scope line="531">
                        <declaration name="b" type="VoiceStatus" line="532"/>
                    </scope>
                </scope>
                <scope line="544">
                    <declaration name="tempVoiceStatusArray" type="VoiceStatus[]" line="545"/>
                    <scope line="546">
                        <declaration name="a" type="VoiceStatus" line="547"/>
                        <declaration name="b" type="VoiceStatus" line="548"/>
                    </scope>
                </scope>
            </method>
            <method name="isSoundbankSupported" type="boolean" line="561">
                <params>
                    <param name="soundbank" type="Soundbank"/>
                </params>
            </method>
            <method name="loadInstrument" type="boolean" line="568">
                <params>
                    <param name="instrument" type="Instrument"/>
                </params>
                <scope line="569"/>
                <declaration name="instruments" type="List&lt;ModelInstrument&gt;" line="573"/>
            </method>
            <method name="unloadInstrument" type="void" line="578">
                <params>
                    <param name="instrument" type="Instrument"/>
                </params>
                <scope line="579"/>
                <declaration name="pat" type="String" line="586"/>
                <scope line="587">
                    <scope line="592"/>
                </scope>
            </method>
            <method name="remapInstrument" type="boolean" line="598">
                <params>
                    <param name="from" type="Instrument"/>
                    <param name="to" type="Instrument"/>
                </params>
                <scope line="604"/>
                <scope line="608"/>
                <scope line="615">
                    <declaration name="mfrom" type="ModelMappedInstrument" line="619"/>
                </scope>
            </method>
            <method name="getDefaultSoundbank" type="Soundbank" line="625">
                <comment line="687">
                    Try to load saved generated soundbank                    
                </comment>
                <comment line="723">
                    Generate emergency soundbank                    
                </comment>
                <comment line="731">
                    Save generated soundbank to disk for faster future use.                    
                </comment>
                <scope line="626">
                    <declaration name="actions" type="List&lt;PrivilegedAction&lt;InputStream&gt;&gt;" line="630"/>
                    <anonymous_class line="633">
                        <method name="run" type="InputStream" line="634">
                            <declaration name="javahome" type="File" line="635"/>
                            <declaration name="libaudio" type="File" line="637"/>
                            <scope line="638">
                                <declaration name="foundfile" type="File" line="639"/>
                                <declaration name="files" type="File[]" line="640"/>
                                <scope line="641">
                                    <scope line="642">
                                        <declaration name="file" type="File" line="643"/>
                                        <scope line="644">
                                            <declaration name="lname" type="String" line="645"/>
                                            <scope line="647">
                                                <scope line="650"/>
                                            </scope>
                                        </scope>
                                    </scope>
                                </scope>
                                <scope line="657">
                                    <scope line="658"/>
                                    <scope line="660"/>
                                </scope>
                            </scope>
                        </method>
                    </anonymous_class>
                    <anonymous_class line="668">
                        <method name="run" type="InputStream" line="669">
                            <scope line="671">
                                <declaration name="gm_dls" type="File" line="672"/>
                                <scope line="674">
                                    <scope line="675"/>
                                    <scope line="677"/>
                                </scope>
                            </scope>
                        </method>
                    </anonymous_class>
                    <anonymous_class line="685">
                        <method name="run" type="InputStream" line="686">
                            <comment line="687">
                                Try to load saved generated soundbank                                
                            </comment>
                            <declaration name="userhome" type="File" line="690"/>
                            <declaration name="emg_soundbank_file" type="File" line="692"/>
                            <scope line="694">
                                <scope line="695"/>
                                <scope line="697"/>
                            </scope>
                        </method>
                    </anonymous_class>
                    <scope line="704">
                        <scope line="705">
                            <declaration name="is" type="InputStream" line="706"/>
                            <declaration name="sbk" type="Soundbank" line="708"/>
                            <scope line="709"/>
                            <scope line="711"/>
                            <scope line="714"/>
                        </scope>
                        <scope line="718"/>
                    </scope>
                    <scope line="722"/>
                    <scope line="727"/>
                    <scope line="730">
                        <anonymous_class line="735">
                            <method name="run" type="OutputStream" line="736">
                                <scope line="737">
                                    <declaration name="userhome" type="File" line="738"/>
                                    <declaration name="emg_soundbank_file" type="File" line="743"/>
                                </scope>
                                <scope line="749"/>
                                <scope line="750"/>
                            </method>
                        </anonymous_class>
                        <declaration name="out" type="OutputStream" line="734"/>
                        <scope line="755">
                            <scope line="756"/>
                            <scope line="759"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="getAvailableInstruments" type="Instrument[]" line="767">
                <declaration name="defsbk" type="Soundbank" line="768"/>
                <declaration name="inslist_array" type="Instrument[]" line="771"/>
            </method>
            <method name="getLoadedInstruments" type="Instrument[]" line="776">
                <scope line="780">
                    <declaration name="inslist_array" type="ModelInstrument[]" line="781"/>
                </scope>
            </method>
            <method name="loadAllInstruments" type="boolean" line="789">
                <params>
                    <param name="soundbank" type="Soundbank"/>
                </params>
                <declaration name="instruments" type="List&lt;ModelInstrument&gt;" line="790"/>
                <scope line="791">
                    <scope line="792"/>
                </scope>
            </method>
            <method name="unloadAllInstruments" type="void" line="801">
                <params>
                    <param name="soundbank" type="Soundbank"/>
                </params>
                <scope line="808">
                    <scope line="809"/>
                </scope>
            </method>
            <method name="loadInstruments" type="boolean" line="815">
                <params>
                    <param name="soundbank" type="Soundbank"/>
                    <param name="patchList" type="Patch[]"/>
                </params>
                <declaration name="instruments" type="List&lt;ModelInstrument&gt;" line="816"/>
                <scope line="817">
                    <declaration name="ins" type="Instrument" line="818"/>
                    <scope line="819"/>
                </scope>
            </method>
            <method name="unloadInstruments" type="void" line="828">
                <params>
                    <param name="soundbank" type="Soundbank"/>
                    <param name="patchList" type="Patch[]"/>
                </params>
                <scope line="835">
                    <declaration name="ins" type="Instrument" line="836"/>
                    <scope line="837"/>
                </scope>
            </method>
            <method name="getDeviceInfo" type="MidiDevice.Info" line="843"/>
            <method name="getStoredProperties" type="Properties" line="847">
                <anonymous_class line="849">
                    <method name="run" type="Properties" line="850">
                        <declaration name="p" type="Properties" line="851"/>
                        <declaration name="notePath" type="String" line="852"/>
                        <scope line="853">
                            <declaration name="prefroot" type="Preferences" line="854"/>
                            <scope line="855">
                                <declaration name="prefs" type="Preferences" line="856"/>
                                <declaration name="prefs_keys" type="String[]" line="857"/>
                                <scope line="858">
                                    <declaration name="val" type="String" line="859"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="864"/>
                        <scope line="865"/>
                    </method>
                </anonymous_class>
            </method>
            <method name="getPropertyInfo" type="AudioSynthesizerPropertyInfo[]" line="872">
                <params>
                    <param name="info" type="Map<String,Object>"/>
                </params>
                <comment line="878">
                    If info != null or synthesizer is closed                    
                </comment>
                <comment line="879">
                    we return how the synthesizer will be set on next open                    
                </comment>
                <comment line="880">
                    If info == null and synthesizer is open                    
                </comment>
                <comment line="881">
                    we return current synthesizer properties.                    
                </comment>
                <declaration name="list" type="List&lt;AudioSynthesizerPropertyInfo&gt;" line="873"/>
                <declaration name="item" type="AudioSynthesizerPropertyInfo" line="876"/>
                <declaration name="o" type="boolean" line="882"/>
                <declaration name="items" type="AudioSynthesizerPropertyInfo[]" line="943"/>
                <declaration name="storedProperties" type="Properties" line="946"/>
                <scope line="948">
                    <declaration name="v" type="Object" line="949"/>
                    <scope line="951">
                        <declaration name="c" type="Class" line="952"/>
                        <scope line="955">
                            <declaration name="s" type="String" line="956"/>
                            <scope line="957"/>
                            <scope line="962">
                                <declaration name="channels" type="int" line="963"/>
                                <declaration name="signed" type="boolean" line="964"/>
                                <declaration name="bigendian" type="boolean" line="965"/>
                                <declaration name="bits" type="int" line="966"/>
                                <declaration name="sampleRate" type="float" line="967"/>
                                <scope line="968">
                                    <declaration name="st" type="StringTokenizer" line="969"/>
                                    <declaration name="prevToken" type="String" line="970"/>
                                    <scope line="971">
                                        <declaration name="token" type="String" line="972"/>
                                    </scope>
                                </scope>
                                <scope line="989"/>
                            </scope>
                            <scope line="993"/>
                            <scope line="1006"/>
                        </scope>
                        <scope line="1008">
                            <declaration name="n" type="Number" line="1009"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="open" type="void" line="1029">
                <scope line="1030">
                    <scope line="1031"/>
                </scope>
            </method>
            <method name="open" type="void" line="1039">
                <params>
                    <param name="line" type="SourceDataLine"/>
                    <param name="info" type="Map<String,Object>"/>
                </params>
                <comment line="1050">
                    can throw IllegalArgumentException                    
                </comment>
                <comment line="1064">
                    can throw LineUnavailableException,                    
                </comment>
                <comment line="1065">
                    IllegalArgumentException, SecurityException                    
                </comment>
                <comment line="1075">
                    can throw LineUnavailableException,                    
                </comment>
                <comment line="1076">
                    IllegalArgumentException, SecurityException                    
                </comment>
                <comment line="1079">
                    Remember that we opened that line                    
                </comment>
                <comment line="1080">
                    so we can close again in SoftSynthesizer.close()                    
                </comment>
                <comment line="1092">
                    Tell mixer not fill read buffers fully.                    
                </comment>
                <comment line="1093">
                    This lowers latency, and tells DataPusher                    
                </comment>
                <comment line="1094">
                    to read in smaller amounts.                    
                </comment>
                <comment line="1095">
                    mainmixer.readfully = false;                    
                </comment>
                <comment line="1096">
                    pusher = new DataPusher(line, ais);                    
                </comment>
                <comment line="1131">
                    am: need MidiUnavailableException(Throwable) ctor!                    
                </comment>
                <scope line="1040">
                    <scope line="1041"/>
                </scope>
                <scope line="1046">
                    <declaration name="causeException" type="Throwable" line="1047"/>
                    <scope line="1048">
                        <scope line="1049"/>
                        <declaration name="ais" type="AudioInputStream" line="1054"/>
                        <scope line="1060">
                            <scope line="1061"/>
                            <scope line="1063"/>
                        </scope>
                        <declaration name="latency" type="double" line="1070"/>
                        <scope line="1072">
                            <declaration name="bufferSize" type="int" line="1073"/>
                        </scope>
                        <declaration name="controlbuffersize" type="int" line="1086"/>
                        <scope line="1087"/>
                        <scope line="1089"/>
                        <declaration name="buffersize" type="int" line="1098"/>
                        <scope line="1104"/>
                        <scope line="1115"/>
                    </scope>
                    <scope line="1120"/>
                    <scope line="1122"/>
                    <scope line="1124"/>
                    <scope line="1128">
                        <declaration name="ex" type="MidiUnavailableException" line="1132"/>
                    </scope>
                </scope>
            </method>
            <method name="openStream" type="AudioInputStream" line="1142">
                <params>
                    <param name="targetFormat" type="AudioFormat"/>
                    <param name="info" type="Map<String,Object>"/>
                </params>
                <comment line="1179">
                    Always create external_channels array                    
                </comment>
                <comment line="1180">
                    with 16 or more channels                    
                </comment>
                <comment line="1181">
                    so getChannels works correctly                    
                </comment>
                <comment line="1182">
                    when the synhtesizer is closed.                    
                </comment>
                <comment line="1190">
                    We must resize external_channels array                    
                </comment>
                <comment line="1191">
                    but we must also copy the old SoftChannelProxy                    
                </comment>
                <comment line="1192">
                    into the new one                    
                </comment>
                <scope line="1147">
                    <scope line="1161">
                        <declaration name="defbank" type="Soundbank" line="1162"/>
                        <scope line="1163"/>
                    </scope>
                    <scope line="1178"/>
                    <scope line="1189">
                        <scope line="1193">
                            <declaration name="new_external_channels" type="SoftChannelProxy[]" line="1194"/>
                            <scope line="1199"/>
                        </scope>
                    </scope>
                    <scope line="1211">
                        <declaration name="srecv" type="SoftReceiver" line="1212"/>
                    </scope>
                </scope>
            </method>
            <method name="close" type="void" line="1222">
                <comment line="1239">
                    Pusher must not be closed synchronized against control_mutex,                    
                </comment>
                <comment line="1240">
                    this may result in synchronized conflict between pusher                    
                </comment>
                <comment line="1241">
                    and current thread.                    
                </comment>
                <comment line="1247">
                    e.printStackTrace();                    
                </comment>
                <declaration name="pusher_to_be_closed" type="SoftAudioPusher" line="1227"/>
                <declaration name="pusher_stream_to_be_closed" type="AudioInputStream" line="1228"/>
                <scope line="1229">
                    <scope line="1230"/>
                </scope>
                <scope line="1238">
                    <scope line="1244"/>
                    <scope line="1246"/>
                </scope>
                <scope line="1251">
                    <scope line="1265"/>
                </scope>
            </method>
            <method name="isOpen" type="boolean" line="1280">
                <scope line="1281"/>
            </method>
            <method name="getMicrosecondPosition" type="long" line="1286">
                <scope line="1291"/>
            </method>
            <method name="getMaxReceivers" type="int" line="1296"/>
            <method name="getMaxTransmitters" type="int" line="1300"/>
            <method name="getReceiver" type="Receiver" line="1304">
                <scope line="1306">
                    <declaration name="receiver" type="SoftReceiver" line="1307"/>
                </scope>
            </method>
            <method name="getReceivers" type="List<Receiver>" line="1314">
                <scope line="1316">
                    <declaration name="recvs" type="ArrayList&lt;Receiver&gt;" line="1317"/>
                </scope>
            </method>
            <method name="getTransmitter" type="Transmitter" line="1323"/>
            <method name="getTransmitters" type="List<Transmitter>" line="1328"/>
            <method name="getReceiverReferenceCounting" type="Receiver" line="1334">
                <scope line="1336">
                    <scope line="1338"/>
                </scope>
            </method>
            <method name="getTransmitterReferenceCounting" type="Transmitter" line="1347"/>
        </class>
    </source>