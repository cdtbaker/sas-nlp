<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.io.File"/>
        <import package="java.io.FileInputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.net.URL"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.util.Stack"/>
        <import package="javax.sound.midi.Instrument"/>
        <import package="javax.sound.midi.Patch"/>
        <import package="javax.sound.midi.Soundbank"/>
        <import package="javax.sound.midi.SoundbankResource"/>
        <import package="javax.sound.sampled.AudioFormat"/>
        <import package="javax.sound.sampled.AudioInputStream"/>
        <import package="javax.sound.sampled.AudioSystem"/>
        <import package="javax.sound.sampled.AudioFormat.Encoding"/>
        <class name="DLSSoundbank" line="49">
            <comment line="297">
                Reading cdl-ck Chunk
                 &quot;cdl &quot; chunk can only appear inside : DLS,lart,lar2,rgn,rgn2                
            </comment>
            <implements interface="Soundbank"/>
            <javadoc line="49">
                A DLS Level 1 and Level 2 soundbank reader (from files/url/streams).                
                <author>
                    Karl Helgason                    
                </author>
            </javadoc>
            <class name="DLSID" line="56">
                <declaration name="i1" type="long" line="57"/>
                <declaration name="s1" type="int" line="58"/>
                <declaration name="s2" type="int" line="59"/>
                <declaration name="x1" type="int" line="60"/>
                <declaration name="x2" type="int" line="61"/>
                <declaration name="x3" type="int" line="62"/>
                <declaration name="x4" type="int" line="63"/>
                <declaration name="x5" type="int" line="64"/>
                <declaration name="x6" type="int" line="65"/>
                <declaration name="x7" type="int" line="66"/>
                <declaration name="x8" type="int" line="67"/>
                <method name="DLSID" type="constructor" line="69"/>
                <method name="DLSID" type="constructor" line="73">
                    <params>
                        <param name="i1" type="long"/>
                        <param name="s1" type="int"/>
                        <param name="s2" type="int"/>
                        <param name="x1" type="int"/>
                        <param name="x2" type="int"/>
                        <param name="x3" type="int"/>
                        <param name="x4" type="int"/>
                        <param name="x5" type="int"/>
                        <param name="x6" type="int"/>
                        <param name="x7" type="int"/>
                        <param name="x8" type="int"/>
                    </params>
                </method>
                <method name="read" type="DLSID" line="87">
                    <params>
                        <param name="riff" type="RIFFReader"/>
                    </params>
                    <declaration name="d" type="DLSID" line="88"/>
                </method>
                <method name="hashCode" type="int" line="103"/>
                <method name="equals" type="boolean" line="107">
                    <params>
                        <param name="obj" type="Object"/>
                    </params>
                    <scope line="108"/>
                    <declaration name="t" type="DLSID" line="111"/>
                </method>
            </class>
            <declaration name="DLS_CDL_AND" type="int" line="118"/>
            <javadoc line="118">
                X = X &amp; Y                
            </javadoc>
            <declaration name="DLS_CDL_OR" type="int" line="120"/>
            <javadoc line="120">
                X = X | Y                
            </javadoc>
            <declaration name="DLS_CDL_XOR" type="int" line="122"/>
            <javadoc line="122">
                X = X ^ Y                
            </javadoc>
            <declaration name="DLS_CDL_ADD" type="int" line="124"/>
            <javadoc line="124">
                X = X + Y                
            </javadoc>
            <declaration name="DLS_CDL_SUBTRACT" type="int" line="126"/>
            <javadoc line="126">
                X = X - Y                
            </javadoc>
            <declaration name="DLS_CDL_MULTIPLY" type="int" line="128"/>
            <javadoc line="128">
                X = X  Y                
            </javadoc>
            <declaration name="DLS_CDL_DIVIDE" type="int" line="130"/>
            <javadoc line="130">
                X = X / Y                
            </javadoc>
            <declaration name="DLS_CDL_LOGICAL_AND" type="int" line="132"/>
            <javadoc line="132">
                X = X &amp;&amp; Y                
            </javadoc>
            <declaration name="DLS_CDL_LOGICAL_OR" type="int" line="134"/>
            <javadoc line="134">
                X = X || Y                
            </javadoc>
            <declaration name="DLS_CDL_LT" type="int" line="136"/>
            <javadoc line="136">
                X = (X &lt; Y)                
            </javadoc>
            <declaration name="DLS_CDL_LE" type="int" line="138"/>
            <javadoc line="138">
                X = (X &lt;= Y)                
            </javadoc>
            <declaration name="DLS_CDL_GT" type="int" line="140"/>
            <javadoc line="140">
                X = (X &gt; Y)                
            </javadoc>
            <declaration name="DLS_CDL_GE" type="int" line="142"/>
            <javadoc line="142">
                X = (X &gt;= Y)                
            </javadoc>
            <declaration name="DLS_CDL_EQ" type="int" line="144"/>
            <javadoc line="144">
                X = (X == Y)                
            </javadoc>
            <declaration name="DLS_CDL_NOT" type="int" line="146"/>
            <javadoc line="146">
                X = !X                
            </javadoc>
            <declaration name="DLS_CDL_CONST" type="int" line="148"/>
            <javadoc line="148">
                32-bit constant                
            </javadoc>
            <declaration name="DLS_CDL_QUERY" type="int" line="150"/>
            <javadoc line="150">
                32-bit value returned from query                
            </javadoc>
            <declaration name="DLS_CDL_QUERYSUPPORTED" type="int" line="152"/>
            <javadoc line="152">
                32-bit value returned from query                
            </javadoc>
            <declaration name="DLSID_GMInHardware" type="DLSID" line="155"/>
            <declaration name="DLSID_GSInHardware" type="DLSID" line="157"/>
            <declaration name="DLSID_XGInHardware" type="DLSID" line="159"/>
            <declaration name="DLSID_SupportsDLS1" type="DLSID" line="161"/>
            <declaration name="DLSID_SupportsDLS2" type="DLSID" line="163"/>
            <declaration name="DLSID_SampleMemorySize" type="DLSID" line="165"/>
            <declaration name="DLSID_ManufacturersID" type="DLSID" line="167"/>
            <declaration name="DLSID_ProductID" type="DLSID" line="169"/>
            <declaration name="DLSID_SamplePlaybackRate" type="DLSID" line="171"/>
            <declaration name="major" type="long" line="174"/>
            <declaration name="minor" type="long" line="175"/>
            <declaration name="info" type="DLSInfo" line="177"/>
            <declaration name="instruments" type="List&lt;DLSInstrument&gt;" line="179"/>
            <declaration name="samples" type="List&lt;DLSSample&gt;" line="180"/>
            <declaration name="largeFormat" type="boolean" line="182"/>
            <declaration name="sampleFile" type="File" line="183"/>
            <method name="DLSSoundbank" type="constructor" line="185"/>
            <method name="DLSSoundbank" type="constructor" line="188">
                <params>
                    <param name="url" type="URL"/>
                </params>
                <declaration name="is" type="InputStream" line="189"/>
                <scope line="190"/>
                <scope line="192"/>
            </method>
            <method name="DLSSoundbank" type="constructor" line="197">
                <params>
                    <param name="file" type="File"/>
                </params>
                <declaration name="is" type="InputStream" line="200"/>
                <scope line="201"/>
                <scope line="203"/>
            </method>
            <method name="DLSSoundbank" type="constructor" line="208">
                <params>
                    <param name="inputstream" type="InputStream"/>
                </params>
            </method>
            <method name="readSoundbank" type="void" line="212">
                <params>
                    <param name="inputstream" type="InputStream"/>
                </params>
                <comment line="240">
                    skipped because we will load the entire bank into memory
                     long instrumentcount = chunk.readUnsignedInt();
                     System.out.println(&quot;instrumentcount = &quot;+ instrumentcount);                    
                </comment>
                <comment line="245">
                    Pool Table Chunk
                     skipped because we will load the entire bank into memory                    
                </comment>
                <declaration name="riff" type="RIFFReader" line="213"/>
                <scope line="214"/>
                <scope line="218"/>
                <scope line="222">
                    <declaration name="chunk" type="RIFFReader" line="223"/>
                    <scope line="224"/>
                    <scope line="231">
                        <scope line="232">
                            <scope line="233"/>
                        </scope>
                        <scope line="238"/>
                        <scope line="243"/>
                        <scope line="247"/>
                    </scope>
                </scope>
                <scope line="254"/>
            </method>
            <method name="cdlIsQuerySupported" type="boolean" line="261">
                <params>
                    <param name="uuid" type="DLSID"/>
                </params>
            </method>
            <method name="cdlQuery" type="long" line="273">
                <params>
                    <param name="uuid" type="DLSID"/>
                </params>
            </method>
            <method name="readCdlChunk" type="boolean" line="298">
                <params>
                    <param name="riff" type="RIFFReader"/>
                </params>
                <declaration name="uuid" type="DLSID" line="300"/>
                <declaration name="x" type="long" line="301"/>
                <declaration name="y" type="long" line="302"/>
                <declaration name="stack" type="Stack&lt;Long&gt;" line="303"/>
                <scope line="305">
                    <declaration name="opcode" type="int" line="306"/>
                </scope>
            </method>
            <method name="readInfoChunk" type="void" line="404">
                <params>
                    <param name="riff" type="RIFFReader"/>
                </params>
                <scope line="406">
                    <declaration name="chunk" type="RIFFReader" line="407"/>
                    <declaration name="format" type="String" line="408"/>
                </scope>
            </method>
            <method name="readLinsChunk" type="void" line="446">
                <params>
                    <param name="riff" type="RIFFReader"/>
                </params>
                <scope line="447">
                    <declaration name="chunk" type="RIFFReader" line="448"/>
                    <scope line="449"/>
                </scope>
            </method>
            <method name="readInsChunk" type="void" line="456">
                <params>
                    <param name="riff" type="RIFFReader"/>
                </params>
                <comment line="477">
                    support for DLS level 2 regions                    
                </comment>
                <comment line="501">
                    support for DLS level 2 ART                    
                </comment>
                <comment line="522">
                    Read Region Count - ignored                    
                </comment>
                <comment line="524">
                    LSB                    
                </comment>
                <comment line="525">
                    MSB                    
                </comment>
                <comment line="526">
                    Read Reserved byte                    
                </comment>
                <comment line="527">
                    Drum Instrument                    
                </comment>
                <comment line="529">
                    Read only first 7 bits                    
                </comment>
                <comment line="530">
                    Read Reserved byte                    
                </comment>
                <comment line="531">
                    Read Reserved byte                    
                </comment>
                <comment line="532">
                    Read Reserved byte                    
                </comment>
                <comment line="537">
                    System.out.println(&quot;bank=&quot;+bank+&quot; drumkit=&quot;+drumkit
                            +&quot; id=&quot;+id);                    
                </comment>
                <declaration name="instrument" type="DLSInstrument" line="457"/>
                <scope line="459">
                    <declaration name="chunk" type="RIFFReader" line="460"/>
                    <declaration name="format" type="String" line="461"/>
                    <scope line="462">
                        <scope line="463"/>
                        <scope line="466">
                            <scope line="467">
                                <declaration name="subchunk" type="RIFFReader" line="468"/>
                                <scope line="469">
                                    <scope line="470">
                                        <declaration name="split" type="DLSRegion" line="471"/>
                                    </scope>
                                    <scope line="475">
                                        <declaration name="split" type="DLSRegion" line="477"/>
                                    </scope>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="484">
                            <declaration name="modlist" type="List&lt;DLSModulator&gt;" line="485"/>
                            <scope line="486">
                                <declaration name="subchunk" type="RIFFReader" line="487"/>
                                <scope line="488">
                                    <scope line="489"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="499">
                            <declaration name="modlist" type="List&lt;DLSModulator&gt;" line="501"/>
                            <scope line="502">
                                <declaration name="subchunk" type="RIFFReader" line="503"/>
                                <scope line="504">
                                    <scope line="505"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="515">
                        <scope line="516"/>
                        <scope line="520">
                            <declaration name="bank" type="int" line="523"/>
                            <declaration name="drumins" type="int" line="526"/>
                            <declaration name="id" type="int" line="528"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="readArt1Chunk" type="void" line="546">
                <params>
                    <param name="modulators" type="List<DLSModulator>"/>
                    <param name="riff" type="RIFFReader"/>
                </params>
                <declaration name="size" type="long" line="547"/>
                <declaration name="count" type="long" line="548"/>
                <scope line="553">
                    <declaration name="modulator" type="DLSModulator" line="554"/>
                </scope>
            </method>
            <method name="readArt2Chunk" type="void" line="566">
                <params>
                    <param name="modulators" type="List<DLSModulator>"/>
                    <param name="riff" type="RIFFReader"/>
                </params>
                <declaration name="size" type="long" line="567"/>
                <declaration name="count" type="long" line="568"/>
                <scope line="573">
                    <declaration name="modulator" type="DLSModulator" line="574"/>
                </scope>
            </method>
            <declaration name="temp_rgnassign" type="Map&lt;DLSRegion,Long&gt;" line="585"/>
            <method name="readRgnChunk" type="boolean" line="588">
                <params>
                    <param name="split" type="DLSRegion"/>
                    <param name="riff" type="RIFFReader"/>
                </params>
                <comment line="610">
                    support for DLS level 2 ART                    
                </comment>
                <scope line="589">
                    <declaration name="chunk" type="RIFFReader" line="590"/>
                    <declaration name="format" type="String" line="591"/>
                    <scope line="592">
                        <scope line="593">
                            <declaration name="modlist" type="List&lt;DLSModulator&gt;" line="594"/>
                            <scope line="595">
                                <declaration name="subchunk" type="RIFFReader" line="596"/>
                                <scope line="597">
                                    <scope line="598"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="608">
                            <declaration name="modlist" type="List&lt;DLSModulator&gt;" line="610"/>
                            <scope line="611">
                                <declaration name="subchunk" type="RIFFReader" line="612"/>
                                <scope line="613">
                                    <scope line="614"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="624">
                        <scope line="626"/>
                        <scope line="630"/>
                        <scope line="638">
                            <declaration name="sampleid" type="long" line="642"/>
                        </scope>
                        <scope line="645"/>
                    </scope>
                </scope>
            </method>
            <method name="readWsmpChunk" type="void" line="655">
                <params>
                    <param name="sampleOptions" type="DLSSampleOptions"/>
                    <param name="riff" type="RIFFReader"/>
                </params>
                <declaration name="size" type="long" line="656"/>
                <declaration name="loops" type="long" line="661"/>
                <scope line="666">
                    <declaration name="loop" type="DLSSampleLoop" line="667"/>
                    <declaration name="size2" type="long" line="668"/>
                </scope>
            </method>
            <method name="readInsInfoChunk" type="void" line="679">
                <params>
                    <param name="dlsinstrument" type="DLSInstrument"/>
                    <param name="riff" type="RIFFReader"/>
                </params>
                <scope line="681">
                    <declaration name="chunk" type="RIFFReader" line="682"/>
                    <declaration name="format" type="String" line="683"/>
                    <scope line="684"/>
                    <scope line="686"/>
                    <scope line="689"/>
                    <scope line="692"/>
                    <scope line="694"/>
                    <scope line="697"/>
                    <scope line="700"/>
                    <scope line="702"/>
                    <scope line="705"/>
                    <scope line="707"/>
                    <scope line="710"/>
                    <scope line="712"/>
                    <scope line="715"/>
                    <scope line="717"/>
                    <scope line="719"/>
                    <scope line="721"/>
                    <scope line="724"/>
                </scope>
            </method>
            <method name="readWvplChunk" type="void" line="731">
                <params>
                    <param name="riff" type="RIFFReader"/>
                </params>
                <scope line="732">
                    <declaration name="chunk" type="RIFFReader" line="733"/>
                    <scope line="734"/>
                </scope>
            </method>
            <method name="readWaveChunk" type="void" line="741">
                <params>
                    <param name="riff" type="RIFFReader"/>
                </params>
                <comment line="766">
                    bytes per sec                    
                </comment>
                <comment line="767">
                                        
                </comment>
                <comment line="768">
                    block align, framesize                    
                </comment>
                <comment line="798">
                    chunk.read(buffer);                    
                </comment>
                <declaration name="sample" type="DLSSample" line="742"/>
                <scope line="744">
                    <declaration name="chunk" type="RIFFReader" line="745"/>
                    <declaration name="format" type="String" line="746"/>
                    <scope line="747">
                        <scope line="748"/>
                    </scope>
                    <scope line="751">
                        <scope line="752"/>
                        <scope line="757">
                            <declaration name="sampleformat" type="int" line="758"/>
                            <scope line="759"/>
                            <declaration name="channels" type="int" line="763"/>
                            <declaration name="samplerate" type="long" line="764"/>
                            <declaration name="framesize" type="int" line="768"/>
                            <declaration name="bits" type="int" line="769"/>
                            <declaration name="audioformat" type="AudioFormat" line="770"/>
                            <scope line="771">
                                <scope line="772"/>
                                <scope line="776"/>
                            </scope>
                            <scope line="782"/>
                        </scope>
                        <scope line="791">
                            <scope line="792"/>
                            <scope line="795">
                                <declaration name="buffer" type="byte[]" line="796"/>
                                <declaration name="read" type="int" line="800"/>
                                <declaration name="avail" type="int" line="801"/>
                                <scope line="802">
                                    <scope line="803"/>
                                    <scope line="806"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="814"/>
                    </scope>
                </scope>
            </method>
            <method name="readWaveInfoChunk" type="void" line="826">
                <params>
                    <param name="dlssample" type="DLSSample"/>
                    <param name="riff" type="RIFFReader"/>
                </params>
                <scope line="828">
                    <declaration name="chunk" type="RIFFReader" line="829"/>
                    <declaration name="format" type="String" line="830"/>
                    <scope line="831"/>
                    <scope line="833"/>
                    <scope line="836"/>
                    <scope line="838"/>
                    <scope line="840"/>
                    <scope line="842"/>
                    <scope line="844"/>
                    <scope line="846"/>
                    <scope line="849"/>
                    <scope line="851"/>
                    <scope line="854"/>
                    <scope line="856"/>
                    <scope line="858"/>
                    <scope line="860"/>
                    <scope line="862"/>
                    <scope line="864"/>
                    <scope line="866"/>
                </scope>
            </method>
            <method name="save" type="void" line="872">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="save" type="void" line="876">
                <params>
                    <param name="file" type="File"/>
                </params>
            </method>
            <method name="save" type="void" line="880">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
            </method>
            <method name="writeSoundbank" type="void" line="884">
                <params>
                    <param name="writer" type="RIFFWriter"/>
                </params>
                <comment line="912">
                    small cheat, we are going to rewrite data back in wvpl                    
                </comment>
                <declaration name="colh_chunk" type="RIFFWriter" line="885"/>
                <scope line="888">
                    <declaration name="vers_chunk" type="RIFFWriter" line="889"/>
                </scope>
                <declaration name="ptbl" type="RIFFWriter" line="896"/>
                <declaration name="ptbl_offset" type="long" line="899"/>
                <declaration name="wvpl" type="RIFFWriter" line="903"/>
                <declaration name="off" type="long" line="904"/>
                <declaration name="offsettable" type="List&lt;Long&gt;" line="905"/>
                <scope line="906"/>
                <declaration name="bak" type="long" line="912"/>
            </method>
            <method name="writeSample" type="void" line="926">
                <params>
                    <param name="writer" type="RIFFWriter"/>
                    <param name="sample" type="DLSSample"/>
                </params>
                <comment line="962">
                    fmt                    
                </comment>
                <comment line="997">
                    data_chunk.write(databuff.array(),
                    databuff.arrayOffset(),
                    databuff.capacity());                    
                </comment>
                <declaration name="audioformat" type="AudioFormat" line="928"/>
                <declaration name="encoding" type="Encoding" line="930"/>
                <declaration name="sampleRate" type="float" line="931"/>
                <declaration name="sampleSizeInBits" type="int" line="932"/>
                <declaration name="channels" type="int" line="933"/>
                <declaration name="frameSize" type="int" line="934"/>
                <declaration name="frameRate" type="float" line="935"/>
                <declaration name="bigEndian" type="boolean" line="936"/>
                <declaration name="convert_needed" type="boolean" line="938"/>
                <scope line="940">
                    <scope line="941"/>
                </scope>
                <scope line="945">
                    <scope line="946"/>
                    <scope line="950"/>
                </scope>
                <scope line="956"/>
                <declaration name="fmt_chunk" type="RIFFWriter" line="962"/>
                <declaration name="sampleformat" type="int" line="963"/>
                <declaration name="srate" type="long" line="974"/>
                <scope line="983">
                    <declaration name="data_chunk" type="RIFFWriter" line="984"/>
                    <declaration name="stream" type="AudioInputStream" line="985"/>
                    <declaration name="buff" type="byte[]" line="987"/>
                    <declaration name="ret" type="int" line="988"/>
                    <scope line="989"/>
                </scope>
                <scope line="992">
                    <declaration name="data_chunk" type="RIFFWriter" line="993"/>
                    <declaration name="databuff" type="ModelByteBuffer" line="994"/>
                </scope>
            </method>
            <method name="writeInstruments" type="void" line="1006">
                <params>
                    <param name="writer" type="RIFFWriter"/>
                </params>
                <scope line="1007"/>
            </method>
            <method name="writeInstrument" type="void" line="1013">
                <params>
                    <param name="writer" type="RIFFWriter"/>
                    <param name="instrument" type="DLSInstrument"/>
                </params>
                <declaration name="art1_count" type="int" line="1015"/>
                <declaration name="art2_count" type="int" line="1016"/>
                <scope line="1017"/>
                <scope line="1023">
                    <scope line="1024"/>
                </scope>
                <declaration name="version" type="int" line="1032"/>
                <declaration name="insh_chunk" type="RIFFWriter" line="1036"/>
                <declaration name="lrgn" type="RIFFWriter" line="1042"/>
            </method>
            <method name="writeArticulators" type="void" line="1053">
                <params>
                    <param name="writer" type="RIFFWriter"/>
                    <param name="modulators" type="List<DLSModulator>"/>
                </params>
                <declaration name="art1_count" type="int" line="1054"/>
                <declaration name="art2_count" type="int" line="1055"/>
                <scope line="1056"/>
                <scope line="1062">
                    <declaration name="lar1" type="RIFFWriter" line="1063"/>
                    <declaration name="art1" type="RIFFWriter" line="1064"/>
                    <scope line="1067">
                        <scope line="1068"/>
                    </scope>
                </scope>
                <scope line="1077">
                    <declaration name="lar2" type="RIFFWriter" line="1078"/>
                    <declaration name="art2" type="RIFFWriter" line="1079"/>
                    <scope line="1082">
                        <scope line="1083"/>
                    </scope>
                </scope>
            </method>
            <method name="writeRegion" type="void" line="1095">
                <params>
                    <param name="writer" type="RIFFWriter"/>
                    <param name="region" type="DLSRegion"/>
                    <param name="version" type="int"/>
                </params>
                <declaration name="rgns" type="RIFFWriter" line="1096"/>
                <declaration name="rgnh" type="RIFFWriter" line="1104"/>
                <scope line="1115">
                    <scope line="1116">
                        <declaration name="wlnk" type="RIFFWriter" line="1117"/>
                    </scope>
                </scope>
            </method>
            <method name="writeSampleOptions" type="void" line="1129">
                <params>
                    <param name="wsmp" type="RIFFWriter"/>
                    <param name="sampleoptions" type="DLSSampleOptions"/>
                </params>
                <scope line="1137"/>
            </method>
            <method name="writeInfoStringChunk" type="void" line="1146">
                <params>
                    <param name="writer" type="RIFFWriter"/>
                    <param name="name" type="String"/>
                    <param name="value" type="String"/>
                </params>
                <declaration name="chunk" type="RIFFWriter" line="1149"/>
                <declaration name="len" type="int" line="1151"/>
            </method>
            <method name="writeInfo" type="void" line="1158">
                <params>
                    <param name="writer" type="RIFFWriter"/>
                    <param name="info" type="DLSInfo"/>
                </params>
            </method>
            <method name="getInfo" type="DLSInfo" line="1178"/>
            <method name="getName" type="String" line="1182"/>
            <method name="getVersion" type="String" line="1186"/>
            <method name="getVendor" type="String" line="1190"/>
            <method name="getDescription" type="String" line="1194"/>
            <method name="setName" type="void" line="1198">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="setVendor" type="void" line="1202">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="setDescription" type="void" line="1206">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="getResources" type="SoundbankResource[]" line="1210">
                <declaration name="resources" type="SoundbankResource[]" line="1211"/>
                <declaration name="j" type="int" line="1212"/>
            </method>
            <method name="getInstruments" type="DLSInstrument[]" line="1218">
                <declaration name="inslist_array" type="DLSInstrument[]" line="1219"/>
            </method>
            <method name="getSamples" type="DLSSample[]" line="1225"/>
            <method name="getInstrument" type="Instrument" line="1229">
                <params>
                    <param name="patch" type="Patch"/>
                </params>
                <declaration name="program" type="int" line="1230"/>
                <declaration name="bank" type="int" line="1231"/>
                <declaration name="percussion" type="boolean" line="1232"/>
                <scope line="1235">
                    <declaration name="patch2" type="Patch" line="1236"/>
                    <declaration name="program2" type="int" line="1237"/>
                    <declaration name="bank2" type="int" line="1238"/>
                    <scope line="1239">
                        <declaration name="percussion2" type="boolean" line="1240"/>
                    </scope>
                </scope>
            </method>
            <method name="addResource" type="void" line="1250">
                <params>
                    <param name="resource" type="SoundbankResource"/>
                </params>
            </method>
            <method name="removeResource" type="void" line="1257">
                <params>
                    <param name="resource" type="SoundbankResource"/>
                </params>
            </method>
            <method name="addInstrument" type="void" line="1264">
                <params>
                    <param name="resource" type="DLSInstrument"/>
                </params>
            </method>
            <method name="removeInstrument" type="void" line="1268">
                <params>
                    <param name="resource" type="DLSInstrument"/>
                </params>
            </method>
            <method name="getMajor" type="long" line="1272"/>
            <method name="setMajor" type="void" line="1276">
                <params>
                    <param name="major" type="long"/>
                </params>
            </method>
            <method name="getMinor" type="long" line="1280"/>
            <method name="setMinor" type="void" line="1284">
                <params>
                    <param name="minor" type="long"/>
                </params>
            </method>
        </class>
    </source>