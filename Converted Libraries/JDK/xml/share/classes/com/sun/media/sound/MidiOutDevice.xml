<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="javax.sound.midi"/>
        <class name="MidiOutDevice" line="32">
            <extends class="AbstractMidiDevice"/>
            <comment line="42">
                CONSTRUCTOR                
            </comment>
            <comment line="50">
                IMPLEMENTATION OF ABSTRACT MIDI DEVICE METHODS                
            </comment>
            <comment line="87">
                OVERRIDES OF ABSTRACT MIDI DEVICE METHODS                
            </comment>
            <comment line="103">
                INNER CLASSES                
            </comment>
            <comment line="161">
                class MidiOutReceiver                
            </comment>
            <comment line="164">
                NATIVE METHODS                
            </comment>
            <javadoc line="32">
                MidiOutDevice class representing functionality of MidiOut devices.                
                <author>
                    David Rivas                    
                </author>
                <author>
                    Kara Kytle                    
                </author>
                <author>
                    Florian Bomers                    
                </author>
            </javadoc>
            <method name="MidiOutDevice" type="constructor" line="43">
                <params>
                    <param name="info" type="AbstractMidiDeviceProvider.Info"/>
                </params>
            </method>
            <method name="implOpen" type="void" line="51">
                <comment line="54">
                    can throw MidiUnavailableException                    
                </comment>
                <declaration name="index" type="int" line="53"/>
                <scope line="55"/>
            </method>
            <method name="implClose" type="void" line="62">
                <comment line="64">
                    prevent further action                    
                </comment>
                <comment line="70">
                    close the device                    
                </comment>
                <declaration name="oldId" type="long" line="65"/>
            </method>
            <method name="getMicrosecondPosition" type="long" line="76">
                <declaration name="timestamp" type="long" line="77"/>
                <scope line="78"/>
            </method>
            <javadoc line="88">
                Returns if this device supports Receivers.
                  This implementation always returns true.                
                <return>
                    true, if the device supports Receivers, false otherwise.                    
                </return>
            </javadoc>
            <method name="hasReceivers" type="boolean" line="92"/>
            <method name="createReceiver" type="Receiver" line="97"/>
            <class name="MidiOutReceiver" line="104">
                <extends class="AbstractReceiver"/>
                <method name="implSend" type="void" line="106">
                    <params>
                        <param name="message" type="MidiMessage"/>
                        <param name="timeStamp" type="long"/>
                    </params>
                    <comment line="126">
                        We handle meta messages here. The message
                        system reset (FF) doesn&apos;t get until here,
                        because it&apos;s length is only 1. So if we see
                        a status byte of FF, it&apos;s sure that we                        
                    </comment>
                    <declaration name="length" type="int" line="107"/>
                    <declaration name="status" type="int" line="108"/>
                    <scope line="109">
                        <declaration name="packedMsg" type="int" line="110"/>
                        <scope line="111">
                            <scope line="112"/>
                            <scope line="114">
                                <declaration name="msg" type="ShortMessage" line="115"/>
                            </scope>
                        </scope>
                        <scope line="120">
                            <declaration name="data" type="byte[]" line="122"/>
                            <scope line="123">
                                <scope line="125">
                                    <scope line="131"/>
                                    <scope line="135"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="142">
                        <scope line="143"/>
                        <scope line="146"/>
                    </scope>
                </method>
                <javadoc line="152">
                    shortcut for the Sun implementation                    
                </javadoc>
                <method name="sendPackedMidiMessage" type="void" line="153">
                    <params>
                        <param name="packedMsg" type="int"/>
                        <param name="timeStamp" type="long"/>
                    </params>
                    <scope line="154"/>
                </method>
            </class>
            <method name="nOpen" type="long" line="165"/>
            <method name="nClose" type="void" line="166"/>
            <method name="nSendShortMessage" type="void" line="168"/>
            <method name="nSendLongMessage" type="void" line="169"/>
            <method name="nGetTimeStamp" type="long" line="170"/>
        </class>
    </source>