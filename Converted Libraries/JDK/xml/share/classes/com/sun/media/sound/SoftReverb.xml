<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.util.Arrays"/>
        <class name="SoftReverb" line="29">
            <implements interface="SoftAudioProcessor"/>
            <javadoc line="29">
                Reverb effect based on allpass/comb filters. First audio is send to 8
                  parelled comb filters and then mixed together and then finally send thru 3
                  different allpass filters.                
                <author>
                    Karl Helgason                    
                </author>
            </javadoc>
            <class name="Delay" line="38">
                <declaration name="delaybuffer" type="float[]" line="40"/>
                <declaration name="rovepos" type="int" line="41"/>
                <method name="Delay" type="constructor" line="43"/>
                <method name="setDelay" type="void" line="47">
                    <params>
                        <param name="delay" type="int"/>
                    </params>
                </method>
                <method name="processReplace" type="void" line="55">
                    <params>
                        <param name="inout" type="float[]"/>
                    </params>
                    <declaration name="len" type="int" line="58"/>
                    <declaration name="rnlen" type="int" line="59"/>
                    <declaration name="rovepos" type="int" line="60"/>
                    <scope line="62">
                        <declaration name="x" type="float" line="63"/>
                    </scope>
                </method>
            </class>
            <class name="AllPass" line="73">
                <declaration name="delaybuffer" type="float[]" line="75"/>
                <declaration name="delaybuffersize" type="int" line="76"/>
                <declaration name="rovepos" type="int" line="77"/>
                <declaration name="feedback" type="float" line="78"/>
                <method name="AllPass" type="constructor" line="80">
                    <params>
                        <param name="size" type="int"/>
                    </params>
                </method>
                <method name="setFeedBack" type="void" line="85">
                    <params>
                        <param name="feedback" type="float"/>
                    </params>
                </method>
                <method name="processReplace" type="void" line="89">
                    <params>
                        <param name="inout" type="float"/>
                    </params>
                    <declaration name="len" type="int" line="90"/>
                    <declaration name="delaybuffersize" type="int" line="91"/>
                    <declaration name="rovepos" type="int" line="92"/>
                    <scope line="93">
                        <declaration name="delayout" type="float" line="94"/>
                        <declaration name="input" type="float" line="95"/>
                    </scope>
                </method>
                <method name="processReplace" type="void" line="104">
                    <params>
                        <param name="in" type="float"/>
                        <param name="out" type="float"/>
                    </params>
                    <declaration name="len" type="int" line="105"/>
                    <declaration name="delaybuffersize" type="int" line="106"/>
                    <declaration name="rovepos" type="int" line="107"/>
                    <scope line="108">
                        <declaration name="delayout" type="float" line="109"/>
                        <declaration name="input" type="float" line="110"/>
                    </scope>
                </method>
            </class>
            <class name="Comb" line="120">
                <declaration name="delaybuffer" type="float[]" line="122"/>
                <declaration name="delaybuffersize" type="int" line="123"/>
                <declaration name="rovepos" type="int" line="124"/>
                <declaration name="feedback" type="float" line="125"/>
                <declaration name="filtertemp" type="float" line="126"/>
                <declaration name="filtercoeff1" type="float" line="127"/>
                <declaration name="filtercoeff2" type="float" line="128"/>
                <method name="Comb" type="constructor" line="130">
                    <params>
                        <param name="size" type="int"/>
                    </params>
                </method>
                <method name="setFeedBack" type="void" line="135">
                    <params>
                        <param name="feedback" type="float"/>
                    </params>
                </method>
                <method name="processMix" type="void" line="140">
                    <params>
                        <param name="in" type="float"/>
                        <param name="out" type="float"/>
                    </params>
                    <comment line="149">
                        One Pole Lowpass Filter                        
                    </comment>
                    <declaration name="len" type="int" line="141"/>
                    <declaration name="delaybuffersize" type="int" line="142"/>
                    <declaration name="rovepos" type="int" line="143"/>
                    <declaration name="filtertemp" type="float" line="144"/>
                    <declaration name="filtercoeff1" type="float" line="145"/>
                    <declaration name="filtercoeff2" type="float" line="146"/>
                    <scope line="147">
                        <declaration name="delayout" type="float" line="148"/>
                    </scope>
                </method>
                <method name="processReplace" type="void" line="161">
                    <params>
                        <param name="in" type="float"/>
                        <param name="out" type="float"/>
                    </params>
                    <comment line="170">
                        One Pole Lowpass Filter                        
                    </comment>
                    <declaration name="len" type="int" line="162"/>
                    <declaration name="delaybuffersize" type="int" line="163"/>
                    <declaration name="rovepos" type="int" line="164"/>
                    <declaration name="filtertemp" type="float" line="165"/>
                    <declaration name="filtercoeff1" type="float" line="166"/>
                    <declaration name="filtercoeff2" type="float" line="167"/>
                    <scope line="168">
                        <declaration name="delayout" type="float" line="169"/>
                    </scope>
                </method>
                <method name="setDamp" type="void" line="182">
                    <params>
                        <param name="val" type="float"/>
                    </params>
                </method>
            </class>
            <declaration name="roomsize" type="float" line="187"/>
            <declaration name="damp" type="float" line="188"/>
            <declaration name="gain" type="float" line="189"/>
            <declaration name="delay" type="Delay" line="190"/>
            <declaration name="combL" type="Comb[]" line="191"/>
            <declaration name="combR" type="Comb[]" line="192"/>
            <declaration name="allpassL" type="AllPass[]" line="193"/>
            <declaration name="allpassR" type="AllPass[]" line="194"/>
            <declaration name="input" type="float[]" line="195"/>
            <declaration name="out" type="float[]" line="196"/>
            <declaration name="pre1" type="float[]" line="197"/>
            <declaration name="pre2" type="float[]" line="198"/>
            <declaration name="pre3" type="float[]" line="199"/>
            <declaration name="denormal_flip" type="boolean" line="200"/>
            <declaration name="mix" type="boolean" line="201"/>
            <declaration name="inputA" type="SoftAudioBuffer" line="202"/>
            <declaration name="left" type="SoftAudioBuffer" line="203"/>
            <declaration name="right" type="SoftAudioBuffer" line="204"/>
            <declaration name="dirty" type="boolean" line="205"/>
            <declaration name="dirty_roomsize" type="float" line="206"/>
            <declaration name="dirty_damp" type="float" line="207"/>
            <declaration name="dirty_predelay" type="float" line="208"/>
            <declaration name="dirty_gain" type="float" line="209"/>
            <declaration name="samplerate" type="float" line="210"/>
            <declaration name="light" type="boolean" line="211"/>
            <method name="init" type="void" line="213">
                <params>
                    <param name="samplerate" type="float"/>
                    <param name="controlrate" type="float"/>
                </params>
                <comment line="217">
                    freqscale = 1.0/ freqscale;                    
                </comment>
                <comment line="258">
                                        
                </comment>
                <declaration name="freqscale" type="double" line="216"/>
                <declaration name="stereospread" type="int" line="219"/>
                <scope line="253"/>
            </method>
            <method name="setInput" type="void" line="263">
                <params>
                    <param name="pin" type="int"/>
                    <param name="input" type="SoftAudioBuffer"/>
                </params>
            </method>
            <method name="setOutput" type="void" line="268">
                <params>
                    <param name="pin" type="int"/>
                    <param name="output" type="SoftAudioBuffer"/>
                </params>
            </method>
            <method name="setMixMode" type="void" line="275">
                <params>
                    <param name="mix" type="boolean"/>
                </params>
            </method>
            <declaration name="silent" type="boolean" line="279"/>
            <method name="processAudio" type="void" line="281">
                <declaration name="silent_input" type="boolean" line="282"/>
                <scope line="286">
                    <scope line="287"/>
                </scope>
                <declaration name="inputA" type="float[]" line="294"/>
                <declaration name="left" type="float[]" line="295"/>
                <declaration name="right" type="float[]" line="296"/>
                <declaration name="numsamples" type="int" line="298"/>
                <declaration name="again" type="float" line="302"/>
                <scope line="315">
                    <scope line="317"/>
                    <scope line="338"/>
                    <scope line="348">
                        <declaration name="p" type="float" line="349"/>
                        <declaration name="m" type="float" line="350"/>
                    </scope>
                </scope>
                <scope line="356">
                    <scope line="360"/>
                </scope>
                <scope line="384">
                    <scope line="387">
                        <declaration name="v" type="float" line="388"/>
                        <scope line="390"/>
                    </scope>
                </scope>
            </method>
            <method name="globalParameterControlChange" type="void" line="400">
                <params>
                    <param name="slothpath" type="int[]"/>
                    <param name="param" type="long"/>
                    <param name="value" type="long"/>
                </params>
                <comment line="406">
                    Small Room A small size room with a length                    
                </comment>
                <comment line="407">
                    of 5m or so.                    
                </comment>
                <comment line="415">
                    Medium Room A medium size room with a length                    
                </comment>
                <comment line="416">
                    of 10m or so.                    
                </comment>
                <comment line="424">
                    Large Room A large size room suitable for                    
                </comment>
                <comment line="425">
                    live performances.                    
                </comment>
                <comment line="433">
                    Medium Hall A medium size concert hall.                    
                </comment>
                <comment line="441">
                    Large Hall A large size concert hall                    
                </comment>
                <comment line="442">
                    suitable for a full orchestra.                    
                </comment>
                <comment line="450">
                    Plate A plate reverb simulation.                    
                </comment>
                <scope line="401">
                    <scope line="402">
                        <scope line="404">
                            <scope line="405"/>
                            <scope line="414"/>
                            <scope line="423"/>
                            <scope line="432"/>
                            <scope line="440"/>
                            <scope line="449"/>
                        </scope>
                        <scope line="457"/>
                    </scope>
                </scope>
            </method>
            <method name="processControlLogic" type="void" line="466">
                <scope line="467"/>
            </method>
            <method name="setRoomSize" type="void" line="476">
                <params>
                    <param name="value" type="float"/>
                </params>
                <scope line="479"/>
            </method>
            <method name="setPreDelay" type="void" line="485">
                <params>
                    <param name="value" type="float"/>
                </params>
            </method>
            <method name="setGain" type="void" line="489">
                <params>
                    <param name="gain" type="float"/>
                </params>
            </method>
            <method name="setDamp" type="void" line="493">
                <params>
                    <param name="value" type="float"/>
                </params>
                <comment line="502">
                    damp = value * 0.4f;                    
                </comment>
                <declaration name="x" type="double" line="494"/>
                <declaration name="cx" type="double" line="495"/>
                <scope line="503"/>
            </method>
            <method name="setLightMode" type="void" line="511">
                <params>
                    <param name="light" type="boolean"/>
                </params>
            </method>
        </class>
    </source>