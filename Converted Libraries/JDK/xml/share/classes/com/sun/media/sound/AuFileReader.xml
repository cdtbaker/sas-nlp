<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.util.Vector"/>
        <import package="java.io.File"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.EOFException"/>
        <import package="java.net.URL"/>
        <import package="java.net.MalformedURLException"/>
        <import package="java.io.BufferedInputStream"/>
        <import package="java.io.BufferedOutputStream"/>
        <import package="java.io.DataInputStream"/>
        <import package="java.io.FileInputStream"/>
        <import package="java.io.DataOutputStream"/>
        <import package="java.io.FileOutputStream"/>
        <import package="java.io.ByteArrayInputStream"/>
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.SequenceInputStream"/>
        <import package="javax.sound.sampled.AudioFileFormat"/>
        <import package="javax.sound.sampled.AudioInputStream"/>
        <import package="javax.sound.sampled.AudioFormat"/>
        <import package="javax.sound.sampled.AudioSystem"/>
        <import package="javax.sound.sampled.UnsupportedAudioFileException"/>
        <class name="AuFileReader" line="54">
            <extends class="SunFileReader"/>
            <comment line="80">
                METHODS TO IMPLEMENT AudioFileReader                
            </comment>
            <javadoc line="54">
                AU file reader.                
                <author>
                    Kara Kytle                    
                </author>
                <author>
                    Jan Borgersen                    
                </author>
                <author>
                    Florian Bomers                    
                </author>
            </javadoc>
            <declaration name="types" type="AudioFileFormat.Type" line="63"/>
            <javadoc line="63">
                AU reader type                
            </javadoc>
            <javadoc line="72">
                Constructs a new AuFileReader object.                
            </javadoc>
            <method name="AuFileReader" type="constructor" line="75"/>
            <javadoc line="81">
                Obtains the audio file format of the input stream provided.  The stream must
                  point to valid audio file data.  In general, audio file providers may
                  need to read some data from the stream before determining whether they
                  support it.  These parsers must
                  be able to mark the stream, read enough data to determine whether they
                  support the stream, and, if not, reset the stream&apos;s read pointer to its original
                  position.  If the input stream does not support this, this method may fail
                  with an IOException.                
                <param>
                    stream the input stream from which file format information should be
                      extracted                    
                </param>
                <return>
                    an &lt;code&gt;AudioFileFormat&lt;/code&gt; object describing the audio file format                    
                </return>
                <throws>
                    UnsupportedAudioFileException if the stream does not point to valid audio
                      file data recognized by the system                    
                </throws>
                <throws>
                    IOException if an I/O exception occurs                    
                </throws>
                <see>
                    InputStream#markSupported                    
                </see>
                <see>
                    InputStream#mark                    
                </see>
            </javadoc>
            <method name="getAudioFileFormat" type="AudioFileFormat" line="99">
                <params>
                    <param name="stream" type="InputStream"/>
                </params>
                <comment line="128">
                    not AU, reset the stream, place into exception, throw exception                    
                </comment>
                <comment line="134">
                    otherwise little-endian                    
                </comment>
                <comment line="155">
                    $$jb: 04.29.99: 8bit linear is *signed*, not *unsigned*                    
                </comment>
                <comment line="173">
                    $jb: 03.19.99: we don&apos;t support these ...                    
                </comment>
                <comment line="174">
                    case AuFileFormat.AU_FLOAT:
                    encoding = new AudioFormat.FLOAT;
                    sampleSizeInBits = 32;
                    break;
                    case AuFileFormat.AU_DOUBLE:
                    encoding = new AudioFormat.DOUBLE;
                    sampleSizeInBits = 8;
                    break;
                    case AuFileFormat.AU_ADPCM_G721:
                    encoding = new AudioFormat.G721_ADPCM;
                    sampleSizeInBits = 16;
                    break;
                    case AuFileFormat.AU_ADPCM_G723_3:
                    encoding = new AudioFormat.G723_3;
                    sampleSize = 24;
                    SamplePerUnit = 8;
                    break;
                    case AuFileFormat.AU_ADPCM_G723_5:
                    encoding = new AudioFormat.G723_5;
                    sampleSize = 40;
                    SamplePerUnit = 8;
                    break;                    
                </comment>
                <comment line="198">
                    unsupported filetype, throw exception                    
                </comment>
                <comment line="204">
                    $$fb 2002-11-02: fix for 4629669: AU file reader: problems with empty files                    
                </comment>
                <comment line="208">
                    $$fb 2003-10-20: fix for 4940459: AudioInputStream.getFrameLength() returns 0 instead of NOT_SPECIFIED                    
                </comment>
                <comment line="218">
                    Throws IOException                    
                </comment>
                <declaration name="format" type="AudioFormat" line="101"/>
                <declaration name="fileFormat" type="AuFileFormat" line="102"/>
                <declaration name="maxReadLength" type="int" line="103"/>
                <declaration name="bigendian" type="boolean" line="104"/>
                <declaration name="magic" type="int" line="105"/>
                <declaration name="headerSize" type="int" line="106"/>
                <declaration name="dataSize" type="int" line="107"/>
                <declaration name="encoding_local" type="int" line="108"/>
                <declaration name="sampleRate" type="int" line="109"/>
                <declaration name="frameRate" type="int" line="110"/>
                <declaration name="frameSize" type="int" line="111"/>
                <declaration name="channels" type="int" line="112"/>
                <declaration name="sampleSizeInBits" type="int" line="113"/>
                <declaration name="length" type="int" line="114"/>
                <declaration name="nread" type="int" line="115"/>
                <declaration name="encoding" type="AudioFormat.Encoding" line="116"/>
                <declaration name="dis" type="DataInputStream" line="118"/>
                <scope line="125"/>
                <scope line="132"/>
                <scope line="204"/>
                <scope line="206"/>
            </method>
            <javadoc line="223">
                Obtains the audio file format of the URL provided.  The URL must
                  point to valid audio file data.                
                <param>
                    url the URL from which file format information should be
                      extracted                    
                </param>
                <return>
                    an &lt;code&gt;AudioFileFormat&lt;/code&gt; object describing the audio file format                    
                </return>
                <throws>
                    UnsupportedAudioFileException if the URL does not point to valid audio
                      file data recognized by the system                    
                </throws>
                <throws>
                    IOException if an I/O exception occurs                    
                </throws>
            </javadoc>
            <method name="getAudioFileFormat" type="AudioFileFormat" line="233">
                <params>
                    <param name="url" type="URL"/>
                </params>
                <comment line="241">
                    throws IOException                    
                </comment>
                <comment line="246">
                    throws UnsupportedAudioFileException                    
                </comment>
                <declaration name="urlStream" type="InputStream" line="235"/>
                <declaration name="bis" type="BufferedInputStream" line="236"/>
                <declaration name="fileFormat" type="AudioFileFormat" line="237"/>
                <declaration name="format" type="AudioFormat" line="238"/>
                <scope line="242"/>
                <scope line="246"/>
            </method>
            <javadoc line="254">
                Obtains the audio file format of the File provided.  The File must
                  point to valid audio file data.                
                <param>
                    file the File from which file format information should be
                      extracted                    
                </param>
                <return>
                    an &lt;code&gt;AudioFileFormat&lt;/code&gt; object describing the audio file format                    
                </return>
                <throws>
                    UnsupportedAudioFileException if the File does not point to valid audio
                      file data recognized by the system                    
                </throws>
                <throws>
                    IOException if an I/O exception occurs                    
                </throws>
            </javadoc>
            <method name="getAudioFileFormat" type="AudioFileFormat" line="264">
                <params>
                    <param name="file" type="File"/>
                </params>
                <comment line="272">
                    throws IOException                    
                </comment>
                <comment line="273">
                    part of fix for 4325421                    
                </comment>
                <comment line="276">
                    throws UnsupportedAudioFileException                    
                </comment>
                <declaration name="fis" type="FileInputStream" line="266"/>
                <declaration name="bis" type="BufferedInputStream" line="267"/>
                <declaration name="fileFormat" type="AudioFileFormat" line="268"/>
                <declaration name="format" type="AudioFormat" line="269"/>
                <scope line="273"/>
                <scope line="276"/>
            </method>
            <javadoc line="284">
                Obtains an audio stream from the input stream provided.  The stream must
                  point to valid audio file data.  In general, audio file providers may
                  need to read some data from the stream before determining whether they
                  support it.  These parsers must
                  be able to mark the stream, read enough data to determine whether they
                  support the stream, and, if not, reset the stream&apos;s read pointer to its original
                  position.  If the input stream does not support this, this method may fail
                  with an IOException.                
                <param>
                    stream the input stream from which the &lt;code&gt;AudioInputStream&lt;/code&gt; should be
                      constructed                    
                </param>
                <return>
                    an &lt;code&gt;AudioInputStream&lt;/code&gt; object based on the audio file data contained
                      in the input stream.                    
                </return>
                <throws>
                    UnsupportedAudioFileException if the stream does not point to valid audio
                      file data recognized by the system                    
                </throws>
                <throws>
                    IOException if an I/O exception occurs                    
                </throws>
                <see>
                    InputStream#markSupported                    
                </see>
                <see>
                    InputStream#mark                    
                </see>
            </javadoc>
            <method name="getAudioInputStream" type="AudioInputStream" line="303">
                <params>
                    <param name="stream" type="InputStream"/>
                </params>
                <comment line="312">
                    throws UnsupportedAudioFileException, IOException                    
                </comment>
                <comment line="314">
                    if we passed this call, we have an AU file.                    
                </comment>
                <comment line="320">
                    now seek past the header                    
                </comment>
                <comment line="322">
                    magic                    
                </comment>
                <comment line="327">
                    we&apos;ve got everything, and the stream should be at the
                     beginning of the data chunk, so return an AudioInputStream.                    
                </comment>
                <declaration name="dis" type="DataInputStream" line="305"/>
                <declaration name="headerSize" type="int" line="306"/>
                <declaration name="fileFormat" type="AudioFileFormat" line="307"/>
                <declaration name="format" type="AudioFormat" line="308"/>
            </method>
            <javadoc line="333">
                Obtains an audio stream from the URL provided.  The URL must
                  point to valid audio file data.                
                <param>
                    url the URL for which the &lt;code&gt;AudioInputStream&lt;/code&gt; should be
                      constructed                    
                </param>
                <return>
                    an &lt;code&gt;AudioInputStream&lt;/code&gt; object based on the audio file data pointed
                      to by the URL                    
                </return>
                <throws>
                    UnsupportedAudioFileException if the URL does not point to valid audio
                      file data recognized by the system                    
                </throws>
                <throws>
                    IOException if an I/O exception occurs                    
                </throws>
            </javadoc>
            <method name="getAudioInputStream" type="AudioInputStream" line="344">
                <params>
                    <param name="url" type="URL"/>
                </params>
                <comment line="351">
                    throws IOException                    
                </comment>
                <declaration name="urlStream" type="InputStream" line="346"/>
                <declaration name="bis" type="BufferedInputStream" line="347"/>
                <declaration name="fileFormat" type="AudioFileFormat" line="348"/>
                <declaration name="result" type="AudioInputStream" line="351"/>
                <scope line="352"/>
                <scope line="355">
                    <scope line="356"/>
                </scope>
            </method>
            <javadoc line="364">
                Obtains an audio stream from the File provided.  The File must
                  point to valid audio file data.                
                <param>
                    file the File for which the &lt;code&gt;AudioInputStream&lt;/code&gt; should be
                      constructed                    
                </param>
                <return>
                    an &lt;code&gt;AudioInputStream&lt;/code&gt; object based on the audio file data pointed
                      to by the File                    
                </return>
                <throws>
                    UnsupportedAudioFileException if the File does not point to valid audio
                      file data recognized by the system                    
                </throws>
                <throws>
                    IOException if an I/O exception occurs                    
                </throws>
            </javadoc>
            <method name="getAudioInputStream" type="AudioInputStream" line="375">
                <params>
                    <param name="file" type="File"/>
                </params>
                <comment line="382">
                    throws IOException                    
                </comment>
                <comment line="384">
                    part of fix for 4325421                    
                </comment>
                <declaration name="fis" type="FileInputStream" line="377"/>
                <declaration name="bis" type="BufferedInputStream" line="378"/>
                <declaration name="fileFormat" type="AudioFileFormat" line="379"/>
                <declaration name="result" type="AudioInputStream" line="382"/>
                <scope line="384"/>
                <scope line="387">
                    <scope line="388"/>
                </scope>
            </method>
        </class>
    </source>