<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.io.IOException"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="javax.sound.sampled.AudioFormat"/>
        <import package="javax.sound.sampled.AudioInputStream"/>
        <import package="javax.sound.sampled.AudioSystem"/>
        <import package="javax.sound.sampled.Clip"/>
        <import package="javax.sound.sampled.Control"/>
        <import package="javax.sound.sampled.DataLine"/>
        <import package="javax.sound.sampled.Line"/>
        <import package="javax.sound.sampled.LineEvent"/>
        <import package="javax.sound.sampled.LineListener"/>
        <import package="javax.sound.sampled.LineUnavailableException"/>
        <import package="javax.sound.sampled.Mixer"/>
        <import package="javax.sound.sampled.SourceDataLine"/>
        <import package="javax.sound.sampled.AudioFormat.Encoding"/>
        <import package="javax.sound.sampled.Control.Type"/>
        <class name="SoftMixingMixer" line="19">
            <implements interface="Mixer"/>
            <javadoc line="19">
                Software audio mixer                
                <author>
                    Karl Helgason                    
                </author>
            </javadoc>
            <class name="Info" line="24">
                <extends class="Mixer.Info"/>
                <method name="Info" type="constructor" line="25"/>
            </class>
            <declaration name="INFO_NAME" type="String" line="29"/>
            <declaration name="INFO_VENDOR" type="String" line="30"/>
            <declaration name="INFO_DESCRIPTION" type="String" line="31"/>
            <declaration name="INFO_VERSION" type="String" line="32"/>
            <declaration name="info" type="Mixer.Info" line="33"/>
            <declaration name="control_mutex" type="Object" line="34"/>
            <declaration name="implicitOpen" type="boolean" line="35"/>
            <declaration name="open" type="boolean" line="36"/>
            <declaration name="mainmixer" type="SoftMixingMainMixer" line="37"/>
            <declaration name="format" type="AudioFormat" line="38"/>
            <declaration name="sourceDataLine" type="SourceDataLine" line="39"/>
            <declaration name="pusher" type="SoftAudioPusher" line="40"/>
            <declaration name="pusher_stream" type="AudioInputStream" line="41"/>
            <declaration name="controlrate" type="float" line="42"/>
            <declaration name="latency" type="long" line="43"/>
            <declaration name="jitter_correction" type="boolean" line="44"/>
            <declaration name="listeners" type="List&lt;LineListener&gt;" line="45"/>
            <declaration name="sourceLineInfo" type="javax.sound.sampled.Line.Info[]" line="46"/>
            <method name="SoftMixingMixer" type="constructor" line="47">
                <declaration name="formats" type="ArrayList&lt;AudioFormat&gt;" line="49"/>
                <scope line="50">
                    <scope line="53"/>
                </scope>
                <declaration name="formats_array" type="AudioFormat[]" line="64"/>
            </method>
            <method name="getLine" type="Line" line="68">
                <params>
                    <param name="info" type="Line.Info"/>
                </params>
                <scope line="70"/>
                <scope line="73"/>
            </method>
            <method name="getMaxLines" type="int" line="78">
                <params>
                    <param name="info" type="Line.Info"/>
                </params>
            </method>
            <method name="getMixerInfo" type="javax.sound.sampled.Mixer.Info" line="83"/>
            <method name="getSourceLineInfo" type="javax.sound.sampled.Line.Info[]" line="86">
                <declaration name="localArray" type="Line.Info[]" line="87"/>
            </method>
            <method name="getSourceLineInfo" type="javax.sound.sampled.Line.Info[]" line="91">
                <params>
                    <param name="info" type="javax.sound.sampled.Line.Info"/>
                </params>
                <declaration name="i" type="int" line="92"/>
                <declaration name="infos" type="ArrayList&lt;javax.sound.sampled.Line.Info&gt;" line="93"/>
                <scope line="94">
                    <scope line="95"/>
                </scope>
            </method>
            <method name="getSourceLines" type="Line[]" line="101">
                <declaration name="localLines" type="Line[]" line="102"/>
                <scope line="103">
                    <declaration name="sourceLines" type="SoftMixingDataLine[]" line="105"/>
                    <scope line="107"/>
                </scope>
            </method>
            <method name="getTargetLineInfo" type="javax.sound.sampled.Line.Info[]" line="113"/>
            <method name="getTargetLineInfo" type="javax.sound.sampled.Line.Info[]" line="116">
                <params>
                    <param name="info" type="javax.sound.sampled.Line.Info"/>
                </params>
            </method>
            <method name="getTargetLines" type="Line[]" line="119"/>
            <method name="isLineSupported" type="boolean" line="122">
                <params>
                    <param name="info" type="javax.sound.sampled.Line.Info"/>
                </params>
                <scope line="123">
                    <scope line="124">
                        <scope line="125"/>
                    </scope>
                </scope>
            </method>
            <method name="isSynchronizationSupported" type="boolean" line="132">
                <params>
                    <param name="lines" type="Line[]"/>
                    <param name="maintainSync" type="boolean"/>
                </params>
            </method>
            <method name="synchronize" type="void" line="135">
                <params>
                    <param name="lines" type="Line[]"/>
                    <param name="maintainSync" type="boolean"/>
                </params>
            </method>
            <method name="unsynchronize" type="void" line="138">
                <params>
                    <param name="lines" type="Line[]"/>
                </params>
            </method>
            <method name="addLineListener" type="void" line="141">
                <params>
                    <param name="listener" type="LineListener"/>
                </params>
                <scope line="142"/>
            </method>
            <method name="sendEvent" type="void" line="146">
                <params>
                    <param name="event" type="LineEvent"/>
                </params>
                <declaration name="listener_array" type="LineListener[]" line="148"/>
                <scope line="149"/>
            </method>
            <method name="close" type="void" line="153">
                <declaration name="pusher_to_be_closed" type="SoftAudioPusher" line="156"/>
                <declaration name="pusher_stream_to_be_closed" type="AudioInputStream" line="157"/>
                <scope line="158">
                    <scope line="159"/>
                </scope>
                <scope line="166">
                    <scope line="168"/>
                    <scope line="171"/>
                </scope>
                <scope line="175">
                    <scope line="178"/>
                </scope>
            </method>
            <method name="getControl" type="Control" line="185">
                <params>
                    <param name="control" type="Type"/>
                </params>
            </method>
            <method name="getControls" type="Control[]" line="188"/>
            <method name="getLineInfo" type="javax.sound.sampled.Line.Info" line="191"/>
            <method name="isControlSupported" type="boolean" line="194">
                <params>
                    <param name="control" type="Type"/>
                </params>
            </method>
            <method name="isOpen" type="boolean" line="197">
                <scope line="198"/>
            </method>
            <method name="open" type="void" line="202">
                <scope line="203"/>
            </method>
            <method name="open" type="void" line="209">
                <params>
                    <param name="line" type="SourceDataLine"/>
                </params>
                <scope line="210"/>
                <scope line="214">
                    <scope line="215">
                        <declaration name="ais" type="AudioInputStream" line="217"/>
                        <scope line="218">
                            <scope line="219"/>
                            <scope line="222">
                                <declaration name="defaultmixer" type="Mixer" line="223"/>
                                <scope line="224">
                                    <declaration name="idealinfo" type="DataLine.Info" line="225"/>
                                    <declaration name="idealformat" type="AudioFormat" line="226"/>
                                    <declaration name="lineinfos" type="Line.Info[]" line="227"/>
                                    <scope line="228">
                                        <scope line="229">
                                            <declaration name="info" type="DataLine.Info" line="230"/>
                                            <declaration name="formats" type="AudioFormat[]" line="231"/>
                                            <scope line="232">
                                                <declaration name="format" type="AudioFormat" line="233"/>
                                                <scope line="234">
                                                    <declaration name="ideal_channels" type="int" line="236"/>
                                                    <declaration name="ideal_signed" type="boolean" line="237"/>
                                                    <declaration name="ideal_rate" type="float" line="238"/>
                                                    <declaration name="ideal_endian" type="boolean" line="239"/>
                                                    <declaration name="ideal_bits" type="int" line="240"/>
                                                </scope>
                                            </scope>
                                        </scope>
                                    </scope>
                                    <scope line="250"/>
                                </scope>
                            </scope>
                            <scope line="257">
                                <scope line="258"/>
                            </scope>
                        </scope>
                        <declaration name="latency" type="double" line="264"/>
                        <scope line="265">
                            <declaration name="bufferSize" type="int" line="266"/>
                        </scope>
                        <declaration name="controlbuffersize" type="int" line="271"/>
                        <scope line="272"/>
                        <scope line="275"/>
                        <declaration name="buffersize" type="int" line="277"/>
                        <scope line="280"/>
                    </scope>
                    <scope line="287"/>
                </scope>
            </method>
            <method name="openStream" type="AudioInputStream" line="293">
                <params>
                    <param name="targetFormat" type="AudioFormat"/>
                </params>
                <scope line="295"/>
            </method>
            <method name="removeLineListener" type="void" line="304">
                <params>
                    <param name="listener" type="LineListener"/>
                </params>
                <scope line="305"/>
            </method>
            <method name="getLatency" type="long" line="309">
                <scope line="310"/>
            </method>
            <method name="getFormat" type="AudioFormat" line="314">
                <scope line="315"/>
            </method>
            <method name="getControlRate" type="float" line="319"/>
            <method name="getMainMixer" type="SoftMixingMainMixer" line="322"/>
        </class>
    </source>