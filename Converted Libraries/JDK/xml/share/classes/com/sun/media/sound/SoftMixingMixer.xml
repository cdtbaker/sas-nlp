<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.io.IOException"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="javax.sound.sampled.AudioFormat"/>
        <import package="javax.sound.sampled.AudioInputStream"/>
        <import package="javax.sound.sampled.AudioSystem"/>
        <import package="javax.sound.sampled.Clip"/>
        <import package="javax.sound.sampled.Control"/>
        <import package="javax.sound.sampled.DataLine"/>
        <import package="javax.sound.sampled.Line"/>
        <import package="javax.sound.sampled.LineEvent"/>
        <import package="javax.sound.sampled.LineListener"/>
        <import package="javax.sound.sampled.LineUnavailableException"/>
        <import package="javax.sound.sampled.Mixer"/>
        <import package="javax.sound.sampled.SourceDataLine"/>
        <import package="javax.sound.sampled.AudioFormat.Encoding"/>
        <import package="javax.sound.sampled.Control.Type"/>
        <class name="SoftMixingMixer" line="46">
            <comment line="88">
                100 msec                
            </comment>
            <implements interface="Mixer"/>
            <javadoc line="46">
                Software audio mixer                
                <author>
                    Karl Helgason                    
                </author>
            </javadoc>
            <class name="Info" line="53">
                <extends class="Mixer.Info"/>
                <method name="Info" type="constructor" line="54"/>
            </class>
            <declaration name="INFO_NAME" type="String" line="59"/>
            <declaration name="INFO_VENDOR" type="String" line="61"/>
            <declaration name="INFO_DESCRIPTION" type="String" line="63"/>
            <declaration name="INFO_VERSION" type="String" line="65"/>
            <declaration name="info" type="Mixer.Info" line="67"/>
            <declaration name="control_mutex" type="Object" line="69"/>
            <declaration name="implicitOpen" type="boolean" line="71"/>
            <declaration name="open" type="boolean" line="73"/>
            <declaration name="mainmixer" type="SoftMixingMainMixer" line="75"/>
            <declaration name="format" type="AudioFormat" line="77"/>
            <declaration name="sourceDataLine" type="SourceDataLine" line="79"/>
            <declaration name="pusher" type="SoftAudioPusher" line="81"/>
            <declaration name="pusher_stream" type="AudioInputStream" line="83"/>
            <declaration name="controlrate" type="float" line="85"/>
            <declaration name="latency" type="long" line="87"/>
            <declaration name="jitter_correction" type="boolean" line="89"/>
            <declaration name="listeners" type="List&lt;LineListener&gt;" line="91"/>
            <declaration name="sourceLineInfo" type="javax.sound.sampled.Line.Info[]" line="93"/>
            <method name="SoftMixingMixer" type="constructor" line="95">
                <declaration name="formats" type="ArrayList&lt;AudioFormat&gt;" line="99"/>
                <scope line="100">
                    <scope line="107"/>
                </scope>
                <declaration name="formats_array" type="AudioFormat[]" line="134"/>
            </method>
            <method name="getLine" type="Line" line="143">
                <params>
                    <param name="info" type="Line.Info"/>
                </params>
                <scope line="148"/>
                <scope line="151"/>
            </method>
            <method name="getMaxLines" type="int" line="158">
                <params>
                    <param name="info" type="Line.Info"/>
                </params>
            </method>
            <method name="getMixerInfo" type="javax.sound.sampled.Mixer.Info" line="166"/>
            <method name="getSourceLineInfo" type="javax.sound.sampled.Line.Info[]" line="170">
                <declaration name="localArray" type="Line.Info[]" line="171"/>
            </method>
            <method name="getSourceLineInfo" type="javax.sound.sampled.Line.Info[]" line="178">
                <params>
                    <param name="info" type="javax.sound.sampled.Line.Info"/>
                </params>
                <declaration name="i" type="int" line="179"/>
                <declaration name="infos" type="ArrayList&lt;javax.sound.sampled.Line.Info&gt;" line="180"/>
                <scope line="182">
                    <scope line="183"/>
                </scope>
            </method>
            <method name="getSourceLines" type="Line[]" line="190">
                <declaration name="localLines" type="Line[]" line="192"/>
                <scope line="194">
                    <declaration name="sourceLines" type="SoftMixingDataLine[]" line="198"/>
                    <scope line="202"/>
                </scope>
            </method>
            <method name="getTargetLineInfo" type="javax.sound.sampled.Line.Info[]" line="210"/>
            <method name="getTargetLineInfo" type="javax.sound.sampled.Line.Info[]" line="215">
                <params>
                    <param name="info" type="javax.sound.sampled.Line.Info"/>
                </params>
            </method>
            <method name="getTargetLines" type="Line[]" line="219"/>
            <method name="isLineSupported" type="boolean" line="223">
                <params>
                    <param name="info" type="javax.sound.sampled.Line.Info"/>
                </params>
                <scope line="224">
                    <scope line="225">
                        <scope line="226"/>
                    </scope>
                </scope>
            </method>
            <method name="isSynchronizationSupported" type="boolean" line="234">
                <params>
                    <param name="lines" type="Line[]"/>
                    <param name="maintainSync" type="boolean"/>
                </params>
            </method>
            <method name="synchronize" type="void" line="238">
                <params>
                    <param name="lines" type="Line[]"/>
                    <param name="maintainSync" type="boolean"/>
                </params>
            </method>
            <method name="unsynchronize" type="void" line="243">
                <params>
                    <param name="lines" type="Line[]"/>
                </params>
            </method>
            <method name="addLineListener" type="void" line="248">
                <params>
                    <param name="listener" type="LineListener"/>
                </params>
                <scope line="249"/>
            </method>
            <method name="sendEvent" type="void" line="254">
                <params>
                    <param name="event" type="LineEvent"/>
                </params>
                <declaration name="listener_array" type="LineListener[]" line="257"/>
                <scope line="259"/>
            </method>
            <method name="close" type="void" line="264">
                <comment line="284">
                    Pusher must not be closed synchronized against control_mutex
                     this may result in synchronized conflict between pusher and
                     current thread.                    
                </comment>
                <declaration name="pusher_to_be_closed" type="SoftAudioPusher" line="271"/>
                <declaration name="pusher_stream_to_be_closed" type="AudioInputStream" line="272"/>
                <scope line="273">
                    <scope line="274"/>
                </scope>
                <scope line="282">
                    <scope line="288"/>
                    <scope line="290"/>
                </scope>
                <scope line="295">
                    <scope line="301"/>
                </scope>
            </method>
            <method name="getControl" type="Control" line="311">
                <params>
                    <param name="control" type="Type"/>
                </params>
            </method>
            <method name="getControls" type="Control[]" line="316"/>
            <method name="getLineInfo" type="javax.sound.sampled.Line.Info" line="320"/>
            <method name="isControlSupported" type="boolean" line="324">
                <params>
                    <param name="control" type="Type"/>
                </params>
            </method>
            <method name="isOpen" type="boolean" line="328">
                <scope line="329"/>
            </method>
            <method name="open" type="void" line="334">
                <scope line="335"/>
            </method>
            <method name="open" type="void" line="342">
                <params>
                    <param name="line" type="SourceDataLine"/>
                </params>
                <comment line="367">
                    Search for suitable line                    
                </comment>
                <comment line="434">
                    Remember that we opened that line
                     so we can close again in SoftSynthesizer.close()                    
                </comment>
                <comment line="447">
                    Tell mixer not fill read buffers fully.
                     This lowers latency, and tells DataPusher
                     to read in smaller amounts.
                     mainmixer.readfully = false;
                     pusher = new DataPusher(line, ais);                    
                </comment>
                <scope line="343"/>
                <scope line="347">
                    <scope line="349">
                        <declaration name="ais" type="AudioInputStream" line="354"/>
                        <scope line="356">
                            <scope line="357"/>
                            <scope line="362">
                                <declaration name="defaultmixer" type="Mixer" line="363"/>
                                <scope line="365">
                                    <declaration name="idealinfo" type="DataLine.Info" line="368"/>
                                    <declaration name="idealformat" type="AudioFormat" line="369"/>
                                    <declaration name="lineinfos" type="Line.Info[]" line="371"/>
                                    <scope line="373">
                                        <scope line="375">
                                            <declaration name="info" type="DataLine.Info" line="376"/>
                                            <declaration name="formats" type="AudioFormat[]" line="377"/>
                                            <scope line="378">
                                                <declaration name="format" type="AudioFormat" line="379"/>
                                                <scope line="388">
                                                    <declaration name="ideal_channels" type="int" line="390"/>
                                                    <declaration name="ideal_signed" type="boolean" line="391"/>
                                                    <declaration name="ideal_rate" type="float" line="392"/>
                                                    <declaration name="ideal_endian" type="boolean" line="393"/>
                                                    <declaration name="ideal_bits" type="int" line="394"/>
                                                </scope>
                                            </scope>
                                        </scope>
                                    </scope>
                                    <scope line="407"/>
                                </scope>
                            </scope>
                            <scope line="415">
                                <scope line="416"/>
                            </scope>
                        </scope>
                        <declaration name="latency" type="double" line="426"/>
                        <scope line="428">
                            <declaration name="bufferSize" type="int" line="429"/>
                        </scope>
                        <declaration name="controlbuffersize" type="int" line="440"/>
                        <scope line="441"/>
                        <scope line="443"/>
                        <declaration name="buffersize" type="int" line="452"/>
                        <scope line="458"/>
                    </scope>
                    <scope line="466"/>
                </scope>
            </method>
            <method name="openStream" type="AudioInputStream" line="476">
                <params>
                    <param name="targetFormat" type="AudioFormat"/>
                </params>
                <scope line="481"/>
            </method>
            <method name="removeLineListener" type="void" line="501">
                <params>
                    <param name="listener" type="LineListener"/>
                </params>
                <scope line="502"/>
            </method>
            <method name="getLatency" type="long" line="507">
                <scope line="508"/>
            </method>
            <method name="getFormat" type="AudioFormat" line="513">
                <scope line="514"/>
            </method>
            <method name="getControlRate" type="float" line="519"/>
            <method name="getMainMixer" type="SoftMixingMainMixer" line="523"/>
        </class>
    </source>