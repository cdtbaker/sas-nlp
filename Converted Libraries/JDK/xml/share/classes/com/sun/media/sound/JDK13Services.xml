<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.util.Collections"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.util.Properties"/>
        <import package="javax.sound.sampled.spi.AudioFileReader"/>
        <import package="javax.sound.sampled.spi.AudioFileWriter"/>
        <import package="javax.sound.sampled.spi.FormatConversionProvider"/>
        <import package="javax.sound.sampled.spi.MixerProvider"/>
        <import package="javax.sound.midi.spi.MidiFileReader"/>
        <import package="javax.sound.midi.spi.MidiFileWriter"/>
        <import package="javax.sound.midi.spi.SoundbankReader"/>
        <import package="javax.sound.midi.spi.MidiDeviceProvider"/>
        <import package="javax.sound.midi.Receiver"/>
        <import package="javax.sound.midi.Sequencer"/>
        <import package="javax.sound.midi.Synthesizer"/>
        <import package="javax.sound.midi.Transmitter"/>
        <import package="javax.sound.sampled.Clip"/>
        <import package="javax.sound.sampled.Port"/>
        <import package="javax.sound.sampled.SourceDataLine"/>
        <import package="javax.sound.sampled.TargetDataLine"/>
        <class name="JDK13Services" line="54">
            <comment line="234">
                INNER CLASSES                
            </comment>
            <javadoc line="54">
                JDK13Services uses the Service class in JDK 1.3
                  to discover a list of service providers installed
                  in the system.
                  This class is public because it is called from javax.sound.midi.MidiSystem
                  and javax.sound.sampled.AudioSystem. The alternative would be to make
                  JSSecurityManager public, which is considered worse.                
                <author>
                    Matthias Pfisterer                    
                </author>
            </javadoc>
            <declaration name="DEFAULT_CACHING_PERIOD" type="long" line="67"/>
            <javadoc line="67">
                The default for the length of the period to hold the cache.
                  This value is given in milliseconds. It is equivalent to
                  1 minute.                
            </javadoc>
            <declaration name="PROPERTIES_FILENAME" type="String" line="73"/>
            <javadoc line="73">
                Filename of the properties file for default provider properties.
                  This file is searched in the subdirectory &quot;lib&quot; of the JRE directory
                  (this behaviour is hardcoded).                
            </javadoc>
            <declaration name="providersCacheMap" type="Map" line="79"/>
            <javadoc line="79">
                Cache for the providers.
                  Class objects of the provider type (MixerProvider, MidiDeviceProvider
                  ...) are used as keys. The values are instances of ProviderCache.                
            </javadoc>
            <declaration name="cachingPeriod" type="long" line="86"/>
            <javadoc line="86">
                The length of the period to hold the cache.
                  This value is given in milliseconds.                
            </javadoc>
            <declaration name="properties" type="Properties" line="91"/>
            <javadoc line="91">
                Properties loaded from the properties file for default provider
                  properties.                
            </javadoc>
            <javadoc line="97">
                Private, no-args constructor to ensure against instantiation.                
            </javadoc>
            <method name="JDK13Services" type="constructor" line="99"/>
            <javadoc line="103">
                Set the period provider lists are cached.
                  This method is only intended for testing.                
            </javadoc>
            <method name="setCachingPeriod" type="void" line="106">
                <params>
                    <param name="seconds" type="int"/>
                </params>
            </method>
            <javadoc line="111">
                Obtains a List containing installed instances of the
                  providers for the requested service.
                  The List of providers is cached for the period of time given by{@link #cachingPeriod cachingPeriod}. During this period, the same
                  List instance is returned for the same type of provider. After this
                  period, a new instance is constructed and returned. The returned
                  List is immutable.                
                <param>
                    serviceClass The type of providers requested. This should be one
                      of AudioFileReader.class, AudioFileWriter.class,
                      FormatConversionProvider.class, MixerProvider.class,
                      MidiDeviceProvider.class, MidiFileReader.class, MidiFileWriter.class or
                      SoundbankReader.class.                    
                </param>
                <return>
                    A List of providers of the requested type. This List is
                      immutable.                    
                </return>
            </javadoc>
            <method name="getProviders" type="List" line="126">
                <params>
                    <param name="serviceClass" type="Class"/>
                </params>
                <declaration name="cache" type="ProviderCache" line="127"/>
                <scope line="128"/>
                <scope line="133"/>
            </method>
            <javadoc line="141">
                Obtain the provider class name part of a default provider property.                
                <param>
                    typeClass The type of the default provider property. This
                      should be one of Receiver.class, Transmitter.class, Sequencer.class,
                      Synthesizer.class, SourceDataLine.class, TargetDataLine.class,
                      Clip.class or Port.class.                    
                </param>
                <return>
                    The value of the provider class name part of the property
                      (the part before the hash sign), if available. If the property is
                      not set or the value has no provider class name part, null is returned.                    
                </return>
            </javadoc>
            <method name="getDefaultProviderClassName" type="String" line="150">
                <params>
                    <param name="typeClass" type="Class"/>
                </params>
                <comment line="156">
                    instance name only; leave value as null                    
                </comment>
                <declaration name="value" type="String" line="151"/>
                <declaration name="defaultProviderSpec" type="String" line="152"/>
                <scope line="153">
                    <declaration name="hashpos" type="int" line="154"/>
                    <scope line="155"/>
                    <scope line="157"/>
                    <scope line="159"/>
                </scope>
            </method>
            <javadoc line="167">
                Obtain the instance name part of a default provider property.                
                <param>
                    typeClass The type of the default provider property. This
                      should be one of Receiver.class, Transmitter.class, Sequencer.class,
                      Synthesizer.class, SourceDataLine.class, TargetDataLine.class,
                      Clip.class or Port.class.                    
                </param>
                <return>
                    The value of the instance name part of the property (the
                      part after the hash sign), if available. If the property is not set
                      or the value has no instance name part, null is returned.                    
                </return>
            </javadoc>
            <method name="getDefaultInstanceName" type="String" line="176">
                <params>
                    <param name="typeClass" type="Class"/>
                </params>
                <declaration name="value" type="String" line="177"/>
                <declaration name="defaultProviderSpec" type="String" line="178"/>
                <scope line="179">
                    <declaration name="hashpos" type="int" line="180"/>
                    <scope line="181"/>
                </scope>
            </method>
            <javadoc line="189">
                Obtain the value of a default provider property.                
                <param>
                    typeClass The type of the default provider property. This
                      should be one of Receiver.class, Transmitter.class, Sequencer.class,
                      Synthesizer.class, SourceDataLine.class, TargetDataLine.class,
                      Clip.class or Port.class.                    
                </param>
                <return>
                    The complete value of the property, if available.
                      If the property is not set, null is returned.                    
                </return>
            </javadoc>
            <method name="getDefaultProvider" type="String" line="197">
                <params>
                    <param name="typeClass" type="Class"/>
                </params>
                <scope line="205"/>
                <declaration name="value" type="String" line="208"/>
                <declaration name="propertyName" type="String" line="209"/>
                <scope line="211"/>
                <scope line="214"/>
            </method>
            <javadoc line="221">
                Obtain a properties bundle containing property values from the
                  properties file. If the properties file could not be loaded,
                  the properties bundle is empty.                
            </javadoc>
            <method name="getProperties" type="Properties" line="225">
                <scope line="226"/>
            </method>
            <class name="ProviderCache" line="235">
                <comment line="237">
                    System time of the last update in milliseconds.                    
                </comment>
                <comment line="240">
                    The providers.                    
                </comment>
                <declaration name="lastUpdate" type="long" line="237"/>
                <declaration name="providers" type="List" line="240"/>
            </class>
        </class>
    </source>