<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.util.ArrayList"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="javax.sound.midi.MidiChannel"/>
        <import package="javax.sound.midi.Patch"/>
        <class name="SoftChannel" line="10">
            <implements interface="MidiChannel"/>
            <implements interface="ModelDirectedPlayer"/>
            <javadoc line="10">
                Software Synthesizer MIDI channel class.                
                <author>
                    Karl Helgason                    
                </author>
            </javadoc>
            <declaration name="dontResetControls" type="boolean[]" line="15"/>
            <scope line="16"/>
            <declaration name="RPN_NULL_VALUE" type="int" line="56"/>
            <declaration name="rpn_control" type="int" line="57"/>
            <declaration name="nrpn_control" type="int" line="58"/>
            <declaration name="portamento_time" type="double" line="59"/>
            <declaration name="portamento_lastnote" type="int[]" line="60"/>
            <declaration name="portamento_lastnote_ix" type="int" line="61"/>
            <declaration name="portamento" type="boolean" line="62"/>
            <declaration name="mono" type="boolean" line="63"/>
            <declaration name="mute" type="boolean" line="64"/>
            <declaration name="solo" type="boolean" line="65"/>
            <declaration name="solomute" type="boolean" line="66"/>
            <declaration name="control_mutex" type="Object" line="67"/>
            <declaration name="channel" type="int" line="68"/>
            <declaration name="voices" type="SoftVoice[]" line="69"/>
            <declaration name="bank" type="int" line="70"/>
            <declaration name="program" type="int" line="71"/>
            <declaration name="synthesizer" type="SoftSynthesizer" line="72"/>
            <declaration name="mainmixer" type="SoftMainMixer" line="73"/>
            <declaration name="polypressure" type="int[]" line="74"/>
            <declaration name="channelpressure" type="int" line="75"/>
            <declaration name="controller" type="int[]" line="76"/>
            <declaration name="pitchbend" type="int" line="77"/>
            <declaration name="co_midi_pitch" type="double[]" line="78"/>
            <declaration name="co_midi_channel_pressure" type="double[]" line="79"/>
            <declaration name="tuning" type="SoftTuning" line="80"/>
            <declaration name="tuning_bank" type="int" line="81"/>
            <declaration name="tuning_program" type="int" line="82"/>
            <declaration name="current_instrument" type="SoftInstrument" line="83"/>
            <declaration name="current_mixer" type="ModelChannelMixer" line="84"/>
            <declaration name="current_director" type="ModelDirector" line="85"/>
            <declaration name="cds_control_number" type="int" line="86"/>
            <declaration name="cds_control_connections" type="ModelConnectionBlock[]" line="87"/>
            <declaration name="cds_channelpressure_connections" type="ModelConnectionBlock[]" line="88"/>
            <declaration name="cds_polypressure_connections" type="ModelConnectionBlock[]" line="89"/>
            <declaration name="sustain" type="boolean" line="90"/>
            <declaration name="keybasedcontroller_active" type="boolean[][]" line="91"/>
            <declaration name="keybasedcontroller_value" type="double[][]" line="92"/>
            <class name="MidiControlObject" line="93">
                <implements interface="SoftControl"/>
                <declaration name="pitch" type="double[]" line="94"/>
                <declaration name="channel_pressure" type="double[]" line="95"/>
                <declaration name="poly_pressure" type="double[]" line="96"/>
                <method name="get" type="double[]" line="97">
                    <params>
                        <param name="instance" type="int"/>
                        <param name="name" type="String"/>
                    </params>
                </method>
            </class>
            <declaration name="co_midi" type="SoftControl[]" line="105"/>
            <scope line="106">
                <scope line="107"/>
            </scope>
            <declaration name="co_midi_cc_cc" type="double[][]" line="111"/>
            <declaration name="co_midi_cc" type="SoftControl" line="112"/>
            <anonymous_class line="112">
                <declaration name="cc" type="double[][]" line="113"/>
                <method name="get" type="double[]" line="114">
                    <params>
                        <param name="instance" type="int"/>
                        <param name="name" type="String"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="co_midi_rpn_rpn_i" type="Map&amp;lt;Integer,int[]&amp;gt;" line="120"/>
            <declaration name="co_midi_rpn_rpn" type="Map&amp;lt;Integer,double[]&amp;gt;" line="121"/>
            <declaration name="co_midi_rpn" type="SoftControl" line="122"/>
            <anonymous_class line="122">
                <declaration name="rpn" type="Map&amp;lt;Integer,double[]&amp;gt;" line="123"/>
                <method name="get" type="double[]" line="124">
                    <params>
                        <param name="instance" type="int"/>
                        <param name="name" type="String"/>
                    </params>
                    <declaration name="iname" type="int" line="126"/>
                    <declaration name="v" type="double[]" line="127"/>
                    <scope line="128"/>
                </method>
            </anonymous_class>
            <declaration name="co_midi_nrpn_nrpn_i" type="Map&amp;lt;Integer,int[]&amp;gt;" line="136"/>
            <declaration name="co_midi_nrpn_nrpn" type="Map&amp;lt;Integer,double[]&amp;gt;" line="137"/>
            <declaration name="co_midi_nrpn" type="SoftControl" line="138"/>
            <anonymous_class line="138">
                <declaration name="nrpn" type="Map&amp;lt;Integer,double[]&amp;gt;" line="139"/>
                <method name="get" type="double[]" line="140">
                    <params>
                        <param name="instance" type="int"/>
                        <param name="name" type="String"/>
                    </params>
                    <declaration name="iname" type="int" line="142"/>
                    <declaration name="v" type="double[]" line="143"/>
                    <scope line="144"/>
                </method>
            </anonymous_class>
            <method name="restrict7Bit" type="int" line="152">
                <params>
                    <param name="value" type="int"/>
                </params>
            </method>
            <method name="restrict14Bit" type="int" line="157">
                <params>
                    <param name="value" type="int"/>
                </params>
            </method>
            <method name="SoftChannel" type="constructor" line="162">
                <params>
                    <param name="synth" type="SoftSynthesizer"/>
                    <param name="channel" type="int"/>
                </params>
            </method>
            <method name="findFreeVoice" type="int" line="170">
                <params>
                    <param name="x" type="int"/>
                </params>
                <scope line="171"/>
                <declaration name="vmode" type="int" line="175"/>
                <scope line="176">
                    <declaration name="steal_channel" type="int" line="177"/>
                    <scope line="178">
                        <scope line="179">
                            <scope line="180"/>
                            <scope line="183">
                                <scope line="184"/>
                            </scope>
                        </scope>
                    </scope>
                    <declaration name="voiceNo" type="int" line="190"/>
                    <declaration name="v" type="SoftVoice" line="191"/>
                    <scope line="192">
                        <scope line="193">
                            <scope line="194">
                                <scope line="195"/>
                                <scope line="199"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="206">
                        <scope line="207">
                            <scope line="208">
                                <scope line="209">
                                    <scope line="210"/>
                                    <scope line="214"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="224">
                    <declaration name="voiceNo" type="int" line="225"/>
                    <declaration name="v" type="SoftVoice" line="226"/>
                    <scope line="227">
                        <scope line="228">
                            <scope line="229"/>
                            <scope line="233"/>
                        </scope>
                    </scope>
                    <scope line="239">
                        <scope line="240">
                            <scope line="241">
                                <scope line="242"/>
                                <scope line="246"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="initVoice" type="void" line="256">
                <params>
                    <param name="voice" type="SoftVoice"/>
                    <param name="p" type="SoftPerformer"/>
                    <param name="voiceID" type="int"/>
                    <param name="noteNumber" type="int"/>
                    <param name="velocity" type="int"/>
                    <param name="delay" type="int"/>
                    <param name="connectionBlocks" type="ModelConnectionBlock[]"/>
                    <param name="channelmixer" type="ModelChannelMixer"/>
                    <param name="releaseTriggered" type="boolean"/>
                </params>
                <scope line="257"/>
                <scope line="290"/>
                <scope line="295">
                    <scope line="296">
                        <scope line="297"/>
                    </scope>
                    <scope line="304">
                        <scope line="305"/>
                    </scope>
                </scope>
            </method>
            <method name="noteOn" type="void" line="313">
                <params>
                    <param name="noteNumber" type="int"/>
                    <param name="velocity" type="int"/>
                </params>
            </method>
            <method name="noteOn" type="void" line="316">
                <params>
                    <param name="noteNumber" type="int"/>
                    <param name="velocity" type="int"/>
                    <param name="delay" type="int"/>
                </params>
            </method>
            <method name="noteOn_internal" type="void" line="322">
                <params>
                    <param name="noteNumber" type="int"/>
                    <param name="velocity" type="int"/>
                    <param name="delay" type="int"/>
                </params>
                <scope line="323"/>
                <scope line="327">
                    <scope line="328">
                        <scope line="330">
                            <scope line="331"/>
                        </scope>
                    </scope>
                    <scope line="340">
                        <scope line="341">
                            <declaration name="n_found" type="boolean" line="342"/>
                            <scope line="343">
                                <scope line="344"/>
                            </scope>
                            <scope line="350"/>
                        </scope>
                        <scope line="355">
                            <declaration name="n_found" type="boolean" line="356"/>
                            <scope line="357">
                                <scope line="358"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="369"/>
                    <declaration name="tunedKey" type="int" line="381"/>
                </scope>
            </method>
            <method name="noteOff" type="void" line="390">
                <params>
                    <param name="noteNumber" type="int"/>
                    <param name="velocity" type="int"/>
                </params>
            </method>
            <method name="noteOff_internal" type="void" line="396">
                <params>
                    <param name="noteNumber" type="int"/>
                    <param name="velocity" type="int"/>
                </params>
                <scope line="397">
                    <scope line="398">
                        <scope line="399">
                            <scope line="400"/>
                        </scope>
                    </scope>
                    <scope line="407">
                        <scope line="408"/>
                        <scope line="411">
                            <declaration name="v" type="SoftVoice" line="412"/>
                        </scope>
                    </scope>
                    <scope line="423"/>
                    <declaration name="tunedKey" type="int" line="435"/>
                </scope>
            </method>
            <declaration name="lastVelocity" type="int[]" line="443"/>
            <declaration name="prevVoiceID" type="int" line="444"/>
            <declaration name="firstVoice" type="boolean" line="445"/>
            <declaration name="voiceNo" type="int" line="446"/>
            <declaration name="play_noteNumber" type="int" line="447"/>
            <declaration name="play_velocity" type="int" line="448"/>
            <declaration name="play_delay" type="int" line="449"/>
            <declaration name="play_releasetriggered" type="boolean" line="450"/>
            <method name="play" type="void" line="451">
                <params>
                    <param name="performerIndex" type="int"/>
                    <param name="connectionBlocks" type="ModelConnectionBlock[]"/>
                </params>
                <declaration name="noteNumber" type="int" line="452"/>
                <declaration name="velocity" type="int" line="453"/>
                <declaration name="delay" type="int" line="454"/>
                <declaration name="releasetriggered" type="boolean" line="455"/>
                <declaration name="p" type="SoftPerformer" line="456"/>
                <scope line="457">
                    <scope line="459">
                        <declaration name="x" type="int" line="460"/>
                        <scope line="461">
                            <scope line="462"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="noteOff" type="void" line="472">
                <params>
                    <param name="noteNumber" type="int"/>
                </params>
            </method>
            <method name="setPolyPressure" type="void" line="476">
                <params>
                    <param name="noteNumber" type="int"/>
                    <param name="pressure" type="int"/>
                </params>
                <scope line="480">
                    <scope line="484"/>
                </scope>
            </method>
            <method name="getPolyPressure" type="int" line="489">
                <params>
                    <param name="noteNumber" type="int"/>
                </params>
                <scope line="490"/>
            </method>
            <method name="setChannelPressure" type="void" line="494">
                <params>
                    <param name="pressure" type="int"/>
                </params>
                <scope line="497">
                    <scope line="501"/>
                </scope>
            </method>
            <method name="getChannelPressure" type="int" line="506">
                <scope line="507"/>
            </method>
            <method name="applyInstrumentCustomization" type="void" line="511">
                <scope line="512"/>
                <declaration name="src_instrument" type="ModelInstrument" line="515"/>
                <declaration name="performers" type="ModelPerformer[]" line="516"/>
                <declaration name="new_performers" type="ModelPerformer[]" line="517"/>
                <scope line="518">
                    <declaration name="performer" type="ModelPerformer" line="519"/>
                    <declaration name="new_performer" type="ModelPerformer" line="520"/>
                    <declaration name="connblocks" type="List&amp;lt;ModelConnectionBlock&amp;gt;" line="530"/>
                    <scope line="531">
                        <declaration name="cc" type="String" line="532"/>
                        <declaration name="iter" type="Iterator&amp;lt;ModelConnectionBlock&amp;gt;" line="533"/>
                        <scope line="534">
                            <declaration name="conn" type="ModelConnectionBlock" line="535"/>
                            <declaration name="sources" type="ModelSource[]" line="536"/>
                            <declaration name="removeok" type="boolean" line="537"/>
                            <scope line="538">
                                <scope line="539">
                                    <declaration name="src" type="ModelSource" line="540"/>
                                    <scope line="541"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="550">
                        <declaration name="iter" type="Iterator&amp;lt;ModelConnectionBlock&amp;gt;" line="551"/>
                        <scope line="552">
                            <declaration name="conn" type="ModelConnectionBlock" line="553"/>
                            <declaration name="sources" type="ModelSource[]" line="554"/>
                            <declaration name="removeok" type="boolean" line="555"/>
                            <scope line="556">
                                <scope line="557">
                                    <declaration name="src" type="ModelSource" line="558"/>
                                    <scope line="559"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="568">
                        <declaration name="iter" type="Iterator&amp;lt;ModelConnectionBlock&amp;gt;" line="569"/>
                        <scope line="570">
                            <declaration name="conn" type="ModelConnectionBlock" line="571"/>
                            <declaration name="sources" type="ModelSource[]" line="572"/>
                            <declaration name="removeok" type="boolean" line="573"/>
                            <scope line="574">
                                <scope line="575">
                                    <declaration name="srcid" type="ModelIdentifier" line="576"/>
                                    <scope line="577"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="createModelConnections" type="ModelConnectionBlock[]" line="589">
                <params>
                    <param name="sid" type="ModelIdentifier"/>
                    <param name="destination" type="int[]"/>
                    <param name="range" type="int[]"/>
                </params>
                <declaration name="conns" type="List&amp;lt;ModelConnectionBlock&amp;gt;" line="590"/>
                <scope line="591">
                    <declaration name="d" type="int" line="592"/>
                    <declaration name="r" type="int" line="593"/>
                    <scope line="594">
                        <declaration name="scale" type="double" line="595"/>
                        <declaration name="conn" type="ModelConnectionBlock" line="596"/>
                    </scope>
                    <scope line="599">
                        <declaration name="scale" type="double" line="600"/>
                        <declaration name="conn" type="ModelConnectionBlock" line="601"/>
                        <scope line="602"/>
                        <scope line="605"/>
                    </scope>
                    <scope line="610">
                        <declaration name="scale" type="double" line="611"/>
                        <anonymous_class line="612">
                            <declaration name="s" type="double" line="613"/>
                            <method name="transform" type="double" line="614">
                                <params>
                                    <param name="value" type="double"/>
                                </params>
                            </method>
                        </anonymous_class>
                        <declaration name="mt" type="ModelTransform" line="612"/>
                        <declaration name="conn" type="ModelConnectionBlock" line="622"/>
                    </scope>
                    <scope line="625">
                        <declaration name="scale" type="double" line="626"/>
                        <declaration name="conn" type="ModelConnectionBlock" line="627"/>
                    </scope>
                    <scope line="630">
                        <declaration name="scale" type="double" line="631"/>
                        <declaration name="conn" type="ModelConnectionBlock" line="632"/>
                    </scope>
                    <scope line="635">
                        <declaration name="scale" type="double" line="636"/>
                        <anonymous_class line="637">
                            <declaration name="s" type="double" line="638"/>
                            <method name="transform" type="double" line="639">
                                <params>
                                    <param name="value" type="double"/>
                                </params>
                            </method>
                        </anonymous_class>
                        <declaration name="mt" type="ModelTransform" line="637"/>
                        <declaration name="conn" type="ModelConnectionBlock" line="644"/>
                    </scope>
                </scope>
            </method>
            <method name="mapPolyPressureToDestination" type="void" line="650">
                <params>
                    <param name="destination" type="int[]"/>
                    <param name="range" type="int[]"/>
                </params>
                <scope line="652"/>
            </method>
            <method name="mapChannelPressureToDestination" type="void" line="658">
                <params>
                    <param name="destination" type="int[]"/>
                    <param name="range" type="int[]"/>
                </params>
                <scope line="660"/>
            </method>
            <method name="mapControlToDestination" type="void" line="666">
                <params>
                    <param name="control" type="int"/>
                    <param name="destination" type="int[]"/>
                    <param name="range" type="int[]"/>
                </params>
                <scope line="667"/>
                <scope line="673"/>
            </method>
            <method name="controlChangePerNote" type="void" line="679">
                <params>
                    <param name="noteNumber" type="int"/>
                    <param name="controller" type="int"/>
                    <param name="value" type="int"/>
                </params>
                <scope line="680"/>
                <scope line="684"/>
                <scope line="690"/>
                <scope line="693"/>
                <scope line="697"/>
                <scope line="700"/>
                <scope line="703"/>
            </method>
            <method name="getControlPerNote" type="int" line="707">
                <params>
                    <param name="noteNumber" type="int"/>
                    <param name="controller" type="int"/>
                </params>
            </method>
            <method name="controlChange" type="void" line="713">
                <params>
                    <param name="controller" type="int"/>
                    <param name="value" type="int"/>
                </params>
                <scope line="717">
                    <declaration name="x" type="double" line="720"/>
                    <declaration name="val" type="int" line="731"/>
                    <scope line="732">
                        <declaration name="val_i" type="int[]" line="733"/>
                    </scope>
                    <scope line="736">
                        <declaration name="val_i" type="int[]" line="737"/>
                    </scope>
                    <scope line="742">
                        <declaration name="step" type="int" line="743"/>
                    </scope>
                    <declaration name="on" type="boolean" line="752"/>
                    <scope line="753">
                        <scope line="755">
                            <scope line="756">
                                <scope line="757">
                                    <scope line="759"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="766"/>
                    </scope>
                    <scope line="778">
                        <scope line="779">
                            <scope line="780"/>
                        </scope>
                    </scope>
                    <scope line="785">
                        <scope line="786">
                            <scope line="787">
                                <scope line="789"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="841"/>
                    <scope line="845"/>
                </scope>
            </method>
            <method name="getController" type="int" line="854">
                <params>
                    <param name="controller" type="int"/>
                </params>
                <scope line="855"/>
            </method>
            <method name="tuningChange" type="void" line="859">
                <params>
                    <param name="program" type="int"/>
                </params>
            </method>
            <method name="tuningChange" type="void" line="862">
                <params>
                    <param name="bank" type="int"/>
                    <param name="program" type="int"/>
                </params>
                <scope line="863"/>
            </method>
            <method name="programChange" type="void" line="867">
                <params>
                    <param name="program" type="int"/>
                </params>
            </method>
            <method name="programChange" type="void" line="870">
                <params>
                    <param name="bank" type="int"/>
                    <param name="program" type="int"/>
                </params>
                <scope line="873">
                    <scope line="875"/>
                </scope>
            </method>
            <method name="getProgram" type="int" line="882">
                <scope line="883"/>
            </method>
            <method name="setPitchBend" type="void" line="887">
                <params>
                    <param name="bend" type="int"/>
                </params>
                <scope line="890"/>
            </method>
            <method name="getPitchBend" type="int" line="897">
                <scope line="898"/>
            </method>
            <method name="nrpnChange" type="void" line="902">
                <params>
                    <param name="controller" type="int"/>
                    <param name="value" type="int"/>
                </params>
                <scope line="903"/>
                <declaration name="val_i" type="int[]" line="918"/>
                <declaration name="val_d" type="double[]" line="919"/>
                <scope line="920"/>
                <scope line="924"/>
            </method>
            <method name="rpnChange" type="void" line="932">
                <params>
                    <param name="controller" type="int"/>
                    <param name="value" type="int"/>
                </params>
                <scope line="933"/>
                <scope line="937"/>
                <declaration name="val_i" type="int[]" line="940"/>
                <declaration name="val_d" type="double[]" line="941"/>
                <scope line="942"/>
                <scope line="946"/>
            </method>
            <method name="resetAllControllers" type="void" line="954"/>
            <method name="resetAllControllers" type="void" line="957">
                <params>
                    <param name="allControls" type="boolean"/>
                </params>
                <scope line="958">
                    <scope line="960"/>
                    <scope line="965"/>
                    <scope line="982">
                        <scope line="988"/>
                    </scope>
                </scope>
            </method>
            <method name="allNotesOff" type="void" line="1002">
                <scope line="1004">
                    <scope line="1005"/>
                </scope>
            </method>
            <method name="allSoundOff" type="void" line="1010">
                <scope line="1012"/>
            </method>
            <method name="localControl" type="boolean" line="1016">
                <params>
                    <param name="on" type="boolean"/>
                </params>
            </method>
            <method name="setMono" type="void" line="1019">
                <params>
                    <param name="on" type="boolean"/>
                </params>
                <scope line="1021"/>
            </method>
            <method name="getMono" type="boolean" line="1026">
                <scope line="1027"/>
            </method>
            <method name="setOmni" type="void" line="1031">
                <params>
                    <param name="on" type="boolean"/>
                </params>
            </method>
            <method name="getOmni" type="boolean" line="1035"/>
            <method name="setMute" type="void" line="1038">
                <params>
                    <param name="mute" type="boolean"/>
                </params>
                <scope line="1040"/>
            </method>
            <method name="getMute" type="boolean" line="1045">
                <scope line="1046"/>
            </method>
            <method name="setSolo" type="void" line="1050">
                <params>
                    <param name="soloState" type="boolean"/>
                </params>
                <scope line="1052">
                    <declaration name="soloinuse" type="boolean" line="1054"/>
                    <scope line="1055">
                        <scope line="1056"/>
                    </scope>
                    <scope line="1061"/>
                </scope>
            </method>
            <method name="setSoloMute" type="void" line="1068">
                <params>
                    <param name="mute" type="boolean"/>
                </params>
                <scope line="1069"/>
            </method>
            <method name="getSolo" type="boolean" line="1075">
                <scope line="1076"/>
            </method>
        </class>
    </source>