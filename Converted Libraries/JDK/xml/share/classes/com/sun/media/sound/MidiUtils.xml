<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="javax.sound.midi"/>
        <import package="java.util.ArrayList"/>
        <class name="MidiUtils" line="4">
            <javadoc line="4">
                Some utilities for MIDI (some stuff is used from javax.sound.midi)                
                <author>
                    Florian Bomers                    
                </author>
            </javadoc>
            <declaration name="DEFAULT_TEMPO_MPQ" type="int" line="9"/>
            <declaration name="META_END_OF_TRACK_TYPE" type="int" line="10"/>
            <declaration name="META_TEMPO_TYPE" type="int" line="11"/>
            <javadoc line="12">
                return true if the passed message is Meta End Of Track                
            </javadoc>
            <method name="isMetaEndOfTrack" type="boolean" line="15">
                <params>
                    <param name="midiMsg" type="MidiMessage"/>
                </params>
                <scope line="16"/>
                <declaration name="msg" type="byte[]" line="19"/>
            </method>
            <javadoc line="22">
                return if the given message is a meta tempo message                
            </javadoc>
            <method name="isMetaTempo" type="boolean" line="25">
                <params>
                    <param name="midiMsg" type="MidiMessage"/>
                </params>
                <scope line="26"/>
                <declaration name="msg" type="byte[]" line="29"/>
            </method>
            <javadoc line="32">
                parses this message for a META tempo message and returns
                  the tempo in MPQ, or -1 if this isn&apos;t a tempo message                
            </javadoc>
            <method name="getTempoMPQ" type="int" line="36">
                <params>
                    <param name="midiMsg" type="MidiMessage"/>
                </params>
                <scope line="37"/>
                <declaration name="msg" type="byte[]" line="40"/>
                <scope line="41"/>
                <declaration name="tempo" type="int" line="44"/>
            </method>
            <javadoc line="47">
                converts&lt;br&gt;
                  1 - MPQ-Tempo to BPM tempo&lt;br&gt;
                  2 - BPM tempo to MPQ tempo&lt;br&gt;                
            </javadoc>
            <method name="convertTempo" type="double" line="52">
                <params>
                    <param name="tempo" type="double"/>
                </params>
                <scope line="53"/>
            </method>
            <javadoc line="58">
                convert tick to microsecond with given tempo.
                  Does not take tempo changes into account.
                  Does not work for SMPTE timing!                
            </javadoc>
            <method name="ticks2microsec" type="long" line="63">
                <params>
                    <param name="tick" type="long"/>
                    <param name="tempoMPQ" type="double"/>
                    <param name="resolution" type="int"/>
                </params>
            </method>
            <javadoc line="66">
                convert tempo to microsecond with given tempo
                  Does not take tempo changes into account.
                  Does not work for SMPTE timing!                
            </javadoc>
            <method name="microsec2ticks" type="long" line="71">
                <params>
                    <param name="us" type="long"/>
                    <param name="tempoMPQ" type="double"/>
                    <param name="resolution" type="int"/>
                </params>
            </method>
            <javadoc line="74">
                Given a tick, convert to microsecond                
                <param>
                    cache tempo info and current tempo                    
                </param>
            </javadoc>
            <method name="tick2microsecond" type="long" line="78">
                <params>
                    <param name="seq" type="Sequence"/>
                    <param name="tick" type="long"/>
                    <param name="cache" type="TempoCache"/>
                </params>
                <scope line="79">
                    <declaration name="seconds" type="double" line="80"/>
                </scope>
                <scope line="83"/>
                <declaration name="resolution" type="int" line="86"/>
                <declaration name="ticks" type="long[]" line="87"/>
                <declaration name="tempos" type="int[]" line="88"/>
                <declaration name="cacheCount" type="int" line="89"/>
                <declaration name="snapshotIndex" type="int" line="90"/>
                <declaration name="snapshotMicro" type="int" line="91"/>
                <declaration name="us" type="long" line="92"/>
                <scope line="93"/>
                <scope line="97">
                    <declaration name="i" type="int" line="98"/>
                    <scope line="99"/>
                </scope>
            </method>
            <javadoc line="110">
                Given a microsecond time, convert to tick.
                  returns tempo at the given time in cache.getCurrTempoMPQ                
            </javadoc>
            <method name="microsecond2tick" type="long" line="114">
                <params>
                    <param name="seq" type="Sequence"/>
                    <param name="micros" type="long"/>
                    <param name="cache" type="TempoCache"/>
                </params>
                <scope line="115">
                    <declaration name="dTick" type="double" line="116"/>
                    <declaration name="tick" type="long" line="117"/>
                    <scope line="118"/>
                </scope>
                <scope line="123"/>
                <declaration name="ticks" type="long[]" line="126"/>
                <declaration name="tempos" type="int[]" line="127"/>
                <declaration name="cacheCount" type="int" line="128"/>
                <declaration name="resolution" type="int" line="129"/>
                <declaration name="us" type="long" line="130"/>
                <declaration name="tick" type="long" line="131"/>
                <declaration name="newReadPos" type="int" line="132"/>
                <declaration name="i" type="int" line="133"/>
                <scope line="134">
                    <scope line="135">
                        <declaration name="nextTime" type="long" line="136"/>
                        <scope line="137"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="149">
                Binary search for the event indexes of the track                
                <param>
                    tick - tick number of index to be found in array                    
                </param>
                <return>
                    index in track which is on or after "tick".
                      if no entries are found that follow after tick, track.size() is returned                    
                </return>
            </javadoc>
            <method name="tick2index" type="int" line="155">
                <params>
                    <param name="track" type="Track"/>
                    <param name="tick" type="long"/>
                </params>
                <declaration name="ret" type="int" line="156"/>
                <scope line="157">
                    <declaration name="low" type="int" line="158"/>
                    <declaration name="high" type="int" line="159"/>
                    <scope line="160">
                        <declaration name="t" type="long" line="162"/>
                        <scope line="163"/>
                        <scope line="166">
                            <scope line="167"/>
                        </scope>
                        <scope line="173"/>
                    </scope>
                </scope>
            </method>
            <class name="TempoCache" line="180">
                <declaration name="ticks" type="long[]" line="181"/>
                <declaration name="tempos" type="int[]" line="182"/>
                <declaration name="snapshotIndex" type="int" line="183"/>
                <declaration name="snapshotMicro" type="int" line="184"/>
                <declaration name="currTempo" type="int" line="185"/>
                <declaration name="firstTempoIsFake" type="boolean" line="186"/>
                <method name="TempoCache" type="constructor" line="187"/>
                <method name="TempoCache" type="constructor" line="194">
                    <params>
                        <param name="seq" type="Sequence"/>
                    </params>
                </method>
                <method name="refresh" type="void" line="198">
                    <params>
                        <param name="seq" type="Sequence"/>
                    </params>
                    <declaration name="list" type="ArrayList" line="199"/>
                    <declaration name="tracks" type="Track[]" line="200"/>
                    <scope line="201">
                        <declaration name="track" type="Track" line="202"/>
                        <declaration name="c" type="int" line="203"/>
                        <scope line="204">
                            <declaration name="ev" type="MidiEvent" line="205"/>
                            <declaration name="msg" type="MidiMessage" line="206"/>
                            <scope line="207"/>
                        </scope>
                    </scope>
                    <declaration name="size" type="int" line="212"/>
                    <scope line="214"/>
                    <declaration name="e" type="int" line="220"/>
                    <scope line="221"/>
                    <scope line="226">
                        <declaration name="evt" type="MidiEvent" line="227"/>
                    </scope>
                </method>
                <method name="getCurrTempoMPQ" type="int" line="234"/>
                <method name="getTempoMPQAt" type="float" line="237">
                    <params>
                        <param name="tick" type="long"/>
                    </params>
                </method>
                <method name="getTempoMPQAt" type="float" line="240">
                    <params>
                        <param name="tick" type="long"/>
                        <param name="startTempoMPQ" type="float"/>
                    </params>
                    <scope line="241">
                        <scope line="242">
                            <scope line="244"/>
                        </scope>
                    </scope>
                </method>
            </class>
        </class>
    </source>