<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.io.DataInputStream"/>
        <import package="java.io.DataOutputStream"/>
        <import package="java.io.PipedInputStream"/>
        <import package="java.io.PipedOutputStream"/>
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.ByteArrayInputStream"/>
        <import package="java.io.SequenceInputStream"/>
        <import package="java.io.File"/>
        <import package="java.io.FileOutputStream"/>
        <import package="java.io.BufferedOutputStream"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.lang.IllegalArgumentException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.util.Vector"/>
        <import package="javax.sound.midi.MidiFileFormat"/>
        <import package="javax.sound.midi.InvalidMidiDataException"/>
        <import package="javax.sound.midi.MidiEvent"/>
        <import package="javax.sound.midi.MetaMessage"/>
        <import package="javax.sound.midi.MidiMessage"/>
        <import package="javax.sound.midi.Sequence"/>
        <import package="javax.sound.midi.ShortMessage"/>
        <import package="javax.sound.midi.SysexMessage"/>
        <import package="javax.sound.midi.Track"/>
        <import package="javax.sound.midi.spi.MidiFileWriter"/>
        <class name="StandardMidiFileWriter" line="27">
            <extends class="MidiFileWriter"/>
            <javadoc line="27">
                MIDI file writer.                
                <author>
                    Kara Kytle                    
                </author>
                <author>
                    Jan Borgersen                    
                </author>
            </javadoc>
            <declaration name="MThd_MAGIC" type="int" line="33"/>
            <declaration name="MTrk_MAGIC" type="int" line="34"/>
            <declaration name="ONE_BYTE" type="int" line="35"/>
            <declaration name="TWO_BYTE" type="int" line="36"/>
            <declaration name="SYSEX" type="int" line="37"/>
            <declaration name="META" type="int" line="38"/>
            <declaration name="ERROR" type="int" line="39"/>
            <declaration name="IGNORE" type="int" line="40"/>
            <declaration name="MIDI_TYPE_0" type="int" line="41"/>
            <declaration name="MIDI_TYPE_1" type="int" line="42"/>
            <declaration name="bufferSize" type="int" line="43"/>
            <declaration name="tddos" type="DataOutputStream" line="44"/>
            <declaration name="types" type="int" line="45"/>
            <javadoc line="45">
                MIDI parser types                
            </javadoc>
            <javadoc line="49">
                new                
            </javadoc>
            <method name="getMidiFileTypes" type="int[]" line="52">
                <declaration name="localArray" type="int[]" line="53"/>
            </method>
            <javadoc line="57">
                Obtains the file types that this provider can write from the
                  sequence specified.                
                <param>
                    sequence the sequence for which midi file type support
                      is queried                    
                </param>
                <return>
                    array of file types.  If no file types are supported,
                      returns an array of length 0.                    
                </return>
            </javadoc>
            <method name="getMidiFileTypes" type="int[]" line="65">
                <params>
                    <param name="sequence" type="Sequence"/>
                </params>
                <declaration name="typesArray" type="int" line="66"/>
                <declaration name="tracks" type="Track" line="67"/>
                <scope line="68"/>
                <scope line="73"/>
            </method>
            <method name="isFileTypeSupported" type="boolean" line="79">
                <params>
                    <param name="type" type="int"/>
                </params>
                <scope line="80">
                    <scope line="81"/>
                </scope>
            </method>
            <method name="write" type="int" line="87">
                <params>
                    <param name="in" type="Sequence"/>
                    <param name="type" type="int"/>
                    <param name="out" type="OutputStream"/>
                </params>
                <declaration name="buffer" type="byte[]" line="88"/>
                <declaration name="bytesRead" type="int" line="89"/>
                <declaration name="bytesWritten" type="long" line="90"/>
                <scope line="91"/>
                <declaration name="fileStream" type="InputStream" line="94"/>
                <scope line="95"/>
                <scope line="99"/>
            </method>
            <method name="write" type="int" line="105">
                <params>
                    <param name="in" type="Sequence"/>
                    <param name="type" type="int"/>
                    <param name="out" type="File"/>
                </params>
                <declaration name="fos" type="FileOutputStream" line="106"/>
                <declaration name="bytesWritten" type="int" line="107"/>
            </method>
            <method name="getFileStream" type="InputStream" line="111">
                <params>
                    <param name="type" type="int"/>
                    <param name="sequence" type="Sequence"/>
                </params>
                <declaration name="tracks" type="Track" line="112"/>
                <declaration name="bytesBuilt" type="int" line="113"/>
                <declaration name="headerLength" type="int" line="114"/>
                <declaration name="length" type="int" line="115"/>
                <declaration name="timeFormat" type="int" line="116"/>
                <declaration name="divtype" type="float" line="117"/>
                <declaration name="hpos" type="PipedOutputStream" line="118"/>
                <declaration name="hdos" type="DataOutputStream" line="119"/>
                <declaration name="headerStream" type="PipedInputStream" line="120"/>
                <declaration name="trackStreams" type="InputStream" line="121"/>
                <declaration name="trackStream" type="InputStream" line="122"/>
                <declaration name="fStream" type="InputStream" line="123"/>
                <scope line="124">
                    <scope line="125"/>
                </scope>
                <scope line="129">
                    <scope line="130"/>
                </scope>
                <scope line="134">
                    <scope line="135"/>
                    <scope line="138"/>
                    <scope line="141"/>
                </scope>
                <declaration name="trackCount" type="int" line="146"/>
                <scope line="147">
                    <scope line="148"/>
                    <scope line="152"/>
                </scope>
                <scope line="156"/>
                <scope line="159">
                    <scope line="161">
                        <scope line="162"/>
                    </scope>
                </scope>
                <scope line="167"/>
                <scope line="175"/>
                <scope line="178"/>
                <scope line="183"/>
                <scope line="186"/>
                <scope line="190"/>
                <scope line="194"/>
                <scope line="198"/>
                <scope line="202"/>
            </method>
            <javadoc line="211">
                Returns ONE_BYTE, TWO_BYTE, SYSEX, META,
                  ERROR, or IGNORE (i.e. invalid for a MIDI file)                
            </javadoc>
            <method name="getType" type="int" line="215">
                <params>
                    <param name="byteValue" type="int"/>
                </params>
                <scope line="216"/>
            </method>
            <declaration name="mask" type="long" line="239"/>
            <method name="writeVarInt" type="int" line="240">
                <params>
                    <param name="value" type="long"/>
                </params>
                <declaration name="len" type="int" line="241"/>
                <declaration name="shift" type="int" line="242"/>
                <scope line="244"/>
            </method>
            <method name="writeTrack" type="InputStream" line="252">
                <params>
                    <param name="track" type="Track"/>
                    <param name="type" type="int"/>
                </params>
                <declaration name="bytesWritten" type="int" line="253"/>
                <declaration name="lastBytesWritten" type="int" line="254"/>
                <declaration name="size" type="int" line="255"/>
                <declaration name="thpos" type="PipedOutputStream" line="256"/>
                <declaration name="thdos" type="DataOutputStream" line="257"/>
                <declaration name="thpis" type="PipedInputStream" line="258"/>
                <declaration name="tdbos" type="ByteArrayOutputStream" line="259"/>
                <declaration name="tdbis" type="ByteArrayInputStream" line="261"/>
                <declaration name="fStream" type="SequenceInputStream" line="262"/>
                <declaration name="currentTick" type="long" line="263"/>
                <declaration name="deltaTick" type="long" line="264"/>
                <declaration name="eventTick" type="long" line="265"/>
                <declaration name="runningStatus" type="int" line="266"/>
                <scope line="267">
                    <declaration name="event" type="MidiEvent" line="268"/>
                    <declaration name="status" type="int" line="269"/>
                    <declaration name="eventtype" type="int" line="270"/>
                    <declaration name="metatype" type="int" line="271"/>
                    <declaration name="data1" type="int" line="272"/>
                    <declaration name="length" type="int" line="273"/>
                    <declaration name="data" type="byte" line="274"/>
                    <declaration name="shortMessage" type="ShortMessage" line="275"/>
                    <declaration name="metaMessage" type="MetaMessage" line="276"/>
                    <declaration name="sysexMessage" type="SysexMessage" line="277"/>
                    <scope line="288"/>
                    <scope line="301"/>
                </scope>
            </method>
        </class>
    </source>