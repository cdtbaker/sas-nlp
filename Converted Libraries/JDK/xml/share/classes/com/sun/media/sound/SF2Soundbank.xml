<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.io.File"/>
        <import package="java.io.FileInputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.net.URL"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="javax.sound.midi.Instrument"/>
        <import package="javax.sound.midi.Patch"/>
        <import package="javax.sound.midi.Soundbank"/>
        <import package="javax.sound.midi.SoundbankResource"/>
        <class name="SF2Soundbank" line="44">
            <comment line="56">
                version of the Sound Font RIFF file                
            </comment>
            <comment line="59">
                target Sound Engine                
            </comment>
            <comment line="61">
                Sound Font Bank Name                
            </comment>
            <comment line="63">
                Sound ROM Name                
            </comment>
            <comment line="65">
                Sound ROM Version                
            </comment>
            <comment line="68">
                Date of Creation of the Bank                
            </comment>
            <comment line="70">
                Sound Designers and Engineers for the Bank                
            </comment>
            <comment line="72">
                Product for which the Bank was intended                
            </comment>
            <comment line="74">
                Copyright message                
            </comment>
            <comment line="76">
                Comments                
            </comment>
            <comment line="78">
                The SoundFont tools used to create and alter the bank                
            </comment>
            <comment line="80">
                The Sample Data loaded from the SoundFont                
            </comment>
            <implements interface="Soundbank"/>
            <javadoc line="44">
                A SoundFont 2.04 soundbank reader.
                  Based on SoundFont 2.04 specification from:
                  &lt;p&gt;  http://developer.creative.com &lt;br&gt;
                  http://www.soundfont.com/ ;                
                <author>
                    Karl Helgason                    
                </author>
            </javadoc>
            <declaration name="major" type="int" line="56"/>
            <declaration name="minor" type="int" line="57"/>
            <declaration name="targetEngine" type="String" line="59"/>
            <declaration name="name" type="String" line="61"/>
            <declaration name="romName" type="String" line="63"/>
            <declaration name="romVersionMajor" type="int" line="65"/>
            <declaration name="romVersionMinor" type="int" line="66"/>
            <declaration name="creationDate" type="String" line="68"/>
            <declaration name="engineers" type="String" line="70"/>
            <declaration name="product" type="String" line="72"/>
            <declaration name="copyright" type="String" line="74"/>
            <declaration name="comments" type="String" line="76"/>
            <declaration name="tools" type="String" line="78"/>
            <declaration name="sampleData" type="ModelByteBuffer" line="80"/>
            <declaration name="sampleData24" type="ModelByteBuffer" line="81"/>
            <declaration name="sampleFile" type="File" line="82"/>
            <declaration name="largeFormat" type="boolean" line="83"/>
            <declaration name="instruments" type="List&lt;SF2Instrument&gt;" line="84"/>
            <declaration name="layers" type="List&lt;SF2Layer&gt;" line="85"/>
            <declaration name="samples" type="List&lt;SF2Sample&gt;" line="86"/>
            <method name="SF2Soundbank" type="constructor" line="88"/>
            <method name="SF2Soundbank" type="constructor" line="91">
                <params>
                    <param name="url" type="URL"/>
                </params>
                <declaration name="is" type="InputStream" line="93"/>
                <scope line="94"/>
                <scope line="96"/>
            </method>
            <method name="SF2Soundbank" type="constructor" line="101">
                <params>
                    <param name="file" type="File"/>
                </params>
                <declaration name="is" type="InputStream" line="104"/>
                <scope line="105"/>
                <scope line="107"/>
            </method>
            <method name="SF2Soundbank" type="constructor" line="112">
                <params>
                    <param name="inputstream" type="InputStream"/>
                </params>
            </method>
            <method name="readSoundbank" type="void" line="116">
                <params>
                    <param name="inputstream" type="InputStream"/>
                </params>
                <declaration name="riff" type="RIFFReader" line="117"/>
                <scope line="118"/>
                <scope line="122"/>
                <scope line="126">
                    <declaration name="chunk" type="RIFFReader" line="127"/>
                    <scope line="128"/>
                </scope>
            </method>
            <method name="readInfoChunk" type="void" line="139">
                <params>
                    <param name="riff" type="RIFFReader"/>
                </params>
                <scope line="140">
                    <declaration name="chunk" type="RIFFReader" line="141"/>
                    <declaration name="format" type="String" line="142"/>
                    <scope line="143"/>
                    <scope line="146"/>
                    <scope line="148"/>
                    <scope line="150"/>
                    <scope line="152"/>
                    <scope line="155"/>
                    <scope line="157"/>
                    <scope line="159"/>
                    <scope line="161"/>
                    <scope line="163"/>
                    <scope line="165"/>
                </scope>
            </method>
            <method name="readSdtaChunk" type="void" line="172">
                <params>
                    <param name="riff" type="RIFFReader"/>
                </params>
                <comment line="193">
                    chunk.read(sampleData);                    
                </comment>
                <comment line="202">
                    chunk.read(sampleData24);                    
                </comment>
                <scope line="173">
                    <declaration name="chunk" type="RIFFReader" line="174"/>
                    <scope line="175">
                        <scope line="176">
                            <declaration name="sampleData" type="byte[]" line="177"/>
                            <declaration name="read" type="int" line="179"/>
                            <declaration name="avail" type="int" line="180"/>
                            <scope line="181">
                                <scope line="182"/>
                                <scope line="185"/>
                            </scope>
                        </scope>
                        <scope line="193"/>
                    </scope>
                    <scope line="198">
                        <scope line="199">
                            <declaration name="sampleData24" type="byte[]" line="200"/>
                            <declaration name="read" type="int" line="203"/>
                            <declaration name="avail" type="int" line="204"/>
                            <scope line="205">
                                <scope line="206"/>
                                <scope line="209"/>
                            </scope>
                        </scope>
                        <scope line="216"/>
                    </scope>
                </scope>
            </method>
            <method name="readPdtaChunk" type="void" line="225">
                <params>
                    <param name="riff" type="RIFFReader"/>
                </params>
                <comment line="246">
                    Preset Header / Instrument                    
                </comment>
                <comment line="264">
                    Preset Zones / Instruments splits                    
                </comment>
                <comment line="269">
                    Skip first record                    
                </comment>
                <comment line="281">
                    Offset should be 0 (but just case)                    
                </comment>
                <comment line="313">
                    Preset Modulators / Split Modulators                    
                </comment>
                <comment line="326">
                    Preset Generators / Split Generators                    
                </comment>
                <comment line="335">
                    Instrument Header / Layers                    
                </comment>
                <comment line="348">
                    Instrument Zones / Layer splits                    
                </comment>
                <comment line="353">
                    Skip first record                    
                </comment>
                <comment line="365">
                    Offset should be 0 (but just case)                    
                </comment>
                <comment line="397">
                    Instrument Modulators / Split Modulators                    
                </comment>
                <comment line="410">
                    Instrument Generators / Split Generators                    
                </comment>
                <comment line="419">
                    Sample Headers                    
                </comment>
                <comment line="431">
                    sample.data = new ModelByteBuffer(sampleData, (int)(start2),
                    (int)((end - start)2));
                    if (sampleData24 != null)
                    sample.data24 = new ModelByteBuffer(sampleData24,
                    (int)start, (int)(end - start));                    
                </comment>
                <declaration name="presets" type="List&lt;SF2Instrument&gt;" line="227"/>
                <declaration name="presets_bagNdx" type="List&lt;Integer&gt;" line="228"/>
                <declaration name="presets_splits_gen" type="List&lt;SF2InstrumentRegion&gt;" line="229"/>
                <declaration name="presets_splits_mod" type="List&lt;SF2InstrumentRegion&gt;" line="231"/>
                <declaration name="instruments" type="List&lt;SF2Layer&gt;" line="234"/>
                <declaration name="instruments_bagNdx" type="List&lt;Integer&gt;" line="235"/>
                <declaration name="instruments_splits_gen" type="List&lt;SF2LayerRegion&gt;" line="236"/>
                <declaration name="instruments_splits_mod" type="List&lt;SF2LayerRegion&gt;" line="238"/>
                <scope line="241">
                    <declaration name="chunk" type="RIFFReader" line="242"/>
                    <declaration name="format" type="String" line="243"/>
                    <scope line="244">
                        <declaration name="count" type="int" line="248"/>
                        <scope line="249">
                            <declaration name="preset" type="SF2Instrument" line="250"/>
                        </scope>
                    </scope>
                    <scope line="262">
                        <declaration name="count" type="int" line="266"/>
                        <scope line="269">
                            <declaration name="gencount" type="int" line="270"/>
                            <declaration name="modcount" type="int" line="271"/>
                        </scope>
                        <declaration name="offset" type="int" line="279"/>
                        <scope line="281">
                            <declaration name="gencount" type="int" line="284"/>
                            <declaration name="modcount" type="int" line="285"/>
                        </scope>
                        <scope line="293">
                            <declaration name="zone_count" type="int" line="294"/>
                            <declaration name="preset" type="SF2Instrument" line="296"/>
                            <scope line="297">
                                <declaration name="gencount" type="int" line="300"/>
                                <declaration name="modcount" type="int" line="301"/>
                                <declaration name="split" type="SF2InstrumentRegion" line="302"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="311">
                        <scope line="313">
                            <declaration name="modulator" type="SF2Modulator" line="314"/>
                            <declaration name="split" type="SF2InstrumentRegion" line="320"/>
                        </scope>
                    </scope>
                    <scope line="324">
                        <scope line="326">
                            <declaration name="operator" type="int" line="327"/>
                            <declaration name="amount" type="short" line="328"/>
                            <declaration name="split" type="SF2InstrumentRegion" line="329"/>
                        </scope>
                    </scope>
                    <scope line="333">
                        <declaration name="count" type="int" line="337"/>
                        <scope line="338">
                            <declaration name="layer" type="SF2Layer" line="339"/>
                        </scope>
                    </scope>
                    <scope line="346">
                        <declaration name="count" type="int" line="350"/>
                        <scope line="353">
                            <declaration name="gencount" type="int" line="354"/>
                            <declaration name="modcount" type="int" line="355"/>
                        </scope>
                        <declaration name="offset" type="int" line="363"/>
                        <scope line="365">
                            <declaration name="gencount" type="int" line="368"/>
                            <declaration name="modcount" type="int" line="369"/>
                        </scope>
                        <scope line="377">
                            <declaration name="zone_count" type="int" line="378"/>
                            <declaration name="layer" type="SF2Layer" line="379"/>
                            <scope line="380">
                                <declaration name="gencount" type="int" line="383"/>
                                <declaration name="modcount" type="int" line="384"/>
                                <declaration name="split" type="SF2LayerRegion" line="385"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="395">
                        <scope line="397">
                            <declaration name="modulator" type="SF2Modulator" line="398"/>
                            <declaration name="split" type="SF2LayerRegion" line="404"/>
                        </scope>
                    </scope>
                    <scope line="408">
                        <scope line="410">
                            <declaration name="operator" type="int" line="411"/>
                            <declaration name="amount" type="short" line="412"/>
                            <declaration name="split" type="SF2LayerRegion" line="413"/>
                        </scope>
                    </scope>
                    <scope line="417">
                        <declaration name="count" type="int" line="421"/>
                        <scope line="422">
                            <declaration name="sample" type="SF2Sample" line="423"/>
                            <declaration name="start" type="long" line="425"/>
                            <declaration name="end" type="long" line="426"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="liter" type="Iterator&lt;SF2Layer&gt;" line="454"/>
                <scope line="455">
                    <declaration name="layer" type="SF2Layer" line="456"/>
                    <declaration name="siter" type="Iterator&lt;SF2LayerRegion&gt;" line="457"/>
                    <declaration name="globalsplit" type="SF2Region" line="458"/>
                    <scope line="459">
                        <declaration name="split" type="SF2LayerRegion" line="460"/>
                        <scope line="461">
                            <declaration name="sampleid" type="int" line="462"/>
                        </scope>
                        <scope line="466"/>
                    </scope>
                    <scope line="470">
                        <declaration name="gsplit" type="SF2GlobalRegion" line="472"/>
                    </scope>
                </scope>
                <declaration name="iiter" type="Iterator&lt;SF2Instrument&gt;" line="480"/>
                <scope line="481">
                    <declaration name="instrument" type="SF2Instrument" line="482"/>
                    <declaration name="siter" type="Iterator&lt;SF2InstrumentRegion&gt;" line="483"/>
                    <declaration name="globalsplit" type="SF2Region" line="484"/>
                    <scope line="485">
                        <declaration name="split" type="SF2InstrumentRegion" line="486"/>
                        <scope line="487">
                            <declaration name="instrumentid" type="int" line="488"/>
                        </scope>
                        <scope line="492"/>
                    </scope>
                    <scope line="497">
                        <declaration name="gsplit" type="SF2GlobalRegion" line="499"/>
                    </scope>
                </scope>
            </method>
            <method name="save" type="void" line="508">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="save" type="void" line="512">
                <params>
                    <param name="file" type="File"/>
                </params>
            </method>
            <method name="save" type="void" line="516">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
            </method>
            <method name="writeSoundbank" type="void" line="520">
                <params>
                    <param name="writer" type="RIFFWriter"/>
                </params>
            </method>
            <method name="writeInfoStringChunk" type="void" line="528">
                <params>
                    <param name="writer" type="RIFFWriter"/>
                    <param name="name" type="String"/>
                    <param name="value" type="String"/>
                </params>
                <declaration name="chunk" type="RIFFWriter" line="531"/>
                <declaration name="len" type="int" line="533"/>
            </method>
            <method name="writeInfo" type="void" line="540">
                <params>
                    <param name="writer" type="RIFFWriter"/>
                </params>
                <declaration name="ifil_chunk" type="RIFFWriter" line="546"/>
                <scope line="552">
                    <declaration name="iver_chunk" type="RIFFWriter" line="553"/>
                </scope>
            </method>
            <method name="writeSdtaChunk" type="void" line="567">
                <params>
                    <param name="writer" type="RIFFWriter"/>
                </params>
                <comment line="576">
                    smpl_chunk.write(data.array(),
                    data.arrayOffset(),
                    data.capacity());                    
                </comment>
                <comment line="600">
                    sm24_chunk.write(data.array(),
                    data.arrayOffset(),                    
                </comment>
                <declaration name="pad" type="byte[]" line="569"/>
                <declaration name="smpl_chunk" type="RIFFWriter" line="571"/>
                <scope line="572">
                    <declaration name="data" type="ModelByteBuffer" line="573"/>
                </scope>
                <scope line="589">
                    <declaration name="data24" type="ModelByteBuffer" line="590"/>
                </scope>
                <declaration name="sm24_chunk" type="RIFFWriter" line="595"/>
                <scope line="596">
                    <declaration name="data" type="ModelByteBuffer" line="597"/>
                </scope>
            </method>
            <method name="writeModulators" type="void" line="608">
                <params>
                    <param name="writer" type="RIFFWriter"/>
                    <param name="modulators" type="List<SF2Modulator>"/>
                </params>
                <scope line="609"/>
            </method>
            <method name="writeGenerators" type="void" line="619">
                <params>
                    <param name="writer" type="RIFFWriter"/>
                    <param name="generators" type="Map<Integer,Short>"/>
                </params>
                <declaration name="keyrange" type="Short" line="620"/>
                <declaration name="velrange" type="Short" line="621"/>
                <scope line="622"/>
                <scope line="626"/>
                <scope line="630"/>
            </method>
            <method name="writePdtaChunk" type="void" line="640">
                <params>
                    <param name="writer" type="RIFFWriter"/>
                </params>
                <comment line="680">
                    One generator is used to reference to instrument record                    
                </comment>
                <comment line="748">
                    One generator is used to reference to instrument record                    
                </comment>
                <declaration name="phdr_chunk" type="RIFFWriter" line="642"/>
                <declaration name="phdr_zone_count" type="int" line="643"/>
                <scope line="644"/>
                <declaration name="pbag_chunk" type="RIFFWriter" line="665"/>
                <declaration name="pbag_gencount" type="int" line="666"/>
                <declaration name="pbag_modcount" type="int" line="667"/>
                <scope line="668">
                    <scope line="669"/>
                    <scope line="675">
                        <scope line="678"/>
                    </scope>
                </scope>
                <declaration name="pmod_chunk" type="RIFFWriter" line="690"/>
                <scope line="691">
                    <scope line="692"/>
                </scope>
                <declaration name="pgen_chunk" type="RIFFWriter" line="701"/>
                <scope line="702">
                    <scope line="703"/>
                    <scope line="707">
                        <declaration name="ix" type="int" line="709"/>
                        <scope line="710"/>
                    </scope>
                </scope>
                <declaration name="inst_chunk" type="RIFFWriter" line="718"/>
                <declaration name="inst_zone_count" type="int" line="719"/>
                <scope line="720"/>
                <declaration name="ibag_chunk" type="RIFFWriter" line="731"/>
                <declaration name="ibag_gencount" type="int" line="732"/>
                <declaration name="ibag_modcount" type="int" line="733"/>
                <scope line="734">
                    <scope line="735"/>
                    <scope line="743">
                        <scope line="746"/>
                    </scope>
                </scope>
                <declaration name="imod_chunk" type="RIFFWriter" line="759"/>
                <scope line="760">
                    <scope line="761"/>
                </scope>
                <declaration name="igen_chunk" type="RIFFWriter" line="770"/>
                <scope line="771">
                    <scope line="772"/>
                    <scope line="776">
                        <declaration name="ix" type="int" line="778"/>
                        <scope line="779"/>
                    </scope>
                </scope>
                <declaration name="shdr_chunk" type="RIFFWriter" line="788"/>
                <declaration name="sample_pos" type="long" line="789"/>
                <scope line="790">
                    <declaration name="start" type="long" line="792"/>
                    <declaration name="end" type="long" line="794"/>
                    <declaration name="startLoop" type="long" line="795"/>
                    <declaration name="endLoop" type="long" line="796"/>
                </scope>
            </method>
            <method name="getName" type="String" line="817"/>
            <method name="getVersion" type="String" line="821"/>
            <method name="getVendor" type="String" line="825"/>
            <method name="getDescription" type="String" line="829"/>
            <method name="setName" type="void" line="833">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="setVendor" type="void" line="837">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="setDescription" type="void" line="841">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="getResources" type="SoundbankResource[]" line="845">
                <declaration name="resources" type="SoundbankResource[]" line="846"/>
                <declaration name="j" type="int" line="848"/>
            </method>
            <method name="getInstruments" type="SF2Instrument[]" line="856">
                <declaration name="inslist_array" type="SF2Instrument[]" line="857"/>
            </method>
            <method name="getLayers" type="SF2Layer[]" line="863"/>
            <method name="getSamples" type="SF2Sample[]" line="867"/>
            <method name="getInstrument" type="Instrument" line="871">
                <params>
                    <param name="patch" type="Patch"/>
                </params>
                <declaration name="program" type="int" line="872"/>
                <declaration name="bank" type="int" line="873"/>
                <declaration name="percussion" type="boolean" line="874"/>
                <scope line="877">
                    <declaration name="patch2" type="Patch" line="878"/>
                    <declaration name="program2" type="int" line="879"/>
                    <declaration name="bank2" type="int" line="880"/>
                    <scope line="881">
                        <declaration name="percussion2" type="boolean" line="882"/>
                    </scope>
                </scope>
            </method>
            <method name="getCreationDate" type="String" line="892"/>
            <method name="setCreationDate" type="void" line="896">
                <params>
                    <param name="creationDate" type="String"/>
                </params>
            </method>
            <method name="getProduct" type="String" line="900"/>
            <method name="setProduct" type="void" line="904">
                <params>
                    <param name="product" type="String"/>
                </params>
            </method>
            <method name="getRomName" type="String" line="908"/>
            <method name="setRomName" type="void" line="912">
                <params>
                    <param name="romName" type="String"/>
                </params>
            </method>
            <method name="getRomVersionMajor" type="int" line="916"/>
            <method name="setRomVersionMajor" type="void" line="920">
                <params>
                    <param name="romVersionMajor" type="int"/>
                </params>
            </method>
            <method name="getRomVersionMinor" type="int" line="924"/>
            <method name="setRomVersionMinor" type="void" line="928">
                <params>
                    <param name="romVersionMinor" type="int"/>
                </params>
            </method>
            <method name="getTargetEngine" type="String" line="932"/>
            <method name="setTargetEngine" type="void" line="936">
                <params>
                    <param name="targetEngine" type="String"/>
                </params>
            </method>
            <method name="getTools" type="String" line="940"/>
            <method name="setTools" type="void" line="944">
                <params>
                    <param name="tools" type="String"/>
                </params>
            </method>
            <method name="addResource" type="void" line="948">
                <params>
                    <param name="resource" type="SoundbankResource"/>
                </params>
            </method>
            <method name="removeResource" type="void" line="957">
                <params>
                    <param name="resource" type="SoundbankResource"/>
                </params>
            </method>
            <method name="addInstrument" type="void" line="966">
                <params>
                    <param name="resource" type="SF2Instrument"/>
                </params>
            </method>
            <method name="removeInstrument" type="void" line="970">
                <params>
                    <param name="resource" type="SF2Instrument"/>
                </params>
            </method>
        </class>
    </source>