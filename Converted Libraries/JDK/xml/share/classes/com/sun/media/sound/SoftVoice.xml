<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.io.IOException"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Map"/>
        <import package="javax.sound.midi.VoiceStatus"/>
        <class name="SoftVoice" line="34">
            <extends class="VoiceStatus"/>
            <comment line="93">
                Last value added to destination                
            </comment>
            <comment line="95">
                Pointer to source value                
            </comment>
            <comment line="97">
                Key-based override (if any)                
            </comment>
            <comment line="99">
                Pointer to destination value                
            </comment>
            <javadoc line="34">
                Software synthesizer voice class.                
                <author>
                    Karl Helgason                    
                </author>
            </javadoc>
            <declaration name="exclusiveClass" type="int" line="41"/>
            <declaration name="releaseTriggered" type="boolean" line="42"/>
            <declaration name="noteOn_noteNumber" type="int" line="43"/>
            <declaration name="noteOn_velocity" type="int" line="44"/>
            <declaration name="noteOff_velocity" type="int" line="45"/>
            <declaration name="delay" type="int" line="46"/>
            <declaration name="channelmixer" type="ModelChannelMixer" line="47"/>
            <declaration name="tunedKey" type="double" line="48"/>
            <declaration name="tuning" type="SoftTuning" line="49"/>
            <declaration name="stealer_channel" type="SoftChannel" line="50"/>
            <declaration name="stealer_extendedConnectionBlocks" type="ModelConnectionBlock[]" line="51"/>
            <declaration name="stealer_performer" type="SoftPerformer" line="52"/>
            <declaration name="stealer_channelmixer" type="ModelChannelMixer" line="53"/>
            <declaration name="stealer_voiceID" type="int" line="54"/>
            <declaration name="stealer_noteNumber" type="int" line="55"/>
            <declaration name="stealer_velocity" type="int" line="56"/>
            <declaration name="stealer_releaseTriggered" type="boolean" line="57"/>
            <declaration name="voiceID" type="int" line="58"/>
            <declaration name="sustain" type="boolean" line="59"/>
            <declaration name="sostenuto" type="boolean" line="60"/>
            <declaration name="portamento" type="boolean" line="61"/>
            <declaration name="filter_left" type="SoftFilter" line="62"/>
            <declaration name="filter_right" type="SoftFilter" line="63"/>
            <declaration name="eg" type="SoftProcess" line="64"/>
            <declaration name="lfo" type="SoftProcess" line="65"/>
            <declaration name="objects" type="Map&lt;String,SoftControl&gt;" line="66"/>
            <declaration name="synthesizer" type="SoftSynthesizer" line="68"/>
            <declaration name="instrument" type="SoftInstrument" line="69"/>
            <declaration name="performer" type="SoftPerformer" line="70"/>
            <declaration name="softchannel" type="SoftChannel" line="71"/>
            <declaration name="on" type="boolean" line="72"/>
            <declaration name="audiostarted" type="boolean" line="73"/>
            <declaration name="started" type="boolean" line="74"/>
            <declaration name="stopping" type="boolean" line="75"/>
            <declaration name="osc_attenuation" type="float" line="76"/>
            <declaration name="osc_stream" type="ModelOscillatorStream" line="77"/>
            <declaration name="osc_stream_nrofchannels" type="int" line="78"/>
            <declaration name="osc_buff" type="float[][]" line="79"/>
            <declaration name="osc_stream_off_transmitted" type="boolean" line="80"/>
            <declaration name="out_mixer_end" type="boolean" line="81"/>
            <declaration name="out_mixer_left" type="float" line="82"/>
            <declaration name="out_mixer_right" type="float" line="83"/>
            <declaration name="out_mixer_effect1" type="float" line="84"/>
            <declaration name="out_mixer_effect2" type="float" line="85"/>
            <declaration name="last_out_mixer_left" type="float" line="86"/>
            <declaration name="last_out_mixer_right" type="float" line="87"/>
            <declaration name="last_out_mixer_effect1" type="float" line="88"/>
            <declaration name="last_out_mixer_effect2" type="float" line="89"/>
            <declaration name="extendedConnectionBlocks" type="ModelConnectionBlock[]" line="90"/>
            <declaration name="connections" type="ModelConnectionBlock[]" line="91"/>
            <declaration name="connections_last" type="double[]" line="93"/>
            <declaration name="connections_src" type="double[][][]" line="95"/>
            <declaration name="connections_src_kc" type="int[][]" line="97"/>
            <declaration name="connections_dst" type="double[][]" line="99"/>
            <declaration name="soundoff" type="boolean" line="100"/>
            <declaration name="lastMuteValue" type="float" line="101"/>
            <declaration name="lastSoloMuteValue" type="float" line="102"/>
            <declaration name="co_noteon_keynumber" type="double[]" line="103"/>
            <declaration name="co_noteon_velocity" type="double[]" line="104"/>
            <declaration name="co_noteon_on" type="double[]" line="105"/>
            <declaration name="co_noteon" type="SoftControl" line="106"/>
            <anonymous_class line="106">
                <declaration name="keynumber" type="double[]" line="107"/>
                <declaration name="velocity" type="double[]" line="108"/>
                <declaration name="on" type="double[]" line="109"/>
                <method name="get" type="double[]" line="110">
                    <params>
                        <param name="instance" type="int"/>
                        <param name="name" type="String"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="co_mixer_active" type="double[]" line="122"/>
            <declaration name="co_mixer_gain" type="double[]" line="123"/>
            <declaration name="co_mixer_pan" type="double[]" line="124"/>
            <declaration name="co_mixer_balance" type="double[]" line="125"/>
            <declaration name="co_mixer_reverb" type="double[]" line="126"/>
            <declaration name="co_mixer_chorus" type="double[]" line="127"/>
            <declaration name="co_mixer" type="SoftControl" line="128"/>
            <anonymous_class line="128">
                <declaration name="active" type="double[]" line="129"/>
                <declaration name="gain" type="double[]" line="130"/>
                <declaration name="pan" type="double[]" line="131"/>
                <declaration name="balance" type="double[]" line="132"/>
                <declaration name="reverb" type="double[]" line="133"/>
                <declaration name="chorus" type="double[]" line="134"/>
                <method name="get" type="double[]" line="135">
                    <params>
                        <param name="instance" type="int"/>
                        <param name="name" type="String"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="co_osc_pitch" type="double[]" line="153"/>
            <declaration name="co_osc" type="SoftControl" line="154"/>
            <anonymous_class line="154">
                <declaration name="pitch" type="double[]" line="155"/>
                <method name="get" type="double[]" line="156">
                    <params>
                        <param name="instance" type="int"/>
                        <param name="name" type="String"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="co_filter_freq" type="double[]" line="164"/>
            <declaration name="co_filter_type" type="double[]" line="165"/>
            <declaration name="co_filter_q" type="double[]" line="166"/>
            <declaration name="co_filter" type="SoftControl" line="167"/>
            <anonymous_class line="167">
                <declaration name="freq" type="double[]" line="168"/>
                <declaration name="ftype" type="double[]" line="169"/>
                <declaration name="q" type="double[]" line="170"/>
                <method name="get" type="double[]" line="171">
                    <params>
                        <param name="instance" type="int"/>
                        <param name="name" type="String"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="resampler" type="SoftResamplerStreamer" line="183"/>
            <declaration name="nrofchannels" type="int" line="184"/>
            <method name="SoftVoice" type="constructor" line="186">
                <params>
                    <param name="synth" type="SoftSynthesizer"/>
                </params>
            </method>
            <method name="getValueKC" type="int" line="193">
                <params>
                    <param name="id" type="ModelIdentifier"/>
                </params>
                <comment line="202">
                    Fine tuning                    
                </comment>
                <comment line="204">
                    Coarse tuning                    
                </comment>
                <scope line="194">
                    <declaration name="ic" type="int" line="195"/>
                    <scope line="196"/>
                </scope>
                <scope line="200"/>
            </method>
            <method name="getValue" type="double[]" line="209">
                <params>
                    <param name="id" type="ModelIdentifier"/>
                </params>
                <declaration name="o" type="SoftControl" line="210"/>
            </method>
            <method name="transformValue" type="double" line="216">
                <params>
                    <param name="value" type="double"/>
                    <param name="src" type="ModelSource"/>
                </params>
            </method>
            <method name="transformValue" type="double" line="223">
                <params>
                    <param name="value" type="double"/>
                    <param name="dst" type="ModelDestination"/>
                </params>
            </method>
            <method name="processKeyBasedController" type="double" line="230">
                <params>
                    <param name="value" type="double"/>
                    <param name="keycontrol" type="int"/>
                </params>
                <scope line="235">
                    <declaration name="key_controlvalue" type="double" line="236"/>
                </scope>
            </method>
            <method name="processConnection" type="void" line="249">
                <params>
                    <param name="ix" type="int"/>
                </params>
                <comment line="278">
                    co_mixer_gain[0] = 0;                    
                </comment>
                <declaration name="conn" type="ModelConnectionBlock" line="250"/>
                <declaration name="src" type="double[][]" line="251"/>
                <declaration name="dst" type="double[]" line="252"/>
                <declaration name="value" type="double" line="256"/>
                <scope line="257">
                    <declaration name="srcs" type="ModelSource[]" line="258"/>
                    <scope line="259"/>
                </scope>
                <scope line="264">
                    <declaration name="srcs" type="ModelSource[]" line="265"/>
                    <declaration name="src_kc" type="int[]" line="266"/>
                    <scope line="267"/>
                </scope>
            </method>
            <method name="updateTuning" type="void" line="281">
                <params>
                    <param name="newtuning" type="SoftTuning"/>
                </params>
                <scope line="284">
                    <declaration name="c" type="int[]" line="288"/>
                </scope>
            </method>
            <method name="setNote" type="void" line="296">
                <params>
                    <param name="noteNumber" type="int"/>
                </params>
            </method>
            <method name="noteOn" type="void" line="301">
                <params>
                    <param name="noteNumber" type="int"/>
                    <param name="velocity" type="int"/>
                    <param name="delay" type="int"/>
                </params>
                <comment line="311">
                    volume = velocity;                    
                </comment>
                <scope line="358"/>
                <scope line="362"/>
                <scope line="367"/>
                <scope line="370">
                    <declaration name="conn" type="ModelConnectionBlock" line="371"/>
                    <scope line="373">
                        <declaration name="srcs" type="ModelSource[]" line="374"/>
                        <scope line="376"/>
                        <declaration name="src" type="double[][]" line="380"/>
                        <declaration name="src_kc" type="int[]" line="381"/>
                        <scope line="383"/>
                    </scope>
                </scope>
                <scope line="399">
                    <scope line="400">
                        <declaration name="value" type="double" line="401"/>
                        <scope line="403">
                            <scope line="404">
                                <declaration name="x" type="double" line="405"/>
                                <declaration name="t" type="ModelTransform" line="406"/>
                            </scope>
                        </scope>
                        <scope line="412">
                            <scope line="413">
                                <declaration name="x" type="double" line="414"/>
                                <declaration name="t" type="ModelTransform" line="417"/>
                            </scope>
                        </scope>
                        <declaration name="dest" type="ModelDestination" line="425"/>
                        <declaration name="t" type="ModelTransform" line="426"/>
                    </scope>
                </scope>
            </method>
            <method name="setPolyPressure" type="void" line="438">
                <params>
                    <param name="pressure" type="int"/>
                </params>
                <declaration name="c" type="int[]" line="441"/>
            </method>
            <method name="setChannelPressure" type="void" line="448">
                <params>
                    <param name="pressure" type="int"/>
                </params>
                <declaration name="c" type="int[]" line="451"/>
            </method>
            <method name="controlChange" type="void" line="458">
                <params>
                    <param name="controller" type="int"/>
                    <param name="value" type="int"/>
                </params>
                <declaration name="c" type="int[]" line="461"/>
            </method>
            <method name="nrpnChange" type="void" line="468">
                <params>
                    <param name="controller" type="int"/>
                    <param name="value" type="int"/>
                </params>
                <declaration name="c" type="int[]" line="471"/>
            </method>
            <method name="rpnChange" type="void" line="478">
                <params>
                    <param name="controller" type="int"/>
                    <param name="value" type="int"/>
                </params>
                <declaration name="c" type="int[]" line="481"/>
            </method>
            <method name="setPitchBend" type="void" line="488">
                <params>
                    <param name="bend" type="int"/>
                </params>
                <declaration name="c" type="int[]" line="491"/>
            </method>
            <method name="setMute" type="void" line="498">
                <params>
                    <param name="mute" type="boolean"/>
                </params>
            </method>
            <method name="setSoloMute" type="void" line="504">
                <params>
                    <param name="mute" type="boolean"/>
                </params>
            </method>
            <method name="shutdown" type="void" line="510">
                <declaration name="c" type="int[]" line="519"/>
            </method>
            <method name="soundOff" type="void" line="526"/>
            <method name="noteOff" type="void" line="531">
                <params>
                    <param name="velocity" type="int"/>
                </params>
                <scope line="538"/>
                <declaration name="c" type="int[]" line="549"/>
            </method>
            <method name="redamp" type="void" line="556">
                <comment line="560">
                    don&apos;t redamp notes in shutdown stage                    
                </comment>
                <declaration name="c" type="int[]" line="567"/>
            </method>
            <method name="processControlLogic" type="void" line="574">
                <comment line="588">
                    e.printStackTrace();                    
                </comment>
                <comment line="618">
                    e.printStackTrace();                    
                </comment>
                <comment line="672">
                    filter_freq = 440.0  Math.pow(2.0,                    
                </comment>
                <comment line="675">
                    double velocity = co_noteon_velocity[0]; if(velocity &lt; 0.5)
                     filter_freq = ((velocity  2)0.75 + 0.25);                    
                </comment>
                <comment line="687">
                    float gain = (float) Math.pow(10,
                    (-osc_attenuation + co_mixer_gain[0])  200.0);                    
                </comment>
                <comment line="700">
                    if(co_mixer_gain[0] &gt; -960)
                       co_mixer_gain[0] -= 960;                    
                </comment>
                <comment line="708">
                    gain *= 0.2;                    
                </comment>
                <comment line="711">
                    System.out.println(&quot;pan = &quot; + pan);                    
                </comment>
                <scope line="575">
                    <scope line="585"/>
                    <scope line="587"/>
                    <scope line="591"/>
                </scope>
                <scope line="606">
                    <declaration name="osc" type="ModelOscillator" line="609"/>
                    <scope line="612">
                        <scope line="613"/>
                        <scope line="617"/>
                    </scope>
                    <scope line="620"/>
                </scope>
                <scope line="634">
                    <scope line="635">
                        <declaration name="note_delta" type="double" line="636"/>
                        <declaration name="note_delta_a" type="double" line="637"/>
                        <scope line="638"/>
                        <scope line="641"/>
                        <declaration name="c" type="int[]" line="648"/>
                    </scope>
                    <declaration name="filter_type" type="int" line="663"/>
                    <declaration name="filter_freq" type="double" line="664"/>
                    <declaration name="q" type="double" line="680"/>
                    <declaration name="gain" type="float" line="691"/>
                    <scope line="697"/>
                    <declaration name="pan" type="double" line="710"/>
                    <scope line="717"/>
                    <scope line="720"/>
                    <declaration name="balance" type="double" line="725"/>
                    <scope line="726"/>
                    <scope line="733"/>
                    <scope line="738"/>
                    <scope line="746"/>
                </scope>
                <scope line="753"/>
            </method>
            <method name="mixAudioStream" type="void" line="765">
                <params>
                    <param name="in" type="SoftAudioBuffer"/>
                    <param name="out" type="SoftAudioBuffer"/>
                    <param name="dout" type="SoftAudioBuffer"/>
                    <param name="amp_from" type="float"/>
                    <param name="amp_to" type="float"/>
                </params>
                <declaration name="bufferlen" type="int" line="766"/>
                <scope line="770">
                    <scope line="771">
                        <declaration name="fout" type="float[]" line="772"/>
                        <declaration name="fin" type="float[]" line="773"/>
                        <declaration name="j" type="int" line="774"/>
                    </scope>
                    <scope line="780">
                        <declaration name="amp" type="float" line="781"/>
                        <declaration name="amp_delta" type="float" line="782"/>
                        <declaration name="fout" type="float[]" line="783"/>
                        <declaration name="fin" type="float[]" line="784"/>
                        <declaration name="j" type="int" line="785"/>
                        <scope line="786"/>
                        <scope line="791"/>
                    </scope>
                </scope>
                <scope line="798">
                    <scope line="799">
                        <declaration name="fout" type="float[]" line="800"/>
                        <declaration name="fin" type="float[]" line="801"/>
                    </scope>
                    <scope line="804">
                        <declaration name="amp" type="float" line="805"/>
                        <declaration name="amp_delta" type="float" line="806"/>
                        <declaration name="fout" type="float[]" line="807"/>
                        <declaration name="fin" type="float[]" line="808"/>
                        <scope line="809"/>
                    </scope>
                </scope>
            </method>
            <method name="processAudioLogic" type="void" line="818">
                <params>
                    <param name="buffer" type="SoftAudioBuffer[]"/>
                </params>
                <comment line="840">
                    e.printStackTrace();                    
                </comment>
                <declaration name="bufferlen" type="int" line="822"/>
                <scope line="824">
                    <declaration name="ret" type="int" line="828"/>
                    <scope line="829"/>
                    <scope line="833"/>
                </scope>
                <scope line="839"/>
                <declaration name="left" type="SoftAudioBuffer" line="843"/>
                <declaration name="right" type="SoftAudioBuffer" line="844"/>
                <declaration name="mono" type="SoftAudioBuffer" line="845"/>
                <declaration name="eff1" type="SoftAudioBuffer" line="846"/>
                <declaration name="eff2" type="SoftAudioBuffer" line="847"/>
                <declaration name="dleft" type="SoftAudioBuffer" line="849"/>
                <declaration name="dright" type="SoftAudioBuffer" line="850"/>
                <declaration name="dmono" type="SoftAudioBuffer" line="851"/>
                <declaration name="deff1" type="SoftAudioBuffer" line="852"/>
                <declaration name="deff2" type="SoftAudioBuffer" line="853"/>
                <declaration name="leftdry" type="SoftAudioBuffer" line="855"/>
                <declaration name="rightdry" type="SoftAudioBuffer" line="856"/>
                <scope line="861"/>
                <scope line="867"/>
                <scope line="873">
                    <scope line="877"/>
                    <scope line="881"/>
                </scope>
                <scope line="892"/>
                <scope line="897"/>
                <scope line="913"/>
            </method>
        </class>
    </source>