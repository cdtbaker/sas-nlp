<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.io.IOException"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Map"/>
        <import package="javax.sound.midi.VoiceStatus"/>
        <class name="SoftVoice" line="7">
            <extends class="VoiceStatus"/>
            <javadoc line="7">
                Software synthesizer voice class.                
                <author>
                    Karl Helgason                    
                </author>
            </javadoc>
            <declaration name="exclusiveClass" type="int" line="12"/>
            <declaration name="releaseTriggered" type="boolean" line="13"/>
            <declaration name="noteOn_noteNumber" type="int" line="14"/>
            <declaration name="noteOn_velocity" type="int" line="15"/>
            <declaration name="noteOff_velocity" type="int" line="16"/>
            <declaration name="delay" type="int" line="17"/>
            <declaration name="channelmixer" type="ModelChannelMixer" line="18"/>
            <declaration name="tunedKey" type="double" line="19"/>
            <declaration name="tuning" type="SoftTuning" line="20"/>
            <declaration name="stealer_channel" type="SoftChannel" line="21"/>
            <declaration name="stealer_extendedConnectionBlocks" type="ModelConnectionBlock[]" line="22"/>
            <declaration name="stealer_performer" type="SoftPerformer" line="23"/>
            <declaration name="stealer_channelmixer" type="ModelChannelMixer" line="24"/>
            <declaration name="stealer_voiceID" type="int" line="25"/>
            <declaration name="stealer_noteNumber" type="int" line="26"/>
            <declaration name="stealer_velocity" type="int" line="27"/>
            <declaration name="stealer_releaseTriggered" type="boolean" line="28"/>
            <declaration name="voiceID" type="int" line="29"/>
            <declaration name="sustain" type="boolean" line="30"/>
            <declaration name="sostenuto" type="boolean" line="31"/>
            <declaration name="portamento" type="boolean" line="32"/>
            <declaration name="filter_left" type="SoftFilter" line="33"/>
            <declaration name="filter_right" type="SoftFilter" line="34"/>
            <declaration name="eg" type="SoftProcess" line="35"/>
            <declaration name="lfo" type="SoftProcess" line="36"/>
            <declaration name="objects" type="Map&amp;lt;String,SoftControl&amp;gt;" line="37"/>
            <declaration name="synthesizer" type="SoftSynthesizer" line="38"/>
            <declaration name="instrument" type="SoftInstrument" line="39"/>
            <declaration name="performer" type="SoftPerformer" line="40"/>
            <declaration name="softchannel" type="SoftChannel" line="41"/>
            <declaration name="on" type="boolean" line="42"/>
            <declaration name="audiostarted" type="boolean" line="43"/>
            <declaration name="started" type="boolean" line="44"/>
            <declaration name="stopping" type="boolean" line="45"/>
            <declaration name="osc_attenuation" type="float" line="46"/>
            <declaration name="osc_stream" type="ModelOscillatorStream" line="47"/>
            <declaration name="osc_stream_nrofchannels" type="int" line="48"/>
            <declaration name="osc_buff" type="float[][]" line="49"/>
            <declaration name="osc_stream_off_transmitted" type="boolean" line="50"/>
            <declaration name="out_mixer_end" type="boolean" line="51"/>
            <declaration name="out_mixer_left" type="float" line="52"/>
            <declaration name="out_mixer_right" type="float" line="53"/>
            <declaration name="out_mixer_effect1" type="float" line="54"/>
            <declaration name="out_mixer_effect2" type="float" line="55"/>
            <declaration name="last_out_mixer_left" type="float" line="56"/>
            <declaration name="last_out_mixer_right" type="float" line="57"/>
            <declaration name="last_out_mixer_effect1" type="float" line="58"/>
            <declaration name="last_out_mixer_effect2" type="float" line="59"/>
            <declaration name="extendedConnectionBlocks" type="ModelConnectionBlock[]" line="60"/>
            <declaration name="connections" type="ModelConnectionBlock[]" line="61"/>
            <declaration name="connections_last" type="double[]" line="62"/>
            <declaration name="connections_src" type="double[][][]" line="63"/>
            <declaration name="connections_src_kc" type="int[][]" line="64"/>
            <declaration name="connections_dst" type="double[][]" line="65"/>
            <declaration name="soundoff" type="boolean" line="66"/>
            <declaration name="lastMuteValue" type="float" line="67"/>
            <declaration name="lastSoloMuteValue" type="float" line="68"/>
            <declaration name="co_noteon_keynumber" type="double[]" line="69"/>
            <declaration name="co_noteon_velocity" type="double[]" line="70"/>
            <declaration name="co_noteon_on" type="double[]" line="71"/>
            <declaration name="co_noteon" type="SoftControl" line="72"/>
            <anonymous_class line="72">
                <declaration name="keynumber" type="double[]" line="73"/>
                <declaration name="velocity" type="double[]" line="74"/>
                <declaration name="on" type="double[]" line="75"/>
                <method name="get" type="double[]" line="76">
                    <params>
                        <param name="instance" type="int"/>
                        <param name="name" type="String"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="co_mixer_active" type="double[]" line="85"/>
            <declaration name="co_mixer_gain" type="double[]" line="86"/>
            <declaration name="co_mixer_pan" type="double[]" line="87"/>
            <declaration name="co_mixer_balance" type="double[]" line="88"/>
            <declaration name="co_mixer_reverb" type="double[]" line="89"/>
            <declaration name="co_mixer_chorus" type="double[]" line="90"/>
            <declaration name="co_mixer" type="SoftControl" line="91"/>
            <anonymous_class line="91">
                <declaration name="active" type="double[]" line="92"/>
                <declaration name="gain" type="double[]" line="93"/>
                <declaration name="pan" type="double[]" line="94"/>
                <declaration name="balance" type="double[]" line="95"/>
                <declaration name="reverb" type="double[]" line="96"/>
                <declaration name="chorus" type="double[]" line="97"/>
                <method name="get" type="double[]" line="98">
                    <params>
                        <param name="instance" type="int"/>
                        <param name="name" type="String"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="co_osc_pitch" type="double[]" line="110"/>
            <declaration name="co_osc" type="SoftControl" line="111"/>
            <anonymous_class line="111">
                <declaration name="pitch" type="double[]" line="112"/>
                <method name="get" type="double[]" line="113">
                    <params>
                        <param name="instance" type="int"/>
                        <param name="name" type="String"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="co_filter_freq" type="double[]" line="120"/>
            <declaration name="co_filter_type" type="double[]" line="121"/>
            <declaration name="co_filter_q" type="double[]" line="122"/>
            <declaration name="co_filter" type="SoftControl" line="123"/>
            <anonymous_class line="123">
                <declaration name="freq" type="double[]" line="124"/>
                <declaration name="ftype" type="double[]" line="125"/>
                <declaration name="q" type="double[]" line="126"/>
                <method name="get" type="double[]" line="127">
                    <params>
                        <param name="instance" type="int"/>
                        <param name="name" type="String"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="resampler" type="SoftResamplerStreamer" line="136"/>
            <declaration name="nrofchannels" type="int" line="137"/>
            <method name="SoftVoice" type="constructor" line="138">
                <params>
                    <param name="synth" type="SoftSynthesizer"/>
                </params>
            </method>
            <method name="getValueKC" type="int" line="144">
                <params>
                    <param name="id" type="ModelIdentifier"/>
                </params>
                <scope line="145">
                    <declaration name="ic" type="int" line="146"/>
                    <scope line="147"/>
                </scope>
                <scope line="151"/>
            </method>
            <method name="getValue" type="double[]" line="157">
                <params>
                    <param name="id" type="ModelIdentifier"/>
                </params>
                <declaration name="o" type="SoftControl" line="158"/>
            </method>
            <method name="transformValue" type="double" line="162">
                <params>
                    <param name="value" type="double"/>
                    <param name="src" type="ModelSource"/>
                </params>
            </method>
            <method name="transformValue" type="double" line="166">
                <params>
                    <param name="value" type="double"/>
                    <param name="dst" type="ModelDestination"/>
                </params>
            </method>
            <method name="processKeyBasedController" type="double" line="170">
                <params>
                    <param name="value" type="double"/>
                    <param name="keycontrol" type="int"/>
                </params>
                <scope line="172">
                    <declaration name="key_controlvalue" type="double" line="173"/>
                </scope>
            </method>
            <method name="processConnection" type="void" line="181">
                <params>
                    <param name="ix" type="int"/>
                </params>
                <declaration name="conn" type="ModelConnectionBlock" line="182"/>
                <declaration name="src" type="double[][]" line="183"/>
                <declaration name="dst" type="double[]" line="184"/>
                <declaration name="value" type="double" line="186"/>
                <scope line="187">
                    <declaration name="srcs" type="ModelSource[]" line="188"/>
                    <scope line="189"/>
                </scope>
                <scope line="194">
                    <declaration name="srcs" type="ModelSource[]" line="195"/>
                    <declaration name="src_kc" type="int[]" line="196"/>
                    <scope line="197"/>
                </scope>
            </method>
            <method name="updateTuning" type="void" line="206">
                <params>
                    <param name="newtuning" type="SoftTuning"/>
                </params>
                <scope line="209">
                    <declaration name="c" type="int[]" line="212"/>
                </scope>
            </method>
            <method name="setNote" type="void" line="217">
                <params>
                    <param name="noteNumber" type="int"/>
                </params>
            </method>
            <method name="noteOn" type="void" line="221">
                <params>
                    <param name="noteNumber" type="int"/>
                    <param name="velocity" type="int"/>
                    <param name="delay" type="int"/>
                </params>
                <scope line="262"/>
                <scope line="265"/>
                <scope line="269"/>
                <scope line="272">
                    <declaration name="conn" type="ModelConnectionBlock" line="273"/>
                    <scope line="275">
                        <declaration name="srcs" type="ModelSource[]" line="276"/>
                        <scope line="277"/>
                        <declaration name="src" type="double[][]" line="281"/>
                        <declaration name="src_kc" type="int[]" line="282"/>
                        <scope line="284"/>
                    </scope>
                </scope>
                <scope line="293">
                    <scope line="294">
                        <declaration name="value" type="double" line="295"/>
                        <scope line="296">
                            <scope line="297">
                                <declaration name="x" type="double" line="298"/>
                                <declaration name="t" type="ModelTransform" line="299"/>
                            </scope>
                        </scope>
                        <scope line="304">
                            <scope line="305">
                                <declaration name="x" type="double" line="306"/>
                                <declaration name="t" type="ModelTransform" line="308"/>
                            </scope>
                        </scope>
                        <declaration name="dest" type="ModelDestination" line="313"/>
                        <declaration name="t" type="ModelTransform" line="314"/>
                    </scope>
                </scope>
            </method>
            <method name="setPolyPressure" type="void" line="322">
                <params>
                    <param name="pressure" type="int"/>
                </params>
                <declaration name="c" type="int[]" line="324"/>
            </method>
            <method name="setChannelPressure" type="void" line="328">
                <params>
                    <param name="pressure" type="int"/>
                </params>
                <declaration name="c" type="int[]" line="330"/>
            </method>
            <method name="controlChange" type="void" line="334">
                <params>
                    <param name="controller" type="int"/>
                    <param name="value" type="int"/>
                </params>
                <declaration name="c" type="int[]" line="336"/>
            </method>
            <method name="nrpnChange" type="void" line="340">
                <params>
                    <param name="controller" type="int"/>
                    <param name="value" type="int"/>
                </params>
                <declaration name="c" type="int[]" line="342"/>
            </method>
            <method name="rpnChange" type="void" line="346">
                <params>
                    <param name="controller" type="int"/>
                    <param name="value" type="int"/>
                </params>
                <declaration name="c" type="int[]" line="348"/>
            </method>
            <method name="setPitchBend" type="void" line="352">
                <params>
                    <param name="bend" type="int"/>
                </params>
                <declaration name="c" type="int[]" line="354"/>
            </method>
            <method name="setMute" type="void" line="358">
                <params>
                    <param name="mute" type="boolean"/>
                </params>
            </method>
            <method name="setSoloMute" type="void" line="363">
                <params>
                    <param name="mute" type="boolean"/>
                </params>
            </method>
            <method name="shutdown" type="void" line="368">
                <declaration name="c" type="int[]" line="373"/>
            </method>
            <method name="soundOff" type="void" line="377"/>
            <method name="noteOff" type="void" line="381">
                <params>
                    <param name="velocity" type="int"/>
                </params>
                <scope line="385"/>
                <declaration name="c" type="int[]" line="392"/>
            </method>
            <method name="redamp" type="void" line="396">
                <declaration name="c" type="int[]" line="402"/>
            </method>
            <method name="processControlLogic" type="void" line="406">
                <scope line="407">
                    <scope line="416"/>
                    <scope line="419"/>
                    <scope line="421"/>
                </scope>
                <scope line="433">
                    <declaration name="osc" type="ModelOscillator" line="435"/>
                    <scope line="437">
                        <scope line="438"/>
                        <scope line="442"/>
                    </scope>
                    <scope line="445"/>
                </scope>
                <scope line="453">
                    <scope line="454">
                        <declaration name="note_delta" type="double" line="455"/>
                        <declaration name="note_delta_a" type="double" line="456"/>
                        <scope line="457"/>
                        <scope line="461"/>
                        <declaration name="c" type="int[]" line="465"/>
                    </scope>
                    <declaration name="filter_type" type="int" line="473"/>
                    <declaration name="filter_freq" type="double" line="474"/>
                    <declaration name="q" type="double" line="477"/>
                    <declaration name="gain" type="float" line="484"/>
                    <scope line="486"/>
                    <declaration name="pan" type="double" line="491"/>
                    <scope line="494"/>
                    <scope line="498"/>
                    <declaration name="balance" type="double" line="502"/>
                    <scope line="503"/>
                    <scope line="507"/>
                    <scope line="512"/>
                    <scope line="518"/>
                </scope>
                <scope line="523"/>
            </method>
            <method name="mixAudioStream" type="void" line="531">
                <params>
                    <param name="in" type="SoftAudioBuffer"/>
                    <param name="out" type="SoftAudioBuffer"/>
                    <param name="dout" type="SoftAudioBuffer"/>
                    <param name="amp_from" type="float"/>
                    <param name="amp_to" type="float"/>
                </params>
                <declaration name="bufferlen" type="int" line="532"/>
                <scope line="534">
                    <scope line="535">
                        <declaration name="fout" type="float[]" line="536"/>
                        <declaration name="fin" type="float[]" line="537"/>
                        <declaration name="j" type="int" line="538"/>
                    </scope>
                    <scope line="543">
                        <declaration name="amp" type="float" line="544"/>
                        <declaration name="amp_delta" type="float" line="545"/>
                        <declaration name="fout" type="float[]" line="546"/>
                        <declaration name="fin" type="float[]" line="547"/>
                        <declaration name="j" type="int" line="548"/>
                        <scope line="549"/>
                        <scope line="554"/>
                    </scope>
                </scope>
                <scope line="560">
                    <scope line="561">
                        <declaration name="fout" type="float[]" line="562"/>
                        <declaration name="fin" type="float[]" line="563"/>
                    </scope>
                    <scope line="566">
                        <declaration name="amp" type="float" line="567"/>
                        <declaration name="amp_delta" type="float" line="568"/>
                        <declaration name="fout" type="float[]" line="569"/>
                        <declaration name="fin" type="float[]" line="570"/>
                        <scope line="571"/>
                    </scope>
                </scope>
            </method>
            <method name="processAudioLogic" type="void" line="578">
                <params>
                    <param name="buffer" type="SoftAudioBuffer[]"/>
                </params>
                <declaration name="bufferlen" type="int" line="580"/>
                <scope line="581">
                    <declaration name="ret" type="int" line="584"/>
                    <scope line="585"/>
                    <scope line="589"/>
                </scope>
                <scope line="594"/>
                <declaration name="left" type="SoftAudioBuffer" line="596"/>
                <declaration name="right" type="SoftAudioBuffer" line="597"/>
                <declaration name="mono" type="SoftAudioBuffer" line="598"/>
                <declaration name="eff1" type="SoftAudioBuffer" line="599"/>
                <declaration name="eff2" type="SoftAudioBuffer" line="600"/>
                <declaration name="dleft" type="SoftAudioBuffer" line="601"/>
                <declaration name="dright" type="SoftAudioBuffer" line="602"/>
                <declaration name="dmono" type="SoftAudioBuffer" line="603"/>
                <declaration name="deff1" type="SoftAudioBuffer" line="604"/>
                <declaration name="deff2" type="SoftAudioBuffer" line="605"/>
                <declaration name="leftdry" type="SoftAudioBuffer" line="606"/>
                <declaration name="rightdry" type="SoftAudioBuffer" line="607"/>
                <scope line="609"/>
                <scope line="613"/>
                <scope line="618">
                    <scope line="619"/>
                    <scope line="622"/>
                </scope>
                <scope line="628"/>
                <scope line="632"/>
                <scope line="642"/>
            </method>
        </class>
    </source>