<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.io.DataInputStream"/>
        <import package="java.io.DataOutputStream"/>
        <import package="java.io.PipedInputStream"/>
        <import package="java.io.PipedOutputStream"/>
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.ByteArrayInputStream"/>
        <import package="java.io.SequenceInputStream"/>
        <import package="java.io.File"/>
        <import package="java.io.FileInputStream"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.EOFException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.io.RandomAccessFile"/>
        <import package="java.io.BufferedInputStream"/>
        <import package="java.net.URL"/>
        <import package="java.net.MalformedURLException"/>
        <import package="javax.sound.midi.MidiFileFormat"/>
        <import package="javax.sound.midi.InvalidMidiDataException"/>
        <import package="javax.sound.midi.MetaMessage"/>
        <import package="javax.sound.midi.MidiEvent"/>
        <import package="javax.sound.midi.MidiMessage"/>
        <import package="javax.sound.midi.Sequence"/>
        <import package="javax.sound.midi.ShortMessage"/>
        <import package="javax.sound.midi.SysexMessage"/>
        <import package="javax.sound.midi.Track"/>
        <import package="javax.sound.midi.spi.MidiFileReader"/>
        <class name="StandardMidiFileReader" line="59">
            <extends class="MidiFileReader"/>
            <comment line="70">
                &apos;MThd&apos;                
            </comment>
            <comment line="75">
                buffer size in buffered input streams                
            </comment>
            <comment line="89">
                $$fb 2002-04-17: part of fix for 4635286: MidiSystem.getMidiFileFormat() returns format having invalid length                
            </comment>
            <comment line="258">
                &apos;MTrk&apos;                
            </comment>
            <comment line="260">
                set to true to not allow corrupt MIDI files tombe loaded                
            </comment>
            <comment line="265">
                number of tracks                
            </comment>
            <comment line="266">
                the stream to read from                
            </comment>
            <comment line="268">
                remaining length in track                
            </comment>
            <javadoc line="59">
                MIDI file reader.                
                <author>
                    Kara Kytle                    
                </author>
                <author>
                    Jan Borgersen                    
                </author>
                <author>
                    Florian Bomers                    
                </author>
            </javadoc>
            <declaration name="MThd_MAGIC" type="int" line="69"/>
            <declaration name="MIDI_TYPE_0" type="int" line="71"/>
            <declaration name="MIDI_TYPE_1" type="int" line="72"/>
            <declaration name="bisBufferSize" type="int" line="74"/>
            <declaration name="types" type="int" line="76"/>
            <javadoc line="76">
                MIDI parser types                
            </javadoc>
            <method name="getMidiFileFormat" type="MidiFileFormat" line="84">
                <params>
                    <param name="stream" type="InputStream"/>
                </params>
            </method>
            <method name="getMidiFileFormatFromStream" type="MidiFileFormat" line="89">
                <params>
                    <param name="stream" type="InputStream"/>
                    <param name="fileLength" type="int"/>
                    <param name="smfParser" type="SMFParser"/>
                </params>
                <comment line="113">
                    not MIDI                    
                </comment>
                <comment line="117">
                    read header length                    
                </comment>
                <comment line="123">
                    decipher the timing code                    
                </comment>
                <comment line="125">
                    tempo based timing.  value is ticks per beat.                    
                </comment>
                <comment line="129">
                    SMPTE based timing.  first decipher the frame code.                    
                </comment>
                <comment line="147">
                    now determine the timing resolution in ticks per frame.                    
                </comment>
                <comment line="151">
                    remainder of this chunk                    
                </comment>
                <comment line="156">
                    if only reading the file format, reset the stream                    
                </comment>
                <declaration name="maxReadLength" type="int" line="90"/>
                <declaration name="duration" type="int" line="91"/>
                <declaration name="dis" type="DataInputStream" line="92"/>
                <scope line="94"/>
                <scope line="96"/>
                <scope line="99"/>
                <scope line="101"/>
                <declaration name="type" type="int" line="105"/>
                <declaration name="numtracks" type="int" line="106"/>
                <declaration name="divisionType" type="float" line="107"/>
                <declaration name="resolution" type="int" line="108"/>
                <scope line="110">
                    <declaration name="magic" type="int" line="111"/>
                    <scope line="112"/>
                    <declaration name="bytesRemaining" type="int" line="118"/>
                    <declaration name="timing" type="int" line="121"/>
                    <scope line="124"/>
                    <scope line="128">
                        <declaration name="frameCode" type="int" line="130"/>
                    </scope>
                    <scope line="150"/>
                </scope>
                <scope line="155">
                    <scope line="157"/>
                </scope>
                <declaration name="format" type="MidiFileFormat" line="161"/>
            </method>
            <method name="getMidiFileFormat" type="MidiFileFormat" line="166">
                <params>
                    <param name="url" type="URL"/>
                </params>
                <comment line="167">
                    throws IOException                    
                </comment>
                <comment line="171">
                    throws InvalidMidiDataException                    
                </comment>
                <declaration name="urlStream" type="InputStream" line="167"/>
                <declaration name="bis" type="BufferedInputStream" line="168"/>
                <declaration name="fileFormat" type="MidiFileFormat" line="169"/>
                <scope line="170"/>
                <scope line="172"/>
            </method>
            <method name="getMidiFileFormat" type="MidiFileFormat" line="179">
                <params>
                    <param name="file" type="File"/>
                </params>
                <comment line="180">
                    throws IOException                    
                </comment>
                <comment line="183">
                    $$fb 2002-04-17: part of fix for 4635286: MidiSystem.getMidiFileFormat() returns format having invalid length                    
                </comment>
                <declaration name="fis" type="FileInputStream" line="180"/>
                <declaration name="bis" type="BufferedInputStream" line="181"/>
                <declaration name="length" type="long" line="184"/>
                <scope line="185"/>
                <declaration name="fileFormat" type="MidiFileFormat" line="188"/>
                <scope line="189"/>
                <scope line="191"/>
            </method>
            <method name="getSequence" type="Sequence" line="198">
                <params>
                    <param name="stream" type="InputStream"/>
                </params>
                <comment line="204">
                    must be MIDI Type 0 or Type 1                    
                </comment>
                <comment line="209">
                    construct the sequence object                    
                </comment>
                <comment line="212">
                    for each track, go to the beginning and read the track events                    
                </comment>
                <declaration name="smfParser" type="SMFParser" line="199"/>
                <declaration name="format" type="MidiFileFormat" line="200"/>
                <scope line="205"/>
                <declaration name="sequence" type="Sequence" line="210"/>
                <scope line="213">
                    <scope line="214"/>
                    <scope line="216"/>
                </scope>
            </method>
            <method name="getSequence" type="Sequence" line="225">
                <params>
                    <param name="url" type="URL"/>
                </params>
                <comment line="226">
                    throws IOException                    
                </comment>
                <declaration name="is" type="InputStream" line="226"/>
                <declaration name="seq" type="Sequence" line="228"/>
                <scope line="229"/>
                <scope line="231"/>
            </method>
            <method name="getSequence" type="Sequence" line="238">
                <params>
                    <param name="file" type="File"/>
                </params>
                <comment line="239">
                    throws IOException                    
                </comment>
                <declaration name="is" type="InputStream" line="239"/>
                <declaration name="seq" type="Sequence" line="241"/>
                <scope line="242"/>
                <scope line="244"/>
            </method>
        </class>
        <class name="SMFParser" line="253">
            <comment line="70">
                &apos;MThd&apos;                
            </comment>
            <comment line="75">
                buffer size in buffered input streams                
            </comment>
            <comment line="89">
                $$fb 2002-04-17: part of fix for 4635286: MidiSystem.getMidiFileFormat() returns format having invalid length                
            </comment>
            <comment line="258">
                &apos;MTrk&apos;                
            </comment>
            <comment line="260">
                set to true to not allow corrupt MIDI files tombe loaded                
            </comment>
            <comment line="265">
                number of tracks                
            </comment>
            <comment line="266">
                the stream to read from                
            </comment>
            <comment line="268">
                remaining length in track                
            </comment>
            <javadoc line="253">
                State variables during parsing of a MIDI file                
            </javadoc>
            <declaration name="MTrk_MAGIC" type="int" line="257"/>
            <declaration name="STRICT_PARSER" type="boolean" line="260"/>
            <declaration name="DEBUG" type="boolean" line="262"/>
            <declaration name="tracks" type="int" line="264"/>
            <declaration name="stream" type="DataInputStream" line="265"/>
            <declaration name="trackLength" type="int" line="267"/>
            <declaration name="trackData" type="byte[]" line="268"/>
            <declaration name="pos" type="int" line="269"/>
            <method name="SMFParser" type="constructor" line="271"/>
            <method name="readUnsigned" type="int" line="274"/>
            <method name="read" type="void" line="278">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
            </method>
            <method name="readVarInt" type="long" line="283">
                <comment line="284">
                    the variable-lengh int value                    
                </comment>
                <declaration name="value" type="long" line="284"/>
                <declaration name="currentByte" type="int" line="285"/>
                <scope line="286"/>
            </method>
            <method name="readIntFromStream" type="int" line="293">
                <scope line="294"/>
                <scope line="296"/>
            </method>
            <method name="nextTrack" type="boolean" line="301">
                <comment line="305">
                    $$fb 2003-08-20: fix for 4910986: MIDI file parser breaks up on http connection                    
                </comment>
                <comment line="320">
                    now read track in a byte array                    
                </comment>
                <comment line="323">
                    $$fb 2003-08-20: fix for 4910986: MIDI file parser breaks up on http connection                    
                </comment>
                <declaration name="magic" type="int" line="302"/>
                <scope line="304">
                    <scope line="306">
                        <scope line="307"/>
                    </scope>
                </scope>
                <scope line="315">
                    <scope line="316"/>
                </scope>
                <scope line="322"/>
                <scope line="325">
                    <scope line="326"/>
                </scope>
            </method>
            <method name="trackFinished" type="boolean" line="335"/>
            <method name="readTrack" type="void" line="339">
                <params>
                    <param name="track" type="Track"/>
                </params>
                <comment line="341">
                    reset current tick to 0                    
                </comment>
                <comment line="344">
                    reset current status byte to 0 (invalid value).                    
                </comment>
                <comment line="345">
                    this should cause us to throw an InvalidMidiDataException if we don&apos;t                    
                </comment>
                <comment line="346">
                    get a valid status byte from the beginning of the track.                    
                </comment>
                <comment line="353">
                    initialize to invalid value                    
                </comment>
                <comment line="356">
                    each event has a tick delay and then the event data.                    
                </comment>
                <comment line="358">
                    first read the delay (a variable-length int) and update our tick value                    
                </comment>
                <comment line="361">
                    check for new status                    
                </comment>
                <comment line="376">
                    two data bytes                    
                </comment>
                <comment line="385">
                    one data byte                    
                </comment>
                <comment line="392">
                    sys-ex or meta                    
                </comment>
                <comment line="396">
                    sys ex                    
                </comment>
                <comment line="407">
                    meta                    
                </comment>
                <comment line="418">
                    end of track means it!                    
                </comment>
                <comment line="424">
                    switch sys-ex or meta                    
                </comment>
                <comment line="428">
                    switch                    
                </comment>
                <comment line="430">
                    while                    
                </comment>
                <comment line="433">
                    fix for 4834374                    
                </comment>
                <scope line="340">
                    <declaration name="tick" type="long" line="342"/>
                    <declaration name="status" type="int" line="347"/>
                    <declaration name="endOfTrackFound" type="boolean" line="348"/>
                    <scope line="350">
                        <declaration name="message" type="MidiMessage" line="351"/>
                        <declaration name="data1" type="int" line="353"/>
                        <declaration name="data2" type="int" line="354"/>
                        <declaration name="byteValue" type="int" line="362"/>
                        <scope line="364"/>
                        <scope line="366"/>
                        <scope line="377"/>
                        <scope line="386"/>
                        <declaration name="sysexLength" type="int" line="397"/>
                        <declaration name="sysexData" type="byte[]" line="398"/>
                        <declaration name="sysexMessage" type="SysexMessage" line="401"/>
                        <declaration name="metaType" type="int" line="408"/>
                        <declaration name="metaLength" type="int" line="409"/>
                        <declaration name="metaData" type="byte[]" line="411"/>
                        <declaration name="metaMessage" type="MetaMessage" line="414"/>
                        <scope line="417"/>
                    </scope>
                </scope>
                <scope line="431"/>
            </method>
        </class>
    </source>