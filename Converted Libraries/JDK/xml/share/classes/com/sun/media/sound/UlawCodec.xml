<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.io.InputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.util.Vector"/>
        <import package="javax.sound.sampled.AudioFormat"/>
        <import package="javax.sound.sampled.AudioSystem"/>
        <import package="javax.sound.sampled.AudioInputStream"/>
        <class name="UlawCodec" line="38">
            <extends class="SunCodec"/>
            <comment line="46">
                                
            </comment>
            <comment line="169">
                OLD CODE                
            </comment>
            <comment line="418">
                end class UlawCodecStream                
            </comment>
            <javadoc line="38">
                U-law encodes linear data, and decodes u-law data to linear data.                
                <author>
                    Kara Kytle                    
                </author>
            </javadoc>
            <declaration name="ULAW_TABH" type="byte" line="47"/>
            <declaration name="ULAW_TABL" type="byte" line="48"/>
            <declaration name="ulawEncodings" type="AudioFormat.Encoding[]" line="50"/>
            <declaration name="seg_end" type="short" line="53"/>
            <javadoc line="56">
                Initializes the decode tables                
            </javadoc>
            <scope line="59">
                <scope line="60">
                    <declaration name="ulaw" type="int" line="61"/>
                    <declaration name="t" type="int" line="62"/>
                </scope>
            </scope>
            <javadoc line="75">
                Constructs a new ULAW codec object.                
            </javadoc>
            <method name="UlawCodec" type="constructor" line="78"/>
            <javadoc line="82">
                                
            </javadoc>
            <method name="getTargetEncodings" type="AudioFormat.Encoding[]" line="84">
                <params>
                    <param name="sourceFormat" type="AudioFormat"/>
                </params>
                <scope line="85">
                    <scope line="86">
                        <declaration name="enc" type="AudioFormat.Encoding" line="87"/>
                    </scope>
                    <scope line="90"/>
                </scope>
                <scope line="93">
                    <scope line="94">
                        <declaration name="enc" type="AudioFormat.Encoding" line="95"/>
                    </scope>
                    <scope line="98"/>
                </scope>
                <scope line="101"/>
            </method>
            <javadoc line="107">
                                
            </javadoc>
            <method name="getTargetFormats" type="AudioFormat[]" line="109">
                <params>
                    <param name="targetEncoding" type="AudioFormat.Encoding"/>
                    <param name="sourceFormat" type="AudioFormat"/>
                </params>
                <scope line="114"/>
                <scope line="116"/>
            </method>
            <javadoc line="121">
                                
            </javadoc>
            <method name="getAudioInputStream" type="AudioInputStream" line="123">
                <params>
                    <param name="targetEncoding" type="AudioFormat.Encoding"/>
                    <param name="sourceStream" type="AudioInputStream"/>
                </params>
                <declaration name="sourceFormat" type="AudioFormat" line="124"/>
                <declaration name="sourceEncoding" type="AudioFormat.Encoding" line="125"/>
                <scope line="127"/>
                <scope line="129">
                    <declaration name="targetFormat" type="AudioFormat" line="130"/>
                    <scope line="131"/>
                    <scope line="135"/>
                    <scope line="144"/>
                    <scope line="152"/>
                </scope>
            </method>
            <javadoc line="160">
                use old code...                
            </javadoc>
            <method name="getAudioInputStream" type="AudioInputStream" line="163">
                <params>
                    <param name="targetFormat" type="AudioFormat"/>
                    <param name="sourceStream" type="AudioInputStream"/>
                </params>
            </method>
            <javadoc line="170">
                Opens the codec with the specified parameters.                
                <param>
                    stream stream from which data to be processed should be read                    
                </param>
                <param>
                    outputFormat desired data format of the stream after processing                    
                </param>
                <return>
                    stream from which processed data may be read                    
                </return>
                <throws>
                    IllegalArgumentException if the format combination supplied is
                      not supported.                    
                </throws>
            </javadoc>
            <method name="getConvertedStream" type="AudioInputStream" line="179">
                <params>
                    <param name="outputFormat" type="AudioFormat"/>
                    <param name="stream" type="AudioInputStream"/>
                </params>
                <comment line="179">
                                        
                </comment>
                <declaration name="cs" type="AudioInputStream" line="180"/>
                <declaration name="inputFormat" type="AudioFormat" line="182"/>
                <scope line="184"/>
                <scope line="186"/>
            </method>
            <javadoc line="192">
                Obtains the set of output formats supported by the codec
                  given a particular input format.
                  If no output formats are supported for this input format,
                  returns an array of length 0.                
                <return>
                    array of supported output formats.                    
                </return>
            </javadoc>
            <method name="getOutputFormats" type="AudioFormat[]" line="200">
                <params>
                    <param name="inputFormat" type="AudioFormat"/>
                </params>
                <comment line="200">
                                        
                </comment>
                <declaration name="formats" type="Vector" line="202"/>
                <declaration name="format" type="AudioFormat" line="203"/>
                <scope line="206"/>
                <scope line="217"/>
                <declaration name="formatArray" type="AudioFormat[]" line="237"/>
                <scope line="238"/>
            </method>
            <class name="UlawCodecStream" line="245">
                <extends class="AudioInputStream"/>
                <comment line="179">
                                        
                </comment>
                <comment line="200">
                                        
                </comment>
                <comment line="317">
                    $$jb 22399
                     Used to determine segment number in uLaw encoding                    
                </comment>
                <declaration name="tempBufferSize" type="int" line="247"/>
                <declaration name="tempBuffer" type="byte" line="248"/>
                <declaration name="encode" type="boolean" line="250"/>
                <javadoc line="250">
                    True to encode to u-law, false to decode to linear                    
                </javadoc>
                <declaration name="encodeFormat" type="AudioFormat" line="255"/>
                <declaration name="decodeFormat" type="AudioFormat" line="256"/>
                <declaration name="tabByte1" type="byte" line="258"/>
                <declaration name="tabByte2" type="byte" line="259"/>
                <declaration name="highByte" type="int" line="260"/>
                <declaration name="lowByte" type="int" line="261"/>
                <method name="UlawCodecStream" type="constructor" line="263">
                    <params>
                        <param name="stream" type="AudioInputStream"/>
                        <param name="outputFormat" type="AudioFormat"/>
                    </params>
                    <comment line="269">
                        throw an IllegalArgumentException if not ok                        
                    </comment>
                    <comment line="274">
                        $$fb 2002-07-18: fix for 4714846: JavaSound ULAW (8-bit) encoder erroneously depends on endian-ness                        
                    </comment>
                    <comment line="277">
                        determine whether we are encoding or decoding                        
                    </comment>
                    <comment line="291">
                        setup tables according to byte order                        
                    </comment>
                    <comment line="304">
                        set the AudioInputStream length in frames if we know it                        
                    </comment>
                    <comment line="308">
                        set framePos to zero                        
                    </comment>
                    <declaration name="inputFormat" type="AudioFormat" line="266"/>
                    <scope line="269"/>
                    <declaration name="PCMIsBigEndian" type="boolean" line="274"/>
                    <scope line="277"/>
                    <scope line="282"/>
                    <scope line="291"/>
                    <scope line="296"/>
                    <scope line="304"/>
                    <scope line="310"/>
                </method>
                <method name="search" type="short" line="320">
                    <params>
                        <param name="val" type="short"/>
                        <param name="table" type="short"/>
                        <param name="size" type="short"/>
                    </params>
                    <scope line="321">
                        <scope line="322"/>
                    </scope>
                </method>
                <javadoc line="327">
                    Note that this won&apos;t actually read anything; must read in
                      two-byte units.                    
                </javadoc>
                <method name="read" type="int" line="331">
                    <declaration name="b" type="byte[]" line="332"/>
                    <scope line="333"/>
                </method>
                <method name="read" type="int" line="339">
                    <params>
                        <param name="b" type="byte[]"/>
                    </params>
                </method>
                <method name="read" type="int" line="343">
                    <params>
                        <param name="b" type="byte[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                    <comment line="345">
                        don&apos;t read fractional frames                        
                    </comment>
                    <comment line="365">
                                                
                    </comment>
                    <comment line="369">
                                                
                    </comment>
                    <comment line="377">
                                                
                    </comment>
                    <comment line="379">
                        Combine the sign, segment, quantization bits;
                         and complement the code word.                        
                    </comment>
                    <comment line="383">
                                                
                    </comment>
                    <comment line="389">
                                                
                    </comment>
                    <comment line="393">
                                                
                    </comment>
                    <comment line="397">
                        EOF or error on read                        
                    </comment>
                    <comment line="400">
                                                
                    </comment>
                    <comment line="407">
                        EOF or error                        
                    </comment>
                    <scope line="345"/>
                    <scope line="348">
                        <declaration name="BIAS" type="short" line="349"/>
                        <declaration name="mask" type="short" line="350"/>
                        <declaration name="seg" type="short" line="351"/>
                        <declaration name="i" type="int" line="352"/>
                        <declaration name="sample" type="short" line="354"/>
                        <declaration name="enc" type="byte" line="355"/>
                        <declaration name="readCount" type="int" line="357"/>
                        <declaration name="currentPos" type="int" line="358"/>
                        <declaration name="readLeft" type="int" line="359"/>
                        <declaration name="readLen" type="int" line="360"/>
                        <scope line="362">
                            <scope line="363">
                                <scope line="369"/>
                                <scope line="372"/>
                                <scope line="382"/>
                                <scope line="384"/>
                            </scope>
                        </scope>
                        <scope line="396"/>
                    </scope>
                    <scope line="400">
                        <declaration name="i" type="int" line="401"/>
                        <declaration name="readLen" type="int" line="402"/>
                        <declaration name="readOffset" type="int" line="403"/>
                        <declaration name="readCount" type="int" line="404"/>
                        <scope line="406"/>
                        <scope line="409"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>