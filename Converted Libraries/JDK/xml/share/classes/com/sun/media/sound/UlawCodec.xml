<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.io.InputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.util.Vector"/>
        <import package="javax.sound.sampled.AudioFormat"/>
        <import package="javax.sound.sampled.AudioSystem"/>
        <import package="javax.sound.sampled.AudioInputStream"/>
        <class name="UlawCodec" line="8">
            <extends class="SunCodec"/>
            <javadoc line="8">
                U-law encodes linear data, and decodes u-law data to linear data.                
                <author>
                    Kara Kytle                    
                </author>
            </javadoc>
            <declaration name="ULAW_TABH" type="byte" line="13"/>
            <declaration name="ULAW_TABL" type="byte" line="14"/>
            <declaration name="ulawEncodings" type="AudioFormat.Encoding[]" line="15"/>
            <declaration name="seg_end" type="short" line="16"/>
            <javadoc line="17">
                Initializes the decode tables                
            </javadoc>
            <scope line="20">
                <scope line="21">
                    <declaration name="ulaw" type="int" line="22"/>
                    <declaration name="t" type="int" line="23"/>
                </scope>
            </scope>
            <javadoc line="32">
                Constructs a new ULAW codec object.                
            </javadoc>
            <method name="UlawCodec" type="constructor" line="35"/>
            <javadoc line="38">
                                
            </javadoc>
            <method name="getTargetEncodings" type="AudioFormat.Encoding[]" line="40">
                <params>
                    <param name="sourceFormat" type="AudioFormat"/>
                </params>
                <scope line="41">
                    <scope line="42">
                        <declaration name="enc" type="AudioFormat.Encoding" line="43"/>
                    </scope>
                    <scope line="47"/>
                </scope>
                <scope line="51">
                    <scope line="52">
                        <declaration name="enc" type="AudioFormat.Encoding" line="53"/>
                    </scope>
                    <scope line="57"/>
                </scope>
                <scope line="61"/>
            </method>
            <javadoc line="65">
                                
            </javadoc>
            <method name="getTargetFormats" type="AudioFormat[]" line="67">
                <params>
                    <param name="targetEncoding" type="AudioFormat.Encoding"/>
                    <param name="sourceFormat" type="AudioFormat"/>
                </params>
                <scope line="68"/>
                <scope line="71"/>
            </method>
            <javadoc line="75">
                                
            </javadoc>
            <method name="getAudioInputStream" type="AudioInputStream" line="77">
                <params>
                    <param name="targetEncoding" type="AudioFormat.Encoding"/>
                    <param name="sourceStream" type="AudioInputStream"/>
                </params>
                <declaration name="sourceFormat" type="AudioFormat" line="78"/>
                <declaration name="sourceEncoding" type="AudioFormat.Encoding" line="79"/>
                <scope line="80"/>
                <scope line="83">
                    <declaration name="targetFormat" type="AudioFormat" line="84"/>
                    <scope line="85"/>
                    <scope line="88"/>
                    <scope line="91"/>
                    <scope line="94"/>
                </scope>
            </method>
            <javadoc line="100">
                use old code...                
            </javadoc>
            <method name="getAudioInputStream" type="AudioInputStream" line="103">
                <params>
                    <param name="targetFormat" type="AudioFormat"/>
                    <param name="sourceStream" type="AudioInputStream"/>
                </params>
            </method>
            <javadoc line="106">
                Opens the codec with the specified parameters.                
                <param>
                    stream stream from which data to be processed should be read                    
                </param>
                <param>
                    outputFormat desired data format of the stream after processing                    
                </param>
                <return>
                    stream from which processed data may be read                    
                </return>
                <throws>
                    IllegalArgumentException if the format combination supplied is
                      not supported.                    
                </throws>
            </javadoc>
            <method name="getConvertedStream" type="AudioInputStream" line="114">
                <params>
                    <param name="outputFormat" type="AudioFormat"/>
                    <param name="stream" type="AudioInputStream"/>
                </params>
                <declaration name="cs" type="AudioInputStream" line="115"/>
                <declaration name="inputFormat" type="AudioFormat" line="116"/>
                <scope line="117"/>
                <scope line="120"/>
            </method>
            <javadoc line="125">
                Obtains the set of output formats supported by the codec
                  given a particular input format.
                  If no output formats are supported for this input format,
                  returns an array of length 0.                
                <return>
                    array of supported output formats.                    
                </return>
            </javadoc>
            <method name="getOutputFormats" type="AudioFormat[]" line="132">
                <params>
                    <param name="inputFormat" type="AudioFormat"/>
                </params>
                <declaration name="formats" type="Vector" line="133"/>
                <declaration name="format" type="AudioFormat" line="134"/>
                <scope line="135"/>
                <scope line="139"/>
                <declaration name="formatArray" type="AudioFormat[]" line="145"/>
                <scope line="146"/>
            </method>
            <class name="UlawCodecStream" line="151">
                <extends class="AudioInputStream"/>
                <declaration name="tempBufferSize" type="int" line="152"/>
                <declaration name="tempBuffer" type="byte" line="153"/>
                <declaration name="encode" type="boolean" line="154"/>
                <javadoc line="154">
                    True to encode to u-law, false to decode to linear                    
                </javadoc>
                <declaration name="encodeFormat" type="AudioFormat" line="158"/>
                <declaration name="decodeFormat" type="AudioFormat" line="159"/>
                <declaration name="tabByte1" type="byte" line="160"/>
                <declaration name="tabByte2" type="byte" line="161"/>
                <declaration name="highByte" type="int" line="162"/>
                <declaration name="lowByte" type="int" line="163"/>
                <method name="UlawCodecStream" type="constructor" line="164">
                    <params>
                        <param name="stream" type="AudioInputStream"/>
                        <param name="outputFormat" type="AudioFormat"/>
                    </params>
                    <declaration name="inputFormat" type="AudioFormat" line="166"/>
                    <scope line="167"/>
                    <declaration name="PCMIsBigEndian" type="boolean" line="170"/>
                    <scope line="171"/>
                    <scope line="177"/>
                    <scope line="184"/>
                    <scope line="190"/>
                    <scope line="196"/>
                    <scope line="201"/>
                </method>
                <method name="search" type="short" line="205">
                    <params>
                        <param name="val" type="short"/>
                        <param name="table" type="short"/>
                        <param name="size" type="short"/>
                    </params>
                    <scope line="206">
                        <scope line="207"/>
                    </scope>
                </method>
                <javadoc line="213">
                    Note that this won&apos;t actually read anything; must read in
                      two-byte units.                    
                </javadoc>
                <method name="read" type="int" line="217">
                    <declaration name="b" type="byte[]" line="218"/>
                    <scope line="219"/>
                </method>
                <method name="read" type="int" line="224">
                    <params>
                        <param name="b" type="byte[]"/>
                    </params>
                </method>
                <method name="read" type="int" line="227">
                    <params>
                        <param name="b" type="byte[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                    <scope line="228"/>
                    <scope line="231">
                        <declaration name="BIAS" type="short" line="232"/>
                        <declaration name="mask" type="short" line="233"/>
                        <declaration name="seg" type="short" line="234"/>
                        <declaration name="i" type="int" line="235"/>
                        <declaration name="sample" type="short" line="236"/>
                        <declaration name="enc" type="byte" line="237"/>
                        <declaration name="readCount" type="int" line="238"/>
                        <declaration name="currentPos" type="int" line="239"/>
                        <declaration name="readLeft" type="int" line="240"/>
                        <declaration name="readLen" type="int" line="241"/>
                        <scope line="242">
                            <scope line="243">
                                <scope line="246"/>
                                <scope line="250"/>
                                <scope line="255"/>
                                <scope line="258"/>
                            </scope>
                        </scope>
                        <scope line="268"/>
                    </scope>
                    <scope line="273">
                        <declaration name="i" type="int" line="274"/>
                        <declaration name="readLen" type="int" line="275"/>
                        <declaration name="readOffset" type="int" line="276"/>
                        <declaration name="readCount" type="int" line="277"/>
                        <scope line="278"/>
                        <scope line="281"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>