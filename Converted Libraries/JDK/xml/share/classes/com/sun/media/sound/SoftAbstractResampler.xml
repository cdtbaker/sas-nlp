<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.io.IOException"/>
        <import package="java.util.Arrays"/>
        <import package="javax.sound.midi.MidiChannel"/>
        <import package="javax.sound.midi.VoiceStatus"/>
        <class name="SoftAbstractResampler" line="33">
            <implements interface="SoftResampler"/>
            <javadoc line="33">
                Abstract resampler class.                
                <author>
                    Karl Helgason                    
                </author>
            </javadoc>
            <class name="ModelAbstractResamplerStream" line="40">
                <comment line="46">
                    true = forward                    
                </comment>
                <implements interface="SoftResamplerStreamer"/>
                <declaration name="stream" type="AudioFloatInputStream" line="42"/>
                <declaration name="stream_eof" type="boolean" line="43"/>
                <declaration name="loopmode" type="int" line="44"/>
                <declaration name="loopdirection" type="boolean" line="45"/>
                <declaration name="loopstart" type="float" line="46"/>
                <declaration name="looplen" type="float" line="47"/>
                <declaration name="target_pitch" type="float" line="48"/>
                <declaration name="current_pitch" type="float[]" line="49"/>
                <declaration name="started" type="boolean" line="50"/>
                <declaration name="eof" type="boolean" line="51"/>
                <declaration name="sector_pos" type="int" line="52"/>
                <declaration name="sector_size" type="int" line="53"/>
                <declaration name="sector_loopstart" type="int" line="54"/>
                <declaration name="markset" type="boolean" line="55"/>
                <declaration name="marklimit" type="int" line="56"/>
                <declaration name="streampos" type="int" line="57"/>
                <declaration name="nrofchannels" type="int" line="58"/>
                <declaration name="noteOff_flag" type="boolean" line="59"/>
                <declaration name="ibuffer" type="float[][]" line="60"/>
                <declaration name="ibuffer_order" type="boolean" line="61"/>
                <declaration name="sbuffer" type="float[]" line="62"/>
                <declaration name="pad" type="int" line="63"/>
                <declaration name="pad2" type="int" line="64"/>
                <declaration name="ix" type="float[]" line="65"/>
                <declaration name="ox" type="int[]" line="66"/>
                <declaration name="samplerateconv" type="float" line="67"/>
                <declaration name="pitchcorrection" type="float" line="68"/>
                <method name="ModelAbstractResamplerStream" type="constructor" line="70"/>
                <method name="noteOn" type="void" line="78">
                    <params>
                        <param name="channel" type="MidiChannel"/>
                        <param name="voice" type="VoiceStatus"/>
                        <param name="noteNumber" type="int"/>
                        <param name="velocity" type="int"/>
                    </params>
                </method>
                <method name="noteOff" type="void" line="81">
                    <params>
                        <param name="velocity" type="int"/>
                    </params>
                </method>
                <method name="open" type="void" line="86">
                    <params>
                        <param name="osc" type="ModelWavetable"/>
                        <param name="outputsamplerate" type="float"/>
                    </params>
                    <comment line="118">
                        loopmode = 0;                        
                    </comment>
                    <scope line="90"/>
                    <scope line="112"/>
                </method>
                <method name="setPitch" type="void" line="138">
                    <params>
                        <param name="pitch" type="float"/>
                    </params>
                    <comment line="140">
                        this.pitch = (float) Math.pow(2f,
                        (pitchcorrection + pitch)  1200.0f)
                         samplerateconv;                        
                    </comment>
                </method>
                <method name="nextBuffer" type="void" line="152">
                    <comment line="156">
                        reset to target sector                        
                    </comment>
                    <comment line="162">
                        and go one sector backward                        
                    </comment>
                    <scope line="153">
                        <scope line="154"/>
                    </scope>
                    <scope line="169">
                        <scope line="170"/>
                    </scope>
                    <scope line="176">
                        <declaration name="skips" type="int" line="177"/>
                    </scope>
                    <scope line="184">
                        <scope line="185">
                            <scope line="186"/>
                        </scope>
                        <scope line="195">
                            <declaration name="cbuffer" type="float[]" line="196"/>
                        </scope>
                        <declaration name="ret" type="int" line="201"/>
                        <scope line="204">
                            <declaration name="slen" type="int" line="205"/>
                            <declaration name="sret" type="int" line="208"/>
                            <scope line="211">
                                <scope line="213">
                                    <declaration name="buff" type="float[]" line="214"/>
                                    <declaration name="ix" type="int" line="215"/>
                                    <declaration name="ix_step" type="int" line="216"/>
                                    <declaration name="ox" type="int" line="217"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="225"/>
                        <scope line="232"/>
                    </scope>
                </method>
                <method name="reverseBuffers" type="void" line="243">
                    <scope line="245">
                        <declaration name="cbuff" type="float[]" line="246"/>
                        <declaration name="len" type="int" line="247"/>
                        <declaration name="len2" type="int" line="248"/>
                        <scope line="249">
                            <declaration name="x" type="float" line="250"/>
                        </scope>
                    </scope>
                </method>
                <method name="read" type="int" line="258">
                    <params>
                        <param name="buffer" type="float[][]"/>
                        <param name="offset" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                    <comment line="284">
                        If we are in backward playing part of pingpong
                         or reverse loop                        
                    </comment>
                    <comment line="291">
                        Ping pong loop, change loopdirection                        
                    </comment>
                    <comment line="339">
                        Ping pong or revese loop, change loopdirection                        
                    </comment>
                    <declaration name="pitchstep" type="float" line="269"/>
                    <declaration name="current_pitch" type="float[]" line="270"/>
                    <declaration name="ox" type="int[]" line="273"/>
                    <declaration name="ox_end" type="int" line="275"/>
                    <declaration name="ixend" type="float" line="277"/>
                    <scope line="280">
                        <scope line="282">
                            <scope line="286">
                                <scope line="288">
                                    <scope line="289"/>
                                </scope>
                            </scope>
                            <declaration name="bak_ix" type="float" line="309"/>
                            <declaration name="bak_ox" type="int" line="310"/>
                            <declaration name="bak_pitch" type="float" line="311"/>
                            <scope line="312">
                                <scope line="313"/>
                            </scope>
                            <scope line="326"/>
                        </scope>
                        <scope line="333">
                            <scope line="334">
                                <scope line="336">
                                    <scope line="337"/>
                                </scope>
                            </scope>
                        </scope>
                        <declaration name="bak_ix" type="float" line="353"/>
                        <declaration name="bak_ox" type="int" line="354"/>
                        <declaration name="bak_pitch" type="float" line="355"/>
                        <scope line="356">
                            <scope line="357"/>
                        </scope>
                        <scope line="366"/>
                    </scope>
                </method>
                <method name="close" type="void" line="376"/>
            </class>
            <method name="getPadding" type="int" line="381"/>
            <method name="interpolate" type="void" line="383"/>
            <method name="openStreamer" type="SoftResamplerStreamer" line="387"/>
        </class>
    </source>