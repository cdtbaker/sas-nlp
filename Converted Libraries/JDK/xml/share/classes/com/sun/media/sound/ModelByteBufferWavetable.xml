<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="javax.sound.sampled.AudioFormat"/>
        <import package="javax.sound.sampled.AudioInputStream"/>
        <import package="javax.sound.sampled.AudioSystem"/>
        <import package="javax.sound.sampled.AudioFormat.Encoding"/>
        <class name="ModelByteBufferWavetable" line="8">
            <implements interface="ModelWavetable"/>
            <javadoc line="8">
                Wavetable oscillator for pre-loaded data.                
                <author>
                    Karl Helgason                    
                </author>
            </javadoc>
            <class name="Buffer8PlusInputStream" line="13">
                <extends class="InputStream"/>
                <declaration name="bigendian" type="boolean" line="14"/>
                <declaration name="framesize_pc" type="int" line="15"/>
                <declaration name="pos" type="int" line="16"/>
                <declaration name="pos2" type="int" line="17"/>
                <declaration name="markpos" type="int" line="18"/>
                <declaration name="markpos2" type="int" line="19"/>
                <method name="Buffer8PlusInputStream" type="constructor" line="20"/>
                <method name="read" type="int" line="24">
                    <params>
                        <param name="b" type="byte[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                    <declaration name="avail" type="int" line="25"/>
                    <declaration name="buff1" type="byte[]" line="28"/>
                    <declaration name="buff2" type="byte[]" line="29"/>
                    <scope line="32">
                        <scope line="33"/>
                    </scope>
                    <scope line="40">
                        <scope line="41"/>
                    </scope>
                </method>
                <method name="skip" type="long" line="52">
                    <params>
                        <param name="n" type="long"/>
                    </params>
                    <declaration name="avail" type="int" line="53"/>
                </method>
                <method name="read" type="int" line="60">
                    <params>
                        <param name="b" type="byte[]"/>
                    </params>
                </method>
                <method name="read" type="int" line="63">
                    <declaration name="b" type="byte[]" line="64"/>
                    <declaration name="ret" type="int" line="65"/>
                </method>
                <method name="markSupported" type="boolean" line="69"/>
                <method name="available" type="int" line="72"/>
                <method name="mark" type="void" line="75">
                    <params>
                        <param name="readlimit" type="int"/>
                    </params>
                </method>
                <method name="reset" type="void" line="79"/>
            </class>
            <declaration name="loopStart" type="float" line="84"/>
            <declaration name="loopLength" type="float" line="85"/>
            <declaration name="buffer" type="ModelByteBuffer" line="86"/>
            <declaration name="buffer8" type="ModelByteBuffer" line="87"/>
            <declaration name="format" type="AudioFormat" line="88"/>
            <declaration name="pitchcorrection" type="float" line="89"/>
            <declaration name="attenuation" type="float" line="90"/>
            <declaration name="loopType" type="int" line="91"/>
            <method name="ModelByteBufferWavetable" type="constructor" line="92">
                <params>
                    <param name="buffer" type="ModelByteBuffer"/>
                </params>
            </method>
            <method name="ModelByteBufferWavetable" type="constructor" line="95">
                <params>
                    <param name="buffer" type="ModelByteBuffer"/>
                    <param name="pitchcorrection" type="float"/>
                </params>
            </method>
            <method name="ModelByteBufferWavetable" type="constructor" line="99">
                <params>
                    <param name="buffer" type="ModelByteBuffer"/>
                    <param name="format" type="AudioFormat"/>
                </params>
            </method>
            <method name="ModelByteBufferWavetable" type="constructor" line="103">
                <params>
                    <param name="buffer" type="ModelByteBuffer"/>
                    <param name="format" type="AudioFormat"/>
                    <param name="pitchcorrection" type="float"/>
                </params>
            </method>
            <method name="set8BitExtensionBuffer" type="void" line="108">
                <params>
                    <param name="buffer" type="ModelByteBuffer"/>
                </params>
            </method>
            <method name="get8BitExtensionBuffer" type="ModelByteBuffer" line="111"/>
            <method name="getBuffer" type="ModelByteBuffer" line="114"/>
            <method name="getFormat" type="AudioFormat" line="117">
                <scope line="118">
                    <declaration name="is" type="InputStream" line="120"/>
                    <declaration name="format" type="AudioFormat" line="121"/>
                    <scope line="122"/>
                    <scope line="125"/>
                    <scope line="127"/>
                    <scope line="130"/>
                </scope>
            </method>
            <method name="openStream" type="AudioFloatInputStream" line="136">
                <scope line="138">
                    <declaration name="is" type="InputStream" line="139"/>
                    <declaration name="ais" type="AudioInputStream" line="140"/>
                    <scope line="141"/>
                    <scope line="144"/>
                </scope>
                <scope line="149"/>
                <scope line="152">
                    <scope line="153">
                        <declaration name="is" type="InputStream" line="154"/>
                        <declaration name="format2" type="AudioFormat" line="155"/>
                        <declaration name="ais" type="AudioInputStream" line="156"/>
                    </scope>
                </scope>
            </method>
            <method name="getChannels" type="int" line="162"/>
            <method name="open" type="ModelOscillatorStream" line="165">
                <params>
                    <param name="samplerate" type="float"/>
                </params>
            </method>
            <method name="getAttenuation" type="float" line="168"/>
            <method name="setAttenuation" type="void" line="171">
                <params>
                    <param name="attenuation" type="float"/>
                </params>
            </method>
            <method name="getLoopLength" type="float" line="174"/>
            <method name="setLoopLength" type="void" line="177">
                <params>
                    <param name="loopLength" type="float"/>
                </params>
            </method>
            <method name="getLoopStart" type="float" line="180"/>
            <method name="setLoopStart" type="void" line="183">
                <params>
                    <param name="loopStart" type="float"/>
                </params>
            </method>
            <method name="setLoopType" type="void" line="186">
                <params>
                    <param name="loopType" type="int"/>
                </params>
            </method>
            <method name="getLoopType" type="int" line="189"/>
            <method name="getPitchcorrection" type="float" line="192"/>
            <method name="setPitchcorrection" type="void" line="195">
                <params>
                    <param name="pitchcorrection" type="float"/>
                </params>
            </method>
        </class>
    </source>