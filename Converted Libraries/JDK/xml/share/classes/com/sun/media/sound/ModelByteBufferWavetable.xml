<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="javax.sound.sampled.AudioFormat"/>
        <import package="javax.sound.sampled.AudioInputStream"/>
        <import package="javax.sound.sampled.AudioSystem"/>
        <import package="javax.sound.sampled.AudioFormat.Encoding"/>
        <class name="ModelByteBufferWavetable" line="34">
            <comment line="243">
                attenuation is in cB                
            </comment>
            <comment line="247">
                attenuation is in cB                
            </comment>
            <implements interface="ModelWavetable"/>
            <javadoc line="34">
                Wavetable oscillator for pre-loaded data.                
                <author>
                    Karl Helgason                    
                </author>
            </javadoc>
            <class name="Buffer8PlusInputStream" line="41">
                <extends class="InputStream"/>
                <declaration name="bigendian" type="boolean" line="43"/>
                <declaration name="framesize_pc" type="int" line="44"/>
                <declaration name="pos" type="int" line="45"/>
                <declaration name="pos2" type="int" line="46"/>
                <declaration name="markpos" type="int" line="47"/>
                <declaration name="markpos2" type="int" line="48"/>
                <method name="Buffer8PlusInputStream" type="constructor" line="50"/>
                <method name="read" type="int" line="55">
                    <params>
                        <param name="b" type="byte[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                    <declaration name="avail" type="int" line="56"/>
                    <declaration name="buff1" type="byte[]" line="61"/>
                    <declaration name="buff2" type="byte[]" line="62"/>
                    <scope line="65">
                        <scope line="66"/>
                    </scope>
                    <scope line="72">
                        <scope line="73"/>
                    </scope>
                </method>
                <method name="skip" type="long" line="85">
                    <params>
                        <param name="n" type="long"/>
                    </params>
                    <declaration name="avail" type="int" line="86"/>
                </method>
                <method name="read" type="int" line="96">
                    <params>
                        <param name="b" type="byte[]"/>
                    </params>
                </method>
                <method name="read" type="int" line="100">
                    <declaration name="b" type="byte[]" line="101"/>
                    <declaration name="ret" type="int" line="102"/>
                </method>
                <method name="markSupported" type="boolean" line="108"/>
                <method name="available" type="int" line="112"/>
                <method name="mark" type="void" line="116">
                    <params>
                        <param name="readlimit" type="int"/>
                    </params>
                </method>
                <method name="reset" type="void" line="121"/>
            </class>
            <declaration name="loopStart" type="float" line="128"/>
            <declaration name="loopLength" type="float" line="129"/>
            <declaration name="buffer" type="ModelByteBuffer" line="130"/>
            <declaration name="buffer8" type="ModelByteBuffer" line="131"/>
            <declaration name="format" type="AudioFormat" line="132"/>
            <declaration name="pitchcorrection" type="float" line="133"/>
            <declaration name="attenuation" type="float" line="134"/>
            <declaration name="loopType" type="int" line="135"/>
            <method name="ModelByteBufferWavetable" type="constructor" line="137">
                <params>
                    <param name="buffer" type="ModelByteBuffer"/>
                </params>
            </method>
            <method name="ModelByteBufferWavetable" type="constructor" line="142">
                <params>
                    <param name="buffer" type="ModelByteBuffer"/>
                    <param name="pitchcorrection" type="float"/>
                </params>
            </method>
            <method name="ModelByteBufferWavetable" type="constructor" line="147">
                <params>
                    <param name="buffer" type="ModelByteBuffer"/>
                    <param name="format" type="AudioFormat"/>
                </params>
            </method>
            <method name="ModelByteBufferWavetable" type="constructor" line="153">
                <params>
                    <param name="buffer" type="ModelByteBuffer"/>
                    <param name="format" type="AudioFormat"/>
                    <param name="pitchcorrection" type="float"/>
                </params>
            </method>
            <method name="set8BitExtensionBuffer" type="void" line="159">
                <params>
                    <param name="buffer" type="ModelByteBuffer"/>
                </params>
            </method>
            <method name="get8BitExtensionBuffer" type="ModelByteBuffer" line="163"/>
            <method name="getBuffer" type="ModelByteBuffer" line="167"/>
            <method name="getFormat" type="AudioFormat" line="171">
                <comment line="180">
                    e.printStackTrace();                    
                </comment>
                <comment line="185">
                    e.printStackTrace();                    
                </comment>
                <scope line="172">
                    <declaration name="is" type="InputStream" line="175"/>
                    <declaration name="format" type="AudioFormat" line="176"/>
                    <scope line="177"/>
                    <scope line="179"/>
                    <scope line="182"/>
                    <scope line="184"/>
                </scope>
            </method>
            <method name="openStream" type="AudioFloatInputStream" line="192">
                <comment line="201">
                    e.printStackTrace();                    
                </comment>
                <scope line="195">
                    <declaration name="is" type="InputStream" line="196"/>
                    <declaration name="ais" type="AudioInputStream" line="197"/>
                    <scope line="198"/>
                    <scope line="200"/>
                </scope>
                <scope line="206"/>
                <scope line="211">
                    <scope line="213">
                        <declaration name="is" type="InputStream" line="214"/>
                        <declaration name="format2" type="AudioFormat" line="215"/>
                        <declaration name="ais" type="AudioInputStream" line="224"/>
                    </scope>
                </scope>
            </method>
            <method name="getChannels" type="int" line="233"/>
            <method name="open" type="ModelOscillatorStream" line="237">
                <params>
                    <param name="samplerate" type="float"/>
                </params>
                <comment line="238">
                    ModelWavetableOscillator doesn&apos;t support ModelOscillatorStream                    
                </comment>
            </method>
            <method name="getAttenuation" type="float" line="243"/>
            <method name="setAttenuation" type="void" line="247">
                <params>
                    <param name="attenuation" type="float"/>
                </params>
            </method>
            <method name="getLoopLength" type="float" line="251"/>
            <method name="setLoopLength" type="void" line="255">
                <params>
                    <param name="loopLength" type="float"/>
                </params>
            </method>
            <method name="getLoopStart" type="float" line="259"/>
            <method name="setLoopStart" type="void" line="263">
                <params>
                    <param name="loopStart" type="float"/>
                </params>
            </method>
            <method name="setLoopType" type="void" line="267">
                <params>
                    <param name="loopType" type="int"/>
                </params>
            </method>
            <method name="getLoopType" type="int" line="271"/>
            <method name="getPitchcorrection" type="float" line="275"/>
            <method name="setPitchcorrection" type="void" line="279">
                <params>
                    <param name="pitchcorrection" type="float"/>
                </params>
            </method>
        </class>
    </source>