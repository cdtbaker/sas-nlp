<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <class name="SoftLowFrequencyOscillator" line="27">
            <implements interface="SoftProcess"/>
            <javadoc line="27">
                LFO control signal generator.                
                <author>
                    Karl Helgason                    
                </author>
            </javadoc>
            <declaration name="max_count" type="int" line="34"/>
            <declaration name="used_count" type="int" line="35"/>
            <declaration name="out" type="double[][]" line="36"/>
            <declaration name="delay" type="double[][]" line="37"/>
            <declaration name="delay2" type="double[][]" line="38"/>
            <declaration name="freq" type="double[][]" line="39"/>
            <declaration name="delay_counter" type="int[]" line="40"/>
            <declaration name="sin_phase" type="double[]" line="41"/>
            <declaration name="sin_stepfreq" type="double[]" line="42"/>
            <declaration name="sin_step" type="double[]" line="43"/>
            <declaration name="control_time" type="double" line="44"/>
            <declaration name="sin_factor" type="double" line="45"/>
            <declaration name="PI2" type="double" line="46"/>
            <method name="SoftLowFrequencyOscillator" type="constructor" line="48">
                <comment line="49">
                    If sin_step is 0 then sin_stepfreq must be -INF                    
                </comment>
                <scope line="50"/>
            </method>
            <method name="reset" type="void" line="55">
                <comment line="63">
                    If sin_step is 0 then sin_stepfreq must be -INF                    
                </comment>
                <scope line="56"/>
            </method>
            <method name="init" type="void" line="70">
                <params>
                    <param name="synth" type="SoftSynthesizer"/>
                </params>
                <scope line="73"/>
            </method>
            <method name="processControlLogic" type="void" line="81">
                <comment line="95">
                    double fr = 440.0  Math.pow(2.0,
                    (freq[i][0] - 6900.0)  1200.0);
                    sin_phase[i] += fr  sin_factor;                    
                </comment>
                <comment line="100">
                    sin_phase[i] += sin_step[i];
                    while (sin_phase[i] &gt; PI2)
                    sin_phase[i] -= PI2;
                    out[i][0] = 0.5 + Math.sin(sin_phase[i])  0.5;                    
                </comment>
                <scope line="82">
                    <scope line="83"/>
                    <scope line="86">
                        <declaration name="f" type="double" line="87"/>
                        <scope line="89">
                            <declaration name="fr" type="double" line="91"/>
                        </scope>
                        <declaration name="p" type="double" line="106"/>
                    </scope>
                </scope>
            </method>
            <method name="get" type="double[]" line="117">
                <params>
                    <param name="instance" type="int"/>
                    <param name="name" type="String"/>
                </params>
            </method>
        </class>
    </source>