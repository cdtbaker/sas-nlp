<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <class name="SoftLinearResampler2" line="27">
            <extends class="SoftAbstractResampler"/>
            <javadoc line="27">
                A resampler that uses first-order (linear) interpolation.
                  This one doesn&apos;t perform float to int casting inside the processing loop.                
                <author>
                    Karl Helgason                    
                </author>
            </javadoc>
            <method name="getPadding" type="int" line="36"/>
            <method name="interpolate" type="void" line="42">
                <params>
                    <param name="in" type="float[]"/>
                    <param name="in_offset" type="float[]"/>
                    <param name="in_end" type="float"/>
                    <param name="startpitch" type="float[]"/>
                    <param name="pitchstep" type="float"/>
                    <param name="out" type="float[]"/>
                    <param name="out_offset" type="int[]"/>
                    <param name="out_end" type="int"/>
                </params>
                <comment line="50">
                    Check if we have do anything                    
                </comment>
                <comment line="54">
                    15 bit shift was choosed because                    
                </comment>
                <comment line="55">
                    it resulted in no drift between p_ix and ix.                    
                </comment>
                <comment line="59">
                    Pitch needs to recalculated                    
                </comment>
                <comment line="60">
                    to ensure no drift between p_ix and ix.                    
                </comment>
                <comment line="65">
                    To reduce                    
                </comment>
                <comment line="66">
                    while (p_ix &lt; p_ix_end &amp;&amp; ox &lt; ox_end)                    
                </comment>
                <comment line="67">
                    into                    
                </comment>
                <comment line="68">
                    while  (ox &lt; ox_end)                    
                </comment>
                <comment line="69">
                    We need to calculate new ox_end value.                    
                </comment>
                <declaration name="pitch" type="float" line="44"/>
                <declaration name="ix" type="float" line="45"/>
                <declaration name="ox" type="int" line="46"/>
                <declaration name="ix_end" type="float" line="47"/>
                <declaration name="ox_end" type="int" line="48"/>
                <declaration name="p_ix" type="int" line="56"/>
                <declaration name="p_ix_end" type="int" line="57"/>
                <declaration name="p_pitch" type="int" line="58"/>
                <scope line="63">
                    <declaration name="p_ix_len" type="int" line="70"/>
                    <declaration name="p_mod" type="int" line="71"/>
                    <declaration name="ox_end2" type="int" line="74"/>
                    <scope line="78">
                        <declaration name="iix" type="int" line="79"/>
                        <declaration name="fix" type="float" line="80"/>
                        <declaration name="i" type="float" line="81"/>
                    </scope>
                </scope>
                <scope line="87">
                    <declaration name="p_pitchstep" type="int" line="89"/>
                    <scope line="92">
                        <declaration name="iix" type="int" line="93"/>
                        <declaration name="fix" type="float" line="94"/>
                        <declaration name="i" type="float" line="95"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>