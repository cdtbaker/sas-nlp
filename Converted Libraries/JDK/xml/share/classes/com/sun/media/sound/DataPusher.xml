<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="javax.sound.sampled"/>
        <class name="DataPusher" line="30">
            <comment line="49">
                stream as source data                
            </comment>
            <comment line="52">
                byte array as source data                
            </comment>
            <implements interface="Runnable"/>
            <javadoc line="30">
                Class to write an AudioInputStream to a SourceDataLine.
                  Was previously an inner class in various classes like JavaSoundAudioClip
                  and sun.audio.AudioDevice.
                  It auto-opens and closes the SourceDataLine.                
                <author>
                    Kara Kytle                    
                </author>
                <author>
                    Florian Bomers                    
                </author>
            </javadoc>
            <declaration name="AUTO_CLOSE_TIME" type="int" line="42"/>
            <declaration name="DEBUG" type="boolean" line="43"/>
            <declaration name="source" type="SourceDataLine" line="45"/>
            <declaration name="format" type="AudioFormat" line="46"/>
            <declaration name="ais" type="AudioInputStream" line="49"/>
            <declaration name="audioData" type="byte[]" line="52"/>
            <declaration name="audioDataByteLength" type="int" line="53"/>
            <declaration name="pos" type="int" line="54"/>
            <declaration name="newPos" type="int" line="55"/>
            <declaration name="looping" type="boolean" line="56"/>
            <declaration name="pushThread" type="Thread" line="58"/>
            <declaration name="wantedState" type="int" line="59"/>
            <declaration name="threadState" type="int" line="60"/>
            <declaration name="STATE_NONE" type="int" line="62"/>
            <declaration name="STATE_PLAYING" type="int" line="63"/>
            <declaration name="STATE_WAITING" type="int" line="64"/>
            <declaration name="STATE_STOPPING" type="int" line="65"/>
            <declaration name="STATE_STOPPED" type="int" line="66"/>
            <declaration name="BUFFER_SIZE" type="int" line="67"/>
            <method name="DataPusher" type="constructor" line="69">
                <params>
                    <param name="sourceLine" type="SourceDataLine"/>
                    <param name="format" type="AudioFormat"/>
                    <param name="audioData" type="byte[]"/>
                    <param name="byteLength" type="int"/>
                </params>
            </method>
            <method name="DataPusher" type="constructor" line="76">
                <params>
                    <param name="sourceLine" type="SourceDataLine"/>
                    <param name="ais" type="AudioInputStream"/>
                </params>
            </method>
            <method name="start" type="void" line="82"/>
            <method name="start" type="void" line="86">
                <params>
                    <param name="loop" type="boolean"/>
                </params>
                <comment line="90">
                    wait that the thread has finished stopping                    
                </comment>
                <comment line="108">
                    name                    
                </comment>
                <comment line="109">
                    daemon                    
                </comment>
                <comment line="110">
                    priority                    
                </comment>
                <comment line="111">
                    doStart                    
                </comment>
                <scope line="88">
                    <scope line="89"/>
                    <scope line="97"/>
                    <scope line="105"/>
                </scope>
                <scope line="114"/>
            </method>
            <method name="stop" type="void" line="121">
                <comment line="137">
                    5 seconds                    
                </comment>
                <scope line="125"/>
                <scope line="132"/>
                <declaration name="maxWaitCount" type="int" line="137"/>
                <scope line="138">
                    <scope line="139"/>
                    <scope line="141"/>
                </scope>
            </method>
            <method name="close" type="void" line="146">
                <scope line="147"/>
            </method>
            <javadoc line="153">
                Write data to the source data line.                
            </javadoc>
            <method name="run" type="void" line="156">
                <comment line="165">
                    try {                    
                </comment>
                <comment line="167">
                    wait for 5 seconds - maybe the clip is to be played again                    
                </comment>
                <comment line="187">
                    always write from beginning of buffer                    
                </comment>
                <comment line="188">
                    don&apos;t use read(byte[]), because some streams                    
                </comment>
                <comment line="189">
                    may not override that method                    
                </comment>
                <comment line="192">
                    end of stream                    
                </comment>
                <comment line="200">
                    end of &quot;stream&quot;                    
                </comment>
                <declaration name="buffer" type="byte[]" line="157"/>
                <declaration name="useStream" type="boolean" line="158"/>
                <scope line="159"/>
                <scope line="161"/>
                <scope line="164">
                    <scope line="166">
                        <scope line="169">
                            <scope line="170"/>
                        </scope>
                        <scope line="175"/>
                    </scope>
                    <scope line="179"/>
                    <declaration name="toWrite" type="int" line="184"/>
                    <scope line="185">
                        <scope line="186"/>
                        <scope line="191"/>
                    </scope>
                    <scope line="195">
                        <scope line="196"/>
                        <scope line="199"/>
                    </scope>
                    <scope line="203">
                        <scope line="205"/>
                    </scope>
                    <declaration name="bytesWritten" type="int" line="216"/>
                </scope>
                <scope line="231"/>
            </method>
        </class>
    </source>