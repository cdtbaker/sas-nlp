<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="javax.sound.sampled"/>
        <class name="DataPusher" line="3">
            <implements interface="Runnable"/>
            <javadoc line="3">
                Class to write an AudioInputStream to a SourceDataLine.
                  Was previously an inner class in various classes like JavaSoundAudioClip
                  and sun.audio.AudioDevice.
                  It auto-opens and closes the SourceDataLine.                
                <author>
                    Kara Kytle                    
                </author>
                <author>
                    Florian Bomers                    
                </author>
            </javadoc>
            <declaration name="AUTO_CLOSE_TIME" type="int" line="12"/>
            <declaration name="DEBUG" type="boolean" line="13"/>
            <declaration name="source" type="SourceDataLine" line="14"/>
            <declaration name="format" type="AudioFormat" line="15"/>
            <declaration name="ais" type="AudioInputStream" line="16"/>
            <declaration name="audioData" type="byte[]" line="17"/>
            <declaration name="audioDataByteLength" type="int" line="18"/>
            <declaration name="pos" type="int" line="19"/>
            <declaration name="newPos" type="int" line="20"/>
            <declaration name="looping" type="boolean" line="21"/>
            <declaration name="pushThread" type="Thread" line="22"/>
            <declaration name="wantedState" type="int" line="23"/>
            <declaration name="threadState" type="int" line="24"/>
            <declaration name="STATE_NONE" type="int" line="25"/>
            <declaration name="STATE_PLAYING" type="int" line="26"/>
            <declaration name="STATE_WAITING" type="int" line="27"/>
            <declaration name="STATE_STOPPING" type="int" line="28"/>
            <declaration name="STATE_STOPPED" type="int" line="29"/>
            <declaration name="BUFFER_SIZE" type="int" line="30"/>
            <method name="DataPusher" type="constructor" line="31">
                <params>
                    <param name="sourceLine" type="SourceDataLine"/>
                    <param name="format" type="AudioFormat"/>
                    <param name="audioData" type="byte[]"/>
                    <param name="byteLength" type="int"/>
                </params>
            </method>
            <method name="DataPusher" type="constructor" line="37">
                <params>
                    <param name="sourceLine" type="SourceDataLine"/>
                    <param name="ais" type="AudioInputStream"/>
                </params>
            </method>
            <method name="start" type="void" line="42"/>
            <method name="start" type="void" line="45">
                <params>
                    <param name="loop" type="boolean"/>
                </params>
                <scope line="47">
                    <scope line="48"/>
                    <scope line="55"/>
                    <scope line="63"/>
                </scope>
                <scope line="69"/>
            </method>
            <method name="stop" type="void" line="74">
                <scope line="76"/>
                <scope line="82"/>
                <declaration name="maxWaitCount" type="int" line="87"/>
                <scope line="88">
                    <scope line="89"/>
                    <scope line="92"/>
                </scope>
            </method>
            <method name="close" type="void" line="97">
                <scope line="98"/>
            </method>
            <javadoc line="103">
                Write data to the source data line.                
            </javadoc>
            <method name="run" type="void" line="106">
                <declaration name="buffer" type="byte[]" line="107"/>
                <declaration name="useStream" type="boolean" line="108"/>
                <scope line="109"/>
                <scope line="112"/>
                <scope line="115">
                    <scope line="116">
                        <scope line="118">
                            <scope line="119"/>
                        </scope>
                        <scope line="125"/>
                    </scope>
                    <scope line="130"/>
                    <declaration name="toWrite" type="int" line="135"/>
                    <scope line="136">
                        <scope line="137"/>
                        <scope line="141"/>
                    </scope>
                    <scope line="145">
                        <scope line="146"/>
                        <scope line="149"/>
                    </scope>
                    <scope line="153">
                        <scope line="155"/>
                    </scope>
                    <declaration name="bytesWritten" type="int" line="166"/>
                </scope>
                <scope line="181"/>
            </method>
        </class>
    </source>