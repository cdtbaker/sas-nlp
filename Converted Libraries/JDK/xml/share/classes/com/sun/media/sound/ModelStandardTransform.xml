<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <class name="ModelStandardTransform" line="27">
            <comment line="47">
                concave: output = (20*log10(127^2/value^2)) / 96                
            </comment>
            <comment line="49">
                convex: same as concave except that start and end point are reversed.                
            </comment>
            <comment line="51">
                switch: if value &gt; avg(max,min) then max else min                
            </comment>
            <implements interface="ModelTransform"/>
            <javadoc line="27">
                A standard transformer used in connection blocks.
                  It expects input values to be between 0 and 1.
                  The result of the transform is
                  between 0 and 1 if polarity = unipolar and
                  between -1 and 1 if polarity = bipolar.
                  These constraints only applies to Concave, Convex and Switch transforms.                
                <author>
                    Karl Helgason                    
                </author>
            </javadoc>
            <declaration name="DIRECTION_MIN2MAX" type="boolean" line="41"/>
            <declaration name="DIRECTION_MAX2MIN" type="boolean" line="42"/>
            <declaration name="POLARITY_UNIPOLAR" type="boolean" line="43"/>
            <declaration name="POLARITY_BIPOLAR" type="boolean" line="44"/>
            <declaration name="TRANSFORM_LINEAR" type="int" line="45"/>
            <declaration name="TRANSFORM_CONCAVE" type="int" line="47"/>
            <declaration name="TRANSFORM_CONVEX" type="int" line="49"/>
            <declaration name="TRANSFORM_SWITCH" type="int" line="51"/>
            <declaration name="TRANSFORM_ABSOLUTE" type="int" line="52"/>
            <declaration name="direction" type="boolean" line="53"/>
            <declaration name="polarity" type="boolean" line="54"/>
            <declaration name="transform" type="int" line="55"/>
            <method name="ModelStandardTransform" type="constructor" line="57"/>
            <method name="ModelStandardTransform" type="constructor" line="60">
                <params>
                    <param name="direction" type="boolean"/>
                </params>
            </method>
            <method name="ModelStandardTransform" type="constructor" line="64">
                <params>
                    <param name="direction" type="boolean"/>
                    <param name="polarity" type="boolean"/>
                </params>
            </method>
            <method name="ModelStandardTransform" type="constructor" line="70">
                <params>
                    <param name="direction" type="boolean"/>
                    <param name="polarity" type="boolean"/>
                    <param name="transform" type="int"/>
                </params>
            </method>
            <method name="transform" type="double" line="76">
                <params>
                    <param name="value" type="double"/>
                </params>
                <declaration name="s" type="double" line="77"/>
                <declaration name="a" type="double" line="78"/>
            </method>
            <method name="getDirection" type="boolean" line="116"/>
            <method name="setDirection" type="void" line="120">
                <params>
                    <param name="direction" type="boolean"/>
                </params>
            </method>
            <method name="getPolarity" type="boolean" line="124"/>
            <method name="setPolarity" type="void" line="128">
                <params>
                    <param name="polarity" type="boolean"/>
                </params>
            </method>
            <method name="getTransform" type="int" line="132"/>
            <method name="setTransform" type="void" line="136">
                <params>
                    <param name="transform" type="int"/>
                </params>
            </method>
        </class>
    </source>