<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.util.Arrays"/>
        <import package="javax.sound.sampled.AudioFormat"/>
        <import package="javax.sound.sampled.AudioInputStream"/>
        <import package="javax.sound.sampled.AudioSystem"/>
        <import package="javax.sound.sampled.DataLine"/>
        <import package="javax.sound.sampled.LineEvent"/>
        <import package="javax.sound.sampled.LineUnavailableException"/>
        <import package="javax.sound.sampled.SourceDataLine"/>
        <class name="SoftMixingSourceDataLine" line="12">
            <extends class="SoftMixingDataLine"/>
            <implements interface="SourceDataLine"/>
            <javadoc line="12">
                SourceDataLine implemention for the SoftMixingMixer.                
                <author>
                    Karl Helgason                    
                </author>
            </javadoc>
            <declaration name="open" type="boolean" line="17"/>
            <declaration name="format" type="AudioFormat" line="18"/>
            <declaration name="framesize" type="int" line="19"/>
            <declaration name="bufferSize" type="int" line="20"/>
            <declaration name="readbuffer" type="float[]" line="21"/>
            <declaration name="active" type="boolean" line="22"/>
            <declaration name="cycling_buffer" type="byte[]" line="23"/>
            <declaration name="cycling_read_pos" type="int" line="24"/>
            <declaration name="cycling_write_pos" type="int" line="25"/>
            <declaration name="cycling_avail" type="int" line="26"/>
            <declaration name="cycling_framepos" type="long" line="27"/>
            <declaration name="afis" type="AudioFloatInputStream" line="28"/>
            <class name="NonBlockingFloatInputStream" line="29">
                <extends class="AudioFloatInputStream"/>
                <declaration name="ais" type="AudioFloatInputStream" line="30"/>
                <method name="NonBlockingFloatInputStream" type="constructor" line="31">
                    <params>
                        <param name="ais" type="AudioFloatInputStream"/>
                    </params>
                </method>
                <method name="available" type="int" line="34"/>
                <method name="close" type="void" line="37"/>
                <method name="getFormat" type="AudioFormat" line="40"/>
                <method name="getFrameLength" type="long" line="43"/>
                <method name="mark" type="void" line="46">
                    <params>
                        <param name="readlimit" type="int"/>
                    </params>
                </method>
                <method name="markSupported" type="boolean" line="49"/>
                <method name="read" type="int" line="52">
                    <params>
                        <param name="b" type="float[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                    <declaration name="avail" type="int" line="53"/>
                    <scope line="54">
                        <declaration name="ret" type="int" line="55"/>
                    </scope>
                </method>
                <method name="reset" type="void" line="61"/>
                <method name="skip" type="long" line="64">
                    <params>
                        <param name="len" type="long"/>
                    </params>
                </method>
            </class>
            <method name="SoftMixingSourceDataLine" type="constructor" line="68">
                <params>
                    <param name="mixer" type="SoftMixingMixer"/>
                    <param name="info" type="DataLine.Info"/>
                </params>
            </method>
            <method name="write" type="int" line="71">
                <params>
                    <param name="b" type="byte[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="buff" type="byte[]" line="74"/>
                <declaration name="buff_len" type="int" line="75"/>
                <declaration name="l" type="int" line="76"/>
                <scope line="77">
                    <declaration name="avail" type="int" line="78"/>
                    <scope line="79">
                        <declaration name="pos" type="int" line="80"/>
                        <scope line="82"/>
                    </scope>
                    <scope line="93">
                        <scope line="94"/>
                        <scope line="97"/>
                    </scope>
                </scope>
            </method>
            <declaration name="_active" type="boolean" line="105"/>
            <declaration name="outputformat" type="AudioFormat" line="106"/>
            <declaration name="out_nrofchannels" type="int" line="107"/>
            <declaration name="in_nrofchannels" type="int" line="108"/>
            <declaration name="_rightgain" type="float" line="109"/>
            <declaration name="_leftgain" type="float" line="110"/>
            <declaration name="_eff1gain" type="float" line="111"/>
            <declaration name="_eff2gain" type="float" line="112"/>
            <method name="processControlLogic" type="void" line="113"/>
            <method name="processAudioLogic" type="void" line="120">
                <params>
                    <param name="buffers" type="SoftAudioBuffer[]"/>
                </params>
                <scope line="121">
                    <declaration name="left" type="float[]" line="122"/>
                    <declaration name="right" type="float[]" line="123"/>
                    <declaration name="bufferlen" type="int" line="124"/>
                    <declaration name="readlen" type="int" line="125"/>
                    <scope line="126"/>
                    <declaration name="ret" type="int" line="129"/>
                    <scope line="130"/>
                    <scope line="134"/>
                    <declaration name="in_c" type="int" line="136"/>
                    <scope line="137"/>
                    <scope line="140">
                        <scope line="141">
                            <scope line="142"/>
                        </scope>
                        <scope line="146">
                            <scope line="147"/>
                        </scope>
                    </scope>
                    <scope line="152">
                        <declaration name="eff1" type="float[]" line="153"/>
                        <scope line="154"/>
                        <scope line="157">
                            <scope line="158"/>
                        </scope>
                    </scope>
                    <scope line="163">
                        <declaration name="eff2" type="float[]" line="164"/>
                        <scope line="165"/>
                        <scope line="168">
                            <scope line="169"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="open" type="void" line="176"/>
            <method name="open" type="void" line="179">
                <params>
                    <param name="format" type="AudioFormat"/>
                </params>
            </method>
            <method name="open" type="void" line="183">
                <params>
                    <param name="format" type="AudioFormat"/>
                    <param name="bufferSize" type="int"/>
                </params>
                <declaration name="event" type="LineEvent" line="184"/>
                <scope line="186">
                    <scope line="187">
                        <scope line="188"/>
                        <anonymous_class line="206">
                            <method name="read" type="int" line="207">
                                <declaration name="b" type="byte[]" line="208"/>
                                <declaration name="ret" type="int" line="209"/>
                            </method>
                            <method name="available" type="int" line="213">
                                <scope line="214"/>
                            </method>
                            <method name="read" type="int" line="218">
                                <params>
                                    <param name="b" type="byte[]"/>
                                    <param name="off" type="int"/>
                                    <param name="len" type="int"/>
                                </params>
                                <scope line="219">
                                    <declaration name="pos" type="int" line="221"/>
                                    <declaration name="buff" type="byte[]" line="222"/>
                                    <declaration name="buff_len" type="int" line="223"/>
                                    <scope line="224"/>
                                </scope>
                            </method>
                        </anonymous_class>
                        <declaration name="cycling_inputstream" type="InputStream" line="206"/>
                    </scope>
                    <scope line="241">
                        <scope line="242"/>
                    </scope>
                </scope>
            </method>
            <method name="available" type="int" line="249">
                <scope line="250"/>
            </method>
            <method name="drain" type="void" line="254">
                <scope line="255">
                    <declaration name="avail" type="int" line="256"/>
                    <scope line="257"/>
                    <scope line="261"/>
                    <scope line="264"/>
                </scope>
            </method>
            <method name="flush" type="void" line="269">
                <scope line="270"/>
            </method>
            <method name="getBufferSize" type="int" line="276">
                <scope line="277"/>
            </method>
            <method name="getFormat" type="AudioFormat" line="281">
                <scope line="282"/>
            </method>
            <method name="getFramePosition" type="int" line="286"/>
            <method name="getLevel" type="float" line="289"/>
            <method name="getLongFramePosition" type="long" line="292">
                <scope line="293"/>
            </method>
            <method name="getMicrosecondPosition" type="long" line="297"/>
            <method name="isActive" type="boolean" line="300">
                <scope line="301"/>
            </method>
            <method name="isRunning" type="boolean" line="305">
                <scope line="306"/>
            </method>
            <method name="start" type="void" line="310">
                <declaration name="event" type="LineEvent" line="311"/>
                <scope line="312">
                    <scope line="313"/>
                </scope>
            </method>
            <method name="stop" type="void" line="321">
                <declaration name="event" type="LineEvent" line="322"/>
                <scope line="323">
                    <scope line="324"/>
                </scope>
            </method>
            <method name="close" type="void" line="332">
                <declaration name="event" type="LineEvent" line="333"/>
                <scope line="334"/>
            </method>
            <method name="isOpen" type="boolean" line="343">
                <scope line="344"/>
            </method>
        </class>
    </source>