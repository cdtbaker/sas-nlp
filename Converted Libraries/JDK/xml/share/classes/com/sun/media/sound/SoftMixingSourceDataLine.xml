<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.util.Arrays"/>
        <import package="javax.sound.sampled.AudioFormat"/>
        <import package="javax.sound.sampled.AudioInputStream"/>
        <import package="javax.sound.sampled.AudioSystem"/>
        <import package="javax.sound.sampled.DataLine"/>
        <import package="javax.sound.sampled.LineEvent"/>
        <import package="javax.sound.sampled.LineUnavailableException"/>
        <import package="javax.sound.sampled.SourceDataLine"/>
        <class name="SoftMixingSourceDataLine" line="39">
            <extends class="SoftMixingDataLine"/>
            <comment line="172">
                BooleanControl.Type.APPLY_REVERB
                 BooleanControl.Type.MUTE
                 EnumControl.Type.REVERB
                
                 FloatControl.Type.SAMPLE_RATE
                 FloatControl.Type.REVERB_SEND
                 FloatControl.Type.VOLUME
                 FloatControl.Type.PAN
                 FloatControl.Type.MASTER_GAIN
                 FloatControl.Type.BALANCE                
            </comment>
            <implements interface="SourceDataLine"/>
            <javadoc line="39">
                SourceDataLine implemention for the SoftMixingMixer.                
                <author>
                    Karl Helgason                    
                </author>
            </javadoc>
            <declaration name="open" type="boolean" line="47"/>
            <declaration name="format" type="AudioFormat" line="49"/>
            <declaration name="framesize" type="int" line="51"/>
            <declaration name="bufferSize" type="int" line="53"/>
            <declaration name="readbuffer" type="float[]" line="55"/>
            <declaration name="active" type="boolean" line="57"/>
            <declaration name="cycling_buffer" type="byte[]" line="59"/>
            <declaration name="cycling_read_pos" type="int" line="61"/>
            <declaration name="cycling_write_pos" type="int" line="63"/>
            <declaration name="cycling_avail" type="int" line="65"/>
            <declaration name="cycling_framepos" type="long" line="67"/>
            <declaration name="afis" type="AudioFloatInputStream" line="69"/>
            <class name="NonBlockingFloatInputStream" line="71">
                <extends class="AudioFloatInputStream"/>
                <declaration name="ais" type="AudioFloatInputStream" line="73"/>
                <method name="NonBlockingFloatInputStream" type="constructor" line="75">
                    <params>
                        <param name="ais" type="AudioFloatInputStream"/>
                    </params>
                </method>
                <method name="available" type="int" line="79"/>
                <method name="close" type="void" line="83"/>
                <method name="getFormat" type="AudioFormat" line="87"/>
                <method name="getFrameLength" type="long" line="91"/>
                <method name="mark" type="void" line="95">
                    <params>
                        <param name="readlimit" type="int"/>
                    </params>
                </method>
                <method name="markSupported" type="boolean" line="99"/>
                <method name="read" type="int" line="103">
                    <params>
                        <param name="b" type="float[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                    <declaration name="avail" type="int" line="104"/>
                    <scope line="105">
                        <declaration name="ret" type="int" line="106"/>
                    </scope>
                </method>
                <method name="reset" type="void" line="113"/>
                <method name="skip" type="long" line="117">
                    <params>
                        <param name="len" type="long"/>
                    </params>
                </method>
            </class>
            <method name="SoftMixingSourceDataLine" type="constructor" line="123">
                <params>
                    <param name="mixer" type="SoftMixingMixer"/>
                    <param name="info" type="DataLine.Info"/>
                </params>
            </method>
            <method name="write" type="int" line="127">
                <params>
                    <param name="b" type="byte[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="buff" type="byte[]" line="134"/>
                <declaration name="buff_len" type="int" line="135"/>
                <declaration name="l" type="int" line="137"/>
                <scope line="138">
                    <declaration name="avail" type="int" line="139"/>
                    <scope line="140">
                        <declaration name="pos" type="int" line="141"/>
                        <scope line="143"/>
                    </scope>
                    <scope line="157">
                        <scope line="158"/>
                        <scope line="160"/>
                    </scope>
                </scope>
            </method>
            <declaration name="_active" type="boolean" line="183"/>
            <declaration name="outputformat" type="AudioFormat" line="185"/>
            <declaration name="out_nrofchannels" type="int" line="187"/>
            <declaration name="in_nrofchannels" type="int" line="189"/>
            <declaration name="_rightgain" type="float" line="191"/>
            <declaration name="_leftgain" type="float" line="193"/>
            <declaration name="_eff1gain" type="float" line="195"/>
            <declaration name="_eff2gain" type="float" line="197"/>
            <method name="processControlLogic" type="void" line="199"/>
            <method name="processAudioLogic" type="void" line="207">
                <params>
                    <param name="buffers" type="SoftAudioBuffer[]"/>
                </params>
                <scope line="208">
                    <declaration name="left" type="float[]" line="209"/>
                    <declaration name="right" type="float[]" line="210"/>
                    <declaration name="bufferlen" type="int" line="211"/>
                    <declaration name="readlen" type="int" line="213"/>
                    <scope line="214"/>
                    <declaration name="ret" type="int" line="217"/>
                    <scope line="218"/>
                    <scope line="222"/>
                    <declaration name="in_c" type="int" line="225"/>
                    <scope line="226"/>
                    <scope line="229">
                        <scope line="230">
                            <scope line="231"/>
                        </scope>
                        <scope line="234">
                            <scope line="235"/>
                        </scope>
                    </scope>
                    <scope line="242">
                        <declaration name="eff1" type="float[]" line="243"/>
                        <scope line="245"/>
                        <scope line="248">
                            <scope line="249"/>
                        </scope>
                    </scope>
                    <scope line="255">
                        <declaration name="eff2" type="float[]" line="256"/>
                        <scope line="258"/>
                        <scope line="261">
                            <scope line="262"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="open" type="void" line="271"/>
            <method name="open" type="void" line="275">
                <params>
                    <param name="format" type="AudioFormat"/>
                </params>
            </method>
            <method name="open" type="void" line="283">
                <params>
                    <param name="format" type="AudioFormat"/>
                    <param name="bufferSize" type="int"/>
                </params>
                <declaration name="event" type="LineEvent" line="285"/>
                <scope line="290">
                    <scope line="292">
                        <scope line="293"/>
                        <anonymous_class line="318">
                            <method name="read" type="int" line="320">
                                <declaration name="b" type="byte[]" line="321"/>
                                <declaration name="ret" type="int" line="322"/>
                            </method>
                            <method name="available" type="int" line="328">
                                <scope line="329"/>
                            </method>
                            <method name="read" type="int" line="335">
                                <params>
                                    <param name="b" type="byte[]"/>
                                    <param name="off" type="int"/>
                                    <param name="len" type="int"/>
                                </params>
                                <scope line="337">
                                    <declaration name="pos" type="int" line="340"/>
                                    <declaration name="buff" type="byte[]" line="341"/>
                                    <declaration name="buff_len" type="int" line="342"/>
                                    <scope line="343"/>
                                </scope>
                            </method>
                        </anonymous_class>
                        <declaration name="cycling_inputstream" type="InputStream" line="318"/>
                    </scope>
                    <scope line="369">
                        <scope line="370"/>
                    </scope>
                </scope>
            </method>
            <method name="available" type="int" line="384">
                <scope line="385"/>
            </method>
            <method name="drain" type="void" line="390">
                <scope line="391">
                    <declaration name="avail" type="int" line="392"/>
                    <scope line="393"/>
                    <scope line="398"/>
                    <scope line="400"/>
                </scope>
            </method>
            <method name="flush" type="void" line="406">
                <scope line="407"/>
            </method>
            <method name="getBufferSize" type="int" line="414">
                <scope line="415"/>
            </method>
            <method name="getFormat" type="AudioFormat" line="420">
                <scope line="421"/>
            </method>
            <method name="getFramePosition" type="int" line="426"/>
            <method name="getLevel" type="float" line="430"/>
            <method name="getLongFramePosition" type="long" line="434">
                <scope line="435"/>
            </method>
            <method name="getMicrosecondPosition" type="long" line="440"/>
            <method name="isActive" type="boolean" line="445">
                <scope line="446"/>
            </method>
            <method name="isRunning" type="boolean" line="451">
                <scope line="452"/>
            </method>
            <method name="start" type="void" line="457">
                <declaration name="event" type="LineEvent" line="459"/>
                <scope line="461">
                    <scope line="462"/>
                </scope>
            </method>
            <method name="stop" type="void" line="475">
                <declaration name="event" type="LineEvent" line="476"/>
                <scope line="478">
                    <scope line="479"/>
                </scope>
            </method>
            <method name="close" type="void" line="492">
                <declaration name="event" type="LineEvent" line="494"/>
                <scope line="496"/>
            </method>
            <method name="isOpen" type="boolean" line="513">
                <scope line="514"/>
            </method>
        </class>
    </source>