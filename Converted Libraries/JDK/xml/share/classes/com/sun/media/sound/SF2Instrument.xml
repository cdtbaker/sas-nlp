<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.util.ArrayList"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="javax.sound.midi.Patch"/>
        <class name="SF2Instrument" line="34">
            <extends class="ModelInstrument"/>
            <javadoc line="34">
                Soundfont instrument.                
                <author>
                    Karl Helgason                    
                </author>
            </javadoc>
            <declaration name="name" type="String" line="41"/>
            <declaration name="preset" type="int" line="42"/>
            <declaration name="bank" type="int" line="43"/>
            <declaration name="library" type="long" line="44"/>
            <declaration name="genre" type="long" line="45"/>
            <declaration name="morphology" type="long" line="46"/>
            <declaration name="globalregion" type="SF2GlobalRegion" line="47"/>
            <declaration name="regions" type="List&lt;SF2InstrumentRegion&gt;" line="48"/>
            <method name="SF2Instrument" type="constructor" line="51"/>
            <method name="SF2Instrument" type="constructor" line="55">
                <params>
                    <param name="soundbank" type="SF2Soundbank"/>
                </params>
            </method>
            <method name="getName" type="String" line="59"/>
            <method name="setName" type="void" line="63">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="getPatch" type="Patch" line="67"/>
            <method name="setPatch" type="void" line="74">
                <params>
                    <param name="patch" type="Patch"/>
                </params>
                <scope line="75"/>
                <scope line="78"/>
            </method>
            <method name="getData" type="Object" line="84"/>
            <method name="getGenre" type="long" line="88"/>
            <method name="setGenre" type="void" line="92">
                <params>
                    <param name="genre" type="long"/>
                </params>
            </method>
            <method name="getLibrary" type="long" line="96"/>
            <method name="setLibrary" type="void" line="100">
                <params>
                    <param name="library" type="long"/>
                </params>
            </method>
            <method name="getMorphology" type="long" line="104"/>
            <method name="setMorphology" type="void" line="108">
                <params>
                    <param name="morphology" type="long"/>
                </params>
            </method>
            <method name="getRegions" type="List<SF2InstrumentRegion>" line="112"/>
            <method name="getGlobalRegion" type="SF2GlobalRegion" line="116"/>
            <method name="setGlobalZone" type="void" line="120">
                <params>
                    <param name="zone" type="SF2GlobalRegion"/>
                </params>
            </method>
            <method name="toString" type="String" line="124"/>
            <method name="getPerformers" type="ModelPerformer[]" line="132">
                <comment line="245">
                    if (startAddrsOffset &lt; 0)
                    startAddrsOffset = 0;
                    if (endAddrsOffset &gt; (buff.capacity()2-startAddrsOffset))
                    startAddrsOffset = (int)buff.capacity()2-startAddrsOffset;
                    byte[] data = buff.array();
                    int off = (int)buff.arrayOffset() + startAddrsOffset2;
                    int len = (int)buff.capacity() + endAddrsOffset2;
                    if (off+len &gt; data.length)
                    len = data.length - off;
                    buff = new ModelByteBuffer(data, off, len);
                    if(buff24 != null) {
                    data = buff.array();
                    off = (int)buff.arrayOffset() + startAddrsOffset;
                    len = (int)buff.capacity() + endAddrsOffset;
                    buff24 = new ModelByteBuffer(data, off, len);
                    }                    
                </comment>
                <comment line="284">
                    SampleMode:                    
                </comment>
                <comment line="285">
                    0 indicates a sound reproduced with no loop                    
                </comment>
                <comment line="286">
                    1 indicates a sound which loops continuously                    
                </comment>
                <comment line="287">
                    2 is unused but should be interpreted as indicating no loop                    
                </comment>
                <comment line="288">
                    3 indicates a sound which loops for the duration of key                    
                </comment>
                <comment line="289">
                    depression then proceeds to play the remainder of the sample.                    
                </comment>
                <comment line="351">
                    float fvolsustain = (960-volSustain)*(1000.0f/960.0f);                    
                </comment>
                <declaration name="performercount" type="int" line="133"/>
                <declaration name="performers" type="ModelPerformer[]" line="136"/>
                <declaration name="pi" type="int" line="137"/>
                <declaration name="presetglobal" type="SF2GlobalRegion" line="139"/>
                <scope line="140">
                    <declaration name="pgenerators" type="Map&lt;Integer,Short&gt;" line="141"/>
                    <declaration name="layer" type="SF2Layer" line="146"/>
                    <declaration name="layerglobal" type="SF2GlobalRegion" line="147"/>
                    <scope line="148">
                        <declaration name="performer" type="ModelPerformer" line="149"/>
                        <declaration name="keyfrom" type="int" line="157"/>
                        <declaration name="keyto" type="int" line="158"/>
                        <declaration name="velfrom" type="int" line="159"/>
                        <declaration name="velto" type="int" line="160"/>
                        <scope line="162"/>
                        <scope line="166">
                            <declaration name="bytes" type="byte[]" line="167"/>
                        </scope>
                        <scope line="176">
                            <declaration name="bytes" type="byte[]" line="177"/>
                        </scope>
                        <scope line="186">
                            <declaration name="bytes" type="byte[]" line="187"/>
                        </scope>
                        <scope line="194">
                            <declaration name="bytes" type="byte[]" line="195"/>
                        </scope>
                        <declaration name="startAddrsOffset" type="int" line="207"/>
                        <declaration name="endAddrsOffset" type="int" line="209"/>
                        <declaration name="startloopAddrsOffset" type="int" line="211"/>
                        <declaration name="endloopAddrsOffset" type="int" line="213"/>
                        <declaration name="sample" type="SF2Sample" line="227"/>
                        <declaration name="rootkey" type="int" line="228"/>
                        <scope line="229"/>
                        <declaration name="pitchcorrection" type="float" line="233"/>
                        <declaration name="buff" type="ModelByteBuffer" line="234"/>
                        <declaration name="buff24" type="ModelByteBuffer" line="235"/>
                        <scope line="237">
                            <scope line="240"/>
                        </scope>
                        <declaration name="osc" type="ModelByteBufferWavetable" line="265"/>
                        <declaration name="generators" type="Map&lt;Integer,Short&gt;" line="270"/>
                        <scope line="274">
                            <declaration name="val" type="short" line="275"/>
                        </scope>
                        <declaration name="sampleMode" type="int" line="290"/>
                        <scope line="292">
                            <scope line="293"/>
                        </scope>
                        <declaration name="volDelay" type="short" line="307"/>
                        <declaration name="volAttack" type="short" line="309"/>
                        <declaration name="volHold" type="short" line="311"/>
                        <declaration name="volDecay" type="short" line="313"/>
                        <declaration name="volSustain" type="short" line="315"/>
                        <declaration name="volRelease" type="short" line="317"/>
                        <scope line="320">
                            <declaration name="volKeyNumToHold" type="short" line="321"/>
                            <declaration name="fvalue" type="float" line="324"/>
                            <declaration name="src" type="ModelIdentifier" line="325"/>
                            <declaration name="dest" type="ModelIdentifier" line="326"/>
                        </scope>
                        <scope line="331">
                            <declaration name="volKeyNumToDecay" type="short" line="332"/>
                            <declaration name="fvalue" type="float" line="335"/>
                            <declaration name="src" type="ModelIdentifier" line="336"/>
                            <declaration name="dest" type="ModelIdentifier" line="337"/>
                        </scope>
                        <scope line="367">
                            <declaration name="modDelay" type="short" line="368"/>
                            <declaration name="modAttack" type="short" line="370"/>
                            <declaration name="modHold" type="short" line="372"/>
                            <declaration name="modDecay" type="short" line="374"/>
                            <declaration name="modSustain" type="short" line="376"/>
                            <declaration name="modRelease" type="short" line="378"/>
                            <scope line="382">
                                <declaration name="modKeyNumToHold" type="short" line="383"/>
                                <declaration name="fvalue" type="float" line="386"/>
                                <declaration name="src" type="ModelIdentifier" line="387"/>
                                <declaration name="dest" type="ModelIdentifier" line="388"/>
                            </scope>
                            <scope line="393">
                                <declaration name="modKeyNumToDecay" type="short" line="394"/>
                                <declaration name="fvalue" type="float" line="397"/>
                                <declaration name="src" type="ModelIdentifier" line="398"/>
                                <declaration name="dest" type="ModelIdentifier" line="399"/>
                            </scope>
                            <scope line="423">
                                <declaration name="fvalue" type="double" line="424"/>
                                <declaration name="src" type="ModelIdentifier" line="426"/>
                                <declaration name="dest" type="ModelIdentifier" line="427"/>
                            </scope>
                            <scope line="435">
                                <declaration name="fvalue" type="double" line="436"/>
                                <declaration name="src" type="ModelIdentifier" line="438"/>
                                <declaration name="dest" type="ModelIdentifier" line="439"/>
                            </scope>
                        </scope>
                        <scope line="452">
                            <declaration name="lfo_freq" type="short" line="453"/>
                            <declaration name="lfo_delay" type="short" line="455"/>
                        </scope>
                        <declaration name="vib_freq" type="short" line="463"/>
                        <declaration name="vib_delay" type="short" line="465"/>
                        <scope line="474">
                            <declaration name="fvalue" type="double" line="475"/>
                            <declaration name="src" type="ModelIdentifier" line="477"/>
                            <declaration name="dest" type="ModelIdentifier" line="478"/>
                        </scope>
                        <scope line="488">
                            <declaration name="fvalue" type="double" line="489"/>
                            <declaration name="src" type="ModelIdentifier" line="491"/>
                            <declaration name="dest" type="ModelIdentifier" line="492"/>
                        </scope>
                        <scope line="502">
                            <declaration name="fvalue" type="double" line="503"/>
                            <declaration name="src" type="ModelIdentifier" line="505"/>
                            <declaration name="dest" type="ModelIdentifier" line="506"/>
                        </scope>
                        <scope line="516">
                            <declaration name="fvalue" type="double" line="517"/>
                            <declaration name="src" type="ModelIdentifier" line="519"/>
                            <declaration name="dest" type="ModelIdentifier" line="520"/>
                        </scope>
                        <scope line="529">
                            <declaration name="val" type="double" line="530"/>
                        </scope>
                        <scope line="534">
                            <declaration name="val" type="double" line="535"/>
                        </scope>
                        <scope line="541">
                            <declaration name="filter_freq" type="short" line="542"/>
                            <declaration name="filter_q" type="short" line="544"/>
                        </scope>
                        <declaration name="tune" type="int" line="552"/>
                        <scope line="556"/>
                        <scope line="560">
                            <declaration name="val" type="short" line="561"/>
                        </scope>
                        <scope line="565">
                            <declaration name="val" type="short" line="566"/>
                        </scope>
                        <scope line="572">
                            <declaration name="val" type="short" line="573"/>
                        </scope>
                        <scope line="578">
                            <declaration name="val" type="short" line="579"/>
                        </scope>
                        <scope line="584">
                            <declaration name="fvalue" type="short" line="585"/>
                            <scope line="587">
                                <declaration name="dest" type="ModelIdentifier" line="588"/>
                            </scope>
                            <scope line="592">
                                <declaration name="dest" type="ModelIdentifier" line="593"/>
                            </scope>
                            <declaration name="src" type="ModelIdentifier" line="599"/>
                            <declaration name="dest" type="ModelIdentifier" line="600"/>
                        </scope>
                        <anonymous_class line="610">
                            <method name="transform" type="double" line="611">
                                <params>
                                    <param name="value" type="double"/>
                                </params>
                            </method>
                        </anonymous_class>
                        <scope line="636">
                            <scope line="638"/>
                        </scope>
                        <scope line="645"/>
                    </scope>
                </scope>
            </method>
            <method name="convertModulator" type="void" line="658">
                <params>
                    <param name="performer" type="ModelPerformer"/>
                    <param name="modulator" type="SF2Modulator"/>
                </params>
                <declaration name="src1" type="ModelSource" line="659"/>
                <declaration name="src2" type="ModelSource" line="660"/>
                <declaration name="amount" type="double" line="665"/>
                <declaration name="amountcorrection" type="double[]" line="666"/>
                <declaration name="extrasrc" type="ModelSource[]" line="667"/>
                <declaration name="dst" type="ModelDestination" line="669"/>
                <scope line="674"/>
                <declaration name="conn" type="ModelConnectionBlock" line="678"/>
            </method>
            <method name="convertSource" type="ModelSource" line="685">
                <params>
                    <param name="src" type="int"/>
                </params>
                <declaration name="id" type="ModelIdentifier" line="688"/>
                <declaration name="idsrc" type="int" line="689"/>
                <scope line="690"/>
                <scope line="692"/>
                <declaration name="msrc" type="ModelSource" line="709"/>
                <declaration name="transform" type="ModelStandardTransform" line="710"/>
            </method>
            <method name="convertDestination" type="ModelDestination" line="734">
                <params>
                    <param name="dst" type="int"/>
                    <param name="amountcorrection" type="double[]"/>
                    <param name="extrasrc" type="ModelSource[]"/>
                </params>
                <declaration name="id" type="ModelIdentifier" line="735"/>
            </method>
            <method name="addTimecentValue" type="void" line="882">
                <params>
                    <param name="performer" type="ModelPerformer"/>
                    <param name="dest" type="ModelIdentifier"/>
                    <param name="value" type="short"/>
                </params>
                <declaration name="fvalue" type="double" line="883"/>
            </method>
            <method name="addValue" type="void" line="893">
                <params>
                    <param name="performer" type="ModelPerformer"/>
                    <param name="dest" type="ModelIdentifier"/>
                    <param name="value" type="short"/>
                </params>
                <declaration name="fvalue" type="double" line="894"/>
            </method>
            <method name="addValue" type="void" line="900">
                <params>
                    <param name="performer" type="ModelPerformer"/>
                    <param name="dest" type="ModelIdentifier"/>
                    <param name="value" type="double"/>
                </params>
                <declaration name="fvalue" type="double" line="901"/>
            </method>
            <method name="getGeneratorValue" type="short" line="906">
                <params>
                    <param name="generators" type="Map<Integer,Short>"/>
                    <param name="gen" type="int"/>
                </params>
            </method>
        </class>
    </source>