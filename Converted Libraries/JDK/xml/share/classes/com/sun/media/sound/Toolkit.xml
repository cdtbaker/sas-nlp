<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="javax.sound.sampled.AudioFormat"/>
        <import package="javax.sound.sampled.AudioInputStream"/>
        <import package="javax.sound.sampled.AudioSystem"/>
        <class name="Toolkit" line="5">
            <javadoc line="5">
                Common conversions etc.                
                <author>
                    Kara Kytle                    
                </author>
                <author>
                    Florian Bomers                    
                </author>
            </javadoc>
            <javadoc line="11">
                Converts bytes from signed to unsigned.                
            </javadoc>
            <method name="getUnsigned8" type="void" line="14">
                <params>
                    <param name="b" type="byte[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="15"/>
            </method>
            <javadoc line="19">
                Swaps bytes.                
                <throws>
                    ArrayOutOfBoundsException if len is not a multiple of 2.                    
                </throws>
            </javadoc>
            <method name="getByteSwapped" type="void" line="23">
                <params>
                    <param name="b" type="byte[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="tempByte" type="byte" line="24"/>
                <scope line="25"/>
            </method>
            <javadoc line="31">
                Linear to DB scale conversion.                
            </javadoc>
            <method name="linearToDB" type="float" line="34">
                <params>
                    <param name="linear" type="float"/>
                </params>
                <declaration name="dB" type="float" line="35"/>
            </method>
            <javadoc line="38">
                DB to linear scale conversion.                
            </javadoc>
            <method name="dBToLinear" type="float" line="41">
                <params>
                    <param name="dB" type="float"/>
                </params>
                <declaration name="linear" type="float" line="42"/>
            </method>
            <method name="align" type="long" line="45">
                <params>
                    <param name="bytes" type="long"/>
                    <param name="blockSize" type="int"/>
                </params>
                <scope line="46"/>
            </method>
            <method name="align" type="int" line="51">
                <params>
                    <param name="bytes" type="int"/>
                    <param name="blockSize" type="int"/>
                </params>
                <scope line="52"/>
            </method>
            <method name="millis2bytes" type="long" line="57">
                <params>
                    <param name="format" type="AudioFormat"/>
                    <param name="millis" type="long"/>
                </params>
                <declaration name="result" type="long" line="58"/>
            </method>
            <method name="bytes2millis" type="long" line="61">
                <params>
                    <param name="format" type="AudioFormat"/>
                    <param name="bytes" type="long"/>
                </params>
            </method>
            <method name="micros2bytes" type="long" line="64">
                <params>
                    <param name="format" type="AudioFormat"/>
                    <param name="micros" type="long"/>
                </params>
                <declaration name="result" type="long" line="65"/>
            </method>
            <method name="bytes2micros" type="long" line="68">
                <params>
                    <param name="format" type="AudioFormat"/>
                    <param name="bytes" type="long"/>
                </params>
            </method>
            <method name="micros2frames" type="long" line="71">
                <params>
                    <param name="format" type="AudioFormat"/>
                    <param name="micros" type="long"/>
                </params>
            </method>
            <method name="frames2micros" type="long" line="74">
                <params>
                    <param name="format" type="AudioFormat"/>
                    <param name="frames" type="long"/>
                </params>
            </method>
            <method name="isFullySpecifiedAudioFormat" type="void" line="77">
                <params>
                    <param name="format" type="AudioFormat"/>
                </params>
                <scope line="78"/>
                <scope line="81"/>
                <scope line="84"/>
                <scope line="87"/>
                <scope line="90"/>
                <scope line="93"/>
            </method>
            <method name="isFullySpecifiedPCMFormat" type="boolean" line="97">
                <params>
                    <param name="format" type="AudioFormat"/>
                </params>
                <scope line="98"/>
                <scope line="101"/>
            </method>
            <method name="getPCMConvertedAudioInputStream" type="AudioInputStream" line="106">
                <params>
                    <param name="ais" type="AudioInputStream"/>
                </params>
                <declaration name="af" type="AudioFormat" line="107"/>
                <scope line="108">
                    <scope line="109">
                        <declaration name="newFormat" type="AudioFormat" line="110"/>
                    </scope>
                    <scope line="113"/>
                </scope>
            </method>
        </class>
    </source>