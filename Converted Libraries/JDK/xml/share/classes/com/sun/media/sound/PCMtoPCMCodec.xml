<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.io.InputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.util.Vector"/>
        <import package="javax.sound.sampled.AudioFormat"/>
        <import package="javax.sound.sampled.AudioSystem"/>
        <import package="javax.sound.sampled.AudioInputStream"/>
        <class name="PCMtoPCMCodec" line="38">
            <extends class="SunCodec"/>
            <comment line="70">
                NEW CODE                
            </comment>
            <comment line="147">
                OLD CODE                
            </comment>
            <comment line="590">
                end class PCMtoPCMCodecStream                
            </comment>
            <javadoc line="38">
                Converts among signed/unsigned and little/big endianness of sampled.                
                <author>
                    Jan Borgersen                    
                </author>
            </javadoc>
            <declaration name="inputEncodings" type="AudioFormat.Encoding[]" line="46"/>
            <declaration name="outputEncodings" type="AudioFormat.Encoding[]" line="51"/>
            <declaration name="tempBufferSize" type="int" line="58"/>
            <declaration name="tempBuffer" type="byte" line="59"/>
            <javadoc line="61">
                Constructs a new PCMtoPCM codec object.                
            </javadoc>
            <method name="PCMtoPCMCodec" type="constructor" line="64"/>
            <javadoc line="72">
                                
            </javadoc>
            <method name="getTargetEncodings" type="AudioFormat.Encoding[]" line="74">
                <params>
                    <param name="sourceFormat" type="AudioFormat"/>
                </params>
                <scope line="77">
                    <declaration name="encs" type="AudioFormat.Encoding" line="79"/>
                </scope>
                <scope line="83"/>
            </method>
            <javadoc line="89">
                                
            </javadoc>
            <method name="getTargetFormats" type="AudioFormat[]" line="91">
                <params>
                    <param name="targetEncoding" type="AudioFormat.Encoding"/>
                    <param name="sourceFormat" type="AudioFormat"/>
                </params>
                <comment line="93">
                    filter out targetEncoding from the old getOutputFormats( sourceFormat ) method                    
                </comment>
                <declaration name="formats" type="AudioFormat[]" line="95"/>
                <declaration name="newFormats" type="Vector" line="96"/>
                <scope line="97">
                    <scope line="98"/>
                </scope>
                <declaration name="formatArray" type="AudioFormat[]" line="103"/>
                <scope line="105"/>
            </method>
            <javadoc line="113">
                                
            </javadoc>
            <method name="getAudioInputStream" type="AudioInputStream" line="115">
                <params>
                    <param name="targetEncoding" type="AudioFormat.Encoding"/>
                    <param name="sourceStream" type="AudioInputStream"/>
                </params>
                <scope line="117">
                    <declaration name="sourceFormat" type="AudioFormat" line="119"/>
                    <declaration name="targetFormat" type="AudioFormat" line="120"/>
                </scope>
                <scope line="130"/>
            </method>
            <javadoc line="135">
                use old code                
            </javadoc>
            <method name="getAudioInputStream" type="AudioInputStream" line="138">
                <params>
                    <param name="targetFormat" type="AudioFormat"/>
                    <param name="sourceStream" type="AudioInputStream"/>
                </params>
            </method>
            <javadoc line="148">
                Opens the codec with the specified parameters.                
                <param>
                    stream stream from which data to be processed should be read                    
                </param>
                <param>
                    outputFormat desired data format of the stream after processing                    
                </param>
                <return>
                    stream from which processed data may be read                    
                </return>
                <throws>
                    IllegalArgumentException if the format combination supplied is
                      not supported.                    
                </throws>
            </javadoc>
            <method name="getConvertedStream" type="AudioInputStream" line="157">
                <params>
                    <param name="outputFormat" type="AudioFormat"/>
                    <param name="stream" type="AudioInputStream"/>
                </params>
                <comment line="156">
                                        
                </comment>
                <declaration name="cs" type="AudioInputStream" line="159"/>
                <declaration name="inputFormat" type="AudioFormat" line="161"/>
                <scope line="163"/>
                <scope line="166"/>
            </method>
            <javadoc line="176">
                Obtains the set of output formats supported by the codec
                  given a particular input format.
                  If no output formats are supported for this input format,
                  returns an array of length 0.                
                <return>
                    array of supported output formats.                    
                </return>
            </javadoc>
            <method name="getOutputFormats" type="AudioFormat[]" line="184">
                <params>
                    <param name="inputFormat" type="AudioFormat"/>
                </params>
                <comment line="183">
                                        
                </comment>
                <declaration name="formats" type="Vector" line="186"/>
                <declaration name="format" type="AudioFormat" line="187"/>
                <declaration name="sampleSize" type="int" line="189"/>
                <declaration name="isBigEndian" type="boolean" line="190"/>
                <scope line="193">
                    <scope line="194"/>
                    <scope line="206"/>
                </scope>
                <scope line="218">
                    <scope line="220"/>
                    <scope line="248"/>
                    <scope line="276"/>
                    <scope line="304"/>
                </scope>
                <declaration name="formatArray" type="AudioFormat[]" line="332"/>
                <scope line="334">
                    <scope line="338"/>
                </scope>
            </method>
            <class name="PCMtoPCMCodecStream" line="348">
                <extends class="AudioInputStream"/>
                <comment line="157">
                                        
                </comment>
                <comment line="184">
                                        
                </comment>
                <declaration name="PCM_SWITCH_SIGNED_8BIT" type="int" line="350"/>
                <declaration name="PCM_SWITCH_ENDIAN" type="int" line="351"/>
                <declaration name="PCM_SWITCH_SIGNED_LE" type="int" line="352"/>
                <declaration name="PCM_SWITCH_SIGNED_BE" type="int" line="353"/>
                <declaration name="PCM_UNSIGNED_LE2SIGNED_BE" type="int" line="354"/>
                <declaration name="PCM_SIGNED_LE2UNSIGNED_BE" type="int" line="355"/>
                <declaration name="PCM_UNSIGNED_BE2SIGNED_LE" type="int" line="356"/>
                <declaration name="PCM_SIGNED_BE2UNSIGNED_LE" type="int" line="357"/>
                <declaration name="sampleSizeInBytes" type="int" line="359"/>
                <declaration name="conversionType" type="int" line="360"/>
                <method name="PCMtoPCMCodecStream" type="constructor" line="363">
                    <params>
                        <param name="stream" type="AudioInputStream"/>
                        <param name="outputFormat" type="AudioFormat"/>
                    </params>
                    <comment line="375">
                        throw an IllegalArgumentException if not ok                        
                    </comment>
                    <comment line="388">
                        determine conversion to perform                        
                    </comment>
                    <comment line="436">
                        set the audio stream length in frames if we know it                        
                    </comment>
                    <comment line="448">
                        set framePos to zero                        
                    </comment>
                    <declaration name="sampleSizeInBits" type="int" line="367"/>
                    <declaration name="inputEncoding" type="AudioFormat.Encoding" line="368"/>
                    <declaration name="outputEncoding" type="AudioFormat.Encoding" line="369"/>
                    <declaration name="inputIsBigEndian" type="boolean" line="370"/>
                    <declaration name="outputIsBigEndian" type="boolean" line="371"/>
                    <declaration name="inputFormat" type="AudioFormat" line="373"/>
                    <scope line="376"/>
                    <scope line="390">
                        <scope line="392"/>
                        <scope line="397"/>
                    </scope>
                    <scope line="401">
                        <scope line="403"/>
                        <scope line="410"/>
                        <scope line="416"/>
                        <scope line="422"/>
                        <scope line="428"/>
                    </scope>
                    <scope line="439"/>
                    <scope line="442"/>
                    <scope line="444"/>
                </method>
                <javadoc line="453">
                    Note that this only works for sign conversions.
                      Other conversions require a read of at least 2 bytes.                    
                </javadoc>
                <method name="read" type="int" line="458">
                    <comment line="460">
                        $$jb: do we want to implement this function?                        
                    </comment>
                    <comment line="469">
                        EOF or error                        
                    </comment>
                    <comment line="478">
                        $$jb: what to return here?                        
                    </comment>
                    <declaration name="temp" type="int" line="462"/>
                    <declaration name="tempbyte" type="byte" line="463"/>
                    <scope line="465">
                        <scope line="466"/>
                        <scope line="477"/>
                    </scope>
                    <scope line="481"/>
                </method>
                <method name="read" type="int" line="487">
                    <params>
                        <param name="b" type="byte[]"/>
                    </params>
                </method>
                <method name="read" type="int" line="492">
                    <params>
                        <param name="b" type="byte[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                    <comment line="497">
                        don&apos;t read fractional frames                        
                    </comment>
                    <comment line="501">
                        don&apos;t read past our own set length                        
                    </comment>
                    <comment line="509">
                        EOF or error                        
                    </comment>
                    <comment line="513">
                        now do the conversions                        
                    </comment>
                    <comment line="546">
                        do nothing                        
                    </comment>
                    <comment line="549">
                        we&apos;ve done the conversion, just return the readCount                        
                    </comment>
                    <declaration name="i" type="int" line="495"/>
                    <scope line="498"/>
                    <scope line="502"/>
                    <declaration name="readCount" type="int" line="506"/>
                    <declaration name="tempByte" type="byte" line="507"/>
                    <scope line="509"/>
                </method>
                <method name="switchSigned8bit" type="void" line="554">
                    <params>
                        <param name="b" type="byte[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                        <param name="readCount" type="int"/>
                    </params>
                    <scope line="556"/>
                </method>
                <method name="switchSignedBE" type="void" line="561">
                    <params>
                        <param name="b" type="byte[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                        <param name="readCount" type="int"/>
                    </params>
                    <scope line="563"/>
                </method>
                <method name="switchSignedLE" type="void" line="568">
                    <params>
                        <param name="b" type="byte[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                        <param name="readCount" type="int"/>
                    </params>
                    <scope line="570"/>
                </method>
                <method name="switchEndian" type="void" line="575">
                    <params>
                        <param name="b" type="byte[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                        <param name="readCount" type="int"/>
                    </params>
                    <scope line="577">
                        <scope line="578">
                            <declaration name="temp" type="byte" line="579"/>
                        </scope>
                    </scope>
                </method>
            </class>
        </class>
    </source>