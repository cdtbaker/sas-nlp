<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Arrays"/>
        <import package="javax.sound.sampled.AudioFormat"/>
        <import package="javax.sound.sampled.AudioInputStream"/>
        <import package="javax.sound.sampled.AudioSystem"/>
        <import package="javax.sound.sampled.AudioFormat.Encoding"/>
        <import package="javax.sound.sampled.spi.FormatConversionProvider"/>
        <class name="AudioFloatFormatConverter" line="38">
            <extends class="FormatConversionProvider"/>
            <javadoc line="38">
                This class is used to convert between 8,16,24,32 bit signed/unsigned
                  big/litle endian fixed/floating stereo/mono/multi-channel audio streams and
                  perform sample-rate conversion if needed.                
                <author>
                    Karl Helgason                    
                </author>
            </javadoc>
            <class name="AudioFloatFormatConverterInputStream" line="47">
                <extends class="InputStream"/>
                <declaration name="converter" type="AudioFloatConverter" line="49"/>
                <declaration name="stream" type="AudioFloatInputStream" line="51"/>
                <declaration name="readfloatbuffer" type="float[]" line="53"/>
                <declaration name="fsize" type="int" line="55"/>
                <method name="AudioFloatFormatConverterInputStream" type="constructor" line="58">
                    <params>
                        <param name="targetFormat" type="AudioFormat"/>
                        <param name="stream" type="AudioFloatInputStream"/>
                    </params>
                </method>
                <method name="read" type="int" line="64">
                    <declaration name="b" type="byte[]" line="65"/>
                    <declaration name="ret" type="int" line="66"/>
                </method>
                <method name="read" type="int" line="72">
                    <params>
                        <param name="b" type="byte[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                    <declaration name="flen" type="int" line="74"/>
                    <declaration name="ret" type="int" line="77"/>
                </method>
                <method name="available" type="int" line="84">
                    <declaration name="ret" type="int" line="85"/>
                </method>
                <method name="close" type="void" line="91"/>
                <method name="mark" type="void" line="95">
                    <params>
                        <param name="readlimit" type="int"/>
                    </params>
                </method>
                <method name="markSupported" type="boolean" line="99"/>
                <method name="reset" type="void" line="103"/>
                <method name="skip" type="long" line="107">
                    <params>
                        <param name="n" type="long"/>
                    </params>
                    <declaration name="ret" type="long" line="108"/>
                </method>
            </class>
            <class name="AudioFloatInputStreamChannelMixer" line="116">
                <extends class="AudioFloatInputStream"/>
                <declaration name="targetChannels" type="int" line="119"/>
                <declaration name="sourceChannels" type="int" line="121"/>
                <declaration name="ais" type="AudioFloatInputStream" line="123"/>
                <declaration name="targetFormat" type="AudioFormat" line="125"/>
                <declaration name="conversion_buffer" type="float[]" line="127"/>
                <method name="AudioFloatInputStreamChannelMixer" type="constructor" line="130">
                    <params>
                        <param name="ais" type="AudioFloatInputStream"/>
                        <param name="targetChannels" type="int"/>
                    </params>
                    <declaration name="format" type="AudioFormat" line="134"/>
                </method>
                <method name="available" type="int" line="142"/>
                <method name="close" type="void" line="146"/>
                <method name="getFormat" type="AudioFormat" line="150"/>
                <method name="getFrameLength" type="long" line="154"/>
                <method name="mark" type="void" line="158">
                    <params>
                        <param name="readlimit" type="int"/>
                    </params>
                </method>
                <method name="markSupported" type="boolean" line="162"/>
                <method name="read" type="int" line="166">
                    <params>
                        <param name="b" type="float[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                    <declaration name="len2" type="int" line="167"/>
                    <declaration name="ret" type="int" line="170"/>
                    <scope line="173">
                        <declaration name="cs" type="int" line="174"/>
                        <scope line="175">
                            <scope line="176"/>
                        </scope>
                    </scope>
                    <scope line="180">
                        <declaration name="cs" type="int" line="181"/>
                        <scope line="182"/>
                        <scope line="185">
                            <scope line="186"/>
                        </scope>
                        <declaration name="vol" type="float" line="190"/>
                        <scope line="191"/>
                    </scope>
                    <scope line="194">
                        <declaration name="minChannels" type="int" line="195"/>
                        <declaration name="off_len" type="int" line="196"/>
                        <declaration name="ct" type="int" line="197"/>
                        <declaration name="cs" type="int" line="198"/>
                        <scope line="199">
                            <scope line="200"/>
                        </scope>
                        <scope line="204">
                            <scope line="205"/>
                        </scope>
                    </scope>
                </method>
                <method name="reset" type="void" line="213"/>
                <method name="skip" type="long" line="217">
                    <params>
                        <param name="len" type="long"/>
                    </params>
                    <declaration name="ret" type="long" line="218"/>
                </method>
            </class>
            <class name="AudioFloatInputStreamResampler" line="226">
                <extends class="AudioFloatInputStream"/>
                <declaration name="ais" type="AudioFloatInputStream" line="229"/>
                <declaration name="targetFormat" type="AudioFormat" line="231"/>
                <declaration name="skipbuffer" type="float[]" line="233"/>
                <declaration name="resampler" type="SoftAbstractResampler" line="235"/>
                <declaration name="pitch" type="float[]" line="237"/>
                <declaration name="ibuffer2" type="float[]" line="239"/>
                <declaration name="ibuffer" type="float[][]" line="241"/>
                <declaration name="ibuffer_index" type="float" line="243"/>
                <declaration name="ibuffer_len" type="int" line="245"/>
                <declaration name="nrofchannels" type="int" line="247"/>
                <declaration name="cbuffer" type="float[][]" line="249"/>
                <declaration name="buffer_len" type="int" line="251"/>
                <declaration name="pad" type="int" line="253"/>
                <declaration name="pad2" type="int" line="255"/>
                <declaration name="ix" type="float[]" line="257"/>
                <declaration name="ox" type="int[]" line="259"/>
                <declaration name="mark_ibuffer" type="float[][]" line="261"/>
                <declaration name="mark_ibuffer_index" type="float" line="263"/>
                <declaration name="mark_ibuffer_len" type="int" line="265"/>
                <method name="AudioFloatInputStreamResampler" type="constructor" line="268">
                    <params>
                        <param name="ais" type="AudioFloatInputStream"/>
                        <param name="format" type="AudioFormat"/>
                    </params>
                    <comment line="296">
                        new
                         SoftLinearResampler2();                        
                    </comment>
                    <declaration name="sourceFormat" type="AudioFormat" line="270"/>
                    <declaration name="interpolation" type="Object" line="276"/>
                    <scope line="277">
                        <declaration name="resamplerType" type="String" line="278"/>
                    </scope>
                </method>
                <method name="available" type="int" line="306"/>
                <method name="close" type="void" line="310"/>
                <method name="getFormat" type="AudioFormat" line="314"/>
                <method name="getFrameLength" type="long" line="318">
                    <comment line="320">
                        ais.getFrameLength();                        
                    </comment>
                </method>
                <method name="mark" type="void" line="322">
                    <params>
                        <param name="readlimit" type="int"/>
                    </params>
                    <scope line="326"/>
                    <scope line="329">
                        <declaration name="from" type="float[]" line="330"/>
                        <declaration name="to" type="float[]" line="331"/>
                        <scope line="332"/>
                    </scope>
                </method>
                <method name="markSupported" type="boolean" line="338"/>
                <method name="readNextBuffer" type="void" line="342">
                    <scope line="347">
                        <declaration name="buff" type="float[]" line="348"/>
                        <declaration name="buffer_len_pad" type="int" line="349"/>
                        <scope line="350"/>
                    </scope>
                    <scope line="358">
                        <scope line="359">
                            <declaration name="ret" type="int" line="360"/>
                        </scope>
                    </scope>
                    <scope line="368"/>
                    <declaration name="ibuffer2_len" type="int" line="372"/>
                    <scope line="373">
                        <declaration name="buff" type="float[]" line="374"/>
                        <scope line="375"/>
                    </scope>
                </method>
                <method name="read" type="int" line="382">
                    <params>
                        <param name="b" type="float[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                    <scope line="384"/>
                    <declaration name="offlen" type="int" line="391"/>
                    <declaration name="remain" type="int" line="392"/>
                    <declaration name="destPos" type="int" line="393"/>
                    <declaration name="in_end" type="int" line="394"/>
                    <scope line="395">
                        <scope line="396"/>
                        <scope line="402"/>
                        <declaration name="preDestPos" type="int" line="410"/>
                        <scope line="411">
                            <declaration name="buff" type="float[]" line="414"/>
                        </scope>
                    </scope>
                    <scope line="422">
                        <declaration name="ix" type="int" line="423"/>
                        <declaration name="buff" type="float[]" line="424"/>
                        <scope line="425"/>
                    </scope>
                </method>
                <method name="reset" type="void" line="432">
                    <scope line="438">
                        <declaration name="from" type="float[]" line="439"/>
                        <declaration name="to" type="float[]" line="440"/>
                        <scope line="441"/>
                    </scope>
                </method>
                <method name="skip" type="long" line="448">
                    <params>
                        <param name="len" type="long"/>
                    </params>
                    <declaration name="l_skipbuffer" type="float[]" line="453"/>
                    <declaration name="remain" type="long" line="454"/>
                    <scope line="455">
                        <declaration name="ret" type="int" line="456"/>
                        <scope line="458"/>
                    </scope>
                </method>
            </class>
            <declaration name="formats" type="Encoding[]" line="471"/>
            <method name="getAudioInputStream" type="AudioInputStream" line="475">
                <params>
                    <param name="targetEncoding" type="Encoding"/>
                    <param name="sourceStream" type="AudioInputStream"/>
                </params>
                <declaration name="format" type="AudioFormat" line="478"/>
                <declaration name="channels" type="int" line="479"/>
                <declaration name="encoding" type="Encoding" line="480"/>
                <declaration name="samplerate" type="float" line="481"/>
                <declaration name="bits" type="int" line="482"/>
                <declaration name="bigendian" type="boolean" line="483"/>
                <declaration name="targetFormat" type="AudioFormat" line="486"/>
            </method>
            <method name="getAudioInputStream" type="AudioInputStream" line="492">
                <params>
                    <param name="targetFormat" type="AudioFormat"/>
                    <param name="sourceStream" type="AudioInputStream"/>
                </params>
            </method>
            <method name="getAudioInputStream" type="AudioInputStream" line="502">
                <params>
                    <param name="targetFormat" type="AudioFormat"/>
                    <param name="sourceStream" type="AudioFloatInputStream"/>
                </params>
            </method>
            <method name="getSourceEncodings" type="Encoding[]" line="521"/>
            <method name="getTargetEncodings" type="Encoding[]" line="526"/>
            <method name="getTargetEncodings" type="Encoding[]" line="531">
                <params>
                    <param name="sourceFormat" type="AudioFormat"/>
                </params>
            </method>
            <method name="getTargetFormats" type="AudioFormat[]" line="539">
                <params>
                    <param name="targetEncoding" type="Encoding"/>
                    <param name="sourceFormat" type="AudioFormat"/>
                </params>
                <declaration name="channels" type="int" line="542"/>
                <declaration name="formats" type="ArrayList&lt;AudioFormat&gt;" line="544"/>
                <scope line="555">
                    <scope line="556"/>
                    <scope line="564"/>
                </scope>
                <scope line="574"/>
            </method>
            <method name="isConversionSupported" type="boolean" line="593">
                <params>
                    <param name="targetFormat" type="AudioFormat"/>
                    <param name="sourceFormat" type="AudioFormat"/>
                </params>
            </method>
            <method name="isConversionSupported" type="boolean" line="606">
                <params>
                    <param name="targetEncoding" type="Encoding"/>
                    <param name="sourceFormat" type="AudioFormat"/>
                </params>
                <scope line="609"/>
            </method>
        </class>
    </source>