<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.BufferedInputStream"/>
        <import package="java.io.ByteArrayInputStream"/>
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.applet.AudioClip"/>
        <import package="java.lang.InterruptedException"/>
        <import package="javax.sound.sampled.AudioSystem"/>
        <import package="javax.sound.sampled.Mixer"/>
        <import package="javax.sound.sampled.Clip"/>
        <import package="javax.sound.sampled.Control"/>
        <import package="javax.sound.sampled.AudioInputStream"/>
        <import package="javax.sound.sampled.AudioFormat"/>
        <import package="javax.sound.sampled.DataLine"/>
        <import package="javax.sound.sampled.SourceDataLine"/>
        <import package="javax.sound.sampled.LineEvent"/>
        <import package="javax.sound.sampled.LineListener"/>
        <import package="javax.sound.sampled.LineUnavailableException"/>
        <import package="javax.sound.sampled.UnsupportedAudioFileException"/>
        <import package="javax.sound.midi.MidiSystem"/>
        <import package="javax.sound.midi.MidiFileFormat"/>
        <import package="javax.sound.midi.MetaMessage"/>
        <import package="javax.sound.midi.Sequence"/>
        <import package="javax.sound.midi.Sequencer"/>
        <import package="javax.sound.midi.InvalidMidiDataException"/>
        <import package="javax.sound.midi.MidiUnavailableException"/>
        <import package="javax.sound.midi.MetaEventListener"/>
        <class name="JavaSoundAudioClip" line="59">
            <comment line="70">
                number of bytes written each time to the source data line                
            </comment>
            <comment line="99">
                private final static long CLIP_THRESHOLD = 1;                
            </comment>
            <comment line="256">
                Event handlers (for debugging)                
            </comment>
            <comment line="262">
                handle MIDI track end meta events for looping                
            </comment>
            <comment line="302">
                FILE LOADING METHODS                
            </comment>
            <comment line="382">
                METHODS FOR CREATING THE DEVICE                
            </comment>
            <comment line="475">
                private inner class representing a ByteArrayOutputStream
                 which allows retrieval of the internal array                
            </comment>
            <comment line="488">
                class DirectBAOS                
            </comment>
            <implements interface="AudioClip"/>
            <implements interface="MetaEventListener"/>
            <implements interface="LineListener"/>
            <javadoc line="59">
                Java Sound audio clip;                
                <author>
                    Arthur van Hoff, Kara Kytle, Jan Borgersen                    
                </author>
                <author>
                    Florian Bomers                    
                </author>
            </javadoc>
            <declaration name="DEBUG" type="boolean" line="68"/>
            <declaration name="BUFFER_SIZE" type="int" line="69"/>
            <declaration name="lastPlayCall" type="long" line="71"/>
            <declaration name="MINIMUM_PLAY_DELAY" type="int" line="72"/>
            <declaration name="loadedAudio" type="byte" line="74"/>
            <declaration name="loadedAudioByteLength" type="int" line="75"/>
            <declaration name="loadedAudioFormat" type="AudioFormat" line="76"/>
            <declaration name="clip" type="AutoClosingClip" line="78"/>
            <declaration name="clipLooping" type="boolean" line="79"/>
            <declaration name="datapusher" type="DataPusher" line="81"/>
            <declaration name="sequencer" type="Sequencer" line="83"/>
            <declaration name="sequence" type="Sequence" line="84"/>
            <declaration name="sequencerloop" type="boolean" line="85"/>
            <declaration name="CLIP_THRESHOLD" type="long" line="87"/>
            <javadoc line="87">
                used for determining how many samples is the
                  threshhold between playing as a Clip and streaming
                  from the file.
                  $$jb: 11.07.99: the engine has a limit of 1M
                  samples to play as a Clip, so compare this number
                  with the number of samples in the stream.                
            </javadoc>
            <declaration name="STREAM_BUFFER_SIZE" type="int" line="99"/>
            <method name="JavaSoundAudioClip" type="constructor" line="101">
                <params>
                    <param name="in" type="InputStream"/>
                </params>
                <comment line="109">
                    load the stream data into memory                    
                </comment>
                <comment line="122">
                    not an audio file                    
                </comment>
                <declaration name="bis" type="BufferedInputStream" line="104"/>
                <declaration name="success" type="boolean" line="106"/>
                <scope line="107">
                    <declaration name="as" type="AudioInputStream" line="108"/>
                    <scope line="112">
                        <scope line="114"/>
                        <scope line="117"/>
                    </scope>
                </scope>
                <scope line="121">
                    <scope line="123">
                        <declaration name="mff" type="MidiFileFormat" line="124"/>
                    </scope>
                    <scope line="126"/>
                </scope>
                <scope line="130"/>
            </method>
            <method name="play" type="void" line="136"/>
            <method name="loop" type="void" line="141"/>
            <method name="startImpl" type="void" line="145">
                <params>
                    <param name="loop" type="boolean"/>
                </params>
                <comment line="146">
                    hack for some applets that call the start method very rapidly...                    
                </comment>
                <comment line="165">
                    need to stop in case the looped status changed                    
                </comment>
                <declaration name="currentTime" type="long" line="147"/>
                <declaration name="diff" type="long" line="148"/>
                <scope line="149"/>
                <scope line="156">
                    <scope line="157">
                        <scope line="158"/>
                        <scope line="161">
                            <scope line="164"/>
                        </scope>
                        <scope line="171"/>
                        <scope line="174"/>
                    </scope>
                    <scope line="181"/>
                    <scope line="185">
                        <scope line="187"/>
                        <scope line="190">
                            <scope line="191"/>
                            <scope line="195"/>
                            <scope line="197"/>
                        </scope>
                        <scope line="202"/>
                        <scope line="204"/>
                    </scope>
                </scope>
                <scope line="209"/>
            </method>
            <method name="stop" type="void" line="214">
                <scope line="219">
                    <scope line="220"/>
                    <scope line="223"/>
                    <scope line="226"/>
                    <scope line="229"/>
                </scope>
                <scope line="234"/>
                <scope line="238">
                    <scope line="239"/>
                    <scope line="243"/>
                    <scope line="246"/>
                    <scope line="248"/>
                </scope>
            </method>
            <method name="update" type="void" line="257">
                <params>
                    <param name="event" type="LineEvent"/>
                </params>
            </method>
            <method name="meta" type="void" line="263">
                <params>
                    <param name="message" type="MetaMessage"/>
                </params>
                <comment line="269">
                    notifyAll();                    
                </comment>
                <scope line="267">
                    <scope line="268"/>
                    <scope line="272"/>
                </scope>
            </method>
            <method name="toString" type="String" line="279"/>
            <method name="finalize" type="void" line="284">
                <comment line="291">
                    $$fb 2001-09-26: may improve situation related to bug #4302884                    
                </comment>
                <scope line="286"/>
                <scope line="292"/>
                <scope line="296"/>
            </method>
            <method name="loadAudioData" type="boolean" line="303">
                <params>
                    <param name="as" type="AudioInputStream"/>
                </params>
                <comment line="306">
                    first possibly convert this stream to PCM                    
                </comment>
                <comment line="323">
                    if the stream length is known, it can be efficiently loaded into memory                    
                </comment>
                <comment line="326">
                    otherwise we use a ByteArrayOutputStream to load it into memory                    
                </comment>
                <comment line="330">
                    if everything went fine, we have now the audio data in                    
                </comment>
                <comment line="331">
                    loadedAudio, and the byte length in loadedAudioByteLength                    
                </comment>
                <scope line="308"/>
                <declaration name="frameLen" type="long" line="313"/>
                <declaration name="frameSize" type="int" line="314"/>
                <declaration name="byteLen" type="long" line="315"/>
                <scope line="319"/>
                <scope line="322"/>
                <scope line="325"/>
            </method>
            <method name="readStream" type="void" line="337">
                <params>
                    <param name="as" type="AudioInputStream"/>
                    <param name="byteLen" type="long"/>
                </params>
                <comment line="338">
                    arrays &quot;only&quot; max. 2GB                    
                </comment>
                <comment line="348">
                    this loop may throw an IOException                    
                </comment>
                <declaration name="intLen" type="int" line="339"/>
                <scope line="340"/>
                <scope line="342"/>
                <scope line="349">
                    <declaration name="bytesRead" type="int" line="350"/>
                    <scope line="351"/>
                </scope>
            </method>
            <method name="readStream" type="void" line="359">
                <params>
                    <param name="as" type="AudioInputStream"/>
                </params>
                <comment line="366">
                    this loop may throw an IOException                    
                </comment>
                <declaration name="baos" type="DirectBAOS" line="361"/>
                <declaration name="buffer" type="byte" line="362"/>
                <declaration name="bytesRead" type="int" line="363"/>
                <declaration name="totalBytesRead" type="int" line="364"/>
                <scope line="367">
                    <scope line="369"/>
                </scope>
            </method>
            <method name="createClip" type="boolean" line="383">
                <comment line="391">
                    fail silently                    
                </comment>
                <comment line="397">
                    fail -&gt; will try with SourceDataLine                    
                </comment>
                <comment line="405">
                    fail silently                    
                </comment>
                <comment line="410">
                    fail silently                    
                </comment>
                <scope line="387">
                    <declaration name="info" type="DataLine.Info" line="388"/>
                    <scope line="389"/>
                    <declaration name="line" type="Object" line="394"/>
                    <scope line="395"/>
                </scope>
                <scope line="403"/>
                <scope line="409"/>
            </method>
            <method name="createSourceDataLine" type="boolean" line="418">
                <comment line="424">
                    fail silently                    
                </comment>
                <comment line="431">
                    fail silently                    
                </comment>
                <comment line="436">
                    fail silently                    
                </comment>
                <scope line="420">
                    <declaration name="info" type="DataLine.Info" line="421"/>
                    <scope line="422"/>
                    <declaration name="source" type="SourceDataLine" line="427"/>
                </scope>
                <scope line="429"/>
                <scope line="435"/>
            </method>
            <method name="createSequencer" type="boolean" line="444">
                <params>
                    <param name="in" type="BufferedInputStream"/>
                </params>
                <comment line="448">
                    get the sequencer                    
                </comment>
                <scope line="449"/>
                <scope line="451"/>
                <scope line="455"/>
                <scope line="459">
                    <scope line="461"/>
                </scope>
                <scope line="464"/>
            </method>
            <class name="DirectBAOS" line="478">
                <extends class="ByteArrayOutputStream"/>
                <method name="DirectBAOS" type="constructor" line="479"/>
                <method name="getInternalBuffer" type="byte[]" line="483"/>
            </class>
        </class>
    </source>