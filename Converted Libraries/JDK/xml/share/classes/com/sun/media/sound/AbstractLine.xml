<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.util.Vector"/>
        <import package="javax.sound.sampled.AudioSystem"/>
        <import package="javax.sound.sampled.Control"/>
        <import package="javax.sound.sampled.Mixer"/>
        <import package="javax.sound.sampled.Line"/>
        <import package="javax.sound.sampled.LineEvent"/>
        <import package="javax.sound.sampled.LineListener"/>
        <import package="javax.sound.sampled.LineUnavailableException"/>
        <class name="AbstractLine" line="39">
            <comment line="87">
                LINE METHODS                
            </comment>
            <comment line="169">
                HELPER METHODS                
            </comment>
            <comment line="228">
                $$kk: 06.03.99: returns the mixer used in construction.                
            </comment>
            <comment line="229">
                this is a hold-over from when there was a public method like                
            </comment>
            <comment line="230">
                this on line and should be fixed!!                
            </comment>
            <comment line="239">
                ABSTRACT METHODS                
            </comment>
            <implements interface="Line"/>
            <javadoc line="39">
                AbstractLine                
                <author>
                    Kara Kytle                    
                </author>
            </javadoc>
            <declaration name="info" type="Line.Info" line="46"/>
            <declaration name="controls" type="Control[]" line="47"/>
            <declaration name="mixer" type="AbstractMixer" line="48"/>
            <declaration name="open" type="boolean" line="49"/>
            <declaration name="listeners" type="Vector" line="50"/>
            <declaration name="eventDispatcher" type="EventDispatcher" line="52"/>
            <javadoc line="52">
                Global event thread                
            </javadoc>
            <scope line="57"/>
            <javadoc line="69">
                Constructs a new AbstractLine.                
                <param>
                    mixer the mixer with which this line is associated                    
                </param>
                <param>
                    controls set of supported controls                    
                </param>
            </javadoc>
            <method name="AbstractLine" type="constructor" line="74">
                <params>
                    <param name="info" type="Line.Info"/>
                    <param name="mixer" type="AbstractMixer"/>
                    <param name="controls" type="Control[]"/>
                </params>
                <scope line="76"/>
            </method>
            <method name="getLineInfo" type="Line.Info" line="88"/>
            <method name="isOpen" type="boolean" line="93"/>
            <method name="addLineListener" type="void" line="98">
                <params>
                    <param name="listener" type="LineListener"/>
                </params>
                <scope line="100">
                    <scope line="101"/>
                </scope>
            </method>
            <javadoc line="108">
                Removes an audio listener.                
                <param>
                    listener listener to remove                    
                </param>
            </javadoc>
            <method name="removeLineListener" type="void" line="112">
                <params>
                    <param name="listener" type="LineListener"/>
                </params>
            </method>
            <javadoc line="117">
                Obtains the set of controls supported by the
                  line.  If no controls are supported, returns an
                  array of length 0.                
                <return>
                    control set                    
                </return>
            </javadoc>
            <method name="getControls" type="Control[]" line="123">
                <declaration name="returnedArray" type="Control[]" line="125"/>
                <scope line="127"/>
            </method>
            <method name="isControlSupported" type="boolean" line="135">
                <params>
                    <param name="controlType" type="Control.Type"/>
                </params>
                <comment line="137">
                    protect against a NullPointerException                    
                </comment>
                <scope line="138"/>
                <scope line="142">
                    <scope line="143"/>
                </scope>
            </method>
            <method name="getControl" type="Control" line="152">
                <params>
                    <param name="controlType" type="Control.Type"/>
                </params>
                <comment line="154">
                    protect against a NullPointerException                    
                </comment>
                <scope line="155">
                    <scope line="157">
                        <scope line="158"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="171">
                This method sets the open state and generates
                  events if it changes.                
            </javadoc>
            <method name="setOpen" type="void" line="175">
                <params>
                    <param name="open" type="boolean"/>
                </params>
                <declaration name="sendEvents" type="boolean" line="179"/>
                <declaration name="position" type="long" line="180"/>
                <scope line="182">
                    <scope line="183"/>
                </scope>
                <scope line="189">
                    <scope line="190"/>
                    <scope line="192"/>
                </scope>
            </method>
            <javadoc line="200">
                Send line events.                
            </javadoc>
            <method name="sendEvents" type="void" line="203">
                <params>
                    <param name="event" type="LineEvent"/>
                </params>
            </method>
            <javadoc line="208">
                This is an error in the API: getFramePosition
                  should return a long value. At CD quality,
                  the int value wraps around after 13 hours.                
            </javadoc>
            <method name="getFramePosition" type="int" line="213"/>
            <javadoc line="218">
                Return the frame position in a long value
                  This implementation returns AudioSystem.NOT_SPECIFIED.                
            </javadoc>
            <method name="getLongFramePosition" type="long" line="222"/>
            <method name="getMixer" type="AbstractMixer" line="230"/>
            <method name="getEventDispatcher" type="EventDispatcher" line="234"/>
            <method name="open" type="void" line="240"/>
            <method name="close" type="void" line="241"/>
        </class>
    </source>