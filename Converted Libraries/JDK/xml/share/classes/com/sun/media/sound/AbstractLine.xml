<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.util.Vector"/>
        <import package="javax.sound.sampled.AudioSystem"/>
        <import package="javax.sound.sampled.Control"/>
        <import package="javax.sound.sampled.Mixer"/>
        <import package="javax.sound.sampled.Line"/>
        <import package="javax.sound.sampled.LineEvent"/>
        <import package="javax.sound.sampled.LineListener"/>
        <import package="javax.sound.sampled.LineUnavailableException"/>
        <class name="AbstractLine" line="10">
            <implements interface="Line"/>
            <javadoc line="10">
                AbstractLine                
                <author>
                    Kara Kytle                    
                </author>
            </javadoc>
            <declaration name="info" type="Line.Info" line="15"/>
            <declaration name="controls" type="Control[]" line="16"/>
            <declaration name="mixer" type="AbstractMixer" line="17"/>
            <declaration name="open" type="boolean" line="18"/>
            <declaration name="listeners" type="Vector" line="19"/>
            <declaration name="eventDispatcher" type="EventDispatcher" line="20"/>
            <javadoc line="20">
                Global event thread                
            </javadoc>
            <scope line="24"/>
            <javadoc line="28">
                Constructs a new AbstractLine.                
                <param>
                    mixer the mixer with which this line is associated                    
                </param>
                <param>
                    controls set of supported controls                    
                </param>
            </javadoc>
            <method name="AbstractLine" type="constructor" line="33">
                <params>
                    <param name="info" type="Line.Info"/>
                    <param name="mixer" type="AbstractMixer"/>
                    <param name="controls" type="Control[]"/>
                </params>
                <scope line="34"/>
            </method>
            <method name="getLineInfo" type="Line.Info" line="41"/>
            <method name="isOpen" type="boolean" line="44"/>
            <method name="addLineListener" type="void" line="47">
                <params>
                    <param name="listener" type="LineListener"/>
                </params>
                <scope line="48">
                    <scope line="49"/>
                </scope>
            </method>
            <javadoc line="54">
                Removes an audio listener.                
                <param>
                    listener listener to remove                    
                </param>
            </javadoc>
            <method name="removeLineListener" type="void" line="58">
                <params>
                    <param name="listener" type="LineListener"/>
                </params>
            </method>
            <javadoc line="61">
                Obtains the set of controls supported by the
                  line.  If no controls are supported, returns an
                  array of length 0.                
                <return>
                    control set                    
                </return>
            </javadoc>
            <method name="getControls" type="Control[]" line="67">
                <declaration name="returnedArray" type="Control[]" line="68"/>
                <scope line="69"/>
            </method>
            <method name="isControlSupported" type="boolean" line="74">
                <params>
                    <param name="controlType" type="Control.Type"/>
                </params>
                <scope line="75"/>
                <scope line="78">
                    <scope line="79"/>
                </scope>
            </method>
            <method name="getControl" type="Control" line="85">
                <params>
                    <param name="controlType" type="Control.Type"/>
                </params>
                <scope line="86">
                    <scope line="87">
                        <scope line="88"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="95">
                This method sets the open state and generates
                  events if it changes.                
            </javadoc>
            <method name="setOpen" type="void" line="99">
                <params>
                    <param name="open" type="boolean"/>
                </params>
                <declaration name="sendEvents" type="boolean" line="101"/>
                <declaration name="position" type="long" line="102"/>
                <scope line="103">
                    <scope line="104"/>
                </scope>
                <scope line="109">
                    <scope line="110"/>
                    <scope line="113"/>
                </scope>
            </method>
            <javadoc line="119">
                Send line events.                
            </javadoc>
            <method name="sendEvents" type="void" line="122">
                <params>
                    <param name="event" type="LineEvent"/>
                </params>
            </method>
            <javadoc line="125">
                This is an error in the API: getFramePosition
                  should return a long value. At CD quality,
                  the int value wraps around after 13 hours.                
            </javadoc>
            <method name="getFramePosition" type="int" line="130"/>
            <javadoc line="133">
                Return the frame position in a long value
                  This implementation returns AudioSystem.NOT_SPECIFIED.                
            </javadoc>
            <method name="getLongFramePosition" type="long" line="137"/>
            <method name="getMixer" type="AbstractMixer" line="140"/>
            <method name="getEventDispatcher" type="EventDispatcher" line="143"/>
            <method name="open" type="void" line="146"/>
            <method name="close" type="void" line="147"/>
        </class>
    </source>