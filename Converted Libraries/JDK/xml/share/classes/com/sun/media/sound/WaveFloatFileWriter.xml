<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.io.File"/>
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="javax.sound.sampled.AudioFileFormat"/>
        <import package="javax.sound.sampled.AudioFormat"/>
        <import package="javax.sound.sampled.AudioFormat.Encoding"/>
        <import package="javax.sound.sampled.AudioInputStream"/>
        <import package="javax.sound.sampled.AudioSystem"/>
        <import package="javax.sound.sampled.AudioFileFormat.Type"/>
        <import package="javax.sound.sampled.spi.AudioFileWriter"/>
        <class name="WaveFloatFileWriter" line="12">
            <extends class="AudioFileWriter"/>
            <javadoc line="12">
                Floating-point encoded (format 3) WAVE file writer.                
                <author>
                    Karl Helgason                    
                </author>
            </javadoc>
            <method name="getAudioFileTypes" type="Type[]" line="17"/>
            <method name="getAudioFileTypes" type="Type[]" line="20">
                <params>
                    <param name="stream" type="AudioInputStream"/>
                </params>
            </method>
            <method name="checkFormat" type="void" line="24">
                <params>
                    <param name="type" type="AudioFileFormat.Type"/>
                    <param name="stream" type="AudioInputStream"/>
                </params>
            </method>
            <method name="write" type="void" line="28">
                <params>
                    <param name="stream" type="AudioInputStream"/>
                    <param name="writer" type="RIFFWriter"/>
                </params>
                <declaration name="fmt_chunk" type="RIFFWriter" line="29"/>
                <declaration name="format" type="AudioFormat" line="30"/>
                <declaration name="data_chunk" type="RIFFWriter" line="38"/>
                <declaration name="buff" type="byte[]" line="39"/>
                <declaration name="len" type="int" line="40"/>
            </method>
            <class name="NoCloseOutputStream" line="44">
                <extends class="OutputStream"/>
                <declaration name="out" type="OutputStream" line="45"/>
                <method name="NoCloseOutputStream" type="constructor" line="46">
                    <params>
                        <param name="out" type="OutputStream"/>
                    </params>
                </method>
                <method name="write" type="void" line="49">
                    <params>
                        <param name="b" type="int"/>
                    </params>
                </method>
                <method name="flush" type="void" line="52"/>
                <method name="write" type="void" line="55">
                    <params>
                        <param name="b" type="byte[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                </method>
                <method name="write" type="void" line="58">
                    <params>
                        <param name="b" type="byte[]"/>
                    </params>
                </method>
            </class>
            <method name="toLittleEndian" type="AudioInputStream" line="62">
                <params>
                    <param name="ais" type="AudioInputStream"/>
                </params>
                <declaration name="format" type="AudioFormat" line="63"/>
                <declaration name="targetFormat" type="AudioFormat" line="64"/>
            </method>
            <method name="write" type="int" line="67">
                <params>
                    <param name="stream" type="AudioInputStream"/>
                    <param name="fileType" type="Type"/>
                    <param name="out" type="OutputStream"/>
                </params>
                <declaration name="writer" type="RIFFWriter" line="70"/>
                <declaration name="fpointer" type="int" line="72"/>
            </method>
            <method name="write" type="int" line="76">
                <params>
                    <param name="stream" type="AudioInputStream"/>
                    <param name="fileType" type="Type"/>
                    <param name="out" type="File"/>
                </params>
                <declaration name="writer" type="RIFFWriter" line="79"/>
                <declaration name="fpointer" type="int" line="81"/>
            </method>
        </class>
    </source>