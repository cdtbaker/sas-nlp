<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.media.sound">
        <import package="java.io.File"/>
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="javax.sound.sampled.AudioFileFormat"/>
        <import package="javax.sound.sampled.AudioFormat"/>
        <import package="javax.sound.sampled.AudioFormat.Encoding"/>
        <import package="javax.sound.sampled.AudioInputStream"/>
        <import package="javax.sound.sampled.AudioSystem"/>
        <import package="javax.sound.sampled.AudioFileFormat.Type"/>
        <import package="javax.sound.sampled.spi.AudioFileWriter"/>
        <class name="WaveFloatFileWriter" line="39">
            <extends class="AudioFileWriter"/>
            <javadoc line="39">
                Floating-point encoded (format 3) WAVE file writer.                
                <author>
                    Karl Helgason                    
                </author>
            </javadoc>
            <method name="getAudioFileTypes" type="Type[]" line="46"/>
            <method name="getAudioFileTypes" type="Type[]" line="50">
                <params>
                    <param name="stream" type="AudioInputStream"/>
                </params>
            </method>
            <method name="checkFormat" type="void" line="57">
                <params>
                    <param name="type" type="AudioFileFormat.Type"/>
                    <param name="stream" type="AudioInputStream"/>
                </params>
            </method>
            <method name="write" type="void" line="67">
                <params>
                    <param name="stream" type="AudioInputStream"/>
                    <param name="writer" type="RIFFWriter"/>
                </params>
                <comment line="73">
                    WAVE_FORMAT_IEEE_FLOAT                    
                </comment>
                <declaration name="fmt_chunk" type="RIFFWriter" line="69"/>
                <declaration name="format" type="AudioFormat" line="71"/>
                <declaration name="data_chunk" type="RIFFWriter" line="80"/>
                <declaration name="buff" type="byte[]" line="81"/>
                <declaration name="len" type="int" line="82"/>
            </method>
            <class name="NoCloseOutputStream" line="88">
                <extends class="OutputStream"/>
                <declaration name="out" type="OutputStream" line="89"/>
                <method name="NoCloseOutputStream" type="constructor" line="91">
                    <params>
                        <param name="out" type="OutputStream"/>
                    </params>
                </method>
                <method name="write" type="void" line="95">
                    <params>
                        <param name="b" type="int"/>
                    </params>
                </method>
                <method name="flush" type="void" line="99"/>
                <method name="write" type="void" line="103">
                    <params>
                        <param name="b" type="byte[]"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                </method>
                <method name="write" type="void" line="107">
                    <params>
                        <param name="b" type="byte[]"/>
                    </params>
                </method>
            </class>
            <method name="toLittleEndian" type="AudioInputStream" line="112">
                <params>
                    <param name="ais" type="AudioInputStream"/>
                </params>
                <declaration name="format" type="AudioFormat" line="113"/>
                <declaration name="targetFormat" type="AudioFormat" line="114"/>
            </method>
            <method name="write" type="int" line="122">
                <params>
                    <param name="stream" type="AudioInputStream"/>
                    <param name="fileType" type="Type"/>
                    <param name="out" type="OutputStream"/>
                </params>
                <declaration name="writer" type="RIFFWriter" line="127"/>
                <declaration name="fpointer" type="int" line="129"/>
            </method>
            <method name="write" type="int" line="135">
                <params>
                    <param name="stream" type="AudioInputStream"/>
                    <param name="fileType" type="Type"/>
                    <param name="out" type="File"/>
                </params>
                <declaration name="writer" type="RIFFWriter" line="139"/>
                <declaration name="fpointer" type="int" line="141"/>
            </method>
        </class>
    </source>