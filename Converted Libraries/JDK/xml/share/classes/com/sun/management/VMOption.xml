<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.management">
        <import package="sun.management.VMOptionCompositeData"/>
        <import package="javax.management.openmbean.CompositeData"/>
        <class name="VMOption" line="4">
            <javadoc line="4">
                Information about a VM option including its value and
                  where the value came from which is referred as its{@link VMOption.Origin &lt;i&gt;origin&lt;/i&gt;}.
                  &lt;p&gt;
                  Each VM option has a default value.  A VM option can
                  be set at VM creation time typically as a command line
                  argument to the launcher or an argument passed to the
                  VM created using the JNI invocation interface.
                  In addition, a VM option may be set via an environment
                  variable or a configuration file. A VM option can also
                  be set dynamically via a management interface after
                  the VM was started.
                  A &lt;tt&gt;VMOption&lt;/tt&gt; contains the value of a VM option
                  and the origin of that value at the time this &lt;tt&gt;VMOption&lt;/tt&gt;
                  object was constructed.  The value of the VM option
                  may be changed after the &lt;tt&gt;VMOption&lt;/tt&gt; object was constructed,                
                <see>
                    &lt;a href=&quot;{@docRoot}/../../../../technotes/guides/vm/index.html&quot;&gt;
                              Java Virtual Machine&lt;/a&gt;                    
                </see>
                <author>
                    Mandy Chung                    
                </author>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="name" type="String" line="26"/>
            <declaration name="value" type="String" line="27"/>
            <declaration name="writeable" type="boolean" line="28"/>
            <declaration name="origin" type="Origin" line="29"/>
            <declaration name="Origin" type="enum" line="30"/>
            <javadoc line="30">
                Origin of the value of a VM option.  It tells where the
                  value of a VM option came from.                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <scope line="35"/>
            <javadoc line="62">
                Constructs a &lt;tt&gt;VMOption&lt;/tt&gt;.                
                <param>
                    name Name of a VM option.                    
                </param>
                <param>
                    value Value of a VM option.                    
                </param>
                <param>
                    writeable &lt;tt&gt;true&lt;/tt&gt; if a VM option can be set dynamically,
                      or &lt;tt&gt;false&lt;/tt&gt; otherwise.                    
                </param>
                <param>
                    origin where the value of a VM option came from.                    
                </param>
                <throws>
                    NullPointerException if the name or value is &lt;tt&gt;null&lt;/tt&gt;                    
                </throws>
            </javadoc>
            <method name="VMOption" type="constructor" line="71">
                <params>
                    <param name="name" type="String"/>
                    <param name="value" type="String"/>
                    <param name="writeable" type="boolean"/>
                    <param name="origin" type="Origin"/>
                </params>
            </method>
            <javadoc line="77">
                Constructs a &lt;tt&gt;VMOption&lt;/tt&gt; object from a{@link CompositeData CompositeData}.                
            </javadoc>
            <method name="VMOption" type="constructor" line="80">
                <params>
                    <param name="cd" type="CompositeData"/>
                </params>
            </method>
            <javadoc line="87">
                Returns the name of this VM option.                
                <return>
                    the name of this VM option.                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="91"/>
            <javadoc line="94">
                Returns the value of this VM option at the time when
                  this &lt;tt&gt;VMOption&lt;/tt&gt; was created. The value could have been changed.                
                <return>
                    the value of the VM option at the time when
                      this &lt;tt&gt;VMOption&lt;/tt&gt; was created.                    
                </return>
            </javadoc>
            <method name="getValue" type="String" line="100"/>
            <javadoc line="103">
                Returns the origin of the value of this VM option. That is,
                  where the value of this VM option came from.                
                <return>
                    where the value of this VM option came from.                    
                </return>
            </javadoc>
            <method name="getOrigin" type="Origin" line="108"/>
            <javadoc line="111">
                Tests if this VM option is writeable.  If this VM option is writeable,
                  it can be set by the {@link HotSpotDiagnosticMXBean#setVMOptionHotSpotDiagnosticMXBean} method.                
                <return>
                    &lt;tt&gt;true&lt;/tt&gt; if this VM option is writeable; &lt;tt&gt;false&lt;/tt&gt;
                      otherwise.                    
                </return>
            </javadoc>
            <method name="isWriteable" type="boolean" line="117"/>
            <method name="toString" type="String" line="120"/>
            <javadoc line="123">
                Returns a &lt;tt&gt;VMOption&lt;/tt&gt; object represented by the
                  given &lt;tt&gt;CompositeData&lt;/tt&gt;. The given &lt;tt&gt;CompositeData&lt;/tt&gt;
                  must contain the following attributes:
                  &lt;p&gt;
                  &lt;blockquote&gt;
                  &lt;table border&gt;
                  &lt;tr&gt;
                  &lt;th align=left&gt;Attribute Name&lt;/th&gt;
                  &lt;th align=left&gt;Type&lt;/th&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;name&lt;/td&gt;
                  &lt;td&gt;&lt;tt&gt;java.lang.String&lt;/tt&gt;&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;value&lt;/td&gt;
                  &lt;td&gt;&lt;tt&gt;java.lang.String&lt;/tt&gt;&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;origin&lt;/td&gt;
                  &lt;td&gt;&lt;tt&gt;java.lang.String&lt;/tt&gt;&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;writeable&lt;/td&gt;
                  &lt;td&gt;&lt;tt&gt;java.lang.Boolean&lt;/tt&gt;&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;/table&gt;
                  &lt;/blockquote&gt;                
                <param>
                    cd &lt;tt&gt;CompositeData&lt;/tt&gt; representing a &lt;tt&gt;VMOption&lt;/tt&gt;                    
                </param>
                <throws>
                    IllegalArgumentException if &lt;tt&gt;cd&lt;/tt&gt; does not
                      represent a &lt;tt&gt;VMOption&lt;/tt&gt; with the attributes described
                      above.                    
                </throws>
                <return>
                    a &lt;tt&gt;VMOption&lt;/tt&gt; object represented by &lt;tt&gt;cd&lt;/tt&gt;
                      if &lt;tt&gt;cd&lt;/tt&gt; is not &lt;tt&gt;null&lt;/tt&gt;;
                      &lt;tt&gt;null&lt;/tt&gt; otherwise.                    
                </return>
            </javadoc>
            <method name="from" type="VMOption" line="160">
                <params>
                    <param name="cd" type="CompositeData"/>
                </params>
                <scope line="161"/>
                <scope line="164"/>
                <scope line="167"/>
            </method>
        </class>
    </source>