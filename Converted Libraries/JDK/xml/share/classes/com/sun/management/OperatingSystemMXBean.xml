<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.management">
        <interface name="OperatingSystemMXBean">
            <implements interface="java.lang.management.OperatingSystemMXBean"/>
            <javadoc line="2">
                Platform-specific management interface for the operating system
                  on which the Java virtual machine is running.
                  &lt;p&gt;
                  The &lt;tt&gt;OperatingSystemMXBean&lt;/tt&gt; object returned by{@link java.lang.management.ManagementFactory#getOperatingSystemMXBean()}is an instance of the implementation class of this interface
                  or {@link UnixOperatingSystemMXBean} interface depending on
                  its underlying operating system.                
                <author>
                    Mandy Chung                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="getCommittedVirtualMemorySize" type="long" line="13"/>
            <javadoc line="13">
                Returns the amount of virtual memory that is guaranteed to
                  be available to the running process in bytes,
                  or &lt;tt&gt;-1&lt;/tt&gt; if this operation is not supported.                
                <return>
                    the amount of virtual memory that is guaranteed to
                      be available to the running process in bytes,
                      or &lt;tt&gt;-1&lt;/tt&gt; if this operation is not supported.                    
                </return>
            </javadoc>
            <method name="getTotalSwapSpaceSize" type="long" line="22"/>
            <javadoc line="22">
                Returns the total amount of swap space in bytes.                
                <return>
                    the total amount of swap space in bytes.                    
                </return>
            </javadoc>
            <method name="getFreeSwapSpaceSize" type="long" line="27"/>
            <javadoc line="27">
                Returns the amount of free swap space in bytes.                
                <return>
                    the amount of free swap space in bytes.                    
                </return>
            </javadoc>
            <method name="getProcessCpuTime" type="long" line="32"/>
            <javadoc line="32">
                Returns the CPU time used by the process on which the Java
                  virtual machine is running in nanoseconds.  The returned value
                  is of nanoseconds precision but not necessarily nanoseconds
                  accuracy.  This method returns &lt;tt&gt;-1&lt;/tt&gt; if the
                  the platform does not support this operation.                
                <return>
                    the CPU time used by the process in nanoseconds,
                      or &lt;tt&gt;-1&lt;/tt&gt; if this operation is not supported.                    
                </return>
            </javadoc>
            <method name="getFreePhysicalMemorySize" type="long" line="42"/>
            <javadoc line="42">
                Returns the amount of free physical memory in bytes.                
                <return>
                    the amount of free physical memory in bytes.                    
                </return>
            </javadoc>
            <method name="getTotalPhysicalMemorySize" type="long" line="47"/>
            <javadoc line="47">
                Returns the total amount of physical memory in bytes.                
                <return>
                    the total amount of physical memory in  bytes.                    
                </return>
            </javadoc>
            <method name="getSystemCpuLoad" type="double" line="52"/>
            <javadoc line="52">
                Returns the &quot;recent cpu usage&quot; for the whole system. This value is a
                  double in the [0.0,1.0] interval. A value of 0.0 means that all CPUs
                  were idle during the recent period of time observed, while a value
                  of 1.0 means that all CPUs were actively running 100% of the time
                  during the recent period being observed. All values betweens 0.0 and
                  1.0 are possible depending of the activities going on in the system.
                  If the system recent cpu usage is not available, the method returns a
                  negative value.                
                <return>
                    the &quot;recent cpu usage&quot; for the whole system; a negative
                      value if not available.                    
                </return>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="getProcessCpuLoad" type="double" line="66"/>
            <javadoc line="66">
                Returns the &quot;recent cpu usage&quot; for the Java Virtual Machine process.
                  This value is a double in the [0.0,1.0] interval. A value of 0.0 means
                  that none of the CPUs were running threads from the JVM process during
                  the recent period of time observed, while a value of 1.0 means that all
                  CPUs were actively running threads from the JVM 100% of the time
                  during the recent period being observed. Threads from the JVM include
                  the application threads as well as the JVM internal threads. All values
                  betweens 0.0 and 1.0 are possible depending of the activities going on
                  in the JVM process and the whole system. If the Java Virtual Machine
                  recent CPU usage is not available, the method returns a negative value.                
                <return>
                    the &quot;recent cpu usage&quot; for the Java Virtual Machine process;
                      a negative value if not available.                    
                </return>
                <since>
                    1.7                    
                </since>
            </javadoc>
        </interface>
    </source>