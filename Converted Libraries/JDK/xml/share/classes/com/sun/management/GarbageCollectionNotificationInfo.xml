<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.management">
        <import package="javax.management.Notification"/>
        <import package="javax.management.openmbean.CompositeData"/>
        <import package="javax.management.openmbean.CompositeDataView"/>
        <import package="javax.management.openmbean.CompositeType"/>
        <import package="java.util.Collection"/>
        <import package="java.util.Collections"/>
        <import package="sun.management.GarbageCollectionNotifInfoCompositeData"/>
        <class name="GarbageCollectionNotificationInfo" line="9">
            <implements interface="CompositeDataView"/>
            <javadoc line="9">
                The information about a garbage collection
                  &lt;p&gt;
                  A garbage collection notification is emitted by {@link GarbageCollectorMXBean}when the Java virtual machine completes a garbage collection action
                  The notification emitted will contain the garbage collection notification
                  information about the status of the memory:
                  &lt;u1&gt;
                  &lt;li&gt;The name of the garbage collector used perform the collection.&lt;/li&gt;
                  &lt;li&gt;The action performed by the garbage collector.&lt;/li&gt;
                  &lt;li&gt;The cause of the garbage collection action.&lt;/li&gt;
                  &lt;li&gt;A {@link GcInfo} object containing some statistics about the GC cycle
                  (start time, end time) and the memory usage before and after
                  the GC cycle.&lt;/li&gt;
                  &lt;/u1&gt;
                  &lt;p&gt;
                  A {@link CompositeData CompositeData} representing
                  the {@code GarbageCollectionNotificationInfo} object
                  is stored in the{@linkplain javax.management.Notification#setUserData userdata}of a {@linkplain javax.management.Notification notification}.
                  The {@link #from from} method is provided to convert from
                  a {@code CompositeData} to a {@code GarbageCollectionNotificationInfo}object. For example:
                  &lt;blockquote&gt;&lt;pre&gt;
                  Notification notif;
                  // receive the notification emitted by a GarbageCollectorMXBean and set to notif
                  ...
                  String notifType = notif.getType();
                  if (notifType.equals(GarbageCollectionNotificationInfo.GARBAGE_COLLECTION_NOTIFICATION)) {
                  // retrieve the garbage collection notification information
                  CompositeData cd = (CompositeData) notif.getUserData();
                  GarbageCollectionNotificationInfo info = GarbageCollectionNotificationInfo.from(cd);
                  ....
                  }
                  &lt;/pre&gt;&lt;/blockquote&gt;
                  &lt;p&gt;
                  The type of the notification emitted by a {@code GarbageCollectorMXBean} is:
                  &lt;ul&gt;
                  &lt;li&gt;A {@linkplain #GARBAGE_COLLECTION_NOTIFICATION garbage collection notification}.
                  &lt;br&gt;Used by every notification emitted by the garbage collector, the details about
                  the notification are provided in the {@linkplain #getGcAction action} String
                  &lt;p&gt;&lt;/li&gt;
                  &lt;/ul&gt;                
            </javadoc>
            <declaration name="gcName" type="String" line="51"/>
            <declaration name="gcAction" type="String" line="52"/>
            <declaration name="gcCause" type="String" line="53"/>
            <declaration name="gcInfo" type="GcInfo" line="54"/>
            <declaration name="cdata" type="CompositeData" line="55"/>
            <declaration name="GARBAGE_COLLECTION_NOTIFICATION" type="String" line="56"/>
            <javadoc line="56">
                Notification type denoting that
                  the Java virtual machine has completed a garbage collection cycle.
                  This notification is emitted by a {@link GarbageCollectorMXBean}.
                  The value of this notification type is{@code com.sun.management.gc.notification}.                
            </javadoc>
            <javadoc line="63">
                Constructs a {@code GarbageCollectionNotificationInfo} object.                
                <param>
                    gcName The name of the garbage collector used to perform the collection                    
                </param>
                <param>
                    gcAction The name of the action performed by the garbage collector                    
                </param>
                <param>
                    gcCause The cause the garbage collection action                    
                </param>
                <param>
                    gcInfo  a GcInfo object providing statistics about the GC cycle                    
                </param>
            </javadoc>
            <method name="GarbageCollectionNotificationInfo" type="constructor" line="70">
                <params>
                    <param name="gcName" type="String"/>
                    <param name="gcAction" type="String"/>
                    <param name="gcCause" type="String"/>
                    <param name="gcInfo" type="GcInfo"/>
                </params>
                <scope line="71"/>
                <scope line="74"/>
                <scope line="77"/>
            </method>
            <method name="GarbageCollectionNotificationInfo" type="constructor" line="86">
                <params>
                    <param name="cd" type="CompositeData"/>
                </params>
            </method>
            <javadoc line="94">
                Returns the name of the garbage collector used to perform the collection                
                <return>
                    the name of the garbage collector used to perform the collection                    
                </return>
            </javadoc>
            <method name="getGcName" type="String" line="98"/>
            <javadoc line="101">
                Returns the action of the performed by the garbage collector                
                <return>
                    the the action of the performed by the garbage collector                    
                </return>
            </javadoc>
            <method name="getGcAction" type="String" line="105"/>
            <javadoc line="108">
                Returns the cause  the garbage collection                
                <return>
                    the the cause  the garbage collection                    
                </return>
            </javadoc>
            <method name="getGcCause" type="String" line="112"/>
            <javadoc line="115">
                Returns the GC information related to the last garbage collection                
                <return>
                    the GC information related to the
                      last garbage collection                    
                </return>
            </javadoc>
            <method name="getGcInfo" type="GcInfo" line="120"/>
            <javadoc line="123">
                Returns a {@code GarbageCollectionNotificationInfo} object represented by the
                  given {@code CompositeData}.
                  The given {@code CompositeData} must contain
                  the following attributes:
                  &lt;blockquote&gt;
                  &lt;table border&gt;
                  &lt;tr&gt;
                  &lt;th align=left&gt;Attribute Name&lt;/th&gt;
                  &lt;th align=left&gt;Type&lt;/th&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;gcName&lt;/td&gt;
                  &lt;td&gt;{@code java.lang.String}&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;gcAction&lt;/td&gt;
                  &lt;td&gt;{@code java.lang.String}&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;gcCause&lt;/td&gt;
                  &lt;td&gt;{@code java.lang.String}&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;gcInfo&lt;/td&gt;
                  &lt;td&gt;{@code javax.management.openmbean.CompositeData}&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;/table&gt;
                  &lt;/blockquote&gt;                
                <param>
                    cd {@code CompositeData} representing a{@code GarbageCollectionNotificationInfo}                    
                </param>
                <throws>
                    IllegalArgumentException if {@code cd} does not
                      represent a {@code GarbaageCollectionNotificationInfo} object.                    
                </throws>
                <return>
                    a {@code GarbageCollectionNotificationInfo} object represented
                      by {@code cd} if {@code cd} is not {@code null};{@code null} otherwise.                    
                </return>
            </javadoc>
            <method name="from" type="GarbageCollectionNotificationInfo" line="158">
                <params>
                    <param name="cd" type="CompositeData"/>
                </params>
                <scope line="159"/>
                <scope line="162"/>
                <scope line="165"/>
            </method>
            <method name="toCompositeData" type="CompositeData" line="169">
                <params>
                    <param name="ct" type="CompositeType"/>
                </params>
            </method>
        </class>
    </source>