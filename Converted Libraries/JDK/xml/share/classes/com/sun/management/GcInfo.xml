<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.management">
        <import package="java.lang.management.MemoryUsage"/>
        <import package="javax.management.openmbean.CompositeData"/>
        <import package="javax.management.openmbean.CompositeDataView"/>
        <import package="javax.management.openmbean.CompositeType"/>
        <import package="java.util.Collection"/>
        <import package="java.util.Collections"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Map"/>
        <import package="java.util.List"/>
        <import package="sun.management.GcInfoCompositeData"/>
        <import package="sun.management.GcInfoBuilder"/>
        <class name="GcInfo" line="40">
            <comment line="237">
                Implementation of the CompositeData interface                
            </comment>
            <implements interface="CompositeData"/>
            <implements interface="CompositeDataView"/>
            <javadoc line="40">
                Garbage collection information.  It contains the following
                  information for one garbage collection as well as GC-specific
                  attributes:
                  &lt;blockquote&gt;
                  &lt;ul&gt;
                  &lt;li&gt;Start time&lt;/li&gt;
                  &lt;li&gt;End time&lt;/li&gt;
                  &lt;li&gt;Duration&lt;/li&gt;
                  &lt;li&gt;Memory usage before the collection starts&lt;/li&gt;
                  &lt;li&gt;Memory usage after the collection ends&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/blockquote&gt;
                  &lt;p&gt;
                  &lt;tt&gt;GcInfo&lt;/tt&gt; is a {@link CompositeData CompositeData}The GC-specific attributes can be obtained via the CompositeData
                  interface.  This is a historical relic, and other classes should
                  not copy this pattern.  Use {@link CompositeDataView} instead.
                  &lt;h4&gt;MXBean Mapping&lt;/h4&gt;
                  &lt;tt&gt;GcInfo&lt;/tt&gt; is mapped to a {@link CompositeData CompositeData}with attributes as specified in the {@link #from from} method.                
                <author>
                    Mandy Chung                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="index" type="long" line="68"/>
            <declaration name="startTime" type="long" line="69"/>
            <declaration name="endTime" type="long" line="70"/>
            <declaration name="usageBeforeGc" type="Map&lt;String,MemoryUsage&gt;" line="71"/>
            <declaration name="usageAfterGc" type="Map&lt;String,MemoryUsage&gt;" line="72"/>
            <declaration name="extAttributes" type="Object[]" line="73"/>
            <declaration name="cdata" type="CompositeData" line="74"/>
            <declaration name="builder" type="GcInfoBuilder" line="75"/>
            <method name="GcInfo" type="constructor" line="81">
                <params>
                    <param name="builder" type="GcInfoBuilder"/>
                    <param name="index" type="long"/>
                    <param name="startTime" type="long"/>
                    <param name="endTime" type="long"/>
                    <param name="muBeforeGc" type="MemoryUsage[]"/>
                    <param name="muAfterGc" type="MemoryUsage[]"/>
                    <param name="extAttributes" type="Object[]"/>
                </params>
                <declaration name="poolNames" type="String[]" line="86"/>
                <scope line="89"/>
            </method>
            <method name="GcInfo" type="constructor" line="97">
                <params>
                    <param name="cd" type="CompositeData"/>
                </params>
            </method>
            <javadoc line="110">
                Returns the identifier of this garbage collection which is
                  the number of collections that this collector has done.                
                <return>
                    the identifier of this garbage collection which is
                      the number of collections that this collector has done.                    
                </return>
            </javadoc>
            <method name="getId" type="long" line="117"/>
            <javadoc line="121">
                Returns the start time of this GC in milliseconds
                  since the Java virtual machine was started.                
                <return>
                    the start time of this GC.                    
                </return>
            </javadoc>
            <method name="getStartTime" type="long" line="127"/>
            <javadoc line="131">
                Returns the end time of this GC in milliseconds
                  since the Java virtual machine was started.                
                <return>
                    the end time of this GC.                    
                </return>
            </javadoc>
            <method name="getEndTime" type="long" line="137"/>
            <javadoc line="141">
                Returns the elapsed time of this GC in milliseconds.                
                <return>
                    the elapsed time of this GC in milliseconds.                    
                </return>
            </javadoc>
            <method name="getDuration" type="long" line="146"/>
            <javadoc line="150">
                Returns the memory usage of all memory pools
                  at the beginning of this GC.
                  This method returns
                  a &lt;tt&gt;Map&lt;/tt&gt; of the name of a memory pool
                  to the memory usage of the corresponding
                  memory pool before GC starts.                
                <return>
                    a &lt;tt&gt;Map&lt;/tt&gt; of memory pool names to the memory
                      usage of a memory pool before GC starts.                    
                </return>
            </javadoc>
            <method name="getMemoryUsageBeforeGc" type="Map<String,MemoryUsage>" line="161"/>
            <javadoc line="165">
                Returns the memory usage of all memory pools
                  at the end of this GC.
                  This method returns
                  a &lt;tt&gt;Map&lt;/tt&gt; of the name of a memory pool
                  to the memory usage of the corresponding
                  memory pool when GC finishes.                
                <return>
                    a &lt;tt&gt;Map&lt;/tt&gt; of memory pool names to the memory
                      usage of a memory pool when GC finishes.                    
                </return>
            </javadoc>
            <method name="getMemoryUsageAfterGc" type="Map<String,MemoryUsage>" line="176"/>
            <javadoc line="180">
                Returns a &lt;tt&gt;GcInfo&lt;/tt&gt; object represented by the
                  given &lt;tt&gt;CompositeData&lt;/tt&gt;. The given
                  &lt;tt&gt;CompositeData&lt;/tt&gt; must contain
                  all the following attributes:
                  &lt;p&gt;
                  &lt;blockquote&gt;
                  &lt;table border&gt;
                  &lt;tr&gt;
                  &lt;th align=left&gt;Attribute Name&lt;/th&gt;
                  &lt;th align=left&gt;Type&lt;/th&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;index&lt;/td&gt;
                  &lt;td&gt;&lt;tt&gt;java.lang.Long&lt;/tt&gt;&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;startTime&lt;/td&gt;
                  &lt;td&gt;&lt;tt&gt;java.lang.Long&lt;/tt&gt;&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;endTime&lt;/td&gt;
                  &lt;td&gt;&lt;tt&gt;java.lang.Long&lt;/tt&gt;&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;memoryUsageBeforeGc&lt;/td&gt;
                  &lt;td&gt;&lt;tt&gt;javax.management.openmbean.TabularData&lt;/tt&gt;&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;memoryUsageAfterGc&lt;/td&gt;
                  &lt;td&gt;&lt;tt&gt;javax.management.openmbean.TabularData&lt;/tt&gt;&lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;/table&gt;
                  &lt;/blockquote&gt;                
                <throws>
                    IllegalArgumentException if &lt;tt&gt;cd&lt;/tt&gt; does not
                      represent a &lt;tt&gt;GcInfo&lt;/tt&gt; object with the attributes
                      described above.                    
                </throws>
                <return>
                    a &lt;tt&gt;GcInfo&lt;/tt&gt; object represented by &lt;tt&gt;cd&lt;/tt&gt;
                      if &lt;tt&gt;cd&lt;/tt&gt; is not &lt;tt&gt;null&lt;/tt&gt;; &lt;tt&gt;null&lt;/tt&gt; otherwise.                    
                </return>
            </javadoc>
            <method name="from" type="GcInfo" line="223">
                <params>
                    <param name="cd" type="CompositeData"/>
                </params>
                <scope line="224"/>
                <scope line="228"/>
                <scope line="230"/>
            </method>
            <method name="containsKey" type="boolean" line="237">
                <params>
                    <param name="key" type="String"/>
                </params>
            </method>
            <method name="containsValue" type="boolean" line="241">
                <params>
                    <param name="value" type="Object"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="245">
                <params>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <method name="get" type="Object" line="249">
                <params>
                    <param name="key" type="String"/>
                </params>
            </method>
            <method name="getAll" type="Object[]" line="253">
                <params>
                    <param name="keys" type="String[]"/>
                </params>
            </method>
            <method name="getCompositeType" type="CompositeType" line="257"/>
            <method name="hashCode" type="int" line="261"/>
            <method name="toString" type="String" line="265"/>
            <method name="values" type="Collection" line="269"/>
            <javadoc line="273">
                &lt;p&gt;Return the {@code CompositeData} representation of this{@code GcInfo}, including any GC-specific attributes.  The
                  returned value will have at least all the attributes described
                  in the {@link #from(CompositeData) from} method, plus optionally
                  other attributes.                
                <param>
                    ct the {@code CompositeType} that the caller expects.
                      This parameter is ignored and can be null.                    
                </param>
                <return>
                    the {@code CompositeData} representation.                    
                </return>
            </javadoc>
            <method name="toCompositeData" type="CompositeData" line="285">
                <params>
                    <param name="ct" type="CompositeType"/>
                </params>
            </method>
        </class>
    </source>