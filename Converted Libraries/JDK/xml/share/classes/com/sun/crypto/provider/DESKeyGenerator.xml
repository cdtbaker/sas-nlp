<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.crypto.provider">
        <import package="java.security.SecureRandom"/>
        <import package="java.security.InvalidParameterException"/>
        <import package="java.security.InvalidAlgorithmParameterException"/>
        <import package="java.security.InvalidKeyException"/>
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <import package="javax.crypto.KeyGeneratorSpi"/>
        <import package="javax.crypto.SecretKey"/>
        <import package="javax.crypto.spec.DESKeySpec"/>
        <class name="DESKeyGenerator" line="37">
            <extends class="KeyGeneratorSpi"/>
            <comment line="123">
                Does parity adjustment, using bit in position 8 as the parity bit,
                 for 8 key bytes, starting at &lt;code&gt;offset&lt;code&gt;.
                
                 The 8 parity bits of a DES key are only used for sanity-checking
                 of the key, to see if the key could actually be a key. If you check
                 the parity of the quantity, and it winds up not having the correct
                 parity, then you&apos;ll know something went wrong.
                
                 A key that is not parity adjusted (e.g. e4e4e4e4e4e4e4e4) produces the
                 same output as a key that is parity adjusted (e.g. e5e5e5e5e5e5e5e5),
                 because it is the 56 bits of the DES key that are cryptographically
                 significant&quot;effective&quot; -- the other 8 bits are just used for parity
                 checking.                
            </comment>
            <javadoc line="37">
                This class generates a DES key.                
                <author>
                    Jan Luehe                    
                </author>
            </javadoc>
            <declaration name="random" type="SecureRandom" line="46"/>
            <javadoc line="48">
                Empty constructor                
            </javadoc>
            <method name="DESKeyGenerator" type="constructor" line="51"/>
            <javadoc line="54">
                Initializes this key generator.                
                <param>
                    random the source of randomness for this generator                    
                </param>
            </javadoc>
            <method name="engineInit" type="void" line="59">
                <params>
                    <param name="random" type="SecureRandom"/>
                </params>
            </method>
            <javadoc line="63">
                Initializes this key generator with the specified parameter
                  set and a user-provided source of randomness.                
                <param>
                    params the key generation parameters                    
                </param>
                <param>
                    random the source of randomness for this key generator                    
                </param>
                <exception>
                    InvalidAlgorithmParameterException if &lt;code&gt;params&lt;/code&gt; is
                      inappropriate for this key generator                    
                </exception>
            </javadoc>
            <method name="engineInit" type="void" line="75">
                <params>
                    <param name="params" type="AlgorithmParameterSpec"/>
                    <param name="random" type="SecureRandom"/>
                </params>
            </method>
            <javadoc line="80">
                Initializes this key generator for a certain keysize, using the given
                  source of randomness.                
                <param>
                    keysize the keysize. This is an algorithm-specific
                      metric specified in number of bits.                    
                </param>
                <param>
                    random the source of randomness for this key generator                    
                </param>
            </javadoc>
            <method name="engineInit" type="void" line="88">
                <params>
                    <param name="keysize" type="int"/>
                    <param name="random" type="SecureRandom"/>
                </params>
                <scope line="89"/>
            </method>
            <javadoc line="96">
                Generates the DES key.                
                <return>
                    the new DES key                    
                </return>
            </javadoc>
            <method name="engineGenerateKey" type="SecretKey" line="101">
                <comment line="117">
                    this is never thrown                    
                </comment>
                <declaration name="desKey" type="DESKey" line="102"/>
                <scope line="104"/>
                <scope line="108">
                    <declaration name="key" type="byte[]" line="109"/>
                    <scope line="110"/>
                </scope>
                <scope line="115"/>
            </method>
            <method name="setParityBit" type="void" line="137">
                <params>
                    <param name="key" type="byte[]"/>
                    <param name="offset" type="int"/>
                </params>
                <scope line="141">
                    <declaration name="b" type="int" line="142"/>
                </scope>
            </method>
        </class>
    </source>