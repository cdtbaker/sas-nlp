<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.crypto.provider">
        <import package="java.io.IOException"/>
        <import package="java.io.Serializable"/>
        <import package="java.io.ObjectStreamException"/>
        <import package="java.security.AlgorithmParameters"/>
        <import package="java.security.NoSuchAlgorithmException"/>
        <import package="java.security.NoSuchProviderException"/>
        <import package="javax.crypto.Cipher"/>
        <import package="javax.crypto.IllegalBlockSizeException"/>
        <import package="javax.crypto.SealedObject"/>
        <import package="javax.crypto.spec"/>
        <class name="ai" line="12">
            <extends class="javax.crypto.SealedObject"/>
            <javadoc line="12">
                This class is introduced to workaround a problem in
                  the SunJCE provider shipped in JCE 1.2.1: the class
                  SealedObjectForKeyProtector was obfuscated due to a mistake.
                  In order to retrieve secret keys in a JCEKS KeyStore written
                  by the SunJCE provider in JCE 1.2.1, this class will be used.                
                <author>
                    Valerie Peng                    
                </author>
                <see>
                    JceKeyStore                    
                </see>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="22"/>
            <method name="ai" type="constructor" line="23">
                <params>
                    <param name="so" type="SealedObject"/>
                </params>
            </method>
            <method name="readResolve" type="Object" line="26"/>
        </class>
    </source>