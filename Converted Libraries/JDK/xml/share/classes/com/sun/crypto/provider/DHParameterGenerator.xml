<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.crypto.provider">
        <import package="java.math.BigInteger"/>
        <import package="java.security"/>
        <import package="java.security.spec"/>
        <import package="javax.crypto.spec.DHParameterSpec"/>
        <import package="javax.crypto.spec.DHGenParameterSpec"/>
        <class name="DHParameterGenerator" line="7">
            <extends class="AlgorithmParameterGeneratorSpi"/>
            <declaration name="primeSize" type="int" line="8"/>
            <declaration name="exponentSize" type="int" line="9"/>
            <declaration name="random" type="SecureRandom" line="10"/>
            <javadoc line="11">
                Initializes this parameter generator for a certain keysize
                  and source of randomness.
                  The keysize is specified as the size in bits of the prime modulus.                
                <param>
                    keysize the keysize (size of prime modulus) in bits                    
                </param>
                <param>
                    random the source of randomness                    
                </param>
            </javadoc>
            <method name="engineInit" type="void" line="18">
                <params>
                    <param name="keysize" type="int"/>
                    <param name="random" type="SecureRandom"/>
                </params>
                <scope line="19"/>
            </method>
            <javadoc line="25">
                Initializes this parameter generator with a set of parameter
                  generation values, which specify the size of the prime modulus and
                  the size of the random exponent, both in bits.                
                <param>
                    params the set of parameter generation values                    
                </param>
                <param>
                    random the source of randomness                    
                </param>
                <exception>
                    InvalidAlgorithmParameterException if the given parameter
                      generation values are inappropriate for this parameter generator                    
                </exception>
            </javadoc>
            <method name="engineInit" type="void" line="34">
                <params>
                    <param name="genParamSpec" type="AlgorithmParameterSpec"/>
                    <param name="random" type="SecureRandom"/>
                </params>
                <scope line="35"/>
                <declaration name="dhParamSpec" type="DHGenParameterSpec" line="38"/>
                <scope line="40"/>
                <scope line="44"/>
                <scope line="47"/>
            </method>
            <javadoc line="51">
                Generates the parameters.                
                <return>
                    the new AlgorithmParameters object                    
                </return>
            </javadoc>
            <method name="engineGenerateParameters" type="AlgorithmParameters" line="55">
                <declaration name="algParams" type="AlgorithmParameters" line="56"/>
                <scope line="57"/>
                <scope line="61">
                    <declaration name="paramGen" type="AlgorithmParameterGenerator" line="62"/>
                    <declaration name="dsaParamSpec" type="DSAParameterSpec" line="63"/>
                    <declaration name="dhParamSpec" type="DHParameterSpec" line="68"/>
                    <scope line="69"/>
                    <scope line="72"/>
                </scope>
                <scope line="78"/>
                <scope line="81"/>
                <scope line="84"/>
            </method>
        </class>
    </source>