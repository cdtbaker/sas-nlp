<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.crypto.provider">
        <import package="javax.crypto.KeyGeneratorSpi"/>
        <import package="javax.crypto.SecretKey"/>
        <import package="javax.crypto.spec.DESedeKeySpec"/>
        <import package="java.security.SecureRandom"/>
        <import package="java.security.InvalidParameterException"/>
        <import package="java.security.InvalidAlgorithmParameterException"/>
        <import package="java.security.InvalidKeyException"/>
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <class name="DESedeKeyGenerator" line="37">
            <extends class="KeyGeneratorSpi"/>
            <javadoc line="37">
                This class generates a Triple DES key.                
                <author>
                    Jan Luehe                    
                </author>
            </javadoc>
            <declaration name="random" type="SecureRandom" line="46"/>
            <declaration name="keysize" type="int" line="47"/>
            <javadoc line="49">
                Empty constructor                
            </javadoc>
            <method name="DESedeKeyGenerator" type="constructor" line="52"/>
            <javadoc line="55">
                Initializes this key generator.                
                <param>
                    random the source of randomness for this generator                    
                </param>
            </javadoc>
            <method name="engineInit" type="void" line="60">
                <params>
                    <param name="random" type="SecureRandom"/>
                </params>
            </method>
            <javadoc line="64">
                Initializes this key generator with the specified parameter
                  set and a user-provided source of randomness.                
                <param>
                    params the key generation parameters                    
                </param>
                <param>
                    random the source of randomness for this key generator                    
                </param>
                <exception>
                    InvalidAlgorithmParameterException if <code>params</code> is
                      inappropriate for this key generator                    
                </exception>
            </javadoc>
            <method name="engineInit" type="void" line="76">
                <params>
                    <param name="params" type="AlgorithmParameterSpec"/>
                    <param name="random" type="SecureRandom"/>
                </params>
            </method>
            <javadoc line="81">
                Initializes this key generator for a certain keysize, using the given
                  source of randomness.                
                <param>
                    keysize the keysize. This is an algorithm-specific
                      metric specified in number of bits. A keysize with 112 bits of entropy
                      corresponds to a Triple DES key with 2 intermediate keys, and a keysize
                      with 168 bits of entropy corresponds to a Triple DES key with 3
                      intermediate keys.                    
                </param>
                <param>
                    random the source of randomness for this key generator                    
                </param>
            </javadoc>
            <method name="engineInit" type="void" line="92">
                <params>
                    <param name="keysize" type="int"/>
                    <param name="random" type="SecureRandom"/>
                </params>
                <scope line="93"/>
            </method>
            <javadoc line="101">
                Generates the Triple DES key.                
                <return>
                    the new Triple DES key                    
                </return>
            </javadoc>
            <method name="engineGenerateKey" type="SecretKey" line="106">
                <comment line="115">
                    3 intermediate keys                    
                </comment>
                <comment line="118">
                    Do parity adjustment for each intermediate key                    
                </comment>
                <comment line="123">
                    2 intermediate keys                    
                </comment>
                <comment line="129">
                    Copy the first 8 bytes into the last                    
                </comment>
                <comment line="138">
                    this never happens                    
                </comment>
                <scope line="107"/>
                <declaration name="rawkey" type="byte[]" line="111"/>
                <scope line="113"/>
                <scope line="121">
                    <declaration name="tmpkey" type="byte[]" line="123"/>
                </scope>
                <declaration name="desEdeKey" type="DESedeKey" line="133"/>
                <scope line="134"/>
                <scope line="136"/>
            </method>
        </class>
    </source>