<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.crypto.provider">
        <import package="java.io.UnsupportedEncodingException"/>
        <import package="java.math.BigInteger"/>
        <import package="java.security"/>
        <import package="java.security.spec"/>
        <import package="java.util.Arrays"/>
        <import package="javax.crypto"/>
        <import package="javax.crypto.spec"/>
        <class name="PKCS12PBECipherCore" line="9">
            <javadoc line="9">
                This class implements password-base encryption algorithm with
                  SHA1 digest and the following Ciphers in CBC mode
                  - DESede cipher and
                  - RC2 Cipher with 40-bit effective key length
                  as defined by PKCS #12 version 1.0 standard.                
                <author>
                    Valerie Peng                    
                </author>
                <see>
                    javax.crypto.CipherSpi                    
                </see>
            </javadoc>
            <declaration name="cipher" type="CipherCore" line="19"/>
            <declaration name="blockSize" type="int" line="20"/>
            <declaration name="keySize" type="int" line="21"/>
            <declaration name="algo" type="String" line="22"/>
            <declaration name="salt" type="byte[]" line="23"/>
            <declaration name="iCount" type="int" line="24"/>
            <declaration name="DEFAULT_SALT_LENGTH" type="int" line="25"/>
            <declaration name="DEFAULT_COUNT" type="int" line="26"/>
            <declaration name="CIPHER_KEY" type="int" line="27"/>
            <declaration name="CIPHER_IV" type="int" line="28"/>
            <declaration name="MAC_KEY" type="int" line="29"/>
            <method name="derive" type="byte[]" line="30">
                <params>
                    <param name="chars" type="char[]"/>
                    <param name="salt" type="byte[]"/>
                    <param name="ic" type="int"/>
                    <param name="n" type="int"/>
                    <param name="type" type="int"/>
                </params>
                <declaration name="length" type="int" line="31"/>
                <scope line="32"/>
                <declaration name="passwd" type="byte[]" line="35"/>
                <scope line="36"/>
                <declaration name="v" type="int" line="40"/>
                <declaration name="u" type="int" line="41"/>
                <declaration name="c" type="int" line="42"/>
                <declaration name="D" type="byte[]" line="43"/>
                <declaration name="s" type="int" line="44"/>
                <declaration name="p" type="int" line="45"/>
                <declaration name="I" type="byte[]" line="46"/>
                <declaration name="key" type="byte[]" line="47"/>
                <scope line="51">
                    <declaration name="sha" type="MessageDigest" line="52"/>
                    <declaration name="Ai" type="byte[]" line="53"/>
                    <declaration name="B" type="byte[]" line="54"/>
                    <declaration name="tmp" type="byte[]" line="55"/>
                    <declaration name="i" type="int" line="56"/>
                    <scope line="57">
                        <declaration name="B1" type="BigInteger" line="65"/>
                        <scope line="67">
                            <declaration name="Ij" type="BigInteger" line="68"/>
                            <declaration name="trunc" type="int" line="69"/>
                            <scope line="76"/>
                            <scope line="79"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="86"/>
            </method>
            <method name="roundup" type="int" line="91">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
            </method>
            <method name="concat" type="void" line="94">
                <params>
                    <param name="src" type="byte[]"/>
                    <param name="dst" type="byte[]"/>
                    <param name="start" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="loop" type="int" line="95"/>
                <declaration name="off" type="int" line="96"/>
            </method>
            <method name="PKCS12PBECipherCore" type="constructor" line="100">
                <params>
                    <param name="symmCipherAlg" type="String"/>
                    <param name="defKeySize" type="int"/>
                </params>
                <declaration name="symmCipher" type="SymmetricCipher" line="102"/>
                <scope line="103"/>
                <scope line="106"/>
                <scope line="109"/>
                <scope line="115"/>
                <scope line="118"/>
            </method>
            <method name="implSetMode" type="void" line="122">
                <params>
                    <param name="mode" type="String"/>
                </params>
                <scope line="123"/>
            </method>
            <method name="implSetPadding" type="void" line="127">
                <params>
                    <param name="padding" type="String"/>
                </params>
                <scope line="128"/>
            </method>
            <method name="implGetBlockSize" type="int" line="132"/>
            <method name="implGetOutputSize" type="int" line="135">
                <params>
                    <param name="inLen" type="int"/>
                </params>
            </method>
            <method name="implGetIV" type="byte[]" line="138"/>
            <method name="implGetParameters" type="AlgorithmParameters" line="141">
                <declaration name="params" type="AlgorithmParameters" line="142"/>
                <scope line="143"/>
                <declaration name="pbeSpec" type="PBEParameterSpec" line="148"/>
                <scope line="149"/>
                <scope line="152"/>
                <scope line="155"/>
                <scope line="158"/>
            </method>
            <method name="implInit" type="void" line="163">
                <params>
                    <param name="opmode" type="int"/>
                    <param name="key" type="Key"/>
                    <param name="params" type="AlgorithmParameterSpec"/>
                    <param name="random" type="SecureRandom"/>
                </params>
                <declaration name="passwdChars" type="char[]" line="164"/>
                <scope line="167">
                    <declaration name="pbeKey" type="javax.crypto.interfaces.PBEKey" line="168"/>
                </scope>
                <scope line="173">
                    <declaration name="passwdBytes" type="byte[]" line="174"/>
                    <scope line="175"/>
                    <scope line="179"/>
                </scope>
                <scope line="183"/>
                <scope line="186"/>
                <scope line="189">
                    <scope line="190">
                        <scope line="192"/>
                        <scope line="195"/>
                    </scope>
                </scope>
                <scope line="201"/>
                <scope line="204">
                    <declaration name="pbeParams" type="PBEParameterSpec" line="205"/>
                    <scope line="206">
                        <scope line="207"/>
                    </scope>
                    <scope line="211"/>
                    <scope line="214">
                        <scope line="215"/>
                    </scope>
                    <scope line="219"/>
                </scope>
                <scope line="223"/>
                <scope line="226"/>
                <declaration name="derivedKey" type="byte[]" line="229"/>
                <declaration name="cipherKey" type="SecretKey" line="230"/>
                <declaration name="derivedIv" type="byte[]" line="231"/>
                <declaration name="ivSpec" type="IvParameterSpec" line="232"/>
            </method>
            <method name="implInit" type="void" line="235">
                <params>
                    <param name="opmode" type="int"/>
                    <param name="key" type="Key"/>
                    <param name="params" type="AlgorithmParameters"/>
                    <param name="random" type="SecureRandom"/>
                </params>
                <declaration name="paramSpec" type="AlgorithmParameterSpec" line="236"/>
                <scope line="237">
                    <scope line="238"/>
                    <scope line="241"/>
                </scope>
            </method>
            <method name="implInit" type="void" line="247">
                <params>
                    <param name="opmode" type="int"/>
                    <param name="key" type="Key"/>
                    <param name="random" type="SecureRandom"/>
                </params>
                <scope line="248"/>
                <scope line="251"/>
            </method>
            <method name="implUpdate" type="byte[]" line="255">
                <params>
                    <param name="in" type="byte[]"/>
                    <param name="inOff" type="int"/>
                    <param name="inLen" type="int"/>
                </params>
            </method>
            <method name="implUpdate" type="int" line="258">
                <params>
                    <param name="in" type="byte[]"/>
                    <param name="inOff" type="int"/>
                    <param name="inLen" type="int"/>
                    <param name="out" type="byte[]"/>
                    <param name="outOff" type="int"/>
                </params>
            </method>
            <method name="implDoFinal" type="byte[]" line="261">
                <params>
                    <param name="in" type="byte[]"/>
                    <param name="inOff" type="int"/>
                    <param name="inLen" type="int"/>
                </params>
            </method>
            <method name="implDoFinal" type="int" line="264">
                <params>
                    <param name="in" type="byte[]"/>
                    <param name="inOff" type="int"/>
                    <param name="inLen" type="int"/>
                    <param name="out" type="byte[]"/>
                    <param name="outOff" type="int"/>
                </params>
            </method>
            <method name="implGetKeySize" type="int" line="267">
                <params>
                    <param name="key" type="Key"/>
                </params>
            </method>
            <method name="implWrap" type="byte[]" line="270">
                <params>
                    <param name="key" type="Key"/>
                </params>
            </method>
            <method name="implUnwrap" type="Key" line="273">
                <params>
                    <param name="wrappedKey" type="byte[]"/>
                    <param name="wrappedKeyAlgorithm" type="String"/>
                    <param name="wrappedKeyType" type="int"/>
                </params>
            </method>
            <class name="PBEWithSHA1AndDESede" line="276">
                <extends class="CipherSpi"/>
                <declaration name="core" type="PKCS12PBECipherCore" line="277"/>
                <method name="PBEWithSHA1AndDESede" type="constructor" line="278"/>
                <method name="engineDoFinal" type="byte[]" line="281">
                    <params>
                        <param name="in" type="byte[]"/>
                        <param name="inOff" type="int"/>
                        <param name="inLen" type="int"/>
                    </params>
                </method>
                <method name="engineDoFinal" type="int" line="284">
                    <params>
                        <param name="in" type="byte[]"/>
                        <param name="inOff" type="int"/>
                        <param name="inLen" type="int"/>
                        <param name="out" type="byte[]"/>
                        <param name="outOff" type="int"/>
                    </params>
                </method>
                <method name="engineGetBlockSize" type="int" line="287"/>
                <method name="engineGetIV" type="byte[]" line="290"/>
                <method name="engineGetKeySize" type="int" line="293">
                    <params>
                        <param name="key" type="Key"/>
                    </params>
                </method>
                <method name="engineGetOutputSize" type="int" line="296">
                    <params>
                        <param name="inLen" type="int"/>
                    </params>
                </method>
                <method name="engineGetParameters" type="AlgorithmParameters" line="299"/>
                <method name="engineInit" type="void" line="302">
                    <params>
                        <param name="opmode" type="int"/>
                        <param name="key" type="Key"/>
                        <param name="params" type="AlgorithmParameterSpec"/>
                        <param name="random" type="SecureRandom"/>
                    </params>
                </method>
                <method name="engineInit" type="void" line="305">
                    <params>
                        <param name="opmode" type="int"/>
                        <param name="key" type="Key"/>
                        <param name="params" type="AlgorithmParameters"/>
                        <param name="random" type="SecureRandom"/>
                    </params>
                </method>
                <method name="engineInit" type="void" line="308">
                    <params>
                        <param name="opmode" type="int"/>
                        <param name="key" type="Key"/>
                        <param name="random" type="SecureRandom"/>
                    </params>
                </method>
                <method name="engineSetMode" type="void" line="311">
                    <params>
                        <param name="mode" type="String"/>
                    </params>
                </method>
                <method name="engineSetPadding" type="void" line="314">
                    <params>
                        <param name="paddingScheme" type="String"/>
                    </params>
                </method>
                <method name="engineUnwrap" type="Key" line="317">
                    <params>
                        <param name="wrappedKey" type="byte[]"/>
                        <param name="wrappedKeyAlgorithm" type="String"/>
                        <param name="wrappedKeyType" type="int"/>
                    </params>
                </method>
                <method name="engineUpdate" type="byte[]" line="320">
                    <params>
                        <param name="in" type="byte[]"/>
                        <param name="inOff" type="int"/>
                        <param name="inLen" type="int"/>
                    </params>
                </method>
                <method name="engineUpdate" type="int" line="323">
                    <params>
                        <param name="in" type="byte[]"/>
                        <param name="inOff" type="int"/>
                        <param name="inLen" type="int"/>
                        <param name="out" type="byte[]"/>
                        <param name="outOff" type="int"/>
                    </params>
                </method>
                <method name="engineWrap" type="byte[]" line="326">
                    <params>
                        <param name="key" type="Key"/>
                    </params>
                </method>
            </class>
            <class name="PBEWithSHA1AndRC2_40" line="330">
                <extends class="CipherSpi"/>
                <declaration name="core" type="PKCS12PBECipherCore" line="331"/>
                <method name="PBEWithSHA1AndRC2_40" type="constructor" line="332"/>
                <method name="engineDoFinal" type="byte[]" line="335">
                    <params>
                        <param name="in" type="byte[]"/>
                        <param name="inOff" type="int"/>
                        <param name="inLen" type="int"/>
                    </params>
                </method>
                <method name="engineDoFinal" type="int" line="338">
                    <params>
                        <param name="in" type="byte[]"/>
                        <param name="inOff" type="int"/>
                        <param name="inLen" type="int"/>
                        <param name="out" type="byte[]"/>
                        <param name="outOff" type="int"/>
                    </params>
                </method>
                <method name="engineGetBlockSize" type="int" line="341"/>
                <method name="engineGetIV" type="byte[]" line="344"/>
                <method name="engineGetKeySize" type="int" line="347">
                    <params>
                        <param name="key" type="Key"/>
                    </params>
                </method>
                <method name="engineGetOutputSize" type="int" line="350">
                    <params>
                        <param name="inLen" type="int"/>
                    </params>
                </method>
                <method name="engineGetParameters" type="AlgorithmParameters" line="353"/>
                <method name="engineInit" type="void" line="356">
                    <params>
                        <param name="opmode" type="int"/>
                        <param name="key" type="Key"/>
                        <param name="params" type="AlgorithmParameterSpec"/>
                        <param name="random" type="SecureRandom"/>
                    </params>
                </method>
                <method name="engineInit" type="void" line="359">
                    <params>
                        <param name="opmode" type="int"/>
                        <param name="key" type="Key"/>
                        <param name="params" type="AlgorithmParameters"/>
                        <param name="random" type="SecureRandom"/>
                    </params>
                </method>
                <method name="engineInit" type="void" line="362">
                    <params>
                        <param name="opmode" type="int"/>
                        <param name="key" type="Key"/>
                        <param name="random" type="SecureRandom"/>
                    </params>
                </method>
                <method name="engineSetMode" type="void" line="365">
                    <params>
                        <param name="mode" type="String"/>
                    </params>
                </method>
                <method name="engineSetPadding" type="void" line="368">
                    <params>
                        <param name="paddingScheme" type="String"/>
                    </params>
                </method>
                <method name="engineUnwrap" type="Key" line="371">
                    <params>
                        <param name="wrappedKey" type="byte[]"/>
                        <param name="wrappedKeyAlgorithm" type="String"/>
                        <param name="wrappedKeyType" type="int"/>
                    </params>
                </method>
                <method name="engineUpdate" type="byte[]" line="374">
                    <params>
                        <param name="in" type="byte[]"/>
                        <param name="inOff" type="int"/>
                        <param name="inLen" type="int"/>
                    </params>
                </method>
                <method name="engineUpdate" type="int" line="377">
                    <params>
                        <param name="in" type="byte[]"/>
                        <param name="inOff" type="int"/>
                        <param name="inLen" type="int"/>
                        <param name="out" type="byte[]"/>
                        <param name="outOff" type="int"/>
                    </params>
                </method>
                <method name="engineWrap" type="byte[]" line="380">
                    <params>
                        <param name="key" type="Key"/>
                    </params>
                </method>
            </class>
        </class>
    </source>