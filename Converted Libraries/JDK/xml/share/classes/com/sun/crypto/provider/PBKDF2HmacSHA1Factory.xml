<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.crypto.provider">
        <import package="java.io"/>
        <import package="java.security.InvalidKeyException"/>
        <import package="java.security.spec.KeySpec"/>
        <import package="java.security.spec.InvalidKeySpecException"/>
        <import package="javax.crypto.SecretKey"/>
        <import package="javax.crypto.SecretKeyFactorySpi"/>
        <import package="javax.crypto.spec.PBEKeySpec"/>
        <import package="javax.crypto.spec.SecretKeySpec"/>
        <class name="PBKDF2HmacSHA1Factory" line="10">
            <extends class="SecretKeyFactorySpi"/>
            <javadoc line="10">
                This class implements a key factory for PBE keys derived using
                  PBKDF2 with HmacSHA1 psuedo random function(PRF) as defined in
                  PKCS#5 v2.0.                
                <author>
                    Valerie Peng                    
                </author>
            </javadoc>
            <javadoc line="17">
                Empty constructor                
            </javadoc>
            <method name="PBKDF2HmacSHA1Factory" type="constructor" line="20"/>
            <javadoc line="22">
                Generates a &lt;code&gt;SecretKey&lt;/code&gt; object from the provided key
                  specification (key material).                
                <param>
                    keySpec the specification (key material) of the secret key                    
                </param>
                <return>
                    the secret key                    
                </return>
                <exception>
                    InvalidKeySpecException if the given key specification
                      is inappropriate for this key factory to produce a public key.                    
                </exception>
            </javadoc>
            <method name="engineGenerateSecret" type="SecretKey" line="30">
                <params>
                    <param name="keySpec" type="KeySpec"/>
                </params>
                <scope line="31"/>
                <declaration name="ks" type="PBEKeySpec" line="34"/>
            </method>
            <javadoc line="37">
                Returns a specification (key material) of the given key
                  in the requested format.                
                <param>
                    key the key                    
                </param>
                <param>
                    keySpec the requested format in which the key material shall be
                      returned                    
                </param>
                <return>
                    the underlying key specification (key material) in the
                      requested format                    
                </return>
                <exception>
                    InvalidKeySpecException if the requested key
                      specification is inappropriate for the given key, or the
                      given key cannot be processed (e.g., the given key has an
                      unrecognized algorithm or format).                    
                </exception>
            </javadoc>
            <method name="engineGetKeySpec" type="KeySpec" line="50">
                <params>
                    <param name="key" type="SecretKey"/>
                    <param name="keySpecCl" type="Class"/>
                </params>
                <scope line="51">
                    <scope line="52">
                        <declaration name="pKey" type="javax.crypto.interfaces.PBEKey" line="53"/>
                    </scope>
                    <scope line="56"/>
                </scope>
                <scope line="60"/>
            </method>
            <javadoc line="64">
                Translates a &lt;code&gt;SecretKey&lt;/code&gt; object, whose provider may be
                  unknown or potentially untrusted, into a corresponding
                  &lt;code&gt;SecretKey&lt;/code&gt; object of this key factory.                
                <param>
                    key the key whose provider is unknown or untrusted                    
                </param>
                <return>
                    the translated key                    
                </return>
                <exception>
                    InvalidKeyException if the given key cannot be processed by
                      this key factory.                    
                </exception>
            </javadoc>
            <method name="engineTranslateKey" type="SecretKey" line="73">
                <params>
                    <param name="key" type="SecretKey"/>
                </params>
                <scope line="74">
                    <scope line="75"/>
                    <scope line="78">
                        <declaration name="pKey" type="javax.crypto.interfaces.PBEKey" line="79"/>
                        <scope line="80">
                            <declaration name="spec" type="PBEKeySpec" line="81"/>
                        </scope>
                        <scope line="84">
                            <declaration name="ike" type="InvalidKeyException" line="85"/>
                        </scope>
                    </scope>
                </scope>
            </method>
        </class>
    </source>