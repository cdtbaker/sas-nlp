<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.crypto.provider">
        <import package="java.security.Key"/>
        <import package="java.security.PublicKey"/>
        <import package="java.security.PrivateKey"/>
        <import package="java.security.KeyFactory"/>
        <import package="java.security.InvalidKeyException"/>
        <import package="java.security.NoSuchProviderException"/>
        <import package="java.security.NoSuchAlgorithmException"/>
        <import package="java.security.spec.PKCS8EncodedKeySpec"/>
        <import package="java.security.spec.X509EncodedKeySpec"/>
        <import package="java.security.spec.InvalidKeySpecException"/>
        <import package="javax.crypto.SecretKey"/>
        <import package="javax.crypto.Cipher"/>
        <import package="javax.crypto.spec.SecretKeySpec"/>
        <class name="ConstructKeys" line="15">
            <javadoc line="15">
                This class is a helper class which construct key objects
                  from encoded keys.                
                <author>
                    Sharon Liu                    
                </author>
            </javadoc>
            <javadoc line="21">
                Construct a public key from its encoding.                
                <param>
                    encodedKey the encoding of a public key.                    
                </param>
                <param>
                    encodedKeyAlgorithm the algorithm the encodedKey is for.                    
                </param>
                <return>
                    a public key constructed from the encodedKey.                    
                </return>
            </javadoc>
            <method name="constructPublicKey" type="PublicKey" line="27">
                <params>
                    <param name="encodedKey" type="byte[]"/>
                    <param name="encodedKeyAlgorithm" type="String"/>
                </params>
                <declaration name="key" type="PublicKey" line="28"/>
                <scope line="29">
                    <declaration name="keyFactory" type="KeyFactory" line="30"/>
                    <declaration name="keySpec" type="X509EncodedKeySpec" line="31"/>
                </scope>
                <scope line="34">
                    <scope line="35">
                        <declaration name="keyFactory" type="KeyFactory" line="36"/>
                        <declaration name="keySpec" type="X509EncodedKeySpec" line="37"/>
                    </scope>
                    <scope line="40"/>
                    <scope line="43">
                        <declaration name="ike" type="InvalidKeyException" line="44"/>
                    </scope>
                </scope>
                <scope line="49">
                    <declaration name="ike" type="InvalidKeyException" line="50"/>
                </scope>
                <scope line="54"/>
            </method>
            <javadoc line="58">
                Construct a private key from its encoding.                
                <param>
                    encodedKey the encoding of a private key.                    
                </param>
                <param>
                    encodedKeyAlgorithm the algorithm the wrapped key is for.                    
                </param>
                <return>
                    a private key constructed from the encodedKey.                    
                </return>
            </javadoc>
            <method name="constructPrivateKey" type="PrivateKey" line="64">
                <params>
                    <param name="encodedKey" type="byte[]"/>
                    <param name="encodedKeyAlgorithm" type="String"/>
                </params>
                <declaration name="key" type="PrivateKey" line="65"/>
                <scope line="66">
                    <declaration name="keyFactory" type="KeyFactory" line="67"/>
                    <declaration name="keySpec" type="PKCS8EncodedKeySpec" line="68"/>
                </scope>
                <scope line="71">
                    <scope line="72">
                        <declaration name="keyFactory" type="KeyFactory" line="73"/>
                        <declaration name="keySpec" type="PKCS8EncodedKeySpec" line="74"/>
                    </scope>
                    <scope line="77"/>
                    <scope line="80">
                        <declaration name="ike" type="InvalidKeyException" line="81"/>
                    </scope>
                </scope>
                <scope line="86">
                    <declaration name="ike" type="InvalidKeyException" line="87"/>
                </scope>
                <scope line="91"/>
            </method>
            <javadoc line="95">
                Construct a secret key from its encoding.                
                <param>
                    encodedKey the encoding of a secret key.                    
                </param>
                <param>
                    encodedKeyAlgorithm the algorithm the secret key is for.                    
                </param>
                <return>
                    a secret key constructed from the encodedKey.                    
                </return>
            </javadoc>
            <method name="constructSecretKey" type="SecretKey" line="101">
                <params>
                    <param name="encodedKey" type="byte[]"/>
                    <param name="encodedKeyAlgorithm" type="String"/>
                </params>
            </method>
            <method name="constructKey" type="Key" line="104">
                <params>
                    <param name="encoding" type="byte[]"/>
                    <param name="keyAlgorithm" type="String"/>
                    <param name="keyType" type="int"/>
                </params>
                <declaration name="result" type="Key" line="105"/>
            </method>
        </class>
    </source>