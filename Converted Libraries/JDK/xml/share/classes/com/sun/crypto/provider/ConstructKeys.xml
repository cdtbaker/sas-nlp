<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.crypto.provider">
        <import package="java.security.Key"/>
        <import package="java.security.PublicKey"/>
        <import package="java.security.PrivateKey"/>
        <import package="java.security.KeyFactory"/>
        <import package="java.security.InvalidKeyException"/>
        <import package="java.security.NoSuchProviderException"/>
        <import package="java.security.NoSuchAlgorithmException"/>
        <import package="java.security.spec.PKCS8EncodedKeySpec"/>
        <import package="java.security.spec.X509EncodedKeySpec"/>
        <import package="java.security.spec.InvalidKeySpecException"/>
        <import package="javax.crypto.SecretKey"/>
        <import package="javax.crypto.Cipher"/>
        <import package="javax.crypto.spec.SecretKeySpec"/>
        <class name="ConstructKeys" line="43">
            <javadoc line="43">
                This class is a helper class which construct key objects
                  from encoded keys.                
                <author>
                    Sharon Liu                    
                </author>
            </javadoc>
            <javadoc line="52">
                Construct a public key from its encoding.                
                <param>
                    encodedKey the encoding of a public key.                    
                </param>
                <param>
                    encodedKeyAlgorithm the algorithm the encodedKey is for.                    
                </param>
                <return>
                    a public key constructed from the encodedKey.                    
                </return>
            </javadoc>
            <method name="constructPublicKey" type="PublicKey" line="64">
                <params>
                    <param name="encodedKey" type="byte[]"/>
                    <param name="encodedKeyAlgorithm" type="String"/>
                </params>
                <comment line="74">
                    Try to see whether there is another
                     provider which supports this algorithm                    
                </comment>
                <comment line="99">
                    Should never happen.                    
                </comment>
                <declaration name="key" type="PublicKey" line="65"/>
                <scope line="67">
                    <declaration name="keyFactory" type="KeyFactory" line="68"/>
                    <declaration name="keySpec" type="X509EncodedKeySpec" line="70"/>
                </scope>
                <scope line="72">
                    <scope line="75">
                        <declaration name="keyFactory" type="KeyFactory" line="76"/>
                        <declaration name="keySpec" type="X509EncodedKeySpec" line="78"/>
                    </scope>
                    <scope line="81"/>
                    <scope line="86">
                        <declaration name="ike" type="InvalidKeyException" line="87"/>
                    </scope>
                </scope>
                <scope line="92">
                    <declaration name="ike" type="InvalidKeyException" line="93"/>
                </scope>
                <scope line="97"/>
            </method>
            <javadoc line="104">
                Construct a private key from its encoding.                
                <param>
                    encodedKey the encoding of a private key.                    
                </param>
                <param>
                    encodedKeyAlgorithm the algorithm the wrapped key is for.                    
                </param>
                <return>
                    a private key constructed from the encodedKey.                    
                </return>
            </javadoc>
            <method name="constructPrivateKey" type="PrivateKey" line="116">
                <params>
                    <param name="encodedKey" type="byte[]"/>
                    <param name="encodedKeyAlgorithm" type="String"/>
                </params>
                <comment line="126">
                    Try to see whether there is another
                     provider which supports this algorithm                    
                </comment>
                <comment line="151">
                    Should never happen.                    
                </comment>
                <declaration name="key" type="PrivateKey" line="117"/>
                <scope line="119">
                    <declaration name="keyFactory" type="KeyFactory" line="120"/>
                    <declaration name="keySpec" type="PKCS8EncodedKeySpec" line="122"/>
                </scope>
                <scope line="124">
                    <scope line="127">
                        <declaration name="keyFactory" type="KeyFactory" line="128"/>
                        <declaration name="keySpec" type="PKCS8EncodedKeySpec" line="130"/>
                    </scope>
                    <scope line="133"/>
                    <scope line="138">
                        <declaration name="ike" type="InvalidKeyException" line="139"/>
                    </scope>
                </scope>
                <scope line="144">
                    <declaration name="ike" type="InvalidKeyException" line="145"/>
                </scope>
                <scope line="149"/>
            </method>
            <javadoc line="156">
                Construct a secret key from its encoding.                
                <param>
                    encodedKey the encoding of a secret key.                    
                </param>
                <param>
                    encodedKeyAlgorithm the algorithm the secret key is for.                    
                </param>
                <return>
                    a secret key constructed from the encodedKey.                    
                </return>
            </javadoc>
            <method name="constructSecretKey" type="SecretKey" line="167">
                <params>
                    <param name="encodedKey" type="byte[]"/>
                    <param name="encodedKeyAlgorithm" type="String"/>
                </params>
            </method>
            <method name="constructKey" type="Key" line="173">
                <params>
                    <param name="encoding" type="byte[]"/>
                    <param name="keyAlgorithm" type="String"/>
                    <param name="keyType" type="int"/>
                </params>
                <declaration name="result" type="Key" line="174"/>
            </method>
        </class>
    </source>