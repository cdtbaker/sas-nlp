<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.crypto.provider">
        <import package="java.util.Locale"/>
        <import package="java.security"/>
        <import package="java.security.interfaces"/>
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <import package="java.security.spec.InvalidParameterSpecException"/>
        <import package="java.security.spec.MGF1ParameterSpec"/>
        <import package="javax.crypto"/>
        <import package="javax.crypto.spec.PSource"/>
        <import package="javax.crypto.spec.OAEPParameterSpec"/>
        <import package="sun.security.rsa"/>
        <import package="sun.security.jca.Providers"/>
        <class name="RSACipher" line="13">
            <extends class="CipherSpi"/>
            <javadoc line="13">
                RSA cipher implementation. Supports RSA en/decryption and signing/verifying
                  using PKCS#1 v1.5 padding and without padding (raw RSA). Note that raw RSA
                  is supported mostly for completeness and should only be used in rare cases.
                  Objects should be instantiated by calling Cipher.getInstance() using the
                  following algorithm names:
                  . &quot;RSA/ECB/PKCS1Padding&quot; (or &quot;RSA&quot;) for PKCS#1 padding. The mode (blocktype)
                  is selected based on the en/decryption mode and public/private key used
                  . &quot;RSA/ECB/NoPadding&quot; for rsa RSA.
                  We only do one RSA operation per doFinal() call. If the application passes
                  more data via calls to update() or doFinal(), we throw an
                  IllegalBlockSizeException when doFinal() is called (see JCE API spec).
                  Bulk encryption using RSA does not make sense and is not standardized.
                  Note: RSA keys should be at least 512 bits long                
                <since>
                    1.5                    
                </since>
                <author>
                    Andreas Sterbenz                    
                </author>
            </javadoc>
            <declaration name="B0" type="byte[]" line="31"/>
            <declaration name="MODE_ENCRYPT" type="int" line="32"/>
            <declaration name="MODE_DECRYPT" type="int" line="33"/>
            <declaration name="MODE_SIGN" type="int" line="34"/>
            <declaration name="MODE_VERIFY" type="int" line="35"/>
            <declaration name="PAD_NONE" type="String" line="36"/>
            <declaration name="PAD_PKCS1" type="String" line="37"/>
            <declaration name="PAD_OAEP_MGF1" type="String" line="38"/>
            <declaration name="mode" type="int" line="39"/>
            <declaration name="paddingType" type="String" line="40"/>
            <declaration name="padding" type="RSAPadding" line="41"/>
            <declaration name="spec" type="OAEPParameterSpec" line="42"/>
            <declaration name="buffer" type="byte[]" line="43"/>
            <declaration name="bufOfs" type="int" line="44"/>
            <declaration name="outputSize" type="int" line="45"/>
            <declaration name="publicKey" type="RSAPublicKey" line="46"/>
            <declaration name="privateKey" type="RSAPrivateKey" line="47"/>
            <declaration name="oaepHashAlgorithm" type="String" line="48"/>
            <method name="RSACipher" type="constructor" line="49"/>
            <method name="engineSetMode" type="void" line="52">
                <params>
                    <param name="mode" type="String"/>
                </params>
                <scope line="53"/>
            </method>
            <method name="engineSetPadding" type="void" line="57">
                <params>
                    <param name="paddingName" type="String"/>
                </params>
                <scope line="58"/>
                <scope line="61"/>
                <scope line="64">
                    <declaration name="lowerPadding" type="String" line="65"/>
                    <scope line="66"/>
                    <scope line="69">
                        <scope line="72"/>
                    </scope>
                    <scope line="76"/>
                </scope>
            </method>
            <method name="engineGetBlockSize" type="int" line="81"/>
            <method name="engineGetOutputSize" type="int" line="84">
                <params>
                    <param name="inputLen" type="int"/>
                </params>
            </method>
            <method name="engineGetIV" type="byte[]" line="87"/>
            <method name="engineGetParameters" type="AlgorithmParameters" line="90">
                <scope line="91">
                    <scope line="92">
                        <declaration name="params" type="AlgorithmParameters" line="93"/>
                    </scope>
                    <scope line="97"/>
                    <scope line="100"/>
                    <scope line="103"/>
                </scope>
                <scope line="107"/>
            </method>
            <method name="engineInit" type="void" line="111">
                <params>
                    <param name="opmode" type="int"/>
                    <param name="key" type="Key"/>
                    <param name="random" type="SecureRandom"/>
                </params>
                <scope line="112"/>
                <scope line="115">
                    <declaration name="ike" type="InvalidKeyException" line="116"/>
                </scope>
            </method>
            <method name="engineInit" type="void" line="121">
                <params>
                    <param name="opmode" type="int"/>
                    <param name="key" type="Key"/>
                    <param name="params" type="AlgorithmParameterSpec"/>
                    <param name="random" type="SecureRandom"/>
                </params>
            </method>
            <method name="engineInit" type="void" line="124">
                <params>
                    <param name="opmode" type="int"/>
                    <param name="key" type="Key"/>
                    <param name="params" type="AlgorithmParameters"/>
                    <param name="random" type="SecureRandom"/>
                </params>
                <scope line="125"/>
                <scope line="128">
                    <scope line="129">
                        <declaration name="spec" type="OAEPParameterSpec" line="130"/>
                    </scope>
                    <scope line="133">
                        <declaration name="iape" type="InvalidAlgorithmParameterException" line="134"/>
                    </scope>
                </scope>
            </method>
            <method name="init" type="void" line="140">
                <params>
                    <param name="opmode" type="int"/>
                    <param name="key" type="Key"/>
                    <param name="random" type="SecureRandom"/>
                    <param name="params" type="AlgorithmParameterSpec"/>
                </params>
                <declaration name="encrypt" type="boolean" line="141"/>
                <declaration name="rsaKey" type="RSAKey" line="154"/>
                <scope line="155"/>
                <scope line="160"/>
                <declaration name="n" type="int" line="165"/>
                <scope line="168">
                    <scope line="169"/>
                </scope>
                <scope line="175">
                    <scope line="176"/>
                    <declaration name="blockType" type="int" line="179"/>
                    <scope line="181">
                        <declaration name="k" type="int" line="182"/>
                    </scope>
                    <scope line="185"/>
                </scope>
                <scope line="189">
                    <scope line="190"/>
                    <declaration name="myParams" type="OAEPParameterSpec" line="193"/>
                    <scope line="194">
                        <scope line="195"/>
                    </scope>
                    <scope line="200"/>
                    <scope line="204">
                        <declaration name="k" type="int" line="205"/>
                    </scope>
                    <scope line="208"/>
                </scope>
            </method>
            <method name="update" type="void" line="213">
                <params>
                    <param name="in" type="byte[]"/>
                    <param name="inOfs" type="int"/>
                    <param name="inLen" type="int"/>
                </params>
                <scope line="214"/>
                <scope line="217"/>
            </method>
            <method name="doFinal" type="byte[]" line="224">
                <scope line="225"/>
                <scope line="228">
                    <declaration name="data" type="byte[]" line="229"/>
                    <declaration name="verifyBuffer" type="byte[]" line="235"/>
                    <declaration name="decryptBuffer" type="byte[]" line="242"/>
                </scope>
                <scope line="249"/>
            </method>
            <method name="engineUpdate" type="byte[]" line="253">
                <params>
                    <param name="in" type="byte[]"/>
                    <param name="inOfs" type="int"/>
                    <param name="inLen" type="int"/>
                </params>
            </method>
            <method name="engineUpdate" type="int" line="257">
                <params>
                    <param name="in" type="byte[]"/>
                    <param name="inOfs" type="int"/>
                    <param name="inLen" type="int"/>
                    <param name="out" type="byte[]"/>
                    <param name="outOfs" type="int"/>
                </params>
            </method>
            <method name="engineDoFinal" type="byte[]" line="261">
                <params>
                    <param name="in" type="byte[]"/>
                    <param name="inOfs" type="int"/>
                    <param name="inLen" type="int"/>
                </params>
            </method>
            <method name="engineDoFinal" type="int" line="265">
                <params>
                    <param name="in" type="byte[]"/>
                    <param name="inOfs" type="int"/>
                    <param name="inLen" type="int"/>
                    <param name="out" type="byte[]"/>
                    <param name="outOfs" type="int"/>
                </params>
                <scope line="266"/>
                <declaration name="result" type="byte[]" line="270"/>
                <declaration name="n" type="int" line="271"/>
            </method>
            <method name="engineWrap" type="byte[]" line="275">
                <params>
                    <param name="key" type="Key"/>
                </params>
                <declaration name="encoded" type="byte[]" line="276"/>
                <scope line="277"/>
                <scope line="280"/>
                <scope line="284"/>
                <scope line="287"/>
            </method>
            <method name="engineUnwrap" type="Key" line="291">
                <params>
                    <param name="wrappedKey" type="byte[]"/>
                    <param name="algorithm" type="String"/>
                    <param name="type" type="int"/>
                </params>
                <scope line="292"/>
                <scope line="296">
                    <declaration name="encoded" type="byte[]" line="297"/>
                </scope>
                <scope line="300"/>
                <scope line="303"/>
            </method>
            <method name="engineGetKeySize" type="int" line="307">
                <params>
                    <param name="key" type="Key"/>
                </params>
                <declaration name="rsaKey" type="RSAKey" line="308"/>
            </method>
        </class>
    </source>