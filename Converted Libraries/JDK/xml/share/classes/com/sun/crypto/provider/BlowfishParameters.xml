<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.crypto.provider">
        <import package="java.util"/>
        <import package="java.io"/>
        <import package="sun.security.util"/>
        <import package="java.security.AlgorithmParametersSpi"/>
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <import package="java.security.spec.InvalidParameterSpecException"/>
        <import package="javax.crypto.spec.IvParameterSpec"/>
        <class name="BlowfishParameters" line="9">
            <extends class="AlgorithmParametersSpi"/>
            <javadoc line="9">
                This class implements the parameter (IV) used with the Blowfish algorithm in
                  feedback-mode. IV is defined in the standards as follows:
                  &lt;pre&gt;
                  IV ::= OCTET STRING  -- 8 octets
                  &lt;/pre&gt;                
                <author>
                    Jan Luehe                    
                </author>
            </javadoc>
            <declaration name="core" type="BlockCipherParamsCore" line="18"/>
            <method name="BlowfishParameters" type="constructor" line="19"/>
            <method name="engineInit" type="void" line="22">
                <params>
                    <param name="paramSpec" type="AlgorithmParameterSpec"/>
                </params>
            </method>
            <method name="engineInit" type="void" line="25">
                <params>
                    <param name="encoded" type="byte[]"/>
                </params>
            </method>
            <method name="engineInit" type="void" line="28">
                <params>
                    <param name="encoded" type="byte[]"/>
                    <param name="decodingMethod" type="String"/>
                </params>
            </method>
            <method name="engineGetParameterSpec" type="AlgorithmParameterSpec" line="31">
                <params>
                    <param name="paramSpec" type="Class"/>
                </params>
            </method>
            <method name="engineGetEncoded" type="byte[]" line="34"/>
            <method name="engineGetEncoded" type="byte[]" line="37">
                <params>
                    <param name="encodingMethod" type="String"/>
                </params>
            </method>
            <method name="engineToString" type="String" line="40"/>
        </class>
    </source>