<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.crypto.provider">
        <import package="java.security"/>
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <import package="javax.crypto"/>
        <import package="sun.security.internal.interfaces.TlsMasterSecret"/>
        <import package="sun.security.internal.spec.TlsMasterSecretParameterSpec"/>
        <import package="com.sun.crypto.provider.TlsPrfGenerator"/>
        <class name="TlsMasterSecretGenerator" line="8">
            <extends class="KeyGeneratorSpi"/>
            <javadoc line="8">
                KeyGenerator implementation for the SSL/TLS master secret derivation.                
                <author>
                    Andreas Sterbenz                    
                </author>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="MSG" type="String" line="14"/>
            <declaration name="spec" type="TlsMasterSecretParameterSpec" line="15"/>
            <declaration name="protocolVersion" type="int" line="16"/>
            <method name="TlsMasterSecretGenerator" type="constructor" line="17"/>
            <method name="engineInit" type="void" line="19">
                <params>
                    <param name="random" type="SecureRandom"/>
                </params>
            </method>
            <method name="engineInit" type="void" line="22">
                <params>
                    <param name="params" type="AlgorithmParameterSpec"/>
                    <param name="random" type="SecureRandom"/>
                </params>
                <scope line="23"/>
                <scope line="27"/>
                <scope line="31"/>
            </method>
            <method name="engineInit" type="void" line="35">
                <params>
                    <param name="keysize" type="int"/>
                    <param name="random" type="SecureRandom"/>
                </params>
            </method>
            <method name="engineGenerateKey" type="SecretKey" line="38">
                <scope line="39"/>
                <declaration name="premasterKey" type="SecretKey" line="42"/>
                <declaration name="premaster" type="byte[]" line="43"/>
                <declaration name="premasterMajor" type="int" line="44"/>
                <scope line="45"/>
                <scope line="49"/>
                <scope line="53">
                    <declaration name="master" type="byte[]" line="54"/>
                    <declaration name="clientRandom" type="byte[]" line="55"/>
                    <declaration name="serverRandom" type="byte[]" line="56"/>
                    <scope line="57">
                        <declaration name="seed" type="byte[]" line="58"/>
                    </scope>
                    <scope line="61">
                        <declaration name="md5" type="MessageDigest" line="63"/>
                        <declaration name="sha" type="MessageDigest" line="64"/>
                        <declaration name="tmp" type="byte[]" line="65"/>
                        <scope line="66"/>
                    </scope>
                </scope>
                <scope line="79"/>
                <scope line="82"/>
            </method>
            <class name="TlsMasterSecretKey" line="86">
                <implements interface="TlsMasterSecret"/>
                <declaration name="key" type="byte[]" line="87"/>
                <declaration name="majorVersion" type="int" line="88"/>
                <method name="TlsMasterSecretKey" type="constructor" line="89">
                    <params>
                        <param name="key" type="byte[]"/>
                        <param name="majorVersion" type="int"/>
                        <param name="minorVersion" type="int"/>
                    </params>
                </method>
                <method name="getMajorVersion" type="int" line="94"/>
                <method name="getMinorVersion" type="int" line="97"/>
                <method name="getAlgorithm" type="String" line="100"/>
                <method name="getFormat" type="String" line="103"/>
                <method name="getEncoded" type="byte[]" line="106"/>
            </class>
        </class>
    </source>