<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.crypto.provider">
        <import package="java.io.IOException"/>
        <import package="java.security.AlgorithmParametersSpi"/>
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <import package="java.security.spec.InvalidParameterSpecException"/>
        <import package="javax.crypto.spec.RC2ParameterSpec"/>
        <import package="sun.misc.HexDumpEncoder"/>
        <import package="sun.security.util"/>
        <class name="RC2Parameters" line="36">
            <extends class="AlgorithmParametersSpi"/>
            <comment line="62">
                TABLE[EKB] from section 6 of RFC 2268, used to convert effective key                
            </comment>
            <comment line="63">
                size to/from encoded version number                
            </comment>
            <comment line="99">
                the iv                
            </comment>
            <comment line="102">
                the version number                
            </comment>
            <comment line="105">
                the effective key size                
            </comment>
            <comment line="214">
                Returns a formatted string describing the parameters.                
            </comment>
            <javadoc line="36">
                This class implements the parameter set used with RC2
                  encryption, which is defined in RFC2268 as follows:
                  &lt;pre&gt;
                  RC2-CBCParameter ::= CHOICE {
                  iv IV,
                  params SEQUENCE {
                  version RC2Version,
                  iv IV
                  }
                  }
                  where
                  IV ::= OCTET STRING -- 8 octets
                  RC2Version ::= INTEGER -- 1-1024
                  &lt;/pre&gt;                
                <author>
                    Sean Mullan                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="EKB_TABLE" type="int[]" line="63"/>
            <declaration name="iv" type="byte[]" line="99"/>
            <declaration name="version" type="int" line="102"/>
            <declaration name="effectiveKeySize" type="int" line="105"/>
            <method name="RC2Parameters" type="constructor" line="107"/>
            <method name="engineInit" type="void" line="110">
                <params>
                    <param name="paramSpec" type="AlgorithmParameterSpec"/>
                </params>
                <comment line="118">
                    check effective key size (a value of 0 means it is unspecified)                    
                </comment>
                <scope line="112"/>
                <declaration name="rps" type="RC2ParameterSpec" line="116"/>
                <scope line="120">
                    <scope line="121"/>
                    <scope line="125"/>
                    <scope line="127"/>
                </scope>
            </method>
            <method name="engineInit" type="void" line="134">
                <params>
                    <param name="encoded" type="byte[]"/>
                </params>
                <comment line="136">
                    check if IV or params                    
                </comment>
                <comment line="148">
                    search table for index containing version                    
                </comment>
                <declaration name="val" type="DerValue" line="135"/>
                <scope line="137">
                    <scope line="141"/>
                    <scope line="145"/>
                    <scope line="147">
                        <scope line="149">
                            <scope line="150"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="158"/>
                <scope line="165"/>
                <scope line="170"/>
            </method>
            <method name="engineInit" type="void" line="176">
                <params>
                    <param name="encoded" type="byte[]"/>
                    <param name="decodingMethod" type="String"/>
                </params>
            </method>
            <method name="engineGetParameterSpec" type="AlgorithmParameterSpec" line="181">
                <params>
                    <param name="paramSpec" type="Class"/>
                </params>
                <scope line="183"/>
                <scope line="187"/>
            </method>
            <method name="engineGetEncoded" type="byte[]" line="193">
                <declaration name="out" type="DerOutputStream" line="194"/>
                <declaration name="bytes" type="DerOutputStream" line="195"/>
                <scope line="197"/>
                <scope line="201"/>
            </method>
            <method name="engineGetEncoded" type="byte[]" line="209">
                <params>
                    <param name="encodingMethod" type="String"/>
                </params>
            </method>
            <method name="engineToString" type="String" line="216">
                <declaration name="LINE_SEP" type="String" line="217"/>
                <declaration name="encoder" type="HexDumpEncoder" line="218"/>
                <declaration name="sb" type="StringBuilder" line="219"/>
                <scope line="223"/>
            </method>
        </class>
    </source>