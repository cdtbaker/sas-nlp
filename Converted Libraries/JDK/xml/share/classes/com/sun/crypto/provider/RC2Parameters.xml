<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.crypto.provider">
        <import package="java.io.IOException"/>
        <import package="java.security.AlgorithmParametersSpi"/>
        <import package="java.security.spec.AlgorithmParameterSpec"/>
        <import package="java.security.spec.InvalidParameterSpecException"/>
        <import package="javax.crypto.spec.RC2ParameterSpec"/>
        <import package="sun.misc.HexDumpEncoder"/>
        <import package="sun.security.util"/>
        <class name="RC2Parameters" line="9">
            <extends class="AlgorithmParametersSpi"/>
            <javadoc line="9">
                This class implements the parameter set used with RC2
                  encryption, which is defined in RFC2268 as follows:
                  &lt;pre&gt;
                  RC2-CBCParameter ::= CHOICE {
                  iv IV,
                  params SEQUENCE {
                  version RC2Version,
                  iv IV
                  }
                  }
                  where
                  IV ::= OCTET STRING -- 8 octets
                  RC2Version ::= INTEGER -- 1-1024
                  &lt;/pre&gt;                
                <author>
                    Sean Mullan                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="EKB_TABLE" type="int[]" line="28"/>
            <declaration name="iv" type="byte[]" line="29"/>
            <declaration name="version" type="int" line="30"/>
            <declaration name="effectiveKeySize" type="int" line="31"/>
            <method name="RC2Parameters" type="constructor" line="32"/>
            <method name="engineInit" type="void" line="34">
                <params>
                    <param name="paramSpec" type="AlgorithmParameterSpec"/>
                </params>
                <scope line="35"/>
                <declaration name="rps" type="RC2ParameterSpec" line="38"/>
                <scope line="40">
                    <scope line="41"/>
                    <scope line="44"/>
                    <scope line="47"/>
                </scope>
            </method>
            <method name="engineInit" type="void" line="53">
                <params>
                    <param name="encoded" type="byte[]"/>
                </params>
                <declaration name="val" type="DerValue" line="54"/>
                <scope line="55">
                    <scope line="58"/>
                    <scope line="61"/>
                    <scope line="64">
                        <scope line="65">
                            <scope line="66"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="74"/>
                <scope line="80"/>
                <scope line="83"/>
            </method>
            <method name="engineInit" type="void" line="87">
                <params>
                    <param name="encoded" type="byte[]"/>
                    <param name="decodingMethod" type="String"/>
                </params>
            </method>
            <method name="engineGetParameterSpec" type="AlgorithmParameterSpec" line="90">
                <params>
                    <param name="paramSpec" type="Class"/>
                </params>
                <scope line="91"/>
                <scope line="94"/>
            </method>
            <method name="engineGetEncoded" type="byte[]" line="98">
                <declaration name="out" type="DerOutputStream" line="99"/>
                <declaration name="bytes" type="DerOutputStream" line="100"/>
                <scope line="101"/>
                <scope line="106"/>
            </method>
            <method name="engineGetEncoded" type="byte[]" line="111">
                <params>
                    <param name="encodingMethod" type="String"/>
                </params>
            </method>
            <method name="engineToString" type="String" line="114">
                <declaration name="LINE_SEP" type="String" line="115"/>
                <declaration name="encoder" type="HexDumpEncoder" line="116"/>
                <declaration name="sb" type="StringBuilder" line="117"/>
                <scope line="118"/>
            </method>
        </class>
    </source>