<?xml version="1.0" encoding="UTF-8"?>
    <source package="
 * Java interface "Connection.java" generated from Poseidon for UML.
 * Poseidon for UML is developed by <A HREF="http://www.gentleware.com">Gentleware</A>.
 * Generated with <A HREF="http://jakarta.apache.org/velocity/">velocity</A> template engine.
 */
package com.sun.pept.transport">
        <import package="com.sun.pept.ept.EPTFactory"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.util"/>
        <javadoc line="30">
            Java interface &quot;Connection.java&quot; generated from Poseidon for UML.
              Poseidon for UML is developed by &lt;A HREF=&quot;http://www.gentleware.com&quot;&gt;Gentleware&lt;/A&gt;.
              Generated with &lt;A HREF=&quot;http://jakarta.apache.org/velocity/&quot;&gt;velocity&lt;/A&gt; template engine.            
        </javadoc>
        <interface name="Connection">
            <comment line="49">
                /////////////////////////////////////
                 operations                
            </comment>
            <javadoc line="40">
                &lt;p&gt;                
                <author>
                    Dr. Harold Carr
                      &lt;/p&gt;                    
                </author>
            </javadoc>
            <method name="write" type="void" line="51"/>
            <javadoc line="51">
                &lt;p&gt;
                  Does ...
                  &lt;/p&gt;&lt;p&gt;
                  &lt;/p&gt;&lt;p&gt;                
                <param>
                    byteBuffer ...
                      &lt;/p&gt;                    
                </param>
            </javadoc>
            <method name="getEPTFactory" type="EPTFactory" line="62"/>
            <javadoc line="62">
                &lt;p&gt;
                  Does ...
                  &lt;/p&gt;&lt;p&gt;                
                <return>
                    a EPTFactory with ...
                      &lt;/p&gt;                    
                </return>
            </javadoc>
            <method name="read" type="int" line="71"/>
            <javadoc line="71">
                &lt;p&gt;
                  Does ...
                  &lt;/p&gt;&lt;p&gt;                
                <return>
                    a int with ...
                      &lt;/p&gt;&lt;p&gt;                    
                </return>
                <param>
                    byteBuffer ...
                      &lt;/p&gt;                    
                </param>
            </javadoc>
            <method name="readUntilEnd" type="ByteBuffer" line="82"/>
            <javadoc line="82">
                &lt;p&gt;
                  Does ...
                  &lt;/p&gt;&lt;p&gt;
                  &lt;/p&gt;                
            </javadoc>
        </interface>
    </source>