<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.net.httpserver">
        <import package="java.net.InetSocketAddress"/>
        <import package="javax.net.ssl.SSLParameters"/>
        <class name="HttpsParameters" line="4">
            <javadoc line="4">
                Represents the set of parameters for each https
                  connection negotiated with clients. One of these
                  is created and passed to{@link HttpsConfigurator#configure(HttpsParameters)}for every incoming https connection,
                  in order to determine the parameters to use.
                  &lt;p&gt;
                  The underlying SSL parameters may be established either
                  via the set/get methods of this class, or else via
                  a {@link javax.net.ssl.SSLParameters} object. SSLParameters
                  is the preferred method, because in the future,
                  additional configuration capabilities may be added to that class, and
                  it is easier to determine the set of supported parameters and their
                  default values with SSLParameters. Also, if an SSLParameters object is
                  provided via{@link #setSSLParameters(SSLParameters)} then those parameter settings
                  are used, and any settings made in this object are ignored.                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="cipherSuites" type="String[]" line="22"/>
            <declaration name="protocols" type="String[]" line="23"/>
            <declaration name="wantClientAuth" type="boolean" line="24"/>
            <declaration name="needClientAuth" type="boolean" line="25"/>
            <method name="HttpsParameters" type="constructor" line="26"/>
            <method name="getHttpsConfigurator" type="HttpsConfigurator" line="28"/>
            <javadoc line="28">
                Returns the HttpsConfigurator for this HttpsParameters.                
            </javadoc>
            <method name="getClientAddress" type="InetSocketAddress" line="32"/>
            <javadoc line="32">
                Returns the address of the remote client initiating the
                  connection.                
            </javadoc>
            <method name="setSSLParameters" type="void" line="37"/>
            <javadoc line="37">
                Sets the SSLParameters to use for this HttpsParameters.
                  The parameters must be supported by the SSLContext contained
                  by the HttpsConfigurator associated with this HttpsParameters.
                  If no parameters are set, then the default behavior is to use
                  the default parameters from the associated SSLContext.                
                <param>
                    params the SSLParameters to set. If &lt;code&gt;null&lt;/code&gt;
                      then the existing parameters (if any) remain unchanged.                    
                </param>
                <throws>
                    IllegalArgumentException if any of the parameters are
                      invalid or unsupported.                    
                </throws>
            </javadoc>
            <javadoc line="49">
                Returns a copy of the array of ciphersuites or null if none
                  have been set.                
                <return>
                    a copy of the array of ciphersuites or null if none
                      have been set.                    
                </return>
            </javadoc>
            <method name="getCipherSuites" type="String[]" line="55"/>
            <javadoc line="58">
                Sets the array of ciphersuites.                
                <param>
                    cipherSuites the array of ciphersuites (or null)                    
                </param>
            </javadoc>
            <method name="setCipherSuites" type="void" line="62">
                <params>
                    <param name="cipherSuites" type="String[]"/>
                </params>
            </method>
            <javadoc line="65">
                Returns a copy of the array of protocols or null if none
                  have been set.                
                <return>
                    a copy of the array of protocols or null if none
                      have been set.                    
                </return>
            </javadoc>
            <method name="getProtocols" type="String[]" line="71"/>
            <javadoc line="74">
                Sets the array of protocols.                
                <param>
                    protocols the array of protocols (or null)                    
                </param>
            </javadoc>
            <method name="setProtocols" type="void" line="78">
                <params>
                    <param name="protocols" type="String[]"/>
                </params>
            </method>
            <javadoc line="81">
                Returns whether client authentication should be requested.                
                <return>
                    whether client authentication should be requested.                    
                </return>
            </javadoc>
            <method name="getWantClientAuth" type="boolean" line="85"/>
            <javadoc line="88">
                Sets whether client authentication should be requested. Calling
                  this method clears the &lt;code&gt;needClientAuth&lt;/code&gt; flag.                
                <param>
                    wantClientAuth whether client authentication should be requested                    
                </param>
            </javadoc>
            <method name="setWantClientAuth" type="void" line="93">
                <params>
                    <param name="wantClientAuth" type="boolean"/>
                </params>
            </method>
            <javadoc line="96">
                Returns whether client authentication should be required.                
                <return>
                    whether client authentication should be required.                    
                </return>
            </javadoc>
            <method name="getNeedClientAuth" type="boolean" line="100"/>
            <javadoc line="103">
                Sets whether client authentication should be required. Calling
                  this method clears the &lt;code&gt;wantClientAuth&lt;/code&gt; flag.                
                <param>
                    needClientAuth whether client authentication should be required                    
                </param>
            </javadoc>
            <method name="setNeedClientAuth" type="void" line="108">
                <params>
                    <param name="needClientAuth" type="boolean"/>
                </params>
            </method>
        </class>
    </source>