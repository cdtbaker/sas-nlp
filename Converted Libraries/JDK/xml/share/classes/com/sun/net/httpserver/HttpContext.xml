<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.net.httpserver">
        <import package="java.net"/>
        <import package="java.io"/>
        <import package="java.util"/>
        <class name="HttpContext" line="5">
            <javadoc line="5">
                HttpContext represents a mapping between the root URI path of an application
                  to a {@link HttpHandler} which is invoked to handle requests destined
                  for that path on the associated HttpServer or HttpsServer.
                  &lt;p&gt;
                  HttpContext instances are created by the create methods in HttpServer
                  and HttpsServer
                  &lt;p&gt;
                  A chain of {@link Filter} objects can be added to a HttpContext. All exchanges processed by the
                  context can be pre- and post-processed by each Filter in the chain.                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="HttpContext" type="constructor" line="18"/>
            <method name="getHandler" type="HttpHandler" line="20"/>
            <javadoc line="20">
                returns the handler for this context                
                <return>
                    the HttpHandler for this context                    
                </return>
            </javadoc>
            <method name="setHandler" type="void" line="25"/>
            <javadoc line="25">
                Sets the handler for this context, if not already set.                
                <param>
                    h the handler to set for this context                    
                </param>
                <throws>
                    IllegalArgumentException if this context's handler is already set.                    
                </throws>
                <throws>
                    NullPointerException if handler is <code>null</code>                    
                </throws>
            </javadoc>
            <method name="getPath" type="String" line="32"/>
            <javadoc line="32">
                returns the path this context was created with                
                <return>
                    this context's path                    
                </return>
            </javadoc>
            <method name="getServer" type="HttpServer" line="37"/>
            <javadoc line="37">
                returns the server this context was created with                
                <return>
                    this context's server                    
                </return>
            </javadoc>
            <method name="getAttributes" type="Map<String,Object>" line="42"/>
            <javadoc line="42">
                returns a mutable Map, which can be used to pass
                  configuration and other data to Filter modules
                  and to the context&apos;s exchange handler.
                  &lt;p&gt;
                  Every attribute stored in this Map will be visible to
                  every HttpExchange processed by this context                
            </javadoc>
            <method name="getFilters" type="List<Filter>" line="51"/>
            <javadoc line="51">
                returns this context&apos;s list of Filters. This is the
                  actual list used by the server when dispatching requests
                  so modifications to this list immediately affect the
                  the handling of exchanges.                
            </javadoc>
            <method name="setAuthenticator" type="Authenticator" line="58"/>
            <javadoc line="58">
                Sets the Authenticator for this HttpContext. Once an authenticator
                  is establised on a context, all client requests must be
                  authenticated, and the given object will be invoked to validate each
                  request. Each call to this method replaces any previous value set.                
                <param>
                    auth the authenticator to set. If <code>null</code> then any
                      previously set authenticator is removed,
                      and client authentication will no longer be required.                    
                </param>
                <return>
                    the previous Authenticator, if any set, or <code>null</code>
                      otherwise.                    
                </return>
            </javadoc>
            <method name="getAuthenticator" type="Authenticator" line="70"/>
            <javadoc line="70">
                Returns the currently set Authenticator for this context
                  if one exists.                
                <return>
                    this HttpContext's Authenticator, or <code>null</code>
                      if none is set.                    
                </return>
            </javadoc>
        </class>
    </source>