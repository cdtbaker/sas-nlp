<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.net.ssl">
        <import package="java.util"/>
        <import package="java.io"/>
        <import package="java.security"/>
        <import package="java.security.Provider.Service"/>
        <import package="java.net.Socket"/>
        <import package="sun.security.jca"/>
        <class name="SSLSecurity" line="42">
            <comment line="54">
                Don&apos;t let anyone instantiate this.                
            </comment>
            <comment line="61">
                ProviderList.getService() is not accessible now, implement our own loop                
            </comment>
            <comment line="238">
                Checks whether one class is the superclass of another                
            </comment>
            <comment line="254">
                Return at most the first &quot;resize&quot; elements of an array.
                
                 Didn&apos;t want to use java.util.Arrays, as PJava may not have it.                
            </comment>
            <comment line="531">
                JSSE 1.0.x was only socket based, but it&apos;s possible someone might
                 want to install a really old provider.  We should at least
                 try to be nice.                
            </comment>
            <comment line="570">
                JSSE 1.0.x was only socket based, but it&apos;s possible someone might
                 want to install a really old provider.  We should at least
                 try to be nice.                
            </comment>
            <javadoc line="42">
                This class instantiates implementations of JSSE engine classes from
                  providers registered with the java.security.Security object.                
                <author>
                    Jan Luehe                    
                </author>
                <author>
                    Jeff Nisewanger                    
                </author>
                <author>
                    Brad Wetmore                    
                </author>
            </javadoc>
            <method name="SSLSecurity" type="constructor" line="56"/>
            <method name="getService" type="Service" line="61">
                <params>
                    <param name="type" type="String"/>
                    <param name="alg" type="String"/>
                </params>
                <declaration name="list" type="ProviderList" line="62"/>
                <scope line="63">
                    <declaration name="s" type="Service" line="64"/>
                    <scope line="65"/>
                </scope>
            </method>
            <javadoc line="72">
                The body of the driver for the getImpl method.                
            </javadoc>
            <method name="getImpl1" type="Object[]" line="77">
                <params>
                    <param name="algName" type="String"/>
                    <param name="engineType" type="String"/>
                    <param name="service" type="Service"/>
                </params>
                <comment line="84">
                    system class                    
                </comment>
                <comment line="103">
                    JSSE 1.0, 1.0.1, and 1.0.2 used the com.sun.net.ssl API as the
                     API was being developed.  As JSSE was folded into the main
                     release, it was decided to promote the com.sun.net.ssl API to
                     be javax.net.ssl.  It is desired to keep binary compatibility
                     with vendors of JSSE implementation written using the
                     com.sun.net.sll API, so we do this magic to handle everything.
                    
                     API used     Implementation used     Supported?
                     ========     ===================     ==========
                     com.sun      javax                   Yes
                     com.sun      com.sun                 Yes
                     javax        javax                   Yes
                     javax        com.sun                 Not Currently
                    
                     Make sure the implementation class is a subclass of the
                     corresponding engine class.
                    
                     In wrapping these classes, there&apos;s no way to know how to
                     wrap all possible classes that extend the TrustManagerKeyManager.
                     We only wrap the x509 variants.                    
                </comment>
                <comment line="126">
                    catch instantiation errors                    
                </comment>
                <comment line="128">
                    (The following Class.forName()s should alway work, because
                     this class and all the SPI classes in javax.crypto are
                     loaded by the same class loader.)  That is, unless they
                     give us a SPI class that doesn&apos;t exist, say SSLFoo,
                     or someone has removed classes from the jsse.jar file.                    
                </comment>
                <comment line="140">
                    Odds are more likely that we have a javax variant, try this
                     first.                    
                </comment>
                <comment line="155">
                    We should throw an error if we get
                     something totally unexpected.  Don&apos;t ever
                     expect to see this one...                    
                </comment>
                <declaration name="provider" type="Provider" line="78"/>
                <declaration name="className" type="String" line="79"/>
                <declaration name="implClass" type="Class" line="80"/>
                <scope line="81">
                    <declaration name="cl" type="ClassLoader" line="82"/>
                    <scope line="83"/>
                    <scope line="86"/>
                </scope>
                <scope line="89"/>
                <scope line="95"/>
                <scope line="126">
                    <declaration name="typeClassJavax" type="Class" line="136"/>
                    <declaration name="typeClassCom" type="Class" line="137"/>
                    <declaration name="obj" type="Object" line="138"/>
                    <scope line="146">
                        <scope line="148"/>
                        <scope line="150"/>
                        <scope line="152"/>
                        <scope line="154"/>
                    </scope>
                    <scope line="167"/>
                    <scope line="171"/>
                    <scope line="173"/>
                </scope>
                <scope line="179">
                    <declaration name="exc" type="IllegalStateException" line="180"/>
                </scope>
            </method>
            <javadoc line="187">
                Returns an array of objects: the first object in the array is
                  an instance of an implementation of the requested algorithm
                  and type, and the second object in the array identifies the provider
                  of that implementation.
                  The &lt;code&gt;provName&lt;/code&gt; argument can be null, in which case all
                  configured providers will be searched in order of preference.                
            </javadoc>
            <method name="getImpl" type="Object[]" line="197">
                <params>
                    <param name="algName" type="String"/>
                    <param name="engineType" type="String"/>
                    <param name="provName" type="String"/>
                </params>
                <declaration name="service" type="Service" line="198"/>
                <scope line="199">
                    <declaration name="list" type="ProviderList" line="200"/>
                    <declaration name="prov" type="Provider" line="201"/>
                    <scope line="202"/>
                </scope>
                <scope line="207"/>
                <scope line="210"/>
            </method>
            <javadoc line="218">
                Returns an array of objects: the first object in the array is
                  an instance of an implementation of the requested algorithm
                  and type, and the second object in the array identifies the provider
                  of that implementation.
                  The &lt;code&gt;prov&lt;/code&gt; argument can be null, in which case all
                  configured providers will be searched in order of preference.                
            </javadoc>
            <method name="getImpl" type="Object[]" line="228">
                <params>
                    <param name="algName" type="String"/>
                    <param name="engineType" type="String"/>
                    <param name="prov" type="Provider"/>
                </params>
                <declaration name="service" type="Service" line="229"/>
                <scope line="230"/>
            </method>
            <method name="checkSuperclass" type="boolean" line="240">
                <params>
                    <param name="subclass" type="Class"/>
                    <param name="superclass" type="Class"/>
                </params>
                <scope line="244">
                    <scope line="246"/>
                </scope>
            </method>
            <method name="truncateArray" type="Object[]" line="258">
                <params>
                    <param name="oldArray" type="Object[]"/>
                    <param name="newArray" type="Object[]"/>
                </params>
                <scope line="260"/>
            </method>
        </class>
        <class name="SSLContextSpiWrapper" line="280">
            <extends class="SSLContextSpi"/>
            <comment line="54">
                Don&apos;t let anyone instantiate this.                
            </comment>
            <comment line="61">
                ProviderList.getService() is not accessible now, implement our own loop                
            </comment>
            <comment line="238">
                Checks whether one class is the superclass of another                
            </comment>
            <comment line="254">
                Return at most the first &quot;resize&quot; elements of an array.
                
                 Didn&apos;t want to use java.util.Arrays, as PJava may not have it.                
            </comment>
            <comment line="531">
                JSSE 1.0.x was only socket based, but it&apos;s possible someone might
                 want to install a really old provider.  We should at least
                 try to be nice.                
            </comment>
            <comment line="570">
                JSSE 1.0.x was only socket based, but it&apos;s possible someone might
                 want to install a really old provider.  We should at least
                 try to be nice.                
            </comment>
            <declaration name="theSSLContext" type="javax.net.ssl.SSLContext" line="282"/>
            <method name="SSLContextSpiWrapper" type="constructor" line="285">
                <params>
                    <param name="algName" type="String"/>
                    <param name="prov" type="Provider"/>
                </params>
            </method>
            <method name="engineInit" type="void" line="290">
                <params>
                    <param name="kma" type="KeyManager[]"/>
                    <param name="tma" type="TrustManager[]"/>
                    <param name="sr" type="SecureRandom"/>
                </params>
                <comment line="292">
                    Keep track of the actual number of array elements copied                    
                </comment>
                <comment line="298">
                    Convert com.sun.net.ssl.kma to a javax.net.ssl.kma                    
                </comment>
                <comment line="299">
                    wrapper if need be.                    
                </comment>
                <comment line="303">
                    These key managers may implement both javax
                     and com.sun interfaces, so if they do
                     javax, there&apos;s no need to wrap them.                    
                </comment>
                <comment line="309">
                    Do we know how to convert them?  If not, oh well...
                     We&apos;ll have to drop them on the floor in this
                     case, cause we don&apos;t know how to handle them.
                     This will be pretty rare, but put here for
                     completeness.                    
                </comment>
                <comment line="323">
                    We can convert directly, since they implement.                    
                </comment>
                <comment line="330">
                    If dst != src, there were more items in the original array
                     than in the new array.  Compress the new elements to avoid
                     any problems down the road.                    
                </comment>
                <comment line="344">
                    Now do the same thing with the TrustManagers.                    
                </comment>
                <comment line="349">
                    These key managers may implement both...see above...                    
                </comment>
                <comment line="353">
                    Do we know how to convert them?                    
                </comment>
                <declaration name="dst" type="int" line="293"/>
                <declaration name="src" type="int" line="294"/>
                <declaration name="kmaw" type="javax.net.ssl.KeyManager[]" line="295"/>
                <declaration name="tmaw" type="javax.net.ssl.TrustManager[]" line="296"/>
                <scope line="300">
                    <scope line="302">
                        <scope line="308">
                            <scope line="316"/>
                        </scope>
                        <scope line="322"/>
                    </scope>
                    <scope line="335"/>
                </scope>
                <scope line="340"/>
                <scope line="345">
                    <scope line="348">
                        <scope line="352">
                            <scope line="354"/>
                        </scope>
                        <scope line="360"/>
                    </scope>
                    <scope line="367"/>
                </scope>
                <scope line="372"/>
            </method>
            <method name="engineGetSocketFactory" type="javax.net.ssl.SSLSocketFactory" line="380"/>
            <method name="engineGetServerSocketFactory" type="javax.net.ssl.SSLServerSocketFactory" line="385"/>
        </class>
        <class name="TrustManagerFactorySpiWrapper" line="391">
            <extends class="TrustManagerFactorySpi"/>
            <comment line="54">
                Don&apos;t let anyone instantiate this.                
            </comment>
            <comment line="61">
                ProviderList.getService() is not accessible now, implement our own loop                
            </comment>
            <comment line="238">
                Checks whether one class is the superclass of another                
            </comment>
            <comment line="254">
                Return at most the first &quot;resize&quot; elements of an array.
                
                 Didn&apos;t want to use java.util.Arrays, as PJava may not have it.                
            </comment>
            <comment line="531">
                JSSE 1.0.x was only socket based, but it&apos;s possible someone might
                 want to install a really old provider.  We should at least
                 try to be nice.                
            </comment>
            <comment line="570">
                JSSE 1.0.x was only socket based, but it&apos;s possible someone might
                 want to install a really old provider.  We should at least
                 try to be nice.                
            </comment>
            <declaration name="theTrustManagerFactory" type="javax.net.ssl.TrustManagerFactory" line="393"/>
            <method name="TrustManagerFactorySpiWrapper" type="constructor" line="396">
                <params>
                    <param name="algName" type="String"/>
                    <param name="prov" type="Provider"/>
                </params>
            </method>
            <method name="engineInit" type="void" line="401">
                <params>
                    <param name="ks" type="KeyStore"/>
                </params>
            </method>
            <method name="engineGetTrustManagers" type="TrustManager[]" line="405">
                <comment line="417">
                    We only know how to wrap X509TrustManagers, as                    
                </comment>
                <comment line="418">
                    TrustManagers don&apos;t have any methods to wrap.                    
                </comment>
                <declaration name="dst" type="int" line="407"/>
                <declaration name="src" type="int" line="408"/>
                <declaration name="tma" type="javax.net.ssl.TrustManager[]" line="410"/>
                <declaration name="tmaw" type="TrustManager[]" line="413"/>
                <scope line="415">
                    <scope line="416">
                        <scope line="419"/>
                    </scope>
                    <scope line="425"/>
                </scope>
                <scope line="432"/>
            </method>
        </class>
        <class name="KeyManagerFactorySpiWrapper" line="442">
            <extends class="KeyManagerFactorySpi"/>
            <comment line="54">
                Don&apos;t let anyone instantiate this.                
            </comment>
            <comment line="61">
                ProviderList.getService() is not accessible now, implement our own loop                
            </comment>
            <comment line="238">
                Checks whether one class is the superclass of another                
            </comment>
            <comment line="254">
                Return at most the first &quot;resize&quot; elements of an array.
                
                 Didn&apos;t want to use java.util.Arrays, as PJava may not have it.                
            </comment>
            <comment line="531">
                JSSE 1.0.x was only socket based, but it&apos;s possible someone might
                 want to install a really old provider.  We should at least
                 try to be nice.                
            </comment>
            <comment line="570">
                JSSE 1.0.x was only socket based, but it&apos;s possible someone might
                 want to install a really old provider.  We should at least
                 try to be nice.                
            </comment>
            <declaration name="theKeyManagerFactory" type="javax.net.ssl.KeyManagerFactory" line="444"/>
            <method name="KeyManagerFactorySpiWrapper" type="constructor" line="447">
                <params>
                    <param name="algName" type="String"/>
                    <param name="prov" type="Provider"/>
                </params>
            </method>
            <method name="engineInit" type="void" line="454">
                <params>
                    <param name="ks" type="KeyStore"/>
                    <param name="password" type="char[]"/>
                </params>
            </method>
            <method name="engineGetKeyManagers" type="KeyManager[]" line="458">
                <comment line="470">
                    We only know how to wrap X509KeyManagers, as                    
                </comment>
                <comment line="471">
                    KeyManagers don&apos;t have any methods to wrap.                    
                </comment>
                <declaration name="dst" type="int" line="460"/>
                <declaration name="src" type="int" line="461"/>
                <declaration name="kma" type="javax.net.ssl.KeyManager[]" line="463"/>
                <declaration name="kmaw" type="KeyManager[]" line="466"/>
                <scope line="468">
                    <scope line="469">
                        <scope line="472"/>
                    </scope>
                    <scope line="478"/>
                </scope>
                <scope line="485"/>
            </method>
        </class>
        <class name="X509KeyManagerJavaxWrapper" line="497">
            <comment line="54">
                Don&apos;t let anyone instantiate this.                
            </comment>
            <comment line="61">
                ProviderList.getService() is not accessible now, implement our own loop                
            </comment>
            <comment line="238">
                Checks whether one class is the superclass of another                
            </comment>
            <comment line="254">
                Return at most the first &quot;resize&quot; elements of an array.
                
                 Didn&apos;t want to use java.util.Arrays, as PJava may not have it.                
            </comment>
            <comment line="531">
                JSSE 1.0.x was only socket based, but it&apos;s possible someone might
                 want to install a really old provider.  We should at least
                 try to be nice.                
            </comment>
            <comment line="570">
                JSSE 1.0.x was only socket based, but it&apos;s possible someone might
                 want to install a really old provider.  We should at least
                 try to be nice.                
            </comment>
            <implements interface="javax.net.ssl.X509KeyManager"/>
            <declaration name="theX509KeyManager" type="X509KeyManager" line="500"/>
            <method name="X509KeyManagerJavaxWrapper" type="constructor" line="502">
                <params>
                    <param name="obj" type="X509KeyManager"/>
                </params>
            </method>
            <method name="getClientAliases" type="String[]" line="506">
                <params>
                    <param name="keyType" type="String"/>
                    <param name="issuers" type="Principal[]"/>
                </params>
            </method>
            <method name="chooseClientAlias" type="String" line="511">
                <params>
                    <param name="keyTypes" type="String[]"/>
                    <param name="issuers" type="Principal[]"/>
                    <param name="socket" type="Socket"/>
                </params>
                <comment line="518">
                    Scan the list, look for something we can pass back.                    
                </comment>
                <declaration name="retval" type="String" line="512"/>
                <scope line="514"/>
                <scope line="521"/>
            </method>
            <method name="chooseEngineClientAlias" type="String" line="537">
                <params>
                    <param name="keyTypes" type="String[]"/>
                    <param name="issuers" type="Principal[]"/>
                    <param name="engine" type="javax.net.ssl.SSLEngine"/>
                </params>
                <comment line="544">
                    Scan the list, look for something we can pass back.                    
                </comment>
                <declaration name="retval" type="String" line="538"/>
                <scope line="540"/>
                <scope line="547"/>
            </method>
            <method name="getServerAliases" type="String[]" line="556">
                <params>
                    <param name="keyType" type="String"/>
                    <param name="issuers" type="Principal[]"/>
                </params>
            </method>
            <method name="chooseServerAlias" type="String" line="561">
                <params>
                    <param name="keyType" type="String"/>
                    <param name="issuers" type="Principal[]"/>
                    <param name="socket" type="Socket"/>
                </params>
                <scope line="563"/>
            </method>
            <method name="chooseEngineServerAlias" type="String" line="576">
                <params>
                    <param name="keyType" type="String"/>
                    <param name="issuers" type="Principal[]"/>
                    <param name="engine" type="javax.net.ssl.SSLEngine"/>
                </params>
                <scope line="578"/>
            </method>
            <method name="getCertificateChain" type="java.security.cert.X509Certificate[]" line="585">
                <params>
                    <param name="alias" type="String"/>
                </params>
            </method>
            <method name="getPrivateKey" type="PrivateKey" line="589">
                <params>
                    <param name="alias" type="String"/>
                </params>
            </method>
        </class>
        <class name="X509TrustManagerJavaxWrapper" line="594">
            <comment line="54">
                Don&apos;t let anyone instantiate this.                
            </comment>
            <comment line="61">
                ProviderList.getService() is not accessible now, implement our own loop                
            </comment>
            <comment line="238">
                Checks whether one class is the superclass of another                
            </comment>
            <comment line="254">
                Return at most the first &quot;resize&quot; elements of an array.
                
                 Didn&apos;t want to use java.util.Arrays, as PJava may not have it.                
            </comment>
            <comment line="531">
                JSSE 1.0.x was only socket based, but it&apos;s possible someone might
                 want to install a really old provider.  We should at least
                 try to be nice.                
            </comment>
            <comment line="570">
                JSSE 1.0.x was only socket based, but it&apos;s possible someone might
                 want to install a really old provider.  We should at least
                 try to be nice.                
            </comment>
            <implements interface="javax.net.ssl.X509TrustManager"/>
            <declaration name="theX509TrustManager" type="X509TrustManager" line="597"/>
            <method name="X509TrustManagerJavaxWrapper" type="constructor" line="599">
                <params>
                    <param name="obj" type="X509TrustManager"/>
                </params>
            </method>
            <method name="checkClientTrusted" type="void" line="605">
                <params>
                    <param name="chain" type="java.security.cert.X509Certificate[]"/>
                    <param name="authType" type="String"/>
                </params>
                <scope line="606"/>
            </method>
            <method name="checkServerTrusted" type="void" line="614">
                <params>
                    <param name="chain" type="java.security.cert.X509Certificate[]"/>
                    <param name="authType" type="String"/>
                </params>
                <scope line="615"/>
            </method>
            <method name="getAcceptedIssuers" type="java.security.cert.X509Certificate[]" line="621"/>
        </class>
        <class name="X509KeyManagerComSunWrapper" line="626">
            <comment line="54">
                Don&apos;t let anyone instantiate this.                
            </comment>
            <comment line="61">
                ProviderList.getService() is not accessible now, implement our own loop                
            </comment>
            <comment line="238">
                Checks whether one class is the superclass of another                
            </comment>
            <comment line="254">
                Return at most the first &quot;resize&quot; elements of an array.
                
                 Didn&apos;t want to use java.util.Arrays, as PJava may not have it.                
            </comment>
            <comment line="531">
                JSSE 1.0.x was only socket based, but it&apos;s possible someone might
                 want to install a really old provider.  We should at least
                 try to be nice.                
            </comment>
            <comment line="570">
                JSSE 1.0.x was only socket based, but it&apos;s possible someone might
                 want to install a really old provider.  We should at least
                 try to be nice.                
            </comment>
            <implements interface="X509KeyManager"/>
            <declaration name="theX509KeyManager" type="javax.net.ssl.X509KeyManager" line="628"/>
            <method name="X509KeyManagerComSunWrapper" type="constructor" line="630">
                <params>
                    <param name="obj" type="javax.net.ssl.X509KeyManager"/>
                </params>
            </method>
            <method name="getClientAliases" type="String[]" line="634">
                <params>
                    <param name="keyType" type="String"/>
                    <param name="issuers" type="Principal[]"/>
                </params>
            </method>
            <method name="chooseClientAlias" type="String" line="638">
                <params>
                    <param name="keyType" type="String"/>
                    <param name="issuers" type="Principal[]"/>
                </params>
                <declaration name="keyTypes" type="String[]" line="639"/>
            </method>
            <method name="getServerAliases" type="String[]" line="643">
                <params>
                    <param name="keyType" type="String"/>
                    <param name="issuers" type="Principal[]"/>
                </params>
            </method>
            <method name="chooseServerAlias" type="String" line="647">
                <params>
                    <param name="keyType" type="String"/>
                    <param name="issuers" type="Principal[]"/>
                </params>
            </method>
            <method name="getCertificateChain" type="java.security.cert.X509Certificate[]" line="652">
                <params>
                    <param name="alias" type="String"/>
                </params>
            </method>
            <method name="getPrivateKey" type="PrivateKey" line="656">
                <params>
                    <param name="alias" type="String"/>
                </params>
            </method>
        </class>
        <class name="X509TrustManagerComSunWrapper" line="661">
            <comment line="54">
                Don&apos;t let anyone instantiate this.                
            </comment>
            <comment line="61">
                ProviderList.getService() is not accessible now, implement our own loop                
            </comment>
            <comment line="238">
                Checks whether one class is the superclass of another                
            </comment>
            <comment line="254">
                Return at most the first &quot;resize&quot; elements of an array.
                
                 Didn&apos;t want to use java.util.Arrays, as PJava may not have it.                
            </comment>
            <comment line="531">
                JSSE 1.0.x was only socket based, but it&apos;s possible someone might
                 want to install a really old provider.  We should at least
                 try to be nice.                
            </comment>
            <comment line="570">
                JSSE 1.0.x was only socket based, but it&apos;s possible someone might
                 want to install a really old provider.  We should at least
                 try to be nice.                
            </comment>
            <implements interface="X509TrustManager"/>
            <declaration name="theX509TrustManager" type="javax.net.ssl.X509TrustManager" line="663"/>
            <method name="X509TrustManagerComSunWrapper" type="constructor" line="665">
                <params>
                    <param name="obj" type="javax.net.ssl.X509TrustManager"/>
                </params>
            </method>
            <method name="isClientTrusted" type="boolean" line="670">
                <params>
                    <param name="chain" type="java.security.cert.X509Certificate[]"/>
                </params>
                <scope line="671"/>
                <scope line="674"/>
            </method>
            <method name="isServerTrusted" type="boolean" line="680">
                <params>
                    <param name="chain" type="java.security.cert.X509Certificate[]"/>
                </params>
                <scope line="681"/>
                <scope line="684"/>
            </method>
            <method name="getAcceptedIssuers" type="java.security.cert.X509Certificate[]" line="689"/>
        </class>
    </source>