<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.net.ssl">
        <import package="java.security"/>
        <class name="TrustManagerFactory" line="3">
            <javadoc line="3">
                This class acts as a factory for trust managers based on a
                  source of trust material. Each trust manager manages a specific
                  type of trust material for use by secure sockets. The trust
                  material is based on a KeyStore and/or provider specific sources.                
                <deprecated>
                    As of JDK 1.4, this implementation-specific class was
                      replaced by {@link javax.net.ssl.TrustManagerFactory}.                    
                </deprecated>
            </javadoc>
            <declaration name="provider" type="Provider" line="12"/>
            <declaration name="factorySpi" type="TrustManagerFactorySpi" line="13"/>
            <declaration name="algorithm" type="String" line="14"/>
            <javadoc line="15">
                &lt;p&gt;The default TrustManager can be changed by setting the value of the
                  &quot;sun.ssl.trustmanager.type&quot; security property
                  (in the Java security properties file) to the desired name.                
                <return>
                    the default type as specified in the
                      Java security properties file, or an implementation-specific default
                      if no such property exists.                    
                </return>
            </javadoc>
            <method name="getDefaultAlgorithm" type="String" line="23">
                <declaration name="type" type="String" line="24"/>
                <anonymous_class line="25">
                    <method name="run" type="String" line="26"/>
                </anonymous_class>
                <scope line="31"/>
            </method>
            <javadoc line="36">
                Creates a TrustManagerFactory object.                
                <param>
                    factorySpi the delegate                    
                </param>
                <param>
                    provider the provider                    
                </param>
                <param>
                    algorithm the algorithm                    
                </param>
            </javadoc>
            <method name="TrustManagerFactory" type="constructor" line="42">
                <params>
                    <param name="factorySpi" type="TrustManagerFactorySpi"/>
                    <param name="provider" type="Provider"/>
                    <param name="algorithm" type="String"/>
                </params>
            </method>
            <javadoc line="47">
                Returns the algorithm name of this &lt;code&gt;TrustManagerFactory&lt;/code&gt;
                  object.
                  &lt;p&gt;This is the same name that was specified in one of the
                  &lt;code&gt;getInstance&lt;/code&gt; calls that created this
                  &lt;code&gt;TrustManagerFactory&lt;/code&gt; object.                
                <return>
                    the algorithm name of this <code>TrustManagerFactory</code>
                      object.                    
                </return>
            </javadoc>
            <method name="getAlgorithm" type="String" line="56"/>
            <javadoc line="59">
                Generates a &lt;code&gt;TrustManagerFactory&lt;/code&gt; object that implements the
                  specified trust management algorithm.
                  If the default provider package provides an implementation of the
                  requested trust management algorithm, an instance of
                  &lt;code&gt;TrustManagerFactory&lt;/code&gt; containing that implementation is
                  returned.  If the algorithm is not available in the default provider
                  package, other provider packages are searched.                
                <param>
                    algorithm the standard name of the requested trust management
                      algorithm.                    
                </param>
                <return>
                    the new <code>TrustManagerFactory</code> object                    
                </return>
                <exception>
                    NoSuchAlgorithmException if the specified algorithm is not
                      available in the default provider package or any of the other provider
                      packages that were searched.                    
                </exception>
            </javadoc>
            <method name="getInstance" type="TrustManagerFactory" line="74">
                <params>
                    <param name="algorithm" type="String"/>
                </params>
                <scope line="75">
                    <declaration name="objs" type="Object[]" line="76"/>
                </scope>
                <scope line="79"/>
            </method>
            <javadoc line="83">
                Generates a &lt;code&gt;TrustManagerFactory&lt;/code&gt; object for the specified
                  trust management algorithm from the specified provider.                
                <param>
                    algorithm the standard name of the requested trust management
                      algorithm.                    
                </param>
                <param>
                    provider the name of the provider                    
                </param>
                <return>
                    the new <code>TrustManagerFactory</code> object                    
                </return>
                <exception>
                    NoSuchAlgorithmException if the specified algorithm is not
                      available from the specified provider.                    
                </exception>
                <exception>
                    NoSuchProviderException if the specified provider has not
                      been configured.                    
                </exception>
            </javadoc>
            <method name="getInstance" type="TrustManagerFactory" line="95">
                <params>
                    <param name="algorithm" type="String"/>
                    <param name="provider" type="String"/>
                </params>
                <declaration name="objs" type="Object[]" line="97"/>
            </method>
            <javadoc line="100">
                Generates a &lt;code&gt;TrustManagerFactory&lt;/code&gt; object for the specified
                  trust management algorithm from the specified provider.                
                <param>
                    algorithm the standard name of the requested trust management
                      algorithm.                    
                </param>
                <param>
                    provider an instance of the provider                    
                </param>
                <return>
                    the new <code>TrustManagerFactory</code> object                    
                </return>
                <exception>
                    NoSuchAlgorithmException if the specified algorithm is not
                      available from the specified provider.                    
                </exception>
            </javadoc>
            <method name="getInstance" type="TrustManagerFactory" line="110">
                <params>
                    <param name="algorithm" type="String"/>
                    <param name="provider" type="Provider"/>
                </params>
                <declaration name="objs" type="Object[]" line="112"/>
            </method>
            <javadoc line="115">
                Returns the provider of this &lt;code&gt;TrustManagerFactory&lt;/code&gt; object.                
                <return>
                    the provider of this <code>TrustManagerFactory</code> object                    
                </return>
            </javadoc>
            <method name="getProvider" type="Provider" line="119"/>
            <javadoc line="122">
                Initializes this factory with a source of certificate
                  authorities and related trust material. The
                  provider may also include a provider-specific source
                  of key material.                
                <param>
                    ks the key store or null                    
                </param>
            </javadoc>
            <method name="init" type="void" line="129">
                <params>
                    <param name="ks" type="KeyStore"/>
                </params>
            </method>
            <javadoc line="132">
                Returns one trust manager for each type of trust material.                
                <return>
                    the trust managers                    
                </return>
            </javadoc>
            <method name="getTrustManagers" type="TrustManager[]" line="136"/>
        </class>
    </source>