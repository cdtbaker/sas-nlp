<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.net.httpserver">
        <import package="java.net"/>
        <import package="java.io"/>
        <import package="java.nio"/>
        <import package="java.security"/>
        <import package="java.nio.channels"/>
        <import package="java.util"/>
        <import package="java.util.concurrent"/>
        <import package="javax.net.ssl"/>
        <class name="HttpsConfigurator" line="38">
            <comment line="95">
                BEGIN_TIGER_EXCLUDE                
            </comment>
            <comment line="116">
                END_TIGER_EXCLUDE                
            </comment>
            <javadoc line="38">
                This class is used to configure the https parameters for each incoming
                  https connection on a HttpsServer. Applications need to override
                  the {@link #configure(HttpsParameters)} method in order to change
                  the default configuration.
                  &lt;p&gt;
                  The following &lt;a name=&quot;example&quot;&gt;example&lt;/a&gt; shows how this may be done:
                  &lt;p&gt;
                  &lt;pre&gt;&lt;blockquote&gt;
                  SSLContext sslContext = SSLContext.getInstance (....);
                  HttpsServer server = HttpsServer.create();
                  server.setHttpsConfigurator (new HttpsConfigurator(sslContext) {
                  public void configure (HttpsParameters params) {
                  // get the remote address if needed
                  InetSocketAddress remote = params.getClientAddress();
                  SSLContext c = getSSLContext();
                  // get the default parameters
                  SSLParameters sslparams = c.getDefaultSSLParameters();
                  if (remote.equals (...) ) {
                  // modify the default set for client x
                  }
                  params.setSSLParameters(sslparams);
                  }
                  });
                  &lt;/blockquote&gt;&lt;/pre&gt;                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="context" type="SSLContext" line="72"/>
            <javadoc line="74">
                Creates an Https configuration, with the given SSLContext.                
                <param>
                    context the SSLContext to use for this configurator                    
                </param>
                <throws>
                    NullPointerException if no SSLContext supplied                    
                </throws>
            </javadoc>
            <method name="HttpsConfigurator" type="constructor" line="79">
                <params>
                    <param name="context" type="SSLContext"/>
                </params>
                <scope line="80"/>
            </method>
            <javadoc line="86">
                Returns the SSLContext for this HttpsConfigurator.                
                <return>
                    the SSLContext                    
                </return>
            </javadoc>
            <method name="getSSLContext" type="SSLContext" line="90"/>
            <javadoc line="95">
                Called by the HttpsServer to configure the parameters
                  for a https connection currently being established.
                  The implementation of configure() must call{@link HttpsParameters#setSSLParameters(SSLParameters)}in order to set the SSL parameters for the connection.
                  &lt;p&gt;
                  The default implementation of this method uses the
                  SSLParameters returned from &lt;p&gt;
                  &lt;code&gt;getSSLContext().getDefaultSSLParameters()&lt;/code&gt;
                  &lt;p&gt;
                  configure() may be overridden in order to modify this behavior.
                  See, the example &lt;a href=&quot;#example&quot;&gt;above&lt;/a&gt;.                
                <param>
                    params the HttpsParameters to be configured.                    
                </param>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="configure" type="void" line="112">
                <params>
                    <param name="params" type="HttpsParameters"/>
                </params>
            </method>
        </class>
    </source>