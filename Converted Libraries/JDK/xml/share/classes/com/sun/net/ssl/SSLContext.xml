<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.net.ssl">
        <import package="java.security"/>
        <import package="java.util"/>
        <import package="javax.net.ssl"/>
        <import package="sun.security.ssl.SSLSocketFactoryImpl"/>
        <import package="sun.security.ssl.SSLServerSocketFactoryImpl"/>
        <class name="SSLContext" line="7">
            <javadoc line="7">
                Instances of this class represent a secure socket protocol
                  implementation which acts as a factory for secure socket
                  factories. This class is initialized with an optional set of
                  key and trust managers and source of secure random bytes.                
                <deprecated>
                    As of JDK 1.4, this implementation-specific class was
                      replaced by {@link javax.net.ssl.SSLContext}.                    
                </deprecated>
            </javadoc>
            <declaration name="provider" type="Provider" line="16"/>
            <declaration name="contextSpi" type="SSLContextSpi" line="17"/>
            <declaration name="protocol" type="String" line="18"/>
            <javadoc line="19">
                Creates an SSLContext object.                
                <param>
                    contextSpi the delegate                    
                </param>
                <param>
                    provider the provider                    
                </param>
                <param>
                    algorithm the algorithm                    
                </param>
            </javadoc>
            <method name="SSLContext" type="constructor" line="25">
                <params>
                    <param name="contextSpi" type="SSLContextSpi"/>
                    <param name="provider" type="Provider"/>
                    <param name="protocol" type="String"/>
                </params>
            </method>
            <javadoc line="30">
                Generates a &lt;code&gt;SSLContext&lt;/code&gt; object that implements the
                  specified secure socket protocol.                
                <param>
                    protocol the standard name of the requested protocol.                    
                </param>
                <return>
                    the new <code>SSLContext</code> object                    
                </return>
                <exception>
                    NoSuchAlgorithmException if the specified protocol is not
                      available in the default provider package or any of the other provider
                      packages that were searched.                    
                </exception>
            </javadoc>
            <method name="getInstance" type="SSLContext" line="39">
                <params>
                    <param name="protocol" type="String"/>
                </params>
                <scope line="40">
                    <declaration name="objs" type="Object[]" line="41"/>
                </scope>
                <scope line="44"/>
            </method>
            <javadoc line="48">
                Generates a &lt;code&gt;SSLContext&lt;/code&gt; object that implements the
                  specified secure socket protocol.                
                <param>
                    protocol the standard name of the requested protocol.                    
                </param>
                <param>
                    provider the name of the provider                    
                </param>
                <return>
                    the new <code>SSLContext</code> object                    
                </return>
                <exception>
                    NoSuchAlgorithmException if the specified protocol is not
                      available from the specified provider.                    
                </exception>
                <exception>
                    NoSuchProviderException if the specified provider has not
                      been configured.                    
                </exception>
            </javadoc>
            <method name="getInstance" type="SSLContext" line="59">
                <params>
                    <param name="protocol" type="String"/>
                    <param name="provider" type="String"/>
                </params>
                <declaration name="objs" type="Object[]" line="61"/>
            </method>
            <javadoc line="64">
                Generates a &lt;code&gt;SSLContext&lt;/code&gt; object that implements the
                  specified secure socket protocol.                
                <param>
                    protocol the standard name of the requested protocol.                    
                </param>
                <param>
                    provider an instance of the provider                    
                </param>
                <return>
                    the new <code>SSLContext</code> object                    
                </return>
                <exception>
                    NoSuchAlgorithmException if the specified protocol is not
                      available from the specified provider.                    
                </exception>
            </javadoc>
            <method name="getInstance" type="SSLContext" line="73">
                <params>
                    <param name="protocol" type="String"/>
                    <param name="provider" type="Provider"/>
                </params>
                <declaration name="objs" type="Object[]" line="75"/>
            </method>
            <javadoc line="78">
                Returns the protocol name of this &lt;code&gt;SSLContext&lt;/code&gt; object.
                  &lt;p&gt;This is the same name that was specified in one of the
                  &lt;code&gt;getInstance&lt;/code&gt; calls that created this
                  &lt;code&gt;SSLContext&lt;/code&gt; object.                
                <return>
                    the protocol name of this <code>SSLContext</code> object.                    
                </return>
            </javadoc>
            <method name="getProtocol" type="String" line="85"/>
            <javadoc line="88">
                Returns the provider of this &lt;code&gt;SSLContext&lt;/code&gt; object.                
                <return>
                    the provider of this <code>SSLContext</code> object                    
                </return>
            </javadoc>
            <method name="getProvider" type="Provider" line="92"/>
            <javadoc line="95">
                Initializes this context. Either of the first two parameters
                  may be null in which case the installed security providers will
                  be searched for the highest priority implementation of the
                  appropriate factory. Likewise, the secure random parameter may
                  be null in which case the default implementation will be used.                
                <param>
                    km the sources of authentication keys or null                    
                </param>
                <param>
                    tm the sources of peer authentication trust decisions or null                    
                </param>
                <param>
                    random the source of randomness for this generator or null                    
                </param>
            </javadoc>
            <method name="init" type="void" line="105">
                <params>
                    <param name="km" type="KeyManager[]"/>
                    <param name="tm" type="TrustManager[]"/>
                    <param name="random" type="SecureRandom"/>
                </params>
            </method>
            <javadoc line="108">
                Returns a &lt;code&gt;SocketFactory&lt;/code&gt; object for this
                  context.                
                <return>
                    the factory                    
                </return>
            </javadoc>
            <method name="getSocketFactory" type="SSLSocketFactory" line="113"/>
            <javadoc line="116">
                Returns a &lt;code&gt;ServerSocketFactory&lt;/code&gt; object for
                  this context.                
                <return>
                    the factory                    
                </return>
            </javadoc>
            <method name="getServerSocketFactory" type="SSLServerSocketFactory" line="121"/>
        </class>
    </source>