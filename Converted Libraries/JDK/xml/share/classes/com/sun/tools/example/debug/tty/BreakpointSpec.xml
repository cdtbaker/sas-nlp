<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.tty">
        <import package="com.sun.jdi"/>
        <import package="com.sun.jdi.request"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <class name="BreakpointSpec" line="34">
            <extends class="EventRequestSpec"/>
            <comment line="202">
                Compare a method&apos;s argument types with a Vector of type names.
                 Return true if each argument type has a name identical to the
                 corresponding string in the vector (allowing for varars)
                 and if the number of arguments in the method matches the
                 number of names passed                
            </comment>
            <comment line="260">
                Remove unneeded spaces and expand class names to fully
                 qualified names, if necessary and possible.                
            </comment>
            <comment line="324">
                Attempt an unambiguous match of the method name and
                 argument specification to a method. If no arguments
                 are specified, the method must not be overloaded.
                 Otherwise, the argument types much match exactly                
            </comment>
            <declaration name="methodId" type="String" line="35"/>
            <declaration name="methodArgs" type="List&lt;String&gt;" line="36"/>
            <declaration name="lineNumber" type="int" line="37"/>
            <method name="BreakpointSpec" type="constructor" line="39">
                <params>
                    <param name="refSpec" type="ReferenceTypeSpec"/>
                    <param name="lineNumber" type="int"/>
                </params>
            </method>
            <method name="BreakpointSpec" type="constructor" line="47">
                <params>
                    <param name="refSpec" type="ReferenceTypeSpec"/>
                    <param name="methodId" type="String"/>
                    <param name="methodArgs" type="List<String>"/>
                </params>
                <scope line="52"/>
            </method>
            <javadoc line="57">
                The &apos;refType&apos; is known to match, return the EventRequest.                
            </javadoc>
            <method name="resolveEventRequest" type="EventRequest" line="66">
                <params>
                    <param name="refType" type="ReferenceType"/>
                </params>
                <declaration name="location" type="Location" line="67"/>
                <scope line="68"/>
                <declaration name="em" type="EventRequestManager" line="71"/>
                <declaration name="bp" type="EventRequest" line="72"/>
            </method>
            <method name="methodName" type="String" line="78"/>
            <method name="lineNumber" type="int" line="82"/>
            <method name="methodArgs" type="List<String>" line="86"/>
            <method name="isMethodBreakpoint" type="boolean" line="90"/>
            <method name="hashCode" type="int" line="95"/>
            <method name="equals" type="boolean" line="102">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="103">
                    <declaration name="breakpoint" type="BreakpointSpec" line="104"/>
                </scope>
                <scope line="114"/>
            </method>
            <method name="errorMessageFor" type="String" line="120">
                <params>
                    <param name="e" type="Exception"/>
                </params>
                <comment line="125">
                    TO DO: list the methods here                    
                </comment>
                <scope line="121"/>
                <scope line="127"/>
                <scope line="131"/>
                <scope line="134"/>
                <scope line="138"/>
                <scope line="141"/>
            </method>
            <method name="toString" type="String" line="147">
                <declaration name="buffer" type="StringBuffer" line="148"/>
                <scope line="149">
                    <scope line="152">
                        <declaration name="first" type="boolean" line="153"/>
                        <scope line="155">
                            <scope line="156"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="164"/>
            </method>
            <method name="location" type="Location" line="175">
                <params>
                    <param name="refType" type="ReferenceType"/>
                </params>
                <comment line="182">
                    let AbsentInformationException be thrown                    
                </comment>
                <comment line="187">
                    TO DO: handle multiple locations                    
                </comment>
                <declaration name="location" type="Location" line="176"/>
                <scope line="177">
                    <declaration name="method" type="Method" line="178"/>
                </scope>
                <scope line="180">
                    <declaration name="locs" type="List&lt;Location&gt;" line="182"/>
                    <scope line="183"/>
                    <scope line="188"/>
                </scope>
            </method>
            <method name="isValidMethodName" type="boolean" line="195">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="compareArgTypes" type="boolean" line="208">
                <params>
                    <param name="method" type="Method"/>
                    <param name="nameList" type="List<String>"/>
                </params>
                <comment line="212">
                    If argument counts differ, we can stop here                    
                </comment>
                <comment line="217">
                    Compare each argument type&apos;s name                    
                </comment>
                <comment line="223">
                    We have to handle varargs.  EG, the
                     method&apos;s last arg type is xxx[]
                     while the nameList contains xxx...
                     Note that the nameList can also contain
                     xxx[] in which case we don&apos;t get here.                    
                </comment>
                <comment line="235">
                    The last types differ, it is a varargs
                     method and the nameList item is varargs.
                     We just have to compare the type names, eg,
                     make sure we don&apos;t have xxx[] for the method
                     arg type and yyy... for the nameList item.                    
                </comment>
                <comment line="244">
                    The type names are different lengths                    
                </comment>
                <comment line="247">
                    We know the two type names are the same length                    
                </comment>
                <comment line="251">
                    We do have xxx[] and xxx... as the last param type                    
                </comment>
                <declaration name="argTypeNames" type="List&lt;String&gt;" line="209"/>
                <scope line="212"/>
                <declaration name="nTypes" type="int" line="217"/>
                <scope line="218">
                    <declaration name="comp1" type="String" line="219"/>
                    <declaration name="comp2" type="String" line="220"/>
                    <scope line="221">
                        <scope line="231"/>
                        <declaration name="comp1Length" type="int" line="241"/>
                        <scope line="242"/>
                        <scope line="247"/>
                    </scope>
                </scope>
            </method>
            <method name="normalizeArgTypeName" type="String" line="263">
                <params>
                    <param name="name" type="String"/>
                </params>
                <comment line="265">
                    Separate the type name from any array modifiers,
                     stripping whitespace after the name ends                    
                </comment>
                <comment line="274">
                    For varargs, there can be spaces before the ... but not
                     within the ...  So, we will just ignore the ...
                     while stripping blanks.                    
                </comment>
                <comment line="286">
                    name is complete                    
                </comment>
                <comment line="303">
                    When there&apos;s no sign of a package name already, try to expand the
                     the name to a fully qualified class name                    
                </comment>
                <comment line="314">
                    We&apos;ll try the name as is                    
                </comment>
                <declaration name="i" type="int" line="268"/>
                <declaration name="typePart" type="StringBuffer" line="269"/>
                <declaration name="arrayPart" type="StringBuffer" line="270"/>
                <declaration name="nameLength" type="int" line="272"/>
                <declaration name="isVarArgs" type="boolean" line="278"/>
                <scope line="279"/>
                <scope line="282">
                    <declaration name="c" type="char" line="283"/>
                    <scope line="284"/>
                </scope>
                <scope line="290">
                    <declaration name="c" type="char" line="291"/>
                    <scope line="292"/>
                    <scope line="294"/>
                </scope>
                <scope line="306">
                    <scope line="307">
                        <declaration name="argClass" type="ReferenceType" line="308"/>
                        <scope line="309"/>
                    </scope>
                    <scope line="312"/>
                </scope>
                <scope line="317"/>
            </method>
            <method name="findMatchingMethod" type="Method" line="331">
                <params>
                    <param name="refType" type="ReferenceType"/>
                </params>
                <comment line="334">
                    Normalize the argument string once before looping below.                    
                </comment>
                <comment line="344">
                    Check each method in the class for matches                    
                </comment>
                <comment line="345">
                    first method with matching name                    
                </comment>
                <comment line="346">
                    (only) method with same name &amp; sig                    
                </comment>
                <comment line="347">
                    &gt; 1 implies overload                    
                </comment>
                <comment line="352">
                    Remember the first match in case it is the only one                    
                </comment>
                <comment line="357">
                    If argument types were specified, check against candidate                    
                </comment>
                <comment line="366">
                    Determine method for breakpoint                    
                </comment>
                <comment line="369">
                    Name and signature match                    
                </comment>
                <comment line="372">
                    At least one name matched and no arg types were specified                    
                </comment>
                <comment line="374">
                    Only one match; safe to use it                    
                </comment>
                <declaration name="argTypeNames" type="List&lt;String&gt;" line="334"/>
                <scope line="335">
                    <scope line="337"/>
                </scope>
                <declaration name="firstMatch" type="Method" line="344"/>
                <declaration name="exactMatch" type="Method" line="345"/>
                <declaration name="matchCount" type="int" line="346"/>
                <scope line="347">
                    <scope line="348">
                        <scope line="352"/>
                        <scope line="358"/>
                    </scope>
                </scope>
                <declaration name="method" type="Method" line="366"/>
                <scope line="367"/>
                <scope line="370">
                    <scope line="372"/>
                    <scope line="374"/>
                </scope>
                <scope line="377"/>
            </method>
        </class>
    </source>