<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.hat.internal.model">
        <import package="com.sun.tools.hat.internal.parser.ReadBuffer"/>
        <import package="java.io.IOException"/>
        <class name="JavaValueArray" line="38">
            <extends class="JavaLazyReadObject"/>
            <comment line="45">
                                
            </comment>
            <comment line="89">
                Java primitive array record (HPROF_GC_PRIM_ARRAY_DUMP) looks
                 as below:
                
                    object ID
                    stack trace serial number (int)
                    length of the instance data (int)
                    element type (byte)
                    array data                
            </comment>
            <comment line="130">
                JavaClass set only after resolve.                
            </comment>
            <comment line="133">
                This field contains elementSignature byte and
                 divider to be used to calculate length. Note that
                 length of content byte[] is not same as array length.
                 Actual array length is (byte[].length / divider)                
            </comment>
            <comment line="139">
                First 8 bits of data is used for element signature                
            </comment>
            <comment line="142">
                Next 8 bits of data is used for length divider                
            </comment>
            <comment line="145">
                Number of bits to shift to get length divider                
            </comment>
            <implements interface="ArrayTypeCodes"/>
            <javadoc line="38">
                An array of values, that is, an array of ints, boolean, floats or the like.                
                <author>
                    Bill Foote                    
                </author>
            </javadoc>
            <method name="arrayTypeName" type="String" line="46">
                <params>
                    <param name="sig" type="byte"/>
                </params>
            </method>
            <method name="elementSize" type="int" line="69">
                <params>
                    <param name="type" type="byte"/>
                </params>
            </method>
            <method name="readValueLength" type="int" line="98">
                <comment line="104">
                    length of the array                    
                </comment>
                <comment line="106">
                    typecode of array element type                    
                </comment>
                <declaration name="cl" type="JavaClass" line="99"/>
                <declaration name="buf" type="ReadBuffer" line="100"/>
                <declaration name="idSize" type="int" line="101"/>
                <declaration name="offset" type="long" line="102"/>
                <declaration name="len" type="int" line="104"/>
                <declaration name="type" type="byte" line="106"/>
            </method>
            <method name="readValue" type="byte[]" line="110">
                <comment line="116">
                    length of the array                    
                </comment>
                <comment line="118">
                    typecode of array element type                    
                </comment>
                <declaration name="cl" type="JavaClass" line="111"/>
                <declaration name="buf" type="ReadBuffer" line="112"/>
                <declaration name="idSize" type="int" line="113"/>
                <declaration name="offset" type="long" line="114"/>
                <declaration name="length" type="int" line="116"/>
                <declaration name="type" type="byte" line="118"/>
                <scope line="119"/>
                <scope line="121">
                    <declaration name="res" type="byte[]" line="123"/>
                </scope>
            </method>
            <declaration name="clazz" type="JavaClass" line="130"/>
            <declaration name="data" type="int" line="136"/>
            <declaration name="SIGNATURE_MASK" type="int" line="139"/>
            <declaration name="LENGTH_DIVIDER_MASK" type="int" line="142"/>
            <declaration name="LENGTH_DIVIDER_SHIFT" type="int" line="145"/>
            <method name="JavaValueArray" type="constructor" line="147">
                <params>
                    <param name="elementSignature" type="byte"/>
                    <param name="offset" type="long"/>
                </params>
            </method>
            <method name="getClazz" type="JavaClass" line="152"/>
            <method name="visitReferencedObjects" type="void" line="156">
                <params>
                    <param name="v" type="JavaHeapObjectVisitor"/>
                </params>
            </method>
            <method name="resolve" type="void" line="160">
                <params>
                    <param name="snapshot" type="Snapshot"/>
                </params>
                <scope line="161"/>
                <declaration name="elementSig" type="byte" line="164"/>
                <scope line="166"/>
            </method>
            <method name="getLength" type="int" line="173">
                <declaration name="divider" type="int" line="174"/>
                <scope line="175">
                    <declaration name="elementSignature" type="byte" line="176"/>
                </scope>
            </method>
            <method name="getElements" type="Object" line="203">
                <declaration name="len" type="int" line="204"/>
                <declaration name="et" type="byte" line="205"/>
                <declaration name="data" type="byte[]" line="206"/>
                <declaration name="index" type="int" line="207"/>
                <scope line="209">
                    <declaration name="res" type="boolean[]" line="210"/>
                    <scope line="211"/>
                </scope>
                <scope line="217">
                    <declaration name="res" type="byte[]" line="218"/>
                    <scope line="219"/>
                </scope>
                <scope line="225">
                    <declaration name="res" type="char[]" line="226"/>
                    <scope line="227"/>
                </scope>
                <scope line="233">
                    <declaration name="res" type="short[]" line="234"/>
                    <scope line="235"/>
                </scope>
                <scope line="241">
                    <declaration name="res" type="int[]" line="242"/>
                    <scope line="243"/>
                </scope>
                <scope line="249">
                    <declaration name="res" type="long[]" line="250"/>
                    <scope line="251"/>
                </scope>
                <scope line="257">
                    <declaration name="res" type="float[]" line="258"/>
                    <scope line="259"/>
                </scope>
                <scope line="265">
                    <declaration name="res" type="double[]" line="266"/>
                    <scope line="267"/>
                </scope>
                <scope line="273"/>
            </method>
            <method name="getElementType" type="byte" line="279"/>
            <method name="checkIndex" type="void" line="283">
                <params>
                    <param name="index" type="int"/>
                </params>
                <scope line="284"/>
            </method>
            <method name="requireType" type="void" line="289">
                <params>
                    <param name="type" type="char"/>
                </params>
                <scope line="290"/>
            </method>
            <method name="getBooleanAt" type="boolean" line="295">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="getByteAt" type="byte" line="301">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="getCharAt" type="char" line="307">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="getShortAt" type="short" line="313">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="getIntAt" type="int" line="319">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="getLongAt" type="long" line="325">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="getFloatAt" type="float" line="331">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="getDoubleAt" type="double" line="337">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="valueString" type="String" line="343"/>
            <method name="valueString" type="String" line="347">
                <params>
                    <param name="bigLimit" type="boolean"/>
                </params>
                <comment line="349">
                    Char arrays deserve special treatment                    
                </comment>
                <comment line="406">
                    long                    
                </comment>
                <comment line="418">
                    double                    
                </comment>
                <declaration name="result" type="StringBuffer" line="349"/>
                <declaration name="value" type="byte[]" line="350"/>
                <declaration name="max" type="int" line="351"/>
                <declaration name="elementSignature" type="byte" line="352"/>
                <scope line="353">
                    <scope line="355">
                        <declaration name="val" type="char" line="356"/>
                    </scope>
                </scope>
                <scope line="360">
                    <declaration name="limit" type="int" line="361"/>
                    <scope line="362"/>
                    <declaration name="num" type="int" line="366"/>
                    <scope line="367">
                        <scope line="368"/>
                        <scope line="371"/>
                        <scope line="377">
                            <declaration name="val" type="boolean" line="378"/>
                            <scope line="379"/>
                            <scope line="381"/>
                        </scope>
                        <scope line="387">
                            <declaration name="val" type="int" line="388"/>
                        </scope>
                        <scope line="393">
                            <declaration name="val" type="short" line="394"/>
                        </scope>
                        <scope line="399">
                            <declaration name="val" type="int" line="400"/>
                        </scope>
                        <scope line="405">
                            <declaration name="val" type="long" line="406"/>
                        </scope>
                        <scope line="411">
                            <declaration name="val" type="float" line="412"/>
                        </scope>
                        <scope line="417">
                            <declaration name="val" type="double" line="418"/>
                        </scope>
                        <scope line="423"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>