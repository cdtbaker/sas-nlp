<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.tty">
        <import package="com.sun.jdi.ThreadReference"/>
        <import package="com.sun.jdi.ThreadGroupReference"/>
        <import package="com.sun.jdi.IncompatibleThreadStateException"/>
        <import package="com.sun.jdi.StackFrame"/>
        <import package="java.util.List"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collections"/>
        <class name="ThreadInfo" line="9">
            <declaration name="threads" type="List&lt;ThreadInfo&gt;" line="10"/>
            <declaration name="gotInitialThreads" type="boolean" line="11"/>
            <declaration name="current" type="ThreadInfo" line="12"/>
            <declaration name="group" type="ThreadGroupReference" line="13"/>
            <declaration name="thread" type="ThreadReference" line="14"/>
            <declaration name="currentFrameIndex" type="int" line="15"/>
            <method name="ThreadInfo" type="constructor" line="16">
                <params>
                    <param name="thread" type="ThreadReference"/>
                </params>
                <scope line="18"/>
            </method>
            <method name="initThreads" type="void" line="22">
                <scope line="23">
                    <scope line="24"/>
                </scope>
            </method>
            <method name="addThread" type="void" line="30">
                <params>
                    <param name="thread" type="ThreadReference"/>
                </params>
                <scope line="31">
                    <declaration name="ti" type="ThreadInfo" line="33"/>
                    <scope line="34"/>
                </scope>
            </method>
            <method name="removeThread" type="void" line="39">
                <params>
                    <param name="thread" type="ThreadReference"/>
                </params>
                <scope line="40">
                    <declaration name="currentThreadName" type="String" line="41"/>
                    <scope line="42"/>
                    <scope line="45"/>
                </scope>
            </method>
            <method name="threads" type="List<ThreadInfo>" line="54">
                <scope line="55"/>
            </method>
            <method name="invalidateAll" type="void" line="60">
                <scope line="63">
                    <scope line="64"/>
                </scope>
            </method>
            <method name="setThreadGroup" type="void" line="69">
                <params>
                    <param name="tg" type="ThreadGroupReference"/>
                </params>
            </method>
            <method name="setCurrentThread" type="void" line="72">
                <params>
                    <param name="tr" type="ThreadReference"/>
                </params>
                <scope line="73"/>
                <scope line="76">
                    <declaration name="tinfo" type="ThreadInfo" line="77"/>
                </scope>
            </method>
            <method name="setCurrentThreadInfo" type="void" line="81">
                <params>
                    <param name="tinfo" type="ThreadInfo"/>
                </params>
                <scope line="83"/>
            </method>
            <javadoc line="87">
                Get the current ThreadInfo object.                
                <return>
                    the ThreadInfo for the current thread.                    
                </return>
            </javadoc>
            <method name="getCurrentThreadInfo" type="ThreadInfo" line="91"/>
            <javadoc line="94">
                Get the thread from this ThreadInfo object.                
                <return>
                    the Thread wrapped by this ThreadInfo.                    
                </return>
            </javadoc>
            <method name="getThread" type="ThreadReference" line="98"/>
            <method name="group" type="ThreadGroupReference" line="101">
                <scope line="102"/>
            </method>
            <method name="getThreadInfo" type="ThreadInfo" line="107">
                <params>
                    <param name="id" type="long"/>
                </params>
                <declaration name="retInfo" type="ThreadInfo" line="108"/>
                <scope line="109">
                    <scope line="110">
                        <scope line="111"/>
                    </scope>
                </scope>
            </method>
            <method name="getThreadInfo" type="ThreadInfo" line="119">
                <params>
                    <param name="tr" type="ThreadReference"/>
                </params>
            </method>
            <method name="getThreadInfo" type="ThreadInfo" line="122">
                <params>
                    <param name="idToken" type="String"/>
                </params>
                <declaration name="tinfo" type="ThreadInfo" line="123"/>
                <scope line="124"/>
                <scope line="127">
                    <declaration name="threadId" type="long" line="128"/>
                </scope>
                <scope line="131"/>
            </method>
            <javadoc line="136">
                Get the thread stack frames.                
                <return>
                    a <code>List</code> of the stack frames.                    
                </return>
            </javadoc>
            <method name="getStack" type="List<StackFrame>" line="140"/>
            <javadoc line="143">
                Get the current stackframe.                
                <return>
                    the current stackframe.                    
                </return>
            </javadoc>
            <method name="getCurrentFrame" type="StackFrame" line="147">
                <scope line="148"/>
            </method>
            <javadoc line="153">
                Invalidate the current stackframe index.                
            </javadoc>
            <method name="invalidate" type="void" line="156"/>
            <method name="assureSuspended" type="void" line="159">
                <scope line="160"/>
            </method>
            <javadoc line="164">
                Get the current stackframe index.                
                <return>
                    the number of the current stackframe.  Frame zero is the
                      closest to the current program counter                    
                </return>
            </javadoc>
            <method name="getCurrentFrameIndex" type="int" line="169"/>
            <javadoc line="172">
                Set the current stackframe to a specific frame.                
                <param>
                    nFrame    the number of the desired stackframe.  Frame zero is the
                      closest to the current program counter                    
                </param>
                <exception>
                    IllegalAccessError when the thread isn't
                      suspended or waiting at a breakpoint                    
                </exception>
                <exception>
                    ArrayIndexOutOfBoundsException when the
                      requested frame is beyond the stack boundary                    
                </exception>
            </javadoc>
            <method name="setCurrentFrameIndex" type="void" line="181">
                <params>
                    <param name="nFrame" type="int"/>
                </params>
                <scope line="183"/>
            </method>
            <javadoc line="188">
                Change the current stackframe to be one or more frames higher
                  (as in, away from the current program counter).                
                <param>
                    nFrames   the number of stackframes                    
                </param>
                <exception>
                    IllegalAccessError when the thread isn't
                      suspended or waiting at a breakpoint                    
                </exception>
                <exception>
                    ArrayIndexOutOfBoundsException when the
                      requested frame is beyond the stack boundary                    
                </exception>
            </javadoc>
            <method name="up" type="void" line="197">
                <params>
                    <param name="nFrames" type="int"/>
                </params>
            </method>
            <javadoc line="200">
                Change the current stackframe to be one or more frames lower
                  (as in, toward the current program counter).                
                <param>
                    nFrames   the number of stackframes                    
                </param>
                <exception>
                    IllegalAccessError when the thread isn't
                      suspended or waiting at a breakpoint                    
                </exception>
                <exception>
                    ArrayIndexOutOfBoundsException when the
                      requested frame is beyond the stack boundary                    
                </exception>
            </javadoc>
            <method name="down" type="void" line="209">
                <params>
                    <param name="nFrames" type="int"/>
                </params>
            </method>
        </class>
    </source>