<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.jdi">
        <import package="com.sun.jdi"/>
        <import package="java.util.List"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Map"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.Collections"/>
        <import package="java.lang.ref.SoftReference"/>
        <class name="InterfaceTypeImpl" line="37">
            <extends class="ReferenceTypeImpl"/>
            <implements interface="InterfaceType"/>
            <declaration name="superinterfacesRef" type="SoftReference&lt;List&lt;InterfaceType&gt;&gt;" line="40"/>
            <method name="InterfaceTypeImpl" type="constructor" line="42">
                <params>
                    <param name="aVm" type="VirtualMachine"/>
                    <param name="aRef" type="long"/>
                </params>
            </method>
            <method name="superinterfaces" type="List<InterfaceType>" line="46">
                <declaration name="superinterfaces" type="List&lt;InterfaceType&gt;" line="47"/>
                <scope line="49"/>
            </method>
            <method name="subinterfaces" type="List<InterfaceType>" line="57">
                <declaration name="subs" type="List&lt;InterfaceType&gt;" line="58"/>
                <scope line="59">
                    <scope line="60">
                        <declaration name="interfaze" type="InterfaceType" line="61"/>
                        <scope line="62"/>
                    </scope>
                </scope>
            </method>
            <method name="implementors" type="List<ClassType>" line="70">
                <declaration name="implementors" type="List&lt;ClassType&gt;" line="71"/>
                <scope line="72">
                    <scope line="73">
                        <declaration name="clazz" type="ClassType" line="74"/>
                        <scope line="75"/>
                    </scope>
                </scope>
            </method>
            <method name="addVisibleMethods" type="void" line="83">
                <params>
                    <param name="methodMap" type="Map<String,Method>"/>
                </params>
                <comment line="85">
                    Add methods from
                     parent types first, so that the methods in this class will
                     overwrite them in the hash table                    
                </comment>
                <scope line="90"/>
            </method>
            <method name="allMethods" type="List<Method>" line="97">
                <comment line="101">
                    It&apos;s more efficient if don&apos;t do this
                     recursively.                    
                </comment>
                <declaration name="list" type="ArrayList&lt;Method&gt;" line="98"/>
                <scope line="104"/>
            </method>
            <method name="allSuperinterfaces" type="List<InterfaceType>" line="111">
                <declaration name="list" type="ArrayList&lt;InterfaceType&gt;" line="112"/>
            </method>
            <method name="addSuperinterfaces" type="void" line="117">
                <params>
                    <param name="list" type="List<InterfaceType>"/>
                </params>
                <comment line="119">
                    This code is a little strange because it
                     builds the list with a more suitable order than the
                     depth-first approach a normal recursive solution would
                     take. Instead, all direct superinterfaces precede all
                     indirect ones.                    
                </comment>
                <comment line="127">
                    Get a list of direct superinterfaces that&apos;s not already in the
                     list being built.                    
                </comment>
                <comment line="140">
                    Add all new direct superinterfaces                    
                </comment>
                <comment line="145">
                    Recurse for all new direct superinterfaces.                    
                </comment>
                <declaration name="immediate" type="List&lt;InterfaceType&gt;" line="130"/>
                <declaration name="iter" type="Iterator" line="131"/>
                <scope line="132">
                    <declaration name="interfaze" type="InterfaceType" line="133"/>
                    <scope line="134"/>
                </scope>
                <scope line="148">
                    <declaration name="interfaze" type="InterfaceTypeImpl" line="149"/>
                </scope>
            </method>
            <method name="isAssignableTo" type="boolean" line="154">
                <params>
                    <param name="type" type="ReferenceType"/>
                </params>
                <comment line="157">
                    Exact match?                    
                </comment>
                <comment line="161">
                    Try superinterfaces.                    
                </comment>
                <scope line="157"/>
                <scope line="159">
                    <scope line="161">
                        <scope line="162"/>
                    </scope>
                </scope>
            </method>
            <method name="inheritedTypes" type="List<InterfaceType>" line="171"/>
            <method name="isInitialized" type="boolean" line="175"/>
            <method name="toString" type="String" line="179"/>
        </class>
    </source>