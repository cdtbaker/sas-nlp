<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.tty">
        <import package="java.util"/>
        <import package="java.text.MessageFormat"/>
        <class name="MessageOutput" line="29">
            <javadoc line="29">
                Internationalization (i18n) convenience methods for jdb.
                  All program output should flow through these methods, and this is
                  the only class that should be printing directly or otherwise
                  accessing System.[out,err].                
                <bug>
                    4348376                    
                </bug>
                <author>
                    Tim Bell                    
                </author>
            </javadoc>
            <declaration name="textResources" type="ResourceBundle" line="40"/>
            <javadoc line="40">
                The resource bundle containing localizable message content.
                  This is loaded by TTY.main() at start-up                
            </javadoc>
            <declaration name="messageFormat" type="MessageFormat" line="46"/>
            <javadoc line="46">
                Our message formatter.  Allocated once, used many times                
            </javadoc>
            <javadoc line="49">
                Fatal shutdown notification.  This is sent to System.err
                  instead of System.out                
            </javadoc>
            <method name="fatalError" type="void" line="53">
                <params>
                    <param name="messageKey" type="String"/>
                </params>
            </method>
            <javadoc line="60">
                &quot;Format&quot; a string by doing a simple key lookup.                
            </javadoc>
            <method name="format" type="String" line="63">
                <params>
                    <param name="key" type="String"/>
                </params>
            </method>
            <javadoc line="67">
                Fetch and format a message with one string argument.
                  This is the most common usage.                
            </javadoc>
            <method name="format" type="String" line="71">
                <params>
                    <param name="key" type="String"/>
                    <param name="argument" type="String"/>
                </params>
            </method>
            <javadoc line="75">
                Fetch a string by key lookup and format in the arguments.                
            </javadoc>
            <method name="format" type="String" line="78">
                <params>
                    <param name="key" type="String"/>
                    <param name="arguments" type="Object[]"/>
                </params>
                <scope line="79"/>
                <scope line="81"/>
            </method>
            <javadoc line="87">
                Print directly to System.out.
                  Every rule has a few exceptions.
                  The exceptions to &quot;must use the MessageOutput formatters&quot; are:
                  VMConnection.dumpStream()
                  TTY.monitorCommand()
                  TTY.TTY() (for the &apos;!!&apos; command only)
                  Commands.java (multiple locations)
                  These are the only sites that should be calling this
                  method.                
            </javadoc>
            <method name="printDirectln" type="void" line="98">
                <params>
                    <param name="line" type="String"/>
                </params>
            </method>
            <method name="printDirect" type="void" line="101">
                <params>
                    <param name="line" type="String"/>
                </params>
            </method>
            <method name="printDirect" type="void" line="104">
                <params>
                    <param name="c" type="char"/>
                </params>
            </method>
            <javadoc line="108">
                Print a newline.
                  Use this instead of &apos;\n&apos;                
            </javadoc>
            <method name="println" type="void" line="112"/>
            <javadoc line="116">
                Format and print a simple string.                
            </javadoc>
            <method name="print" type="void" line="119">
                <params>
                    <param name="key" type="String"/>
                </params>
            </method>
            <javadoc line="122">
                Format and print a simple string.                
            </javadoc>
            <method name="println" type="void" line="125">
                <params>
                    <param name="key" type="String"/>
                </params>
            </method>
            <javadoc line="130">
                Fetch, format and print a message with one string argument.
                  This is the most common usage.                
            </javadoc>
            <method name="print" type="void" line="134">
                <params>
                    <param name="key" type="String"/>
                    <param name="argument" type="String"/>
                </params>
            </method>
            <method name="println" type="void" line="137">
                <params>
                    <param name="key" type="String"/>
                    <param name="argument" type="String"/>
                </params>
            </method>
            <javadoc line="141">
                Fetch, format and print a message with an arbitrary
                  number of message arguments.                
            </javadoc>
            <method name="println" type="void" line="145">
                <params>
                    <param name="key" type="String"/>
                    <param name="arguments" type="Object[]"/>
                </params>
            </method>
            <javadoc line="149">
                Print a newline, followed by the string.                
            </javadoc>
            <method name="lnprint" type="void" line="152">
                <params>
                    <param name="key" type="String"/>
                </params>
            </method>
            <method name="lnprint" type="void" line="157">
                <params>
                    <param name="key" type="String"/>
                    <param name="argument" type="String"/>
                </params>
            </method>
            <method name="lnprint" type="void" line="162">
                <params>
                    <param name="key" type="String"/>
                    <param name="arguments" type="Object[]"/>
                </params>
            </method>
            <javadoc line="167">
                Print an exception message with a stack trace.                
            </javadoc>
            <method name="printException" type="void" line="170">
                <params>
                    <param name="key" type="String"/>
                    <param name="e" type="Exception"/>
                </params>
                <scope line="171">
                    <scope line="172"/>
                    <scope line="174"/>
                </scope>
            </method>
            <method name="printPrompt" type="void" line="182">
                <declaration name="threadInfo" type="ThreadInfo" line="183"/>
                <scope line="184"/>
                <scope line="187"/>
            </method>
        </class>
    </source>