<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.event">
        <import package="com.sun.jdi"/>
        <import package="com.sun.jdi.event"/>
        <import package="com.sun.jdi.request"/>
        <import package="java.util"/>
        <class name="AbstractEventSet" line="6">
            <extends class="EventObject"/>
            <implements interface="EventSet"/>
            <declaration name="serialVersionUID" type="long" line="7"/>
            <declaration name="jdiEventSet" type="EventSet" line="8"/>
            <declaration name="oneEvent" type="Event" line="9"/>
            <javadoc line="10">
                                
            </javadoc>
            <method name="AbstractEventSet" type="constructor" line="12">
                <params>
                    <param name="jdiEventSet" type="EventSet"/>
                </params>
            </method>
            <method name="toSpecificEventSet" type="AbstractEventSet" line="17">
                <params>
                    <param name="jdiEventSet" type="EventSet"/>
                </params>
                <declaration name="evt" type="Event" line="18"/>
                <scope line="19">
                    <scope line="20"/>
                    <scope line="23">
                        <scope line="24"/>
                        <scope line="27"/>
                    </scope>
                    <scope line="31"/>
                </scope>
                <scope line="35"/>
                <scope line="38"/>
                <scope line="41"/>
                <scope line="44"/>
                <scope line="47"/>
                <scope line="50"/>
                <scope line="53"/>
                <scope line="56"/>
            </method>
            <method name="notify" type="void" line="60"/>
            <method name="virtualMachine" type="VirtualMachine" line="61"/>
            <method name="getVirtualMachine" type="VirtualMachine" line="64"/>
            <javadoc line="67">
                Returns the policy used to suspend threads in the target VM
                  for this event set. This policy is selected from the suspend
                  policies for each event&apos;s request. The one that suspends the
                  most threads is chosen when the event occurs in the target VM
                  and that policy is returned here. See
                  com.sun.jdi.request.EventRequest for the possible policy values.                
                <return>
                    the integer suspendPolicy                    
                </return>
            </javadoc>
            <method name="getSuspendPolicy" type="int" line="76"/>
            <method name="resume" type="void" line="79"/>
            <method name="suspendPolicy" type="int" line="82"/>
            <method name="suspendedAll" type="boolean" line="85"/>
            <method name="suspendedEventThread" type="boolean" line="88"/>
            <method name="suspendedNone" type="boolean" line="91"/>
            <javadoc line="94">
                Return an iterator specific to {@link Event} objects.                
            </javadoc>
            <method name="eventIterator" type="EventIterator" line="97"/>
            <javadoc line="100">
                Returns the number of elements in this set (its cardinality).  If this
                  set contains more than &lt;tt&gt;Integer.MAX_VALUE&lt;/tt&gt; elements, returns
                  &lt;tt&gt;Integer.MAX_VALUE&lt;/tt&gt;.                
                <return>
                    the number of elements in this set (its cardinality).                    
                </return>
            </javadoc>
            <method name="size" type="int" line="106"/>
            <javadoc line="109">
                Returns &lt;tt&gt;true&lt;/tt&gt; if this set contains no elements.                
                <return>
                    &lt;tt&gt;true&lt;/tt&gt; if this set contains no elements.                    
                </return>
            </javadoc>
            <method name="isEmpty" type="boolean" line="113"/>
            <javadoc line="116">
                Returns &lt;tt&gt;true&lt;/tt&gt; if this set contains the specified element.  More
                  formally, returns &lt;tt&gt;true&lt;/tt&gt; if and only if this set contains an
                  element &lt;code&gt;e&lt;/code&gt; such that &lt;code&gt;(o==null ? e==null :
                  o.equals(e))&lt;/code&gt;.                
                <return>
                    &lt;tt&gt;true&lt;/tt&gt; if this set contains the specified element.                    
                </return>
            </javadoc>
            <method name="contains" type="boolean" line="123">
                <params>
                    <param name="o" type="Object"/>
                </params>
            </method>
            <javadoc line="126">
                Returns an iterator over the elements in this set.  The elements are
                  returned in no particular order (unless this set is an instance of some
                  class that provides a guarantee).                
                <return>
                    an iterator over the elements in this set.                    
                </return>
            </javadoc>
            <method name="iterator" type="Iterator&lt;Event&gt;" line="132"/>
            <javadoc line="135">
                Returns an array containing all of the elements in this set.
                  Obeys the general contract of the &lt;tt&gt;Collection.toArray&lt;/tt&gt; method.                
                <return>
                    an array containing all of the elements in this set.                    
                </return>
            </javadoc>
            <method name="toArray" type="Object[]" line="140"/>
            <javadoc line="143">
                Returns an array containing all of the elements in this set whose
                  runtime type is that of the specified array.  Obeys the general
                  contract of the &lt;tt&gt;Collection.toArray(Object[])&lt;/tt&gt; method.                
                <param>
                    a the array into which the elements of this set are to
                      be stored, if it is big enough {
                      return jdiEventSet.XXX();
                      } otherwise, a new array of the
                      same runtime type is allocated for this purpose.                    
                </param>
                <return>
                    an array containing the elements of this set.                    
                </return>
                <throws>
                    ArrayStoreException the runtime type of a is not a supertype
                      of the runtime type of every element in this set.                    
                </throws>
            </javadoc>
            <method name="toArray" type="T[]" line="156">
                <params>
                    <param name="a" type="T"/>
                </params>
            </method>
            <javadoc line="159">
                Returns &lt;tt&gt;true&lt;/tt&gt; if this set contains all of the elements of the
                  specified collection.  If the specified collection is also a set, this
                  method returns &lt;tt&gt;true&lt;/tt&gt; if it is a &lt;i&gt;subset&lt;/i&gt; of this set.                
                <param>
                    c collection to be checked for containment in this set.                    
                </param>
                <return>
                    &lt;tt&gt;true&lt;/tt&gt; if this set contains all of the elements of the
                      specified collection.                    
                </return>
            </javadoc>
            <method name="containsAll" type="boolean" line="167">
                <params>
                    <param name="c" type="Collection&lt;?&gt;"/>
                </params>
            </method>
            <method name="add" type="boolean" line="170">
                <params>
                    <param name="e" type="Event"/>
                </params>
            </method>
            <method name="remove" type="boolean" line="173">
                <params>
                    <param name="o" type="Object"/>
                </params>
            </method>
            <method name="addAll" type="boolean" line="176">
                <params>
                    <param name="coll" type="Collection&lt;? extends Event&gt;"/>
                </params>
            </method>
            <method name="removeAll" type="boolean" line="179">
                <params>
                    <param name="coll" type="Collection&lt;?&gt;"/>
                </params>
            </method>
            <method name="retainAll" type="boolean" line="182">
                <params>
                    <param name="coll" type="Collection&lt;?&gt;"/>
                </params>
            </method>
            <method name="clear" type="void" line="185"/>
        </class>
    </source>