<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.jdi">
        <import package="com.sun.jdi"/>
        <import package="java.util"/>
        <import package="java.lang.ref.SoftReference"/>
        <class name="ReferenceTypeImpl" line="5">
            <extends class="TypeImpl"/>
            <implements interface="ReferenceType"/>
            <declaration name="ref" type="long" line="6"/>
            <declaration name="signature" type="String" line="7"/>
            <declaration name="genericSignature" type="String" line="8"/>
            <declaration name="genericSignatureGotten" type="boolean" line="9"/>
            <declaration name="baseSourceName" type="String" line="10"/>
            <declaration name="baseSourceDir" type="String" line="11"/>
            <declaration name="baseSourcePath" type="String" line="12"/>
            <declaration name="modifiers" type="int" line="13"/>
            <declaration name="fieldsRef" type="SoftReference&lt;List&lt;Field&gt;&gt;" line="14"/>
            <declaration name="methodsRef" type="SoftReference&lt;List&lt;Method&gt;&gt;" line="15"/>
            <declaration name="sdeRef" type="SoftReference&lt;SDE&gt;" line="16"/>
            <declaration name="isClassLoaderCached" type="boolean" line="17"/>
            <declaration name="classLoader" type="ClassLoaderReference" line="18"/>
            <declaration name="classObject" type="ClassObjectReference" line="19"/>
            <declaration name="status" type="int" line="20"/>
            <declaration name="isPrepared" type="boolean" line="21"/>
            <declaration name="versionNumberGotten" type="boolean" line="22"/>
            <declaration name="majorVersion" type="int" line="23"/>
            <declaration name="minorVersion" type="int" line="24"/>
            <declaration name="constantPoolInfoGotten" type="boolean" line="25"/>
            <declaration name="constanPoolCount" type="int" line="26"/>
            <declaration name="constantPoolBytes" type="byte[]" line="27"/>
            <declaration name="constantPoolBytesRef" type="SoftReference&lt;byte[]&gt;" line="28"/>
            <declaration name="ABSENT_BASE_SOURCE_NAME" type="String" line="29"/>
            <declaration name="NO_SDE_INFO_MARK" type="SDE" line="30"/>
            <declaration name="INITIALIZED_OR_FAILED" type="int" line="31"/>
            <method name="ReferenceTypeImpl" type="constructor" line="32">
                <params>
                    <param name="aVm" type="VirtualMachine"/>
                    <param name="aRef" type="long"/>
                </params>
            </method>
            <method name="noticeRedefineClass" type="void" line="37"/>
            <method name="getMethodMirror" type="Method" line="47">
                <params>
                    <param name="ref" type="long"/>
                </params>
                <scope line="48"/>
                <declaration name="it" type="Iterator" line="51"/>
                <scope line="52">
                    <declaration name="method" type="MethodImpl" line="53"/>
                    <scope line="54"/>
                </scope>
            </method>
            <method name="getFieldMirror" type="Field" line="60">
                <params>
                    <param name="ref" type="long"/>
                </params>
                <declaration name="it" type="Iterator" line="61"/>
                <scope line="62">
                    <declaration name="field" type="FieldImpl" line="63"/>
                    <scope line="64"/>
                </scope>
            </method>
            <method name="equals" type="boolean" line="70">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="71">
                    <declaration name="other" type="ReferenceTypeImpl" line="72"/>
                </scope>
                <scope line="75"/>
            </method>
            <method name="hashCode" type="int" line="79"/>
            <method name="compareTo" type="int" line="82">
                <params>
                    <param name="object" type="ReferenceType"/>
                </params>
                <declaration name="other" type="ReferenceTypeImpl" line="83"/>
                <declaration name="comp" type="int" line="84"/>
                <scope line="85">
                    <declaration name="rf1" type="long" line="86"/>
                    <declaration name="rf2" type="long" line="87"/>
                    <scope line="88"/>
                    <scope line="91"/>
                </scope>
            </method>
            <method name="signature" type="String" line="97">
                <scope line="98">
                    <scope line="99"/>
                    <scope line="102">
                        <scope line="103"/>
                        <scope line="106"/>
                    </scope>
                </scope>
            </method>
            <method name="genericSignature" type="String" line="113">
                <scope line="114">
                    <declaration name="result" type="JDWP.ReferenceType.SignatureWithGeneric" line="115"/>
                    <scope line="116"/>
                    <scope line="119"/>
                </scope>
            </method>
            <method name="classLoader" type="ClassLoaderReference" line="127">
                <scope line="128">
                    <scope line="129"/>
                    <scope line="133"/>
                </scope>
            </method>
            <method name="isPublic" type="boolean" line="139"/>
            <method name="isProtected" type="boolean" line="143"/>
            <method name="isPrivate" type="boolean" line="147"/>
            <method name="isPackagePrivate" type="boolean" line="151"/>
            <method name="isAbstract" type="boolean" line="154"/>
            <method name="isFinal" type="boolean" line="158"/>
            <method name="isStatic" type="boolean" line="162"/>
            <method name="isPrepared" type="boolean" line="166">
                <scope line="167"/>
            </method>
            <method name="isVerified" type="boolean" line="172">
                <scope line="173"/>
            </method>
            <method name="isInitialized" type="boolean" line="178">
                <scope line="179"/>
            </method>
            <method name="failedToInitialize" type="boolean" line="184">
                <scope line="185"/>
            </method>
            <method name="fields" type="List<Field>" line="190">
                <declaration name="fields" type="List&lt;Field&gt;" line="191"/>
                <scope line="192">
                    <scope line="193">
                        <declaration name="jdwpFields" type="JDWP.ReferenceType.FieldsWithGeneric.FieldInfo[]" line="194"/>
                        <scope line="195"/>
                        <scope line="198"/>
                        <scope line="202">
                            <declaration name="fi" type="JDWP.ReferenceType.FieldsWithGeneric.FieldInfo" line="203"/>
                            <declaration name="field" type="Field" line="204"/>
                        </scope>
                    </scope>
                    <scope line="208">
                        <declaration name="jdwpFields" type="JDWP.ReferenceType.Fields.FieldInfo[]" line="209"/>
                        <scope line="210"/>
                        <scope line="213"/>
                        <scope line="217">
                            <declaration name="fi" type="JDWP.ReferenceType.Fields.FieldInfo" line="218"/>
                            <declaration name="field" type="Field" line="219"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="inheritedTypes" type="List<? extends ReferenceType>" line="228"/>
            <method name="addVisibleFields" type="void" line="229">
                <params>
                    <param name="visibleList" type="List<Field>"/>
                    <param name="visibleTable" type="Map<String,Field>"/>
                    <param name="ambiguousNames" type="List<String>"/>
                </params>
                <scope line="230">
                    <declaration name="name" type="String" line="231"/>
                    <scope line="232">
                        <declaration name="duplicate" type="Field" line="233"/>
                        <scope line="234"/>
                        <scope line="238"/>
                        <scope line="243"/>
                    </scope>
                </scope>
            </method>
            <method name="visibleFields" type="List<Field>" line="248">
                <declaration name="visibleList" type="List&lt;Field&gt;" line="249"/>
                <declaration name="visibleTable" type="Map&lt;String,Field&gt;" line="250"/>
                <declaration name="ambiguousNames" type="List&lt;String&gt;" line="251"/>
                <declaration name="types" type="List&lt;? extends ReferenceType&gt;" line="252"/>
                <declaration name="iter" type="Iterator" line="253"/>
                <scope line="254">
                    <declaration name="type" type="ReferenceTypeImpl" line="255"/>
                </scope>
                <declaration name="retList" type="List&lt;Field&gt;" line="258"/>
                <scope line="259">
                    <declaration name="hidden" type="Field" line="260"/>
                    <scope line="261"/>
                </scope>
            </method>
            <method name="addAllFields" type="void" line="268">
                <params>
                    <param name="fieldList" type="List<Field>"/>
                    <param name="typeSet" type="Set<ReferenceType>"/>
                </params>
                <scope line="269">
                    <declaration name="types" type="List&lt;? extends ReferenceType&gt;" line="272"/>
                    <declaration name="iter" type="Iterator" line="273"/>
                    <scope line="274">
                        <declaration name="type" type="ReferenceTypeImpl" line="275"/>
                    </scope>
                </scope>
            </method>
            <method name="allFields" type="List<Field>" line="280">
                <declaration name="fieldList" type="List&lt;Field&gt;" line="281"/>
                <declaration name="typeSet" type="Set&lt;ReferenceType&gt;" line="282"/>
            </method>
            <method name="fieldByName" type="Field" line="286">
                <params>
                    <param name="fieldName" type="String"/>
                </params>
                <declaration name="searchList" type="java.util.List" line="287"/>
                <declaration name="f" type="Field" line="288"/>
                <scope line="290">
                    <scope line="292"/>
                </scope>
            </method>
            <method name="methods" type="List<Method>" line="298">
                <declaration name="methods" type="List&lt;Method&gt;" line="299"/>
                <scope line="300">
                    <scope line="301"/>
                    <scope line="304">
                        <declaration name="declared" type="JDWP.ReferenceType.MethodsWithGeneric.MethodInfo[]" line="305"/>
                        <scope line="306"/>
                        <scope line="309"/>
                        <scope line="313">
                            <declaration name="mi" type="JDWP.ReferenceType.MethodsWithGeneric.MethodInfo" line="314"/>
                            <declaration name="method" type="Method" line="315"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="methods1_4" type="List<Method>" line="324">
                <declaration name="methods" type="List&lt;Method&gt;" line="325"/>
                <declaration name="declared" type="JDWP.ReferenceType.Methods.MethodInfo[]" line="326"/>
                <scope line="327"/>
                <scope line="330"/>
                <scope line="334">
                    <declaration name="mi" type="JDWP.ReferenceType.Methods.MethodInfo" line="335"/>
                    <declaration name="method" type="Method" line="336"/>
                </scope>
            </method>
            <method name="addToMethodMap" type="void" line="341">
                <params>
                    <param name="methodMap" type="Map<String,Method>"/>
                    <param name="methodList" type="List<Method>"/>
                </params>
            </method>
            <method name="addVisibleMethods" type="void" line="344"/>
            <method name="visibleMethods" type="List<Method>" line="345">
                <declaration name="map" type="Map&lt;String,Method&gt;" line="346"/>
                <declaration name="list" type="List&lt;Method&gt;" line="348"/>
            </method>
            <method name="allMethods" type="List<Method>" line="352"/>
            <method name="methodsByName" type="List<Method>" line="353">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="methods" type="List&lt;Method&gt;" line="354"/>
                <declaration name="retList" type="ArrayList&lt;Method&gt;" line="355"/>
                <scope line="356">
                    <scope line="357"/>
                </scope>
            </method>
            <method name="methodsByName" type="List<Method>" line="364">
                <params>
                    <param name="name" type="String"/>
                    <param name="signature" type="String"/>
                </params>
                <declaration name="methods" type="List&lt;Method&gt;" line="365"/>
                <declaration name="retList" type="ArrayList&lt;Method&gt;" line="366"/>
                <scope line="367">
                    <scope line="368"/>
                </scope>
            </method>
            <method name="getInterfaces" type="List<InterfaceType>" line="375">
                <declaration name="intfs" type="InterfaceTypeImpl[]" line="376"/>
                <scope line="377"/>
                <scope line="380"/>
            </method>
            <method name="nestedTypes" type="List<ReferenceType>" line="385">
                <declaration name="all" type="List" line="386"/>
                <declaration name="nested" type="List&lt;ReferenceType&gt;" line="387"/>
                <declaration name="outername" type="String" line="388"/>
                <declaration name="outerlen" type="int" line="389"/>
                <declaration name="iter" type="Iterator" line="390"/>
                <scope line="391">
                    <declaration name="refType" type="ReferenceType" line="392"/>
                    <declaration name="name" type="String" line="393"/>
                    <declaration name="len" type="int" line="394"/>
                    <scope line="395">
                        <declaration name="c" type="char" line="396"/>
                        <scope line="397"/>
                    </scope>
                </scope>
            </method>
            <method name="getValue" type="Value" line="404">
                <params>
                    <param name="sig" type="Field"/>
                </params>
                <declaration name="list" type="List&lt;Field&gt;" line="405"/>
                <declaration name="map" type="Map" line="407"/>
            </method>
            <method name="validateFieldAccess" type="void" line="410">
                <params>
                    <param name="field" type="Field"/>
                </params>
                <declaration name="declType" type="ReferenceTypeImpl" line="411"/>
                <scope line="412"/>
            </method>
            <method name="validateFieldSet" type="void" line="416">
                <params>
                    <param name="field" type="Field"/>
                </params>
                <scope line="418"/>
            </method>
            <javadoc line="422">
                Returns a map of field values                
            </javadoc>
            <method name="getValues" type="Map<Field,Value>" line="425">
                <params>
                    <param name="theFields" type="List<? extends Field>"/>
                </params>
                <declaration name="size" type="int" line="427"/>
                <declaration name="queryFields" type="JDWP.ReferenceType.GetValues.Field[]" line="428"/>
                <scope line="429">
                    <declaration name="field" type="FieldImpl" line="430"/>
                    <scope line="432"/>
                </scope>
                <declaration name="map" type="Map&lt;Field,Value&gt;" line="437"/>
                <declaration name="values" type="ValueImpl[]" line="438"/>
                <scope line="439"/>
                <scope line="442"/>
                <scope line="445"/>
                <scope line="448">
                    <declaration name="field" type="FieldImpl" line="449"/>
                </scope>
            </method>
            <method name="classObject" type="ClassObjectReference" line="454">
                <scope line="455">
                    <scope line="456">
                        <scope line="457">
                            <scope line="458"/>
                            <scope line="461"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="stratum" type="SDE.Stratum" line="469">
                <params>
                    <param name="stratumID" type="String"/>
                </params>
                <declaration name="sde" type="SDE" line="470"/>
                <scope line="471"/>
            </method>
            <method name="sourceName" type="String" line="476"/>
            <method name="sourceNames" type="List<String>" line="479">
                <params>
                    <param name="stratumID" type="String"/>
                </params>
                <declaration name="stratum" type="SDE.Stratum" line="480"/>
                <scope line="481">
                    <declaration name="result" type="List&lt;String&gt;" line="482"/>
                </scope>
            </method>
            <method name="sourcePaths" type="List<String>" line="488">
                <params>
                    <param name="stratumID" type="String"/>
                </params>
                <declaration name="stratum" type="SDE.Stratum" line="489"/>
                <scope line="490">
                    <declaration name="result" type="List&lt;String&gt;" line="491"/>
                </scope>
            </method>
            <method name="baseSourceName" type="String" line="497">
                <declaration name="bsn" type="String" line="498"/>
                <scope line="499">
                    <scope line="500"/>
                    <scope line="503">
                        <scope line="504"/>
                        <scope line="507"/>
                    </scope>
                </scope>
                <scope line="513"/>
            </method>
            <method name="baseSourcePath" type="String" line="518">
                <declaration name="bsp" type="String" line="519"/>
                <scope line="520"/>
            </method>
            <method name="baseSourceDir" type="String" line="526">
                <scope line="527">
                    <declaration name="typeName" type="String" line="528"/>
                    <declaration name="sb" type="StringBuffer" line="529"/>
                    <declaration name="index" type="int" line="530"/>
                    <declaration name="nextIndex" type="int" line="531"/>
                    <scope line="532"/>
                </scope>
            </method>
            <method name="sourceDebugExtension" type="String" line="541">
                <scope line="542"/>
                <declaration name="sde" type="SDE" line="545"/>
                <scope line="546"/>
            </method>
            <method name="sourceDebugExtensionInfo" type="SDE" line="551">
                <scope line="552"/>
                <declaration name="sde" type="SDE" line="555"/>
                <scope line="556">
                    <declaration name="extension" type="String" line="557"/>
                    <scope line="558"/>
                    <scope line="561">
                        <scope line="562"/>
                    </scope>
                    <scope line="567"/>
                    <scope line="570"/>
                </scope>
            </method>
            <method name="availableStrata" type="List<String>" line="577">
                <declaration name="sde" type="SDE" line="578"/>
                <scope line="579"/>
                <scope line="582">
                    <declaration name="strata" type="List&lt;String&gt;" line="583"/>
                </scope>
            </method>
            <javadoc line="588">
                Always returns non-null stratumID                
            </javadoc>
            <method name="defaultStratum" type="String" line="591">
                <declaration name="sdei" type="SDE" line="592"/>
                <scope line="593"/>
                <scope line="596"/>
            </method>
            <method name="modifiers" type="int" line="600"/>
            <method name="allLineLocations" type="List<Location>" line="604"/>
            <method name="allLineLocations" type="List<Location>" line="607">
                <params>
                    <param name="stratumID" type="String"/>
                    <param name="sourceName" type="String"/>
                </params>
                <declaration name="someAbsent" type="boolean" line="608"/>
                <declaration name="stratum" type="SDE.Stratum" line="609"/>
                <declaration name="list" type="List&lt;Location&gt;" line="610"/>
                <scope line="611">
                    <declaration name="method" type="MethodImpl" line="612"/>
                    <scope line="613"/>
                    <scope line="616"/>
                </scope>
                <scope line="620"/>
            </method>
            <method name="locationsOfLine" type="List<Location>" line="625">
                <params>
                    <param name="lineNumber" type="int"/>
                </params>
            </method>
            <method name="locationsOfLine" type="List<Location>" line="628">
                <params>
                    <param name="stratumID" type="String"/>
                    <param name="sourceName" type="String"/>
                    <param name="lineNumber" type="int"/>
                </params>
                <declaration name="someAbsent" type="boolean" line="629"/>
                <declaration name="somePresent" type="boolean" line="630"/>
                <declaration name="methods" type="List&lt;Method&gt;" line="631"/>
                <declaration name="stratum" type="SDE.Stratum" line="632"/>
                <declaration name="list" type="List&lt;Location&gt;" line="633"/>
                <declaration name="iter" type="Iterator" line="634"/>
                <scope line="635">
                    <declaration name="method" type="MethodImpl" line="636"/>
                    <scope line="637">
                        <scope line="638"/>
                        <scope line="642"/>
                    </scope>
                </scope>
                <scope line="647"/>
            </method>
            <method name="instances" type="List<ObjectReference>" line="652">
                <params>
                    <param name="maxInstances" type="long"/>
                </params>
                <scope line="653"/>
                <scope line="656"/>
                <declaration name="intMax" type="int" line="659"/>
                <scope line="660"/>
                <scope line="663"/>
            </method>
            <method name="getClassFileVersion" type="void" line="667">
                <scope line="668"/>
                <declaration name="classFileVersion" type="JDWP.ReferenceType.ClassFileVersion" line="671"/>
                <scope line="672"/>
                <scope line="675">
                    <scope line="676"/>
                    <scope line="679">
                        <scope line="680"/>
                        <scope line="686"/>
                    </scope>
                </scope>
            </method>
            <method name="majorVersion" type="int" line="695">
                <scope line="696"/>
                <scope line="699"/>
            </method>
            <method name="minorVersion" type="int" line="704">
                <scope line="705"/>
                <scope line="708"/>
            </method>
            <method name="getConstantPoolInfo" type="void" line="713">
                <declaration name="jdwpCPool" type="JDWP.ReferenceType.ConstantPool" line="714"/>
                <scope line="715"/>
                <scope line="718"/>
                <scope line="721">
                    <scope line="722"/>
                    <scope line="725">
                        <scope line="726"/>
                        <scope line="732"/>
                    </scope>
                    <declaration name="cpbytes" type="byte[]" line="736"/>
                </scope>
            </method>
            <method name="constantPoolCount" type="int" line="743">
                <scope line="744"/>
                <scope line="747"/>
            </method>
            <method name="constantPool" type="byte[]" line="752">
                <scope line="753"/>
                <scope line="756"/>
                <scope line="759">
                    <declaration name="cpbytes" type="byte[]" line="760"/>
                </scope>
                <scope line="763"/>
            </method>
            <method name="getModifiers" type="void" line="767">
                <scope line="768"/>
                <scope line="771"/>
                <scope line="774"/>
            </method>
            <method name="decodeStatus" type="void" line="778">
                <params>
                    <param name="status" type="int"/>
                </params>
                <scope line="780"/>
            </method>
            <method name="updateStatus" type="void" line="784">
                <scope line="785"/>
                <scope line="788"/>
            </method>
            <method name="markPrepared" type="void" line="792"/>
            <method name="ref" type="long" line="795"/>
            <method name="indexOf" type="int" line="798">
                <params>
                    <param name="method" type="Method"/>
                </params>
            </method>
            <method name="indexOf" type="int" line="801">
                <params>
                    <param name="field" type="Field"/>
                </params>
            </method>
            <method name="isAssignableTo" type="boolean" line="804"/>
            <method name="isAssignableFrom" type="boolean" line="805">
                <params>
                    <param name="type" type="ReferenceType"/>
                </params>
            </method>
            <method name="isAssignableFrom" type="boolean" line="808">
                <params>
                    <param name="object" type="ObjectReference"/>
                </params>
            </method>
            <method name="setStatus" type="void" line="811">
                <params>
                    <param name="status" type="int"/>
                </params>
            </method>
            <method name="setSignature" type="void" line="814">
                <params>
                    <param name="signature" type="String"/>
                </params>
            </method>
            <method name="setGenericSignature" type="void" line="817">
                <params>
                    <param name="signature" type="String"/>
                </params>
                <scope line="818"/>
                <scope line="821"/>
            </method>
            <method name="isPrimitiveArray" type="boolean" line="826">
                <params>
                    <param name="signature" type="String"/>
                </params>
                <declaration name="i" type="int" line="827"/>
                <declaration name="isPA" type="boolean" line="828"/>
                <scope line="829"/>
                <scope line="832">
                    <declaration name="c" type="char" line="833"/>
                </scope>
            </method>
            <method name="findType" type="Type" line="838">
                <params>
                    <param name="signature" type="String"/>
                </params>
                <declaration name="type" type="Type" line="839"/>
                <scope line="840">
                    <declaration name="sig" type="char" line="841"/>
                    <scope line="842"/>
                    <scope line="845"/>
                </scope>
                <scope line="849">
                    <declaration name="loader" type="ClassLoaderReferenceImpl" line="850"/>
                    <scope line="851"/>
                    <scope line="854"/>
                </scope>
            </method>
            <method name="loaderString" type="String" line="860">
                <scope line="861"/>
                <scope line="864"/>
            </method>
        </class>
    </source>