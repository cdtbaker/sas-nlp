<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.hat.internal.model">
        <import package="java.lang.ref.SoftReference"/>
        <import package="java.util"/>
        <import package="com.sun.tools.hat.internal.parser.ReadBuffer"/>
        <import package="com.sun.tools.hat.internal.util.Misc"/>
        <class name="Snapshot" line="6">
            <javadoc line="6">
                Represents a snapshot of the Java objects in the VM at one instant.
                  This is the top-level &quot;model&quot; object read out of a single .hprof or .bod
                  file.                
            </javadoc>
            <declaration name="SMALL_ID_MASK" type="long" line="12"/>
            <declaration name="EMPTY_BYTE_ARRAY" type="byte[]" line="13"/>
            <declaration name="EMPTY_FIELD_ARRAY" type="JavaField[]" line="14"/>
            <declaration name="EMPTY_STATIC_ARRAY" type="JavaStatic[]" line="15"/>
            <declaration name="heapObjects" type="Hashtable&lt;Number,JavaHeapObject&gt;" line="16"/>
            <declaration name="fakeClasses" type="Hashtable&lt;Number,JavaClass&gt;" line="17"/>
            <declaration name="roots" type="Vector&lt;Root&gt;" line="18"/>
            <declaration name="classes" type="Map&lt;String,JavaClass&gt;" line="19"/>
            <declaration name="newObjects" type="Map&lt;JavaHeapObject,Boolean&gt;" line="20"/>
            <declaration name="siteTraces" type="Map&lt;JavaHeapObject,StackTrace&gt;" line="21"/>
            <declaration name="rootsMap" type="Map&lt;JavaHeapObject,Root&gt;" line="22"/>
            <declaration name="finalizablesCache" type="SoftReference&lt;Vector&gt;" line="23"/>
            <declaration name="nullThing" type="JavaThing" line="24"/>
            <declaration name="weakReferenceClass" type="JavaClass" line="25"/>
            <declaration name="referentFieldIndex" type="int" line="26"/>
            <declaration name="javaLangClass" type="JavaClass" line="27"/>
            <declaration name="javaLangString" type="JavaClass" line="28"/>
            <declaration name="javaLangClassLoader" type="JavaClass" line="29"/>
            <declaration name="otherArrayType" type="JavaClass" line="30"/>
            <declaration name="reachableExcludes" type="ReachableExcludes" line="31"/>
            <declaration name="readBuf" type="ReadBuffer" line="32"/>
            <declaration name="hasNewSet" type="boolean" line="33"/>
            <declaration name="unresolvedObjectsOK" type="boolean" line="34"/>
            <declaration name="newStyleArrayClass" type="boolean" line="35"/>
            <declaration name="identifierSize" type="int" line="36"/>
            <declaration name="minimumObjectSize" type="int" line="37"/>
            <method name="Snapshot" type="constructor" line="38">
                <params>
                    <param name="buf" type="ReadBuffer"/>
                </params>
            </method>
            <method name="setSiteTrace" type="void" line="42">
                <params>
                    <param name="obj" type="JavaHeapObject"/>
                    <param name="trace" type="StackTrace"/>
                </params>
                <scope line="43"/>
            </method>
            <method name="getSiteTrace" type="StackTrace" line="48">
                <params>
                    <param name="obj" type="JavaHeapObject"/>
                </params>
                <scope line="49"/>
                <scope line="52"/>
            </method>
            <method name="setNewStyleArrayClass" type="void" line="56">
                <params>
                    <param name="value" type="boolean"/>
                </params>
            </method>
            <method name="isNewStyleArrayClass" type="boolean" line="59"/>
            <method name="setIdentifierSize" type="void" line="62">
                <params>
                    <param name="size" type="int"/>
                </params>
            </method>
            <method name="getIdentifierSize" type="int" line="66"/>
            <method name="getMinimumObjectSize" type="int" line="69"/>
            <method name="addHeapObject" type="void" line="72">
                <params>
                    <param name="id" type="long"/>
                    <param name="ho" type="JavaHeapObject"/>
                </params>
            </method>
            <method name="addRoot" type="void" line="75">
                <params>
                    <param name="r" type="Root"/>
                </params>
            </method>
            <method name="addClass" type="void" line="79">
                <params>
                    <param name="id" type="long"/>
                    <param name="c" type="JavaClass"/>
                </params>
            </method>
            <method name="addFakeInstanceClass" type="JavaClass" line="83">
                <params>
                    <param name="classID" type="long"/>
                    <param name="instSize" type="int"/>
                </params>
                <declaration name="name" type="String" line="84"/>
                <declaration name="numInts" type="int" line="85"/>
                <declaration name="numBytes" type="int" line="86"/>
                <declaration name="fields" type="JavaField[]" line="87"/>
                <declaration name="i" type="int" line="88"/>
                <scope line="89"/>
                <scope line="92"/>
                <declaration name="c" type="JavaClass" line="95"/>
            </method>
            <javadoc line="99">
                @return true iff it&apos;s possible that some JavaThing instances might
                  isNew set                
                <see>
                    JavaThing.isNew()                    
                </see>
            </javadoc>
            <method name="getHasNewSet" type="boolean" line="104"/>
            <class name="MyVisitor" line="107">
                <extends class="AbstractJavaHeapObjectVisitor"/>
                <declaration name="t" type="JavaHeapObject" line="108"/>
                <method name="visit" type="void" line="109">
                    <params>
                        <param name="other" type="JavaHeapObject"/>
                    </params>
                </method>
            </class>
            <declaration name="DOT_LIMIT" type="int" line="113"/>
            <javadoc line="114">
                Called after reading complete, to initialize the structure                
            </javadoc>
            <method name="resolve" type="void" line="117">
                <params>
                    <param name="calculateRefs" type="boolean"/>
                </params>
                <scope line="120"/>
                <scope line="126"/>
                <scope line="132"/>
                <scope line="137">
                    <scope line="138"/>
                </scope>
                <scope line="142">
                    <scope line="143"/>
                </scope>
                <scope line="150"/>
                <scope line="154">
                    <declaration name="fields" type="JavaField[]" line="155"/>
                    <scope line="156">
                        <scope line="157"/>
                    </scope>
                </scope>
                <scope line="163"/>
                <declaration name="count" type="int" line="168"/>
                <scope line="169">
                    <scope line="172"/>
                </scope>
                <scope line="177"/>
            </method>
            <method name="calculateReferencesToObjects" type="void" line="182">
                <declaration name="count" type="int" line="185"/>
                <declaration name="visitor" type="MyVisitor" line="186"/>
                <scope line="187">
                    <scope line="191"/>
                </scope>
                <scope line="197">
                    <declaration name="t" type="JavaHeapObject" line="199"/>
                    <scope line="200"/>
                </scope>
            </method>
            <method name="markNewRelativeTo" type="void" line="205">
                <params>
                    <param name="baseline" type="Snapshot"/>
                </params>
                <scope line="207">
                    <declaration name="isNew" type="boolean" line="208"/>
                    <declaration name="thingID" type="long" line="209"/>
                    <scope line="210"/>
                    <scope line="213">
                        <declaration name="other" type="JavaThing" line="214"/>
                        <scope line="215"/>
                        <scope line="218"/>
                    </scope>
                </scope>
            </method>
            <method name="getThings" type="Enumeration<JavaHeapObject>" line="225"/>
            <method name="findThing" type="JavaHeapObject" line="228">
                <params>
                    <param name="id" type="long"/>
                </params>
                <declaration name="idObj" type="Number" line="229"/>
                <declaration name="jho" type="JavaHeapObject" line="230"/>
            </method>
            <method name="findThing" type="JavaHeapObject" line="233">
                <params>
                    <param name="id" type="String"/>
                </params>
            </method>
            <method name="findClass" type="JavaClass" line="236">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="237"/>
                <scope line="240"/>
            </method>
            <javadoc line="244">
                Return an Iterator of all of the classes in this snapshot.                
            </javadoc>
            <method name="getClasses" type="Iterator" line="247"/>
            <method name="getClassesArray" type="JavaClass[]" line="250">
                <declaration name="res" type="JavaClass[]" line="251"/>
            </method>
            <method name="getFinalizerObjects" type="Enumeration" line="255">
                <declaration name="obj" type="Vector" line="256"/>
                <scope line="257"/>
                <declaration name="clazz" type="JavaClass" line="260"/>
                <declaration name="queue" type="JavaObject" line="261"/>
                <declaration name="tmp" type="JavaThing" line="262"/>
                <declaration name="finalizables" type="Vector&lt;JavaHeapObject&gt;" line="263"/>
                <scope line="264">
                    <declaration name="head" type="JavaObject" line="265"/>
                    <scope line="266">
                        <declaration name="referent" type="JavaHeapObject" line="267"/>
                        <declaration name="next" type="JavaThing" line="268"/>
                        <scope line="269"/>
                    </scope>
                </scope>
            </method>
            <method name="getRoots" type="Enumeration<Root>" line="279"/>
            <method name="getRootsArray" type="Root[]" line="282">
                <declaration name="res" type="Root[]" line="283"/>
            </method>
            <method name="getRootAt" type="Root" line="287">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="rootsetReferencesTo" type="ReferenceChain[]" line="290">
                <params>
                    <param name="target" type="JavaHeapObject"/>
                    <param name="includeWeak" type="boolean"/>
                </params>
                <declaration name="fifo" type="Vector&lt;ReferenceChain&gt;" line="291"/>
                <declaration name="visited" type="Hashtable&lt;JavaHeapObject,JavaHeapObject&gt;" line="292"/>
                <declaration name="result" type="Vector&lt;ReferenceChain&gt;" line="293"/>
                <scope line="296">
                    <declaration name="chain" type="ReferenceChain" line="297"/>
                    <declaration name="curr" type="JavaHeapObject" line="299"/>
                    <scope line="300"/>
                    <declaration name="referers" type="Enumeration" line="303"/>
                    <scope line="304">
                        <declaration name="t" type="JavaHeapObject" line="305"/>
                        <scope line="306">
                            <scope line="307"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="realResult" type="ReferenceChain[]" line="314"/>
                <scope line="315"/>
            </method>
            <method name="getUnresolvedObjectsOK" type="boolean" line="320"/>
            <method name="setUnresolvedObjectsOK" type="void" line="323">
                <params>
                    <param name="v" type="boolean"/>
                </params>
            </method>
            <method name="getWeakReferenceClass" type="JavaClass" line="326"/>
            <method name="getReferentFieldIndex" type="int" line="329"/>
            <method name="getNullThing" type="JavaThing" line="332"/>
            <method name="setReachableExcludes" type="void" line="335">
                <params>
                    <param name="e" type="ReachableExcludes"/>
                </params>
            </method>
            <method name="getReachableExcludes" type="ReachableExcludes" line="338"/>
            <method name="addReferenceFromRoot" type="void" line="341">
                <params>
                    <param name="r" type="Root"/>
                    <param name="obj" type="JavaHeapObject"/>
                </params>
                <declaration name="root" type="Root" line="342"/>
                <scope line="343"/>
                <scope line="346"/>
            </method>
            <method name="getRoot" type="Root" line="350">
                <params>
                    <param name="obj" type="JavaHeapObject"/>
                </params>
            </method>
            <method name="getJavaLangClass" type="JavaClass" line="353"/>
            <method name="getJavaLangString" type="JavaClass" line="356"/>
            <method name="getJavaLangClassLoader" type="JavaClass" line="359"/>
            <method name="getOtherArrayType" type="JavaClass" line="362">
                <scope line="363">
                    <scope line="364">
                        <scope line="365"/>
                    </scope>
                </scope>
            </method>
            <method name="getArrayClass" type="JavaClass" line="373">
                <params>
                    <param name="elementSignature" type="String"/>
                </params>
                <declaration name="clazz" type="JavaClass" line="374"/>
                <scope line="375">
                    <scope line="377"/>
                </scope>
            </method>
            <method name="getReadBuffer" type="ReadBuffer" line="384"/>
            <method name="setNew" type="void" line="387">
                <params>
                    <param name="obj" type="JavaHeapObject"/>
                    <param name="isNew" type="boolean"/>
                </params>
                <scope line="389"/>
            </method>
            <method name="isNew" type="boolean" line="393">
                <params>
                    <param name="obj" type="JavaHeapObject"/>
                </params>
                <scope line="394"/>
                <scope line="397"/>
            </method>
            <method name="makeId" type="Number" line="401">
                <params>
                    <param name="id" type="long"/>
                </params>
                <scope line="402"/>
                <scope line="405"/>
            </method>
            <method name="putInClassesMap" type="void" line="409">
                <params>
                    <param name="c" type="JavaClass"/>
                </params>
                <declaration name="name" type="String" line="410"/>
                <scope line="411"/>
            </method>
            <method name="addFakeClass" type="void" line="416">
                <params>
                    <param name="c" type="JavaClass"/>
                </params>
            </method>
            <method name="addFakeClass" type="void" line="420">
                <params>
                    <param name="id" type="Number"/>
                    <param name="c" type="JavaClass"/>
                </params>
            </method>
            <method name="initNewObjects" type="void" line="424">
                <scope line="425">
                    <scope line="426">
                        <scope line="427"/>
                    </scope>
                </scope>
            </method>
            <method name="initSiteTraces" type="void" line="433">
                <scope line="434">
                    <scope line="435">
                        <scope line="436"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>