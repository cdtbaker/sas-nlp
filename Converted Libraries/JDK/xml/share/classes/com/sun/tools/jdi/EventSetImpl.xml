<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.jdi">
        <import package="com.sun.jdi"/>
        <import package="com.sun.jdi.event"/>
        <import package="com.sun.jdi.request"/>
        <import package="java.util"/>
        <class name="EventSetImpl" line="7">
            <extends class="ArrayList">
                <type_params>
                    <type_param name="Event"/>
                </type_params>
            </extends>
            <implements interface="EventSet"/>
            <declaration name="vm" type="VirtualMachineImpl" line="8"/>
            <declaration name="pkt" type="Packet" line="9"/>
            <declaration name="suspendPolicy" type="byte" line="10"/>
            <declaration name="internalEventSet" type="EventSetImpl" line="11"/>
            <method name="toString" type="String" line="12">
                <declaration name="string" type="String" line="13"/>
                <declaration name="first" type="boolean" line="14"/>
                <scope line="15">
                    <scope line="16"/>
                </scope>
            </method>
            <class name="EventImpl" line="25">
                <extends class="MirrorImpl"/>
                <implements interface="Event"/>
                <declaration name="eventCmd" type="byte" line="26"/>
                <declaration name="requestID" type="int" line="27"/>
                <declaration name="request" type="EventRequest" line="28"/>
                <javadoc line="29">
                    Constructor for events.                    
                </javadoc>
                <method name="EventImpl" type="constructor" line="32">
                    <params>
                        <param name="evt" type="JDWP.Event.Composite.Events.EventsCommon"/>
                        <param name="requestID" type="int"/>
                    </params>
                    <declaration name="ermi" type="EventRequestManagerImpl" line="36"/>
                </method>
                <method name="equals" type="boolean" line="39">
                    <params>
                        <param name="obj" type="Object"/>
                    </params>
                </method>
                <method name="hashCode" type="int" line="42"/>
                <javadoc line="45">
                    Constructor for VM disconnected events.                    
                </javadoc>
                <method name="EventImpl" type="constructor" line="48">
                    <params>
                        <param name="eventCmd" type="byte"/>
                    </params>
                </method>
                <method name="request" type="EventRequest" line="54"/>
                <method name="requestID" type="int" line="57"/>
                <method name="destination" type="EventDestination" line="60">
                    <scope line="61"/>
                    <scope line="64">
                        <declaration name="ermi" type="EventRequestManagerImpl" line="65"/>
                        <scope line="66"/>
                    </scope>
                    <scope line="71"/>
                </method>
                <method name="eventName" type="String" line="76"/>
                <method name="toString" type="String" line="77"/>
            </class>
            <class name="ThreadedEventImpl" line="81">
                <extends class="EventImpl"/>
                <declaration name="thread" type="ThreadReference" line="82"/>
                <method name="ThreadedEventImpl" type="constructor" line="83">
                    <params>
                        <param name="evt" type="JDWP.Event.Composite.Events.EventsCommon"/>
                        <param name="requestID" type="int"/>
                        <param name="thread" type="ThreadReference"/>
                    </params>
                </method>
                <method name="thread" type="ThreadReference" line="87"/>
                <method name="toString" type="String" line="90"/>
            </class>
            <class name="LocatableEventImpl" line="94">
                <extends class="ThreadedEventImpl"/>
                <implements interface="Locatable"/>
                <declaration name="location" type="Location" line="95"/>
                <method name="LocatableEventImpl" type="constructor" line="96">
                    <params>
                        <param name="evt" type="JDWP.Event.Composite.Events.EventsCommon"/>
                        <param name="requestID" type="int"/>
                        <param name="thread" type="ThreadReference"/>
                        <param name="location" type="Location"/>
                    </params>
                </method>
                <method name="location" type="Location" line="100"/>
                <javadoc line="103">
                    For MethodEntry and MethodExit                    
                </javadoc>
                <method name="method" type="Method" line="106"/>
                <method name="toString" type="String" line="109"/>
            </class>
            <class name="BreakpointEventImpl" line="113">
                <extends class="LocatableEventImpl"/>
                <implements interface="BreakpointEvent"/>
                <method name="BreakpointEventImpl" type="constructor" line="114">
                    <params>
                        <param name="evt" type="JDWP.Event.Composite.Events.Breakpoint"/>
                    </params>
                </method>
                <method name="eventName" type="String" line="117"/>
            </class>
            <class name="StepEventImpl" line="121">
                <extends class="LocatableEventImpl"/>
                <implements interface="StepEvent"/>
                <method name="StepEventImpl" type="constructor" line="122">
                    <params>
                        <param name="evt" type="JDWP.Event.Composite.Events.SingleStep"/>
                    </params>
                </method>
                <method name="eventName" type="String" line="125"/>
            </class>
            <class name="MethodEntryEventImpl" line="129">
                <extends class="LocatableEventImpl"/>
                <implements interface="MethodEntryEvent"/>
                <method name="MethodEntryEventImpl" type="constructor" line="130">
                    <params>
                        <param name="evt" type="JDWP.Event.Composite.Events.MethodEntry"/>
                    </params>
                </method>
                <method name="eventName" type="String" line="133"/>
            </class>
            <class name="MethodExitEventImpl" line="137">
                <extends class="LocatableEventImpl"/>
                <implements interface="MethodExitEvent"/>
                <declaration name="returnVal" type="Value" line="138"/>
                <method name="MethodExitEventImpl" type="constructor" line="139">
                    <params>
                        <param name="evt" type="JDWP.Event.Composite.Events.MethodExit"/>
                    </params>
                </method>
                <method name="MethodExitEventImpl" type="constructor" line="142">
                    <params>
                        <param name="evt" type="JDWP.Event.Composite.Events.MethodExitWithReturnValue"/>
                    </params>
                </method>
                <method name="eventName" type="String" line="146"/>
                <method name="returnValue" type="Value" line="149">
                    <scope line="150"/>
                </method>
            </class>
            <class name="MonitorContendedEnterEventImpl" line="156">
                <extends class="LocatableEventImpl"/>
                <implements interface="MonitorContendedEnterEvent"/>
                <declaration name="monitor" type="ObjectReference" line="157"/>
                <method name="MonitorContendedEnterEventImpl" type="constructor" line="158">
                    <params>
                        <param name="evt" type="JDWP.Event.Composite.Events.MonitorContendedEnter"/>
                    </params>
                </method>
                <method name="eventName" type="String" line="162"/>
                <method name="monitor" type="ObjectReference" line="165"/>
            </class>
            <class name="MonitorContendedEnteredEventImpl" line="169">
                <extends class="LocatableEventImpl"/>
                <implements interface="MonitorContendedEnteredEvent"/>
                <declaration name="monitor" type="ObjectReference" line="170"/>
                <method name="MonitorContendedEnteredEventImpl" type="constructor" line="171">
                    <params>
                        <param name="evt" type="JDWP.Event.Composite.Events.MonitorContendedEntered"/>
                    </params>
                </method>
                <method name="eventName" type="String" line="175"/>
                <method name="monitor" type="ObjectReference" line="178"/>
            </class>
            <class name="MonitorWaitEventImpl" line="182">
                <extends class="LocatableEventImpl"/>
                <implements interface="MonitorWaitEvent"/>
                <declaration name="monitor" type="ObjectReference" line="183"/>
                <declaration name="timeout" type="long" line="184"/>
                <method name="MonitorWaitEventImpl" type="constructor" line="185">
                    <params>
                        <param name="evt" type="JDWP.Event.Composite.Events.MonitorWait"/>
                    </params>
                </method>
                <method name="eventName" type="String" line="190"/>
                <method name="monitor" type="ObjectReference" line="193"/>
                <method name="timeout" type="long" line="196"/>
            </class>
            <class name="MonitorWaitedEventImpl" line="200">
                <extends class="LocatableEventImpl"/>
                <implements interface="MonitorWaitedEvent"/>
                <declaration name="monitor" type="ObjectReference" line="201"/>
                <declaration name="timed_out" type="boolean" line="202"/>
                <method name="MonitorWaitedEventImpl" type="constructor" line="203">
                    <params>
                        <param name="evt" type="JDWP.Event.Composite.Events.MonitorWaited"/>
                    </params>
                </method>
                <method name="eventName" type="String" line="208"/>
                <method name="monitor" type="ObjectReference" line="211"/>
                <method name="timedout" type="boolean" line="214"/>
            </class>
            <class name="ClassPrepareEventImpl" line="218">
                <extends class="ThreadedEventImpl"/>
                <implements interface="ClassPrepareEvent"/>
                <declaration name="referenceType" type="ReferenceType" line="219"/>
                <method name="ClassPrepareEventImpl" type="constructor" line="220">
                    <params>
                        <param name="evt" type="JDWP.Event.Composite.Events.ClassPrepare"/>
                    </params>
                </method>
                <method name="referenceType" type="ReferenceType" line="225"/>
                <method name="eventName" type="String" line="228"/>
            </class>
            <class name="ClassUnloadEventImpl" line="232">
                <extends class="EventImpl"/>
                <implements interface="ClassUnloadEvent"/>
                <declaration name="classSignature" type="String" line="233"/>
                <method name="ClassUnloadEventImpl" type="constructor" line="234">
                    <params>
                        <param name="evt" type="JDWP.Event.Composite.Events.ClassUnload"/>
                    </params>
                </method>
                <method name="className" type="String" line="238"/>
                <method name="classSignature" type="String" line="241"/>
                <method name="eventName" type="String" line="244"/>
            </class>
            <class name="ExceptionEventImpl" line="248">
                <extends class="LocatableEventImpl"/>
                <implements interface="ExceptionEvent"/>
                <declaration name="exception" type="ObjectReference" line="249"/>
                <declaration name="catchLocation" type="Location" line="250"/>
                <method name="ExceptionEventImpl" type="constructor" line="251">
                    <params>
                        <param name="evt" type="JDWP.Event.Composite.Events.Exception"/>
                    </params>
                </method>
                <method name="exception" type="ObjectReference" line="256"/>
                <method name="catchLocation" type="Location" line="259"/>
                <method name="eventName" type="String" line="262"/>
            </class>
            <class name="ThreadDeathEventImpl" line="266">
                <extends class="ThreadedEventImpl"/>
                <implements interface="ThreadDeathEvent"/>
                <method name="ThreadDeathEventImpl" type="constructor" line="267">
                    <params>
                        <param name="evt" type="JDWP.Event.Composite.Events.ThreadDeath"/>
                    </params>
                </method>
                <method name="eventName" type="String" line="270"/>
            </class>
            <class name="ThreadStartEventImpl" line="274">
                <extends class="ThreadedEventImpl"/>
                <implements interface="ThreadStartEvent"/>
                <method name="ThreadStartEventImpl" type="constructor" line="275">
                    <params>
                        <param name="evt" type="JDWP.Event.Composite.Events.ThreadStart"/>
                    </params>
                </method>
                <method name="eventName" type="String" line="278"/>
            </class>
            <class name="VMStartEventImpl" line="282">
                <extends class="ThreadedEventImpl"/>
                <implements interface="VMStartEvent"/>
                <method name="VMStartEventImpl" type="constructor" line="283">
                    <params>
                        <param name="evt" type="JDWP.Event.Composite.Events.VMStart"/>
                    </params>
                </method>
                <method name="eventName" type="String" line="286"/>
            </class>
            <class name="VMDeathEventImpl" line="290">
                <extends class="EventImpl"/>
                <implements interface="VMDeathEvent"/>
                <method name="VMDeathEventImpl" type="constructor" line="291">
                    <params>
                        <param name="evt" type="JDWP.Event.Composite.Events.VMDeath"/>
                    </params>
                </method>
                <method name="eventName" type="String" line="294"/>
            </class>
            <class name="VMDisconnectEventImpl" line="298">
                <extends class="EventImpl"/>
                <implements interface="VMDisconnectEvent"/>
                <method name="VMDisconnectEventImpl" type="constructor" line="299"/>
                <method name="eventName" type="String" line="302"/>
            </class>
            <class name="WatchpointEventImpl" line="306">
                <extends class="LocatableEventImpl"/>
                <implements interface="WatchpointEvent"/>
                <declaration name="refType" type="ReferenceTypeImpl" line="307"/>
                <declaration name="fieldID" type="long" line="308"/>
                <declaration name="object" type="ObjectReference" line="309"/>
                <declaration name="field" type="Field" line="310"/>
                <method name="WatchpointEventImpl" type="constructor" line="311">
                    <params>
                        <param name="evt" type="JDWP.Event.Composite.Events.EventsCommon"/>
                        <param name="requestID" type="int"/>
                        <param name="thread" type="ThreadReference"/>
                        <param name="location" type="Location"/>
                        <param name="refTypeTag" type="byte"/>
                        <param name="typeID" type="long"/>
                        <param name="fieldID" type="long"/>
                        <param name="object" type="ObjectReference"/>
                    </params>
                </method>
                <method name="field" type="Field" line="317">
                    <scope line="318"/>
                </method>
                <method name="object" type="ObjectReference" line="323"/>
                <method name="valueCurrent" type="Value" line="326">
                    <scope line="327"/>
                    <scope line="330"/>
                </method>
            </class>
            <class name="AccessWatchpointEventImpl" line="335">
                <extends class="WatchpointEventImpl"/>
                <implements interface="AccessWatchpointEvent"/>
                <method name="AccessWatchpointEventImpl" type="constructor" line="336">
                    <params>
                        <param name="evt" type="JDWP.Event.Composite.Events.FieldAccess"/>
                    </params>
                </method>
                <method name="eventName" type="String" line="339"/>
            </class>
            <class name="ModificationWatchpointEventImpl" line="343">
                <extends class="WatchpointEventImpl"/>
                <implements interface="ModificationWatchpointEvent"/>
                <declaration name="newValue" type="Value" line="344"/>
                <method name="ModificationWatchpointEventImpl" type="constructor" line="345">
                    <params>
                        <param name="evt" type="JDWP.Event.Composite.Events.FieldModification"/>
                    </params>
                </method>
                <method name="valueToBe" type="Value" line="349"/>
                <method name="eventName" type="String" line="352"/>
            </class>
            <javadoc line="356">
                Events are constructed on the thread which reads all data from the
                  transport. This means that the packet cannot be converted to real
                  JDI objects as that may involve further communications with the
                  back end which would deadlock.
                  Hence the {@link #build()} method below called by EventQueue.                
            </javadoc>
            <method name="EventSetImpl" type="constructor" line="363">
                <params>
                    <param name="aVm" type="VirtualMachine"/>
                    <param name="pkt" type="Packet"/>
                </params>
            </method>
            <javadoc line="368">
                Constructor for special events like VM disconnected                
            </javadoc>
            <method name="EventSetImpl" type="constructor" line="371">
                <params>
                    <param name="aVm" type="VirtualMachine"/>
                    <param name="eventCmd" type="byte"/>
                </params>
            </method>
            <method name="addEvent" type="void" line="382">
                <params>
                    <param name="evt" type="EventImpl"/>
                </params>
            </method>
            <method name="build" type="void" line="385">
                <scope line="386"/>
                <declaration name="ps" type="PacketStream" line="389"/>
                <declaration name="compEvt" type="JDWP.Event.Composite" line="390"/>
                <scope line="392"/>
                <declaration name="fix6485605" type="ThreadReference" line="405"/>
                <scope line="406">
                    <declaration name="evt" type="EventImpl" line="407"/>
                    <scope line="408">
                        <scope line="409"/>
                        <scope line="412"/>
                    </scope>
                    <scope line="417"/>
                    <scope line="425"/>
                </scope>
                <scope line="435">
                    <scope line="436"/>
                    <scope line="439">
                        <scope line="440"/>
                        <scope line="443"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="449">
                Filter out internal events                
            </javadoc>
            <method name="userFilter" type="EventSet" line="452"/>
            <javadoc line="455">
                Filter out user events.                
            </javadoc>
            <method name="internalFilter" type="EventSet" line="458"/>
            <method name="createEvent" type="EventImpl" line="461">
                <params>
                    <param name="evt" type="JDWP.Event.Composite.Events"/>
                </params>
                <declaration name="comm" type="JDWP.Event.Composite.Events.EventsCommon" line="462"/>
            </method>
            <method name="virtualMachine" type="VirtualMachine" line="505"/>
            <method name="suspendPolicy" type="int" line="508"/>
            <method name="eventThread" type="ThreadReference" line="511">
                <scope line="512">
                    <scope line="513"/>
                </scope>
            </method>
            <method name="resume" type="void" line="519">
                <declaration name="thread" type="ThreadReference" line="525"/>
                <scope line="526"/>
            </method>
            <method name="iterator" type="Iterator&lt;Event&gt;" line="537"/>
            <method name="eventIterator" type="EventIterator" line="540"/>
            <class name="Itr" line="543">
                <implements interface="EventIterator"/>
                <declaration name="cursor" type="int" line="544"/>
                <javadoc line="544">
                    Index of element to be returned by subsequent call to next.                    
                </javadoc>
                <method name="hasNext" type="boolean" line="548"/>
                <method name="next" type="Event" line="551">
                    <scope line="552">
                        <declaration name="nxt" type="Event" line="553"/>
                    </scope>
                    <scope line="557"/>
                </method>
                <method name="nextEvent" type="Event" line="561"/>
                <method name="remove" type="void" line="564"/>
            </class>
            <method name="add" type="boolean" line="568">
                <params>
                    <param name="o" type="Event"/>
                </params>
            </method>
            <method name="remove" type="boolean" line="571">
                <params>
                    <param name="o" type="Object"/>
                </params>
            </method>
            <method name="addAll" type="boolean" line="574">
                <params>
                    <param name="coll" type="Collection&lt;? extends Event&gt;"/>
                </params>
            </method>
            <method name="removeAll" type="boolean" line="577">
                <params>
                    <param name="coll" type="Collection&lt;?&gt;"/>
                </params>
            </method>
            <method name="retainAll" type="boolean" line="580">
                <params>
                    <param name="coll" type="Collection&lt;?&gt;"/>
                </params>
            </method>
            <method name="clear" type="void" line="583"/>
        </class>
    </source>