<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.jdi">
        <import package="com.sun.tools.jdi"/>
        <import package="com.sun.jdi"/>
        <import package="com.sun.jdi.connect"/>
        <import package="com.sun.jdi.InternalException"/>
        <import package="java.util.Collections"/>
        <import package="java.util.Collection"/>
        <import package="java.util.Map"/>
        <import package="java.util.List"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.ResourceBundle"/>
        <import package="java.io.Serializable"/>
        <class name="ConnectorImpl" line="14">
            <implements interface="Connector"/>
            <declaration name="defaultArguments" type="Map&lt;String,Argument&gt;" line="15"/>
            <declaration name="trueString" type="String" line="16"/>
            <declaration name="falseString" type="String" line="17"/>
            <method name="defaultArguments" type="Map<String,Argument>" line="18">
                <declaration name="defaults" type="Map&lt;String,Argument&gt;" line="19"/>
                <declaration name="values" type="Collection" line="20"/>
                <declaration name="iter" type="Iterator" line="21"/>
                <scope line="22">
                    <declaration name="argument" type="ArgumentImpl" line="23"/>
                </scope>
            </method>
            <method name="addStringArgument" type="void" line="28">
                <params>
                    <param name="name" type="String"/>
                    <param name="label" type="String"/>
                    <param name="description" type="String"/>
                    <param name="defaultValue" type="String"/>
                    <param name="mustSpecify" type="boolean"/>
                </params>
            </method>
            <method name="addBooleanArgument" type="void" line="31">
                <params>
                    <param name="name" type="String"/>
                    <param name="label" type="String"/>
                    <param name="description" type="String"/>
                    <param name="defaultValue" type="boolean"/>
                    <param name="mustSpecify" type="boolean"/>
                </params>
            </method>
            <method name="addIntegerArgument" type="void" line="34">
                <params>
                    <param name="name" type="String"/>
                    <param name="label" type="String"/>
                    <param name="description" type="String"/>
                    <param name="defaultValue" type="String"/>
                    <param name="mustSpecify" type="boolean"/>
                    <param name="min" type="int"/>
                    <param name="max" type="int"/>
                </params>
            </method>
            <method name="addSelectedArgument" type="void" line="37">
                <params>
                    <param name="name" type="String"/>
                    <param name="label" type="String"/>
                    <param name="description" type="String"/>
                    <param name="defaultValue" type="String"/>
                    <param name="mustSpecify" type="boolean"/>
                    <param name="list" type="List<String>"/>
                </params>
            </method>
            <method name="argument" type="ArgumentImpl" line="40">
                <params>
                    <param name="name" type="String"/>
                    <param name="arguments" type="Map"/>
                </params>
                <declaration name="argument" type="ArgumentImpl" line="41"/>
                <scope line="42"/>
                <declaration name="value" type="String" line="45"/>
                <scope line="46">
                    <scope line="47"/>
                </scope>
                <scope line="51"/>
            </method>
            <declaration name="messages" type="ResourceBundle" line="56"/>
            <method name="getString" type="String" line="57">
                <params>
                    <param name="key" type="String"/>
                </params>
                <scope line="58"/>
            </method>
            <method name="toString" type="String" line="63">
                <declaration name="string" type="String" line="64"/>
                <declaration name="iter" type="Iterator" line="65"/>
                <declaration name="first" type="boolean" line="66"/>
                <scope line="67">
                    <declaration name="argument" type="ArgumentImpl" line="68"/>
                    <scope line="69"/>
                </scope>
            </method>
            <class name="ArgumentImpl" line="78">
                <implements interface="Connector.Argument"/>
                <implements interface="Cloneable"/>
                <implements interface="Serializable"/>
                <declaration name="name" type="String" line="79"/>
                <declaration name="label" type="String" line="80"/>
                <declaration name="description" type="String" line="81"/>
                <declaration name="value" type="String" line="82"/>
                <declaration name="mustSpecify" type="boolean" line="83"/>
                <method name="ArgumentImpl" type="constructor" line="84">
                    <params>
                        <param name="name" type="String"/>
                        <param name="label" type="String"/>
                        <param name="description" type="String"/>
                        <param name="value" type="String"/>
                        <param name="mustSpecify" type="boolean"/>
                    </params>
                </method>
                <method name="isValid" type="boolean" line="91"/>
                <method name="name" type="String" line="92"/>
                <method name="label" type="String" line="95"/>
                <method name="description" type="String" line="98"/>
                <method name="value" type="String" line="101"/>
                <method name="setValue" type="void" line="104">
                    <params>
                        <param name="value" type="String"/>
                    </params>
                    <scope line="105"/>
                </method>
                <method name="mustSpecify" type="boolean" line="110"/>
                <method name="equals" type="boolean" line="113">
                    <params>
                        <param name="obj" type="Object"/>
                    </params>
                    <scope line="114">
                        <declaration name="other" type="Connector.Argument" line="115"/>
                    </scope>
                    <scope line="118"/>
                </method>
                <method name="hashCode" type="int" line="122"/>
                <method name="clone" type="Object" line="125">
                    <scope line="126"/>
                    <scope line="129"/>
                </method>
                <method name="toString" type="String" line="133"/>
            </class>
            <class name="BooleanArgumentImpl" line="137">
                <extends class="ConnectorImpl.ArgumentImpl"/>
                <implements interface="Connector.BooleanArgument"/>
                <method name="BooleanArgumentImpl" type="constructor" line="138">
                    <params>
                        <param name="name" type="String"/>
                        <param name="label" type="String"/>
                        <param name="description" type="String"/>
                        <param name="value" type="boolean"/>
                        <param name="mustSpecify" type="boolean"/>
                    </params>
                    <scope line="140"/>
                </method>
                <javadoc line="146">
                    Sets the value of the argument.                    
                </javadoc>
                <method name="setValue" type="void" line="149">
                    <params>
                        <param name="value" type="boolean"/>
                    </params>
                </method>
                <javadoc line="152">
                    Performs basic sanity check of argument.                    
                    <return>
                        <code>true</code> if value is a string
                          representation of a boolean value.                        
                    </return>
                    <see>
                        #stringValueOf(boolean)                        
                    </see>
                </javadoc>
                <method name="isValid" type="boolean" line="158">
                    <params>
                        <param name="value" type="String"/>
                    </params>
                </method>
                <javadoc line="161">
                    Return the string representation of the &lt;code&gt;value&lt;/code&gt;
                      parameter.
                      Does not set or examine the value or the argument.                    
                    <return>
                        the localized String representation of the
                          boolean value.                        
                    </return>
                </javadoc>
                <method name="stringValueOf" type="String" line="168">
                    <params>
                        <param name="value" type="boolean"/>
                    </params>
                </method>
                <javadoc line="171">
                    Return the value of the argument as a boolean.  Since
                      the argument may not have been set or may have an invalid
                      value {@link #isValid(String)} should be called on{@link #value()} to check its validity.  If it is invalid
                      the boolean returned by this method is undefined.                    
                    <return>
                        the value of the argument as a boolean.                        
                    </return>
                </javadoc>
                <method name="booleanValue" type="boolean" line="178"/>
            </class>
            <class name="IntegerArgumentImpl" line="182">
                <extends class="ConnectorImpl.ArgumentImpl"/>
                <implements interface="Connector.IntegerArgument"/>
                <declaration name="min" type="int" line="183"/>
                <declaration name="max" type="int" line="184"/>
                <method name="IntegerArgumentImpl" type="constructor" line="185">
                    <params>
                        <param name="name" type="String"/>
                        <param name="label" type="String"/>
                        <param name="description" type="String"/>
                        <param name="value" type="String"/>
                        <param name="mustSpecify" type="boolean"/>
                        <param name="min" type="int"/>
                        <param name="max" type="int"/>
                    </params>
                </method>
                <javadoc line="190">
                    Sets the value of the argument.
                      The value should be checked with {@link #isValid(int)}before setting it; invalid values will throw an exception
                      when the connection is established - for example,
                      on {@link LaunchingConnector#launch}                    
                </javadoc>
                <method name="setValue" type="void" line="196">
                    <params>
                        <param name="value" type="int"/>
                    </params>
                </method>
                <javadoc line="199">
                    Performs basic sanity check of argument.                    
                    <return>
                        <code>true</code> if value represents an int that is
                          <code>{@link #min()} &lt;= value &lt;= {@link #max()}</code>                        
                    </return>
                </javadoc>
                <method name="isValid" type="boolean" line="204">
                    <params>
                        <param name="value" type="String"/>
                    </params>
                    <scope line="205"/>
                    <scope line="208"/>
                    <scope line="211"/>
                </method>
                <javadoc line="215">
                    Performs basic sanity check of argument.                    
                    <return>
                        <code>true</code> if
                          <code>{@link #min()} &lt;= value  &lt;= {@link #max()}</code>                        
                    </return>
                </javadoc>
                <method name="isValid" type="boolean" line="220">
                    <params>
                        <param name="value" type="int"/>
                    </params>
                </method>
                <javadoc line="223">
                    Return the string representation of the &lt;code&gt;value&lt;/code&gt;
                      parameter.
                      Does not set or examine the value or the argument.                    
                    <return>
                        the String representation of the
                          int value.                        
                    </return>
                </javadoc>
                <method name="stringValueOf" type="String" line="230">
                    <params>
                        <param name="value" type="int"/>
                    </params>
                </method>
                <javadoc line="233">
                    Return the value of the argument as a int.  Since
                      the argument may not have been set or may have an invalid
                      value {@link #isValid(String)} should be called on{@link #value()} to check its validity.  If it is invalid
                      the int returned by this method is undefined.                    
                    <return>
                        the value of the argument as a int.                        
                    </return>
                </javadoc>
                <method name="intValue" type="int" line="240">
                    <scope line="241"/>
                    <scope line="244"/>
                    <scope line="247"/>
                </method>
                <javadoc line="251">
                    The upper bound for the value.                    
                    <return>
                        the maximum allowed value for this argument.                        
                    </return>
                </javadoc>
                <method name="max" type="int" line="255"/>
                <javadoc line="258">
                    The lower bound for the value.                    
                    <return>
                        the minimum allowed value for this argument.                        
                    </return>
                </javadoc>
                <method name="min" type="int" line="262"/>
            </class>
            <class name="StringArgumentImpl" line="266">
                <extends class="ConnectorImpl.ArgumentImpl"/>
                <implements interface="Connector.StringArgument"/>
                <method name="StringArgumentImpl" type="constructor" line="267">
                    <params>
                        <param name="name" type="String"/>
                        <param name="label" type="String"/>
                        <param name="description" type="String"/>
                        <param name="value" type="String"/>
                        <param name="mustSpecify" type="boolean"/>
                    </params>
                </method>
                <javadoc line="270">
                    Performs basic sanity check of argument.                    
                    <return>
                        <code>true</code> always                        
                    </return>
                </javadoc>
                <method name="isValid" type="boolean" line="274">
                    <params>
                        <param name="value" type="String"/>
                    </params>
                </method>
            </class>
            <class name="SelectedArgumentImpl" line="278">
                <extends class="ConnectorImpl.ArgumentImpl"/>
                <implements interface="Connector.SelectedArgument"/>
                <declaration name="choices" type="List&lt;String&gt;" line="279"/>
                <method name="SelectedArgumentImpl" type="constructor" line="280">
                    <params>
                        <param name="name" type="String"/>
                        <param name="label" type="String"/>
                        <param name="description" type="String"/>
                        <param name="value" type="String"/>
                        <param name="mustSpecify" type="boolean"/>
                        <param name="choices" type="List<String>"/>
                    </params>
                </method>
                <javadoc line="284">
                    Return the possible values for the argument                    
                    <return>
                        {@link List} of {@link String}                        
                    </return>
                </javadoc>
                <method name="choices" type="List<String>" line="288"/>
                <javadoc line="291">
                    Performs basic sanity check of argument.                    
                    <return>
                        <code>true</code> if value is one of {@link #choices()}.                        
                    </return>
                </javadoc>
                <method name="isValid" type="boolean" line="295">
                    <params>
                        <param name="value" type="String"/>
                    </params>
                </method>
            </class>
        </class>
    </source>