<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.jdi">
        <import package="com.sun.jdi"/>
        <import package="com.sun.jdi.connect.spi.Connection"/>
        <import package="com.sun.jdi.request.EventRequestManager"/>
        <import package="com.sun.jdi.request.EventRequest"/>
        <import package="com.sun.jdi.request.BreakpointRequest"/>
        <import package="com.sun.jdi.event.EventQueue"/>
        <import package="java.util"/>
        <import package="java.text.MessageFormat"/>
        <import package="java.lang.ref.ReferenceQueue"/>
        <import package="java.lang.ref.Reference"/>
        <import package="java.lang.ref.SoftReference"/>
        <import package="java.lang.ref.WeakReference"/>
        <class name="VirtualMachineImpl" line="14">
            <extends class="MirrorImpl"/>
            <implements interface="PathSearchingVirtualMachine"/>
            <implements interface="ThreadListener"/>
            <declaration name="sizeofFieldRef" type="int" line="15"/>
            <declaration name="sizeofMethodRef" type="int" line="16"/>
            <declaration name="sizeofObjectRef" type="int" line="17"/>
            <declaration name="sizeofClassRef" type="int" line="18"/>
            <declaration name="sizeofFrameRef" type="int" line="19"/>
            <declaration name="sequenceNumber" type="int" line="20"/>
            <declaration name="target" type="TargetVM" line="21"/>
            <declaration name="eventQueue" type="EventQueueImpl" line="22"/>
            <declaration name="internalEventRequestManager" type="EventRequestManagerImpl" line="23"/>
            <declaration name="eventRequestManager" type="EventRequestManagerImpl" line="24"/>
            <declaration name="vmManager" type="VirtualMachineManagerImpl" line="25"/>
            <declaration name="threadGroupForJDI" type="ThreadGroup" line="26"/>
            <declaration name="traceFlags" type="int" line="27"/>
            <declaration name="TRACE_RAW_SENDS" type="int" line="28"/>
            <declaration name="TRACE_RAW_RECEIVES" type="int" line="29"/>
            <declaration name="traceReceives" type="boolean" line="30"/>
            <declaration name="typesByID" type="Map&lt;Long,ReferenceType&gt;" line="31"/>
            <declaration name="typesBySignature" type="TreeSet&lt;ReferenceType&gt;" line="32"/>
            <declaration name="retrievedAllTypes" type="boolean" line="33"/>
            <declaration name="defaultStratum" type="String" line="34"/>
            <declaration name="objectsByID" type="Map&lt;Long,SoftObjectReference&gt;" line="35"/>
            <declaration name="referenceQueue" type="ReferenceQueue&lt;ObjectReferenceImpl&gt;" line="36"/>
            <declaration name="DISPOSE_THRESHOLD" type="int" line="37"/>
            <declaration name="batchedDisposeRequests" type="List&lt;SoftObjectReference&gt;" line="38"/>
            <declaration name="versionInfo" type="JDWP.VirtualMachine.Version" line="39"/>
            <declaration name="pathInfo" type="JDWP.VirtualMachine.ClassPaths" line="40"/>
            <declaration name="capabilities" type="JDWP.VirtualMachine.Capabilities" line="41"/>
            <declaration name="capabilitiesNew" type="JDWP.VirtualMachine.CapabilitiesNew" line="42"/>
            <declaration name="theBooleanType" type="BooleanType" line="43"/>
            <declaration name="theByteType" type="ByteType" line="44"/>
            <declaration name="theCharType" type="CharType" line="45"/>
            <declaration name="theShortType" type="ShortType" line="46"/>
            <declaration name="theIntegerType" type="IntegerType" line="47"/>
            <declaration name="theLongType" type="LongType" line="48"/>
            <declaration name="theFloatType" type="FloatType" line="49"/>
            <declaration name="theDoubleType" type="DoubleType" line="50"/>
            <declaration name="theVoidType" type="VoidType" line="51"/>
            <declaration name="voidVal" type="VoidValue" line="52"/>
            <declaration name="process" type="Process" line="53"/>
            <declaration name="state" type="VMState" line="54"/>
            <declaration name="initMonitor" type="Object" line="55"/>
            <declaration name="initComplete" type="boolean" line="56"/>
            <declaration name="shutdown" type="boolean" line="57"/>
            <method name="notifyInitCompletion" type="void" line="58">
                <scope line="59"/>
            </method>
            <method name="waitInitCompletion" type="void" line="64">
                <scope line="65">
                    <scope line="66">
                        <scope line="67"/>
                        <scope line="70"/>
                    </scope>
                </scope>
            </method>
            <method name="state" type="VMState" line="75"/>
            <method name="threadResumable" type="boolean" line="78">
                <params>
                    <param name="action" type="ThreadAction"/>
                </params>
            </method>
            <method name="VirtualMachineImpl" type="constructor" line="82">
                <params>
                    <param name="manager" type="VirtualMachineManager"/>
                    <param name="connection" type="Connection"/>
                    <param name="process" type="Process"/>
                    <param name="sequenceNumber" type="int"/>
                </params>
                <declaration name="internalEventQueue" type="EventQueueImpl" line="90"/>
                <declaration name="idSizes" type="JDWP.VirtualMachine.IDSizes" line="95"/>
                <scope line="96"/>
                <scope line="99"/>
                <declaration name="er" type="EventRequest" line="108"/>
            </method>
            <method name="getInternalEventRequestManager" type="EventRequestManagerImpl" line="116"/>
            <method name="validateVM" type="void" line="119"/>
            <method name="equals" type="boolean" line="121">
                <params>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <method name="hashCode" type="int" line="124"/>
            <method name="classesByName" type="List<ReferenceType>" line="127">
                <params>
                    <param name="className" type="String"/>
                </params>
                <declaration name="signature" type="String" line="129"/>
                <declaration name="list" type="List&lt;ReferenceType&gt;" line="130"/>
                <scope line="131"/>
                <scope line="134"/>
            </method>
            <method name="allClasses" type="List<ReferenceType>" line="139">
                <scope line="141"/>
                <declaration name="a" type="ArrayList&lt;ReferenceType&gt;" line="144"/>
                <scope line="145"/>
            </method>
            <method name="redefineClasses" type="void" line="150">
                <params>
                    <param name="classToBytes" type="Map<? extends ReferenceType,byte[]>"/>
                </params>
                <declaration name="cnt" type="int" line="151"/>
                <declaration name="defs" type="JDWP.VirtualMachine.RedefineClasses.ClassDef[]" line="152"/>
                <scope line="154"/>
                <declaration name="it" type="Iterator" line="157"/>
                <scope line="158">
                    <declaration name="entry" type="Map.Entry" line="159"/>
                    <declaration name="refType" type="ReferenceTypeImpl" line="160"/>
                </scope>
                <scope line="165"/>
                <scope line="168"/>
                <declaration name="toDelete" type="List&lt;BreakpointRequest&gt;" line="196"/>
                <declaration name="erm" type="EventRequestManager" line="197"/>
                <scope line="199">
                    <declaration name="req" type="BreakpointRequest" line="200"/>
                    <scope line="201"/>
                </scope>
                <scope line="207">
                    <declaration name="rti" type="ReferenceTypeImpl" line="208"/>
                </scope>
            </method>
            <method name="allThreads" type="List<ThreadReference>" line="212"/>
            <method name="topLevelThreadGroups" type="List<ThreadGroupReference>" line="216"/>
            <method name="sendResumingCommand" type="PacketStream" line="220">
                <params>
                    <param name="sender" type="CommandSender"/>
                </params>
            </method>
            <method name="notifySuspend" type="void" line="223"/>
            <method name="suspend" type="void" line="226">
                <scope line="228"/>
                <scope line="231"/>
            </method>
            <method name="resume" type="void" line="236">
                <anonymous_class line="238">
                    <method name="send" type="PacketStream" line="239"/>
                </anonymous_class>
                <declaration name="sender" type="CommandSender" line="238"/>
                <scope line="244">
                    <declaration name="stream" type="PacketStream" line="245"/>
                </scope>
                <scope line="248"/>
                <scope line="250"/>
            </method>
            <method name="eventQueue" type="EventQueue" line="259"/>
            <method name="eventRequestManager" type="EventRequestManager" line="262"/>
            <method name="eventRequestManagerImpl" type="EventRequestManagerImpl" line="266"/>
            <method name="mirrorOf" type="BooleanValue" line="269">
                <params>
                    <param name="value" type="boolean"/>
                </params>
            </method>
            <method name="mirrorOf" type="ByteValue" line="273">
                <params>
                    <param name="value" type="byte"/>
                </params>
            </method>
            <method name="mirrorOf" type="CharValue" line="277">
                <params>
                    <param name="value" type="char"/>
                </params>
            </method>
            <method name="mirrorOf" type="ShortValue" line="281">
                <params>
                    <param name="value" type="short"/>
                </params>
            </method>
            <method name="mirrorOf" type="IntegerValue" line="285">
                <params>
                    <param name="value" type="int"/>
                </params>
            </method>
            <method name="mirrorOf" type="LongValue" line="289">
                <params>
                    <param name="value" type="long"/>
                </params>
            </method>
            <method name="mirrorOf" type="FloatValue" line="293">
                <params>
                    <param name="value" type="float"/>
                </params>
            </method>
            <method name="mirrorOf" type="DoubleValue" line="297">
                <params>
                    <param name="value" type="double"/>
                </params>
            </method>
            <method name="mirrorOf" type="StringReference" line="301">
                <params>
                    <param name="value" type="String"/>
                </params>
                <scope line="303"/>
                <scope line="306"/>
            </method>
            <method name="mirrorOfVoid" type="VoidValue" line="310">
                <scope line="311"/>
            </method>
            <method name="instanceCounts" type="long[]" line="316">
                <params>
                    <param name="classes" type="List<? extends ReferenceType>"/>
                </params>
                <scope line="317"/>
                <declaration name="retValue" type="long[]" line="320"/>
                <declaration name="rtArray" type="ReferenceTypeImpl[]" line="321"/>
                <declaration name="ii" type="int" line="322"/>
                <scope line="323"/>
                <scope line="327"/>
                <scope line="330"/>
            </method>
            <method name="dispose" type="void" line="335">
                <scope line="338"/>
                <scope line="341"/>
            </method>
            <method name="exit" type="void" line="346">
                <params>
                    <param name="exitCode" type="int"/>
                </params>
                <scope line="349"/>
                <scope line="352"/>
            </method>
            <method name="process" type="Process" line="357"/>
            <method name="versionInfo" type="JDWP.VirtualMachine.Version" line="361">
                <scope line="362">
                    <scope line="363"/>
                </scope>
                <scope line="368"/>
            </method>
            <method name="description" type="String" line="372"/>
            <method name="version" type="String" line="376"/>
            <method name="name" type="String" line="380"/>
            <method name="canWatchFieldModification" type="boolean" line="384"/>
            <method name="canWatchFieldAccess" type="boolean" line="388"/>
            <method name="canGetBytecodes" type="boolean" line="392"/>
            <method name="canGetSyntheticAttribute" type="boolean" line="396"/>
            <method name="canGetOwnedMonitorInfo" type="boolean" line="400"/>
            <method name="canGetCurrentContendedMonitor" type="boolean" line="404"/>
            <method name="canGetMonitorInfo" type="boolean" line="408"/>
            <method name="hasNewCapabilities" type="boolean" line="412"/>
            <method name="canGet1_5LanguageFeatures" type="boolean" line="415"/>
            <method name="canUseInstanceFilters" type="boolean" line="418"/>
            <method name="canRedefineClasses" type="boolean" line="422"/>
            <method name="canAddMethod" type="boolean" line="426"/>
            <method name="canUnrestrictedlyRedefineClasses" type="boolean" line="430"/>
            <method name="canPopFrames" type="boolean" line="434"/>
            <method name="canGetMethodReturnValues" type="boolean" line="438"/>
            <method name="canGetInstanceInfo" type="boolean" line="441">
                <scope line="442"/>
            </method>
            <method name="canUseSourceNameFilters" type="boolean" line="448">
                <scope line="449"/>
            </method>
            <method name="canForceEarlyReturn" type="boolean" line="454"/>
            <method name="canBeModified" type="boolean" line="458"/>
            <method name="canGetSourceDebugExtension" type="boolean" line="461"/>
            <method name="canGetClassFileVersion" type="boolean" line="465">
                <scope line="466"/>
                <scope line="469"/>
            </method>
            <method name="canGetConstantPool" type="boolean" line="473"/>
            <method name="canRequestVMDeathEvent" type="boolean" line="477"/>
            <method name="canRequestMonitorEvents" type="boolean" line="481"/>
            <method name="canGetMonitorFrameInfo" type="boolean" line="485"/>
            <method name="setDebugTraceMode" type="void" line="489">
                <params>
                    <param name="traceFlags" type="int"/>
                </params>
            </method>
            <method name="printTrace" type="void" line="494">
                <params>
                    <param name="string" type="String"/>
                </params>
            </method>
            <method name="printReceiveTrace" type="void" line="497">
                <params>
                    <param name="depth" type="int"/>
                    <param name="string" type="String"/>
                </params>
                <declaration name="sb" type="StringBuffer" line="498"/>
                <scope line="499"/>
            </method>
            <method name="addReferenceType" type="ReferenceTypeImpl" line="505">
                <params>
                    <param name="id" type="long"/>
                    <param name="tag" type="int"/>
                    <param name="signature" type="String"/>
                </params>
                <scope line="506"/>
                <declaration name="type" type="ReferenceTypeImpl" line="509"/>
                <scope line="523"/>
                <scope line="528"/>
            </method>
            <method name="removeReferenceType" type="void" line="533">
                <params>
                    <param name="signature" type="String"/>
                </params>
                <scope line="534"/>
                <declaration name="iter" type="Iterator" line="537"/>
                <declaration name="matches" type="int" line="538"/>
                <scope line="539">
                    <declaration name="type" type="ReferenceTypeImpl" line="540"/>
                    <declaration name="comp" type="int" line="541"/>
                    <scope line="542">
                        <scope line="546"/>
                    </scope>
                </scope>
                <scope line="551"/>
            </method>
            <method name="findReferenceTypes" type="List<ReferenceType>" line="555">
                <params>
                    <param name="signature" type="String"/>
                </params>
                <scope line="556"/>
                <declaration name="iter" type="Iterator" line="559"/>
                <declaration name="list" type="List&lt;ReferenceType&gt;" line="560"/>
                <scope line="561">
                    <declaration name="type" type="ReferenceTypeImpl" line="562"/>
                    <declaration name="comp" type="int" line="563"/>
                    <scope line="564"/>
                </scope>
            </method>
            <method name="initReferenceTypes" type="void" line="570"/>
            <method name="referenceType" type="ReferenceTypeImpl" line="574">
                <params>
                    <param name="ref" type="long"/>
                    <param name="tag" type="byte"/>
                </params>
            </method>
            <method name="classType" type="ClassTypeImpl" line="577">
                <params>
                    <param name="ref" type="long"/>
                </params>
            </method>
            <method name="interfaceType" type="InterfaceTypeImpl" line="580">
                <params>
                    <param name="ref" type="long"/>
                </params>
            </method>
            <method name="arrayType" type="ArrayTypeImpl" line="583">
                <params>
                    <param name="ref" type="long"/>
                </params>
            </method>
            <method name="referenceType" type="ReferenceTypeImpl" line="586">
                <params>
                    <param name="id" type="long"/>
                    <param name="tag" type="int"/>
                    <param name="signature" type="String"/>
                </params>
                <scope line="587">
                    <declaration name="sb" type="StringBuffer" line="588"/>
                    <scope line="590"/>
                    <scope line="593"/>
                    <scope line="596"/>
                    <scope line="599"/>
                    <scope line="602"/>
                </scope>
                <scope line="608"/>
                <scope line="611">
                    <declaration name="retType" type="ReferenceTypeImpl" line="612"/>
                    <scope line="613">
                        <scope line="614"/>
                        <scope line="617"/>
                    </scope>
                </scope>
            </method>
            <method name="capabilities" type="JDWP.VirtualMachine.Capabilities" line="624">
                <scope line="625">
                    <scope line="626"/>
                    <scope line="629"/>
                </scope>
            </method>
            <method name="capabilitiesNew" type="JDWP.VirtualMachine.CapabilitiesNew" line="635">
                <scope line="636">
                    <scope line="637"/>
                    <scope line="640"/>
                </scope>
            </method>
            <method name="retrieveClassesBySignature" type="List<ReferenceType>" line="646">
                <params>
                    <param name="signature" type="String"/>
                </params>
                <scope line="647"/>
                <declaration name="cinfos" type="JDWP.VirtualMachine.ClassesBySignature.ClassInfo[]" line="650"/>
                <scope line="651"/>
                <scope line="654"/>
                <declaration name="count" type="int" line="657"/>
                <declaration name="list" type="List&lt;ReferenceType&gt;" line="658"/>
                <scope line="659">
                    <scope line="660">
                        <declaration name="ci" type="JDWP.VirtualMachine.ClassesBySignature.ClassInfo" line="661"/>
                        <declaration name="type" type="ReferenceTypeImpl" line="662"/>
                    </scope>
                </scope>
            </method>
            <method name="retrieveAllClasses1_4" type="void" line="669">
                <declaration name="cinfos" type="JDWP.VirtualMachine.AllClasses.ClassInfo[]" line="670"/>
                <scope line="671"/>
                <scope line="674"/>
                <scope line="677">
                    <scope line="678">
                        <declaration name="count" type="int" line="679"/>
                        <scope line="680">
                            <declaration name="ci" type="JDWP.VirtualMachine.AllClasses.ClassInfo" line="681"/>
                            <declaration name="type" type="ReferenceTypeImpl" line="682"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="retrieveAllClasses" type="void" line="689">
                <scope line="690"/>
                <scope line="693"/>
                <declaration name="cinfos" type="JDWP.VirtualMachine.AllClassesWithGeneric.ClassInfo[]" line="697"/>
                <scope line="698"/>
                <scope line="701"/>
                <scope line="704">
                    <scope line="705">
                        <declaration name="count" type="int" line="706"/>
                        <scope line="707">
                            <declaration name="ci" type="JDWP.VirtualMachine.AllClassesWithGeneric.ClassInfo" line="708"/>
                            <declaration name="type" type="ReferenceTypeImpl" line="709"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="sendToTarget" type="void" line="717">
                <params>
                    <param name="packet" type="Packet"/>
                </params>
            </method>
            <method name="waitForTargetReply" type="void" line="720">
                <params>
                    <param name="packet" type="Packet"/>
                </params>
            </method>
            <method name="findBootType" type="Type" line="724">
                <params>
                    <param name="signature" type="String"/>
                </params>
                <declaration name="types" type="List" line="725"/>
                <declaration name="iter" type="Iterator" line="726"/>
                <scope line="727">
                    <declaration name="type" type="ReferenceType" line="728"/>
                    <scope line="729"/>
                </scope>
                <declaration name="parser" type="JNITypeParser" line="733"/>
            </method>
            <method name="theBooleanType" type="BooleanType" line="736">
                <scope line="737">
                    <scope line="738">
                        <scope line="739"/>
                    </scope>
                </scope>
            </method>
            <method name="theByteType" type="ByteType" line="746">
                <scope line="747">
                    <scope line="748">
                        <scope line="749"/>
                    </scope>
                </scope>
            </method>
            <method name="theCharType" type="CharType" line="756">
                <scope line="757">
                    <scope line="758">
                        <scope line="759"/>
                    </scope>
                </scope>
            </method>
            <method name="theShortType" type="ShortType" line="766">
                <scope line="767">
                    <scope line="768">
                        <scope line="769"/>
                    </scope>
                </scope>
            </method>
            <method name="theIntegerType" type="IntegerType" line="776">
                <scope line="777">
                    <scope line="778">
                        <scope line="779"/>
                    </scope>
                </scope>
            </method>
            <method name="theLongType" type="LongType" line="786">
                <scope line="787">
                    <scope line="788">
                        <scope line="789"/>
                    </scope>
                </scope>
            </method>
            <method name="theFloatType" type="FloatType" line="796">
                <scope line="797">
                    <scope line="798">
                        <scope line="799"/>
                    </scope>
                </scope>
            </method>
            <method name="theDoubleType" type="DoubleType" line="806">
                <scope line="807">
                    <scope line="808">
                        <scope line="809"/>
                    </scope>
                </scope>
            </method>
            <method name="theVoidType" type="VoidType" line="816">
                <scope line="817">
                    <scope line="818">
                        <scope line="819"/>
                    </scope>
                </scope>
            </method>
            <method name="primitiveTypeMirror" type="PrimitiveType" line="826">
                <params>
                    <param name="tag" type="byte"/>
                </params>
            </method>
            <method name="processBatchedDisposes" type="void" line="848">
                <scope line="849"/>
                <declaration name="requests" type="JDWP.VirtualMachine.DisposeObjects.Request[]" line="852"/>
                <scope line="853">
                    <declaration name="size" type="int" line="854"/>
                    <scope line="855">
                        <scope line="856"/>
                        <scope line="860">
                            <declaration name="ref" type="SoftObjectReference" line="861"/>
                            <scope line="862"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="870">
                    <scope line="871"/>
                    <scope line="874"/>
                </scope>
            </method>
            <method name="batchForDispose" type="void" line="879">
                <params>
                    <param name="ref" type="SoftObjectReference"/>
                </params>
                <scope line="880"/>
            </method>
            <method name="processQueue" type="void" line="885">
                <declaration name="ref" type="Reference" line="886"/>
                <scope line="887">
                    <declaration name="softRef" type="SoftObjectReference" line="888"/>
                </scope>
            </method>
            <method name="objectMirror" type="ObjectReferenceImpl" line="893">
                <params>
                    <param name="id" type="long"/>
                    <param name="tag" type="int"/>
                </params>
                <scope line="895"/>
                <declaration name="object" type="ObjectReferenceImpl" line="898"/>
                <declaration name="key" type="Long" line="899"/>
                <declaration name="ref" type="SoftObjectReference" line="900"/>
                <scope line="901"/>
                <scope line="904">
                    <declaration name="thread" type="ThreadReferenceImpl" line="916"/>
                    <scope line="934"/>
                </scope>
                <scope line="938"/>
            </method>
            <method name="removeObjectMirror" type="void" line="943">
                <params>
                    <param name="object" type="ObjectReferenceImpl"/>
                </params>
                <declaration name="ref" type="SoftObjectReference" line="945"/>
                <scope line="946"/>
                <scope line="949"/>
            </method>
            <method name="removeObjectMirror" type="void" line="953">
                <params>
                    <param name="ref" type="SoftObjectReference"/>
                </params>
            </method>
            <method name="objectMirror" type="ObjectReferenceImpl" line="956">
                <params>
                    <param name="id" type="long"/>
                </params>
            </method>
            <method name="stringMirror" type="StringReferenceImpl" line="959">
                <params>
                    <param name="id" type="long"/>
                </params>
            </method>
            <method name="arrayMirror" type="ArrayReferenceImpl" line="962">
                <params>
                    <param name="id" type="long"/>
                </params>
            </method>
            <method name="threadMirror" type="ThreadReferenceImpl" line="965">
                <params>
                    <param name="id" type="long"/>
                </params>
            </method>
            <method name="threadGroupMirror" type="ThreadGroupReferenceImpl" line="968">
                <params>
                    <param name="id" type="long"/>
                </params>
            </method>
            <method name="classLoaderMirror" type="ClassLoaderReferenceImpl" line="971">
                <params>
                    <param name="id" type="long"/>
                </params>
            </method>
            <method name="classObjectMirror" type="ClassObjectReferenceImpl" line="974">
                <params>
                    <param name="id" type="long"/>
                </params>
            </method>
            <method name="getClasspath" type="JDWP.VirtualMachine.ClassPaths" line="977">
                <scope line="978">
                    <scope line="979"/>
                    <scope line="982"/>
                </scope>
            </method>
            <method name="classPath" type="List<String>" line="988"/>
            <method name="bootClassPath" type="List<String>" line="991"/>
            <method name="baseDirectory" type="String" line="994"/>
            <method name="setDefaultStratum" type="void" line="997">
                <params>
                    <param name="stratum" type="String"/>
                </params>
                <scope line="999"/>
                <scope line="1002"/>
                <scope line="1005"/>
            </method>
            <method name="getDefaultStratum" type="String" line="1009"/>
            <method name="threadGroupForJDI" type="ThreadGroup" line="1012"/>
            <class name="SoftObjectReference" line="1015">
                <extends class="SoftReference">
                    <type_params>
                        <type_param name="ObjectReferenceImpl"/>
                    </type_params>
                </extends>
                <declaration name="count" type="int" line="1016"/>
                <declaration name="key" type="Long" line="1017"/>
                <method name="SoftObjectReference" type="constructor" line="1018">
                    <params>
                        <param name="key" type="Long"/>
                        <param name="mirror" type="ObjectReferenceImpl"/>
                        <param name="queue" type="ReferenceQueue<ObjectReferenceImpl>"/>
                    </params>
                </method>
                <method name="count" type="int" line="1023"/>
                <method name="incrementCount" type="void" line="1026"/>
                <method name="key" type="Long" line="1029"/>
                <method name="object" type="ObjectReferenceImpl" line="1032"/>
            </class>
        </class>
    </source>