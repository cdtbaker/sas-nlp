<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.jdi">
        <import package="com.sun.jdi"/>
        <import package="com.sun.jdi.event"/>
        <import package="com.sun.jdi.connect.spi.Connection"/>
        <import package="com.sun.jdi.event.EventSet"/>
        <import package="java.util"/>
        <import package="java.io.IOException"/>
        <class name="TargetVM" line="36">
            <comment line="47">
                TO DO: The limit numbers below are somewhat arbitrary and should
                 be configurable in the future.                
            </comment>
            <comment line="219">
                Events should not be constructed on this thread (the thread
                 which reads all data from the transport). This means that the
                 packet cannot be converted to real JDI objects as that may
                 involve further communications with the back end which would
                 deadlock.
                
                 Instead the whole packet is passed for lazy eval by a queue
                 reading thread.                
            </comment>
            <implements interface="Runnable"/>
            <declaration name="waitingQueue" type="Map&lt;String,Packet&gt;" line="37"/>
            <declaration name="shouldListen" type="boolean" line="38"/>
            <declaration name="eventQueues" type="List&lt;EventQueue&gt;" line="39"/>
            <declaration name="vm" type="VirtualMachineImpl" line="40"/>
            <declaration name="connection" type="Connection" line="41"/>
            <declaration name="readerThread" type="Thread" line="42"/>
            <declaration name="eventController" type="EventController" line="43"/>
            <declaration name="eventsHeld" type="boolean" line="44"/>
            <declaration name="OVERLOADED_QUEUE" type="int" line="50"/>
            <declaration name="UNDERLOADED_QUEUE" type="int" line="51"/>
            <method name="TargetVM" type="constructor" line="53">
                <params>
                    <param name="vm" type="VirtualMachineImpl"/>
                    <param name="connection" type="Connection"/>
                </params>
            </method>
            <method name="start" type="void" line="61"/>
            <method name="dumpPacket" type="void" line="65">
                <params>
                    <param name="packet" type="Packet"/>
                    <param name="sending" type="boolean"/>
                </params>
                <declaration name="direction" type="String" line="66"/>
                <scope line="67"/>
                <scope line="73">
                    <declaration name="type" type="String" line="74"/>
                </scope>
                <declaration name="line" type="StringBuffer" line="81"/>
                <scope line="83">
                    <scope line="84">
                        <declaration name="len" type="int" line="89"/>
                        <scope line="90"/>
                    </scope>
                    <declaration name="val" type="int" line="94"/>
                    <declaration name="str" type="String" line="95"/>
                    <scope line="96"/>
                </scope>
                <scope line="102"/>
            </method>
            <method name="run" type="void" line="107">
                <comment line="140">
                    It&apos;s a command                    
                </comment>
                <comment line="143">
                    if(p.errorCode != Packet.ReplyNoError) {
                    System.err.println(&quot;Packet &quot; + p.id + &quot; returned failure = &quot; + p.errorCode);                    
                </comment>
                <comment line="158">
                    Whoa! a reply without a sender. Problem.                    
                </comment>
                <comment line="159">
                    FIX ME! Need to post an error.                    
                </comment>
                <comment line="174">
                    inform the VM mamager that this VM is history                    
                </comment>
                <comment line="177">
                    close down all the event queues                    
                </comment>
                <comment line="178">
                    Closing a queue causes a VMDisconnectEvent to                    
                </comment>
                <comment line="179">
                    be put onto the queue.                    
                </comment>
                <comment line="187">
                    indirectly throw VMDisconnectedException to                    
                </comment>
                <comment line="188">
                    command requesters.                    
                </comment>
                <scope line="108"/>
                <declaration name="p" type="Packet" line="111"/>
                <declaration name="idString" type="String" line="112"/>
                <scope line="114">
                    <declaration name="done" type="boolean" line="116"/>
                    <scope line="117">
                        <declaration name="b" type="byte" line="118"/>
                        <scope line="119"/>
                    </scope>
                    <scope line="123"/>
                    <scope line="127">
                        <scope line="129"/>
                        <scope line="131"/>
                    </scope>
                    <scope line="135"/>
                    <scope line="139"/>
                    <scope line="142">
                        <scope line="150"/>
                        <scope line="157"/>
                        <scope line="168"/>
                    </scope>
                </scope>
                <scope line="180">
                    <declaration name="iter" type="Iterator" line="181"/>
                    <scope line="182"/>
                </scope>
                <scope line="189">
                    <declaration name="iter" type="Iterator" line="190"/>
                    <scope line="191">
                        <declaration name="packet" type="Packet" line="192"/>
                        <scope line="193"/>
                    </scope>
                </scope>
                <scope line="200"/>
            </method>
            <method name="handleVMCommand" type="void" line="205">
                <params>
                    <param name="p" type="Packet"/>
                </params>
            </method>
            <method name="handleEventCmdSet" type="void" line="227">
                <params>
                    <param name="p" type="Packet"/>
                </params>
                <declaration name="eventSet" type="EventSet" line="228"/>
                <scope line="230"/>
            </method>
            <method name="eventController" type="EventController" line="235">
                <scope line="236"/>
            </method>
            <method name="controlEventFlow" type="void" line="242">
                <params>
                    <param name="maxQueueSize" type="int"/>
                </params>
                <scope line="243"/>
                <scope line="246"/>
            </method>
            <method name="notifyDequeueEventSet" type="void" line="252">
                <declaration name="maxQueueSize" type="int" line="253"/>
                <scope line="254">
                    <declaration name="iter" type="Iterator" line="255"/>
                    <scope line="256">
                        <declaration name="queue" type="EventQueueImpl" line="257"/>
                    </scope>
                </scope>
            </method>
            <method name="queueEventSet" type="void" line="264">
                <params>
                    <param name="eventSet" type="EventSet"/>
                </params>
                <declaration name="maxQueueSize" type="int" line="265"/>
                <scope line="267">
                    <declaration name="iter" type="Iterator" line="268"/>
                    <scope line="269">
                        <declaration name="queue" type="EventQueueImpl" line="270"/>
                    </scope>
                </scope>
            </method>
            <method name="send" type="void" line="279">
                <params>
                    <param name="packet" type="Packet"/>
                </params>
                <declaration name="id" type="String" line="280"/>
                <scope line="282"/>
                <scope line="286"/>
                <scope line="290"/>
                <scope line="292"/>
            </method>
            <method name="waitForReply" type="void" line="297">
                <params>
                    <param name="packet" type="Packet"/>
                </params>
                <scope line="298">
                    <scope line="299">
                        <scope line="300"/>
                        <scope line="300"/>
                    </scope>
                    <scope line="303"/>
                </scope>
            </method>
            <method name="addEventQueue" type="void" line="309">
                <params>
                    <param name="queue" type="EventQueueImpl"/>
                </params>
                <scope line="310"/>
            </method>
            <method name="stopListening" type="void" line="316">
                <scope line="317"/>
                <scope line="321"/>
                <scope line="323"/>
            </method>
            <class name="EventController" line="326">
                <extends class="Thread"/>
                <declaration name="vm" type="VirtualMachineImpl" line="327"/>
                <declaration name="controlRequest" type="int" line="328"/>
                <method name="EventController" type="constructor" line="330">
                    <params>
                        <param name="vm" type="VirtualMachineImpl"/>
                    </params>
                </method>
                <method name="hold" type="void" line="338"/>
                <method name="release" type="void" line="343"/>
                <method name="run" type="void" line="348">
                    <comment line="365">
                        Don&apos;t want to terminate the thread, so the
                         stack trace is printed and we continue.                        
                    </comment>
                    <scope line="349">
                        <declaration name="currentRequest" type="int" line="350"/>
                        <scope line="351">
                            <scope line="352">
                                <scope line="353"/>
                                <scope line="353"/>
                            </scope>
                        </scope>
                        <scope line="358">
                            <scope line="359"/>
                            <scope line="361"/>
                        </scope>
                        <scope line="364"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>