<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.hat.internal.model">
        <import package="java.io.File"/>
        <import package="java.io.FileInputStream"/>
        <import package="java.io.InputStreamReader"/>
        <import package="java.io.Reader"/>
        <import package="java.io.BufferedReader"/>
        <import package="java.io.IOException"/>
        <import package="java.util.Hashtable"/>
        <class name="ReachableExcludesImpl" line="44">
            <comment line="58">
                Hashtable&lt;String, String&gt;, used as a bag                
            </comment>
            <implements interface="ReachableExcludes"/>
            <javadoc line="44">
                This represents a set of data members that should be excluded from the
                  reachable objects query.
                  This is useful to exclude observers from the
                  transitive closure of objects reachable from a given object, allowing
                  some kind of real determination of the &quot;size&quot; of that object.                
                <author>
                    Bill Foote                    
                </author>
            </javadoc>
            <declaration name="excludesFile" type="File" line="55"/>
            <declaration name="lastModified" type="long" line="56"/>
            <declaration name="methods" type="Hashtable" line="57"/>
            <javadoc line="59">
                Create a new ReachableExcludesImpl over the given file.  The file will be
                  re-read whenever the timestamp changes.                
            </javadoc>
            <method name="ReachableExcludesImpl" type="constructor" line="63">
                <params>
                    <param name="excludesFile" type="File"/>
                </params>
            </method>
            <method name="readFileIfNeeded" type="void" line="68">
                <scope line="69">
                    <scope line="70">
                        <scope line="71"/>
                    </scope>
                </scope>
            </method>
            <method name="readFile" type="void" line="78">
                <comment line="91">
                    We want this to be atomic                    
                </comment>
                <declaration name="lm" type="long" line="79"/>
                <declaration name="m" type="Hashtable&lt;String,String&gt;" line="80"/>
                <scope line="82">
                    <declaration name="r" type="BufferedReader" line="83"/>
                    <declaration name="method" type="String" line="86"/>
                    <scope line="87"/>
                </scope>
                <scope line="92"/>
            </method>
            <javadoc line="97">
                @return true iff the given field is on the histlist of excluded
                  fields.                
            </javadoc>
            <method name="isExcluded" type="boolean" line="101">
                <params>
                    <param name="fieldName" type="String"/>
                </params>
            </method>
        </class>
    </source>