<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.gui">
        <import package="java.io"/>
        <import package="java.util"/>
        <import package="javax.swing"/>
        <import package="javax.swing.tree"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="com.sun.tools.example.debug.bdi"/>
        <class name="SourceTreeTool" line="38">
            <extends class="JPanel"/>
            <declaration name="serialVersionUID" type="long" line="40"/>
            <declaration name="env" type="Environment" line="42"/>
            <declaration name="runtime" type="ExecutionManager" line="44"/>
            <declaration name="sourceManager" type="SourceManager" line="45"/>
            <declaration name="classManager" type="ClassManager" line="46"/>
            <declaration name="tree" type="JTree" line="48"/>
            <declaration name="root" type="SourceTreeNode" line="49"/>
            <declaration name="sourcePath" type="SearchPath" line="50"/>
            <declaration name="interpreter" type="CommandInterpreter" line="51"/>
            <declaration name="HEADING" type="String" line="53"/>
            <method name="SourceTreeTool" type="constructor" line="55">
                <params>
                    <param name="env" type="Environment"/>
                </params>
                <comment line="69">
                    Create a tree that allows one selection at a time.                    
                </comment>
                <comment line="73">
                    Listen for when the selection changes.
                    tree.addTreeSelectionListener(new TreeSelectionListener() {
                    public void valueChanged(TreeSelectionEvent e) {
                    SourceTreeNode node = (SourceTreeNode)
                    (e.getPath().getLastPathComponent());
                    interpreter.executeCommand(&quot;view &quot; + node.getRelativePath());
                    }
                    });                    
                </comment>
                <comment line="93">
                    If user clicks on leaf, select it, and issue &apos;view&apos; command.                    
                </comment>
                <comment line="107">
                    Create listener for source path changes.                    
                </comment>
                <comment line="112">
                    ### remove listeners on exit!                    
                </comment>
                <anonymous_class line="83">
                    <method name="mouseClicked" type="void" line="85">
                        <params>
                            <param name="e" type="MouseEvent"/>
                        </params>
                        <comment line="93">
                            If user clicks on leaf, select it, and issue &apos;view&apos; command.                            
                        </comment>
                        <declaration name="selRow" type="int" line="86"/>
                        <declaration name="selPath" type="TreePath" line="87"/>
                        <scope line="88">
                            <scope line="89">
                                <declaration name="node" type="SourceTreeNode" line="90"/>
                                <scope line="93"/>
                            </scope>
                        </scope>
                    </method>
                </anonymous_class>
                <declaration name="ml" type="MouseListener" line="83"/>
                <declaration name="treeView" type="JScrollPane" line="103"/>
                <declaration name="listener" type="SourceTreeToolListener" line="108"/>
            </method>
            <class name="SourceTreeToolListener" line="114">
                <comment line="197">
                    -- interface TreeNode --                    
                </comment>
                <comment line="199">
                    Returns the child &lt;code&gt;TreeNode&lt;code&gt; at index
                     &lt;code&gt;childIndex&lt;code&gt;.                    
                </comment>
                <implements interface="SourceListener"/>
                <method name="sourcepathChanged" type="void" line="117">
                    <params>
                        <param name="e" type="SourcepathChangedEvent"/>
                    </params>
                </method>
            </class>
            <class name="SourceOrDirectoryFilter" line="125">
                <comment line="197">
                    -- interface TreeNode --                    
                </comment>
                <comment line="199">
                    Returns the child &lt;code&gt;TreeNode&lt;code&gt; at index
                     &lt;code&gt;childIndex&lt;code&gt;.                    
                </comment>
                <implements interface="FilenameFilter"/>
                <method name="accept" type="boolean" line="127">
                    <params>
                        <param name="dir" type="File"/>
                        <param name="name" type="String"/>
                    </params>
                </method>
            </class>
            <declaration name="filter" type="FilenameFilter" line="133"/>
            <method name="createDirectoryTree" type="SourceTreeNode" line="135">
                <params>
                    <param name="label" type="String"/>
                </params>
                <scope line="136"/>
                <scope line="138"/>
            </method>
            <class name="SourceTreeNode" line="145">
                <comment line="197">
                    -- interface TreeNode --                    
                </comment>
                <comment line="199">
                    Returns the child &lt;code&gt;TreeNode&lt;code&gt; at index
                     &lt;code&gt;childIndex&lt;code&gt;.                    
                </comment>
                <implements interface="TreeNode"/>
                <declaration name="name" type="String" line="147"/>
                <declaration name="isDirectory" type="boolean" line="148"/>
                <declaration name="parent" type="SourceTreeNode" line="149"/>
                <declaration name="children" type="SourceTreeNode[]" line="150"/>
                <declaration name="relativePath" type="String" line="151"/>
                <declaration name="isExpanded" type="boolean" line="152"/>
                <method name="SourceTreeNode" type="constructor" line="157">
                    <params>
                        <param name="label" type="String"/>
                        <param name="parent" type="SourceTreeNode"/>
                        <param name="relativePath" type="String"/>
                        <param name="isDirectory" type="boolean"/>
                    </params>
                </method>
                <method name="toString" type="String" line="165"/>
                <method name="getRelativePath" type="String" line="169"/>
                <method name="expandIfNeeded" type="void" line="173">
                    <scope line="174">
                        <scope line="175">
                            <declaration name="files" type="String[]" line="176"/>
                            <scope line="178">
                                <declaration name="childName" type="String" line="179"/>
                                <declaration name="file" type="File" line="183"/>
                                <declaration name="isDir" type="boolean" line="184"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="190"/>
                </method>
                <method name="getChildAt" type="TreeNode" line="203">
                    <params>
                        <param name="childIndex" type="int"/>
                    </params>
                </method>
                <javadoc line="208">
                    Returns the number of children &lt;code&gt;TreeNode&lt;/code&gt;s the receiver
                      contains.                    
                </javadoc>
                <method name="getChildCount" type="int" line="213"/>
                <javadoc line="218">
                    Returns the parent &lt;code&gt;TreeNode&lt;/code&gt; of the receiver.                    
                </javadoc>
                <method name="getParent" type="TreeNode" line="222"/>
                <javadoc line="226">
                    Returns the index of &lt;code&gt;node&lt;/code&gt; in the receivers children.
                      If the receiver does not contain &lt;code&gt;node&lt;/code&gt;, -1 will be
                      returned.                    
                </javadoc>
                <method name="getIndex" type="int" line="232">
                    <params>
                        <param name="node" type="TreeNode"/>
                    </params>
                    <scope line="234">
                        <scope line="235"/>
                    </scope>
                </method>
                <javadoc line="242">
                    Returns true if the receiver allows children.                    
                </javadoc>
                <method name="getAllowsChildren" type="boolean" line="246"/>
                <javadoc line="250">
                    Returns true if the receiver is a leaf.                    
                </javadoc>
                <method name="isLeaf" type="boolean" line="254"/>
                <javadoc line="259">
                    Returns the children of the receiver as an Enumeration.                    
                </javadoc>
                <method name="children" type="Enumeration" line="263">
                    <anonymous_class line="265">
                        <declaration name="i" type="int" line="266"/>
                        <method name="hasMoreElements" type="boolean" line="268"/>
                        <method name="nextElement" type="Object" line="272">
                            <scope line="273"/>
                        </method>
                    </anonymous_class>
                </method>
            </class>
        </class>
    </source>