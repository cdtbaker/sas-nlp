<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.jdi">
        <import package="com.sun.jdi"/>
        <import package="com.sun.jdi.connect"/>
        <import package="com.sun.jdi.connect.spi"/>
        <import package="java.net"/>
        <import package="java.io"/>
        <import package="java.util.Map"/>
        <import package="java.util.ResourceBundle"/>
        <class name="SocketTransportService" line="9">
            <extends class="TransportService"/>
            <declaration name="messages" type="ResourceBundle" line="10"/>
            <class name="SocketListenKey" line="11">
                <extends class="ListenKey"/>
                <javadoc line="11">
                    The listener returned by startListening encapsulates
                      the ServerSocket.                    
                </javadoc>
                <declaration name="ss" type="ServerSocket" line="16"/>
                <method name="SocketListenKey" type="constructor" line="17">
                    <params>
                        <param name="ss" type="ServerSocket"/>
                    </params>
                </method>
                <method name="socket" type="ServerSocket" line="20"/>
                <method name="address" type="String" line="23">
                    <declaration name="address" type="InetAddress" line="24"/>
                    <scope line="25">
                        <scope line="26"/>
                        <scope line="29">
                            <declaration name="loopback" type="byte[]" line="30"/>
                            <scope line="31"/>
                            <scope line="34"/>
                        </scope>
                    </scope>
                    <declaration name="result" type="String" line="39"/>
                    <declaration name="hostname" type="String" line="40"/>
                    <declaration name="hostaddr" type="String" line="41"/>
                    <scope line="42">
                        <scope line="43"/>
                        <scope line="46"/>
                    </scope>
                    <scope line="50"/>
                </method>
                <method name="toString" type="String" line="55"/>
            </class>
            <javadoc line="59">
                Handshake with the debuggee                
            </javadoc>
            <method name="handshake" type="void" line="62">
                <params>
                    <param name="s" type="Socket"/>
                    <param name="timeout" type="long"/>
                </params>
                <declaration name="hello" type="byte[]" line="64"/>
                <declaration name="b" type="byte[]" line="66"/>
                <declaration name="received" type="int" line="67"/>
                <scope line="68">
                    <declaration name="n" type="int" line="69"/>
                    <scope line="70"/>
                    <scope line="73"/>
                    <scope line="76"/>
                </scope>
                <scope line="82">
                    <scope line="83"/>
                </scope>
            </method>
            <javadoc line="89">
                No-arg constructor                
            </javadoc>
            <method name="SocketTransportService" type="constructor" line="92"/>
            <javadoc line="94">
                The name of this transport service                
            </javadoc>
            <method name="name" type="String" line="97"/>
            <javadoc line="100">
                Return localized description of this transport service                
            </javadoc>
            <method name="description" type="String" line="103">
                <scope line="104">
                    <scope line="105"/>
                </scope>
            </method>
            <javadoc line="111">
                Return the capabilities of this transport service                
            </javadoc>
            <method name="capabilities" type="Capabilities" line="114"/>
            <javadoc line="117">
                Attach to the specified address with optional attach and handshake
                  timeout.                
            </javadoc>
            <method name="attach" type="Connection" line="121">
                <params>
                    <param name="address" type="String"/>
                    <param name="attachTimeout" type="long"/>
                    <param name="handshakeTimeout" type="long"/>
                </params>
                <scope line="122"/>
                <scope line="125"/>
                <declaration name="splitIndex" type="int" line="128"/>
                <declaration name="host" type="String" line="129"/>
                <declaration name="portStr" type="String" line="130"/>
                <scope line="131"/>
                <scope line="135"/>
                <declaration name="port" type="int" line="139"/>
                <scope line="140"/>
                <scope line="143"/>
                <declaration name="sa" type="InetSocketAddress" line="146"/>
                <declaration name="s" type="Socket" line="147"/>
                <scope line="148"/>
                <scope line="151">
                    <scope line="152"/>
                    <scope line="155"/>
                </scope>
                <scope line="159"/>
                <scope line="162">
                    <scope line="163"/>
                    <scope line="166"/>
                </scope>
            </method>
            <method name="startListening" type="ListenKey" line="172">
                <params>
                    <param name="localaddress" type="String"/>
                    <param name="port" type="int"/>
                </params>
                <declaration name="sa" type="InetSocketAddress" line="173"/>
                <scope line="174"/>
                <scope line="177"/>
                <declaration name="ss" type="ServerSocket" line="180"/>
            </method>
            <javadoc line="184">
                Listen on the specified address                
            </javadoc>
            <method name="startListening" type="ListenKey" line="187">
                <params>
                    <param name="address" type="String"/>
                </params>
                <scope line="188"/>
                <declaration name="splitIndex" type="int" line="191"/>
                <declaration name="localaddr" type="String" line="192"/>
                <scope line="193"/>
                <declaration name="port" type="int" line="197"/>
                <scope line="198"/>
                <scope line="201"/>
            </method>
            <javadoc line="206">
                Listen on the default address                
            </javadoc>
            <method name="startListening" type="ListenKey" line="209"/>
            <javadoc line="212">
                Stop the listener                
            </javadoc>
            <method name="stopListening" type="void" line="215">
                <params>
                    <param name="listener" type="ListenKey"/>
                </params>
                <scope line="216"/>
                <scope line="219">
                    <declaration name="ss" type="ServerSocket" line="220"/>
                    <scope line="221"/>
                </scope>
            </method>
            <javadoc line="227">
                Accept a connection from a debuggee and handshake with it.                
            </javadoc>
            <method name="accept" type="Connection" line="230">
                <params>
                    <param name="listener" type="ListenKey"/>
                    <param name="acceptTimeout" type="long"/>
                    <param name="handshakeTimeout" type="long"/>
                </params>
                <scope line="231"/>
                <scope line="234"/>
                <declaration name="ss" type="ServerSocket" line="237"/>
                <scope line="238">
                    <scope line="240"/>
                </scope>
                <declaration name="s" type="Socket" line="245"/>
                <scope line="246"/>
                <scope line="249"/>
            </method>
            <method name="toString" type="String" line="255"/>
        </class>
        <class name="SocketConnection" line="259">
            <extends class="Connection"/>
            <declaration name="socket" type="Socket" line="260"/>
            <declaration name="closed" type="boolean" line="261"/>
            <declaration name="socketOutput" type="OutputStream" line="262"/>
            <declaration name="socketInput" type="InputStream" line="263"/>
            <declaration name="receiveLock" type="Object" line="264"/>
            <declaration name="sendLock" type="Object" line="265"/>
            <declaration name="closeLock" type="Object" line="266"/>
            <method name="SocketConnection" type="constructor" line="267">
                <params>
                    <param name="socket" type="Socket"/>
                </params>
            </method>
            <method name="close" type="void" line="273">
                <scope line="274">
                    <scope line="275"/>
                </scope>
            </method>
            <method name="isOpen" type="boolean" line="284">
                <scope line="285"/>
            </method>
            <method name="readPacket" type="byte[]" line="289">
                <scope line="290"/>
                <scope line="293">
                    <declaration name="b1" type="int" line="294"/>
                    <scope line="295"/>
                    <scope line="301">
                        <scope line="302"/>
                        <scope line="305"/>
                    </scope>
                    <scope line="309"/>
                    <scope line="312"/>
                    <declaration name="len" type="int" line="315"/>
                    <scope line="316"/>
                    <declaration name="b" type="byte" line="319"/>
                    <declaration name="off" type="int" line="324"/>
                    <scope line="326">
                        <declaration name="count" type="int" line="327"/>
                        <scope line="328"/>
                        <scope line="331">
                            <scope line="332"/>
                            <scope line="335"/>
                        </scope>
                        <scope line="339"/>
                    </scope>
                </scope>
            </method>
            <method name="writePacket" type="void" line="348">
                <params>
                    <param name="b" type="byte"/>
                </params>
                <scope line="349"/>
                <scope line="352"/>
                <declaration name="b0" type="int" line="355"/>
                <declaration name="b1" type="int" line="356"/>
                <declaration name="b2" type="int" line="357"/>
                <declaration name="b3" type="int" line="358"/>
                <declaration name="len" type="int" line="359"/>
                <scope line="360"/>
                <scope line="363"/>
                <scope line="366">
                    <scope line="367"/>
                    <scope line="370">
                        <scope line="371"/>
                        <scope line="374"/>
                    </scope>
                </scope>
            </method>
        </class>
        <class name="SocketTransportServiceCapabilities" line="381">
            <extends class="TransportService.Capabilities"/>
            <method name="supportsMultipleConnections" type="boolean" line="382"/>
            <method name="supportsAttachTimeout" type="boolean" line="385"/>
            <method name="supportsAcceptTimeout" type="boolean" line="388"/>
            <method name="supportsHandshakeTimeout" type="boolean" line="391"/>
        </class>
    </source>