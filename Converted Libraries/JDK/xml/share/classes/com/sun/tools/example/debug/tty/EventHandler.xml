<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.tty">
        <import package="com.sun.jdi"/>
        <import package="com.sun.jdi.event"/>
        <import package="com.sun.jdi.request.EventRequest"/>
        <class name="EventHandler" line="32">
            <implements interface="Runnable"/>
            <declaration name="notifier" type="EventNotifier" line="34"/>
            <declaration name="thread" type="Thread" line="35"/>
            <declaration name="connected" type="boolean" line="36"/>
            <declaration name="completed" type="boolean" line="37"/>
            <declaration name="shutdownMessageKey" type="String" line="38"/>
            <declaration name="stopOnVMStart" type="boolean" line="39"/>
            <method name="EventHandler" type="constructor" line="41">
                <params>
                    <param name="notifier" type="EventNotifier"/>
                    <param name="stopOnVMStart" type="boolean"/>
                </params>
            </method>
            <method name="shutdown" type="void" line="48">
                <comment line="50">
                    force run() loop termination                    
                </comment>
                <scope line="51">
                    <scope line="52"/>
                    <scope line="52"/>
                </scope>
            </method>
            <method name="run" type="void" line="57">
                <comment line="76">
                    Do nothing. Any changes will be seen at top of loop.                    
                </comment>
                <declaration name="queue" type="EventQueue" line="58"/>
                <scope line="59">
                    <scope line="60">
                        <declaration name="eventSet" type="EventSet" line="61"/>
                        <declaration name="resumeStoppedApp" type="boolean" line="62"/>
                        <declaration name="it" type="EventIterator" line="63"/>
                        <scope line="64"/>
                        <scope line="68"/>
                        <scope line="70"/>
                    </scope>
                    <scope line="74"/>
                    <scope line="76"/>
                </scope>
                <scope line="81"/>
            </method>
            <method name="handleEvent" type="boolean" line="87">
                <params>
                    <param name="event" type="Event"/>
                </params>
                <scope line="90"/>
                <scope line="92"/>
                <scope line="94"/>
                <scope line="96"/>
                <scope line="98"/>
                <scope line="100"/>
                <scope line="102"/>
                <scope line="104"/>
                <scope line="106"/>
                <scope line="108"/>
                <scope line="110"/>
                <scope line="112"/>
            </method>
            <declaration name="vmDied" type="boolean" line="117"/>
            <method name="handleExitEvent" type="boolean" line="118">
                <params>
                    <param name="event" type="Event"/>
                </params>
                <scope line="119"/>
                <scope line="122">
                    <scope line="124"/>
                </scope>
                <scope line="129"/>
            </method>
            <method name="handleDisconnectedException" type="void" line="135">
                <comment line="137">
                    A VMDisconnectedException has happened while dealing with
                     another event. We need to flush the event queue, dealing only
                     with exit events (VMDeath, VMDisconnect) so that we terminate
                     correctly.                    
                </comment>
                <comment line="152">
                    ignore                    
                </comment>
                <comment line="154">
                    ignore                    
                </comment>
                <declaration name="queue" type="EventQueue" line="142"/>
                <scope line="143">
                    <scope line="144">
                        <declaration name="eventSet" type="EventSet" line="145"/>
                        <declaration name="iter" type="EventIterator" line="146"/>
                        <scope line="147"/>
                    </scope>
                    <scope line="150"/>
                    <scope line="152"/>
                </scope>
            </method>
            <method name="eventThread" type="ThreadReference" line="158">
                <params>
                    <param name="event" type="Event"/>
                </params>
                <scope line="159"/>
                <scope line="161"/>
                <scope line="163"/>
                <scope line="165"/>
                <scope line="167"/>
                <scope line="169"/>
            </method>
            <method name="setCurrentThread" type="void" line="174">
                <params>
                    <param name="set" type="EventSet"/>
                </params>
                <comment line="178">
                    If any event in the set has a thread associated with it,
                     they all will, so just grab the first one.                    
                </comment>
                <comment line="182">
                    Is there a better way?                    
                </comment>
                <declaration name="thread" type="ThreadReference" line="175"/>
                <scope line="176">
                    <declaration name="event" type="Event" line="181"/>
                </scope>
                <scope line="183"/>
            </method>
            <method name="setCurrentThread" type="void" line="189">
                <params>
                    <param name="thread" type="ThreadReference"/>
                </params>
            </method>
            <method name="vmStartEvent" type="boolean" line="194">
                <params>
                    <param name="event" type="Event"/>
                </params>
                <declaration name="se" type="VMStartEvent" line="195"/>
            </method>
            <method name="breakpointEvent" type="boolean" line="200">
                <params>
                    <param name="event" type="Event"/>
                </params>
                <declaration name="be" type="BreakpointEvent" line="201"/>
            </method>
            <method name="methodEntryEvent" type="boolean" line="206">
                <params>
                    <param name="event" type="Event"/>
                </params>
                <declaration name="me" type="MethodEntryEvent" line="207"/>
            </method>
            <method name="methodExitEvent" type="boolean" line="212">
                <params>
                    <param name="event" type="Event"/>
                </params>
                <declaration name="me" type="MethodExitEvent" line="213"/>
            </method>
            <method name="fieldWatchEvent" type="boolean" line="217">
                <params>
                    <param name="event" type="Event"/>
                </params>
                <declaration name="fwe" type="WatchpointEvent" line="218"/>
            </method>
            <method name="stepEvent" type="boolean" line="223">
                <params>
                    <param name="event" type="Event"/>
                </params>
                <declaration name="se" type="StepEvent" line="224"/>
            </method>
            <method name="classPrepareEvent" type="boolean" line="229">
                <params>
                    <param name="event" type="Event"/>
                </params>
                <declaration name="cle" type="ClassPrepareEvent" line="230"/>
                <scope line="233"/>
                <scope line="236"/>
            </method>
            <method name="classUnloadEvent" type="boolean" line="241">
                <params>
                    <param name="event" type="Event"/>
                </params>
                <declaration name="cue" type="ClassUnloadEvent" line="242"/>
            </method>
            <method name="exceptionEvent" type="boolean" line="247">
                <params>
                    <param name="event" type="Event"/>
                </params>
                <declaration name="ee" type="ExceptionEvent" line="248"/>
            </method>
            <method name="threadDeathEvent" type="boolean" line="253">
                <params>
                    <param name="event" type="Event"/>
                </params>
                <declaration name="tee" type="ThreadDeathEvent" line="254"/>
            </method>
            <method name="threadStartEvent" type="boolean" line="259">
                <params>
                    <param name="event" type="Event"/>
                </params>
                <declaration name="tse" type="ThreadStartEvent" line="260"/>
            </method>
            <method name="vmDeathEvent" type="boolean" line="266">
                <params>
                    <param name="event" type="Event"/>
                </params>
            </method>
            <method name="vmDisconnectEvent" type="boolean" line="272">
                <params>
                    <param name="event" type="Event"/>
                </params>
            </method>
        </class>
    </source>