<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.gui">
        <import package="java.io"/>
        <import package="java.util"/>
        <import package="com.sun.jdi"/>
        <import package="com.sun.tools.example.debug.event"/>
        <import package="com.sun.tools.example.debug.bdi"/>
        <class name="ContextManager" line="7">
            <declaration name="classManager" type="ClassManager" line="8"/>
            <declaration name="runtime" type="ExecutionManager" line="9"/>
            <declaration name="mainClassName" type="String" line="10"/>
            <declaration name="vmArguments" type="String" line="11"/>
            <declaration name="commandArguments" type="String" line="12"/>
            <declaration name="remotePort" type="String" line="13"/>
            <declaration name="currentThread" type="ThreadReference" line="14"/>
            <declaration name="verbose" type="boolean" line="15"/>
            <declaration name="contextListeners" type="ArrayList&amp;lt;ContextListener&amp;gt;" line="16"/>
            <method name="ContextManager" type="constructor" line="17">
                <params>
                    <param name="env" type="Environment"/>
                </params>
                <declaration name="listener" type="ContextManagerListener" line="24"/>
            </method>
            <method name="getMainClassName" type="String" line="28"/>
            <method name="setMainClassName" type="void" line="31">
                <params>
                    <param name="mainClassName" type="String"/>
                </params>
            </method>
            <method name="getVmArguments" type="String" line="34"/>
            <method name="setVmArguments" type="void" line="37">
                <params>
                    <param name="vmArguments" type="String"/>
                </params>
            </method>
            <method name="getProgramArguments" type="String" line="40"/>
            <method name="setProgramArguments" type="void" line="43">
                <params>
                    <param name="commandArguments" type="String"/>
                </params>
            </method>
            <method name="getRemotePort" type="String" line="46"/>
            <method name="setRemotePort" type="void" line="49">
                <params>
                    <param name="remotePort" type="String"/>
                </params>
            </method>
            <method name="getVerboseFlag" type="boolean" line="52"/>
            <method name="setVerboseFlag" type="void" line="55">
                <params>
                    <param name="verbose" type="boolean"/>
                </params>
            </method>
            <method name="getCurrentThread" type="ThreadReference" line="58"/>
            <method name="setCurrentThread" type="void" line="61">
                <params>
                    <param name="t" type="ThreadReference"/>
                </params>
                <scope line="62"/>
            </method>
            <method name="setCurrentThreadInvalidate" type="void" line="67">
                <params>
                    <param name="t" type="ThreadReference"/>
                </params>
            </method>
            <method name="invalidateCurrentThread" type="void" line="71"/>
            <javadoc line="74">
                public int getCurrentFrameIndex() {
                  return getCurrentFrameIndex(currentThreadInfo);
                  }                
            </javadoc>
            <method name="getCurrentFrameIndex" type="int" line="79">
                <params>
                    <param name="t" type="ThreadReference"/>
                </params>
            </method>
            <method name="getCurrentFrameIndex" type="int" line="82">
                <params>
                    <param name="tinfo" type="ThreadInfo"/>
                </params>
                <scope line="83"/>
                <declaration name="currentFrame" type="Integer" line="86"/>
                <scope line="87"/>
                <scope line="90"/>
            </method>
            <method name="moveCurrentFrameIndex" type="int" line="94">
                <params>
                    <param name="t" type="ThreadReference"/>
                    <param name="count" type="int"/>
                </params>
            </method>
            <method name="setCurrentFrameIndex" type="int" line="97">
                <params>
                    <param name="t" type="ThreadReference"/>
                    <param name="newIndex" type="int"/>
                </params>
            </method>
            <method name="setCurrentFrameIndex" type="int" line="100">
                <params>
                    <param name="newIndex" type="int"/>
                </params>
                <scope line="101"/>
                <scope line="104"/>
            </method>
            <method name="setCurrentFrameIndex" type="int" line="108">
                <params>
                    <param name="t" type="ThreadReference"/>
                    <param name="x" type="int"/>
                    <param name="relative" type="boolean"/>
                </params>
                <declaration name="sameThread" type="boolean" line="109"/>
                <declaration name="tinfo" type="ThreadInfo" line="110"/>
                <scope line="111"/>
                <declaration name="maxIndex" type="int" line="114"/>
                <declaration name="oldIndex" type="int" line="115"/>
                <declaration name="newIndex" type="int" line="116"/>
                <scope line="117"/>
                <scope line="120"/>
                <scope line="123"/>
            </method>
            <method name="setCurrentFrameIndex" type="void" line="128">
                <params>
                    <param name="tinfo" type="ThreadInfo"/>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="getCurrentFrame" type="StackFrame" line="132"/>
            <method name="getCurrentFrame" type="StackFrame" line="135">
                <params>
                    <param name="t" type="ThreadReference"/>
                </params>
            </method>
            <method name="getCurrentFrame" type="StackFrame" line="138">
                <params>
                    <param name="tinfo" type="ThreadInfo"/>
                </params>
                <declaration name="index" type="int" line="139"/>
                <scope line="140"/>
                <scope line="143"/>
            </method>
            <method name="addContextListener" type="void" line="147">
                <params>
                    <param name="cl" type="ContextListener"/>
                </params>
            </method>
            <method name="removeContextListener" type="void" line="150">
                <params>
                    <param name="cl" type="ContextListener"/>
                </params>
            </method>
            <method name="notifyCurrentThreadChanged" type="void" line="153">
                <params>
                    <param name="t" type="ThreadReference"/>
                </params>
                <declaration name="tinfo" type="ThreadInfo" line="154"/>
                <declaration name="index" type="int" line="155"/>
                <scope line="156"/>
            </method>
            <method name="notifyCurrentFrameChanged" type="void" line="162">
                <params>
                    <param name="t" type="ThreadReference"/>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="notifyCurrentFrameChanged" type="void" line="165">
                <params>
                    <param name="tinfo" type="ThreadInfo"/>
                    <param name="index" type="int"/>
                    <param name="invalidate" type="boolean"/>
                </params>
                <declaration name="l" type="ArrayList&amp;lt;ContextListener&amp;gt;" line="166"/>
                <declaration name="evt" type="CurrentFrameChangedEvent" line="167"/>
                <scope line="168"/>
            </method>
            <class name="ContextManagerListener" line="172">
                <extends class="JDIAdapter"/>
                <implements interface="SessionListener"/>
                <implements interface="JDIListener"/>
                <method name="sessionStart" type="void" line="173">
                    <params>
                        <param name="e" type="EventObject"/>
                    </params>
                </method>
                <method name="sessionInterrupt" type="void" line="176">
                    <params>
                        <param name="e" type="EventObject"/>
                    </params>
                </method>
                <method name="sessionContinue" type="void" line="179">
                    <params>
                        <param name="e" type="EventObject"/>
                    </params>
                </method>
                <method name="locationTrigger" type="void" line="182">
                    <params>
                        <param name="e" type="LocationTriggerEventSet"/>
                    </params>
                </method>
                <method name="exception" type="void" line="185">
                    <params>
                        <param name="e" type="ExceptionEventSet"/>
                    </params>
                </method>
                <method name="vmDisconnect" type="void" line="188">
                    <params>
                        <param name="e" type="VMDisconnectEventSet"/>
                    </params>
                </method>
            </class>
            <javadoc line="192">
                Add a -classpath argument to the arguments passed to the exec&apos;ed
                  VM with the contents of CLASSPATH environment variable,
                  if -classpath was not already specified.                
                <param>
                    javaArgs the arguments to the VM being exec&apos;d that
                      potentially has a user specified -classpath argument.                    
                </param>
                <return>
                    a javaArgs whose -classpath option has been added                    
                </return>
            </javadoc>
            <method name="processClasspathDefaults" type="String" line="200">
                <params>
                    <param name="javaArgs" type="String"/>
                </params>
                <scope line="201">
                    <declaration name="munged" type="StringBuffer" line="202"/>
                    <declaration name="classpath" type="SearchPath" line="203"/>
                    <scope line="204">
                        <declaration name="envcp" type="String" line="205"/>
                        <scope line="206"/>
                    </scope>
                    <scope line="210"/>
                </scope>
                <scope line="215"/>
            </method>
            <method name="appendPath" type="String" line="219">
                <params>
                    <param name="path1" type="String"/>
                    <param name="path2" type="String"/>
                </params>
                <scope line="220"/>
                <scope line="223"/>
                <scope line="226"/>
            </method>
        </class>
    </source>