<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.gui">
        <import package="java.io"/>
        <import package="java.util"/>
        <import package="com.sun.jdi"/>
        <import package="com.sun.tools.example.debug.bdi"/>
        <class name="CommandInterpreter" line="34">
            <comment line="46">
                ### Hack!  Should be local in each method used.                
            </comment>
            <comment line="64">
                The numbering of threads is relative to the current set of threads,
                 and may be affected by the creation and termination of new threads.
                 Commands issued using such thread ids will only give reliable behavior
                 relative to what was shown earlier in &apos;list&apos; commands if the VM is interrupted.
                 We need a better scheme.                
            </comment>
            <comment line="141">
                Command handlers.                
            </comment>
            <comment line="145">
                Command: classes                
            </comment>
            <comment line="157">
                Command: methods                
            </comment>
            <comment line="201">
                Command: threads                
            </comment>
            <comment line="293">
                Command: threadgroups                
            </comment>
            <comment line="307">
                Command: thread                
            </comment>
            <comment line="321">
                Command: threadgroup                
            </comment>
            <comment line="338">
                Command: run                
            </comment>
            <comment line="346">
                Command: load                
            </comment>
            <comment line="400">
                Command: connect                
            </comment>
            <comment line="410">
                Command: attach                
            </comment>
            <comment line="436">
                Command: detach                
            </comment>
            <comment line="442">
                Command: interrupt                
            </comment>
            <comment line="448">
                Command: suspend                
            </comment>
            <comment line="472">
                Command: resume                
            </comment>
            <comment line="496">
                Command: cont                
            </comment>
            <comment line="507">
                Command: step                
            </comment>
            <comment line="528">
                Command: stepi                
            </comment>
            <comment line="539">
                Command: next                
            </comment>
            <comment line="555">
                Command: nexti  (NEW)                
            </comment>
            <comment line="566">
                Command: kill                
            </comment>
            <comment line="675">
                Command: frame                
            </comment>
            <comment line="712">
                Command: where                
            </comment>
            <comment line="714">
                ### Should we insist that VM be interrupted here?
                ### There is an inconsistency between the &apos;where&apos; command
                ### and &apos;up&apos; and &apos;down&apos; in this respect.                
            </comment>
            <comment line="947">
                Command: list                
            </comment>
            <comment line="1030">
                Command: use
                 Get or set the source file path list.                
            </comment>
            <comment line="1043">
                Command: sourcepath
                 Get or set the source file path list.  (Alternate to &apos;use&apos;.)                
            </comment>
            <comment line="1056">
                Command: classpath
                 Get or set the class file path list.                
            </comment>
            <comment line="1069">
                Command: view
                 Display source for source file or class.                
            </comment>
            <comment line="1096">
                Command: locals
                 Print all local variables in current stack frame.                
            </comment>
            <comment line="1172">
                Print a stack variable.                
            </comment>
            <comment line="1184">
                Command: print
                 Evaluate an expression.                
            </comment>
            <comment line="1261">
                Display help message.                
            </comment>
            <comment line="1321">
                Execute a command.                
            </comment>
            <declaration name="echo" type="boolean" line="36"/>
            <declaration name="env" type="Environment" line="38"/>
            <declaration name="context" type="ContextManager" line="40"/>
            <declaration name="runtime" type="ExecutionManager" line="41"/>
            <declaration name="classManager" type="ClassManager" line="42"/>
            <declaration name="sourceManager" type="SourceManager" line="43"/>
            <declaration name="out" type="OutputSink" line="45"/>
            <declaration name="lastCommand" type="String" line="46"/>
            <method name="CommandInterpreter" type="constructor" line="48">
                <params>
                    <param name="env" type="Environment"/>
                </params>
            </method>
            <method name="CommandInterpreter" type="constructor" line="52">
                <params>
                    <param name="env" type="Environment"/>
                    <param name="echo" type="boolean"/>
                </params>
            </method>
            <declaration name="threads" type="ThreadReference[]" line="61"/>
            <method name="threads" type="ThreadReference[]" line="71">
                <scope line="72">
                    <declaration name="ti" type="ThreadIterator" line="73"/>
                    <declaration name="tlist" type="List&lt;ThreadReference&gt;" line="74"/>
                    <scope line="75"/>
                </scope>
            </method>
            <method name="findThread" type="ThreadReference" line="83">
                <params>
                    <param name="idToken" type="String"/>
                </params>
                <comment line="102">
                    env.failure(&quot;No thread for id \&quot;&quot; + idToken + &quot;\&quot;&quot;);                    
                </comment>
                <declaration name="id" type="String" line="84"/>
                <declaration name="thread" type="ThreadReference" line="85"/>
                <scope line="86"/>
                <scope line="88"/>
                <scope line="91">
                    <declaration name="threads" type="ThreadReference[]" line="92"/>
                    <declaration name="threadID" type="long" line="93"/>
                    <scope line="94">
                        <scope line="95"/>
                    </scope>
                    <scope line="100"/>
                </scope>
                <scope line="104"/>
            </method>
            <method name="allThreads" type="ThreadIterator" line="111">
                <comment line="114">
                    ### Why not use runtime.allThreads().iterator() ?                    
                </comment>
            </method>
            <method name="currentThreadGroupThreads" type="ThreadIterator" line="117"/>
            <method name="allThreadGroups" type="ThreadGroupIterator" line="122"/>
            <declaration name="defaultThreadGroup" type="ThreadGroupReference" line="127"/>
            <method name="getDefaultThreadGroup" type="ThreadGroupReference" line="129">
                <scope line="130"/>
            </method>
            <method name="setDefaultThreadGroup" type="void" line="136">
                <params>
                    <param name="tg" type="ThreadGroupReference"/>
                </params>
            </method>
            <method name="commandClasses" type="void" line="146">
                <comment line="149">
                    out.println(&quot;** classes list **&quot;);                    
                </comment>
                <declaration name="out" type="OutputSink" line="147"/>
                <scope line="149"/>
            </method>
            <method name="commandMethods" type="void" line="158">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="187">
                    ### Should validate class name syntax.                    
                </comment>
                <scope line="159"/>
                <declaration name="idClass" type="String" line="163"/>
                <declaration name="cls" type="ReferenceType" line="164"/>
                <scope line="165">
                    <declaration name="methods" type="List&lt;Method&gt;" line="166"/>
                    <declaration name="out" type="OutputSink" line="167"/>
                    <scope line="168">
                        <declaration name="method" type="Method" line="169"/>
                        <declaration name="it" type="Iterator&lt;String&gt;" line="172"/>
                        <scope line="173">
                            <scope line="174">
                                <scope line="176"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="185"/>
            </method>
            <method name="findClass" type="ReferenceType" line="191">
                <params>
                    <param name="pattern" type="String"/>
                </params>
                <comment line="195">
                    ### Should handle multiple results sensibly.                    
                </comment>
                <declaration name="results" type="List&lt;ReferenceType&gt;" line="192"/>
                <scope line="193"/>
            </method>
            <method name="commandThreads" type="void" line="202">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="203">
                    <declaration name="out" type="OutputSink" line="204"/>
                </scope>
                <declaration name="name" type="String" line="209"/>
                <declaration name="tg" type="ThreadGroupReference" line="210"/>
                <scope line="211"/>
                <scope line="213">
                    <declaration name="out" type="OutputSink" line="214"/>
                </scope>
            </method>
            <method name="findThreadGroup" type="ThreadGroupReference" line="220">
                <params>
                    <param name="name" type="String"/>
                </params>
                <comment line="222">
                    ### Issue: Uniqueness of thread group names is not enforced.                    
                </comment>
                <declaration name="tgi" type="ThreadGroupIterator" line="222"/>
                <scope line="223">
                    <declaration name="tg" type="ThreadGroupReference" line="224"/>
                    <scope line="225"/>
                </scope>
            </method>
            <method name="printThreadGroup" type="int" line="232">
                <params>
                    <param name="out" type="OutputSink"/>
                    <param name="tg" type="ThreadGroupReference"/>
                    <param name="iThread" type="int"/>
                </params>
                <comment line="265">
                    Right-justify the thread number at start of output string                    
                </comment>
                <comment line="286">
                    TODO ref mgt                    
                </comment>
                <declaration name="tlist" type="List&lt;ThreadReference&gt;" line="234"/>
                <declaration name="maxId" type="int" line="235"/>
                <declaration name="maxName" type="int" line="236"/>
                <scope line="237">
                    <declaration name="thr" type="ThreadReference" line="238"/>
                    <declaration name="len" type="int" line="239"/>
                    <scope line="240"/>
                    <declaration name="name" type="String" line="243"/>
                    <declaration name="iDot" type="int" line="244"/>
                    <scope line="245"/>
                    <scope line="248"/>
                </scope>
                <declaration name="maxNumString" type="String" line="252"/>
                <declaration name="maxNumDigits" type="int" line="253"/>
                <scope line="254">
                    <declaration name="thr" type="ThreadReference" line="255"/>
                    <declaration name="buf" type="char" line="256"/>
                    <scope line="257"/>
                    <declaration name="sbOut" type="StringBuffer" line="261"/>
                    <declaration name="numString" type="String" line="265"/>
                    <declaration name="iBuf" type="int" line="270"/>
                    <declaration name="name" type="String" line="273"/>
                    <declaration name="iDot" type="int" line="274"/>
                    <scope line="275"/>
                </scope>
                <scope line="284">
                    <scope line="285"/>
                </scope>
            </method>
            <method name="commandThreadGroups" type="void" line="294">
                <declaration name="it" type="ThreadGroupIterator" line="295"/>
                <declaration name="cnt" type="int" line="296"/>
                <declaration name="out" type="OutputSink" line="297"/>
                <scope line="298">
                    <declaration name="tg" type="ThreadGroupReference" line="299"/>
                </scope>
            </method>
            <method name="commandThread" type="void" line="308">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="316">
                    ### Should notify user.                    
                </comment>
                <scope line="309"/>
                <declaration name="thread" type="ThreadReference" line="313"/>
                <scope line="314"/>
            </method>
            <method name="commandThreadGroup" type="void" line="322">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="333">
                    ### Should notify user.                    
                </comment>
                <scope line="323"/>
                <declaration name="name" type="String" line="327"/>
                <declaration name="tg" type="ThreadGroupReference" line="328"/>
                <scope line="329"/>
                <scope line="331"/>
            </method>
            <method name="commandRun" type="void" line="339">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="340"/>
            </method>
            <method name="commandLoad" type="void" line="347">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="348"/>
            </method>
            <method name="doLoad" type="boolean" line="352">
                <params>
                    <param name="suspended" type="boolean"/>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="360">
                    Run from prevously-set class name.                    
                </comment>
                <comment line="377">
                    Allow VM arguments to be specified here?                    
                </comment>
                <comment line="390">
                    context.setVmArguments(vmArgs);                    
                </comment>
                <declaration name="clname" type="String" line="354"/>
                <scope line="356">
                    <scope line="358">
                        <scope line="360">
                            <declaration name="vmArgs" type="String" line="361"/>
                        </scope>
                        <scope line="367"/>
                    </scope>
                    <scope line="370"/>
                </scope>
                <scope line="373">
                    <declaration name="sbuf" type="StringBuffer" line="375"/>
                    <scope line="377">
                        <declaration name="tok" type="String" line="378"/>
                        <scope line="380"/>
                    </scope>
                    <declaration name="args" type="String" line="384"/>
                    <scope line="385">
                        <declaration name="vmArgs" type="String" line="386"/>
                    </scope>
                    <scope line="392"/>
                </scope>
            </method>
            <method name="commandConnect" type="void" line="401">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="402"/>
                <scope line="404"/>
            </method>
            <method name="commandAttach" type="void" line="411">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <declaration name="portName" type="String" line="412"/>
                <scope line="413">
                    <scope line="415">
                        <scope line="416"/>
                        <scope line="418"/>
                    </scope>
                    <scope line="421"/>
                </scope>
                <scope line="424">
                    <scope line="426"/>
                    <scope line="428"/>
                </scope>
            </method>
            <method name="commandDetach" type="void" line="437">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
            </method>
            <method name="commandInterrupt" type="void" line="443">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
            </method>
            <method name="commandSuspend" type="void" line="449">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="452">
                    Suspend all threads in the current thread group.
                    ### Issue: help message says default is all threads.
                    ### Behavior here agrees with &apos;jdb&apos;, however.                    
                </comment>
                <comment line="457">
                    TODO - don&apos;t suspend debugger threads                    
                </comment>
                <comment line="465">
                    thread.suspend();                    
                </comment>
                <scope line="450">
                    <declaration name="ti" type="ThreadIterator" line="454"/>
                    <scope line="455"/>
                </scope>
                <scope line="460">
                    <scope line="461">
                        <declaration name="thread" type="ThreadReference" line="462"/>
                        <scope line="463"/>
                    </scope>
                </scope>
            </method>
            <method name="commandResume" type="void" line="473">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="476">
                    Suspend all threads in the current thread group.
                    ### Issue: help message says default is all threads.
                    ### Behavior here agrees with &apos;jdb&apos;, however.                    
                </comment>
                <comment line="481">
                    TODO - don&apos;t suspend debugger threads                    
                </comment>
                <comment line="489">
                    thread.resume();                    
                </comment>
                <scope line="474">
                    <declaration name="ti" type="ThreadIterator" line="478"/>
                    <scope line="479"/>
                </scope>
                <scope line="484">
                    <scope line="485">
                        <declaration name="thread" type="ThreadReference" line="486"/>
                        <scope line="487"/>
                    </scope>
                </scope>
            </method>
            <method name="commandCont" type="void" line="497">
                <comment line="502">
                    ### failure?                    
                </comment>
                <scope line="498"/>
                <scope line="500"/>
            </method>
            <method name="commandStep" type="void" line="508">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <declaration name="current" type="ThreadReference" line="509"/>
                <scope line="510"/>
                <scope line="514">
                    <scope line="516"/>
                    <scope line="518"/>
                </scope>
                <scope line="521"/>
            </method>
            <method name="commandStepi" type="void" line="529">
                <declaration name="current" type="ThreadReference" line="530"/>
                <scope line="531"/>
            </method>
            <method name="commandNext" type="void" line="540">
                <declaration name="current" type="ThreadReference" line="541"/>
                <scope line="542"/>
                <scope line="546"/>
                <scope line="548"/>
            </method>
            <method name="commandNexti" type="void" line="556">
                <declaration name="current" type="ThreadReference" line="557"/>
                <scope line="558"/>
            </method>
            <method name="commandKill" type="void" line="567">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="569">
                    ### Should change the way in which thread ids and threadgroup names
                    ### are distinguished.                    
                </comment>
                <comment line="583">
                                        
                </comment>
                <comment line="584">
                    ### Should skip &quot;system&quot;?  Classic &apos;jdb&apos; does this.
                    ### Should deal with possible non-uniqueness of threadgroup names.                    
                </comment>
                <scope line="570"/>
                <scope line="574">
                    <declaration name="idToken" type="String" line="575"/>
                    <declaration name="thread" type="ThreadReference" line="576"/>
                    <scope line="577"/>
                    <scope line="581">
                        <declaration name="itg" type="ThreadGroupIterator" line="585"/>
                        <scope line="586">
                            <declaration name="tg" type="ThreadGroupReference" line="587"/>
                            <scope line="588">
                                <declaration name="it" type="ThreadIterator" line="589"/>
                                <scope line="590"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="604">
                // TODO
                  private void commandCatchException(StringTokenizer t) throws NoSessionException {}
                  // TODO
                  private void commandIgnoreException(StringTokenizer t) throws NoSessionException {}                
            </javadoc>
            <method name="readCount" type="int" line="615">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="612">
                    Command: up                    
                </comment>
                <comment line="614">
                    ### Print current frame after command?                    
                </comment>
                <declaration name="cnt" type="int" line="616"/>
                <scope line="617">
                    <declaration name="idToken" type="String" line="618"/>
                    <scope line="619"/>
                    <scope line="621"/>
                </scope>
            </method>
            <method name="commandUp" type="void" line="628">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <declaration name="current" type="ThreadReference" line="629"/>
                <scope line="630"/>
                <declaration name="nLevels" type="int" line="634"/>
                <scope line="635"/>
                <scope line="639">
                    <declaration name="delta" type="int" line="640"/>
                    <scope line="641"/>
                    <scope line="643"/>
                </scope>
                <scope line="646"/>
            </method>
            <method name="commandDown" type="void" line="651">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <declaration name="current" type="ThreadReference" line="652"/>
                <scope line="653"/>
                <declaration name="nLevels" type="int" line="657"/>
                <scope line="658"/>
                <scope line="662">
                    <declaration name="delta" type="int" line="663"/>
                    <scope line="664"/>
                    <scope line="666"/>
                </scope>
                <scope line="669"/>
            </method>
            <method name="commandFrame" type="void" line="676">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <declaration name="current" type="ThreadReference" line="677"/>
                <scope line="678"/>
                <scope line="682"/>
                <declaration name="idToken" type="String" line="686"/>
                <declaration name="n" type="int" line="687"/>
                <scope line="688"/>
                <scope line="690"/>
                <scope line="693"/>
                <scope line="697">
                    <declaration name="delta" type="int" line="698"/>
                    <scope line="699"/>
                    <scope line="701"/>
                    <scope line="703"/>
                </scope>
                <scope line="706"/>
            </method>
            <method name="commandWhere" type="void" line="718">
                <params>
                    <param name="t" type="StringTokenizer"/>
                    <param name="showPC" type="boolean"/>
                </params>
                <comment line="738">
                    ### Do we want to set current thread here?
                    ### Should notify user of change.                    
                </comment>
                <declaration name="current" type="ThreadReference" line="719"/>
                <scope line="720">
                    <scope line="721"/>
                </scope>
                <scope line="726">
                    <declaration name="token" type="String" line="727"/>
                    <scope line="728">
                        <declaration name="it" type="ThreadIterator" line="729"/>
                        <scope line="730">
                            <declaration name="thread" type="ThreadReference" line="731"/>
                        </scope>
                    </scope>
                    <scope line="735">
                        <declaration name="thread" type="ThreadReference" line="736"/>
                        <scope line="739"/>
                    </scope>
                </scope>
            </method>
            <method name="dumpStack" type="void" line="747">
                <params>
                    <param name="thread" type="ThreadReference"/>
                    <param name="showPC" type="boolean"/>
                </params>
                <comment line="749">
                    ### Check for these.
                    env.failure(&quot;Thread no longer exists.&quot;);
                    env.failure(&quot;Target VM must be in interrupted state.&quot;);
                    env.failure(&quot;Current thread isn&apos;t suspended.&quot;);
                    ### Should handle extremely long stack traces sensibly for user.                    
                </comment>
                <comment line="760">
                    ### Fix this!
                    ### Previously mishandled cases where thread was not current.
                    ### Now, prints all of the stack regardless of current frame.                    
                </comment>
                <comment line="764">
                    int frameIndex = context.getCurrentFrameIndex();                    
                </comment>
                <declaration name="stack" type="List&lt;StackFrame&gt;" line="753"/>
                <scope line="754"/>
                <scope line="756"/>
                <declaration name="frameIndex" type="int" line="762"/>
                <scope line="764"/>
                <scope line="766">
                    <declaration name="out" type="OutputSink" line="767"/>
                    <declaration name="nFrames" type="int" line="768"/>
                    <scope line="769">
                        <declaration name="frame" type="StackFrame" line="770"/>
                        <declaration name="loc" type="Location" line="771"/>
                        <declaration name="meth" type="Method" line="772"/>
                        <scope line="778"/>
                        <scope line="780">
                            <scope line="781"/>
                            <scope line="783"/>
                        </scope>
                        <scope line="790">
                            <declaration name="pc" type="long" line="791"/>
                            <scope line="792"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="listEventRequests" type="void" line="802">
                <comment line="804">
                    Print set breakpoints                    
                </comment>
                <declaration name="specs" type="List&lt;EventRequestSpec&gt;" line="804"/>
                <scope line="805"/>
                <scope line="807">
                    <declaration name="out" type="OutputSink" line="808"/>
                    <scope line="810"/>
                </scope>
            </method>
            <method name="parseBreakpointSpec" type="BreakpointSpec" line="817">
                <params>
                    <param name="bptSpec" type="String"/>
                </params>
                <comment line="821">
                    try {                    
                </comment>
                <comment line="823">
                    We can&apos;t use hasMoreTokens here because it will cause any leading
                     paren to be lost.                    
                </comment>
                <comment line="851">
                    Try stripping method from class.method token.                    
                </comment>
                <comment line="853">
                                        
                </comment>
                <comment line="854">
                                        
                </comment>
                <comment line="862">
                    ### Should throw exception with error message
                    out.println(&quot;Invalid method specification: &quot;
                                + methodName + rest);                    
                </comment>
                <comment line="867">
                    Trim the parens
                    ### What about spaces in arglist?                    
                </comment>
                <comment line="880">
                    } catch (Exception e) {
                                env.error(&quot;Exception attempting to create breakpoint: &quot; + e);
                                return null;
                            }                    
                </comment>
                <declaration name="t" type="StringTokenizer" line="818"/>
                <declaration name="bpSpec" type="BreakpointSpec" line="819"/>
                <declaration name="token" type="String" line="821"/>
                <declaration name="rest" type="String" line="824"/>
                <scope line="825"/>
                <scope line="827"/>
                <scope line="830">
                    <declaration name="sourceName" type="String" line="832"/>
                    <declaration name="lineToken" type="String" line="833"/>
                    <declaration name="lineNumber" type="int" line="834"/>
                    <scope line="835"/>
                </scope>
                <scope line="840">
                    <declaration name="classId" type="String" line="842"/>
                    <declaration name="lineToken" type="String" line="843"/>
                    <declaration name="lineNumber" type="int" line="844"/>
                    <scope line="845"/>
                </scope>
                <scope line="849">
                    <declaration name="idot" type="int" line="851"/>
                    <scope line="853"/>
                    <declaration name="methodName" type="String" line="856"/>
                    <declaration name="classId" type="String" line="857"/>
                    <declaration name="argumentList" type="List&lt;String&gt;" line="858"/>
                    <scope line="859">
                        <scope line="860"/>
                        <scope line="871"/>
                    </scope>
                </scope>
            </method>
            <method name="commandStop" type="void" line="886">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="894">
                    Ignore optional &quot;at&quot; or &quot;in&quot; token.
                     Allowed for backward compatibility.                    
                </comment>
                <comment line="906">
                    ### Add sanity-checks for deferred breakpoint.                    
                </comment>
                <declaration name="token" type="String" line="887"/>
                <scope line="889"/>
                <scope line="891">
                    <scope line="895">
                        <scope line="896"/>
                        <scope line="898"/>
                    </scope>
                    <declaration name="bpSpec" type="BreakpointSpec" line="903"/>
                    <scope line="904"/>
                    <scope line="907"/>
                </scope>
            </method>
            <method name="commandClear" type="void" line="913">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="916">
                    Print set breakpoints                    
                </comment>
                <comment line="920">
                    ### need &apos;clear all&apos;                    
                </comment>
                <comment line="934">
                    The request used for matching should be found                    
                </comment>
                <scope line="914"/>
                <declaration name="bpSpec" type="BreakpointSpec" line="920"/>
                <scope line="921">
                    <declaration name="specs" type="List&lt;EventRequestSpec&gt;" line="922"/>
                    <scope line="924"/>
                    <scope line="926">
                        <declaration name="toDelete" type="List&lt;EventRequestSpec&gt;" line="927"/>
                        <scope line="928">
                            <scope line="929"/>
                        </scope>
                        <scope line="934"/>
                        <scope line="937"/>
                    </scope>
                </scope>
                <scope line="941"/>
            </method>
            <method name="commandList" type="void" line="948">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="980">
                    See if token is a line number.                    
                </comment>
                <comment line="984">
                    It isn&apos;t -- see if it&apos;s a method name.                    
                </comment>
                <declaration name="current" type="ThreadReference" line="949"/>
                <scope line="950"/>
                <declaration name="loc" type="Location" line="954"/>
                <scope line="955">
                    <declaration name="frame" type="StackFrame" line="956"/>
                    <scope line="957"/>
                </scope>
                <scope line="962"/>
                <declaration name="source" type="SourceModel" line="966"/>
                <scope line="967">
                    <scope line="968"/>
                </scope>
                <declaration name="refType" type="ReferenceType" line="975"/>
                <declaration name="lineno" type="int" line="976"/>
                <scope line="977">
                    <declaration name="id" type="String" line="978"/>
                    <scope line="980"/>
                    <scope line="982">
                        <declaration name="meths" type="List&lt;Method&gt;" line="984"/>
                        <scope line="985"/>
                        <scope line="991"/>
                    </scope>
                </scope>
                <declaration name="startLine" type="int" line="1001"/>
                <declaration name="endLine" type="int" line="1002"/>
                <declaration name="sourceLine" type="String" line="1003"/>
                <scope line="1004"/>
                <scope line="1009">
                    <declaration name="out" type="OutputSink" line="1010"/>
                    <scope line="1011">
                        <scope line="1013"/>
                        <scope line="1018"/>
                        <scope line="1020"/>
                    </scope>
                </scope>
            </method>
            <method name="commandUse" type="void" line="1032">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="1037">
                    ### Should throw exception for invalid path.
                    ### E.g., vetoable property change.                    
                </comment>
                <scope line="1033"/>
                <scope line="1035"/>
            </method>
            <method name="commandSourcepath" type="void" line="1045">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="1050">
                    ### Should throw exception for invalid path.
                    ### E.g., vetoable property change.                    
                </comment>
                <scope line="1046"/>
                <scope line="1048"/>
            </method>
            <method name="commandClasspath" type="void" line="1058">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="1063">
                    ### Should throw exception for invalid path.
                    ### E.g., vetoable property change.                    
                </comment>
                <scope line="1059"/>
                <scope line="1061"/>
            </method>
            <method name="commandView" type="void" line="1071">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="1081">
                    ### JDI crashes taking line number for class.                    
                </comment>
                <comment line="1082">
                    ReferenceType cls = findClass(name);
                    if (cls != null) {
                    env.viewLocation(cls.location());
                    } else {
                    env.failure(&quot;No such class&quot;);
                    }                    
                </comment>
                <scope line="1072"/>
                <scope line="1074">
                    <declaration name="name" type="String" line="1075"/>
                    <scope line="1077"/>
                    <scope line="1079">
                        <declaration name="fileName" type="String" line="1089"/>
                    </scope>
                </scope>
            </method>
            <method name="commandLocals" type="void" line="1098">
                <declaration name="current" type="ThreadReference" line="1099"/>
                <scope line="1100"/>
                <declaration name="frame" type="StackFrame" line="1105"/>
                <scope line="1106">
                    <scope line="1108"/>
                </scope>
                <scope line="1112"/>
                <declaration name="vars" type="List&lt;LocalVariable&gt;" line="1117"/>
                <scope line="1118">
                    <scope line="1120"/>
                </scope>
                <scope line="1124"/>
                <declaration name="out" type="OutputSink" line="1130"/>
                <scope line="1132">
                    <scope line="1133"/>
                </scope>
                <scope line="1138">
                    <scope line="1139"/>
                </scope>
            </method>
            <javadoc line="1147">
                Command: monitor
                  Monitor an expression                
            </javadoc>
            <method name="commandMonitor" type="void" line="1151">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="1152"/>
                <scope line="1154"/>
            </method>
            <javadoc line="1159">
                Command: unmonitor
                  Unmonitor an expression                
            </javadoc>
            <method name="commandUnmonitor" type="void" line="1163">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="1164"/>
                <scope line="1166"/>
            </method>
            <method name="printVar" type="void" line="1173">
                <params>
                    <param name="out" type="OutputSink"/>
                    <param name="var" type="LocalVariable"/>
                    <param name="frame" type="StackFrame"/>
                </params>
                <scope line="1175">
                    <declaration name="val" type="Value" line="1176"/>
                </scope>
                <scope line="1178"/>
            </method>
            <method name="commandPrint" type="void" line="1186">
                <params>
                    <param name="t" type="StringTokenizer"/>
                    <param name="dumpObject" type="boolean"/>
                </params>
                <comment line="1189">
                    ### Probably confused if expresion contains whitespace.                    
                </comment>
                <comment line="1217">
                    ### Fix this!                    
                </comment>
                <comment line="1220">
                    Error message already printed                    
                </comment>
                <scope line="1187"/>
                <declaration name="current" type="ThreadReference" line="1192"/>
                <scope line="1193"/>
                <declaration name="frame" type="StackFrame" line="1198"/>
                <scope line="1199">
                    <scope line="1201"/>
                </scope>
                <scope line="1205"/>
                <scope line="1209">
                    <declaration name="expr" type="String" line="1210"/>
                    <declaration name="val" type="Value" line="1211"/>
                    <scope line="1212"/>
                    <scope line="1214"/>
                    <scope line="1218"/>
                    <declaration name="out" type="OutputSink" line="1221"/>
                    <scope line="1223">
                        <declaration name="obj" type="ObjectReference" line="1224"/>
                        <declaration name="refType" type="ReferenceType" line="1225"/>
                    </scope>
                    <scope line="1229"/>
                </scope>
            </method>
            <method name="dump" type="void" line="1238">
                <params>
                    <param name="out" type="OutputSink"/>
                    <param name="obj" type="ObjectReference"/>
                    <param name="refType" type="ReferenceType"/>
                    <param name="refTypeBase" type="ReferenceType"/>
                </params>
                <comment line="1247">
                    Bug ID 4374471                    
                </comment>
                <scope line="1239">
                    <scope line="1241"/>
                    <declaration name="o" type="Object" line="1245"/>
                </scope>
                <scope line="1248">
                    <declaration name="sup" type="ClassType" line="1249"/>
                    <scope line="1250"/>
                </scope>
                <scope line="1253">
                    <scope line="1254"/>
                </scope>
            </method>
            <method name="help" type="void" line="1264">
                <comment line="1275">
                    out.println(&quot;print &lt;expression&gt;        -- print value of expression&quot;);                    
                </comment>
                <comment line="1277">
                    out.println(&quot;eval &lt;expression&gt;         -- evaluate expression (same as print)&quot;);                    
                </comment>
                <comment line="1295">
                    out.println(&quot;catch &lt;class id&gt;          -- break for the specified exception&quot;);
                          out.println(&quot;ignore &lt;class id&gt;         -- ignore when the specified exception\n&quot;);                    
                </comment>
                <comment line="1300">
                    ### new                    
                </comment>
                <comment line="1302">
                    ### new                    
                </comment>
                <comment line="1307">
                    out.println(&quot;memory                    -- report memory usage&quot;);
                          out.println(&quot;gc                        -- free unused objects\n&quot;);                    
                </comment>
            </method>
            <method name="executeCommand" type="void" line="1324">
                <params>
                    <param name="command" type="String"/>
                </params>
                <comment line="1326">
                    ### Treatment of &apos;out&apos; here is dirty...                    
                </comment>
                <comment line="1378">
                    ### Not implemented.
                              } else if (cmd.equals(&quot;catch&quot;)) {
                                  commandCatchException(t);
                    ### Not implemented.
                              } else if (cmd.equals(&quot;ignore&quot;)) {
                                  commandIgnoreException(t);                    
                </comment>
                <comment line="1422">
                    } else if (cmd.equals(&quot;read&quot;)) {
                                  readCommand(t);                    
                </comment>
                <comment line="1430">
                    ignore                    
                </comment>
                <comment line="1434">
                    ### Dubious repeat-count feature inherited from &apos;jdb&apos;                    
                </comment>
                <scope line="1327"/>
                <declaration name="t" type="StringTokenizer" line="1330"/>
                <scope line="1331">
                    <declaration name="cmd" type="String" line="1332"/>
                    <scope line="1333"/>
                    <scope line="1336"/>
                    <scope line="1339"/>
                    <scope line="1341"/>
                    <scope line="1343"/>
                    <scope line="1345"/>
                    <scope line="1347"/>
                    <scope line="1349"/>
                    <scope line="1351"/>
                    <scope line="1353"/>
                    <scope line="1355"/>
                    <scope line="1357"/>
                    <scope line="1359"/>
                    <scope line="1361"/>
                    <scope line="1363"/>
                    <scope line="1365"/>
                    <scope line="1367"/>
                    <scope line="1369"/>
                    <scope line="1371"/>
                    <scope line="1373"/>
                    <scope line="1375"/>
                    <scope line="1383"/>
                    <scope line="1385"/>
                    <scope line="1387"/>
                    <scope line="1389"/>
                    <scope line="1391"/>
                    <scope line="1393"/>
                    <scope line="1395"/>
                    <scope line="1397"/>
                    <scope line="1399"/>
                    <scope line="1401"/>
                    <scope line="1403"/>
                    <scope line="1405"/>
                    <scope line="1407"/>
                    <scope line="1409"/>
                    <scope line="1411"/>
                    <scope line="1413"/>
                    <scope line="1415"/>
                    <scope line="1417"/>
                    <scope line="1419"/>
                    <scope line="1423"/>
                    <scope line="1425">
                        <scope line="1426"/>
                        <scope line="1428"/>
                    </scope>
                    <scope line="1432">
                        <scope line="1434">
                            <scope line="1435">
                                <declaration name="repeat" type="int" line="1436"/>
                                <declaration name="subcom" type="String" line="1437"/>
                                <scope line="1438"/>
                            </scope>
                            <scope line="1442"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="1448"/>
                <scope line="1451"/>
            </method>
        </class>
    </source>