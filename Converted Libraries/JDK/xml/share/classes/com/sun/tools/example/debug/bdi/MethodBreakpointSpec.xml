<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.bdi">
        <import package="com.sun.jdi"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <class name="MethodBreakpointSpec" line="32">
            <extends class="BreakpointSpec"/>
            <comment line="149">
                Compare a method&apos;s argument types with a Vector of type names.
                 Return true if each argument type has a name identical to the
                 corresponding string in the vector (allowing for varargs)
                 and if the number of arguments in the method matches the
                 number of names passed                
            </comment>
            <comment line="278">
                Attempt an unambiguous match of the method name and
                 argument specification to a method. If no arguments
                 are specified, the method must not be overloaded.
                 Otherwise, the argument types much match exactly                
            </comment>
            <declaration name="methodId" type="String" line="33"/>
            <declaration name="methodArgs" type="List&lt;String&gt;" line="34"/>
            <method name="MethodBreakpointSpec" type="constructor" line="38">
                <params>
                    <param name="specs" type="EventRequestSpecList"/>
                    <param name="refSpec" type="ReferenceTypeSpec"/>
                    <param name="methodId" type="String"/>
                    <param name="methodArgs" type="List<String>"/>
                </params>
            </method>
            <javadoc line="44">
                The &apos;refType&apos; is known to match.                
            </javadoc>
            <method name="resolve" type="void" line="52">
                <params>
                    <param name="refType" type="ReferenceType"/>
                </params>
                <scope line="53"/>
                <scope line="56"/>
                <declaration name="location" type="Location" line="59"/>
            </method>
            <method name="location" type="Location" line="67">
                <params>
                    <param name="clazz" type="ClassType"/>
                </params>
                <declaration name="method" type="Method" line="68"/>
                <declaration name="location" type="Location" line="69"/>
            </method>
            <method name="methodName" type="String" line="73"/>
            <method name="methodArgs" type="List<String>" line="77"/>
            <method name="hashCode" type="int" line="82"/>
            <method name="equals" type="boolean" line="89">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="90">
                    <declaration name="breakpoint" type="MethodBreakpointSpec" line="91"/>
                </scope>
                <scope line="96"/>
            </method>
            <method name="errorMessageFor" type="String" line="102">
                <params>
                    <param name="e" type="Exception"/>
                </params>
                <comment line="106">
                    TO DO: list the methods here                    
                </comment>
                <scope line="103"/>
                <scope line="108"/>
                <scope line="110"/>
                <scope line="113"/>
            </method>
            <method name="toString" type="String" line="119">
                <declaration name="buffer" type="StringBuffer" line="120"/>
                <scope line="124">
                    <declaration name="first" type="boolean" line="125"/>
                    <scope line="127">
                        <scope line="128"/>
                    </scope>
                </scope>
            </method>
            <method name="isValidMethodName" type="boolean" line="142">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="compareArgTypes" type="boolean" line="155">
                <params>
                    <param name="method" type="Method"/>
                    <param name="nameList" type="List<String>"/>
                </params>
                <comment line="159">
                    If argument counts differ, we can stop here                    
                </comment>
                <comment line="164">
                    Compare each argument type&apos;s name                    
                </comment>
                <comment line="170">
                    We have to handle varargs.  EG, the
                     method&apos;s last arg type is xxx[]
                     while the nameList contains xxx...
                     Note that the nameList can also contain
                     xxx[] in which case we don&apos;t get here.                    
                </comment>
                <comment line="182">
                    The last types differ, it is a varargs
                     method and the nameList item is varargs.
                     We just have to compare the type names, eg,
                     make sure we don&apos;t have xxx[] for the method
                     arg type and yyy... for the nameList item.                    
                </comment>
                <comment line="191">
                    The type names are different lengths                    
                </comment>
                <comment line="194">
                    We know the two type names are the same length                    
                </comment>
                <comment line="198">
                    We do have xxx[] and xxx... as the last param type                    
                </comment>
                <declaration name="argTypeNames" type="List&lt;String&gt;" line="156"/>
                <scope line="159"/>
                <declaration name="nTypes" type="int" line="164"/>
                <scope line="165">
                    <declaration name="comp1" type="String" line="166"/>
                    <declaration name="comp2" type="String" line="167"/>
                    <scope line="168">
                        <scope line="178"/>
                        <declaration name="comp1Length" type="int" line="188"/>
                        <scope line="189"/>
                        <scope line="194"/>
                    </scope>
                </scope>
            </method>
            <method name="vm" type="VirtualMachine" line="205"/>
            <javadoc line="209">
                Remove unneeded spaces and expand class names to fully
                  qualified names, if necessary and possible.                
            </javadoc>
            <method name="normalizeArgTypeName" type="String" line="213">
                <params>
                    <param name="name" type="String"/>
                </params>
                <comment line="215">
                    Separate the type name from any array modifiers,
                     stripping whitespace after the name ends.                    
                </comment>
                <comment line="224">
                    For varargs, there can be spaces before the ... but not
                     within the ...  So, we will just ignore the ...
                     while stripping blanks.                    
                </comment>
                <comment line="237">
                    name is complete                    
                </comment>
                <comment line="256">
                    When there&apos;s no sign of a package name already,
                     try to expand the
                     the name to a fully qualified class name                    
                </comment>
                <comment line="264">
                    ### ambiguity???                    
                </comment>
                <comment line="268">
                    We&apos;ll try the name as is                    
                </comment>
                <declaration name="i" type="int" line="218"/>
                <declaration name="typePart" type="StringBuffer" line="219"/>
                <declaration name="arrayPart" type="StringBuffer" line="220"/>
                <declaration name="nameLength" type="int" line="222"/>
                <declaration name="isVarArgs" type="boolean" line="228"/>
                <scope line="229"/>
                <scope line="233">
                    <declaration name="c" type="char" line="234"/>
                    <scope line="235"/>
                </scope>
                <scope line="241">
                    <declaration name="c" type="char" line="242"/>
                    <scope line="243"/>
                    <scope line="245"/>
                </scope>
                <scope line="260">
                    <scope line="261">
                        <declaration name="refs" type="List&lt;?&gt;" line="262"/>
                        <scope line="263"/>
                    </scope>
                    <scope line="266"/>
                </scope>
                <scope line="271"/>
            </method>
            <method name="findMatchingMethod" type="Method" line="286">
                <params>
                    <param name="clazz" type="ClassType"/>
                </params>
                <comment line="289">
                    Normalize the argument string once before looping below.                    
                </comment>
                <comment line="299">
                    Check each method in the class for matches                    
                </comment>
                <comment line="300">
                    first method with matching name                    
                </comment>
                <comment line="301">
                    (only) method with same name &amp; sig                    
                </comment>
                <comment line="302">
                    &gt; 1 implies overload                    
                </comment>
                <comment line="307">
                    Remember the first match in case it is the only one                    
                </comment>
                <comment line="312">
                    If argument types were specified, check against candidate                    
                </comment>
                <comment line="321">
                    Determine method for breakpoint                    
                </comment>
                <comment line="324">
                    Name and signature match                    
                </comment>
                <comment line="327">
                    At least one name matched and no arg types were specified                    
                </comment>
                <comment line="329">
                    Only one match; safe to use it                    
                </comment>
                <declaration name="argTypeNames" type="List&lt;String&gt;" line="289"/>
                <scope line="290">
                    <scope line="292"/>
                </scope>
                <declaration name="firstMatch" type="Method" line="299"/>
                <declaration name="exactMatch" type="Method" line="300"/>
                <declaration name="matchCount" type="int" line="301"/>
                <scope line="302">
                    <scope line="303">
                        <scope line="307"/>
                        <scope line="313"/>
                    </scope>
                </scope>
                <declaration name="method" type="Method" line="321"/>
                <scope line="322"/>
                <scope line="325">
                    <scope line="327"/>
                    <scope line="329"/>
                </scope>
                <scope line="332"/>
            </method>
        </class>
    </source>