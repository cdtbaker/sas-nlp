<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.script.shell">
        <import package="java.io"/>
        <import package="java.net"/>
        <import package="java.text"/>
        <import package="java.util"/>
        <import package="javax.script"/>
        <class name="Main" line="7">
            <javadoc line="7">
                This is the main class for Java script shell.                
            </javadoc>
            <javadoc line="11">
                main entry point to the command line tool                
                <param>
                    args command line argument array                    
                </param>
            </javadoc>
            <method name="main" type="void" line="15">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <declaration name="scriptArgs" type="String[]" line="16"/>
                <scope line="17"/>
            </method>
            <interface name="Command">
                <method name="run" type="void" line="23"/>
            </interface>
            <javadoc line="25">
                Parses and processes command line options.                
                <param>
                    args command line argument array                    
                </param>
            </javadoc>
            <method name="processOptions" type="String[]" line="29">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <declaration name="currentLanguage" type="String" line="30"/>
                <declaration name="currentEncoding" type="String" line="31"/>
                <declaration name="seenScript" type="boolean" line="33"/>
                <declaration name="seenStdin" type="boolean" line="34"/>
                <scope line="35">
                    <declaration name="arg" type="String" line="36"/>
                    <scope line="37"/>
                    <scope line="41">
                        <declaration name="numScriptArgs" type="int" line="42"/>
                        <declaration name="startScriptArg" type="int" line="43"/>
                        <scope line="44"/>
                        <scope line="48">
                            <declaration name="se" type="ScriptEngine" line="51"/>
                        </scope>
                        <declaration name="result" type="String[]" line="54"/>
                    </scope>
                    <scope line="58">
                        <declaration name="value" type="String" line="59"/>
                        <declaration name="eq" type="int" line="60"/>
                        <scope line="61"/>
                        <scope line="64">
                            <scope line="65"/>
                            <scope line="68"/>
                        </scope>
                    </scope>
                    <scope line="74"/>
                    <scope line="77">
                        <declaration name="se" type="ScriptEngine" line="80"/>
                    </scope>
                    <scope line="84"/>
                    <scope line="89">
                        <declaration name="se" type="ScriptEngine" line="92"/>
                        <scope line="93">
                            <scope line="94"/>
                            <scope line="97"/>
                        </scope>
                        <scope line="102"/>
                    </scope>
                    <scope line="107"/>
                    <scope line="112"/>
                </scope>
                <scope line="117">
                    <declaration name="se" type="ScriptEngine" line="118"/>
                </scope>
            </method>
            <javadoc line="123">
                Adds interactive mode Command                
                <param>
                    se ScriptEngine to use in interactive mode.                    
                </param>
            </javadoc>
            <method name="addInteractiveMode" type="void" line="127">
                <params>
                    <param name="se" type="ScriptEngine"/>
                </params>
                <anonymous_class line="128">
                    <method name="run" type="void" line="129">
                        <params>
                            <param name="args" type="String[]"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="136">
                Adds script source file Command                
                <param>
                    se ScriptEngine used to evaluate the script file                    
                </param>
                <param>
                    fileName script file name                    
                </param>
                <param>
                    encoding script file encoding                    
                </param>
            </javadoc>
            <method name="addFileSource" type="void" line="142">
                <params>
                    <param name="se" type="ScriptEngine"/>
                    <param name="fileName" type="String"/>
                    <param name="encoding" type="String"/>
                </params>
                <anonymous_class line="143">
                    <method name="run" type="void" line="144">
                        <params>
                            <param name="args" type="String[]"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="151">
                Adds script string source Command                
                <param>
                    se ScriptEngine to be used to evaluate the script string                    
                </param>
                <param>
                    source Script source string                    
                </param>
            </javadoc>
            <method name="addStringSource" type="void" line="156">
                <params>
                    <param name="se" type="ScriptEngine"/>
                    <param name="source" type="String"/>
                </params>
                <anonymous_class line="157">
                    <method name="run" type="void" line="158">
                        <params>
                            <param name="args" type="String[]"/>
                        </params>
                        <declaration name="oldFile" type="String" line="160"/>
                        <scope line="161"/>
                        <scope line="164"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="171">
                Prints list of script engines available and exits.                
            </javadoc>
            <method name="listScriptEngines" type="void" line="174">
                <declaration name="factories" type="List&amp;lt;ScriptEngineFactory&amp;gt;" line="175"/>
                <scope line="176"/>
            </method>
            <javadoc line="181">
                Processes a given source file or standard input.                
                <param>
                    se ScriptEngine to be used to evaluate                    
                </param>
                <param>
                    filename file name, can be null                    
                </param>
                <param>
                    encoding script file encoding, can be null                    
                </param>
            </javadoc>
            <method name="processSource" type="void" line="187">
                <params>
                    <param name="se" type="ScriptEngine"/>
                    <param name="filename" type="String"/>
                    <param name="encoding" type="String"/>
                </params>
                <scope line="188">
                    <declaration name="in" type="BufferedReader" line="189"/>
                    <declaration name="hitEOF" type="boolean" line="190"/>
                    <declaration name="prompt" type="String" line="191"/>
                    <scope line="193">
                        <declaration name="source" type="String" line="195"/>
                        <scope line="196"/>
                        <scope line="199"/>
                        <scope line="202"/>
                        <declaration name="res" type="Object" line="206"/>
                        <scope line="207">
                            <scope line="209"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="216">
                    <declaration name="fis" type="FileInputStream" line="217"/>
                    <scope line="218"/>
                    <scope line="221"/>
                </scope>
            </method>
            <javadoc line="228">
                Evaluates given script source                
                <param>
                    se ScriptEngine to evaluate the string                    
                </param>
                <param>
                    script Script source string                    
                </param>
                <param>
                    exitOnError whether to exit the process on script error                    
                </param>
            </javadoc>
            <method name="evaluateString" type="Object" line="234">
                <params>
                    <param name="se" type="ScriptEngine"/>
                    <param name="script" type="String"/>
                    <param name="exitOnError" type="boolean"/>
                </params>
                <scope line="235"/>
                <scope line="238"/>
                <scope line="242"/>
            </method>
            <javadoc line="248">
                Evaluate script string source and exit on script error                
                <param>
                    se ScriptEngine to evaluate the string                    
                </param>
                <param>
                    script Script source string                    
                </param>
            </javadoc>
            <method name="evaluateString" type="void" line="253">
                <params>
                    <param name="se" type="ScriptEngine"/>
                    <param name="script" type="String"/>
                </params>
            </method>
            <javadoc line="256">
                Evaluates script from given reader                
                <param>
                    se ScriptEngine to evaluate the string                    
                </param>
                <param>
                    reader Reader from which is script is read                    
                </param>
                <param>
                    name file name to report in error.                    
                </param>
            </javadoc>
            <method name="evaluateReader" type="Object" line="262">
                <params>
                    <param name="se" type="ScriptEngine"/>
                    <param name="reader" type="Reader"/>
                    <param name="name" type="String"/>
                </params>
                <declaration name="oldFilename" type="String" line="263"/>
                <scope line="264"/>
                <scope line="267"/>
                <scope line="271"/>
                <scope line="275"/>
            </method>
            <javadoc line="280">
                Evaluates given input stream                
                <param>
                    se ScriptEngine to evaluate the string                    
                </param>
                <param>
                    is InputStream from which script is read                    
                </param>
                <param>
                    name file name to report in error                    
                </param>
            </javadoc>
            <method name="evaluateStream" type="Object" line="286">
                <params>
                    <param name="se" type="ScriptEngine"/>
                    <param name="is" type="InputStream"/>
                    <param name="name" type="String"/>
                    <param name="encoding" type="String"/>
                </params>
                <declaration name="reader" type="BufferedReader" line="287"/>
                <scope line="288">
                    <scope line="289"/>
                    <scope line="292"/>
                </scope>
                <scope line="297"/>
            </method>
            <javadoc line="302">
                Prints usage message and exits                
                <param>
                    exitCode process exit code                    
                </param>
            </javadoc>
            <method name="usage" type="void" line="306">
                <params>
                    <param name="exitCode" type="int"/>
                </params>
            </method>
            <javadoc line="310">
                Gets prompt for interactive mode                
                <return>
                    prompt string to use                    
                </return>
            </javadoc>
            <method name="getPrompt" type="String" line="314">
                <params>
                    <param name="se" type="ScriptEngine"/>
                </params>
                <declaration name="names" type="List&amp;lt;String&amp;gt;" line="315"/>
            </method>
            <javadoc line="318">
                Get formatted, localized error message                
            </javadoc>
            <method name="getMessage" type="String" line="321">
                <params>
                    <param name="key" type="String"/>
                    <param name="params" type="Object[]"/>
                </params>
            </method>
            <method name="getIn" type="InputStream" line="324"/>
            <method name="getError" type="PrintStream" line="327"/>
            <method name="getScriptEngine" type="ScriptEngine" line="330">
                <params>
                    <param name="lang" type="String"/>
                </params>
                <declaration name="se" type="ScriptEngine" line="331"/>
                <scope line="332">
                    <scope line="334"/>
                </scope>
            </method>
            <method name="initScriptEngine" type="void" line="343">
                <params>
                    <param name="se" type="ScriptEngine"/>
                </params>
                <declaration name="exts" type="List&amp;lt;String&amp;gt;" line="345"/>
                <declaration name="sysIn" type="InputStream" line="346"/>
                <declaration name="cl" type="ClassLoader" line="347"/>
                <scope line="348"/>
                <scope line="352"/>
            </method>
            <javadoc line="356">
                Checks for -classpath, -cp in command line args. Creates a ClassLoader
                  and sets it as Thread context loader for current thread.                
                <param>
                    args command line argument array                    
                </param>
            </javadoc>
            <method name="checkClassPath" type="void" line="361">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <declaration name="classPath" type="String" line="362"/>
                <scope line="363">
                    <scope line="364">
                        <scope line="365"/>
                        <scope line="368"/>
                    </scope>
                </scope>
                <scope line="373">
                    <declaration name="parent" type="ClassLoader" line="374"/>
                    <declaration name="urls" type="URL[]" line="375"/>
                    <declaration name="loader" type="URLClassLoader" line="376"/>
                </scope>
            </method>
            <javadoc line="381">
                Utility method for converting a search path string to an array
                  of directory and JAR file URLs.                
                <param>
                    path the search path string                    
                </param>
                <return>
                    the resulting array of directory and JAR file URLs                    
                </return>
            </javadoc>
            <method name="pathToURLs" type="URL[]" line="387">
                <params>
                    <param name="path" type="String"/>
                </params>
                <declaration name="components" type="String[]" line="388"/>
                <declaration name="urls" type="URL[]" line="389"/>
                <declaration name="count" type="int" line="390"/>
                <scope line="391">
                    <declaration name="url" type="URL" line="392"/>
                    <scope line="393"/>
                </scope>
                <scope line="397">
                    <declaration name="tmp" type="URL[]" line="398"/>
                </scope>
            </method>
            <javadoc line="404">
                Returns the directory or JAR file URL corresponding to the specified
                  local file name.                
                <param>
                    file the File object                    
                </param>
                <return>
                    the resulting directory or JAR file URL, or null if unknown                    
                </return>
            </javadoc>
            <method name="fileToURL" type="URL" line="410">
                <params>
                    <param name="file" type="File"/>
                </params>
                <declaration name="name" type="String" line="411"/>
                <scope line="412"/>
                <scope line="415"/>
                <scope line="419"/>
                <scope line="422"/>
                <scope line="425"/>
                <scope line="428"/>
            </method>
            <method name="setScriptArguments" type="void" line="432">
                <params>
                    <param name="se" type="ScriptEngine"/>
                    <param name="args" type="String[]"/>
                </params>
            </method>
            <method name="setScriptFilename" type="String" line="436">
                <params>
                    <param name="se" type="ScriptEngine"/>
                    <param name="name" type="String"/>
                </params>
                <declaration name="oldName" type="String" line="437"/>
            </method>
            <declaration name="EXIT_SUCCESS" type="int" line="441"/>
            <declaration name="EXIT_CMD_NO_CLASSPATH" type="int" line="442"/>
            <declaration name="EXIT_CMD_NO_FILE" type="int" line="443"/>
            <declaration name="EXIT_CMD_NO_SCRIPT" type="int" line="444"/>
            <declaration name="EXIT_CMD_NO_LANG" type="int" line="445"/>
            <declaration name="EXIT_CMD_NO_ENCODING" type="int" line="446"/>
            <declaration name="EXIT_CMD_NO_PROPNAME" type="int" line="447"/>
            <declaration name="EXIT_UNKNOWN_OPTION" type="int" line="448"/>
            <declaration name="EXIT_ENGINE_NOT_FOUND" type="int" line="449"/>
            <declaration name="EXIT_NO_ENCODING_FOUND" type="int" line="450"/>
            <declaration name="EXIT_SCRIPT_ERROR" type="int" line="451"/>
            <declaration name="EXIT_FILE_NOT_FOUND" type="int" line="452"/>
            <declaration name="EXIT_MULTIPLE_STDIN" type="int" line="453"/>
            <declaration name="DEFAULT_LANGUAGE" type="String" line="454"/>
            <declaration name="scripts" type="List&amp;lt;Command&amp;gt;" line="455"/>
            <declaration name="engineManager" type="ScriptEngineManager" line="456"/>
            <declaration name="engines" type="Map&amp;lt;String,ScriptEngine&amp;gt;" line="457"/>
            <declaration name="msgRes" type="ResourceBundle" line="458"/>
            <declaration name="BUNDLE_NAME" type="String" line="459"/>
            <declaration name="PROGRAM_NAME" type="String" line="460"/>
            <scope line="461"/>
        </class>
    </source>