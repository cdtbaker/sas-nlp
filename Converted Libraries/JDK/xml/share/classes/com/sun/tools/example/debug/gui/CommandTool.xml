<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.gui">
        <import package="java.io"/>
        <import package="java.util"/>
        <import package="javax.swing"/>
        <import package="java.awt.BorderLayout"/>
        <import package="java.awt.event"/>
        <import package="com.sun.jdi"/>
        <import package="com.sun.jdi.event"/>
        <import package="com.sun.tools.example.debug.bdi"/>
        <import package="com.sun.tools.example.debug.event"/>
        <class name="CommandTool" line="41">
            <extends class="JPanel"/>
            <declaration name="serialVersionUID" type="long" line="43"/>
            <declaration name="env" type="Environment" line="45"/>
            <declaration name="context" type="ContextManager" line="47"/>
            <declaration name="runtime" type="ExecutionManager" line="48"/>
            <declaration name="sourceManager" type="SourceManager" line="49"/>
            <declaration name="script" type="TypeScript" line="51"/>
            <declaration name="DEFAULT_CMD_PROMPT" type="String" line="53"/>
            <method name="CommandTool" type="constructor" line="55">
                <params>
                    <param name="env" type="Environment"/>
                </params>
                <comment line="65">
                    no echo                    
                </comment>
                <comment line="71">
                    Establish handler for incoming commands.                    
                </comment>
                <comment line="80">
                    Establish ourselves as the listener for VM diagnostics.                    
                </comment>
                <comment line="86">
                    Establish ourselves as the shared debugger typescript.                    
                </comment>
                <comment line="90">
                    Handle VM events.                    
                </comment>
                <comment line="99">
                    ### remove listeners on exit!                    
                </comment>
                <declaration name="interpreter" type="CommandInterpreter" line="67"/>
                <anonymous_class line="72">
                    <method name="actionPerformed" type="void" line="74">
                        <params>
                            <param name="e" type="ActionEvent"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="diagnosticsListener" type="OutputListener" line="81"/>
                <declaration name="listener" type="TTYDebugListener" line="91"/>
            </method>
            <class name="TTYDebugListener" line="102">
                <comment line="112">
                    JDIListener                    
                </comment>
                <comment line="211">
                    SessionListener                    
                </comment>
                <comment line="229">
                    SpecListener                    
                </comment>
                <comment line="260">
                    ### Add info for watchpoints and exceptions                    
                </comment>
                <comment line="295">
                    ContextListener.                    
                </comment>
                <comment line="297">
                    If the user selects a new current thread or frame, update prompt.                    
                </comment>
                <implements interface="JDIListener"/>
                <implements interface="SessionListener"/>
                <implements interface="SpecListener"/>
                <implements interface="ContextListener"/>
                <declaration name="diagnostics" type="OutputListener" line="105"/>
                <method name="TTYDebugListener" type="constructor" line="107">
                    <params>
                        <param name="diagnostics" type="OutputListener"/>
                    </params>
                </method>
                <method name="accessWatchpoint" type="void" line="114">
                    <params>
                        <param name="e" type="AccessWatchpointEventSet"/>
                    </params>
                    <scope line="116"/>
                </method>
                <method name="classPrepare" type="void" line="124">
                    <params>
                        <param name="e" type="ClassPrepareEventSet"/>
                    </params>
                    <scope line="125">
                        <declaration name="name" type="String" line="126"/>
                    </scope>
                </method>
                <method name="classUnload" type="void" line="132">
                    <params>
                        <param name="e" type="ClassUnloadEventSet"/>
                    </params>
                    <scope line="133"/>
                </method>
                <method name="exception" type="void" line="140">
                    <params>
                        <param name="e" type="ExceptionEventSet"/>
                    </params>
                    <declaration name="name" type="String" line="142"/>
                </method>
                <method name="locationTrigger" type="void" line="147">
                    <params>
                        <param name="e" type="LocationTriggerEventSet"/>
                    </params>
                    <declaration name="locString" type="String" line="148"/>
                    <scope line="150">
                        <declaration name="evt" type="Event" line="151"/>
                        <scope line="152"/>
                        <scope line="154"/>
                        <scope line="156"/>
                        <scope line="158"/>
                        <scope line="160"/>
                    </scope>
                </method>
                <method name="modificationWatchpoint" type="void" line="167">
                    <params>
                        <param name="e" type="ModificationWatchpointEventSet"/>
                    </params>
                    <scope line="169"/>
                </method>
                <method name="threadDeath" type="void" line="177">
                    <params>
                        <param name="e" type="ThreadDeathEventSet"/>
                    </params>
                    <scope line="178"/>
                </method>
                <method name="threadStart" type="void" line="185">
                    <params>
                        <param name="e" type="ThreadStartEventSet"/>
                    </params>
                    <scope line="186"/>
                </method>
                <method name="vmDeath" type="void" line="193">
                    <params>
                        <param name="e" type="VMDeathEventSet"/>
                    </params>
                </method>
                <method name="vmDisconnect" type="void" line="199">
                    <params>
                        <param name="e" type="VMDisconnectEventSet"/>
                    </params>
                </method>
                <method name="vmStart" type="void" line="205">
                    <params>
                        <param name="e" type="VMStartEventSet"/>
                    </params>
                </method>
                <method name="sessionStart" type="void" line="213">
                    <params>
                        <param name="e" type="EventObject"/>
                    </params>
                </method>
                <method name="sessionInterrupt" type="void" line="216">
                    <params>
                        <param name="e" type="EventObject"/>
                    </params>
                    <comment line="218">
                        fetch output                        
                    </comment>
                </method>
                <method name="sessionContinue" type="void" line="223">
                    <params>
                        <param name="e" type="EventObject"/>
                    </params>
                </method>
                <method name="breakpointSet" type="void" line="231">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                    <declaration name="spec" type="EventRequestSpec" line="232"/>
                </method>
                <method name="breakpointDeferred" type="void" line="236">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                    <declaration name="spec" type="EventRequestSpec" line="237"/>
                </method>
                <method name="breakpointDeleted" type="void" line="242">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                    <declaration name="spec" type="EventRequestSpec" line="243"/>
                </method>
                <method name="breakpointResolved" type="void" line="247">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                    <declaration name="spec" type="EventRequestSpec" line="248"/>
                </method>
                <method name="breakpointError" type="void" line="252">
                    <params>
                        <param name="e" type="SpecErrorEvent"/>
                    </params>
                    <declaration name="spec" type="EventRequestSpec" line="253"/>
                </method>
                <method name="watchpointSet" type="void" line="262">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                </method>
                <method name="watchpointDeferred" type="void" line="265">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                </method>
                <method name="watchpointDeleted" type="void" line="268">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                </method>
                <method name="watchpointResolved" type="void" line="271">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                </method>
                <method name="watchpointError" type="void" line="274">
                    <params>
                        <param name="e" type="SpecErrorEvent"/>
                    </params>
                </method>
                <method name="exceptionInterceptSet" type="void" line="278">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                </method>
                <method name="exceptionInterceptDeferred" type="void" line="281">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                </method>
                <method name="exceptionInterceptDeleted" type="void" line="284">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                </method>
                <method name="exceptionInterceptResolved" type="void" line="287">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                </method>
                <method name="exceptionInterceptError" type="void" line="290">
                    <params>
                        <param name="e" type="SpecErrorEvent"/>
                    </params>
                </method>
                <method name="currentFrameChanged" type="void" line="299">
                    <params>
                        <param name="e" type="CurrentFrameChangedEvent"/>
                    </params>
                    <comment line="301">
                        Update prompt only if affect thread is current.                        
                    </comment>
                    <declaration name="thread" type="ThreadReference" line="301"/>
                    <scope line="302"/>
                </method>
            </class>
            <method name="locationString" type="String" line="309">
                <params>
                    <param name="e" type="LocatableEventSet"/>
                </params>
                <declaration name="loc" type="Location" line="310"/>
            </method>
            <method name="setThread" type="void" line="315">
                <params>
                    <param name="e" type="LocatableEventSet"/>
                </params>
                <comment line="318">
                    fetch output                    
                </comment>
                <comment line="320">
                    ### Current thread should be set elsewhere, e.g.,
                    ### in ContextManager
                    ### context.setCurrentThread(thread);                    
                </comment>
                <scope line="316"/>
            </method>
            <method name="promptString" type="String" line="325">
                <params>
                    <param name="thread" type="ThreadReference"/>
                    <param name="frameIndex" type="int"/>
                </params>
                <comment line="330">
                    Frame indices are presented to user as indexed from 1.                    
                </comment>
                <scope line="326"/>
                <scope line="328"/>
            </method>
        </class>
    </source>