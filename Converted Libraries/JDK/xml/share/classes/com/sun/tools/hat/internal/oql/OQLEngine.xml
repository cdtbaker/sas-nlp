<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.hat.internal.oql">
        <import package="com.sun.tools.hat.internal.model"/>
        <import package="java.io"/>
        <import package="java.lang.reflect"/>
        <import package="java.util"/>
        <class name="OQLEngine" line="40">
            <comment line="63">
                check OQL is supported or not before creating OQLEngine                
            </comment>
            <javadoc line="40">
                This is Object Query Language Interpreter                
            </javadoc>
            <scope line="45">
                <scope line="46">
                    <declaration name="managerClass" type="Class&lt;?&gt;" line="49"/>
                    <declaration name="manager" type="Object" line="50"/>
                    <declaration name="getEngineMethod" type="Method" line="53"/>
                    <declaration name="jse" type="Object" line="55"/>
                </scope>
                <scope line="57"/>
            </scope>
            <method name="isOQLSupported" type="boolean" line="63"/>
            <method name="OQLEngine" type="constructor" line="67">
                <params>
                    <param name="snapshot" type="Snapshot"/>
                </params>
                <scope line="68"/>
            </method>
            <javadoc line="74">
                Query is of the form
                  select &amp;lt;java script code to select&amp;gt;
                  [ from [instanceof] &amp;lt;class name&amp;gt; [&amp;lt;identifier&amp;gt;]
                  [ where &amp;lt;java script boolean expression&amp;gt; ]
                  ]                
            </javadoc>
            <method name="executeQuery" type="void" line="83">
                <params>
                    <param name="query" type="String"/>
                    <param name="visitor" type="ObjectVisitor"/>
                </params>
                <comment line="89">
                    Query does not start with &apos;select&apos; keyword.                    
                </comment>
                <comment line="90">
                    Just treat it as plain JavaScript and eval it.                    
                </comment>
                <declaration name="st" type="StringTokenizer" line="85"/>
                <scope line="86">
                    <declaration name="first" type="String" line="87"/>
                    <scope line="88">
                        <scope line="91">
                            <declaration name="res" type="Object" line="92"/>
                        </scope>
                        <scope line="94"/>
                    </scope>
                </scope>
                <scope line="99"/>
                <declaration name="selectExpr" type="String" line="103"/>
                <declaration name="seenFrom" type="boolean" line="104"/>
                <scope line="105">
                    <declaration name="tok" type="String" line="106"/>
                    <scope line="107"/>
                </scope>
                <scope line="114"/>
                <declaration name="className" type="String" line="118"/>
                <declaration name="isInstanceOf" type="boolean" line="119"/>
                <declaration name="whereExpr" type="String" line="120"/>
                <declaration name="identifier" type="String" line="121"/>
                <scope line="123">
                    <scope line="124">
                        <declaration name="tmp" type="String" line="125"/>
                        <scope line="126">
                            <scope line="128"/>
                        </scope>
                        <scope line="132"/>
                    </scope>
                    <scope line="135"/>
                    <scope line="139">
                        <scope line="141"/>
                        <scope line="144">
                            <declaration name="tmp" type="String" line="145"/>
                            <scope line="146"/>
                            <scope line="151"/>
                            <scope line="154"/>
                        </scope>
                    </scope>
                    <scope line="158"/>
                </scope>
            </method>
            <method name="executeQuery" type="void" line="168">
                <params>
                    <param name="q" type="OQLQuery"/>
                    <param name="visitor" type="ObjectVisitor"/>
                </params>
                <comment line="200">
                    compile select expression and where condition                    
                </comment>
                <comment line="230">
                    simple &quot;select &lt;expr&gt;&quot; query                    
                </comment>
                <declaration name="clazz" type="JavaClass" line="169"/>
                <scope line="170">
                    <scope line="172"/>
                </scope>
                <declaration name="buf" type="StringBuffer" line="177"/>
                <scope line="179"/>
                <declaration name="selectCode" type="String" line="186"/>
                <declaration name="whereCode" type="String" line="188"/>
                <scope line="189"/>
                <scope line="201">
                    <scope line="203"/>
                    <scope line="207">
                        <declaration name="objects" type="Enumeration" line="208"/>
                        <scope line="209">
                            <declaration name="obj" type="JavaHeapObject" line="210"/>
                            <declaration name="args" type="Object[]" line="211"/>
                            <declaration name="b" type="boolean" line="212"/>
                            <scope line="213">
                                <declaration name="res" type="Object" line="214"/>
                                <scope line="215"/>
                                <scope line="217"/>
                                <scope line="219"/>
                            </scope>
                            <scope line="224">
                                <declaration name="select" type="Object" line="225"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="229">
                        <declaration name="select" type="Object" line="231"/>
                    </scope>
                </scope>
                <scope line="234"/>
            </method>
            <method name="evalScript" type="Object" line="239">
                <params>
                    <param name="script" type="String"/>
                </params>
            </method>
            <method name="wrapJavaObject" type="Object" line="243">
                <params>
                    <param name="obj" type="JavaHeapObject"/>
                </params>
            </method>
            <method name="toHtml" type="Object" line="247">
                <params>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <method name="call" type="Object" line="251">
                <params>
                    <param name="func" type="String"/>
                    <param name="args" type="Object[]"/>
                </params>
            </method>
            <method name="debugPrint" type="void" line="255">
                <params>
                    <param name="msg" type="String"/>
                </params>
            </method>
            <method name="init" type="void" line="259">
                <params>
                    <param name="snapshot" type="Snapshot"/>
                </params>
                <comment line="262">
                    create ScriptEngineManager                    
                </comment>
                <comment line="266">
                    create JavaScript engine                    
                </comment>
                <comment line="271">
                    initialize engine with init file (hat.js)                    
                </comment>
                <comment line="278">
                    initialize ScriptEngine.eval(String) and                    
                </comment>
                <comment line="279">
                    Invocable.invokeFunction(String, Object[]) methods.                    
                </comment>
                <comment line="287">
                    initialize ScriptEngine.put(String, Object) method                    
                </comment>
                <comment line="291">
                    call ScriptEngine.put to initialize built-in heap object                    
                </comment>
                <scope line="261">
                    <declaration name="managerClass" type="Class&lt;?&gt;" line="263"/>
                    <declaration name="manager" type="Object" line="264"/>
                    <declaration name="getEngineMethod" type="Method" line="267"/>
                    <declaration name="strm" type="InputStream" line="272"/>
                    <declaration name="engineClass" type="Class&lt;?&gt;" line="273"/>
                    <declaration name="invocableClass" type="Class&lt;?&gt;" line="280"/>
                    <declaration name="putMethod" type="Method" line="288"/>
                </scope>
                <scope line="295"/>
            </method>
            <method name="getInitStream" type="InputStream" line="301"/>
            <declaration name="engine" type="Object" line="305"/>
            <declaration name="evalMethod" type="Method" line="306"/>
            <declaration name="invokeMethod" type="Method" line="307"/>
            <declaration name="snapshot" type="Snapshot" line="308"/>
            <declaration name="debug" type="boolean" line="309"/>
            <declaration name="oqlSupported" type="boolean" line="310"/>
        </class>
    </source>