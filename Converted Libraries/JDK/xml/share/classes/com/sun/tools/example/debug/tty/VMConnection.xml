<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.tty">
        <import package="com.sun.jdi"/>
        <import package="com.sun.jdi.connect"/>
        <import package="com.sun.jdi.request.EventRequestManager"/>
        <import package="com.sun.jdi.request.ThreadStartRequest"/>
        <import package="com.sun.jdi.request.ThreadDeathRequest"/>
        <import package="java.util"/>
        <import package="java.util.regex"/>
        <import package="java.io"/>
        <class name="VMConnection" line="10">
            <declaration name="vm" type="VirtualMachine" line="11"/>
            <declaration name="process" type="Process" line="12"/>
            <declaration name="outputCompleteCount" type="int" line="13"/>
            <declaration name="connector" type="Connector" line="14"/>
            <declaration name="connectorArgs" type="Map&amp;lt;String,com.sun.jdi.connect.Connector.Argument&amp;gt;" line="15"/>
            <declaration name="traceFlags" type="int" line="16"/>
            <method name="notifyOutputComplete" type="void" line="17"/>
            <method name="waitOutputComplete" type="void" line="21">
                <scope line="22">
                    <scope line="23">
                        <scope line="24"/>
                        <scope line="27"/>
                    </scope>
                </scope>
            </method>
            <method name="findConnector" type="Connector" line="32">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="33">
                    <scope line="34"/>
                </scope>
            </method>
            <method name="parseConnectorArgs" type="Map&lt;String,com.sun.jdi.connect.Connector.Argument&gt;" line="40">
                <params>
                    <param name="connector" type="Connector"/>
                    <param name="argString" type="String"/>
                </params>
                <declaration name="arguments" type="Map&amp;lt;String,com.sun.jdi.connect.Connector.Argument&amp;gt;" line="41"/>
                <declaration name="regexPattern" type="String" line="42"/>
                <declaration name="p" type="Pattern" line="43"/>
                <declaration name="m" type="Matcher" line="44"/>
                <scope line="45">
                    <declaration name="startPosition" type="int" line="46"/>
                    <declaration name="endPosition" type="int" line="47"/>
                    <scope line="48"/>
                    <declaration name="token" type="String" line="51"/>
                    <declaration name="index" type="int" line="52"/>
                    <declaration name="name" type="String" line="53"/>
                    <declaration name="value" type="String" line="54"/>
                    <declaration name="argument" type="Connector.Argument" line="55"/>
                    <scope line="56"/>
                </scope>
                <scope line="63"/>
            </method>
            <method name="VMConnection" type="constructor" line="68">
                <params>
                    <param name="connectSpec" type="String"/>
                    <param name="traceFlags" type="int"/>
                </params>
                <declaration name="nameString" type="String" line="69"/>
                <declaration name="argString" type="String" line="70"/>
                <declaration name="index" type="int" line="71"/>
                <scope line="72"/>
                <scope line="76"/>
                <scope line="81"/>
            </method>
            <method name="open" type="VirtualMachine" line="87">
                <scope line="88"/>
                <scope line="91"/>
                <scope line="94"/>
                <scope line="97"/>
                <scope line="101"/>
                <scope line="105">
                    <scope line="106">
                        <declaration name="psvm" type="PathSearchingVirtualMachine" line="107"/>
                    </scope>
                    <scope line="110"/>
                </scope>
            </method>
            <method name="setConnectorArg" type="boolean" line="116">
                <params>
                    <param name="name" type="String"/>
                    <param name="value" type="String"/>
                </params>
                <scope line="117"/>
                <declaration name="argument" type="Connector.Argument" line="120"/>
                <scope line="121"/>
            </method>
            <method name="connectorArg" type="String" line="127">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="argument" type="Connector.Argument" line="128"/>
                <scope line="129"/>
            </method>
            <method name="vm" type="VirtualMachine" line="134">
                <scope line="135"/>
                <scope line="138"/>
            </method>
            <method name="isOpen" type="boolean" line="142"/>
            <method name="isLaunch" type="boolean" line="145"/>
            <method name="disposeVM" type="void" line="148">
                <scope line="149">
                    <scope line="150"/>
                </scope>
                <scope line="155">
                    <scope line="156"/>
                </scope>
            </method>
            <method name="setEventRequests" type="void" line="163">
                <params>
                    <param name="vm" type="VirtualMachine"/>
                </params>
                <declaration name="erm" type="EventRequestManager" line="164"/>
                <declaration name="evaluator" type="Commands" line="165"/>
                <declaration name="tsr" type="ThreadStartRequest" line="167"/>
                <declaration name="tdr" type="ThreadDeathRequest" line="169"/>
            </method>
            <method name="resolveEventRequests" type="void" line="172"/>
            <method name="dumpStream" type="void" line="175">
                <params>
                    <param name="stream" type="InputStream"/>
                </params>
                <declaration name="in" type="BufferedReader" line="176"/>
                <declaration name="i" type="int" line="177"/>
                <scope line="178">
                    <scope line="179"/>
                </scope>
                <scope line="183">
                    <declaration name="s" type="String" line="184"/>
                    <scope line="185"/>
                </scope>
            </method>
            <javadoc line="190">
                Create a Thread that will retrieve and display any output.
                  Needs to be high priority, else debugger may exit before
                  it can be displayed.                
            </javadoc>
            <method name="displayRemoteOutput" type="void" line="195">
                <params>
                    <param name="stream" type="InputStream"/>
                </params>
                <anonymous_class line="196">
                    <method name="run" type="void" line="197">
                        <scope line="198"/>
                        <scope line="201"/>
                        <scope line="204"/>
                    </method>
                </anonymous_class>
                <declaration name="thr" type="Thread" line="196"/>
            </method>
            <method name="dumpFailedLaunchInfo" type="void" line="213">
                <params>
                    <param name="process" type="Process"/>
                </params>
                <scope line="214"/>
                <scope line="218"/>
            </method>
            <method name="launchTarget" type="VirtualMachine" line="222">
                <declaration name="launcher" type="LaunchingConnector" line="223"/>
                <scope line="224">
                    <declaration name="vm" type="VirtualMachine" line="225"/>
                </scope>
                <scope line="231"/>
                <scope line="235"/>
                <scope line="239"/>
            </method>
            <method name="attachTarget" type="VirtualMachine" line="247">
                <declaration name="attacher" type="AttachingConnector" line="248"/>
                <scope line="249"/>
                <scope line="252"/>
                <scope line="256"/>
            </method>
            <method name="listenTarget" type="VirtualMachine" line="262">
                <declaration name="listener" type="ListeningConnector" line="263"/>
                <scope line="264">
                    <declaration name="retAddress" type="String" line="265"/>
                </scope>
                <scope line="271"/>
                <scope line="275"/>
            </method>
        </class>
    </source>