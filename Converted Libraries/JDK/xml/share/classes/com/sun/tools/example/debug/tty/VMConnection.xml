<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.tty">
        <import package="com.sun.jdi"/>
        <import package="com.sun.jdi.connect"/>
        <import package="com.sun.jdi.request.EventRequestManager"/>
        <import package="com.sun.jdi.request.ThreadStartRequest"/>
        <import package="com.sun.jdi.request.ThreadDeathRequest"/>
        <import package="java.util"/>
        <import package="java.util.regex"/>
        <import package="java.io"/>
        <class name="VMConnection" line="38">
            <comment line="320">
                                
            </comment>
            <comment line="344">
                                
            </comment>
            <comment line="359">
                                
            </comment>
            <declaration name="vm" type="VirtualMachine" line="40"/>
            <declaration name="process" type="Process" line="41"/>
            <declaration name="outputCompleteCount" type="int" line="42"/>
            <declaration name="connector" type="Connector" line="44"/>
            <declaration name="connectorArgs" type="Map&lt;String,com.sun.jdi.connect.Connector.Argument&gt;" line="45"/>
            <declaration name="traceFlags" type="int" line="46"/>
            <method name="notifyOutputComplete" type="void" line="48"/>
            <method name="waitOutputComplete" type="void" line="53">
                <comment line="54">
                    Wait for stderr and stdout                    
                </comment>
                <scope line="55">
                    <scope line="56">
                        <scope line="57"/>
                        <scope line="57"/>
                    </scope>
                </scope>
            </method>
            <method name="findConnector" type="Connector" line="62">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="64">
                    <scope line="65"/>
                </scope>
            </method>
            <method name="parseConnectorArgs" type="Map<String,com.sun.jdi.connect.Connector.Argument>" line="72">
                <params>
                    <param name="connector" type="Connector"/>
                    <param name="argString" type="String"/>
                </params>
                <comment line="75">
                    We are parsing strings of the form:
                        name1=value1,[name2=value2,...]
                     However, the value1...valuen substrings may contain
                     embedded comma(s), so make provision for quoting inside
                     the value substrings. (Bug ID 4285874)                    
                </comment>
                <comment line="83">
                    special case for quote=.,                    
                </comment>
                <comment line="84">
                    name=                    
                </comment>
                <comment line="85">
                    ( &quot;l , ue&quot;                    
                </comment>
                <comment line="86">
                    &apos;l , ue&apos;                    
                </comment>
                <comment line="87">
                    v a l u e )+ ,                    
                </comment>
                <comment line="94">
                    It is an error if parsing skips over any part of argString.                    
                </comment>
                <comment line="106">
                    Remove comma delimiter                    
                </comment>
                <comment line="116">
                    Remove what was just parsed...                    
                </comment>
                <comment line="117">
                    and parse again on what is left.                    
                </comment>
                <comment line="120">
                    It is an error if any part of argString is left over,
                     unless it was empty to begin with.                    
                </comment>
                <declaration name="arguments" type="Map&lt;String,com.sun.jdi.connect.Connector.Argument&gt;" line="73"/>
                <declaration name="regexPattern" type="String" line="82"/>
                <declaration name="p" type="Pattern" line="88"/>
                <declaration name="m" type="Matcher" line="89"/>
                <scope line="90">
                    <declaration name="startPosition" type="int" line="91"/>
                    <declaration name="endPosition" type="int" line="92"/>
                    <scope line="93"/>
                    <declaration name="token" type="String" line="102"/>
                    <declaration name="index" type="int" line="103"/>
                    <declaration name="name" type="String" line="104"/>
                    <declaration name="value" type="String" line="105"/>
                    <declaration name="argument" type="Connector.Argument" line="108"/>
                    <scope line="109"/>
                </scope>
                <scope line="119"/>
            </method>
            <method name="VMConnection" type="constructor" line="130">
                <params>
                    <param name="connectSpec" type="String"/>
                    <param name="traceFlags" type="int"/>
                </params>
                <declaration name="nameString" type="String" line="131"/>
                <declaration name="argString" type="String" line="132"/>
                <declaration name="index" type="int" line="133"/>
                <scope line="134"/>
                <scope line="137"/>
                <scope line="143"/>
            </method>
            <method name="open" type="VirtualMachine" line="152">
                <comment line="168">
                    Now that the vm connection is open, fetch the debugee
                     classpath and set up a default sourcepath.
                     (Unless user supplied a sourcepath on the command line)
                     (Bug ID 4186582)                    
                </comment>
                <scope line="153"/>
                <scope line="155"/>
                <scope line="157"/>
                <scope line="159"/>
                <scope line="164"/>
                <scope line="174">
                    <scope line="175">
                        <declaration name="psvm" type="PathSearchingVirtualMachine" line="176"/>
                    </scope>
                    <scope line="179"/>
                </scope>
            </method>
            <method name="setConnectorArg" type="boolean" line="187">
                <params>
                    <param name="name" type="String"/>
                    <param name="value" type="String"/>
                </params>
                <comment line="188">
                    Too late if the connection already made                    
                </comment>
                <scope line="191"/>
                <declaration name="argument" type="Connector.Argument" line="195"/>
                <scope line="196"/>
            </method>
            <method name="connectorArg" type="String" line="203">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="argument" type="Connector.Argument" line="204"/>
                <scope line="205"/>
            </method>
            <method name="vm" type="VirtualMachine" line="211">
                <scope line="212"/>
                <scope line="214"/>
            </method>
            <method name="isOpen" type="boolean" line="219"/>
            <method name="isLaunch" type="boolean" line="223"/>
            <method name="disposeVM" type="void" line="227">
                <scope line="228">
                    <scope line="229"/>
                </scope>
                <scope line="233">
                    <scope line="234"/>
                </scope>
            </method>
            <method name="setEventRequests" type="void" line="242">
                <params>
                    <param name="vm" type="VirtualMachine"/>
                </params>
                <comment line="245">
                    Normally, we want all uncaught exceptions.  We request them                    
                </comment>
                <comment line="246">
                    via the same mechanism as Commands.commandCatchException()                    
                </comment>
                <comment line="247">
                    so the user can ignore them later if they are not                    
                </comment>
                <comment line="248">
                    interested.                    
                </comment>
                <comment line="249">
                    FIXME: this works but generates spurious messages on stdout                    
                </comment>
                <comment line="250">
                    during startup:                    
                </comment>
                <comment line="251">
                    Set uncaught java.lang.Throwable                    
                </comment>
                <comment line="252">
                    Set deferred uncaught java.lang.Throwable                    
                </comment>
                <declaration name="erm" type="EventRequestManager" line="243"/>
                <declaration name="evaluator" type="Commands" line="253"/>
                <declaration name="tsr" type="ThreadStartRequest" line="257"/>
                <declaration name="tdr" type="ThreadDeathRequest" line="259"/>
            </method>
            <method name="resolveEventRequests" type="void" line="263"/>
            <method name="dumpStream" type="void" line="267">
                <params>
                    <param name="stream" type="InputStream"/>
                </params>
                <comment line="273">
                    Special case: use                    
                </comment>
                <comment line="274">
                    printDirect()                    
                </comment>
                <comment line="281">
                    else we got a Bad file number IOException which just means                    
                </comment>
                <comment line="282">
                    that the debuggee has gone away.  We&apos;ll just treat it the                    
                </comment>
                <comment line="283">
                    same as if we got an EOF.                    
                </comment>
                <declaration name="in" type="BufferedReader" line="268"/>
                <declaration name="i" type="int" line="270"/>
                <scope line="271">
                    <scope line="272"/>
                </scope>
                <scope line="276">
                    <declaration name="s" type="String" line="277"/>
                    <scope line="278"/>
                </scope>
            </method>
            <javadoc line="287">
                Create a Thread that will retrieve and display any output.
                  Needs to be high priority, else debugger may exit before
                  it can be displayed.                
            </javadoc>
            <method name="displayRemoteOutput" type="void" line="292">
                <params>
                    <param name="stream" type="InputStream"/>
                </params>
                <anonymous_class line="293">
                    <method name="run" type="void" line="295">
                        <scope line="296"/>
                        <scope line="298"/>
                        <scope line="300"/>
                    </method>
                </anonymous_class>
                <declaration name="thr" type="Thread" line="293"/>
            </method>
            <method name="dumpFailedLaunchInfo" type="void" line="309">
                <params>
                    <param name="process" type="Process"/>
                </params>
                <scope line="310"/>
                <scope line="313"/>
            </method>
            <method name="launchTarget" type="VirtualMachine" line="320">
                <comment line="340">
                    Shuts up the compiler                    
                </comment>
                <declaration name="launcher" type="LaunchingConnector" line="321"/>
                <scope line="322">
                    <declaration name="vm" type="VirtualMachine" line="323"/>
                </scope>
                <scope line="328"/>
                <scope line="331"/>
                <scope line="334"/>
            </method>
            <method name="attachTarget" type="VirtualMachine" line="344">
                <comment line="355">
                    Shuts up the compiler                    
                </comment>
                <declaration name="attacher" type="AttachingConnector" line="345"/>
                <scope line="346"/>
                <scope line="348"/>
                <scope line="351"/>
            </method>
            <method name="listenTarget" type="VirtualMachine" line="359">
                <comment line="374">
                    Shuts up the compiler                    
                </comment>
                <declaration name="listener" type="ListeningConnector" line="360"/>
                <scope line="361">
                    <declaration name="retAddress" type="String" line="362"/>
                </scope>
                <scope line="367"/>
                <scope line="370"/>
            </method>
        </class>
    </source>