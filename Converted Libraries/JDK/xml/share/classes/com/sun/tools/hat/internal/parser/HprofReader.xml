<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.hat.internal.parser">
        <import package="java.io"/>
        <import package="java.util.Date"/>
        <import package="java.util.Hashtable"/>
        <import package="com.sun.tools.hat.internal.model.ArrayTypeCodes"/>
        <import package="com.sun.tools.hat.internal.model"/>
        <class name="HprofReader" line="41">
            <extends class="Reader"/>
            <comment line="48">
                                
            </comment>
            <comment line="51">
                That&apos;s &quot;JAVA&quot;, the first part of &quot;JAVA PROFILE ...&quot;                
            </comment>
            <comment line="61">
                These version numbers are indices into VERSIONS.  The instance data
                 member version is set to one of these, and it drives decisions when
                 reading the file.
                
                 Version 1.0.1 added HPROF_GC_PRIM_ARRAY_DUMP, which requires no
                 version-sensitive parsing.
                
                 Version 1.0.1 changed the type of a constant pool entry from a signature
                 to a typecode.
                
                 Version 1.0.2 added HPROF_HEAP_DUMP_SEGMENT and HPROF_HEAP_DUMP_END
                 to allow a large heap to be dumped as a sequence of heap dump segments.
                
                 The HPROF agent in J2SE 1.2 through to 5.0 generate a version 1.0.1
                 file. In Java SE 6.0 the version is either 1.0.1 or 1.0.2 depending on
                 the size of the heap (normally it will be 1.0.1 but for multi-GB
                 heaps the heap dump will not fit in a HPROF_HEAP_DUMP record so the
                 dump is generated as version 1.0.2).                
            </comment>
            <comment line="80">
                Record types:                
            </comment>
            <comment line="121">
                The version of .hprof being read                
            </comment>
            <comment line="124">
                Current position in the file                
            </comment>
            <comment line="127">
                If true, read the call stack of objects                
            </comment>
            <comment line="129">
                Size, in bytes, of identifiers.                
            </comment>
            <comment line="132">
                Hashtable&lt;Integer, ThreadObject&gt;, used to map the thread sequence number
                 (aka &quot;serial number&quot;) to the thread object ID for
                 HPROF_GC_ROOT_THREAD_OBJ.  ThreadObject is a trivial inner class,
                 at the end of this file.                
            </comment>
            <comment line="138">
                Hashtable&lt;Long, String&gt;, maps class object ID to class name
                 (with / converted to .)                
            </comment>
            <comment line="142">
                Hashtable&lt;Integer, Integer&gt;, maps class serial # to class object ID                
            </comment>
            <comment line="145">
                Hashtable&lt;Long, StackFrame&gt; maps stack frame ID to StackFrame.
                 Null if we&apos;re not tracking them.                
            </comment>
            <comment line="149">
                Hashtable&lt;Integer, StackTrace&gt; maps stack frame ID to StackTrace
                 Null if we&apos;re not tracking them.                
            </comment>
            <comment line="518">
                Read a java value.  If result is non-null, it&apos;s expected to be an
                 array of one element.  We use it to fake multiple return values.
                 @returns the number of bytes read                
            </comment>
            <comment line="649">
                Handle a HPROF_GC_CLASS_DUMP
                 Return number of bytes read                
            </comment>
            <comment line="725">
                Handle a HPROF_GC_INSTANCE_DUMP
                 Return number of bytes read                
            </comment>
            <comment line="743">
                Handle a HPROF_GC_OBJ_ARRAY_DUMP or HPROF_GC_PRIM_ARRAY_DUMP
                 Return number of bytes read                
            </comment>
            <comment line="879">
                A trivial data-holder class for HPROF_GC_ROOT_THREAD_OBJ.                
            </comment>
            <implements interface="ArrayTypeCodes"/>
            <javadoc line="41">
                Object that&apos;s used to read a hprof file.                
                <author>
                    Bill Foote                    
                </author>
            </javadoc>
            <declaration name="MAGIC_NUMBER" type="int" line="49"/>
            <declaration name="VERSIONS" type="String[]" line="51"/>
            <declaration name="VERSION_JDK12BETA3" type="int" line="57"/>
            <declaration name="VERSION_JDK12BETA4" type="int" line="58"/>
            <declaration name="VERSION_JDK6" type="int" line="59"/>
            <declaration name="HPROF_UTF8" type="int" line="82"/>
            <declaration name="HPROF_LOAD_CLASS" type="int" line="83"/>
            <declaration name="HPROF_UNLOAD_CLASS" type="int" line="84"/>
            <declaration name="HPROF_FRAME" type="int" line="85"/>
            <declaration name="HPROF_TRACE" type="int" line="86"/>
            <declaration name="HPROF_ALLOC_SITES" type="int" line="87"/>
            <declaration name="HPROF_HEAP_SUMMARY" type="int" line="88"/>
            <declaration name="HPROF_START_THREAD" type="int" line="90"/>
            <declaration name="HPROF_END_THREAD" type="int" line="91"/>
            <declaration name="HPROF_HEAP_DUMP" type="int" line="93"/>
            <declaration name="HPROF_CPU_SAMPLES" type="int" line="95"/>
            <declaration name="HPROF_CONTROL_SETTINGS" type="int" line="96"/>
            <declaration name="HPROF_LOCKSTATS_WAIT_TIME" type="int" line="97"/>
            <declaration name="HPROF_LOCKSTATS_HOLD_TIME" type="int" line="98"/>
            <declaration name="HPROF_GC_ROOT_UNKNOWN" type="int" line="100"/>
            <declaration name="HPROF_GC_ROOT_JNI_GLOBAL" type="int" line="101"/>
            <declaration name="HPROF_GC_ROOT_JNI_LOCAL" type="int" line="102"/>
            <declaration name="HPROF_GC_ROOT_JAVA_FRAME" type="int" line="103"/>
            <declaration name="HPROF_GC_ROOT_NATIVE_STACK" type="int" line="104"/>
            <declaration name="HPROF_GC_ROOT_STICKY_CLASS" type="int" line="105"/>
            <declaration name="HPROF_GC_ROOT_THREAD_BLOCK" type="int" line="106"/>
            <declaration name="HPROF_GC_ROOT_MONITOR_USED" type="int" line="107"/>
            <declaration name="HPROF_GC_ROOT_THREAD_OBJ" type="int" line="108"/>
            <declaration name="HPROF_GC_CLASS_DUMP" type="int" line="110"/>
            <declaration name="HPROF_GC_INSTANCE_DUMP" type="int" line="111"/>
            <declaration name="HPROF_GC_OBJ_ARRAY_DUMP" type="int" line="112"/>
            <declaration name="HPROF_GC_PRIM_ARRAY_DUMP" type="int" line="113"/>
            <declaration name="HPROF_HEAP_DUMP_SEGMENT" type="int" line="115"/>
            <declaration name="HPROF_HEAP_DUMP_END" type="int" line="116"/>
            <declaration name="T_CLASS" type="int" line="118"/>
            <declaration name="version" type="int" line="120"/>
            <declaration name="debugLevel" type="int" line="122"/>
            <declaration name="currPos" type="long" line="123"/>
            <declaration name="dumpsToSkip" type="int" line="125"/>
            <declaration name="callStack" type="boolean" line="126"/>
            <declaration name="identifierSize" type="int" line="128"/>
            <declaration name="names" type="Hashtable&lt;Long,String&gt;" line="129"/>
            <declaration name="threadObjects" type="Hashtable&lt;Integer,ThreadObject&gt;" line="135"/>
            <declaration name="classNameFromObjectID" type="Hashtable&lt;Long,String&gt;" line="139"/>
            <declaration name="classNameFromSerialNo" type="Hashtable&lt;Integer,String&gt;" line="142"/>
            <declaration name="stackFrames" type="Hashtable&lt;Long,StackFrame&gt;" line="146"/>
            <declaration name="stackTraces" type="Hashtable&lt;Integer,StackTrace&gt;" line="150"/>
            <declaration name="snapshot" type="Snapshot" line="152"/>
            <method name="HprofReader" type="constructor" line="156">
                <params>
                    <param name="fileName" type="String"/>
                    <param name="in" type="PositionDataInputStream"/>
                    <param name="dumpNumber" type="int"/>
                    <param name="callStack" type="boolean"/>
                    <param name="debugLevel" type="int"/>
                </params>
                <declaration name="file" type="RandomAccessFile" line="158"/>
                <scope line="166"/>
            </method>
            <method name="read" type="Snapshot" line="173">
                <comment line="175">
                    4 because of the magic number                    
                </comment>
                <comment line="199">
                    Timestamp of this record                    
                </comment>
                <comment line="200">
                    Length of record: readInt() will return negative value for record
                     length &gt;2GB.  so store 32bit value in long to keep it unsigned.                    
                </comment>
                <comment line="223">
                    Not used                    
                </comment>
                <comment line="257">
                    should be no-op                    
                </comment>
                <comment line="260">
                    skip this dump (of the end record for a sequence of dump segments)                    
                </comment>
                <comment line="264">
                    HPROF_HEAP_DUMP_END only recognized in &gt;= 1.0.2                    
                </comment>
                <comment line="267">
                    should be no-op                    
                </comment>
                <comment line="275">
                    read the dump segment                    
                </comment>
                <comment line="281">
                    all segments comprising the heap dump will be skipped                    
                </comment>
                <comment line="285">
                    HPROF_HEAP_DUMP_SEGMENT only recognized in &gt;= 1.0.2                    
                </comment>
                <comment line="319">
                    Not used                    
                </comment>
                <comment line="343">
                    Ignore these record types                    
                </comment>
                <scope line="178"/>
                <scope line="180"/>
                <scope line="185"/>
                <scope line="191">
                    <declaration name="type" type="int" line="192"/>
                    <scope line="193"/>
                    <scope line="195"/>
                    <declaration name="length" type="long" line="201"/>
                    <scope line="202"/>
                    <scope line="207"/>
                    <scope line="214">
                        <declaration name="id" type="long" line="215"/>
                        <declaration name="chars" type="byte[]" line="216"/>
                    </scope>
                    <scope line="221">
                        <declaration name="serialNo" type="int" line="222"/>
                        <declaration name="classID" type="long" line="223"/>
                        <declaration name="stackTraceSerialNo" type="int" line="224"/>
                        <declaration name="classNameID" type="long" line="225"/>
                        <declaration name="classIdI" type="Long" line="226"/>
                        <declaration name="nm" type="String" line="227"/>
                        <scope line="229"/>
                    </scope>
                    <scope line="235">
                        <scope line="236">
                            <scope line="237"/>
                            <scope line="239"/>
                            <scope line="242"/>
                        </scope>
                        <scope line="246"/>
                    </scope>
                    <scope line="253">
                        <scope line="254">
                            <scope line="255"/>
                            <scope line="258"/>
                        </scope>
                        <scope line="262"/>
                    </scope>
                    <scope line="270">
                        <scope line="271">
                            <scope line="272">
                                <scope line="273"/>
                                <scope line="276"/>
                            </scope>
                            <scope line="279"/>
                        </scope>
                        <scope line="283"/>
                    </scope>
                    <scope line="291">
                        <scope line="292"/>
                        <scope line="294">
                            <declaration name="id" type="long" line="295"/>
                            <declaration name="methodName" type="String" line="296"/>
                            <declaration name="methodSig" type="String" line="297"/>
                            <declaration name="sourceFile" type="String" line="298"/>
                            <declaration name="classSer" type="int" line="299"/>
                            <declaration name="className" type="String" line="300"/>
                            <declaration name="lineNumber" type="int" line="301"/>
                            <scope line="302"/>
                        </scope>
                    </scope>
                    <scope line="313">
                        <scope line="314"/>
                        <scope line="316">
                            <declaration name="serialNo" type="int" line="317"/>
                            <declaration name="threadSeq" type="int" line="318"/>
                            <declaration name="frames" type="StackFrame[]" line="319"/>
                            <scope line="320">
                                <declaration name="fid" type="long" line="321"/>
                                <scope line="323"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="341"/>
                    <scope line="346"/>
                </scope>
            </method>
            <method name="skipBytes" type="void" line="356">
                <params>
                    <param name="length" type="long"/>
                </params>
            </method>
            <method name="readVersionHeader" type="int" line="360">
                <comment line="374">
                    Not matched                    
                </comment>
                <comment line="377">
                    Full match                    
                </comment>
                <declaration name="candidatesLeft" type="int" line="361"/>
                <declaration name="matched" type="boolean[]" line="362"/>
                <scope line="363"/>
                <declaration name="pos" type="int" line="367"/>
                <scope line="368">
                    <declaration name="c" type="char" line="369"/>
                    <scope line="371">
                        <scope line="372">
                            <scope line="373"/>
                            <scope line="376"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="readHeapDump" type="void" line="386">
                <params>
                    <param name="bytesLeft" type="long"/>
                    <param name="posAtEnd" type="long"/>
                </params>
                <comment line="414">
                    Ignored, for now                    
                </comment>
                <scope line="387">
                    <declaration name="type" type="int" line="388"/>
                    <scope line="389"/>
                    <scope line="396">
                        <declaration name="id" type="long" line="397"/>
                    </scope>
                    <scope line="402">
                        <declaration name="id" type="long" line="403"/>
                        <declaration name="threadSeq" type="int" line="404"/>
                        <declaration name="stackSeq" type="int" line="405"/>
                    </scope>
                    <scope line="411">
                        <declaration name="id" type="long" line="412"/>
                        <declaration name="globalRefId" type="long" line="413"/>
                    </scope>
                    <scope line="418">
                        <declaration name="id" type="long" line="419"/>
                        <declaration name="threadSeq" type="int" line="420"/>
                        <declaration name="depth" type="int" line="421"/>
                        <declaration name="to" type="ThreadObject" line="423"/>
                        <declaration name="st" type="StackTrace" line="424"/>
                        <scope line="425"/>
                    </scope>
                    <scope line="432">
                        <declaration name="id" type="long" line="433"/>
                        <declaration name="threadSeq" type="int" line="434"/>
                        <declaration name="depth" type="int" line="435"/>
                        <declaration name="to" type="ThreadObject" line="437"/>
                        <declaration name="st" type="StackTrace" line="438"/>
                        <scope line="439"/>
                    </scope>
                    <scope line="446">
                        <declaration name="id" type="long" line="447"/>
                        <declaration name="threadSeq" type="int" line="448"/>
                        <declaration name="to" type="ThreadObject" line="450"/>
                        <declaration name="st" type="StackTrace" line="451"/>
                    </scope>
                    <scope line="456">
                        <declaration name="id" type="long" line="457"/>
                    </scope>
                    <scope line="462">
                        <declaration name="id" type="long" line="463"/>
                        <declaration name="threadSeq" type="int" line="464"/>
                        <declaration name="to" type="ThreadObject" line="466"/>
                        <declaration name="st" type="StackTrace" line="467"/>
                    </scope>
                    <scope line="472">
                        <declaration name="id" type="long" line="473"/>
                    </scope>
                    <scope line="478">
                        <declaration name="bytesRead" type="int" line="479"/>
                    </scope>
                    <scope line="483">
                        <declaration name="bytesRead" type="int" line="484"/>
                    </scope>
                    <scope line="488">
                        <declaration name="bytesRead" type="int" line="489"/>
                    </scope>
                    <scope line="493">
                        <declaration name="bytesRead" type="int" line="494"/>
                    </scope>
                    <scope line="498"/>
                </scope>
                <scope line="503"/>
                <scope line="507"/>
            </method>
            <method name="readID" type="long" line="512"/>
            <method name="readValue" type="int" line="522">
                <params>
                    <param name="resultArr" type="JavaThing[]"/>
                </params>
                <declaration name="type" type="byte" line="523"/>
            </method>
            <method name="readValueForType" type="int" line="528">
                <params>
                    <param name="type" type="byte"/>
                    <param name="resultArr" type="JavaThing[]"/>
                </params>
                <scope line="529"/>
            </method>
            <method name="readValueForTypeSignature" type="int" line="536">
                <params>
                    <param name="type" type="byte"/>
                    <param name="resultArr" type="JavaThing[]"/>
                </params>
                <scope line="539">
                    <declaration name="id" type="long" line="540"/>
                    <scope line="541"/>
                </scope>
                <scope line="546">
                    <declaration name="b" type="int" line="547"/>
                    <scope line="548"/>
                    <scope line="551"/>
                </scope>
                <scope line="556">
                    <declaration name="b" type="byte" line="557"/>
                    <scope line="558"/>
                </scope>
                <scope line="563">
                    <declaration name="s" type="short" line="564"/>
                    <scope line="565"/>
                </scope>
                <scope line="570">
                    <declaration name="ch" type="char" line="571"/>
                    <scope line="572"/>
                </scope>
                <scope line="577">
                    <declaration name="val" type="int" line="578"/>
                    <scope line="579"/>
                </scope>
                <scope line="584">
                    <declaration name="val" type="long" line="585"/>
                    <scope line="586"/>
                </scope>
                <scope line="591">
                    <declaration name="val" type="float" line="592"/>
                    <scope line="593"/>
                </scope>
                <scope line="598">
                    <declaration name="val" type="double" line="599"/>
                    <scope line="600"/>
                </scope>
                <scope line="605"/>
            </method>
            <method name="getThreadObjectFromSequence" type="ThreadObject" line="612">
                <params>
                    <param name="threadSeq" type="int"/>
                </params>
                <declaration name="to" type="ThreadObject" line="613"/>
                <scope line="614"/>
            </method>
            <method name="getNameFromID" type="String" line="621">
                <params>
                    <param name="id" type="long"/>
                </params>
            </method>
            <method name="getNameFromID" type="String" line="625">
                <params>
                    <param name="id" type="Long"/>
                </params>
                <scope line="626"/>
                <declaration name="result" type="String" line="629"/>
                <scope line="630"/>
            </method>
            <method name="getStackTraceFromSerial" type="StackTrace" line="637">
                <params>
                    <param name="ser" type="int"/>
                </params>
                <scope line="638"/>
                <declaration name="result" type="StackTrace" line="641"/>
                <scope line="642"/>
            </method>
            <method name="readClass" type="int" line="652">
                <comment line="668">
                    unused                    
                </comment>
                <comment line="670">
                    We ignore the values                    
                </comment>
                <declaration name="id" type="long" line="653"/>
                <declaration name="stackTrace" type="StackTrace" line="654"/>
                <declaration name="superId" type="long" line="655"/>
                <declaration name="classLoaderId" type="long" line="656"/>
                <declaration name="signersId" type="long" line="657"/>
                <declaration name="protDomainId" type="long" line="658"/>
                <declaration name="reserved1" type="long" line="659"/>
                <declaration name="reserved2" type="long" line="660"/>
                <declaration name="instanceSize" type="int" line="661"/>
                <declaration name="bytesRead" type="int" line="662"/>
                <declaration name="numConstPoolEntries" type="int" line="664"/>
                <scope line="666">
                    <declaration name="index" type="int" line="667"/>
                </scope>
                <declaration name="numStatics" type="int" line="672"/>
                <declaration name="valueBin" type="JavaThing[]" line="674"/>
                <declaration name="statics" type="JavaStatic[]" line="675"/>
                <scope line="676">
                    <declaration name="nameId" type="long" line="677"/>
                    <declaration name="type" type="byte" line="679"/>
                    <declaration name="fieldName" type="String" line="682"/>
                    <scope line="683"/>
                    <declaration name="signature" type="String" line="686"/>
                    <declaration name="f" type="JavaField" line="687"/>
                </scope>
                <declaration name="numFields" type="int" line="691"/>
                <declaration name="fields" type="JavaField[]" line="693"/>
                <scope line="694">
                    <declaration name="nameId" type="long" line="695"/>
                    <declaration name="type" type="byte" line="697"/>
                    <declaration name="fieldName" type="String" line="699"/>
                    <scope line="700"/>
                    <declaration name="signature" type="String" line="703"/>
                </scope>
                <declaration name="name" type="String" line="706"/>
                <scope line="707"/>
                <declaration name="c" type="JavaClass" line="711"/>
            </method>
            <method name="toHex" type="String" line="720">
                <params>
                    <param name="addr" type="long"/>
                </params>
            </method>
            <method name="readInstance" type="int" line="728">
                <declaration name="start" type="long" line="729"/>
                <declaration name="id" type="long" line="730"/>
                <declaration name="stackTrace" type="StackTrace" line="731"/>
                <declaration name="classID" type="long" line="732"/>
                <declaration name="bytesFollowing" type="int" line="733"/>
                <declaration name="bytesRead" type="int" line="734"/>
                <declaration name="jobj" type="JavaObject" line="735"/>
            </method>
            <method name="readArray" type="int" line="746">
                <params>
                    <param name="isPrimitive" type="boolean"/>
                </params>
                <comment line="762">
                    Check for primitive arrays:                    
                </comment>
                <declaration name="start" type="long" line="747"/>
                <declaration name="id" type="long" line="748"/>
                <declaration name="stackTrace" type="StackTrace" line="749"/>
                <declaration name="num" type="int" line="750"/>
                <declaration name="bytesRead" type="int" line="751"/>
                <declaration name="elementClassID" type="long" line="752"/>
                <scope line="753"/>
                <scope line="756"/>
                <declaration name="primitiveSignature" type="byte" line="762"/>
                <declaration name="elSize" type="int" line="763"/>
                <scope line="764">
                    <scope line="766"/>
                    <scope line="771"/>
                    <scope line="776"/>
                    <scope line="781"/>
                    <scope line="786"/>
                    <scope line="791"/>
                    <scope line="796"/>
                    <scope line="801"/>
                    <scope line="807"/>
                </scope>
                <scope line="812">
                    <declaration name="size" type="int" line="813"/>
                    <declaration name="va" type="JavaValueArray" line="815"/>
                </scope>
                <scope line="819">
                    <declaration name="sz" type="int" line="820"/>
                    <declaration name="arr" type="JavaObjectArray" line="822"/>
                </scope>
            </method>
            <method name="signatureFromTypeId" type="byte" line="830">
                <params>
                    <param name="typeId" type="byte"/>
                </params>
                <scope line="832"/>
                <scope line="835"/>
                <scope line="838"/>
                <scope line="841"/>
                <scope line="844"/>
                <scope line="847"/>
                <scope line="850"/>
                <scope line="853"/>
                <scope line="856"/>
                <scope line="859"/>
            </method>
            <method name="handleEOF" type="void" line="865">
                <params>
                    <param name="exp" type="EOFException"/>
                    <param name="snapshot" type="Snapshot"/>
                </params>
                <comment line="871">
                    we have EOF, we have to tolerate missing references                    
                </comment>
                <scope line="866"/>
            </method>
            <method name="warn" type="void" line="874">
                <params>
                    <param name="msg" type="String"/>
                </params>
            </method>
            <class name="ThreadObject" line="881">
                <declaration name="threadId" type="long" line="883"/>
                <declaration name="stackSeq" type="int" line="884"/>
                <method name="ThreadObject" type="constructor" line="886">
                    <params>
                        <param name="threadId" type="long"/>
                        <param name="stackSeq" type="int"/>
                    </params>
                </method>
            </class>
        </class>
    </source>