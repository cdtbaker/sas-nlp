<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.tty">
        <import package="com.sun.jdi"/>
        <import package="com.sun.jdi.connect.Connector"/>
        <import package="com.sun.jdi.request"/>
        <import package="com.sun.tools.example.debug.expr.ExpressionParser"/>
        <import package="com.sun.tools.example.debug.expr.ParseException"/>
        <import package="java.text"/>
        <import package="java.util"/>
        <import package="java.io"/>
        <class name="Commands" line="38">
            <comment line="620">
                step                
            </comment>
            <comment line="651">
                stepi
                 step instruction.                
            </comment>
            <comment line="1001">
                The next two methods are used by this class and by EventHandler
                 to print consistent locations and error messages.                
            </comment>
            <comment line="1535">
                                
            </comment>
            <comment line="1549">
                                
            </comment>
            <comment line="1556">
                                
            </comment>
            <comment line="1636">
                Print a specified reference.                
            </comment>
            <class name="AsyncExecution" line="40">
                <method name="action" type="void" line="41"/>
                <method name="AsyncExecution" type="constructor" line="43"/>
                <method name="execute" type="void" line="47">
                    <comment line="48">
                        Save current thread and stack frame. (BugId 4296031)                        
                    </comment>
                    <comment line="59">
                        (BugId 4453329)                        
                    </comment>
                    <comment line="65">
                        This was an asynchronous command.  Events may have been
                         processed while it was running.  Restore the thread and
                         stack frame the user was looking at.  (BugId 4296031)                        
                    </comment>
                    <declaration name="threadInfo" type="ThreadInfo" line="51"/>
                    <declaration name="stackFrame" type="int" line="52"/>
                    <anonymous_class line="53">
                        <method name="run" type="void" line="55">
                            <comment line="59">
                                (BugId 4453329)                                
                            </comment>
                            <comment line="65">
                                This was an asynchronous command.  Events may have been
                                 processed while it was running.  Restore the thread and
                                 stack frame the user was looking at.  (BugId 4296031)                                
                            </comment>
                            <scope line="56"/>
                            <scope line="58"/>
                            <scope line="61"/>
                            <scope line="64">
                                <scope line="70">
                                    <scope line="72"/>
                                    <scope line="74"/>
                                    <scope line="76"/>
                                </scope>
                            </scope>
                        </method>
                    </anonymous_class>
                    <declaration name="thread" type="Thread" line="53"/>
                </method>
            </class>
            <method name="Commands" type="constructor" line="89"/>
            <method name="evaluate" type="Value" line="92">
                <params>
                    <param name="expr" type="String"/>
                </params>
                <comment line="120">
                    Special case: use printDirectln()                    
                </comment>
                <declaration name="result" type="Value" line="93"/>
                <declaration name="frameGetter" type="ExpressionParser.GetFrame" line="94"/>
                <scope line="95">
                    <declaration name="threadInfo" type="ThreadInfo" line="96"/>
                    <scope line="97">
                        <anonymous_class line="98">
                            <method name="get" type="StackFrame" line="100"/>
                        </anonymous_class>
                    </scope>
                </scope>
                <scope line="106"/>
                <scope line="109">
                    <declaration name="exMessage" type="String" line="110"/>
                    <scope line="111"/>
                    <scope line="113">
                        <declaration name="s" type="String" line="114"/>
                        <scope line="115"/>
                        <scope line="117"/>
                    </scope>
                </scope>
            </method>
            <method name="getStringValue" type="String" line="126">
                <declaration name="val" type="Value" line="127"/>
                <declaration name="valStr" type="String" line="128"/>
                <scope line="129"/>
                <scope line="132">
                    <declaration name="msg" type="String" line="133"/>
                    <scope line="134"/>
                    <scope line="136">
                        <declaration name="s" type="String" line="137"/>
                        <scope line="138"/>
                        <scope line="140"/>
                    </scope>
                </scope>
            </method>
            <method name="doGetThread" type="ThreadInfo" line="149">
                <params>
                    <param name="idToken" type="String"/>
                </params>
                <declaration name="threadInfo" type="ThreadInfo" line="150"/>
                <scope line="151"/>
            </method>
            <method name="typedName" type="String" line="157">
                <params>
                    <param name="method" type="Method"/>
                </params>
                <comment line="164">
                    output param types except for the last                    
                </comment>
                <comment line="170">
                    output the last param                    
                </comment>
                <comment line="173">
                    lastParam is an array.  Replace the [] with ...                    
                </comment>
                <declaration name="buf" type="StringBuffer" line="158"/>
                <declaration name="args" type="List&lt;String&gt;" line="162"/>
                <declaration name="lastParam" type="int" line="163"/>
                <scope line="165"/>
                <scope line="169">
                    <declaration name="lastStr" type="String" line="171"/>
                    <scope line="172"/>
                    <scope line="176"/>
                </scope>
            </method>
            <method name="commandConnectors" type="void" line="184">
                <params>
                    <param name="vmm" type="VirtualMachineManager"/>
                </params>
                <comment line="202">
                    no current value and no default.                    
                </comment>
                <declaration name="ccs" type="Collection&lt;Connector&gt;" line="185"/>
                <scope line="186"/>
                <scope line="189">
                    <declaration name="transportName" type="String" line="190"/>
                    <scope line="197">
                        <declaration name="requiredArgument" type="boolean" line="200"/>
                        <scope line="201"/>
                        <scope line="206"/>
                    </scope>
                </scope>
            </method>
            <method name="commandClasses" type="void" line="219">
                <declaration name="classList" type="StringBuffer" line="220"/>
                <scope line="221"/>
            </method>
            <method name="commandClass" type="void" line="228">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="288">
                    array type                    
                </comment>
                <scope line="230"/>
                <declaration name="idClass" type="String" line="235"/>
                <declaration name="showAll" type="boolean" line="236"/>
                <scope line="238">
                    <scope line="239"/>
                    <scope line="241"/>
                </scope>
                <declaration name="type" type="ReferenceType" line="246"/>
                <scope line="247"/>
                <scope line="251">
                    <declaration name="clazz" type="ClassType" line="252"/>
                    <declaration name="superclass" type="ClassType" line="255"/>
                    <scope line="256"/>
                    <declaration name="interfaces" type="List&lt;InterfaceType&gt;" line="261"/>
                    <scope line="263"/>
                    <scope line="267"/>
                    <scope line="270"/>
                </scope>
                <scope line="273">
                    <declaration name="interfaze" type="InterfaceType" line="274"/>
                    <scope line="276"/>
                    <scope line="279"/>
                    <scope line="282"/>
                    <scope line="285"/>
                </scope>
                <scope line="288">
                    <declaration name="array" type="ArrayType" line="289"/>
                </scope>
            </method>
            <method name="commandMethods" type="void" line="294">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="295"/>
                <declaration name="idClass" type="String" line="300"/>
                <declaration name="cls" type="ReferenceType" line="301"/>
                <scope line="302">
                    <declaration name="methodsList" type="StringBuffer" line="303"/>
                    <scope line="304"/>
                </scope>
                <scope line="311"/>
            </method>
            <method name="commandFields" type="void" line="316">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="317"/>
                <declaration name="idClass" type="String" line="322"/>
                <declaration name="cls" type="ReferenceType" line="323"/>
                <scope line="324">
                    <declaration name="fields" type="List&lt;Field&gt;" line="325"/>
                    <declaration name="visible" type="List&lt;Field&gt;" line="326"/>
                    <declaration name="fieldsList" type="StringBuffer" line="327"/>
                    <scope line="328">
                        <declaration name="s" type="String" line="329"/>
                        <scope line="330"/>
                        <scope line="334"/>
                        <scope line="339"/>
                    </scope>
                </scope>
                <scope line="347"/>
            </method>
            <method name="printThreadGroup" type="void" line="352">
                <params>
                    <param name="tg" type="ThreadGroupReference"/>
                </params>
                <comment line="372">
                    Note any thread group changes                    
                </comment>
                <comment line="378">
                    Do a bit of filling with whitespace to get thread ID
                     and thread names to line up in the listing, and also
                     allow for proper localization.  This also works for
                     very long thread names, at the possible cost of lines
                     being wrapped by the display device.                    
                </comment>
                <comment line="394">
                    Select the output format to use based on thread status
                     and breakpoint.                    
                </comment>
                <declaration name="threadIter" type="ThreadIterator" line="353"/>
                <declaration name="maxIdLength" type="int" line="356"/>
                <declaration name="maxNameLength" type="int" line="357"/>
                <scope line="358">
                    <declaration name="thr" type="ThreadReference" line="359"/>
                </scope>
                <scope line="367">
                    <declaration name="thr" type="ThreadReference" line="368"/>
                    <scope line="369"/>
                    <scope line="373"/>
                    <declaration name="idBuffer" type="StringBuffer" line="385"/>
                    <scope line="386"/>
                    <declaration name="nameBuffer" type="StringBuffer" line="389"/>
                    <scope line="390"/>
                    <declaration name="statusFormat" type="String" line="398"/>
                    <scope line="401"/>
                    <scope line="403"/>
                    <scope line="408"/>
                    <scope line="410"/>
                    <scope line="415"/>
                    <scope line="417"/>
                    <scope line="422"/>
                    <scope line="424"/>
                    <scope line="429"/>
                    <scope line="431"/>
                    <scope line="436"/>
                    <scope line="438"/>
                </scope>
            </method>
            <method name="commandThreads" type="void" line="451">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="452"/>
                <declaration name="name" type="String" line="456"/>
                <declaration name="tg" type="ThreadGroupReference" line="457"/>
                <scope line="458"/>
                <scope line="460"/>
            </method>
            <method name="commandThreadGroups" type="void" line="465">
                <declaration name="it" type="ThreadGroupIterator" line="466"/>
                <declaration name="cnt" type="int" line="467"/>
                <scope line="468">
                    <declaration name="tg" type="ThreadGroupReference" line="469"/>
                </scope>
            </method>
            <method name="commandThread" type="void" line="478">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="479"/>
                <declaration name="threadInfo" type="ThreadInfo" line="483"/>
                <scope line="484"/>
            </method>
            <method name="commandThreadGroup" type="void" line="489">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="490"/>
                <declaration name="name" type="String" line="494"/>
                <declaration name="tg" type="ThreadGroupReference" line="495"/>
                <scope line="496"/>
                <scope line="498"/>
            </method>
            <method name="commandRun" type="void" line="503">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="504">
                    The &apos;run&apos; command makes little sense in a
                     that doesn&apos;t support restarts or multiple VMs. However,
                     this is an attempt to emulate the behavior of the old
                     JDB as much as possible. For new users and implementations
                     it is much more straightforward to launch immedidately
                     with the -launch option.                    
                </comment>
                <comment line="526">
                    Set the main class and any arguments. Note that this will work
                     only with the standard launcher, &quot;com.sun.jdi.CommandLineLauncher&quot;                    
                </comment>
                <comment line="547">
                    Launch the VM.                    
                </comment>
                <declaration name="connection" type="VMConnection" line="512"/>
                <scope line="513">
                    <scope line="514"/>
                    <scope line="516"/>
                </scope>
                <scope line="521"/>
                <declaration name="args" type="String" line="530"/>
                <scope line="531">
                    <declaration name="argsSet" type="boolean" line="533"/>
                    <scope line="534"/>
                </scope>
                <scope line="538">
                    <scope line="540"/>
                </scope>
            </method>
            <method name="commandLoad" type="void" line="554">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
            </method>
            <method name="allThreads" type="List<ThreadReference>" line="558">
                <params>
                    <param name="group" type="ThreadGroupReference"/>
                </params>
                <declaration name="list" type="List&lt;ThreadReference&gt;" line="559"/>
                <scope line="561"/>
            </method>
            <method name="commandSuspend" type="void" line="567">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="568"/>
                <scope line="571">
                    <scope line="572">
                        <declaration name="threadInfo" type="ThreadInfo" line="573"/>
                        <scope line="574"/>
                    </scope>
                </scope>
            </method>
            <method name="commandResume" type="void" line="581">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="582"/>
                <scope line="586">
                    <scope line="587">
                        <declaration name="threadInfo" type="ThreadInfo" line="588"/>
                        <scope line="589"/>
                    </scope>
                </scope>
            </method>
            <method name="commandCont" type="void" line="597">
                <scope line="598"/>
            </method>
            <method name="clearPreviousStep" type="void" line="606">
                <params>
                    <param name="thread" type="ThreadReference"/>
                </params>
                <comment line="607">
                    A previous step may not have completed on this thread;
                     if so, it gets removed here.                    
                </comment>
                <declaration name="mgr" type="EventRequestManager" line="611"/>
                <scope line="612">
                    <scope line="613"/>
                </scope>
            </method>
            <method name="commandStep" type="void" line="622">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="643">
                    We want just the next step event and no others                    
                </comment>
                <declaration name="threadInfo" type="ThreadInfo" line="623"/>
                <scope line="624"/>
                <declaration name="depth" type="int" line="628"/>
                <scope line="630"/>
                <scope line="632"/>
                <declaration name="reqMgr" type="EventRequestManager" line="637"/>
                <declaration name="request" type="StepRequest" line="638"/>
                <scope line="640"/>
            </method>
            <method name="commandStepi" type="void" line="653">
                <comment line="665">
                    We want just the next step event and no others                    
                </comment>
                <declaration name="threadInfo" type="ThreadInfo" line="654"/>
                <scope line="655"/>
                <declaration name="reqMgr" type="EventRequestManager" line="660"/>
                <declaration name="request" type="StepRequest" line="661"/>
            </method>
            <method name="commandNext" type="void" line="672">
                <comment line="684">
                    We want just the next step event and no others                    
                </comment>
                <declaration name="threadInfo" type="ThreadInfo" line="673"/>
                <scope line="674"/>
                <declaration name="reqMgr" type="EventRequestManager" line="679"/>
                <declaration name="request" type="StepRequest" line="680"/>
            </method>
            <method name="doKill" type="void" line="691">
                <params>
                    <param name="thread" type="ThreadReference"/>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="692"/>
                <declaration name="expr" type="String" line="696"/>
                <declaration name="val" type="Value" line="697"/>
                <scope line="698">
                    <scope line="699"/>
                    <scope line="702"/>
                </scope>
                <scope line="705"/>
            </method>
            <method name="doKillThread" type="void" line="711">
                <params>
                    <param name="threadToKill" type="ThreadReference"/>
                    <param name="tokenizer" type="StringTokenizer"/>
                </params>
                <anonymous_class line="712">
                    <method name="action" type="void" line="714"/>
                </anonymous_class>
            </method>
            <method name="commandKill" type="void" line="720">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="721"/>
                <declaration name="threadInfo" type="ThreadInfo" line="725"/>
                <scope line="726"/>
            </method>
            <method name="listCaughtExceptions" type="void" line="733">
                <comment line="736">
                    Print a listing of the catch patterns currently in place                    
                </comment>
                <declaration name="noExceptions" type="boolean" line="734"/>
                <scope line="737">
                    <scope line="738">
                        <scope line="739"/>
                    </scope>
                </scope>
                <scope line="746"/>
            </method>
            <method name="parseExceptionSpec" type="EventRequestSpec" line="751">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="768">
                    Handle the same as &quot;all&quot; for backward
                     compatibility with existing .jdbrc files.
                    
                     Insert an &quot;all&quot; and take the current token as the
                     intended classPattern                    
                </comment>
                <declaration name="notification" type="String" line="752"/>
                <declaration name="notifyCaught" type="boolean" line="753"/>
                <declaration name="notifyUncaught" type="boolean" line="754"/>
                <declaration name="spec" type="EventRequestSpec" line="755"/>
                <declaration name="classPattern" type="String" line="756"/>
                <scope line="758"/>
                <scope line="761"/>
                <scope line="764"/>
                <scope line="767"/>
                <scope line="780"/>
                <scope line="783">
                    <scope line="784"/>
                    <scope line="788"/>
                </scope>
            </method>
            <method name="commandCatchException" type="void" line="795">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="796"/>
                <scope line="798">
                    <declaration name="spec" type="EventRequestSpec" line="799"/>
                    <scope line="800"/>
                    <scope line="802"/>
                </scope>
            </method>
            <method name="commandIgnoreException" type="void" line="808">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="809"/>
                <scope line="811">
                    <declaration name="spec" type="EventRequestSpec" line="812"/>
                    <scope line="813"/>
                    <scope line="815">
                        <scope line="816"/>
                    </scope>
                </scope>
            </method>
            <method name="commandUp" type="void" line="824">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <declaration name="threadInfo" type="ThreadInfo" line="825"/>
                <scope line="826"/>
                <declaration name="nLevels" type="int" line="831"/>
                <scope line="832">
                    <declaration name="idToken" type="String" line="833"/>
                    <declaration name="i" type="int" line="834"/>
                    <scope line="835">
                        <declaration name="nf" type="NumberFormat" line="836"/>
                        <declaration name="n" type="Number" line="838"/>
                    </scope>
                    <scope line="840"/>
                    <scope line="843"/>
                </scope>
                <scope line="850"/>
                <scope line="852"/>
                <scope line="854"/>
            </method>
            <method name="commandDown" type="void" line="859">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <declaration name="threadInfo" type="ThreadInfo" line="860"/>
                <scope line="861"/>
                <declaration name="nLevels" type="int" line="866"/>
                <scope line="867">
                    <declaration name="idToken" type="String" line="868"/>
                    <declaration name="i" type="int" line="869"/>
                    <scope line="870">
                        <declaration name="nf" type="NumberFormat" line="871"/>
                        <declaration name="n" type="Number" line="873"/>
                    </scope>
                    <scope line="875"/>
                    <scope line="878"/>
                </scope>
                <scope line="885"/>
                <scope line="887"/>
                <scope line="889"/>
            </method>
            <method name="dumpStack" type="void" line="894">
                <params>
                    <param name="threadInfo" type="ThreadInfo"/>
                    <param name="showPC" type="boolean"/>
                </params>
                <declaration name="stack" type="List&lt;StackFrame&gt;" line="895"/>
                <scope line="896"/>
                <scope line="898"/>
                <scope line="902"/>
                <scope line="904">
                    <declaration name="nFrames" type="int" line="905"/>
                    <scope line="906">
                        <declaration name="frame" type="StackFrame" line="907"/>
                    </scope>
                </scope>
            </method>
            <method name="dumpFrame" type="void" line="913">
                <params>
                    <param name="frameNumber" type="int"/>
                    <param name="showPC" type="boolean"/>
                    <param name="frame" type="StackFrame"/>
                </params>
                <declaration name="loc" type="Location" line="914"/>
                <declaration name="pc" type="long" line="915"/>
                <scope line="916"/>
                <declaration name="meth" type="Method" line="919"/>
                <declaration name="lineNumber" type="long" line="921"/>
                <declaration name="methodInfo" type="String" line="922"/>
                <scope line="923"/>
                <scope line="925">
                    <scope line="926"/>
                    <scope line="930"/>
                </scope>
                <scope line="934"/>
                <scope line="941"/>
            </method>
            <method name="commandWhere" type="void" line="950">
                <params>
                    <param name="t" type="StringTokenizer"/>
                    <param name="showPC" type="boolean"/>
                </params>
                <scope line="951">
                    <declaration name="threadInfo" type="ThreadInfo" line="952"/>
                    <scope line="953"/>
                </scope>
                <scope line="958">
                    <declaration name="token" type="String" line="959"/>
                    <scope line="960">
                        <scope line="961"/>
                    </scope>
                    <scope line="966">
                        <declaration name="threadInfo" type="ThreadInfo" line="967"/>
                        <scope line="968"/>
                    </scope>
                </scope>
            </method>
            <method name="commandInterrupt" type="void" line="976">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="977">
                    <declaration name="threadInfo" type="ThreadInfo" line="978"/>
                    <scope line="979"/>
                </scope>
                <scope line="984">
                    <declaration name="threadInfo" type="ThreadInfo" line="985"/>
                    <scope line="986"/>
                </scope>
            </method>
            <method name="commandMemory" type="void" line="992"/>
            <method name="commandGC" type="void" line="996"/>
            <method name="locationString" type="String" line="1004">
                <params>
                    <param name="loc" type="Location"/>
                </params>
            </method>
            <method name="listBreakpoints" type="void" line="1012">
                <comment line="1015">
                    Print set breakpoints                    
                </comment>
                <declaration name="noBreakpoints" type="boolean" line="1013"/>
                <scope line="1016">
                    <scope line="1017">
                        <scope line="1018"/>
                    </scope>
                </scope>
                <scope line="1025"/>
            </method>
            <method name="printBreakpointCommandUsage" type="void" line="1031">
                <params>
                    <param name="atForm" type="String"/>
                    <param name="inForm" type="String"/>
                </params>
            </method>
            <method name="parseBreakpointSpec" type="BreakpointSpec" line="1037">
                <params>
                    <param name="t" type="StringTokenizer"/>
                    <param name="atForm" type="String"/>
                    <param name="inForm" type="String"/>
                </params>
                <comment line="1042">
                    We can&apos;t use hasMoreTokens here because it will cause any leading                    
                </comment>
                <comment line="1043">
                    paren to be lost.                    
                </comment>
                <comment line="1072">
                    Try stripping method from class.method token.                    
                </comment>
                <comment line="1074">
                                        
                </comment>
                <comment line="1075">
                                        
                </comment>
                <comment line="1089">
                    Trim the parens                    
                </comment>
                <declaration name="breakpoint" type="BreakpointSpec" line="1038"/>
                <scope line="1039">
                    <declaration name="token" type="String" line="1040"/>
                    <declaration name="rest" type="String" line="1044"/>
                    <scope line="1045"/>
                    <scope line="1047"/>
                    <scope line="1051">
                        <declaration name="classId" type="String" line="1053"/>
                        <declaration name="lineToken" type="String" line="1054"/>
                        <declaration name="nf" type="NumberFormat" line="1056"/>
                        <declaration name="n" type="Number" line="1058"/>
                        <declaration name="lineNumber" type="int" line="1059"/>
                        <scope line="1061"/>
                        <scope line="1065"/>
                        <scope line="1068"/>
                    </scope>
                    <scope line="1071">
                        <declaration name="idot" type="int" line="1073"/>
                        <scope line="1075"/>
                        <declaration name="methodName" type="String" line="1079"/>
                        <declaration name="classId" type="String" line="1080"/>
                        <declaration name="argumentList" type="List&lt;String&gt;" line="1081"/>
                        <scope line="1082">
                            <scope line="1083"/>
                            <scope line="1094"/>
                        </scope>
                        <scope line="1098"/>
                        <scope line="1102"/>
                        <scope line="1104"/>
                    </scope>
                </scope>
                <scope line="1108"/>
            </method>
            <method name="resolveNow" type="void" line="1115">
                <params>
                    <param name="spec" type="EventRequestSpec"/>
                </params>
                <declaration name="success" type="boolean" line="1116"/>
                <scope line="1117"/>
            </method>
            <method name="commandStop" type="void" line="1122">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="1142">
                    Enforcement of &quot;at&quot; vs. &quot;in&quot;. The distinction is really                    
                </comment>
                <comment line="1143">
                    unnecessary and we should consider not checking for this                    
                </comment>
                <comment line="1144">
                    (and making &quot;at&quot; and &quot;in&quot; optional).                    
                </comment>
                <declaration name="atIn" type="String" line="1123"/>
                <declaration name="suspendPolicy" type="byte" line="1124"/>
                <scope line="1126">
                    <scope line="1128"/>
                    <scope line="1131"/>
                </scope>
                <scope line="1135"/>
                <declaration name="spec" type="BreakpointSpec" line="1140"/>
                <scope line="1141">
                    <scope line="1145"/>
                </scope>
            </method>
            <method name="commandClear" type="void" line="1155">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="1156"/>
                <declaration name="spec" type="BreakpointSpec" line="1161"/>
                <scope line="1162">
                    <scope line="1163"/>
                    <scope line="1165"/>
                </scope>
            </method>
            <method name="parseWatchpointSpec" type="List<WatchpointSpec>" line="1171">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <declaration name="list" type="List&lt;WatchpointSpec&gt;" line="1172"/>
                <declaration name="access" type="boolean" line="1173"/>
                <declaration name="modification" type="boolean" line="1174"/>
                <declaration name="suspendPolicy" type="int" line="1175"/>
                <declaration name="fieldName" type="String" line="1177"/>
                <scope line="1178"/>
                <scope line="1181"/>
                <scope line="1185"/>
                <scope line="1188"/>
                <scope line="1192"/>
                <declaration name="dot" type="int" line="1195"/>
                <scope line="1196"/>
                <declaration name="className" type="String" line="1200"/>
                <scope line="1203">
                    <declaration name="spec" type="WatchpointSpec" line="1204"/>
                    <scope line="1205"/>
                    <scope line="1211"/>
                </scope>
                <scope line="1217"/>
                <scope line="1219"/>
            </method>
            <method name="commandWatch" type="void" line="1225">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="1226"/>
                <scope line="1231"/>
            </method>
            <method name="commandUnwatch" type="void" line="1236">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="1237"/>
                <scope line="1242">
                    <scope line="1243"/>
                    <scope line="1245"/>
                </scope>
            </method>
            <method name="turnOnExitTrace" type="void" line="1251">
                <params>
                    <param name="threadInfo" type="ThreadInfo"/>
                    <param name="suspendPolicy" type="int"/>
                </params>
                <declaration name="erm" type="EventRequestManager" line="1252"/>
                <declaration name="exit" type="MethodExitRequest" line="1253"/>
                <scope line="1254"/>
            </method>
            <declaration name="methodTraceCommand" type="String" line="1263"/>
            <method name="commandTrace" type="void" line="1265">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="1271">
                    trace [go] methods [thread]
                     trace [go] method exit | exits [thread]                    
                </comment>
                <comment line="1284">
                    this is undocumented as it doesn&apos;t work right.                    
                </comment>
                <comment line="1329">
                    Turn on method entry trace                    
                </comment>
                <comment line="1336">
                    To keep things simple we want each &apos;trace&apos; to cancel
                     previous traces.  However in this case, we don&apos;t do that
                     to preserve backward compatibility with pre JDK 6.0.
                     IE, you can currently do
                       trace   methods 0x21
                       trace   methods 0x22
                     and you will get xxx traced just on those two threads
                     But this feature is kind of broken because if you then do
                       untrace  0x21
                     it turns off both traces instead of just the one.
                     Another bogosity is that if you do
                       trace methods
                       trace methods
                     and you will get two traces.                    
                </comment>
                <comment line="1373">
                    trace all by itself.                    
                </comment>
                <comment line="1378">
                    More trace lines can be added here.                    
                </comment>
                <declaration name="modif" type="String" line="1266"/>
                <declaration name="suspendPolicy" type="int" line="1267"/>
                <declaration name="threadInfo" type="ThreadInfo" line="1268"/>
                <declaration name="goStr" type="String" line="1269"/>
                <scope line="1275">
                    <scope line="1277">
                        <scope line="1280"/>
                    </scope>
                    <scope line="1283">
                        <scope line="1286"/>
                    </scope>
                    <scope line="1291">
                        <declaration name="traceCmd" type="String" line="1292"/>
                        <scope line="1294">
                            <declaration name="modif1" type="String" line="1295"/>
                            <scope line="1296">
                                <scope line="1297"/>
                                <scope line="1300">
                                    <declaration name="frame" type="StackFrame" line="1301"/>
                                    <scope line="1302"/>
                                    <scope line="1304"/>
                                </scope>
                                <scope line="1313"/>
                            </scope>
                        </scope>
                        <scope line="1323"/>
                    </scope>
                    <scope line="1328">
                        <declaration name="entry" type="MethodEntryRequest" line="1330"/>
                        <declaration name="erm" type="EventRequestManager" line="1331"/>
                        <scope line="1332"/>
                        <scope line="1335"/>
                        <scope line="1355"/>
                    </scope>
                </scope>
                <scope line="1374"/>
            </method>
            <method name="commandUntrace" type="void" line="1381">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="1382">
                    untrace                    
                </comment>
                <comment line="1383">
                    untrace methods                    
                </comment>
                <declaration name="modif" type="String" line="1385"/>
                <declaration name="erm" type="EventRequestManager" line="1386"/>
                <scope line="1387"/>
                <scope line="1390"/>
            </method>
            <method name="commandList" type="void" line="1398">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="1433">
                    See if token is a line number.                    
                </comment>
                <comment line="1440">
                    It isn&apos;t -- see if it&apos;s a method name.                    
                </comment>
                <declaration name="frame" type="StackFrame" line="1399"/>
                <declaration name="threadInfo" type="ThreadInfo" line="1400"/>
                <scope line="1401"/>
                <scope line="1405"/>
                <scope line="1407"/>
                <scope line="1412"/>
                <declaration name="loc" type="Location" line="1417"/>
                <scope line="1418"/>
                <declaration name="sourceFileName" type="String" line="1423"/>
                <scope line="1424">
                    <declaration name="refType" type="ReferenceType" line="1427"/>
                    <declaration name="lineno" type="int" line="1428"/>
                    <scope line="1430">
                        <declaration name="id" type="String" line="1431"/>
                        <scope line="1434">
                            <declaration name="nf" type="NumberFormat" line="1435"/>
                            <declaration name="n" type="Number" line="1437"/>
                        </scope>
                        <scope line="1439">
                            <declaration name="meths" type="List&lt;Method&gt;" line="1441"/>
                            <scope line="1442"/>
                            <scope line="1446"/>
                        </scope>
                    </scope>
                    <declaration name="startLine" type="int" line="1455"/>
                    <declaration name="endLine" type="int" line="1456"/>
                    <scope line="1457"/>
                    <scope line="1459"/>
                    <scope line="1463">
                        <scope line="1464">
                            <declaration name="sourceLine" type="String" line="1465"/>
                            <scope line="1466"/>
                            <scope line="1469"/>
                            <scope line="1473"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="1480"/>
                <scope line="1482"/>
                <scope line="1484"/>
            </method>
            <method name="commandLines" type="void" line="1489">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="1512">
                    Special case: use printDirectln()                    
                </comment>
                <scope line="1490"/>
                <scope line="1492">
                    <declaration name="idClass" type="String" line="1493"/>
                    <declaration name="idMethod" type="String" line="1494"/>
                    <scope line="1495">
                        <declaration name="refType" type="ReferenceType" line="1496"/>
                        <scope line="1497">
                            <declaration name="lines" type="List&lt;Location&gt;" line="1498"/>
                            <scope line="1499"/>
                            <scope line="1501">
                                <scope line="1502">
                                    <scope line="1503"/>
                                </scope>
                                <scope line="1507"/>
                            </scope>
                            <scope line="1511"/>
                        </scope>
                        <scope line="1514"/>
                    </scope>
                    <scope line="1517"/>
                </scope>
            </method>
            <method name="commandClasspath" type="void" line="1523">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="1524">
                    <declaration name="vm" type="PathSearchingVirtualMachine" line="1525"/>
                </scope>
                <scope line="1529"/>
            </method>
            <method name="commandUse" type="void" line="1535">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="1537">
                    Special case: use printDirectln()                    
                </comment>
                <comment line="1539">
                    Take the remainder of the command line, minus
                     leading or trailing whitespace.  Embedded
                     whitespace is fine.                    
                </comment>
                <scope line="1536"/>
                <scope line="1538"/>
            </method>
            <method name="printVar" type="void" line="1549">
                <params>
                    <param name="var" type="LocalVariable"/>
                    <param name="value" type="Value"/>
                </params>
            </method>
            <method name="commandLocals" type="void" line="1556">
                <declaration name="frame" type="StackFrame" line="1557"/>
                <declaration name="threadInfo" type="ThreadInfo" line="1558"/>
                <scope line="1559"/>
                <scope line="1563">
                    <scope line="1565"/>
                    <declaration name="vars" type="List&lt;LocalVariable&gt;" line="1568"/>
                    <scope line="1570"/>
                    <declaration name="values" type="Map&lt;LocalVariable,Value&gt;" line="1574"/>
                    <scope line="1577">
                        <scope line="1578">
                            <declaration name="val" type="Value" line="1579"/>
                        </scope>
                    </scope>
                    <scope line="1584">
                        <scope line="1585">
                            <declaration name="val" type="Value" line="1586"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="1590"/>
                <scope line="1592"/>
            </method>
            <method name="dump" type="void" line="1598">
                <params>
                    <param name="obj" type="ObjectReference"/>
                    <param name="refType" type="ReferenceType"/>
                    <param name="refTypeBase" type="ReferenceType"/>
                </params>
                <comment line="1609">
                    Special case: use printDirectln()                    
                </comment>
                <comment line="1621">
                                        
                </comment>
                <comment line="1625">
                    Special case: use printDirect()                    
                </comment>
                <comment line="1627">
                    Special case: use printDirect()                    
                </comment>
                <scope line="1599">
                    <declaration name="o" type="StringBuffer" line="1600"/>
                    <scope line="1602"/>
                </scope>
                <scope line="1611">
                    <declaration name="sup" type="ClassType" line="1612"/>
                    <scope line="1613"/>
                </scope>
                <scope line="1616">
                    <scope line="1617"/>
                </scope>
                <scope line="1620">
                    <scope line="1622">
                        <scope line="1624">
                            <scope line="1626"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="doPrint" type="void" line="1637">
                <params>
                    <param name="t" type="StringTokenizer"/>
                    <param name="dumpObject" type="boolean"/>
                </params>
                <scope line="1638"/>
                <scope line="1643">
                    <declaration name="expr" type="String" line="1644"/>
                    <declaration name="val" type="Value" line="1645"/>
                    <scope line="1646"/>
                    <scope line="1649">
                        <declaration name="obj" type="ObjectReference" line="1650"/>
                        <declaration name="refType" type="ReferenceType" line="1651"/>
                    </scope>
                    <scope line="1657">
                        <declaration name="strVal" type="String" line="1658"/>
                        <scope line="1659"/>
                    </scope>
                </scope>
            </method>
            <method name="commandPrint" type="void" line="1667">
                <params>
                    <param name="t" type="StringTokenizer"/>
                    <param name="dumpObject" type="boolean"/>
                </params>
                <anonymous_class line="1668">
                    <method name="action" type="void" line="1670"/>
                </anonymous_class>
            </method>
            <method name="commandSet" type="void" line="1676">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="1679">
                    Bare bones error checking.                    
                </comment>
                <comment line="1688">
                    The set command is really just syntactic sugar. Pass it on to the
                     print command.                    
                </comment>
                <declaration name="all" type="String" line="1677"/>
                <scope line="1682"/>
            </method>
            <method name="doLock" type="void" line="1695">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="1696"/>
                <declaration name="expr" type="String" line="1701"/>
                <declaration name="val" type="Value" line="1702"/>
                <scope line="1704">
                    <scope line="1705">
                        <declaration name="object" type="ObjectReference" line="1706"/>
                        <declaration name="strVal" type="String" line="1707"/>
                        <scope line="1708"/>
                        <declaration name="owner" type="ThreadReference" line="1713"/>
                        <scope line="1714"/>
                        <scope line="1716"/>
                        <declaration name="waiters" type="List&lt;ThreadReference&gt;" line="1721"/>
                        <scope line="1722"/>
                        <scope line="1724">
                            <scope line="1725"/>
                        </scope>
                    </scope>
                    <scope line="1729"/>
                </scope>
                <scope line="1732"/>
            </method>
            <method name="commandLock" type="void" line="1737">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <anonymous_class line="1738">
                    <method name="action" type="void" line="1740"/>
                </anonymous_class>
            </method>
            <method name="printThreadLockInfo" type="void" line="1746">
                <params>
                    <param name="threadInfo" type="ThreadInfo"/>
                </params>
                <declaration name="thread" type="ThreadReference" line="1747"/>
                <scope line="1748">
                    <declaration name="owned" type="List&lt;ObjectReference&gt;" line="1750"/>
                    <scope line="1751"/>
                    <scope line="1753">
                        <scope line="1754"/>
                    </scope>
                    <declaration name="waiting" type="ObjectReference" line="1758"/>
                    <scope line="1759"/>
                    <scope line="1761"/>
                </scope>
                <scope line="1764"/>
            </method>
            <method name="commandThreadlocks" type="void" line="1769">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="1770">
                    <declaration name="threadInfo" type="ThreadInfo" line="1771"/>
                    <scope line="1772"/>
                    <scope line="1774"/>
                </scope>
                <declaration name="token" type="String" line="1779"/>
                <scope line="1780">
                    <scope line="1781"/>
                </scope>
                <scope line="1784">
                    <declaration name="threadInfo" type="ThreadInfo" line="1785"/>
                    <scope line="1786"/>
                </scope>
            </method>
            <method name="doDisableGC" type="void" line="1793">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="1794"/>
                <declaration name="expr" type="String" line="1799"/>
                <declaration name="val" type="Value" line="1800"/>
                <scope line="1801">
                    <declaration name="object" type="ObjectReference" line="1802"/>
                    <declaration name="strVal" type="String" line="1804"/>
                    <scope line="1805"/>
                </scope>
                <scope line="1808"/>
            </method>
            <method name="commandDisableGC" type="void" line="1813">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <anonymous_class line="1814">
                    <method name="action" type="void" line="1816"/>
                </anonymous_class>
            </method>
            <method name="doEnableGC" type="void" line="1822">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="1823"/>
                <declaration name="expr" type="String" line="1828"/>
                <declaration name="val" type="Value" line="1829"/>
                <scope line="1830">
                    <declaration name="object" type="ObjectReference" line="1831"/>
                    <declaration name="strVal" type="String" line="1833"/>
                    <scope line="1834"/>
                </scope>
                <scope line="1837"/>
            </method>
            <method name="commandEnableGC" type="void" line="1842">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <anonymous_class line="1843">
                    <method name="action" type="void" line="1845"/>
                </anonymous_class>
            </method>
            <method name="doSave" type="void" line="1851">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="1852"/>
                <declaration name="key" type="String" line="1857"/>
                <scope line="1859"/>
                <declaration name="expr" type="String" line="1863"/>
                <declaration name="val" type="Value" line="1864"/>
                <scope line="1865">
                    <declaration name="strVal" type="String" line="1867"/>
                    <scope line="1868"/>
                </scope>
                <scope line="1871"/>
            </method>
            <method name="commandSave" type="void" line="1876">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="1877">
                    <declaration name="keys" type="Set&lt;String&gt;" line="1878"/>
                    <scope line="1879"/>
                    <scope line="1883">
                        <declaration name="value" type="Value" line="1884"/>
                        <scope line="1886"/>
                        <scope line="1889">
                            <scope line="1890"/>
                            <scope line="1892"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="1898">
                    <anonymous_class line="1899">
                        <method name="action" type="void" line="1901"/>
                    </anonymous_class>
                </scope>
            </method>
            <method name="commandBytecodes" type="void" line="1909">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="1920">
                    Overloading is not handled here.                    
                </comment>
                <comment line="1924">
                    TO DO: handle multiple classes found                    
                </comment>
                <comment line="1952">
                    Special case: use printDirectln()                    
                </comment>
                <comment line="1970">
                    Special case: use printDirectln()                    
                </comment>
                <scope line="1910"/>
                <declaration name="className" type="String" line="1914"/>
                <scope line="1916"/>
                <declaration name="methodName" type="String" line="1921"/>
                <declaration name="classes" type="List&lt;ReferenceType&gt;" line="1923"/>
                <scope line="1925">
                    <scope line="1926"/>
                    <scope line="1928"/>
                </scope>
                <declaration name="rt" type="ReferenceType" line="1934"/>
                <scope line="1935"/>
                <declaration name="bytecodes" type="byte[]" line="1940"/>
                <scope line="1941">
                    <scope line="1942"/>
                </scope>
                <declaration name="line" type="StringBuffer" line="1948"/>
                <scope line="1950">
                    <scope line="1951">
                        <declaration name="len" type="int" line="1956"/>
                        <scope line="1957"/>
                    </scope>
                    <declaration name="val" type="int" line="1961"/>
                    <declaration name="str" type="String" line="1962"/>
                    <scope line="1963"/>
                </scope>
                <scope line="1969"/>
            </method>
            <method name="commandExclude" type="void" line="1974">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="1976">
                    Special case: use printDirectln()                    
                </comment>
                <scope line="1975"/>
                <scope line="1977">
                    <declaration name="rest" type="String" line="1978"/>
                    <scope line="1979"/>
                </scope>
            </method>
            <method name="commandRedefine" type="void" line="1986">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="1987"/>
                <scope line="1989">
                    <declaration name="className" type="String" line="1990"/>
                    <declaration name="classes" type="List&lt;ReferenceType&gt;" line="1991"/>
                    <scope line="1992"/>
                    <scope line="1996"/>
                    <declaration name="refType" type="ReferenceType" line="2001"/>
                    <scope line="2002"/>
                    <declaration name="fileName" type="String" line="2006"/>
                    <declaration name="phyl" type="File" line="2007"/>
                    <declaration name="bytes" type="byte[]" line="2008"/>
                    <scope line="2009">
                        <declaration name="in" type="InputStream" line="2010"/>
                    </scope>
                    <scope line="2013"/>
                    <declaration name="map" type="Map&lt;ReferenceType,byte[]&gt;" line="2018"/>
                    <scope line="2021"/>
                    <scope line="2023"/>
                </scope>
            </method>
            <method name="commandPopFrames" type="void" line="2032">
                <params>
                    <param name="t" type="StringTokenizer"/>
                    <param name="reenter" type="boolean"/>
                </params>
                <declaration name="threadInfo" type="ThreadInfo" line="2033"/>
                <scope line="2035">
                    <declaration name="token" type="String" line="2036"/>
                    <scope line="2038"/>
                </scope>
                <scope line="2041">
                    <scope line="2043"/>
                </scope>
                <scope line="2049">
                    <declaration name="frame" type="StackFrame" line="2050"/>
                    <scope line="2054"/>
                </scope>
                <scope line="2057"/>
            </method>
            <method name="commandExtension" type="void" line="2062">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="2063"/>
                <declaration name="idClass" type="String" line="2068"/>
                <declaration name="cls" type="ReferenceType" line="2069"/>
                <declaration name="extension" type="String" line="2070"/>
                <scope line="2071">
                    <scope line="2072"/>
                    <scope line="2075"/>
                </scope>
                <scope line="2078"/>
            </method>
            <method name="commandVersion" type="void" line="2084">
                <params>
                    <param name="debuggerName" type="String"/>
                    <param name="vmm" type="VirtualMachineManager"/>
                </params>
                <comment line="2092">
                    Special case: use printDirectln()                    
                </comment>
                <scope line="2090">
                    <scope line="2091"/>
                    <scope line="2093"/>
                </scope>
            </method>
        </class>
    </source>