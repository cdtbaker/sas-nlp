<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.gui">
        <import package="java.io.File"/>
        <import package="java.util.Hashtable"/>
        <import package="java.util.Enumeration"/>
        <import package="javax.swing.filechooser"/>
        <class name="JDBFileFilter" line="6">
            <extends class="FileFilter"/>
            <javadoc line="6">
                A convenience implementation of FileFilter that filters out
                  all files except for those type extensions that it knows about.
                  Extensions are of the type &quot;.foo&quot;, which is typically found on
                  Windows and Unix boxes, but not on Macinthosh. Case is ignored.
                  Example - create a new filter that filerts out all files
                  but gif and jpg image files:
                  JFileChooser chooser = new JFileChooser();
                  ExampleFileFilter filter = new ExampleFileFilter(
                  new String{&quot;gif&quot;, &quot;jpg&quot;}, &quot;JPEG &amp; GIF Images&quot;)
                  chooser.addChoosableFileFilter(filter);
                  chooser.showOpenDialog(this);                
                <author>
                    Jeff Dinkins                    
                </author>
            </javadoc>
            <declaration name="TYPE_UNKNOWN" type="String" line="21"/>
            <declaration name="HIDDEN_FILE" type="String" line="22"/>
            <declaration name="filters" type="Hashtable&amp;lt;String,JDBFileFilter&amp;gt;" line="23"/>
            <declaration name="description" type="String" line="24"/>
            <declaration name="fullDescription" type="String" line="25"/>
            <declaration name="useExtensionsInDescription" type="boolean" line="26"/>
            <javadoc line="27">
                Creates a file filter. If no filters are added, then all
                  files are accepted.                
                <see>
                    #addExtension                    
                </see>
            </javadoc>
            <method name="JDBFileFilter" type="constructor" line="32"/>
            <javadoc line="35">
                Creates a file filter that accepts files with the given extension.
                  Example: new JDBFileFilter(&quot;jpg&quot;);                
                <see>
                    #addExtension                    
                </see>
            </javadoc>
            <method name="JDBFileFilter" type="constructor" line="40">
                <params>
                    <param name="extension" type="String"/>
                </params>
            </method>
            <javadoc line="43">
                Creates a file filter that accepts the given file type.
                  Example: new JDBFileFilter(&quot;jpg&quot;, &quot;JPEG Image Images&quot;);
                  Note that the &quot;.&quot; before the extension is not needed. If
                  provided, it will be ignored.                
                <see>
                    #addExtension                    
                </see>
            </javadoc>
            <method name="JDBFileFilter" type="constructor" line="50">
                <params>
                    <param name="extension" type="String"/>
                    <param name="description" type="String"/>
                </params>
                <scope line="52"/>
                <scope line="55"/>
            </method>
            <javadoc line="59">
                Creates a file filter from the given string array.
                  Example: new JDBFileFilter(String {&quot;gif&quot;, &quot;jpg&quot;});
                  Note that the &quot;.&quot; before the extension is not needed adn
                  will be ignored.                
                <see>
                    #addExtension                    
                </see>
            </javadoc>
            <method name="JDBFileFilter" type="constructor" line="66">
                <params>
                    <param name="filters" type="String[]"/>
                </params>
            </method>
            <javadoc line="69">
                Creates a file filter from the given string array and description.
                  Example: new JDBFileFilter(String {&quot;gif&quot;, &quot;jpg&quot;}, &quot;Gif and JPG Images&quot;);
                  Note that the &quot;.&quot; before the extension is not needed and will be ignored.                
                <see>
                    #addExtension                    
                </see>
            </javadoc>
            <method name="JDBFileFilter" type="constructor" line="75">
                <params>
                    <param name="filters" type="String[]"/>
                    <param name="description" type="String"/>
                </params>
                <scope line="77"/>
                <scope line="80"/>
            </method>
            <javadoc line="84">
                Return true if this file should be shown in the directory pane,
                  false if it shouldn&apos;t.
                  Files that begin with &quot;.&quot; are ignored.                
                <see>
                    #getExtension                    
                </see>
                <see>
                    FileFilter#accepts                    
                </see>
            </javadoc>
            <method name="accept" type="boolean" line="91">
                <params>
                    <param name="f" type="File"/>
                </params>
                <scope line="92">
                    <scope line="93"/>
                    <declaration name="extension" type="String" line="96"/>
                    <scope line="97"/>
                </scope>
            </method>
            <javadoc line="104">
                Return the extension portion of the file&apos;s name .                
                <see>
                    #getExtension                    
                </see>
                <see>
                    FileFilter#accept                    
                </see>
            </javadoc>
            <method name="getExtension" type="String" line="109">
                <params>
                    <param name="f" type="File"/>
                </params>
                <scope line="110">
                    <declaration name="filename" type="String" line="111"/>
                    <declaration name="i" type="int" line="112"/>
                    <scope line="113"/>
                </scope>
            </method>
            <javadoc line="120">
                Adds a filetype &quot;dot&quot; extension to filter against.
                  For example: the following code will create a filter that filters
                  out all files except those that end in &quot;.jpg&quot; and &quot;.tif&quot;:
                  JDBFileFilter filter = new JDBFileFilter();
                  filter.addExtension(&quot;jpg&quot;);
                  filter.addExtension(&quot;tif&quot;);
                  Note that the &quot;.&quot; before the extension is not needed and will be ignored.                
            </javadoc>
            <method name="addExtension" type="void" line="129">
                <params>
                    <param name="extension" type="String"/>
                </params>
                <scope line="130"/>
            </method>
            <javadoc line="136">
                Returns the human readable description of this filter. For
                  example: &quot;JPEG and GIF Image Files (.jpg, .gif)&quot;                
                <see>
                    setDescription                    
                </see>
                <see>
                    setExtensionListInDescription                    
                </see>
                <see>
                    isExtensionListInDescription                    
                </see>
                <see>
                    FileFilter#getDescription                    
                </see>
            </javadoc>
            <method name="getDescription" type="String" line="144">
                <scope line="145">
                    <scope line="146">
                        <declaration name="extensions" type="Enumeration&amp;lt;String&amp;gt;" line="148"/>
                        <scope line="149">
                            <scope line="151"/>
                        </scope>
                    </scope>
                    <scope line="157"/>
                </scope>
            </method>
            <javadoc line="163">
                Sets the human readable description of this filter. For
                  example: filter.setDescription(&quot;Gif and JPG Images&quot;);                
                <see>
                    setDescription                    
                </see>
                <see>
                    setExtensionListInDescription                    
                </see>
                <see>
                    isExtensionListInDescription                    
                </see>
            </javadoc>
            <method name="setDescription" type="void" line="170">
                <params>
                    <param name="description" type="String"/>
                </params>
            </method>
            <javadoc line="174">
                Determines whether the extension list (.jpg, .gif, etc) should
                  show up in the human readable description.
                  Only relevent if a description was provided in the constructor
                  or using setDescription();                
                <see>
                    getDescription                    
                </see>
                <see>
                    setDescription                    
                </see>
                <see>
                    isExtensionListInDescription                    
                </see>
            </javadoc>
            <method name="setExtensionListInDescription" type="void" line="183">
                <params>
                    <param name="b" type="boolean"/>
                </params>
            </method>
            <javadoc line="187">
                Returns whether the extension list (.jpg, .gif, etc) should
                  show up in the human readable description.
                  Only relevent if a description was provided in the constructor
                  or using setDescription();                
                <see>
                    getDescription                    
                </see>
                <see>
                    setDescription                    
                </see>
                <see>
                    setExtensionListInDescription                    
                </see>
            </javadoc>
            <method name="isExtensionListInDescription" type="boolean" line="196"/>
        </class>
    </source>