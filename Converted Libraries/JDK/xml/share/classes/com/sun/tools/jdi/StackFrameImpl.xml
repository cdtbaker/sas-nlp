<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.jdi">
        <import package="com.sun.jdi"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.Collections"/>
        <class name="StackFrameImpl" line="10">
            <extends class="MirrorImpl"/>
            <implements interface="StackFrame"/>
            <implements interface="ThreadListener"/>
            <declaration name="isValid" type="boolean" line="11"/>
            <declaration name="thread" type="ThreadReferenceImpl" line="12"/>
            <declaration name="id" type="long" line="13"/>
            <declaration name="location" type="Location" line="14"/>
            <declaration name="visibleVariables" type="Map&amp;lt;String,LocalVariable&amp;gt;" line="15"/>
            <declaration name="thisObject" type="ObjectReference" line="16"/>
            <method name="StackFrameImpl" type="constructor" line="17">
                <params>
                    <param name="vm" type="VirtualMachine"/>
                    <param name="thread" type="ThreadReferenceImpl"/>
                    <param name="id" type="long"/>
                    <param name="location" type="Location"/>
                </params>
            </method>
            <method name="threadResumable" type="boolean" line="24">
                <params>
                    <param name="action" type="ThreadAction"/>
                </params>
                <scope line="25">
                    <scope line="26"/>
                    <scope line="30"/>
                </scope>
            </method>
            <method name="validateStackFrame" type="void" line="35">
                <scope line="36"/>
            </method>
            <javadoc line="40">
                Return the frame location.
                  Need not be synchronized since it cannot be provably stale.                
            </javadoc>
            <method name="location" type="Location" line="44"/>
            <javadoc line="48">
                Return the thread holding the frame.
                  Need not be synchronized since it cannot be provably stale.                
            </javadoc>
            <method name="thread" type="ThreadReference" line="52"/>
            <method name="equals" type="boolean" line="56">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="57">
                    <declaration name="other" type="StackFrameImpl" line="58"/>
                </scope>
                <scope line="61"/>
            </method>
            <method name="hashCode" type="int" line="65"/>
            <method name="thisObject" type="ObjectReference" line="68">
                <declaration name="currentMethod" type="MethodImpl" line="70"/>
                <scope line="71"/>
                <scope line="74">
                    <scope line="75">
                        <declaration name="ps" type="PacketStream" line="76"/>
                        <scope line="77"/>
                        <scope line="81"/>
                        <scope line="84"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="98">
                Build the visible variable map.
                  Need not be synchronized since it cannot be provably stale.                
            </javadoc>
            <method name="createVisibleVariables" type="void" line="102">
                <scope line="103">
                    <declaration name="allVariables" type="List&amp;lt;LocalVariable&amp;gt;" line="104"/>
                    <declaration name="map" type="Map&amp;lt;String,LocalVariable&amp;gt;" line="105"/>
                    <scope line="106">
                        <declaration name="name" type="String" line="107"/>
                        <scope line="108">
                            <declaration name="existing" type="LocalVariable" line="109"/>
                            <scope line="110"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="118">
                Return the list of visible variable in the frame.
                  Need not be synchronized since it cannot be provably stale.                
            </javadoc>
            <method name="visibleVariables" type="List&lt;LocalVariable&gt;" line="122">
                <declaration name="mapAsList" type="List&amp;lt;LocalVariable&amp;gt;" line="125"/>
            </method>
            <javadoc line="129">
                Return a particular variable in the frame.
                  Need not be synchronized since it cannot be provably stale.                
            </javadoc>
            <method name="visibleVariableByName" type="LocalVariable" line="133">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="getValue" type="Value" line="138">
                <params>
                    <param name="variable" type="LocalVariable"/>
                </params>
                <declaration name="list" type="List&amp;lt;LocalVariable&amp;gt;" line="139"/>
            </method>
            <method name="getValues" type="Map&lt;LocalVariable,Value&gt;" line="143">
                <params>
                    <param name="variables" type="List&lt;? extends LocalVariable&gt;"/>
                </params>
                <declaration name="count" type="int" line="146"/>
                <declaration name="slots" type="JDWP.StackFrame.GetValues.SlotInfo[]" line="147"/>
                <scope line="148">
                    <declaration name="variable" type="LocalVariableImpl" line="149"/>
                    <scope line="150"/>
                </scope>
                <declaration name="ps" type="PacketStream" line="155"/>
                <scope line="156"/>
                <declaration name="values" type="ValueImpl[]" line="160"/>
                <scope line="161"/>
                <scope line="164"/>
                <scope line="174"/>
                <declaration name="map" type="Map&amp;lt;LocalVariable,Value&amp;gt;" line="177"/>
                <scope line="178">
                    <declaration name="variable" type="LocalVariableImpl" line="179"/>
                </scope>
            </method>
            <method name="setValue" type="void" line="184">
                <params>
                    <param name="variableIntf" type="LocalVariable"/>
                    <param name="valueIntf" type="Value"/>
                </params>
                <declaration name="variable" type="LocalVariableImpl" line="188"/>
                <declaration name="value" type="ValueImpl" line="189"/>
                <scope line="190"/>
                <scope line="193">
                    <declaration name="slotVals" type="JDWP.StackFrame.SetValues.SlotInfo[]" line="195"/>
                    <declaration name="ps" type="PacketStream" line="197"/>
                    <scope line="198"/>
                    <scope line="202"/>
                    <scope line="205"/>
                </scope>
                <scope line="216">
                    <scope line="217"/>
                </scope>
            </method>
            <method name="getArgumentValues" type="List&lt;Value&gt;" line="222">
                <declaration name="mmm" type="MethodImpl" line="224"/>
                <declaration name="argSigs" type="List&amp;lt;String&amp;gt;" line="225"/>
                <declaration name="count" type="int" line="226"/>
                <declaration name="slots" type="JDWP.StackFrame.GetValues.SlotInfo[]" line="227"/>
                <declaration name="slot" type="int" line="228"/>
                <scope line="229"/>
                <scope line="232"/>
                <scope line="235">
                    <declaration name="sigChar" type="char" line="236"/>
                    <scope line="238"/>
                </scope>
                <declaration name="ps" type="PacketStream" line="242"/>
                <scope line="243"/>
                <declaration name="values" type="ValueImpl[]" line="247"/>
                <scope line="248"/>
                <scope line="251"/>
                <scope line="261"/>
            </method>
            <method name="pop" type="void" line="266">
                <anonymous_class line="268">
                    <method name="send" type="PacketStream" line="269"/>
                </anonymous_class>
                <declaration name="sender" type="CommandSender" line="268"/>
                <scope line="274">
                    <declaration name="stream" type="PacketStream" line="275"/>
                </scope>
                <scope line="278"/>
            </method>
            <method name="toString" type="String" line="292"/>
        </class>
    </source>