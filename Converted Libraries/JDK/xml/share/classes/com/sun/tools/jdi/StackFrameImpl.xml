<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.jdi">
        <import package="com.sun.jdi"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.Collections"/>
        <class name="StackFrameImpl" line="38">
            <extends class="MirrorImpl"/>
            <comment line="42">
                Once false, frame should not be used.
                 access synchronized on (vm.state())                
            </comment>
            <comment line="62">
                ThreadListener implementation
                 Must be synchronized since we must protect against
                 sending defunct (isValid == false) stack ids to the back-end.                
            </comment>
            <implements interface="StackFrame"/>
            <implements interface="ThreadListener"/>
            <declaration name="isValid" type="boolean" line="44"/>
            <declaration name="thread" type="ThreadReferenceImpl" line="46"/>
            <declaration name="id" type="long" line="47"/>
            <declaration name="location" type="Location" line="48"/>
            <declaration name="visibleVariables" type="Map&lt;String,LocalVariable&gt;" line="49"/>
            <declaration name="thisObject" type="ObjectReference" line="50"/>
            <method name="StackFrameImpl" type="constructor" line="53">
                <params>
                    <param name="vm" type="VirtualMachine"/>
                    <param name="thread" type="ThreadReferenceImpl"/>
                    <param name="id" type="long"/>
                    <param name="location" type="Location"/>
                </params>
            </method>
            <method name="threadResumable" type="boolean" line="66">
                <params>
                    <param name="action" type="ThreadAction"/>
                </params>
                <comment line="71">
                                        
                </comment>
                <scope line="67">
                    <scope line="68"/>
                    <scope line="71"/>
                </scope>
            </method>
            <method name="validateStackFrame" type="void" line="78">
                <scope line="79"/>
            </method>
            <javadoc line="84">
                Return the frame location.
                  Need not be synchronized since it cannot be provably stale.                
            </javadoc>
            <method name="location" type="Location" line="88"/>
            <javadoc line="93">
                Return the thread holding the frame.
                  Need not be synchronized since it cannot be provably stale.                
            </javadoc>
            <method name="thread" type="ThreadReference" line="97"/>
            <method name="equals" type="boolean" line="102">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="103">
                    <declaration name="other" type="StackFrameImpl" line="104"/>
                </scope>
                <scope line="109"/>
            </method>
            <method name="hashCode" type="int" line="114"/>
            <method name="thisObject" type="ObjectReference" line="118">
                <comment line="128">
                                        
                </comment>
                <comment line="135">
                                        
                </comment>
                <declaration name="currentMethod" type="MethodImpl" line="120"/>
                <scope line="121"/>
                <scope line="123">
                    <scope line="124">
                        <declaration name="ps" type="PacketStream" line="125"/>
                        <scope line="128"/>
                        <scope line="135"/>
                        <scope line="138"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="153">
                Build the visible variable map.
                  Need not be synchronized since it cannot be provably stale.                
            </javadoc>
            <method name="createVisibleVariables" type="void" line="157">
                <scope line="158">
                    <declaration name="allVariables" type="List&lt;LocalVariable&gt;" line="159"/>
                    <declaration name="map" type="Map&lt;String,LocalVariable&gt;" line="160"/>
                    <scope line="162">
                        <declaration name="name" type="String" line="163"/>
                        <scope line="164">
                            <declaration name="existing" type="LocalVariable" line="165"/>
                            <scope line="167"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="176">
                Return the list of visible variable in the frame.
                  Need not be synchronized since it cannot be provably stale.                
            </javadoc>
            <method name="visibleVariables" type="List<LocalVariable>" line="180">
                <declaration name="mapAsList" type="List&lt;LocalVariable&gt;" line="183"/>
            </method>
            <javadoc line="188">
                Return a particular variable in the frame.
                  Need not be synchronized since it cannot be provably stale.                
            </javadoc>
            <method name="visibleVariableByName" type="LocalVariable" line="192">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="getValue" type="Value" line="198">
                <params>
                    <param name="variable" type="LocalVariable"/>
                </params>
                <declaration name="list" type="List&lt;LocalVariable&gt;" line="199"/>
            </method>
            <method name="getValues" type="Map<LocalVariable,Value>" line="204">
                <params>
                    <param name="variables" type="List<? extends LocalVariable>"/>
                </params>
                <comment line="225">
                                        
                </comment>
                <comment line="231">
                                        
                </comment>
                <declaration name="count" type="int" line="208"/>
                <declaration name="slots" type="JDWP.StackFrame.GetValues.SlotInfo[]" line="209"/>
                <scope line="212">
                    <declaration name="variable" type="LocalVariableImpl" line="213"/>
                    <scope line="214"/>
                </scope>
                <declaration name="ps" type="PacketStream" line="222"/>
                <scope line="225"/>
                <declaration name="values" type="ValueImpl[]" line="231"/>
                <scope line="232"/>
                <scope line="234"/>
                <scope line="245"/>
                <declaration name="map" type="Map&lt;LocalVariable,Value&gt;" line="249"/>
                <scope line="250">
                    <declaration name="variable" type="LocalVariableImpl" line="251"/>
                </scope>
            </method>
            <method name="setValue" type="void" line="258">
                <params>
                    <param name="variableIntf" type="LocalVariable"/>
                    <param name="valueIntf" type="Value"/>
                </params>
                <comment line="274">
                    Validate and convert value if necessary                    
                </comment>
                <comment line="284">
                                        
                </comment>
                <comment line="291">
                                        
                </comment>
                <comment line="305">
                    Since we got this exception,
                     the variable type must be a reference type. The value
                     we&apos;re trying to set is null, but if the variable&apos;s
                     class has not yet been loaded through the enclosing
                     class loader, then setting to null is essentially a
                     no-op, and we should allow it without an exception.                    
                </comment>
                <declaration name="variable" type="LocalVariableImpl" line="264"/>
                <declaration name="value" type="ValueImpl" line="265"/>
                <scope line="267"/>
                <scope line="272">
                    <declaration name="slotVals" type="JDWP.StackFrame.SetValues.SlotInfo[]" line="276"/>
                    <declaration name="ps" type="PacketStream" line="281"/>
                    <scope line="284"/>
                    <scope line="291"/>
                    <scope line="293"/>
                </scope>
                <scope line="303">
                    <scope line="312"/>
                </scope>
            </method>
            <method name="getArgumentValues" type="List<Value>" line="318">
                <comment line="343">
                                        
                </comment>
                <declaration name="mmm" type="MethodImpl" line="320"/>
                <declaration name="argSigs" type="List&lt;String&gt;" line="321"/>
                <declaration name="count" type="int" line="322"/>
                <declaration name="slots" type="JDWP.StackFrame.GetValues.SlotInfo[]" line="323"/>
                <declaration name="slot" type="int" line="326"/>
                <scope line="327"/>
                <scope line="329"/>
                <scope line="332">
                    <declaration name="sigChar" type="char" line="333"/>
                    <scope line="335"/>
                </scope>
                <declaration name="ps" type="PacketStream" line="340"/>
                <scope line="343"/>
                <declaration name="values" type="ValueImpl[]" line="348"/>
                <scope line="349"/>
                <scope line="351"/>
                <scope line="362"/>
            </method>
            <method name="pop" type="void" line="369">
                <comment line="372">
                    flush caches and disable caching until command completion                    
                </comment>
                <comment line="388">
                                        
                </comment>
                <comment line="398">
                    enable caching - suspended again                    
                </comment>
                <anonymous_class line="373">
                    <method name="send" type="PacketStream" line="374"/>
                </anonymous_class>
                <declaration name="sender" type="CommandSender" line="372"/>
                <scope line="379">
                    <declaration name="stream" type="PacketStream" line="380"/>
                </scope>
                <scope line="382"/>
            </method>
            <method name="toString" type="String" line="401"/>
        </class>
    </source>