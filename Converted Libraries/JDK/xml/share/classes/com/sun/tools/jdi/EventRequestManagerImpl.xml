<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.jdi">
        <import package="com.sun.jdi"/>
        <import package="com.sun.jdi.request"/>
        <import package="com.sun.tools.jdi.JDWP"/>
        <import package="java.util"/>
        <class name="EventRequestManagerImpl" line="34">
            <extends class="MirrorImpl"/>
            <comment line="40">
                Warnings from List filters and List[] requestLists is  hard to fix.
                 Remove SuppressWarning when we fix the warnings from List filters
                 and List[] requestLists. The generic array is not supported.                
            </comment>
            <comment line="76">
                Override superclass back to default equality                
            </comment>
            <implements interface="EventRequestManager"/>
            <javadoc line="34">
                This interface is used to create and remove Breakpoints, Watchpoints,
                  etc.
                  It include implementations of all the request interfaces..                
            </javadoc>
            <declaration name="requestLists" type="List[]" line="46"/>
            <declaration name="methodExitEventCmd" type="int" line="47"/>
            <method name="JDWPtoJDISuspendPolicy" type="int" line="49">
                <params>
                    <param name="jdwpPolicy" type="byte"/>
                </params>
            </method>
            <method name="JDItoJDWPSuspendPolicy" type="byte" line="62">
                <params>
                    <param name="jdiPolicy" type="int"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="78">
                <params>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <method name="hashCode" type="int" line="82"/>
            <class name="EventRequestImpl" line="86">
                <extends class="MirrorImpl"/>
                <comment line="90">
                    This list is not protected by a synchronized wrapper. All
                     accessmodification should be protected by synchronizing on
                     the enclosing instance of EventRequestImpl.                    
                </comment>
                <comment line="107">
                    Override superclass back to default equality                    
                </comment>
                <implements interface="EventRequest"/>
                <declaration name="id" type="int" line="87"/>
                <declaration name="filters" type="List" line="94"/>
                <declaration name="isEnabled" type="boolean" line="96"/>
                <declaration name="deleted" type="boolean" line="97"/>
                <declaration name="suspendPolicy" type="byte" line="98"/>
                <declaration name="clientProperties" type="Map&lt;Object,Object&gt;" line="99"/>
                <method name="EventRequestImpl" type="constructor" line="101"/>
                <method name="equals" type="boolean" line="109">
                    <params>
                        <param name="obj" type="Object"/>
                    </params>
                </method>
                <method name="hashCode" type="int" line="113"/>
                <method name="eventCmd" type="int" line="117"/>
                <method name="invalidState" type="InvalidRequestStateException" line="119"/>
                <method name="state" type="String" line="123"/>
                <javadoc line="128">
                    @return all the event request of this kind                    
                </javadoc>
                <method name="requestList" type="List" line="131"/>
                <javadoc line="135">
                    delete the event request                    
                </javadoc>
                <method name="delete" type="void" line="138">
                    <comment line="142">
                                                
                    </comment>
                    <scope line="139"/>
                </method>
                <method name="isEnabled" type="boolean" line="146"/>
                <method name="enable" type="void" line="150"/>
                <method name="disable" type="void" line="154"/>
                <method name="setEnabled" type="void" line="158">
                    <params>
                        <param name="val" type="boolean"/>
                    </params>
                    <scope line="159"/>
                    <scope line="161">
                        <scope line="162">
                            <scope line="163"/>
                            <scope line="165"/>
                        </scope>
                    </scope>
                </method>
                <method name="addCountFilter" type="void" line="172">
                    <params>
                        <param name="count" type="int"/>
                    </params>
                    <scope line="173"/>
                    <scope line="176"/>
                </method>
                <method name="setSuspendPolicy" type="void" line="182">
                    <params>
                        <param name="policy" type="int"/>
                    </params>
                    <scope line="183"/>
                </method>
                <method name="suspendPolicy" type="int" line="189"/>
                <javadoc line="193">
                    set (enable) the event request                    
                </javadoc>
                <method name="set" type="void" line="196">
                    <declaration name="mods" type="JDWP.EventRequest.Set.Modifier[]" line="197"/>
                    <scope line="201"/>
                    <scope line="204"/>
                </method>
                <method name="clear" type="void" line="210">
                    <scope line="211"/>
                    <scope line="213"/>
                </method>
                <javadoc line="219">
                    @return a small Map                    
                    <see>
                        #putProperty                        
                    </see>
                    <see>
                        #getProperty                        
                    </see>
                </javadoc>
                <method name="getProperties" type="Map<Object,Object>" line="224">
                    <scope line="225"/>
                </method>
                <javadoc line="231">
                    Returns the value of the property with the specified key.  Only
                      properties added with &lt;code&gt;putProperty&lt;/code&gt; will return
                      a non-null value.                    
                    <return>
                        the value of this property or null                        
                    </return>
                    <see>
                        #putProperty                        
                    </see>
                </javadoc>
                <method name="getProperty" type="Object" line="239">
                    <params>
                        <param name="key" type="Object"/>
                    </params>
                    <scope line="240"/>
                    <scope line="242"/>
                </method>
                <javadoc line="247">
                    Add an arbitrary key/value &quot;property&quot; to this component.                    
                    <see>
                        #getProperty                        
                    </see>
                </javadoc>
                <method name="putProperty" type="void" line="252">
                    <params>
                        <param name="key" type="Object"/>
                        <param name="value" type="Object"/>
                    </params>
                    <scope line="253"/>
                    <scope line="255"/>
                </method>
            </class>
            <class name="ThreadVisibleEventRequestImpl" line="261">
                <extends class="EventRequestImpl"/>
                <comment line="90">
                    This list is not protected by a synchronized wrapper. All
                     accessmodification should be protected by synchronizing on
                     the enclosing instance of EventRequestImpl.                    
                </comment>
                <comment line="107">
                    Override superclass back to default equality                    
                </comment>
                <method name="addThreadFilter" type="void" line="262">
                    <params>
                        <param name="thread" type="ThreadReference"/>
                    </params>
                    <scope line="264"/>
                </method>
            </class>
            <class name="ClassVisibleEventRequestImpl" line="272">
                <extends class="ThreadVisibleEventRequestImpl"/>
                <comment line="90">
                    This list is not protected by a synchronized wrapper. All
                     accessmodification should be protected by synchronizing on
                     the enclosing instance of EventRequestImpl.                    
                </comment>
                <comment line="107">
                    Override superclass back to default equality                    
                </comment>
                <method name="addClassFilter" type="void" line="274">
                    <params>
                        <param name="clazz" type="ReferenceType"/>
                    </params>
                    <scope line="276"/>
                </method>
                <method name="addClassFilter" type="void" line="283">
                    <params>
                        <param name="classPattern" type="String"/>
                    </params>
                    <scope line="284"/>
                    <scope line="287"/>
                </method>
                <method name="addClassExclusionFilter" type="void" line="294">
                    <params>
                        <param name="classPattern" type="String"/>
                    </params>
                    <scope line="295"/>
                    <scope line="298"/>
                </method>
                <method name="addInstanceFilter" type="void" line="305">
                    <params>
                        <param name="instance" type="ObjectReference"/>
                    </params>
                    <scope line="307"/>
                    <scope line="310"/>
                </method>
            </class>
            <class name="BreakpointRequestImpl" line="319">
                <extends class="ClassVisibleEventRequestImpl"/>
                <comment line="90">
                    This list is not protected by a synchronized wrapper. All
                     accessmodification should be protected by synchronizing on
                     the enclosing instance of EventRequestImpl.                    
                </comment>
                <comment line="107">
                    Override superclass back to default equality                    
                </comment>
                <implements interface="BreakpointRequest"/>
                <declaration name="location" type="Location" line="321"/>
                <method name="BreakpointRequestImpl" type="constructor" line="323">
                    <params>
                        <param name="location" type="Location"/>
                    </params>
                </method>
                <method name="location" type="Location" line="330"/>
                <method name="eventCmd" type="int" line="334"/>
                <method name="toString" type="String" line="338"/>
            </class>
            <class name="ClassPrepareRequestImpl" line="343">
                <extends class="ClassVisibleEventRequestImpl"/>
                <comment line="90">
                    This list is not protected by a synchronized wrapper. All
                     accessmodification should be protected by synchronizing on
                     the enclosing instance of EventRequestImpl.                    
                </comment>
                <comment line="107">
                    Override superclass back to default equality                    
                </comment>
                <implements interface="ClassPrepareRequest"/>
                <method name="ClassPrepareRequestImpl" type="constructor" line="345"/>
                <method name="eventCmd" type="int" line="349"/>
                <method name="addSourceNameFilter" type="void" line="353">
                    <params>
                        <param name="sourceNamePattern" type="String"/>
                    </params>
                    <scope line="354"/>
                    <scope line="357"/>
                    <scope line="361"/>
                </method>
                <method name="toString" type="String" line="369"/>
            </class>
            <class name="ClassUnloadRequestImpl" line="374">
                <extends class="ClassVisibleEventRequestImpl"/>
                <comment line="90">
                    This list is not protected by a synchronized wrapper. All
                     accessmodification should be protected by synchronizing on
                     the enclosing instance of EventRequestImpl.                    
                </comment>
                <comment line="107">
                    Override superclass back to default equality                    
                </comment>
                <implements interface="ClassUnloadRequest"/>
                <method name="ClassUnloadRequestImpl" type="constructor" line="376"/>
                <method name="eventCmd" type="int" line="380"/>
                <method name="toString" type="String" line="384"/>
            </class>
            <class name="ExceptionRequestImpl" line="389">
                <extends class="ClassVisibleEventRequestImpl"/>
                <comment line="90">
                    This list is not protected by a synchronized wrapper. All
                     accessmodification should be protected by synchronizing on
                     the enclosing instance of EventRequestImpl.                    
                </comment>
                <comment line="107">
                    Override superclass back to default equality                    
                </comment>
                <implements interface="ExceptionRequest"/>
                <declaration name="exception" type="ReferenceType" line="391"/>
                <declaration name="caught" type="boolean" line="392"/>
                <declaration name="uncaught" type="boolean" line="393"/>
                <method name="ExceptionRequestImpl" type="constructor" line="396">
                    <params>
                        <param name="refType" type="ReferenceType"/>
                        <param name="notifyCaught" type="boolean"/>
                        <param name="notifyUncaught" type="boolean"/>
                    </params>
                    <scope line="400">
                        <declaration name="exc" type="ReferenceTypeImpl" line="401"/>
                        <scope line="402"/>
                        <scope line="404"/>
                    </scope>
                </method>
                <method name="exception" type="ReferenceType" line="413"/>
                <method name="notifyCaught" type="boolean" line="417"/>
                <method name="notifyUncaught" type="boolean" line="421"/>
                <method name="eventCmd" type="int" line="425"/>
                <method name="toString" type="String" line="429"/>
            </class>
            <class name="MethodEntryRequestImpl" line="434">
                <extends class="ClassVisibleEventRequestImpl"/>
                <comment line="90">
                    This list is not protected by a synchronized wrapper. All
                     accessmodification should be protected by synchronizing on
                     the enclosing instance of EventRequestImpl.                    
                </comment>
                <comment line="107">
                    Override superclass back to default equality                    
                </comment>
                <implements interface="MethodEntryRequest"/>
                <method name="MethodEntryRequestImpl" type="constructor" line="436"/>
                <method name="eventCmd" type="int" line="440"/>
                <method name="toString" type="String" line="444"/>
            </class>
            <class name="MethodExitRequestImpl" line="449">
                <extends class="ClassVisibleEventRequestImpl"/>
                <comment line="90">
                    This list is not protected by a synchronized wrapper. All
                     accessmodification should be protected by synchronizing on
                     the enclosing instance of EventRequestImpl.                    
                </comment>
                <comment line="107">
                    Override superclass back to default equality                    
                </comment>
                <implements interface="MethodExitRequest"/>
                <method name="MethodExitRequestImpl" type="constructor" line="451">
                    <comment line="454">
                        If we can get return values, then we always get them.
                         Thus, for JDI MethodExitRequests, we always use the
                         same JDWP EventKind.  Here we decide which to use and
                         save it so that it will be used for all future
                         MethodExitRequests.
                        
                         This call to canGetMethodReturnValues can&apos;t
                         be done in the EventRequestManager ctor because that is too early.                        
                    </comment>
                    <scope line="452">
                        <scope line="463"/>
                        <scope line="465"/>
                    </scope>
                </method>
                <method name="eventCmd" type="int" line="472"/>
                <method name="toString" type="String" line="476"/>
            </class>
            <class name="MonitorContendedEnterRequestImpl" line="481">
                <extends class="ClassVisibleEventRequestImpl"/>
                <comment line="90">
                    This list is not protected by a synchronized wrapper. All
                     accessmodification should be protected by synchronizing on
                     the enclosing instance of EventRequestImpl.                    
                </comment>
                <comment line="107">
                    Override superclass back to default equality                    
                </comment>
                <implements interface="MonitorContendedEnterRequest"/>
                <method name="MonitorContendedEnterRequestImpl" type="constructor" line="483"/>
                <method name="eventCmd" type="int" line="487"/>
                <method name="toString" type="String" line="491"/>
            </class>
            <class name="MonitorContendedEnteredRequestImpl" line="496">
                <extends class="ClassVisibleEventRequestImpl"/>
                <comment line="90">
                    This list is not protected by a synchronized wrapper. All
                     accessmodification should be protected by synchronizing on
                     the enclosing instance of EventRequestImpl.                    
                </comment>
                <comment line="107">
                    Override superclass back to default equality                    
                </comment>
                <implements interface="MonitorContendedEnteredRequest"/>
                <method name="MonitorContendedEnteredRequestImpl" type="constructor" line="498"/>
                <method name="eventCmd" type="int" line="502"/>
                <method name="toString" type="String" line="506"/>
            </class>
            <class name="MonitorWaitRequestImpl" line="511">
                <extends class="ClassVisibleEventRequestImpl"/>
                <comment line="90">
                    This list is not protected by a synchronized wrapper. All
                     accessmodification should be protected by synchronizing on
                     the enclosing instance of EventRequestImpl.                    
                </comment>
                <comment line="107">
                    Override superclass back to default equality                    
                </comment>
                <implements interface="MonitorWaitRequest"/>
                <method name="MonitorWaitRequestImpl" type="constructor" line="513"/>
                <method name="eventCmd" type="int" line="517"/>
                <method name="toString" type="String" line="521"/>
            </class>
            <class name="MonitorWaitedRequestImpl" line="526">
                <extends class="ClassVisibleEventRequestImpl"/>
                <comment line="90">
                    This list is not protected by a synchronized wrapper. All
                     accessmodification should be protected by synchronizing on
                     the enclosing instance of EventRequestImpl.                    
                </comment>
                <comment line="107">
                    Override superclass back to default equality                    
                </comment>
                <implements interface="MonitorWaitedRequest"/>
                <method name="MonitorWaitedRequestImpl" type="constructor" line="528"/>
                <method name="eventCmd" type="int" line="532"/>
                <method name="toString" type="String" line="536"/>
            </class>
            <class name="StepRequestImpl" line="541">
                <extends class="ClassVisibleEventRequestImpl"/>
                <comment line="90">
                    This list is not protected by a synchronized wrapper. All
                     accessmodification should be protected by synchronizing on
                     the enclosing instance of EventRequestImpl.                    
                </comment>
                <comment line="107">
                    Override superclass back to default equality                    
                </comment>
                <implements interface="StepRequest"/>
                <declaration name="thread" type="ThreadReferenceImpl" line="543"/>
                <declaration name="size" type="int" line="544"/>
                <declaration name="depth" type="int" line="545"/>
                <method name="StepRequestImpl" type="constructor" line="547">
                    <params>
                        <param name="thread" type="ThreadReference"/>
                        <param name="size" type="int"/>
                        <param name="depth" type="int"/>
                    </params>
                    <comment line="553">
                        Translate size and depth to corresponding JDWP values.                        
                    </comment>
                    <comment line="583">
                        Make sure this isn&apos;t a duplicate                        
                    </comment>
                    <declaration name="jdwpSize" type="int" line="555"/>
                    <declaration name="jdwpDepth" type="int" line="567"/>
                    <declaration name="requests" type="List" line="585"/>
                    <declaration name="iter" type="Iterator" line="586"/>
                    <scope line="587">
                        <declaration name="request" type="StepRequest" line="588"/>
                        <scope line="591"/>
                    </scope>
                </method>
                <method name="depth" type="int" line="602"/>
                <method name="size" type="int" line="606"/>
                <method name="thread" type="ThreadReference" line="610"/>
                <method name="eventCmd" type="int" line="614"/>
                <method name="toString" type="String" line="618"/>
            </class>
            <class name="ThreadDeathRequestImpl" line="623">
                <extends class="ThreadVisibleEventRequestImpl"/>
                <comment line="90">
                    This list is not protected by a synchronized wrapper. All
                     accessmodification should be protected by synchronizing on
                     the enclosing instance of EventRequestImpl.                    
                </comment>
                <comment line="107">
                    Override superclass back to default equality                    
                </comment>
                <implements interface="ThreadDeathRequest"/>
                <method name="ThreadDeathRequestImpl" type="constructor" line="625"/>
                <method name="eventCmd" type="int" line="629"/>
                <method name="toString" type="String" line="633"/>
            </class>
            <class name="ThreadStartRequestImpl" line="638">
                <extends class="ThreadVisibleEventRequestImpl"/>
                <comment line="90">
                    This list is not protected by a synchronized wrapper. All
                     accessmodification should be protected by synchronizing on
                     the enclosing instance of EventRequestImpl.                    
                </comment>
                <comment line="107">
                    Override superclass back to default equality                    
                </comment>
                <implements interface="ThreadStartRequest"/>
                <method name="ThreadStartRequestImpl" type="constructor" line="640"/>
                <method name="eventCmd" type="int" line="644"/>
                <method name="toString" type="String" line="648"/>
            </class>
            <class name="WatchpointRequestImpl" line="653">
                <extends class="ClassVisibleEventRequestImpl"/>
                <comment line="90">
                    This list is not protected by a synchronized wrapper. All
                     accessmodification should be protected by synchronizing on
                     the enclosing instance of EventRequestImpl.                    
                </comment>
                <comment line="107">
                    Override superclass back to default equality                    
                </comment>
                <implements interface="WatchpointRequest"/>
                <declaration name="field" type="Field" line="655"/>
                <method name="WatchpointRequestImpl" type="constructor" line="657">
                    <params>
                        <param name="field" type="Field"/>
                    </params>
                </method>
                <method name="field" type="Field" line="665"/>
            </class>
            <class name="AccessWatchpointRequestImpl" line="670">
                <extends class="WatchpointRequestImpl"/>
                <comment line="90">
                    This list is not protected by a synchronized wrapper. All
                     accessmodification should be protected by synchronizing on
                     the enclosing instance of EventRequestImpl.                    
                </comment>
                <comment line="107">
                    Override superclass back to default equality                    
                </comment>
                <implements interface="AccessWatchpointRequest"/>
                <method name="AccessWatchpointRequestImpl" type="constructor" line="672">
                    <params>
                        <param name="field" type="Field"/>
                    </params>
                </method>
                <method name="eventCmd" type="int" line="677"/>
                <method name="toString" type="String" line="681"/>
            </class>
            <class name="ModificationWatchpointRequestImpl" line="686">
                <extends class="WatchpointRequestImpl"/>
                <comment line="90">
                    This list is not protected by a synchronized wrapper. All
                     accessmodification should be protected by synchronizing on
                     the enclosing instance of EventRequestImpl.                    
                </comment>
                <comment line="107">
                    Override superclass back to default equality                    
                </comment>
                <implements interface="ModificationWatchpointRequest"/>
                <method name="ModificationWatchpointRequestImpl" type="constructor" line="688">
                    <params>
                        <param name="field" type="Field"/>
                    </params>
                </method>
                <method name="eventCmd" type="int" line="693"/>
                <method name="toString" type="String" line="697"/>
            </class>
            <class name="VMDeathRequestImpl" line="702">
                <extends class="EventRequestImpl"/>
                <comment line="90">
                    This list is not protected by a synchronized wrapper. All
                     accessmodification should be protected by synchronizing on
                     the enclosing instance of EventRequestImpl.                    
                </comment>
                <comment line="107">
                    Override superclass back to default equality                    
                </comment>
                <implements interface="VMDeathRequest"/>
                <method name="VMDeathRequestImpl" type="constructor" line="704"/>
                <method name="eventCmd" type="int" line="708"/>
                <method name="toString" type="String" line="712"/>
            </class>
            <javadoc line="717">
                Constructor.                
            </javadoc>
            <method name="EventRequestManagerImpl" type="constructor" line="720">
                <params>
                    <param name="vm" type="VirtualMachine"/>
                </params>
                <declaration name="ekinds" type="java.lang.reflect.Field[]" line="722"/>
                <declaration name="highest" type="int" line="724"/>
                <scope line="725">
                    <declaration name="val" type="int" line="726"/>
                    <scope line="727"/>
                    <scope line="729"/>
                    <scope line="732"/>
                </scope>
                <scope line="737"/>
            </method>
            <method name="createClassPrepareRequest" type="ClassPrepareRequest" line="742"/>
            <method name="createClassUnloadRequest" type="ClassUnloadRequest" line="746"/>
            <method name="createExceptionRequest" type="ExceptionRequest" line="752">
                <params>
                    <param name="refType" type="ReferenceType"/>
                    <param name="notifyCaught" type="boolean"/>
                    <param name="notifyUncaught" type="boolean"/>
                </params>
            </method>
            <method name="createStepRequest" type="StepRequest" line="758">
                <params>
                    <param name="thread" type="ThreadReference"/>
                    <param name="size" type="int"/>
                    <param name="depth" type="int"/>
                </params>
            </method>
            <method name="createThreadDeathRequest" type="ThreadDeathRequest" line="763"/>
            <method name="createThreadStartRequest" type="ThreadStartRequest" line="767"/>
            <method name="createMethodEntryRequest" type="MethodEntryRequest" line="771"/>
            <method name="createMethodExitRequest" type="MethodExitRequest" line="775"/>
            <method name="createMonitorContendedEnterRequest" type="MonitorContendedEnterRequest" line="779">
                <scope line="780"/>
            </method>
            <method name="createMonitorContendedEnteredRequest" type="MonitorContendedEnteredRequest" line="787">
                <scope line="788"/>
            </method>
            <method name="createMonitorWaitRequest" type="MonitorWaitRequest" line="795">
                <scope line="796"/>
            </method>
            <method name="createMonitorWaitedRequest" type="MonitorWaitedRequest" line="803">
                <scope line="804"/>
            </method>
            <method name="createBreakpointRequest" type="BreakpointRequest" line="811">
                <params>
                    <param name="location" type="Location"/>
                </params>
                <scope line="813"/>
            </method>
            <method name="createAccessWatchpointRequest" type="AccessWatchpointRequest" line="820">
                <params>
                    <param name="field" type="Field"/>
                </params>
                <scope line="822"/>
            </method>
            <method name="createModificationWatchpointRequest" type="ModificationWatchpointRequest" line="830">
                <params>
                    <param name="field" type="Field"/>
                </params>
                <scope line="832"/>
            </method>
            <method name="createVMDeathRequest" type="VMDeathRequest" line="839">
                <scope line="840"/>
            </method>
            <method name="deleteEventRequest" type="void" line="847">
                <params>
                    <param name="eventRequest" type="EventRequest"/>
                </params>
            </method>
            <method name="deleteEventRequests" type="void" line="852">
                <params>
                    <param name="eventRequests" type="List<? extends EventRequest>"/>
                </params>
                <comment line="855">
                    copy the eventRequests to avoid ConcurrentModificationException                    
                </comment>
                <declaration name="iter" type="Iterator" line="855"/>
                <scope line="856"/>
            </method>
            <method name="deleteAllBreakpoints" type="void" line="861">
                <scope line="864"/>
                <scope line="866"/>
            </method>
            <method name="stepRequests" type="List<StepRequest>" line="871"/>
            <method name="classPrepareRequests" type="List<ClassPrepareRequest>" line="875"/>
            <method name="classUnloadRequests" type="List<ClassUnloadRequest>" line="879"/>
            <method name="threadStartRequests" type="List<ThreadStartRequest>" line="883"/>
            <method name="threadDeathRequests" type="List<ThreadDeathRequest>" line="887"/>
            <method name="exceptionRequests" type="List<ExceptionRequest>" line="891"/>
            <method name="breakpointRequests" type="List<BreakpointRequest>" line="895"/>
            <method name="accessWatchpointRequests" type="List<AccessWatchpointRequest>" line="899"/>
            <method name="modificationWatchpointRequests" type="List<ModificationWatchpointRequest>" line="903"/>
            <method name="methodEntryRequests" type="List<MethodEntryRequest>" line="907"/>
            <method name="methodExitRequests" type="List<MethodExitRequest>" line="911"/>
            <method name="monitorContendedEnterRequests" type="List<MonitorContendedEnterRequest>" line="916"/>
            <method name="monitorContendedEnteredRequests" type="List<MonitorContendedEnteredRequest>" line="920"/>
            <method name="monitorWaitRequests" type="List<MonitorWaitRequest>" line="924"/>
            <method name="monitorWaitedRequests" type="List<MonitorWaitedRequest>" line="928"/>
            <method name="vmDeathRequests" type="List<VMDeathRequest>" line="932"/>
            <method name="unmodifiableRequestList" type="List" line="936">
                <params>
                    <param name="eventCmd" type="int"/>
                </params>
            </method>
            <method name="request" type="EventRequest" line="940">
                <params>
                    <param name="eventCmd" type="int"/>
                    <param name="requestId" type="int"/>
                </params>
                <declaration name="rl" type="List" line="941"/>
                <scope line="942">
                    <declaration name="er" type="EventRequestImpl" line="943"/>
                    <scope line="944"/>
                </scope>
            </method>
            <method name="requestList" type="List<? extends EventRequest>" line="951">
                <params>
                    <param name="eventCmd" type="int"/>
                </params>
            </method>
        </class>
    </source>