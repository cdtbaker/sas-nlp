<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.jdi">
        <import package="com.sun.jdi"/>
        <import package="java.util"/>
        <import package="java.io.ByteArrayOutputStream"/>
        <class name="PacketStream" line="5">
            <declaration name="vm" type="VirtualMachineImpl" line="6"/>
            <declaration name="inCursor" type="int" line="7"/>
            <declaration name="pkt" type="Packet" line="8"/>
            <declaration name="dataStream" type="ByteArrayOutputStream" line="9"/>
            <declaration name="isCommitted" type="boolean" line="10"/>
            <method name="PacketStream" type="constructor" line="11">
                <params>
                    <param name="vm" type="VirtualMachineImpl"/>
                    <param name="cmdSet" type="int"/>
                    <param name="cmd" type="int"/>
                </params>
            </method>
            <method name="PacketStream" type="constructor" line="17">
                <params>
                    <param name="vm" type="VirtualMachineImpl"/>
                    <param name="pkt" type="Packet"/>
                </params>
            </method>
            <method name="id" type="int" line="22"/>
            <method name="send" type="void" line="25">
                <scope line="26"/>
            </method>
            <method name="waitForReply" type="void" line="32">
                <scope line="33"/>
                <scope line="37"/>
            </method>
            <method name="writeBoolean" type="void" line="41">
                <params>
                    <param name="data" type="boolean"/>
                </params>
                <scope line="42"/>
                <scope line="45"/>
            </method>
            <method name="writeByte" type="void" line="49">
                <params>
                    <param name="data" type="byte"/>
                </params>
            </method>
            <method name="writeChar" type="void" line="52">
                <params>
                    <param name="data" type="char"/>
                </params>
            </method>
            <method name="writeShort" type="void" line="56">
                <params>
                    <param name="data" type="short"/>
                </params>
            </method>
            <method name="writeInt" type="void" line="60">
                <params>
                    <param name="data" type="int"/>
                </params>
            </method>
            <method name="writeLong" type="void" line="66">
                <params>
                    <param name="data" type="long"/>
                </params>
            </method>
            <method name="writeFloat" type="void" line="76">
                <params>
                    <param name="data" type="float"/>
                </params>
            </method>
            <method name="writeDouble" type="void" line="79">
                <params>
                    <param name="data" type="double"/>
                </params>
            </method>
            <method name="writeID" type="void" line="82">
                <params>
                    <param name="size" type="int"/>
                    <param name="data" type="long"/>
                </params>
            </method>
            <method name="writeNullObjectRef" type="void" line="97"/>
            <method name="writeObjectRef" type="void" line="100">
                <params>
                    <param name="data" type="long"/>
                </params>
            </method>
            <method name="writeClassRef" type="void" line="103">
                <params>
                    <param name="data" type="long"/>
                </params>
            </method>
            <method name="writeMethodRef" type="void" line="106">
                <params>
                    <param name="data" type="long"/>
                </params>
            </method>
            <method name="writeFieldRef" type="void" line="109">
                <params>
                    <param name="data" type="long"/>
                </params>
            </method>
            <method name="writeFrameRef" type="void" line="112">
                <params>
                    <param name="data" type="long"/>
                </params>
            </method>
            <method name="writeByteArray" type="void" line="115">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
            </method>
            <method name="writeString" type="void" line="118">
                <params>
                    <param name="string" type="String"/>
                </params>
                <scope line="119">
                    <declaration name="stringBytes" type="byte[]" line="120"/>
                </scope>
                <scope line="124"/>
            </method>
            <method name="writeLocation" type="void" line="128">
                <params>
                    <param name="location" type="Location"/>
                </params>
                <declaration name="refType" type="ReferenceTypeImpl" line="129"/>
                <declaration name="tag" type="byte" line="130"/>
                <scope line="131"/>
                <scope line="134"/>
                <scope line="137"/>
            </method>
            <method name="writeValue" type="void" line="145">
                <params>
                    <param name="val" type="Value"/>
                </params>
                <scope line="146"/>
                <scope line="149"/>
            </method>
            <method name="writeValueChecked" type="void" line="153">
                <params>
                    <param name="val" type="Value"/>
                </params>
            </method>
            <method name="writeUntaggedValue" type="void" line="157">
                <params>
                    <param name="val" type="Value"/>
                </params>
                <scope line="158"/>
                <scope line="161"/>
            </method>
            <method name="writeUntaggedValueChecked" type="void" line="165">
                <params>
                    <param name="val" type="Value"/>
                </params>
                <declaration name="tag" type="byte" line="166"/>
                <scope line="167">
                    <scope line="168"/>
                    <scope line="171">
                        <scope line="172"/>
                    </scope>
                </scope>
                <scope line="178"/>
            </method>
            <javadoc line="215">
                Read byte represented as one bytes.                
            </javadoc>
            <method name="readByte" type="byte" line="218">
                <declaration name="ret" type="byte" line="219"/>
            </method>
            <javadoc line="223">
                Read boolean represented as one byte.                
            </javadoc>
            <method name="readBoolean" type="boolean" line="226">
                <declaration name="ret" type="byte" line="227"/>
            </method>
            <javadoc line="230">
                Read char represented as two bytes.                
            </javadoc>
            <method name="readChar" type="char" line="233">
                <declaration name="b1" type="int" line="234"/>
            </method>
            <javadoc line="239">
                Read short represented as two bytes.                
            </javadoc>
            <method name="readShort" type="short" line="242">
                <declaration name="b1" type="int" line="243"/>
            </method>
            <javadoc line="248">
                Read int represented as four bytes.                
            </javadoc>
            <method name="readInt" type="int" line="251">
                <declaration name="b1" type="int" line="252"/>
            </method>
            <javadoc line="259">
                Read long represented as eight bytes.                
            </javadoc>
            <method name="readLong" type="long" line="262">
                <declaration name="b1" type="long" line="263"/>
                <declaration name="b5" type="long" line="264"/>
            </method>
            <javadoc line="275">
                Read float represented as four bytes.                
            </javadoc>
            <method name="readFloat" type="float" line="278"/>
            <javadoc line="281">
                Read double represented as eight bytes.                
            </javadoc>
            <method name="readDouble" type="double" line="284"/>
            <javadoc line="287">
                Read string represented as four byte length followed by
                  characters of the string.                
            </javadoc>
            <method name="readString" type="String" line="291">
                <declaration name="ret" type="String" line="292"/>
                <declaration name="len" type="int" line="293"/>
                <scope line="294"/>
                <scope line="297"/>
            </method>
            <method name="readID" type="long" line="304">
                <params>
                    <param name="size" type="int"/>
                </params>
            </method>
            <javadoc line="316">
                Read object represented as vm specific byte sequence.                
            </javadoc>
            <method name="readObjectRef" type="long" line="319"/>
            <method name="readClassRef" type="long" line="322"/>
            <method name="readTaggedObjectReference" type="ObjectReferenceImpl" line="325">
                <declaration name="typeKey" type="byte" line="326"/>
            </method>
            <method name="readObjectReference" type="ObjectReferenceImpl" line="329"/>
            <method name="readStringReference" type="StringReferenceImpl" line="332">
                <declaration name="ref" type="long" line="333"/>
            </method>
            <method name="readArrayReference" type="ArrayReferenceImpl" line="336">
                <declaration name="ref" type="long" line="337"/>
            </method>
            <method name="readThreadReference" type="ThreadReferenceImpl" line="340">
                <declaration name="ref" type="long" line="341"/>
            </method>
            <method name="readThreadGroupReference" type="ThreadGroupReferenceImpl" line="344">
                <declaration name="ref" type="long" line="345"/>
            </method>
            <method name="readClassLoaderReference" type="ClassLoaderReferenceImpl" line="348">
                <declaration name="ref" type="long" line="349"/>
            </method>
            <method name="readClassObjectReference" type="ClassObjectReferenceImpl" line="352">
                <declaration name="ref" type="long" line="353"/>
            </method>
            <method name="readReferenceType" type="ReferenceTypeImpl" line="356">
                <declaration name="tag" type="byte" line="357"/>
                <declaration name="ref" type="long" line="358"/>
            </method>
            <javadoc line="361">
                Read method reference represented as vm specific byte sequence.                
            </javadoc>
            <method name="readMethodRef" type="long" line="364"/>
            <javadoc line="367">
                Read field reference represented as vm specific byte sequence.                
            </javadoc>
            <method name="readFieldRef" type="long" line="370"/>
            <javadoc line="373">
                Read field represented as vm specific byte sequence.                
            </javadoc>
            <method name="readField" type="Field" line="376">
                <declaration name="refType" type="ReferenceTypeImpl" line="377"/>
                <declaration name="fieldRef" type="long" line="378"/>
            </method>
            <javadoc line="381">
                Read frame represented as vm specific byte sequence.                
            </javadoc>
            <method name="readFrameRef" type="long" line="384"/>
            <javadoc line="387">
                Read a value, first byte describes type of value to read.                
            </javadoc>
            <method name="readValue" type="ValueImpl" line="390">
                <declaration name="typeKey" type="byte" line="391"/>
            </method>
            <method name="readUntaggedValue" type="ValueImpl" line="394">
                <params>
                    <param name="typeKey" type="byte"/>
                </params>
                <declaration name="val" type="ValueImpl" line="395"/>
                <scope line="396"/>
                <scope line="399"/>
            </method>
            <javadoc line="432">
                Read location represented as vm specific byte sequence.                
            </javadoc>
            <method name="readLocation" type="Location" line="435">
                <declaration name="tag" type="byte" line="436"/>
                <declaration name="classRef" type="long" line="437"/>
                <declaration name="methodRef" type="long" line="438"/>
                <declaration name="codeIndex" type="long" line="439"/>
                <scope line="440">
                    <declaration name="refType" type="ReferenceTypeImpl" line="441"/>
                </scope>
                <scope line="444"/>
            </method>
            <method name="readByteArray" type="byte[]" line="448">
                <params>
                    <param name="length" type="int"/>
                </params>
                <declaration name="array" type="byte[]" line="449"/>
            </method>
            <method name="readArrayRegion" type="List&lt;Value&gt;" line="454">
                <declaration name="typeKey" type="byte" line="455"/>
                <declaration name="length" type="int" line="456"/>
                <declaration name="list" type="List&amp;lt;Value&amp;gt;" line="457"/>
                <declaration name="gettingObjects" type="boolean" line="458"/>
                <scope line="459">
                    <scope line="460"/>
                    <declaration name="value" type="Value" line="463"/>
                </scope>
            </method>
            <method name="writeArrayRegion" type="void" line="468">
                <params>
                    <param name="srcValues" type="List&lt;Value&gt;"/>
                </params>
                <scope line="470">
                    <declaration name="value" type="Value" line="471"/>
                </scope>
            </method>
            <method name="skipBytes" type="int" line="475">
                <params>
                    <param name="n" type="int"/>
                </params>
            </method>
            <method name="command" type="byte" line="479"/>
            <method name="isObjectTag" type="boolean" line="482">
                <params>
                    <param name="tag" type="byte"/>
                </params>
            </method>
        </class>
    </source>