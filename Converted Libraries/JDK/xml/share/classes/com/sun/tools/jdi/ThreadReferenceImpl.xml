<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.jdi">
        <import package="com.sun.jdi"/>
        <import package="com.sun.jdi.request.BreakpointRequest"/>
        <import package="java.util"/>
        <import package="java.lang.ref.WeakReference"/>
        <class name="ThreadReferenceImpl" line="6">
            <extends class="ObjectReferenceImpl"/>
            <implements interface="ThreadReference"/>
            <implements interface="VMListener"/>
            <declaration name="SUSPEND_STATUS_SUSPENDED" type="int" line="7"/>
            <declaration name="SUSPEND_STATUS_BREAK" type="int" line="8"/>
            <declaration name="suspendedZombieCount" type="int" line="9"/>
            <declaration name="threadGroup" type="ThreadGroupReference" line="10"/>
            <class name="LocalCache" line="11">
                <declaration name="status" type="JDWP.ThreadReference.Status" line="12"/>
                <declaration name="frames" type="List&amp;lt;StackFrame&amp;gt;" line="13"/>
                <declaration name="framesStart" type="int" line="14"/>
                <declaration name="framesLength" type="int" line="15"/>
                <declaration name="frameCount" type="int" line="16"/>
                <declaration name="ownedMonitors" type="List&amp;lt;ObjectReference&amp;gt;" line="17"/>
                <declaration name="ownedMonitorsInfo" type="List&amp;lt;MonitorInfo&amp;gt;" line="18"/>
                <declaration name="contendedMonitor" type="ObjectReference" line="19"/>
                <declaration name="triedCurrentContended" type="boolean" line="20"/>
            </class>
            <declaration name="localCache" type="LocalCache" line="22"/>
            <method name="resetLocalCache" type="void" line="23"/>
            <class name="Cache" line="26">
                <extends class="ObjectReferenceImpl.Cache"/>
                <declaration name="name" type="String" line="27"/>
            </class>
            <method name="newCache" type="ObjectReferenceImpl.Cache" line="29"/>
            <declaration name="listeners" type="List&amp;lt;WeakReference&amp;lt;ThreadListener&amp;gt;&amp;gt;" line="32"/>
            <method name="ThreadReferenceImpl" type="constructor" line="33">
                <params>
                    <param name="aVm" type="VirtualMachine"/>
                    <param name="aRef" type="long"/>
                </params>
            </method>
            <method name="description" type="String" line="38"/>
            <method name="vmNotSuspended" type="boolean" line="41">
                <params>
                    <param name="action" type="VMAction"/>
                </params>
                <scope line="42">
                    <scope line="43"/>
                </scope>
            </method>
            <javadoc line="49">
                Note that we only cache the name string while the entire VM is suspended
                  because the name can change via Thread.setName arbitrarily while this
                  thread is running.                
            </javadoc>
            <method name="name" type="String" line="54">
                <declaration name="name" type="String" line="55"/>
                <scope line="56">
                    <declaration name="local" type="Cache" line="57"/>
                    <scope line="58"/>
                    <scope line="61">
                        <scope line="63"/>
                    </scope>
                </scope>
                <scope line="68"/>
            </method>
            <method name="sendResumingCommand" type="PacketStream" line="73">
                <params>
                    <param name="sender" type="CommandSender"/>
                </params>
                <scope line="74"/>
            </method>
            <method name="suspend" type="void" line="79">
                <scope line="80"/>
                <scope line="83"/>
            </method>
            <method name="resume" type="void" line="87">
                <scope line="88"/>
                <declaration name="stream" type="PacketStream" line="92"/>
                <scope line="93"/>
                <scope line="97"/>
                <scope line="100"/>
            </method>
            <method name="suspendCount" type="int" line="104">
                <scope line="105"/>
                <scope line="108"/>
                <scope line="111"/>
            </method>
            <method name="stop" type="void" line="115">
                <params>
                    <param name="throwable" type="ObjectReference"/>
                </params>
                <declaration name="list" type="List" line="117"/>
                <declaration name="throwableClass" type="ClassTypeImpl" line="118"/>
                <scope line="119"/>
                <scope line="122"/>
                <scope line="125"/>
            </method>
            <method name="interrupt" type="void" line="129">
                <scope line="130"/>
                <scope line="133"/>
            </method>
            <method name="jdwpStatus" type="JDWP.ThreadReference.Status" line="137">
                <declaration name="snapshot" type="LocalCache" line="138"/>
                <declaration name="myStatus" type="JDWP.ThreadReference.Status" line="139"/>
                <scope line="140">
                    <scope line="141">
                        <scope line="143"/>
                    </scope>
                </scope>
                <scope line="148"/>
            </method>
            <method name="status" type="int" line="153"/>
            <method name="isSuspended" type="boolean" line="156"/>
            <method name="isAtBreakpoint" type="boolean" line="159">
                <scope line="160">
                    <declaration name="frame" type="StackFrame" line="161"/>
                    <declaration name="location" type="Location" line="162"/>
                    <declaration name="requests" type="List" line="163"/>
                    <declaration name="iter" type="Iterator" line="164"/>
                    <scope line="165">
                        <declaration name="request" type="BreakpointRequest" line="166"/>
                        <scope line="167"/>
                    </scope>
                </scope>
                <scope line="173"/>
                <scope line="176"/>
            </method>
            <method name="threadGroup" type="ThreadGroupReference" line="180">
                <scope line="181">
                    <scope line="182"/>
                    <scope line="185"/>
                </scope>
            </method>
            <method name="frameCount" type="int" line="191">
                <declaration name="snapshot" type="LocalCache" line="192"/>
                <scope line="193">
                    <scope line="194"/>
                </scope>
                <scope line="198"/>
            </method>
            <method name="frames" type="List&lt;StackFrame&gt;" line="209"/>
            <method name="frame" type="StackFrame" line="212">
                <params>
                    <param name="index" type="int"/>
                </params>
                <declaration name="list" type="List" line="213"/>
            </method>
            <javadoc line="216">
                Is the requested subrange within what has been retrieved?
                  local is known to be non-null.  Should only be called from
                  a sync method.                
            </javadoc>
            <method name="isSubrange" type="boolean" line="221">
                <params>
                    <param name="snapshot" type="LocalCache"/>
                    <param name="start" type="int"/>
                    <param name="length" type="int"/>
                </params>
                <scope line="222"/>
                <scope line="225"/>
                <scope line="228">
                    <scope line="229"/>
                </scope>
            </method>
            <method name="frames" type="List&lt;StackFrame&gt;" line="236">
                <params>
                    <param name="start" type="int"/>
                    <param name="length" type="int"/>
                </params>
                <scope line="237"/>
            </method>
            <javadoc line="242">
                Private version of frames() allows &quot;-1&quot; to specify all
                  remaining frames.                
            </javadoc>
            <method name="privateFrames" type="List&lt;StackFrame&gt;" line="246">
                <params>
                    <param name="start" type="int"/>
                    <param name="length" type="int"/>
                </params>
                <declaration name="snapshot" type="LocalCache" line="247"/>
                <scope line="248">
                    <scope line="249">
                        <declaration name="jdwpFrames" type="JDWP.ThreadReference.Frames.Frame[]" line="250"/>
                        <declaration name="count" type="int" line="251"/>
                        <scope line="253">
                            <scope line="254"/>
                            <declaration name="frame" type="StackFrame" line="257"/>
                        </scope>
                    </scope>
                    <scope line="264">
                        <declaration name="fromIndex" type="int" line="265"/>
                        <declaration name="toIndex" type="int" line="266"/>
                        <scope line="267"/>
                        <scope line="270"/>
                    </scope>
                </scope>
                <scope line="276"/>
            </method>
            <method name="ownedMonitors" type="List&lt;ObjectReference&gt;" line="286">
                <declaration name="snapshot" type="LocalCache" line="287"/>
                <scope line="288">
                    <scope line="289">
                        <scope line="291"/>
                    </scope>
                </scope>
                <scope line="296"/>
            </method>
            <method name="currentContendedMonitor" type="ObjectReference" line="307">
                <declaration name="snapshot" type="LocalCache" line="308"/>
                <scope line="309">
                    <scope line="310">
                        <scope line="313"/>
                    </scope>
                </scope>
                <scope line="318"/>
            </method>
            <method name="ownedMonitorsAndFrames" type="List&lt;MonitorInfo&gt;" line="329">
                <declaration name="snapshot" type="LocalCache" line="330"/>
                <scope line="331">
                    <scope line="332">
                        <declaration name="minfo" type="JDWP.ThreadReference.OwnedMonitorsStackDepthInfo.monitor[]" line="333"/>
                        <scope line="336">
                            <declaration name="mi" type="JDWP.ThreadReference.OwnedMonitorsStackDepthInfo.monitor" line="337"/>
                            <declaration name="mon" type="MonitorInfo" line="338"/>
                        </scope>
                        <scope line="341"/>
                    </scope>
                </scope>
                <scope line="346"/>
            </method>
            <method name="popFrames" type="void" line="357">
                <params>
                    <param name="frame" type="StackFrame"/>
                </params>
                <scope line="358"/>
                <scope line="361"/>
            </method>
            <method name="forceEarlyReturn" type="void" line="366">
                <params>
                    <param name="returnValue" type="Value"/>
                </params>
                <scope line="367"/>
                <declaration name="sf" type="StackFrameImpl" line="371"/>
                <scope line="372"/>
                <scope line="375"/>
                <declaration name="meth" type="MethodImpl" line="379"/>
                <declaration name="convertedValue" type="ValueImpl" line="380"/>
                <scope line="381"/>
                <scope line="384"/>
            </method>
            <method name="toString" type="String" line="399"/>
            <method name="typeValueKey" type="byte" line="402"/>
            <method name="addListener" type="void" line="405">
                <params>
                    <param name="listener" type="ThreadListener"/>
                </params>
                <scope line="406"/>
            </method>
            <method name="removeListener" type="void" line="410">
                <params>
                    <param name="listener" type="ThreadListener"/>
                </params>
                <scope line="411">
                    <declaration name="iter" type="Iterator" line="412"/>
                    <scope line="413">
                        <declaration name="ref" type="WeakReference" line="414"/>
                        <scope line="415"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="422">
                Propagate the the thread state change information
                  to registered listeners.
                  Must be entered while synchronized on vm.state()                
            </javadoc>
            <method name="processThreadAction" type="void" line="427">
                <params>
                    <param name="action" type="ThreadAction"/>
                </params>
                <scope line="428">
                    <declaration name="iter" type="Iterator" line="429"/>
                    <scope line="430">
                        <declaration name="ref" type="WeakReference" line="431"/>
                        <declaration name="listener" type="ThreadListener" line="432"/>
                        <scope line="433">
                            <scope line="436"/>
                        </scope>
                        <scope line="442"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>