<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.gui">
        <import package="java.util"/>
        <import package="javax.swing"/>
        <import package="javax.swing.tree"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="com.sun.jdi"/>
        <import package="com.sun.tools.example.debug.event"/>
        <import package="com.sun.tools.example.debug.bdi"/>
        <class name="ClassTreeTool" line="39">
            <extends class="JPanel"/>
            <comment line="53">
                private SearchPath sourcePath;                
            </comment>
            <declaration name="serialVersionUID" type="long" line="41"/>
            <declaration name="env" type="Environment" line="43"/>
            <declaration name="runtime" type="ExecutionManager" line="45"/>
            <declaration name="sourceManager" type="SourceManager" line="46"/>
            <declaration name="classManager" type="ClassManager" line="47"/>
            <declaration name="tree" type="JTree" line="49"/>
            <declaration name="treeModel" type="DefaultTreeModel" line="50"/>
            <declaration name="root" type="ClassTreeNode" line="51"/>
            <declaration name="interpreter" type="CommandInterpreter" line="54"/>
            <declaration name="HEADING" type="String" line="56"/>
            <method name="ClassTreeTool" type="constructor" line="58">
                <params>
                    <param name="env" type="Environment"/>
                </params>
                <comment line="72">
                    Create a tree that allows one selection at a time.                    
                </comment>
                <comment line="77">
                    Listen for when the selection changes.
                    tree.addTreeSelectionListener(new TreeSelectionListener() {
                    public void valueChanged(TreeSelectionEvent e) {
                    ClassTreeNode node = (ClassTreeNode)
                    (e.getPath().getLastPathComponent());
                    if (node != null) {
                    interpreter.executeCommand(&quot;view &quot; + node.getReferenceTypeName());
                    }
                    }
                    });                    
                </comment>
                <comment line="99">
                    If user clicks on leaf, select it, and issue &apos;view&apos; command.                    
                </comment>
                <comment line="113">
                    Create listener.                    
                </comment>
                <comment line="118">
                    ### remove listeners on exit!                    
                </comment>
                <anonymous_class line="89">
                    <method name="mouseClicked" type="void" line="91">
                        <params>
                            <param name="e" type="MouseEvent"/>
                        </params>
                        <comment line="99">
                            If user clicks on leaf, select it, and issue &apos;view&apos; command.                            
                        </comment>
                        <declaration name="selRow" type="int" line="92"/>
                        <declaration name="selPath" type="TreePath" line="93"/>
                        <scope line="94">
                            <scope line="95">
                                <declaration name="node" type="ClassTreeNode" line="96"/>
                                <scope line="99"/>
                            </scope>
                        </scope>
                    </method>
                </anonymous_class>
                <declaration name="ml" type="MouseListener" line="89"/>
                <declaration name="treeView" type="JScrollPane" line="109"/>
                <declaration name="listener" type="ClassTreeToolListener" line="113"/>
            </method>
            <class name="ClassTreeToolListener" line="120">
                <extends class="JDIAdapter"/>
                <comment line="124">
                    SessionListener                    
                </comment>
                <comment line="145">
                    JDIListener                    
                </comment>
                <comment line="173">
                    null for package                    
                </comment>
                <implements interface="JDIListener"/>
                <implements interface="SessionListener"/>
                <method name="sessionStart" type="void" line="126">
                    <params>
                        <param name="e" type="EventObject"/>
                    </params>
                    <comment line="128">
                        Get system classes and any others loaded before attaching.                        
                    </comment>
                    <comment line="134">
                        VM terminated unexpectedly.                        
                    </comment>
                    <comment line="136">
                        Ignore.  Should not happen.                        
                    </comment>
                    <scope line="128">
                        <scope line="129"/>
                    </scope>
                    <scope line="132"/>
                    <scope line="134"/>
                </method>
                <method name="sessionInterrupt" type="void" line="140">
                    <params>
                        <param name="e" type="EventObject"/>
                    </params>
                </method>
                <method name="sessionContinue" type="void" line="142">
                    <params>
                        <param name="e" type="EventObject"/>
                    </params>
                </method>
                <method name="classPrepare" type="void" line="147">
                    <params>
                        <param name="e" type="ClassPrepareEventSet"/>
                    </params>
                </method>
                <method name="classUnload" type="void" line="152">
                    <params>
                        <param name="e" type="ClassUnloadEventSet"/>
                    </params>
                </method>
                <method name="vmDisconnect" type="void" line="157">
                    <params>
                        <param name="e" type="VMDisconnectEventSet"/>
                    </params>
                    <comment line="159">
                        Clear contents of this view.                        
                    </comment>
                </method>
            </class>
            <method name="createClassTree" type="ClassTreeNode" line="165">
                <params>
                    <param name="label" type="String"/>
                </params>
            </method>
            <class name="ClassTreeNode" line="169">
                <extends class="DefaultMutableTreeNode"/>
                <comment line="124">
                    SessionListener                    
                </comment>
                <comment line="145">
                    JDIListener                    
                </comment>
                <comment line="173">
                    null for package                    
                </comment>
                <declaration name="name" type="String" line="171"/>
                <declaration name="refTy" type="ReferenceType" line="172"/>
                <method name="ClassTreeNode" type="constructor" line="174">
                    <params>
                        <param name="name" type="String"/>
                        <param name="refTy" type="ReferenceType"/>
                    </params>
                </method>
                <method name="toString" type="String" line="180"/>
                <method name="getReferenceType" type="ReferenceType" line="184"/>
                <method name="getReferenceTypeName" type="String" line="188"/>
                <method name="isPackage" type="boolean" line="192"/>
                <method name="isLeaf" type="boolean" line="197"/>
                <method name="addClass" type="void" line="201">
                    <params>
                        <param name="refTy" type="ReferenceType"/>
                    </params>
                </method>
                <method name="addClass" type="void" line="205">
                    <params>
                        <param name="className" type="String"/>
                        <param name="refTy" type="ReferenceType"/>
                    </params>
                    <scope line="206"/>
                    <declaration name="pos" type="int" line="209"/>
                    <scope line="210"/>
                    <scope line="212">
                        <declaration name="head" type="String" line="213"/>
                        <declaration name="tail" type="String" line="214"/>
                        <declaration name="child" type="ClassTreeNode" line="215"/>
                    </scope>
                </method>
                <method name="insertNode" type="ClassTreeNode" line="220">
                    <params>
                        <param name="name" type="String"/>
                        <param name="refTy" type="ReferenceType"/>
                    </params>
                    <comment line="226">
                        like-named node already exists                        
                    </comment>
                    <comment line="229">
                        insert new node before the child                        
                    </comment>
                    <comment line="235">
                        insert new node after last child                        
                    </comment>
                    <scope line="221">
                        <declaration name="child" type="ClassTreeNode" line="222"/>
                        <declaration name="cmp" type="int" line="223"/>
                        <scope line="224"/>
                        <scope line="227">
                            <declaration name="newChild" type="ClassTreeNode" line="229"/>
                        </scope>
                    </scope>
                    <declaration name="newChild" type="ClassTreeNode" line="235"/>
                </method>
                <method name="removeClass" type="void" line="240">
                    <params>
                        <param name="className" type="String"/>
                    </params>
                    <comment line="257">
                        Prune non-leaf nodes with no children.                        
                    </comment>
                    <scope line="241"/>
                    <declaration name="pos" type="int" line="244"/>
                    <scope line="245">
                        <declaration name="child" type="ClassTreeNode" line="246"/>
                        <scope line="247"/>
                    </scope>
                    <scope line="250">
                        <declaration name="head" type="String" line="251"/>
                        <declaration name="tail" type="String" line="252"/>
                        <declaration name="child" type="ClassTreeNode" line="253"/>
                        <scope line="255"/>
                    </scope>
                </method>
                <method name="findNode" type="ClassTreeNode" line="262">
                    <params>
                        <param name="name" type="String"/>
                    </params>
                    <comment line="270">
                        not found, since children are sorted                        
                    </comment>
                    <scope line="263">
                        <declaration name="child" type="ClassTreeNode" line="264"/>
                        <declaration name="cmp" type="int" line="265"/>
                        <scope line="266"/>
                        <scope line="268"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>