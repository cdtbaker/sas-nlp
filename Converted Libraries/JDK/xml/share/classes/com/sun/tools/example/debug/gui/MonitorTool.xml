<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.gui">
        <import package="javax.swing"/>
        <import package="javax.swing.event"/>
        <import package="java.awt"/>
        <import package="com.sun.jdi"/>
        <import package="com.sun.tools.example.debug.bdi"/>
        <import package="com.sun.tools.example.debug.expr.ExpressionParser"/>
        <import package="com.sun.tools.example.debug.expr.ParseException"/>
        <class name="MonitorTool" line="36">
            <extends class="JPanel"/>
            <declaration name="serialVersionUID" type="long" line="38"/>
            <declaration name="runtime" type="ExecutionManager" line="39"/>
            <declaration name="context" type="ContextManager" line="40"/>
            <declaration name="list" type="JList" line="42"/>
            <method name="MonitorTool" type="constructor" line="44">
                <params>
                    <param name="env" type="Environment"/>
                </params>
                <comment line="55">
                    Create listener.                    
                </comment>
                <comment line="58">
                    ### remove listeners on exit!                    
                </comment>
                <declaration name="listView" type="JScrollPane" line="52"/>
                <declaration name="listener" type="MonitorToolListener" line="56"/>
            </method>
            <class name="MonitorToolListener" line="61">
                <implements interface="ListSelectionListener"/>
                <method name="valueChanged" type="void" line="63">
                    <params>
                        <param name="e" type="ListSelectionEvent"/>
                    </params>
                    <declaration name="index" type="int" line="64"/>
                    <scope line="65"/>
                </method>
            </class>
            <method name="evaluate" type="Value" line="74">
                <params>
                    <param name="expr" type="String"/>
                </params>
                <anonymous_class line="76">
                    <method name="get" type="StackFrame" line="80">
                        <scope line="81"/>
                        <scope line="83"/>
                    </method>
                </anonymous_class>
                <declaration name="frameGetter" type="ExpressionParser.GetFrame" line="75"/>
            </method>
            <class name="MonitorRenderer" line="91">
                <extends class="DefaultListCellRenderer"/>
                <method name="getListCellRendererComponent" type="Component" line="98">
                    <params>
                        <param name="list" type="JList"/>
                        <param name="value" type="Object"/>
                        <param name="index" type="int"/>
                        <param name="isSelected" type="boolean"/>
                        <param name="cellHasFocus" type="boolean"/>
                    </params>
                    <comment line="100">
                        ### We should indicate the current thread independently of the                        
                    </comment>
                    <comment line="101">
                        ### selection, e.g., with an icon, because the user may change                        
                    </comment>
                    <comment line="102">
                        ### the selection graphically without affecting the current                        
                    </comment>
                    <comment line="103">
                        ### thread.                        
                    </comment>
                    <scope line="107"/>
                    <scope line="109">
                        <declaration name="expr" type="String" line="110"/>
                        <scope line="111">
                            <declaration name="result" type="Value" line="112"/>
                        </scope>
                        <scope line="114"/>
                        <scope line="116"/>
                        <scope line="118"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>