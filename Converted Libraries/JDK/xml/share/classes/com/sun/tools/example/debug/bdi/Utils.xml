<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.bdi">
        <import package="com.sun.jdi"/>
        <class name="Utils" line="30">
            <comment line="129">
                The next two methods are used by this class and by EventHandler
                 to print consistent locations and error messages.                
            </comment>
            <comment line="139">
                ### UNUSED.                
            </comment>
            <javadoc line="32">
                Return the thread status description.                
            </javadoc>
            <method name="getStatus" type="String" line="35">
                <params>
                    <param name="thr" type="ThreadReference"/>
                </params>
                <declaration name="status" type="int" line="36"/>
                <declaration name="result" type="String" line="37"/>
                <scope line="60"/>
            </method>
            <javadoc line="66">
                Return a description of an object.                
            </javadoc>
            <method name="description" type="String" line="69">
                <params>
                    <param name="ref" type="ObjectReference"/>
                </params>
                <comment line="71">
                    ### TODO use real id                    
                </comment>
                <declaration name="clazz" type="ReferenceType" line="70"/>
                <declaration name="id" type="long" line="71"/>
                <scope line="72"/>
                <scope line="74"/>
            </method>
            <javadoc line="79">
                Convert a long to a hexadecimal string.                
            </javadoc>
            <method name="toHex" type="String" line="82">
                <params>
                    <param name="n" type="long"/>
                </params>
                <comment line="86">
                    Store digits in reverse order.                    
                </comment>
                <comment line="93">
                    Now reverse the array.                    
                </comment>
                <declaration name="s1" type="char" line="83"/>
                <declaration name="s2" type="char" line="84"/>
                <declaration name="i" type="int" line="87"/>
                <scope line="88">
                    <declaration name="d" type="long" line="89"/>
                </scope>
                <declaration name="j" type="int" line="96"/>
                <scope line="97"/>
            </method>
            <javadoc line="103">
                Convert hexadecimal strings to longs.                
            </javadoc>
            <method name="fromHex" type="long" line="106">
                <params>
                    <param name="hexStr" type="String"/>
                </params>
                <declaration name="str" type="String" line="107"/>
                <scope line="109"/>
                <declaration name="ret" type="long" line="113"/>
                <scope line="114">
                    <declaration name="c" type="int" line="115"/>
                    <scope line="116"/>
                    <scope line="118"/>
                    <scope line="120"/>
                </scope>
            </method>
            <method name="locationString" type="String" line="132">
                <params>
                    <param name="loc" type="Location"/>
                </params>
            </method>
            <javadoc line="139">
                private String typedName(Method method) {
                  // TO DO: Use method.signature() instead of method.arguments() so that
                  // we get sensible results for classes without debugging info
                  StringBuffer buf = new StringBuffer();
                  buf.append(method.name());
                  buf.append(&quot;(&quot;);
                  Iterator it = method.arguments().iterator();
                  while (it.hasNext()) {
                  buf.append(((LocalVariable)it.next()).typeName());
                  if (it.hasNext()) {
                  buf.append(&quot;,&quot;);
                  }
                  }
                  buf.append(&quot;)&quot;);
                  return buf.toString();
                  }                
            </javadoc>
            <method name="isValidMethodName" type="boolean" line="158">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="isJavaIdentifier" type="boolean" line="164">
                <params>
                    <param name="s" type="String"/>
                </params>
                <scope line="165"/>
                <declaration name="cp" type="int" line="168"/>
                <scope line="169"/>
                <scope line="172">
                    <scope line="174"/>
                </scope>
            </method>
        </class>
    </source>