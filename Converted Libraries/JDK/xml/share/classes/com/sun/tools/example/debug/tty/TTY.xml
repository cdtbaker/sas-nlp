<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.tty">
        <import package="com.sun.jdi"/>
        <import package="com.sun.jdi.event"/>
        <import package="com.sun.jdi.request"/>
        <import package="com.sun.jdi.connect"/>
        <import package="java.util"/>
        <import package="java.io"/>
        <class name="TTY" line="36">
            <comment line="326">
                Look up the command string in commandList.
                 If found, return the index.
                 If not found, return index &lt; 0                
            </comment>
            <comment line="352">
                Return true if the command is OK when disconnected.                
            </comment>
            <comment line="362">
                Return true if the command is OK when readonly.                
            </comment>
            <comment line="576">
                Maintain a list of commands to execute each time the VM is suspended.                
            </comment>
            <implements interface="EventNotifier"/>
            <declaration name="handler" type="EventHandler" line="37"/>
            <declaration name="monitorCommands" type="List&lt;String&gt;" line="39"/>
            <javadoc line="39">
                List of Strings to execute at each stop.                
            </javadoc>
            <declaration name="monitorCount" type="int" line="43"/>
            <declaration name="progname" type="String" line="45"/>
            <javadoc line="45">
                The name of this tool.                
            </javadoc>
            <method name="vmStartEvent" type="void" line="51">
                <params>
                    <param name="se" type="VMStartEvent"/>
                </params>
                <comment line="53">
                    fetch output                    
                </comment>
            </method>
            <method name="vmDeathEvent" type="void" line="57">
                <params>
                    <param name="e" type="VMDeathEvent"/>
                </params>
            </method>
            <method name="vmDisconnectEvent" type="void" line="61">
                <params>
                    <param name="e" type="VMDisconnectEvent"/>
                </params>
            </method>
            <method name="threadStartEvent" type="void" line="65">
                <params>
                    <param name="e" type="ThreadStartEvent"/>
                </params>
            </method>
            <method name="threadDeathEvent" type="void" line="69">
                <params>
                    <param name="e" type="ThreadDeathEvent"/>
                </params>
            </method>
            <method name="classPrepareEvent" type="void" line="73">
                <params>
                    <param name="e" type="ClassPrepareEvent"/>
                </params>
            </method>
            <method name="classUnloadEvent" type="void" line="77">
                <params>
                    <param name="e" type="ClassUnloadEvent"/>
                </params>
            </method>
            <method name="breakpointEvent" type="void" line="81">
                <params>
                    <param name="be" type="BreakpointEvent"/>
                </params>
                <comment line="83">
                    fetch output                    
                </comment>
            </method>
            <method name="fieldWatchEvent" type="void" line="87">
                <params>
                    <param name="fwe" type="WatchpointEvent"/>
                </params>
                <comment line="91">
                    fetch output                    
                </comment>
                <declaration name="field" type="Field" line="88"/>
                <declaration name="obj" type="ObjectReference" line="89"/>
                <scope line="92"/>
                <scope line="97"/>
            </method>
            <method name="stepEvent" type="void" line="103">
                <params>
                    <param name="se" type="StepEvent"/>
                </params>
                <comment line="105">
                    fetch output                    
                </comment>
            </method>
            <method name="exceptionEvent" type="void" line="109">
                <params>
                    <param name="ee" type="ExceptionEvent"/>
                </params>
                <comment line="111">
                    fetch output                    
                </comment>
                <declaration name="catchLocation" type="Location" line="111"/>
                <scope line="112"/>
                <scope line="115"/>
            </method>
            <method name="methodEntryEvent" type="void" line="123">
                <params>
                    <param name="me" type="MethodEntryEvent"/>
                </params>
                <comment line="125">
                    fetch output                    
                </comment>
                <comment line="126">
                    These can be very numerous, so be as efficient as possible.
                     If we are stopping here, then we will see the normal location
                     info printed.                    
                </comment>
                <comment line="132">
                    We are stopping; the name will be shown by the normal mechanism                    
                </comment>
                <comment line="135">
                    We aren&apos;t stopping, show the name                    
                </comment>
                <scope line="130"/>
                <scope line="133"/>
            </method>
            <method name="methodExitEvent" type="boolean" line="141">
                <params>
                    <param name="me" type="MethodExitEvent"/>
                </params>
                <comment line="143">
                    fetch output                    
                </comment>
                <comment line="144">
                    These can be very numerous, so be as efficient as possible.                    
                </comment>
                <comment line="151">
                    Either we are not tracing a specific method, or we are
                     and we are exitting that method.                    
                </comment>
                <comment line="155">
                    We will be stopping here, so do a newline                    
                </comment>
                <comment line="165">
                    We won&apos;t be stopping here, so show the method name                    
                </comment>
                <comment line="170">
                    In case we want to have a one shot trace exit some day, this
                     code disables the request so we don&apos;t hit it again.                    
                </comment>
                <comment line="173">
                    This is a one shot deal; we don&apos;t want to stop
                     here the next time.                    
                </comment>
                <comment line="186">
                    We are tracing a specific method, and this isn&apos;t it.  Keep going.                    
                </comment>
                <declaration name="mmm" type="Method" line="146"/>
                <declaration name="meMethod" type="Method" line="147"/>
                <scope line="149">
                    <scope line="153"/>
                    <scope line="157"/>
                    <scope line="159"/>
                    <scope line="163"/>
                    <scope line="171">
                        <declaration name="erm" type="EventRequestManager" line="175"/>
                        <scope line="176">
                            <scope line="177"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="vmInterrupted" type="void" line="190">
                <comment line="192">
                    fetch output                    
                </comment>
                <comment line="196">
                    get rid of monitor number                    
                </comment>
                <scope line="193">
                    <declaration name="t" type="StringTokenizer" line="194"/>
                </scope>
            </method>
            <method name="receivedEvent" type="void" line="202">
                <params>
                    <param name="event" type="Event"/>
                </params>
            </method>
            <method name="printBaseLocation" type="void" line="205">
                <params>
                    <param name="threadName" type="String"/>
                    <param name="loc" type="Location"/>
                </params>
            </method>
            <method name="printCurrentLocation" type="void" line="211">
                <comment line="226">
                    Output the current source line, if possible                    
                </comment>
                <declaration name="threadInfo" type="ThreadInfo" line="212"/>
                <declaration name="frame" type="StackFrame" line="213"/>
                <scope line="214"/>
                <scope line="216"/>
                <scope line="220"/>
                <scope line="222">
                    <declaration name="loc" type="Location" line="223"/>
                    <scope line="226">
                        <declaration name="line" type="String" line="227"/>
                        <scope line="228"/>
                        <scope line="230"/>
                        <scope line="233"/>
                    </scope>
                </scope>
            </method>
            <method name="printLocationOfEvent" type="void" line="243">
                <params>
                    <param name="theEvent" type="LocatableEvent"/>
                </params>
            </method>
            <method name="help" type="void" line="247"/>
            <declaration name="commandList" type="String[][]" line="251"/>
            <method name="isCommand" type="int" line="330">
                <params>
                    <param name="key" type="String"/>
                </params>
                <comment line="332">
                    Reference: binarySearch() in java/util/Arrays.java
                               Adapted for use with String[][0].                    
                </comment>
                <comment line="346">
                    key found                    
                </comment>
                <comment line="349">
                    key not found.                    
                </comment>
                <declaration name="low" type="int" line="333"/>
                <declaration name="high" type="int" line="334"/>
                <scope line="335">
                    <declaration name="mid" type="int" line="336"/>
                    <declaration name="midVal" type="String" line="337"/>
                    <declaration name="compare" type="int" line="338"/>
                    <scope line="339"/>
                    <scope line="341"/>
                    <scope line="344"/>
                </scope>
            </method>
            <method name="isDisconnectCmd" type="boolean" line="354">
                <params>
                    <param name="ii" type="int"/>
                </params>
                <scope line="355"/>
            </method>
            <method name="isReadOnlyCmd" type="boolean" line="364">
                <params>
                    <param name="ii" type="int"/>
                </params>
                <scope line="365"/>
            </method>
            <method name="executeCommand" type="void" line="372">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="375">
                    Normally, prompt for the next command after this one is done                    
                </comment>
                <comment line="379">
                    Anything starting with # is discarded as a no-op or &apos;comment&apos;.                    
                </comment>
                <comment line="383">
                    Next check for an integer repetition prefix.  If found,
                     recursively execute cmd that number of times.                    
                </comment>
                <comment line="393">
                    Bypass the printPrompt() below.                    
                </comment>
                <comment line="400">
                    Check for an unknown command                    
                </comment>
                <comment line="418">
                    asynchronous command                    
                </comment>
                <comment line="421">
                    asynchronous command                    
                </comment>
                <comment line="424">
                    asynchronous command                    
                </comment>
                <comment line="427">
                    asynchronous command                    
                </comment>
                <comment line="484">
                    Fire up an event handler, if the connection was just
                     opened. Since this was done from the run command
                     we don&apos;t stop the VM on its VM start event (so
                     arg 2 is false).                    
                </comment>
                <comment line="507">
                    Undocumented command: useful for testing.                    
                </comment>
                <comment line="519">
                    asynchronous command                    
                </comment>
                <comment line="524">
                    asynchronous command                    
                </comment>
                <comment line="527">
                    asynchronous command                    
                </comment>
                <comment line="528">
                    Undocumented command: useful for testing.                    
                </comment>
                <comment line="530">
                    asynchronous command                    
                </comment>
                <comment line="531">
                    Undocumented command: useful for testing.                    
                </comment>
                <declaration name="cmd" type="String" line="373"/>
                <declaration name="showPrompt" type="boolean" line="375"/>
                <scope line="381">
                    <scope line="386">
                        <scope line="387">
                            <declaration name="repeat" type="int" line="388"/>
                            <declaration name="subcom" type="String" line="389"/>
                            <scope line="390"/>
                        </scope>
                        <scope line="394"/>
                    </scope>
                    <scope line="397">
                        <declaration name="commandNumber" type="int" line="398"/>
                        <scope line="402"/>
                        <scope line="404"/>
                        <scope line="408"/>
                        <scope line="411">
                            <declaration name="evaluator" type="Commands" line="413"/>
                            <scope line="414">
                                <scope line="415"/>
                                <scope line="418"/>
                                <scope line="421"/>
                                <scope line="424"/>
                                <scope line="427"/>
                                <scope line="429"/>
                                <scope line="431"/>
                                <scope line="433"/>
                                <scope line="435"/>
                                <scope line="437"/>
                                <scope line="439"/>
                                <scope line="441"/>
                                <scope line="443"/>
                                <scope line="445"/>
                                <scope line="447"/>
                                <scope line="449"/>
                                <scope line="451"/>
                                <scope line="453"/>
                                <scope line="455"/>
                                <scope line="457"/>
                                <scope line="459"/>
                                <scope line="461"/>
                                <scope line="463"/>
                                <scope line="465"/>
                                <scope line="467"/>
                                <scope line="469"/>
                                <scope line="471"/>
                                <scope line="473"/>
                                <scope line="475"/>
                                <scope line="477"/>
                                <scope line="479"/>
                                <scope line="481">
                                    <scope line="489"/>
                                </scope>
                                <scope line="492"/>
                                <scope line="494"/>
                                <scope line="496"/>
                                <scope line="498"/>
                                <scope line="500"/>
                                <scope line="502"/>
                                <scope line="504"/>
                                <scope line="506"/>
                                <scope line="508"/>
                                <scope line="510"/>
                                <scope line="512"/>
                                <scope line="514"/>
                                <scope line="516"/>
                                <scope line="519"/>
                                <scope line="521"/>
                                <scope line="524"/>
                                <scope line="527"/>
                                <scope line="530"/>
                                <scope line="532"/>
                                <scope line="534"/>
                                <scope line="536"/>
                                <scope line="538"/>
                                <scope line="540"/>
                                <scope line="542"/>
                                <scope line="544"/>
                                <scope line="546"/>
                                <scope line="549">
                                    <scope line="550"/>
                                </scope>
                                <scope line="554"/>
                            </scope>
                            <scope line="557"/>
                            <scope line="559"/>
                            <scope line="561"/>
                            <scope line="564"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="570"/>
            </method>
            <method name="monitorCommand" type="void" line="578">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <comment line="585">
                    Special case: use printDirectln()                    
                </comment>
                <scope line="579"/>
                <scope line="582">
                    <scope line="583"/>
                </scope>
            </method>
            <method name="unmonitorCommand" type="void" line="589">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="590">
                    <declaration name="monTok" type="String" line="591"/>
                    <declaration name="monNum" type="int" line="592"/>
                    <scope line="593"/>
                    <scope line="595"/>
                    <declaration name="monStr" type="String" line="599"/>
                    <scope line="600">
                        <declaration name="ct" type="StringTokenizer" line="601"/>
                        <scope line="602"/>
                    </scope>
                </scope>
                <scope line="609"/>
            </method>
            <method name="readCommand" type="void" line="615">
                <params>
                    <param name="t" type="StringTokenizer"/>
                </params>
                <scope line="616">
                    <declaration name="cmdfname" type="String" line="617"/>
                    <scope line="618"/>
                </scope>
                <scope line="621"/>
            </method>
            <javadoc line="626">
                Read and execute a command file.  Return true if the file was read
                  else false;                
            </javadoc>
            <method name="readCommandFile" type="boolean" line="630">
                <params>
                    <param name="f" type="File"/>
                </params>
                <comment line="635">
                    Process initial commands.                    
                </comment>
                <declaration name="inFile" type="BufferedReader" line="631"/>
                <scope line="632">
                    <scope line="633">
                        <declaration name="ln" type="String" line="637"/>
                        <scope line="638">
                            <declaration name="t" type="StringTokenizer" line="639"/>
                            <scope line="640"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="645"/>
                <scope line="646">
                    <scope line="647">
                        <scope line="648"/>
                        <scope line="650"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="657">
                Try to read commands from dir/fname, unless
                  the canonical path passed in is the same as that
                  for dir/fname.
                  Return null if that file doesn&apos;t exist,
                  else return the canonical path of that file.                
            </javadoc>
            <method name="readStartupCommandFile" type="String" line="664">
                <params>
                    <param name="dir" type="String"/>
                    <param name="fname" type="String"/>
                    <param name="canonPath" type="String"/>
                </params>
                <declaration name="dotInitFile" type="File" line="665"/>
                <scope line="666"/>
                <declaration name="myCanonFile" type="String" line="670"/>
                <scope line="671"/>
                <scope line="673"/>
                <scope line="677">
                    <scope line="678"/>
                </scope>
            </method>
            <method name="TTY" type="constructor" line="686">
                <comment line="692">
                    Connection opened on startup. Start event handler
                     immediately, telling it (through arg 2) to stop on the
                     VM start event.                    
                </comment>
                <comment line="707">
                    Read start up files.  This mimics the behavior
                     of gdb which will read both ~.gdbinit and then
                     ..gdbinit if they exist.  We have the twist that
                     we allow two different names, so we do this:
                      if ~jdb.ini exists,
                          read it
                      else if ~.jdbrc exists,
                          read it
                    
                      if .jdb.ini exists,
                          if it hasn&apos;t been read, read it
                          It could have been read above because ~ == .
                          or because of symlinks, ...
                      else if .jdbrx exists
                          if it hasn&apos;t been read, read it                    
                </comment>
                <comment line="729">
                    Doesn&apos;t exist, try alternate spelling                    
                </comment>
                <comment line="735">
                    Doesn&apos;t exist, try alternate spelling                    
                </comment>
                <comment line="740">
                    Process interactive commands.                    
                </comment>
                <comment line="751">
                    Special case: use printDirectln()                    
                </comment>
                <scope line="690"/>
                <scope line="698">
                    <declaration name="in" type="BufferedReader" line="699"/>
                    <declaration name="lastLine" type="String" line="702"/>
                    <scope line="723">
                        <declaration name="userHome" type="String" line="724"/>
                        <declaration name="canonPath" type="String" line="725"/>
                        <scope line="727"/>
                        <declaration name="userDir" type="String" line="732"/>
                        <scope line="733"/>
                    </scope>
                    <scope line="741">
                        <declaration name="ln" type="String" line="742"/>
                        <scope line="743"/>
                        <scope line="748"/>
                        <declaration name="t" type="StringTokenizer" line="753"/>
                        <scope line="754"/>
                        <scope line="757"/>
                    </scope>
                </scope>
                <scope line="761"/>
            </method>
            <method name="usage" type="void" line="766"/>
            <method name="usageError" type="void" line="772">
                <params>
                    <param name="messageKey" type="String"/>
                </params>
            </method>
            <method name="usageError" type="void" line="778">
                <params>
                    <param name="messageKey" type="String"/>
                    <param name="argument" type="String"/>
                </params>
            </method>
            <method name="supportsSharedMemory" type="boolean" line="784">
                <scope line="786">
                    <scope line="787"/>
                    <scope line="790"/>
                </scope>
            </method>
            <method name="addressToSocketArgs" type="String" line="797">
                <params>
                    <param name="address" type="String"/>
                </params>
                <declaration name="index" type="int" line="798"/>
                <scope line="799">
                    <declaration name="hostString" type="String" line="800"/>
                    <declaration name="portString" type="String" line="801"/>
                </scope>
                <scope line="803"/>
            </method>
            <method name="hasWhitespace" type="boolean" line="808">
                <params>
                    <param name="string" type="String"/>
                </params>
                <declaration name="length" type="int" line="809"/>
                <scope line="810">
                    <scope line="811"/>
                </scope>
            </method>
            <method name="addArgument" type="String" line="818">
                <params>
                    <param name="string" type="String"/>
                    <param name="argument" type="String"/>
                </params>
                <comment line="821">
                    Quotes were stripped out for this argument, add &apos;em back.                    
                </comment>
                <scope line="819">
                    <declaration name="buffer" type="StringBuffer" line="821"/>
                    <scope line="823">
                        <declaration name="c" type="char" line="824"/>
                        <scope line="825"/>
                    </scope>
                </scope>
                <scope line="832"/>
            </method>
            <method name="main" type="void" line="837">
                <params>
                    <param name="argv" type="String"/>
                </params>
                <comment line="870">
                    Standard VM options passed on                    
                </comment>
                <comment line="871">
                    -v[:...]                    
                </comment>
                <comment line="872">
                    -verbose[:...]                    
                </comment>
                <comment line="874">
                    -classpath handled below
                     NonStandard options passed on                    
                </comment>
                <comment line="877">
                    Old-style options (These should remain in place as long as
                      the standard VM accepts them)                    
                </comment>
                <comment line="891">
                    -client must be the first one                    
                </comment>
                <comment line="894">
                    -server must be the first one                    
                </comment>
                <comment line="920">
                    -attach is shorthand for one of the reference implementation&apos;s
                     attaching connectors. Use the shared memory attach if it&apos;s
                     available; otherwise, use sockets. Build a connect
                     specification string based on this decision.                    
                </comment>
                <comment line="947">
                    -listen[any] is shorthand for one of the reference implementation&apos;s
                     listening connectors. Use the shared memory listen if it&apos;s
                     available; otherwise, use sockets. Build a connect
                     specification string based on this decision.                    
                </comment>
                <comment line="971">
                    -connect allows the user to pick the connector
                     used in bringing up the target VM. This allows
                     use of connectors other than those in the reference
                     implementation.                    
                </comment>
                <comment line="997">
                    Everything from here is part of the command line                    
                </comment>
                <comment line="1006">
                    Unless otherwise specified, set the default connect spec.                    
                </comment>
                <comment line="1010">
                    Here are examples of jdb command lines and how the options
                     are interpreted as arguments to the program being debugged.
                     arg1       arg2
                     ----       ----
                     jdb hello a b       a          b
                     jdb hello &quot;a b&quot;     a b
                     jdb hello a,b       a,b
                     jdb hello a, b      a,         b
                     jdb hello &quot;a, b&quot;    a, b
                     jdb -connect &quot;com.sun.jdi.CommandLineLaunch:main=hello  a,b&quot;   illegal
                     jdb -connect  com.sun.jdi.CommandLineLaunch:main=hello &quot;a,b&quot;   illegal
                     jdb -connect &apos;com.sun.jdi.CommandLineLaunch:main=hello &quot;a,b&quot;&apos;  arg1 = a,b
                     jdb -connect &apos;com.sun.jdi.CommandLineLaunch:main=hello &quot;a b&quot;&apos;  arg1 = a b
                     jdb -connect &apos;com.sun.jdi.CommandLineLaunch:main=hello  a b&apos;   arg1 = a  arg2 = b
                     jdb -connect &apos;com.sun.jdi.CommandLineLaunch:main=hello &quot;a,&quot; b&apos; arg1 = a, arg2 = b                    
                </comment>
                <comment line="1030">
                    (Bug ID 4285874)                    
                </comment>
                <comment line="1056">
                    (Bug ID 4285874)                    
                </comment>
                <declaration name="cmdLine" type="String" line="838"/>
                <declaration name="javaArgs" type="String" line="839"/>
                <declaration name="traceFlags" type="int" line="840"/>
                <declaration name="launchImmediately" type="boolean" line="841"/>
                <declaration name="connectSpec" type="String" line="842"/>
                <scope line="848">
                    <declaration name="token" type="String" line="849"/>
                    <scope line="850">
                        <scope line="852"/>
                        <scope line="854">
                            <declaration name="flagStr" type="String" line="855"/>
                            <scope line="856"/>
                            <scope line="859"/>
                        </scope>
                    </scope>
                    <scope line="865"/>
                    <scope line="883"/>
                    <scope line="886"/>
                    <scope line="889"/>
                    <scope line="892"/>
                    <scope line="895">
                        <scope line="896"/>
                    </scope>
                    <scope line="901">
                        <scope line="902"/>
                    </scope>
                    <scope line="908">
                        <scope line="909"/>
                        <scope line="913"/>
                        <declaration name="address" type="String" line="917"/>
                        <scope line="925"/>
                        <scope line="928">
                            <declaration name="suboptions" type="String" line="929"/>
                        </scope>
                    </scope>
                    <scope line="932">
                        <scope line="933"/>
                        <declaration name="address" type="String" line="937"/>
                        <scope line="938">
                            <scope line="939"/>
                        </scope>
                        <scope line="952">
                            <scope line="954"/>
                        </scope>
                        <scope line="957">
                            <scope line="959"/>
                        </scope>
                    </scope>
                    <scope line="963"/>
                    <scope line="965">
                        <declaration name="evaluator" type="Commands" line="966"/>
                    </scope>
                    <scope line="969">
                        <scope line="976"/>
                        <scope line="980"/>
                    </scope>
                    <scope line="985"/>
                    <scope line="987">
                        <declaration name="evaluator" type="Commands" line="988"/>
                    </scope>
                    <scope line="992"/>
                    <scope line="995">
                        <scope line="998"/>
                    </scope>
                </scope>
                <scope line="1026"/>
                <scope line="1028"/>
                <scope line="1035">
                    <scope line="1036"/>
                </scope>
                <scope line="1044">
                    <scope line="1045"/>
                </scope>
                <scope line="1053">
                    <scope line="1054"/>
                </scope>
                <scope line="1059"/>
            </method>
        </class>
    </source>