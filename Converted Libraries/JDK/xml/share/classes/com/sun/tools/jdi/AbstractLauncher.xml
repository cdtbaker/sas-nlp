<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.jdi">
        <import package="com.sun.tools.jdi"/>
        <import package="com.sun.jdi.connect"/>
        <import package="com.sun.jdi.connect.spi"/>
        <import package="com.sun.jdi"/>
        <import package="java.util.Map"/>
        <import package="java.util.StringTokenizer"/>
        <import package="java.util.List"/>
        <import package="java.util.ArrayList"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InterruptedIOException"/>
        <class name="AbstractLauncher" line="40">
            <extends class="ConnectorImpl"/>
            <implements interface="LaunchingConnector"/>
            <method name="launch" type="VirtualMachine" line="42"/>
            <method name="name" type="String" line="47"/>
            <method name="description" type="String" line="48"/>
            <declaration name="grp" type="ThreadGroup" line="50"/>
            <method name="AbstractLauncher" type="constructor" line="52">
                <declaration name="parent" type="ThreadGroup" line="56"/>
                <scope line="57"/>
            </method>
            <method name="tokenizeCommand" type="String[]" line="62">
                <params>
                    <param name="command" type="String"/>
                    <param name="quote" type="char"/>
                </params>
                <comment line="63">
                    easier to deal with                    
                </comment>
                <comment line="65">
                    Tokenize the command, respecting the given quote character.                    
                </comment>
                <comment line="98">
                    continue                    
                </comment>
                <comment line="105">
                    Add final token.                    
                </comment>
                <comment line="112">
                    An unclosed quote at the end of the command. Do an
                     implicit end quote.                    
                </comment>
                <declaration name="quoteStr" type="String" line="63"/>
                <declaration name="tokenizer" type="StringTokenizer" line="68"/>
                <declaration name="quoted" type="String" line="71"/>
                <declaration name="pending" type="String" line="72"/>
                <declaration name="tokenList" type="List&lt;String&gt;" line="73"/>
                <scope line="74">
                    <declaration name="token" type="String" line="75"/>
                    <scope line="76">
                        <scope line="77"/>
                        <scope line="80"/>
                    </scope>
                    <scope line="83">
                        <scope line="84"/>
                        <scope line="87"/>
                        <scope line="89"/>
                    </scope>
                    <scope line="93">
                        <scope line="94"/>
                        <scope line="97"/>
                        <scope line="99"/>
                    </scope>
                </scope>
                <scope line="108"/>
                <scope line="116"/>
                <declaration name="tokenArray" type="String[]" line="120"/>
                <scope line="121"/>
            </method>
            <method name="launch" type="VirtualMachine" line="130">
                <params>
                    <param name="commandArray" type="String[]"/>
                    <param name="address" type="String"/>
                    <param name="listenKey" type="TransportService.ListenKey"/>
                    <param name="ts" type="TransportService"/>
                </params>
                <declaration name="helper" type="Helper" line="131"/>
                <declaration name="manager" type="VirtualMachineManager" line="134"/>
            </method>
            <class name="Helper" line="141">
                <javadoc line="141">
                    This class simply provides a context for a single launch and
                      accept. It provides instance fields that can be used by
                      all threads involved. This stuff can&apos;t be in the Connector proper
                      because the connector is is a singleton and not specific to any
                      one launch.                    
                </javadoc>
                <declaration name="address" type="String" line="149"/>
                <declaration name="listenKey" type="TransportService.ListenKey" line="150"/>
                <declaration name="ts" type="TransportService" line="151"/>
                <declaration name="commandArray" type="String[]" line="152"/>
                <declaration name="process" type="Process" line="153"/>
                <declaration name="connection" type="Connection" line="154"/>
                <declaration name="acceptException" type="IOException" line="155"/>
                <declaration name="exited" type="boolean" line="156"/>
                <method name="Helper" type="constructor" line="159">
                    <params>
                        <param name="commandArray" type="String[]"/>
                        <param name="address" type="String"/>
                        <param name="listenKey" type="TransportService.ListenKey"/>
                        <param name="ts" type="TransportService"/>
                    </params>
                </method>
                <method name="commandString" type="String" line="166">
                    <declaration name="str" type="String" line="167"/>
                    <scope line="168">
                        <scope line="169"/>
                    </scope>
                </method>
                <method name="launchAndAccept" type="void" line="178">
                    <comment line="196">
                        Rethrow the exception in this thread                        
                    </comment>
                    <declaration name="acceptingThread" type="Thread" line="182"/>
                    <declaration name="monitoringThread" type="Thread" line="183"/>
                    <scope line="184">
                        <scope line="187"/>
                        <scope line="191"/>
                        <scope line="195"/>
                    </scope>
                    <scope line="199"/>
                    <scope line="201"/>
                </method>
                <method name="process" type="Process" line="207"/>
                <method name="connection" type="Connection" line="211"/>
                <method name="notifyOfExit" type="void" line="215"/>
                <method name="notifyOfConnection" type="void" line="220">
                    <params>
                        <param name="connection" type="Connection"/>
                    </params>
                </method>
                <method name="notifyOfAcceptException" type="void" line="225">
                    <params>
                        <param name="acceptException" type="IOException"/>
                    </params>
                </method>
                <method name="monitorTarget" type="Thread" line="230">
                    <comment line="236">
                        Notify waiting thread of VM error termination                        
                    </comment>
                    <comment line="241">
                        Connection has been established, stop monitoring                        
                    </comment>
                    <anonymous_class line="232">
                        <method name="run" type="void" line="233">
                            <comment line="236">
                                Notify waiting thread of VM error termination                                
                            </comment>
                            <comment line="241">
                                Connection has been established, stop monitoring                                
                            </comment>
                            <scope line="234"/>
                            <scope line="240"/>
                        </method>
                    </anonymous_class>
                    <declaration name="thread" type="Thread" line="231"/>
                </method>
                <method name="acceptConnection" type="Thread" line="250">
                    <comment line="256">
                        Notify waiting thread of connection                        
                    </comment>
                    <comment line="261">
                        VM terminated, stop accepting                        
                    </comment>
                    <comment line="263">
                        Report any other exception to waiting thread                        
                    </comment>
                    <anonymous_class line="252">
                        <method name="run" type="void" line="253">
                            <comment line="256">
                                Notify waiting thread of connection                                
                            </comment>
                            <comment line="261">
                                VM terminated, stop accepting                                
                            </comment>
                            <comment line="263">
                                Report any other exception to waiting thread                                
                            </comment>
                            <scope line="254">
                                <declaration name="connection" type="Connection" line="255"/>
                            </scope>
                            <scope line="260"/>
                            <scope line="262"/>
                        </method>
                    </anonymous_class>
                    <declaration name="thread" type="Thread" line="251"/>
                </method>
            </class>
        </class>
    </source>