<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.jdi">
        <import package="com.sun.jdi"/>
        <import package="com.sun.jdi.event"/>
        <import package="java.util"/>
        <class name="InternalEventHandler" line="32">
            <implements interface="Runnable"/>
            <declaration name="queue" type="EventQueueImpl" line="34"/>
            <declaration name="vm" type="VirtualMachineImpl" line="35"/>
            <method name="InternalEventHandler" type="constructor" line="38">
                <params>
                    <param name="vm" type="VirtualMachineImpl"/>
                    <param name="queue" type="EventQueueImpl"/>
                </params>
                <declaration name="thread" type="Thread" line="41"/>
            </method>
            <method name="run" type="void" line="47">
                <comment line="79">
                    Handle exceptions that can occur in normal operation
                     but which can&apos;t be accounted for by event builder
                     methods. The thread should not be terminated if they
                     occur.
                    
                     TO DO: We need a better way to log these conditions.                    
                </comment>
                <comment line="92">
                    If any of these exceptions below occurs, there is some
                     sort of programming error that should be addressed in
                     the JDI implemementation. However, it would cripple
                     the implementation if we let this thread die due to
                     one of them. So, a notification of the exception is
                     given and we attempt to continue.                    
                </comment>
                <comment line="106">
                    should we really die here                    
                </comment>
                <comment line="107">
                    time to die                    
                </comment>
                <scope line="48"/>
                <scope line="51">
                    <scope line="52">
                        <scope line="53">
                            <declaration name="eventSet" type="EventSet" line="54"/>
                            <declaration name="it" type="EventIterator" line="55"/>
                            <scope line="56">
                                <declaration name="event" type="Event" line="57"/>
                                <scope line="58">
                                    <declaration name="cuEvent" type="ClassUnloadEvent" line="59"/>
                                    <scope line="62"/>
                                </scope>
                                <scope line="66">
                                    <declaration name="cpEvent" type="ClassPrepareEvent" line="67"/>
                                    <scope line="71"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="87"/>
                        <scope line="89"/>
                        <scope line="100"/>
                        <scope line="102"/>
                    </scope>
                </scope>
                <scope line="106"/>
                <scope line="107"/>
                <scope line="109"/>
            </method>
        </class>
    </source>