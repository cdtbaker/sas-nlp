<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.expr">
        <class name="TokenMgrError" line="2">
            <extends class="Error"/>
            <declaration name="serialVersionUID" type="long" line="3"/>
            <declaration name="LEXICAL_ERROR" type="int" line="4"/>
            <javadoc line="4">
                Lexical error occured.                
            </javadoc>
            <declaration name="STATIC_LEXER_ERROR" type="int" line="8"/>
            <javadoc line="8">
                An attempt wass made to create a second instance of a static token manager.                
            </javadoc>
            <declaration name="INVALID_LEXICAL_STATE" type="int" line="12"/>
            <javadoc line="12">
                Tried to change to an invalid lexical state.                
            </javadoc>
            <declaration name="LOOP_DETECTED" type="int" line="16"/>
            <javadoc line="16">
                Detected (and bailed out of) an infinite loop in the token manager.                
            </javadoc>
            <declaration name="errorCode" type="int" line="20"/>
            <javadoc line="20">
                Indicates the reason why the exception is thrown. It will have
                  one of the above 4 values.                
            </javadoc>
            <javadoc line="25">
                Replaces unprintable characters by their espaced (or unicode escaped)
                  equivalents in the given string                
            </javadoc>
            <method name="addEscapes" type="String" line="29">
                <params>
                    <param name="str" type="String"/>
                </params>
                <declaration name="retval" type="StringBuffer" line="30"/>
                <declaration name="ch" type="char" line="31"/>
                <scope line="32">
                    <scope line="61">
                        <declaration name="s" type="String" line="62"/>
                    </scope>
                    <scope line="65"/>
                </scope>
            </method>
            <javadoc line="73">
                Returns a detailed message for the Error when it is thrown by the
                  token manager to indicate a lexical error.
                  Parameters :
                  EOFSeen     : indicates if EOF caused the lexicl error
                  curLexState : lexical state in which this error occured
                  errorLine   : line number when the error occured
                  errorColumn : column number when the error occured
                  errorAfter  : prefix that was seen before this error occured
                  curchar     : the offending character
                  Note: You can customize the lexical error message by modifying this method.                
            </javadoc>
            <method name="LexicalError" type="String" line="85">
                <params>
                    <param name="EOFSeen" type="boolean"/>
                    <param name="lexState" type="int"/>
                    <param name="errorLine" type="int"/>
                    <param name="errorColumn" type="int"/>
                    <param name="errorAfter" type="String"/>
                    <param name="curChar" type="char"/>
                </params>
            </method>
            <javadoc line="88">
                You can also modify the body of this method to customize your error messages.
                  For example, cases like LOOP_DETECTED and INVALID_LEXICAL_STATE are not
                  of end-users concern, so you can return something like :
                  &quot;Internal Error : Please file a bug report .... &quot;
                  from this method for such cases in the release version of your parser.                
            </javadoc>
            <method name="getMessage" type="String" line="95"/>
            <method name="TokenMgrError" type="constructor" line="98"/>
            <method name="TokenMgrError" type="constructor" line="100">
                <params>
                    <param name="message" type="String"/>
                    <param name="reason" type="int"/>
                </params>
            </method>
            <method name="TokenMgrError" type="constructor" line="104">
                <params>
                    <param name="EOFSeen" type="boolean"/>
                    <param name="lexState" type="int"/>
                    <param name="errorLine" type="int"/>
                    <param name="errorColumn" type="int"/>
                    <param name="errorAfter" type="String"/>
                    <param name="curChar" type="char"/>
                    <param name="reason" type="int"/>
                </params>
            </method>
        </class>
    </source>