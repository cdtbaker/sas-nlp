<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.jconsole">
        <import package="javax.management.MBeanServerConnection"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="javax.swing.event.SwingPropertyChangeSupport"/>
        <interface name="JConsoleContext">
            <javadoc line="32">
                {@code JConsoleContext} represents a JConsole connection to a target
                  application.
                  &lt;p&gt;{@code JConsoleContext} notifies any {@code PropertyChangeListeners}about the {@linkplain #CONNECTION_STATE_PROPERTY &lt;i&gt;ConnectionState&lt;/i&gt;}property change to {@link ConnectionState#CONNECTED CONNECTED} and{@link ConnectionState#DISCONNECTED DISCONNECTED}.
                  The {@code JConsoleContext} instance will be the source for
                  any generated events.
                  &lt;p&gt;                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="CONNECTION_STATE_PROPERTY" type="String" line="47"/>
            <javadoc line="47">
                The {@link ConnectionState ConnectionState} bound property name.                
            </javadoc>
            <javadoc line="52">
                Values for the {@linkplain #CONNECTION_STATE_PROPERTY&lt;i&gt;ConnectionState&lt;/i&gt;} bound property.                
            </javadoc>
            <javadoc line="57">
                The connection has been successfully established.                
            </javadoc>
            <javadoc line="61">
                No connection present.                
            </javadoc>
            <javadoc line="65">
                The connection is being attempted.                
            </javadoc>
            <method name="getMBeanServerConnection" type="MBeanServerConnection" line="71"/>
            <javadoc line="71">
                Returns the {@link MBeanServerConnection MBeanServerConnection} for the
                  connection to an application.  The returned{@code MBeanServerConnection} object becomes invalid when
                  the connection state is changed to the{@link ConnectionState#DISCONNECTED DISCONNECTED} state.                
                <return>
                    the {@code MBeanServerConnection} for the
                      connection to an application.                    
                </return>
            </javadoc>
            <method name="getConnectionState" type="ConnectionState" line="83"/>
            <javadoc line="83">
                Returns the current connection state.                
                <return>
                    the current connection state.                    
                </return>
            </javadoc>
            <method name="addPropertyChangeListener" type="void" line="89"/>
            <javadoc line="89">
                Add a {@link java.beans.PropertyChangeListener PropertyChangeListener}to the listener list.
                  The listener is registered for all properties.
                  The same listener object may be added more than once, and will be called
                  as many times as it is added.
                  If {@code listener} is {@code null}, no exception is thrown and
                  no action is taken.                
                <param>
                    listener  The {@code PropertyChangeListener} to be added                    
                </param>
            </javadoc>
            <method name="removePropertyChangeListener" type="void" line="102"/>
            <javadoc line="102">
                Removes a {@link java.beans.PropertyChangeListener PropertyChangeListener}from the listener list. This
                  removes a {@code PropertyChangeListener} that was registered for all
                  properties. If {@code listener} was added more than once to the same
                  event source, it will be notified one less time after being removed. If{@code listener} is {@code null}, or was never added, no exception is
                  thrown and no action is taken.                
                <param>
                    listener the {@code PropertyChangeListener} to be removed                    
                </param>
            </javadoc>
        </interface>
    </source>