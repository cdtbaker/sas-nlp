<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.bdi">
        <import package="com.sun.jdi"/>
        <import package="com.sun.jdi.connect.LaunchingConnector"/>
        <import package="com.sun.jdi.connect.Connector"/>
        <import package="com.sun.jdi.connect.VMStartException"/>
        <import package="com.sun.jdi.connect.IllegalConnectorArgumentsException"/>
        <import package="java.io"/>
        <import package="java.util.Map"/>
        <import package="javax.swing.SwingUtilities"/>
        <class name="ChildSession" line="10">
            <extends class="Session"/>
            <declaration name="process" type="Process" line="11"/>
            <declaration name="in" type="PrintWriter" line="12"/>
            <declaration name="out" type="BufferedReader" line="13"/>
            <declaration name="err" type="BufferedReader" line="14"/>
            <declaration name="input" type="InputListener" line="15"/>
            <declaration name="output" type="OutputListener" line="16"/>
            <declaration name="error" type="OutputListener" line="17"/>
            <method name="ChildSession" type="constructor" line="18">
                <params>
                    <param name="runtime" type="ExecutionManager"/>
                    <param name="userVMArgs" type="String"/>
                    <param name="cmdLine" type="String"/>
                    <param name="input" type="InputListener"/>
                    <param name="output" type="OutputListener"/>
                    <param name="error" type="OutputListener"/>
                    <param name="diagnostics" type="OutputListener"/>
                </params>
            </method>
            <method name="ChildSession" type="constructor" line="21">
                <params>
                    <param name="runtime" type="ExecutionManager"/>
                    <param name="connector" type="LaunchingConnector"/>
                    <param name="arguments" type="Map<String,Connector.Argument>"/>
                    <param name="input" type="InputListener"/>
                    <param name="output" type="OutputListener"/>
                    <param name="error" type="OutputListener"/>
                    <param name="diagnostics" type="OutputListener"/>
                </params>
            </method>
            <method name="ChildSession" type="constructor" line="24">
                <params>
                    <param name="runtime" type="ExecutionManager"/>
                    <param name="vm" type="VirtualMachine"/>
                    <param name="input" type="InputListener"/>
                    <param name="output" type="OutputListener"/>
                    <param name="error" type="OutputListener"/>
                    <param name="diagnostics" type="OutputListener"/>
                </params>
            </method>
            <method name="attach" type="boolean" line="30">
                <scope line="31"/>
                <declaration name="outputReader" type="OutputReader" line="35"/>
                <declaration name="errorReader" type="OutputReader" line="38"/>
                <declaration name="inputWriter" type="InputWriter" line="41"/>
                <scope line="44">
                    <scope line="45"/>
                </scope>
            </method>
            <method name="detach" type="void" line="53">
                <scope line="55"/>
            </method>
            <javadoc line="60">
                Launch child java interpreter, return host:port                
            </javadoc>
            <method name="dumpStream" type="void" line="63">
                <params>
                    <param name="diagnostics" type="OutputListener"/>
                    <param name="stream" type="InputStream"/>
                </params>
                <declaration name="in" type="BufferedReader" line="64"/>
                <declaration name="line" type="String" line="65"/>
                <scope line="66"/>
            </method>
            <method name="dumpFailedLaunchInfo" type="void" line="70">
                <params>
                    <param name="diagnostics" type="OutputListener"/>
                    <param name="process" type="Process"/>
                </params>
                <scope line="71"/>
                <scope line="75"/>
            </method>
            <method name="getVM" type="VirtualMachine" line="79">
                <params>
                    <param name="diagnostics" type="OutputListener"/>
                    <param name="userVMArgs" type="String"/>
                    <param name="cmdLine" type="String"/>
                </params>
                <declaration name="manager" type="VirtualMachineManager" line="80"/>
                <declaration name="connector" type="LaunchingConnector" line="81"/>
                <declaration name="arguments" type="Map&lt;String,Connector.Argument&gt;" line="82"/>
            </method>
            <method name="generalGetVM" type="VirtualMachine" line="87">
                <params>
                    <param name="diagnostics" type="OutputListener"/>
                    <param name="connector" type="LaunchingConnector"/>
                    <param name="arguments" type="Map<String,Connector.Argument>"/>
                </params>
                <declaration name="vm" type="VirtualMachine" line="88"/>
                <scope line="89"/>
                <scope line="93"/>
                <scope line="96"/>
                <scope line="99"/>
            </method>
            <method name="connectToVMProcess" type="boolean" line="105">
                <scope line="106"/>
            </method>
            <class name="OutputReader" line="115">
                <extends class="Thread"/>
                <javadoc line="115">
                    Threads to handle application input/output.                    
                </javadoc>
                <declaration name="streamName" type="String" line="119"/>
                <declaration name="stream" type="BufferedReader" line="120"/>
                <declaration name="output" type="OutputListener" line="121"/>
                <declaration name="diagnostics" type="OutputListener" line="122"/>
                <declaration name="running" type="boolean" line="123"/>
                <declaration name="buffer" type="char[]" line="124"/>
                <method name="OutputReader" type="constructor" line="125">
                    <params>
                        <param name="threadName" type="String"/>
                        <param name="streamName" type="String"/>
                        <param name="stream" type="BufferedReader"/>
                        <param name="output" type="OutputListener"/>
                        <param name="diagnostics" type="OutputListener"/>
                    </params>
                </method>
                <method name="run" type="void" line="132">
                    <scope line="133">
                        <declaration name="count" type="int" line="134"/>
                        <scope line="135">
                            <scope line="136">
                                <declaration name="chars" type="String" line="137"/>
                                <anonymous_class line="138">
                                    <method name="run" type="void" line="139"/>
                                </anonymous_class>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="147">
                        <anonymous_class line="148">
                            <method name="run" type="void" line="149"/>
                        </anonymous_class>
                    </scope>
                </method>
            </class>
            <class name="InputWriter" line="157">
                <extends class="Thread"/>
                <declaration name="stream" type="PrintWriter" line="158"/>
                <declaration name="input" type="InputListener" line="159"/>
                <declaration name="running" type="boolean" line="160"/>
                <method name="InputWriter" type="constructor" line="161">
                    <params>
                        <param name="threadName" type="String"/>
                        <param name="stream" type="PrintWriter"/>
                        <param name="input" type="InputListener"/>
                    </params>
                </method>
                <method name="run" type="void" line="166">
                    <declaration name="line" type="String" line="167"/>
                    <scope line="168"/>
                </method>
            </class>
        </class>
    </source>