<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.bdi">
        <import package="com.sun.jdi"/>
        <import package="com.sun.jdi.connect.LaunchingConnector"/>
        <import package="com.sun.jdi.connect.Connector"/>
        <import package="com.sun.jdi.connect.VMStartException"/>
        <import package="com.sun.jdi.connect.IllegalConnectorArgumentsException"/>
        <import package="java.io"/>
        <import package="java.util.Map"/>
        <import package="javax.swing.SwingUtilities"/>
        <class name="ChildSession" line="38">
            <extends class="Session"/>
            <declaration name="process" type="Process" line="40"/>
            <declaration name="in" type="PrintWriter" line="42"/>
            <declaration name="out" type="BufferedReader" line="43"/>
            <declaration name="err" type="BufferedReader" line="44"/>
            <declaration name="input" type="InputListener" line="46"/>
            <declaration name="output" type="OutputListener" line="47"/>
            <declaration name="error" type="OutputListener" line="48"/>
            <method name="ChildSession" type="constructor" line="55">
                <params>
                    <param name="runtime" type="ExecutionManager"/>
                    <param name="userVMArgs" type="String"/>
                    <param name="cmdLine" type="String"/>
                    <param name="input" type="InputListener"/>
                    <param name="output" type="OutputListener"/>
                    <param name="error" type="OutputListener"/>
                    <param name="diagnostics" type="OutputListener"/>
                </params>
            </method>
            <method name="ChildSession" type="constructor" line="66">
                <params>
                    <param name="runtime" type="ExecutionManager"/>
                    <param name="connector" type="LaunchingConnector"/>
                    <param name="arguments" type="Map<String,Connector.Argument>"/>
                    <param name="input" type="InputListener"/>
                    <param name="output" type="OutputListener"/>
                    <param name="error" type="OutputListener"/>
                    <param name="diagnostics" type="OutputListener"/>
                </params>
            </method>
            <method name="ChildSession" type="constructor" line="76">
                <params>
                    <param name="runtime" type="ExecutionManager"/>
                    <param name="vm" type="VirtualMachine"/>
                    <param name="input" type="InputListener"/>
                    <param name="output" type="OutputListener"/>
                    <param name="error" type="OutputListener"/>
                    <param name="diagnostics" type="OutputListener"/>
                </params>
            </method>
            <method name="attach" type="boolean" line="84">
                <comment line="91">
                    Create a Thread that will retrieve and display any output.
                     Needs to be high priority, else debugger may exit before
                     it can be displayed.                    
                </comment>
                <comment line="97">
                    ### Rename InputWriter and OutputReader classes                    
                </comment>
                <comment line="98">
                    ### Thread priorities cribbed from ttydebug.  Think about them.                    
                </comment>
                <comment line="125">
                    ### debug                    
                </comment>
                <comment line="126">
                    System.out.println(&quot;IO after attach: &quot;+ inputWriter + &quot; &quot; + outputReader + &quot; &quot;+ errorReader);                    
                </comment>
                <scope line="86"/>
                <declaration name="outputReader" type="OutputReader" line="100"/>
                <declaration name="errorReader" type="OutputReader" line="106"/>
                <declaration name="inputWriter" type="InputWriter" line="112"/>
                <scope line="117">
                    <scope line="118"/>
                </scope>
            </method>
            <method name="detach" type="void" line="132">
                <comment line="134">
                    ### debug                    
                </comment>
                <comment line="135">
                    System.out.println(&quot;IO before detach: &quot;+ inputWriter + &quot; &quot; + outputReader + &quot; &quot;+ errorReader);                    
                </comment>
                <comment line="139">
                    inputWriter.quit();
                    outputReader.quit();
                    errorReader.quit();                    
                </comment>
                <scope line="145"/>
            </method>
            <javadoc line="152">
                Launch child java interpreter, return host:port                
            </javadoc>
            <method name="dumpStream" type="void" line="157">
                <params>
                    <param name="diagnostics" type="OutputListener"/>
                    <param name="stream" type="InputStream"/>
                </params>
                <declaration name="in" type="BufferedReader" line="158"/>
                <declaration name="line" type="String" line="160"/>
                <scope line="161"/>
            </method>
            <method name="dumpFailedLaunchInfo" type="void" line="167">
                <params>
                    <param name="diagnostics" type="OutputListener"/>
                    <param name="process" type="Process"/>
                </params>
                <scope line="168"/>
                <scope line="171"/>
            </method>
            <method name="getVM" type="VirtualMachine" line="179">
                <params>
                    <param name="diagnostics" type="OutputListener"/>
                    <param name="userVMArgs" type="String"/>
                    <param name="cmdLine" type="String"/>
                </params>
                <declaration name="manager" type="VirtualMachineManager" line="180"/>
                <declaration name="connector" type="LaunchingConnector" line="181"/>
                <declaration name="arguments" type="Map&lt;String,Connector.Argument&gt;" line="182"/>
            </method>
            <method name="generalGetVM" type="VirtualMachine" line="190">
                <params>
                    <param name="diagnostics" type="OutputListener"/>
                    <param name="connector" type="LaunchingConnector"/>
                    <param name="arguments" type="Map<String,Connector.Argument>"/>
                </params>
                <declaration name="vm" type="VirtualMachine" line="191"/>
                <scope line="192"/>
                <scope line="195"/>
                <scope line="197"/>
                <scope line="199"/>
            </method>
            <method name="connectToVMProcess" type="boolean" line="206">
                <comment line="212">
                    ### Note small buffer sizes!                    
                </comment>
                <scope line="207"/>
            </method>
            <class name="OutputReader" line="218">
                <extends class="Thread"/>
                <javadoc line="218">
                    Threads to handle application input/output.                    
                </javadoc>
                <declaration name="streamName" type="String" line="224"/>
                <declaration name="stream" type="BufferedReader" line="225"/>
                <declaration name="output" type="OutputListener" line="226"/>
                <declaration name="diagnostics" type="OutputListener" line="227"/>
                <declaration name="running" type="boolean" line="228"/>
                <declaration name="buffer" type="char[]" line="229"/>
                <method name="OutputReader" type="constructor" line="235">
                    <params>
                        <param name="threadName" type="String"/>
                        <param name="streamName" type="String"/>
                        <param name="stream" type="BufferedReader"/>
                        <param name="output" type="OutputListener"/>
                        <param name="diagnostics" type="OutputListener"/>
                    </params>
                </method>
                <method name="run" type="void" line="244">
                    <comment line="249">
                        Run in Swing event dispatcher thread.                        
                    </comment>
                    <comment line="258">
                        ### Should we sleep briefly here?                        
                    </comment>
                    <comment line="261">
                        Run in Swing event dispatcher thread.                        
                    </comment>
                    <scope line="245">
                        <declaration name="count" type="int" line="246"/>
                        <scope line="247">
                            <scope line="248">
                                <declaration name="chars" type="String" line="250"/>
                                <anonymous_class line="251">
                                    <method name="run" type="void" line="253"/>
                                </anonymous_class>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="260">
                        <anonymous_class line="262">
                            <method name="run" type="void" line="264"/>
                        </anonymous_class>
                    </scope>
                </method>
            </class>
            <class name="InputWriter" line="274">
                <extends class="Thread"/>
                <declaration name="stream" type="PrintWriter" line="276"/>
                <declaration name="input" type="InputListener" line="277"/>
                <declaration name="running" type="boolean" line="278"/>
                <method name="InputWriter" type="constructor" line="282">
                    <params>
                        <param name="threadName" type="String"/>
                        <param name="stream" type="PrintWriter"/>
                        <param name="input" type="InputListener"/>
                    </params>
                </method>
                <method name="run" type="void" line="289">
                    <comment line="294">
                        Should not be needed for println above!                        
                    </comment>
                    <declaration name="line" type="String" line="290"/>
                    <scope line="291"/>
                </method>
            </class>
        </class>
    </source>