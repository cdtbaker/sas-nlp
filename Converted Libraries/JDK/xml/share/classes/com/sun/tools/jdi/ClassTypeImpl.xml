<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.jdi">
        <import package="com.sun.jdi"/>
        <import package="java.util"/>
        <class name="ClassTypeImpl" line="4">
            <extends class="ReferenceTypeImpl"/>
            <implements interface="ClassType"/>
            <declaration name="cachedSuperclass" type="boolean" line="5"/>
            <declaration name="superclass" type="ClassType" line="6"/>
            <declaration name="lastLine" type="int" line="7"/>
            <declaration name="interfaces" type="List&lt;InterfaceType&gt;" line="8"/>
            <method name="ClassTypeImpl" type="constructor" line="9">
                <params>
                    <param name="aVm" type="VirtualMachine"/>
                    <param name="aRef" type="long"/>
                </params>
            </method>
            <method name="superclass" type="ClassType" line="12">
                <scope line="13">
                    <declaration name="sup" type="ClassTypeImpl" line="14"/>
                    <scope line="15"/>
                    <scope line="18"/>
                    <scope line="21"/>
                </scope>
            </method>
            <method name="interfaces" type="List<InterfaceType>" line="28">
                <scope line="29"/>
            </method>
            <method name="addInterfaces" type="void" line="34">
                <params>
                    <param name="list" type="List<InterfaceType>"/>
                </params>
                <declaration name="immediate" type="List&lt;InterfaceType&gt;" line="35"/>
                <declaration name="iter" type="Iterator" line="37"/>
                <scope line="38">
                    <declaration name="interfaze" type="InterfaceTypeImpl" line="39"/>
                </scope>
                <declaration name="superclass" type="ClassTypeImpl" line="42"/>
                <scope line="43"/>
            </method>
            <method name="allInterfaces" type="List<InterfaceType>" line="47">
                <declaration name="all" type="List&lt;InterfaceType&gt;" line="48"/>
            </method>
            <method name="subclasses" type="List<ClassType>" line="52">
                <declaration name="subs" type="List&lt;ClassType&gt;" line="53"/>
                <scope line="54">
                    <scope line="55">
                        <declaration name="clazz" type="ClassType" line="56"/>
                        <declaration name="superclass" type="ClassType" line="57"/>
                        <scope line="58"/>
                    </scope>
                </scope>
            </method>
            <method name="isEnum" type="boolean" line="65">
                <declaration name="superclass" type="ClassType" line="66"/>
                <scope line="67"/>
            </method>
            <method name="setValue" type="void" line="72">
                <params>
                    <param name="field" type="Field"/>
                    <param name="value" type="Value"/>
                </params>
                <scope line="76"/>
                <scope line="79">
                    <declaration name="values" type="JDWP.ClassType.SetValues.FieldValue[]" line="80"/>
                    <scope line="82"/>
                    <scope line="85"/>
                </scope>
                <scope line="89">
                    <scope line="90"/>
                </scope>
            </method>
            <method name="sendInvokeCommand" type="PacketStream" line="95">
                <params>
                    <param name="thread" type="ThreadReferenceImpl"/>
                    <param name="method" type="MethodImpl"/>
                    <param name="args" type="ValueImpl[]"/>
                    <param name="options" type="int"/>
                </params>
                <anonymous_class line="96">
                    <method name="send" type="PacketStream" line="97"/>
                </anonymous_class>
                <declaration name="sender" type="CommandSender" line="96"/>
                <declaration name="stream" type="PacketStream" line="102"/>
                <scope line="103"/>
                <scope line="106"/>
            </method>
            <method name="sendNewInstanceCommand" type="PacketStream" line="111">
                <params>
                    <param name="thread" type="ThreadReferenceImpl"/>
                    <param name="method" type="MethodImpl"/>
                    <param name="args" type="ValueImpl[]"/>
                    <param name="options" type="int"/>
                </params>
                <anonymous_class line="112">
                    <method name="send" type="PacketStream" line="113"/>
                </anonymous_class>
                <declaration name="sender" type="CommandSender" line="112"/>
                <declaration name="stream" type="PacketStream" line="118"/>
                <scope line="119"/>
                <scope line="122"/>
            </method>
            <method name="invokeMethod" type="Value" line="127">
                <params>
                    <param name="threadIntf" type="ThreadReference"/>
                    <param name="methodIntf" type="Method"/>
                    <param name="origArguments" type="List<? extends Value>"/>
                    <param name="options" type="int"/>
                </params>
                <declaration name="method" type="MethodImpl" line="131"/>
                <declaration name="thread" type="ThreadReferenceImpl" line="132"/>
                <declaration name="arguments" type="List&lt;? extends Value&gt;" line="134"/>
                <declaration name="args" type="ValueImpl[]" line="135"/>
                <declaration name="ret" type="JDWP.ClassType.InvokeMethod" line="136"/>
                <scope line="137">
                    <declaration name="stream" type="PacketStream" line="138"/>
                </scope>
                <scope line="141">
                    <scope line="142"/>
                    <scope line="145"/>
                </scope>
                <scope line="149"/>
                <scope line="152"/>
                <scope line="155"/>
            </method>
            <method name="newInstance" type="ObjectReference" line="159">
                <params>
                    <param name="threadIntf" type="ThreadReference"/>
                    <param name="methodIntf" type="Method"/>
                    <param name="origArguments" type="List<? extends Value>"/>
                    <param name="options" type="int"/>
                </params>
                <declaration name="method" type="MethodImpl" line="163"/>
                <declaration name="thread" type="ThreadReferenceImpl" line="164"/>
                <declaration name="arguments" type="List&lt;Value&gt;" line="166"/>
                <declaration name="args" type="ValueImpl[]" line="167"/>
                <declaration name="ret" type="JDWP.ClassType.NewInstance" line="168"/>
                <scope line="169">
                    <declaration name="stream" type="PacketStream" line="170"/>
                </scope>
                <scope line="173">
                    <scope line="174"/>
                    <scope line="177"/>
                </scope>
                <scope line="181"/>
                <scope line="184"/>
                <scope line="187"/>
            </method>
            <method name="concreteMethodByName" type="Method" line="191">
                <params>
                    <param name="name" type="String"/>
                    <param name="signature" type="String"/>
                </params>
                <declaration name="method" type="Method" line="192"/>
                <scope line="193">
                    <scope line="194"/>
                </scope>
            </method>
            <method name="allMethods" type="List<Method>" line="201">
                <declaration name="list" type="ArrayList&lt;Method&gt;" line="202"/>
                <declaration name="clazz" type="ClassType" line="203"/>
                <scope line="204"/>
                <scope line="208"/>
            </method>
            <method name="inheritedTypes" type="List<ReferenceType>" line="213">
                <declaration name="inherited" type="List&lt;ReferenceType&gt;" line="214"/>
                <scope line="215"/>
                <scope line="218"/>
            </method>
            <method name="validateMethodInvocation" type="void" line="223">
                <params>
                    <param name="method" type="Method"/>
                </params>
                <declaration name="declType" type="ReferenceTypeImpl" line="224"/>
                <scope line="225"/>
                <scope line="228"/>
                <scope line="231"/>
            </method>
            <method name="validateConstructorInvocation" type="void" line="235">
                <params>
                    <param name="method" type="Method"/>
                </params>
                <declaration name="declType" type="ReferenceTypeImpl" line="236"/>
                <scope line="237"/>
                <scope line="240"/>
            </method>
            <method name="addVisibleMethods" type="void" line="244">
                <params>
                    <param name="methodMap" type="Map<String,Method>"/>
                </params>
                <declaration name="iter" type="Iterator" line="245"/>
                <scope line="246">
                    <declaration name="interfaze" type="InterfaceTypeImpl" line="247"/>
                </scope>
                <declaration name="clazz" type="ClassTypeImpl" line="250"/>
                <scope line="251"/>
            </method>
            <method name="isAssignableTo" type="boolean" line="256">
                <params>
                    <param name="type" type="ReferenceType"/>
                </params>
                <declaration name="superclazz" type="ClassTypeImpl" line="257"/>
                <scope line="258"/>
                <scope line="261"/>
                <scope line="264">
                    <declaration name="interfaces" type="List&lt;InterfaceType&gt;" line="265"/>
                    <declaration name="iter" type="Iterator" line="266"/>
                    <scope line="267">
                        <declaration name="interfaze" type="InterfaceTypeImpl" line="268"/>
                        <scope line="269"/>
                    </scope>
                </scope>
            </method>
            <method name="toString" type="String" line="276"/>
        </class>
    </source>