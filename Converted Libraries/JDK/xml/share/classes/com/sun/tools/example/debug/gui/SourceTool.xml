<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.gui">
        <import package="java.io"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="javax.swing"/>
        <import package="com.sun.jdi"/>
        <import package="com.sun.jdi.request"/>
        <import package="com.sun.tools.example.debug.bdi"/>
        <class name="SourceTool" line="38">
            <extends class="JPanel"/>
            <comment line="52">
                Information on source file that is on display, or failed to be
                 displayed due to inaccessible source.  Used to update display
                 when sourcepath is changed.                
            </comment>
            <comment line="56">
                relative path name, if showSourceFile                
            </comment>
            <comment line="57">
                location, if showSourceForLocation                
            </comment>
            <declaration name="serialVersionUID" type="long" line="40"/>
            <declaration name="env" type="Environment" line="42"/>
            <declaration name="runtime" type="ExecutionManager" line="44"/>
            <declaration name="context" type="ContextManager" line="45"/>
            <declaration name="sourceManager" type="SourceManager" line="46"/>
            <declaration name="list" type="JList" line="48"/>
            <declaration name="sourceModel" type="ListModel" line="49"/>
            <declaration name="sourceName" type="String" line="55"/>
            <declaration name="sourceLocn" type="Location" line="56"/>
            <declaration name="interpreter" type="CommandInterpreter" line="57"/>
            <method name="SourceTool" type="constructor" line="59">
                <params>
                    <param name="env" type="Environment"/>
                </params>
                <comment line="71">
                    empty                    
                </comment>
                <declaration name="listener" type="SourceToolListener" line="77"/>
                <declaration name="squeek" type="MouseListener" line="82"/>
            </method>
            <method name="setTextFont" type="void" line="88">
                <params>
                    <param name="f" type="Font"/>
                </params>
            </method>
            <class name="SourceToolListener" line="93">
                <comment line="98">
                    ContextListener                    
                </comment>
                <comment line="105">
                    Clear source view.
                          sourceModel = new DefaultListModel();   empty                    
                </comment>
                <comment line="108">
                    SourceListener                    
                </comment>
                <comment line="121">
                    SpecListener                    
                </comment>
                <implements interface="ContextListener"/>
                <implements interface="SourceListener"/>
                <implements interface="SpecListener"/>
                <method name="currentFrameChanged" type="void" line="100">
                    <params>
                        <param name="e" type="CurrentFrameChangedEvent"/>
                    </params>
                </method>
                <method name="sourcepathChanged" type="void" line="110">
                    <params>
                        <param name="e" type="SourcepathChangedEvent"/>
                    </params>
                    <comment line="112">
                        Reload source view if its contents depend
                         on the source path.                        
                    </comment>
                    <scope line="113"/>
                    <scope line="115"/>
                </method>
                <method name="breakpointSet" type="void" line="123">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                </method>
                <method name="breakpointDeferred" type="void" line="128">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                </method>
                <method name="breakpointDeleted" type="void" line="131">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                    <declaration name="req" type="BreakpointRequest" line="132"/>
                    <declaration name="loc" type="Location" line="133"/>
                    <scope line="134">
                        <scope line="135">
                            <declaration name="sm" type="SourceModel" line="136"/>
                        </scope>
                        <scope line="139"/>
                    </scope>
                </method>
                <method name="breakpointResolved" type="void" line="145">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                    <declaration name="req" type="BreakpointRequest" line="146"/>
                    <declaration name="loc" type="Location" line="147"/>
                    <scope line="148">
                        <declaration name="sm" type="SourceModel" line="149"/>
                    </scope>
                    <scope line="152"/>
                </method>
                <method name="breakpointError" type="void" line="157">
                    <params>
                        <param name="e" type="SpecErrorEvent"/>
                    </params>
                </method>
                <method name="watchpointSet" type="void" line="162">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                </method>
                <method name="watchpointDeferred" type="void" line="165">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                </method>
                <method name="watchpointDeleted" type="void" line="168">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                </method>
                <method name="watchpointResolved" type="void" line="171">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                </method>
                <method name="watchpointError" type="void" line="174">
                    <params>
                        <param name="e" type="SpecErrorEvent"/>
                    </params>
                </method>
                <method name="exceptionInterceptSet" type="void" line="178">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                </method>
                <method name="exceptionInterceptDeferred" type="void" line="181">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                </method>
                <method name="exceptionInterceptDeleted" type="void" line="184">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                </method>
                <method name="exceptionInterceptResolved" type="void" line="187">
                    <params>
                        <param name="e" type="SpecEvent"/>
                    </params>
                </method>
                <method name="exceptionInterceptError" type="void" line="190">
                    <params>
                        <param name="e" type="SpecErrorEvent"/>
                    </params>
                </method>
            </class>
            <method name="showSourceContext" type="void" line="194">
                <params>
                    <param name="thread" type="ThreadReference"/>
                    <param name="index" type="int"/>
                </params>
                <comment line="196">
                    ### Should use ThreadInfo here.                    
                </comment>
                <comment line="207">
                    if (!showSourceForLocation(locn)) {
                    env.notice(&quot;Could not display source for &quot;
                    + Utils.locationString(locn));
                    }                    
                </comment>
                <declaration name="frame" type="StackFrame" line="196"/>
                <scope line="197">
                    <scope line="198"/>
                    <scope line="200"/>
                </scope>
                <scope line="202"/>
                <declaration name="locn" type="Location" line="205"/>
            </method>
            <method name="showSourceForLocation" type="boolean" line="215">
                <params>
                    <param name="locn" type="Location"/>
                </params>
                <comment line="227">
                    Here if we could not display source.                    
                </comment>
                <declaration name="lineNo" type="int" line="218"/>
                <scope line="219">
                    <declaration name="source" type="SourceModel" line="220"/>
                    <scope line="221"/>
                </scope>
            </method>
            <method name="showSourceFile" type="boolean" line="231">
                <params>
                    <param name="fileName" type="String"/>
                </params>
                <comment line="240">
                    env.failure(&quot;Source not found on current source path.&quot;);                    
                </comment>
                <comment line="245">
                    Absolute pathname does not depend on sourcepath.                    
                </comment>
                <declaration name="file" type="File" line="233"/>
                <scope line="234">
                    <declaration name="sourcePath" type="SearchPath" line="236"/>
                    <scope line="238"/>
                </scope>
                <scope line="243"/>
                <declaration name="source" type="SourceModel" line="247"/>
                <scope line="248"/>
            </method>
            <method name="showSource" type="void" line="256">
                <params>
                    <param name="model" type="SourceModel"/>
                </params>
            </method>
            <method name="showSourceAtLine" type="void" line="260">
                <params>
                    <param name="model" type="SourceModel"/>
                    <param name="lineNo" type="int"/>
                </params>
                <comment line="266">
                    give some context                    
                </comment>
                <scope line="262">
                    <scope line="264"/>
                </scope>
            </method>
            <method name="showSourceUnavailable" type="void" line="271">
                <declaration name="model" type="SourceModel" line="272"/>
            </method>
            <method name="setViewModel" type="void" line="276">
                <params>
                    <param name="model" type="SourceModel"/>
                </params>
                <comment line="279">
                    install new model                    
                </comment>
                <scope line="277"/>
            </method>
            <class name="SourceLineRenderer" line="284">
                <extends class="DefaultListCellRenderer"/>
                <comment line="98">
                    ContextListener                    
                </comment>
                <comment line="105">
                    Clear source view.
                          sourceModel = new DefaultListModel();   empty                    
                </comment>
                <comment line="108">
                    SourceListener                    
                </comment>
                <comment line="121">
                    SpecListener                    
                </comment>
                <method name="getListCellRendererComponent" type="Component" line="291">
                    <params>
                        <param name="list" type="JList"/>
                        <param name="value" type="Object"/>
                        <param name="index" type="int"/>
                        <param name="isSelected" type="boolean"/>
                        <param name="cellHasFocus" type="boolean"/>
                    </params>
                    <comment line="294">
                        ### Should set background highlight and/or icon if breakpoint on this line.
                         Configures &quot;this&quot;                        
                    </comment>
                    <comment line="301">
                        ### Tab expansion is now done when source file is read in,
                        ### to speed up display.  This costs a lot of space, slows
                        ### down source file loading, and has not been demonstrated
                        ### to yield an observable improvement in display performance.
                        ### Measurements may be appropriate here.
                        String sourceLine = expandTabs((String)value);                        
                    </comment>
                    <declaration name="line" type="SourceModel.Line" line="298"/>
                    <scope line="307"/>
                    <scope line="309"/>
                    <scope line="311"/>
                </method>
                <method name="getPreferredSize" type="Dimension" line="320">
                    <declaration name="dim" type="Dimension" line="321"/>
                </method>
            </class>
            <class name="STMouseListener" line="327">
                <extends class="MouseAdapter"/>
                <comment line="98">
                    ContextListener                    
                </comment>
                <comment line="105">
                    Clear source view.
                          sourceModel = new DefaultListModel();   empty                    
                </comment>
                <comment line="108">
                    SourceListener                    
                </comment>
                <comment line="121">
                    SpecListener                    
                </comment>
                <implements interface="MouseListener"/>
                <method name="mousePressed" type="void" line="329">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="330"/>
                </method>
                <method name="mouseReleased" type="void" line="337">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <scope line="338"/>
                </method>
                <method name="showPopupMenu" type="void" line="344">
                    <params>
                        <param name="invoker" type="Component"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="list" type="JList" line="345"/>
                    <declaration name="ln" type="int" line="346"/>
                    <declaration name="line" type="SourceModel.Line" line="347"/>
                    <declaration name="popup" type="JPopupMenu" line="349"/>
                    <scope line="351"/>
                    <scope line="353">
                        <declaration name="className" type="String" line="354"/>
                        <scope line="355"/>
                        <scope line="359"/>
                    </scope>
                    <scope line="364"/>
                </method>
                <method name="commandItem" type="JMenuItem" line="372">
                    <params>
                        <param name="label" type="String"/>
                        <param name="cmd" type="String"/>
                    </params>
                    <declaration name="item" type="JMenuItem" line="373"/>
                    <anonymous_class line="374">
                        <method name="actionPerformed" type="void" line="376">
                            <params>
                                <param name="e" type="ActionEvent"/>
                            </params>
                        </method>
                    </anonymous_class>
                </method>
            </class>
        </class>
    </source>