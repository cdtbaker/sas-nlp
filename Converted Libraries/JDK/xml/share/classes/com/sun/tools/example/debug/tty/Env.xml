<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.tty">
        <import package="com.sun.jdi"/>
        <import package="com.sun.jdi.request.StepRequest"/>
        <import package="com.sun.jdi.request.MethodEntryRequest"/>
        <import package="com.sun.jdi.request.MethodExitRequest"/>
        <import package="java.util"/>
        <import package="java.io"/>
        <class name="Env" line="8">
            <declaration name="specList" type="EventRequestSpecList" line="9"/>
            <declaration name="connection" type="VMConnection" line="10"/>
            <declaration name="sourceMapper" type="SourceMapper" line="11"/>
            <declaration name="excludes" type="List&amp;lt;String&amp;gt;" line="12"/>
            <declaration name="SOURCE_CACHE_SIZE" type="int" line="13"/>
            <declaration name="sourceCache" type="List&amp;lt;SourceCode&amp;gt;" line="14"/>
            <declaration name="savedValues" type="HashMap&amp;lt;String,Value&amp;gt;" line="15"/>
            <declaration name="atExitMethod" type="Method" line="16"/>
            <method name="init" type="void" line="17">
                <params>
                    <param name="connectSpec" type="String"/>
                    <param name="openNow" type="boolean"/>
                    <param name="flags" type="int"/>
                </params>
                <scope line="19"/>
            </method>
            <method name="connection" type="VMConnection" line="23"/>
            <method name="vm" type="VirtualMachine" line="26"/>
            <method name="shutdown" type="void" line="29"/>
            <method name="shutdown" type="void" line="32">
                <params>
                    <param name="message" type="String"/>
                </params>
                <scope line="33">
                    <scope line="34"/>
                    <scope line="37"/>
                </scope>
                <scope line="40"/>
            </method>
            <method name="setSourcePath" type="void" line="46">
                <params>
                    <param name="srcPath" type="String"/>
                </params>
            </method>
            <method name="setSourcePath" type="void" line="50">
                <params>
                    <param name="srcList" type="List&lt;String&gt;"/>
                </params>
            </method>
            <method name="getSourcePath" type="String" line="54"/>
            <method name="excludes" type="List&lt;String&gt;" line="57">
                <scope line="58"/>
            </method>
            <method name="excludesString" type="String" line="63">
                <declaration name="buffer" type="StringBuffer" line="64"/>
                <scope line="65"/>
            </method>
            <method name="addExcludes" type="void" line="71">
                <params>
                    <param name="request" type="StepRequest"/>
                </params>
                <scope line="72"/>
            </method>
            <method name="addExcludes" type="void" line="76">
                <params>
                    <param name="request" type="MethodEntryRequest"/>
                </params>
                <scope line="77"/>
            </method>
            <method name="addExcludes" type="void" line="81">
                <params>
                    <param name="request" type="MethodExitRequest"/>
                </params>
                <scope line="82"/>
            </method>
            <method name="setExcludes" type="void" line="86">
                <params>
                    <param name="excludeString" type="String"/>
                </params>
                <declaration name="t" type="StringTokenizer" line="87"/>
                <declaration name="list" type="List&amp;lt;String&amp;gt;" line="88"/>
                <scope line="89"/>
            </method>
            <method name="atExitMethod" type="Method" line="94"/>
            <method name="setAtExitMethod" type="void" line="97">
                <params>
                    <param name="mmm" type="Method"/>
                </params>
            </method>
            <javadoc line="100">
                Return a Reader cooresponding to the source of this location.
                  Return null if not available.
                  Note: returned reader must be closed.                
            </javadoc>
            <method name="sourceReader" type="BufferedReader" line="105">
                <params>
                    <param name="location" type="Location"/>
                </params>
            </method>
            <method name="sourceLine" type="String" line="108">
                <params>
                    <param name="location" type="Location"/>
                    <param name="lineNumber" type="int"/>
                </params>
                <scope line="109"/>
                <scope line="112">
                    <declaration name="fileName" type="String" line="113"/>
                    <declaration name="iter" type="Iterator&amp;lt;SourceCode&amp;gt;" line="114"/>
                    <declaration name="code" type="SourceCode" line="115"/>
                    <scope line="116">
                        <declaration name="candidate" type="SourceCode" line="117"/>
                        <scope line="118"/>
                    </scope>
                    <scope line="124">
                        <declaration name="reader" type="BufferedReader" line="125"/>
                        <scope line="126"/>
                        <scope line="130"/>
                    </scope>
                </scope>
                <scope line="137"/>
            </method>
            <javadoc line="141">
                Return a description of an object.                
            </javadoc>
            <method name="description" type="String" line="144">
                <params>
                    <param name="ref" type="ObjectReference"/>
                </params>
                <declaration name="clazz" type="ReferenceType" line="145"/>
                <declaration name="id" type="long" line="146"/>
                <scope line="147"/>
                <scope line="150"/>
            </method>
            <javadoc line="154">
                Convert a long to a hexadecimal string.                
            </javadoc>
            <method name="toHex" type="String" line="157">
                <params>
                    <param name="n" type="long"/>
                </params>
                <declaration name="s1" type="char" line="158"/>
                <declaration name="s2" type="char" line="159"/>
                <declaration name="i" type="int" line="160"/>
                <scope line="161">
                    <declaration name="d" type="long" line="162"/>
                </scope>
                <declaration name="j" type="int" line="168"/>
                <scope line="169"/>
            </method>
            <javadoc line="174">
                Convert hexadecimal strings to longs.                
            </javadoc>
            <method name="fromHex" type="long" line="177">
                <params>
                    <param name="hexStr" type="String"/>
                </params>
                <declaration name="str" type="String" line="178"/>
                <scope line="179"/>
                <declaration name="ret" type="long" line="182"/>
                <scope line="183">
                    <declaration name="c" type="int" line="184"/>
                    <scope line="185"/>
                    <scope line="188"/>
                    <scope line="191"/>
                </scope>
            </method>
            <method name="getReferenceTypeFromToken" type="ReferenceType" line="197">
                <params>
                    <param name="idToken" type="String"/>
                </params>
                <declaration name="cls" type="ReferenceType" line="198"/>
                <scope line="199"/>
                <scope line="202">
                    <scope line="204">
                        <scope line="205"/>
                    </scope>
                </scope>
                <scope line="211">
                    <declaration name="classes" type="List&amp;lt;ReferenceType&amp;gt;" line="212"/>
                    <scope line="213"/>
                </scope>
            </method>
            <method name="getSaveKeys" type="Set&lt;String&gt;" line="219"/>
            <method name="getSavedValue" type="Value" line="222">
                <params>
                    <param name="key" type="String"/>
                </params>
            </method>
            <method name="setSavedValue" type="void" line="225">
                <params>
                    <param name="key" type="String"/>
                    <param name="value" type="Value"/>
                </params>
            </method>
            <class name="SourceCode" line="228">
                <declaration name="fileName" type="String" line="229"/>
                <declaration name="sourceLines" type="List&amp;lt;String&amp;gt;" line="230"/>
                <method name="SourceCode" type="constructor" line="231">
                    <params>
                        <param name="fileName" type="String"/>
                        <param name="reader" type="BufferedReader"/>
                    </params>
                    <scope line="233">
                        <declaration name="line" type="String" line="234"/>
                        <scope line="235"/>
                    </scope>
                    <scope line="240"/>
                </method>
                <method name="fileName" type="String" line="244"/>
                <method name="sourceLine" type="String" line="247">
                    <params>
                        <param name="number" type="int"/>
                    </params>
                    <declaration name="index" type="int" line="248"/>
                    <scope line="249"/>
                    <scope line="252"/>
                </method>
            </class>
        </class>
    </source>