<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.tty">
        <import package="com.sun.jdi"/>
        <import package="com.sun.jdi.request.StepRequest"/>
        <import package="com.sun.jdi.request.MethodEntryRequest"/>
        <import package="com.sun.jdi.request.MethodExitRequest"/>
        <import package="java.util"/>
        <import package="java.io"/>
        <class name="Env" line="36">
            <declaration name="specList" type="EventRequestSpecList" line="38"/>
            <declaration name="connection" type="VMConnection" line="40"/>
            <declaration name="sourceMapper" type="SourceMapper" line="42"/>
            <declaration name="excludes" type="List&lt;String&gt;" line="43"/>
            <declaration name="SOURCE_CACHE_SIZE" type="int" line="45"/>
            <declaration name="sourceCache" type="List&lt;SourceCode&gt;" line="46"/>
            <declaration name="savedValues" type="HashMap&lt;String,Value&gt;" line="48"/>
            <declaration name="atExitMethod" type="Method" line="49"/>
            <method name="init" type="void" line="51">
                <params>
                    <param name="connectSpec" type="String"/>
                    <param name="openNow" type="boolean"/>
                    <param name="flags" type="int"/>
                </params>
                <scope line="53"/>
            </method>
            <method name="connection" type="VMConnection" line="58"/>
            <method name="vm" type="VirtualMachine" line="62"/>
            <method name="shutdown" type="void" line="66"/>
            <method name="shutdown" type="void" line="70">
                <params>
                    <param name="message" type="String"/>
                </params>
                <comment line="76">
                    Shutting down after the VM has gone away. This is
                     not an error, and we just ignore it.                    
                </comment>
                <scope line="71">
                    <scope line="72"/>
                    <scope line="74"/>
                </scope>
                <scope line="79"/>
            </method>
            <method name="setSourcePath" type="void" line="86">
                <params>
                    <param name="srcPath" type="String"/>
                </params>
            </method>
            <method name="setSourcePath" type="void" line="91">
                <params>
                    <param name="srcList" type="List<String>"/>
                </params>
            </method>
            <method name="getSourcePath" type="String" line="96"/>
            <method name="excludes" type="List<String>" line="100">
                <scope line="101"/>
            </method>
            <method name="excludesString" type="String" line="107">
                <declaration name="buffer" type="StringBuffer" line="108"/>
                <scope line="109"/>
            </method>
            <method name="addExcludes" type="void" line="116">
                <params>
                    <param name="request" type="StepRequest"/>
                </params>
                <scope line="117"/>
            </method>
            <method name="addExcludes" type="void" line="122">
                <params>
                    <param name="request" type="MethodEntryRequest"/>
                </params>
                <scope line="123"/>
            </method>
            <method name="addExcludes" type="void" line="128">
                <params>
                    <param name="request" type="MethodExitRequest"/>
                </params>
                <scope line="129"/>
            </method>
            <method name="setExcludes" type="void" line="134">
                <params>
                    <param name="excludeString" type="String"/>
                </params>
                <declaration name="t" type="StringTokenizer" line="135"/>
                <declaration name="list" type="List&lt;String&gt;" line="136"/>
                <scope line="137"/>
            </method>
            <method name="atExitMethod" type="Method" line="143"/>
            <method name="setAtExitMethod" type="void" line="147">
                <params>
                    <param name="mmm" type="Method"/>
                </params>
            </method>
            <javadoc line="151">
                Return a Reader cooresponding to the source of this location.
                  Return null if not available.
                  Note: returned reader must be closed.                
            </javadoc>
            <method name="sourceReader" type="BufferedReader" line="156">
                <params>
                    <param name="location" type="Location"/>
                </params>
            </method>
            <method name="sourceLine" type="String" line="161">
                <params>
                    <param name="location" type="Location"/>
                    <param name="lineNumber" type="int"/>
                </params>
                <scope line="162"/>
                <scope line="166">
                    <declaration name="fileName" type="String" line="167"/>
                    <declaration name="iter" type="Iterator&lt;SourceCode&gt;" line="169"/>
                    <declaration name="code" type="SourceCode" line="170"/>
                    <scope line="171">
                        <declaration name="candidate" type="SourceCode" line="172"/>
                        <scope line="173"/>
                    </scope>
                    <scope line="179">
                        <declaration name="reader" type="BufferedReader" line="180"/>
                        <scope line="181"/>
                        <scope line="185"/>
                    </scope>
                </scope>
                <scope line="191"/>
            </method>
            <javadoc line="196">
                Return a description of an object.                
            </javadoc>
            <method name="description" type="String" line="197">
                <params>
                    <param name="ref" type="ObjectReference"/>
                </params>
                <declaration name="clazz" type="ReferenceType" line="198"/>
                <declaration name="id" type="long" line="199"/>
                <scope line="200"/>
                <scope line="202"/>
            </method>
            <javadoc line="209">
                Convert a long to a hexadecimal string.                
            </javadoc>
            <method name="toHex" type="String" line="210">
                <params>
                    <param name="n" type="long"/>
                </params>
                <comment line="215">
                                        
                </comment>
                <comment line="222">
                                        
                </comment>
                <declaration name="s1" type="char" line="211"/>
                <declaration name="s2" type="char" line="212"/>
                <declaration name="i" type="int" line="215"/>
                <scope line="216">
                    <declaration name="d" type="long" line="217"/>
                </scope>
                <declaration name="j" type="int" line="224"/>
                <scope line="225"/>
            </method>
            <javadoc line="231">
                Convert hexadecimal strings to longs.                
            </javadoc>
            <method name="fromHex" type="long" line="232">
                <params>
                    <param name="hexStr" type="String"/>
                </params>
                <declaration name="str" type="String" line="233"/>
                <scope line="235"/>
                <declaration name="ret" type="long" line="239"/>
                <scope line="240">
                    <declaration name="c" type="int" line="241"/>
                    <scope line="242"/>
                    <scope line="244"/>
                    <scope line="246"/>
                </scope>
            </method>
            <method name="getReferenceTypeFromToken" type="ReferenceType" line="253">
                <params>
                    <param name="idToken" type="String"/>
                </params>
                <comment line="259">
                    This notation saves typing by letting the user omit leading
                     package names. The first
                     loaded class whose name matches this limited regular
                     expression is selected.                    
                </comment>
                <comment line="271">
                    It&apos;s a class name                    
                </comment>
                <comment line="274">
                    TO DO: handle multiples                    
                </comment>
                <declaration name="cls" type="ReferenceType" line="254"/>
                <scope line="255"/>
                <scope line="257">
                    <scope line="263">
                        <scope line="264"/>
                    </scope>
                </scope>
                <scope line="269">
                    <declaration name="classes" type="List&lt;ReferenceType&gt;" line="271"/>
                    <scope line="272"/>
                </scope>
            </method>
            <method name="getSaveKeys" type="Set<String>" line="280"/>
            <method name="getSavedValue" type="Value" line="284">
                <params>
                    <param name="key" type="String"/>
                </params>
            </method>
            <method name="setSavedValue" type="void" line="288">
                <params>
                    <param name="key" type="String"/>
                    <param name="value" type="Value"/>
                </params>
            </method>
            <class name="SourceCode" line="292">
                <declaration name="fileName" type="String" line="293"/>
                <declaration name="sourceLines" type="List&lt;String&gt;" line="294"/>
                <method name="SourceCode" type="constructor" line="296">
                    <params>
                        <param name="fileName" type="String"/>
                        <param name="reader" type="BufferedReader"/>
                    </params>
                    <scope line="298">
                        <declaration name="line" type="String" line="299"/>
                        <scope line="300"/>
                    </scope>
                    <scope line="304"/>
                </method>
                <method name="fileName" type="String" line="309"/>
                <method name="sourceLine" type="String" line="313">
                    <params>
                        <param name="number" type="int"/>
                    </params>
                    <comment line="315">
                        list is 0-indexed                        
                    </comment>
                    <declaration name="index" type="int" line="314"/>
                    <scope line="315"/>
                    <scope line="317"/>
                </method>
            </class>
        </class>
    </source>