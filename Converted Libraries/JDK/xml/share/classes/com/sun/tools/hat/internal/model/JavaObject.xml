<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.hat.internal.model">
        <import package="java.io.IOException"/>
        <import package="com.sun.tools.hat.internal.parser.ReadBuffer"/>
        <class name="JavaObject" line="4">
            <extends class="JavaLazyReadObject"/>
            <javadoc line="4">
                Represents Java instance                
                <author>
                    Bill Foote                    
                </author>
            </javadoc>
            <declaration name="clazz" type="Object" line="9"/>
            <javadoc line="10">
                Construct a new JavaObject.                
                <param>
                    classID id of the class object                    
                </param>
                <param>
                    offset The offset of field data                    
                </param>
            </javadoc>
            <method name="JavaObject" type="constructor" line="15">
                <params>
                    <param name="classID" type="long"/>
                    <param name="offset" type="long"/>
                </params>
            </method>
            <method name="resolve" type="void" line="19">
                <params>
                    <param name="snapshot" type="Snapshot"/>
                </params>
                <scope line="20"/>
                <scope line="23">
                    <declaration name="classID" type="long" line="24"/>
                    <scope line="26">
                        <declaration name="length" type="int" line="28"/>
                        <declaration name="buf" type="ReadBuffer" line="29"/>
                        <declaration name="idSize" type="int" line="30"/>
                        <declaration name="lenOffset" type="long" line="31"/>
                        <scope line="32"/>
                        <scope line="35"/>
                    </scope>
                </scope>
                <scope line="41"/>
                <declaration name="cl" type="JavaClass" line="44"/>
            </method>
            <javadoc line="50">
                Are we the same type as other?  We are iff our clazz is the
                  same type as other&apos;s.                
            </javadoc>
            <method name="isSameTypeAs" type="boolean" line="54">
                <params>
                    <param name="other" type="JavaThing"/>
                </params>
                <scope line="55"/>
                <declaration name="oo" type="JavaObject" line="58"/>
            </method>
            <javadoc line="61">
                Return our JavaClass object.  This may only be called after resolve.                
            </javadoc>
            <method name="getClazz" type="JavaClass" line="64"/>
            <method name="getFields" type="JavaThing[]" line="67"/>
            <method name="getField" type="JavaThing" line="70">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="flds" type="JavaThing[]" line="71"/>
                <declaration name="instFields" type="JavaField[]" line="72"/>
                <scope line="73">
                    <scope line="74"/>
                </scope>
            </method>
            <method name="compareTo" type="int" line="80">
                <params>
                    <param name="other" type="JavaThing"/>
                </params>
                <scope line="81">
                    <declaration name="oo" type="JavaObject" line="82"/>
                </scope>
            </method>
            <method name="visitReferencedObjects" type="void" line="87">
                <params>
                    <param name="v" type="JavaHeapObjectVisitor"/>
                </params>
                <declaration name="flds" type="JavaThing[]" line="89"/>
                <scope line="90">
                    <scope line="91">
                        <scope line="92"/>
                        <scope line="94"/>
                    </scope>
                </scope>
            </method>
            <method name="refersOnlyWeaklyTo" type="boolean" line="100">
                <params>
                    <param name="ss" type="Snapshot"/>
                    <param name="other" type="JavaThing"/>
                </params>
                <scope line="101">
                    <declaration name="referentFieldIndex" type="int" line="102"/>
                    <scope line="103">
                        <declaration name="flds" type="JavaThing[]" line="104"/>
                        <scope line="105">
                            <scope line="106"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="115">
                Describe the reference that this thing has to target.  This will only
                  be called if target is in the array returned by getChildrenForRootset.                
            </javadoc>
            <method name="describeReferenceTo" type="String" line="119">
                <params>
                    <param name="target" type="JavaThing"/>
                    <param name="ss" type="Snapshot"/>
                </params>
                <declaration name="flds" type="JavaThing[]" line="120"/>
                <scope line="121">
                    <scope line="122">
                        <declaration name="f" type="JavaField" line="123"/>
                    </scope>
                </scope>
            </method>
            <method name="toString" type="String" line="129">
                <scope line="130">
                    <declaration name="value" type="JavaThing" line="131"/>
                    <scope line="132"/>
                    <scope line="135"/>
                </scope>
                <scope line="139"/>
            </method>
            <method name="readValueLength" type="int" line="143">
                <declaration name="cl" type="JavaClass" line="144"/>
                <declaration name="idSize" type="int" line="145"/>
                <declaration name="lengthOffset" type="long" line="146"/>
            </method>
            <method name="readValue" type="byte[]" line="149">
                <declaration name="cl" type="JavaClass" line="150"/>
                <declaration name="idSize" type="int" line="151"/>
                <declaration name="buf" type="ReadBuffer" line="152"/>
                <declaration name="offset" type="long" line="153"/>
                <declaration name="length" type="int" line="154"/>
                <scope line="155"/>
                <scope line="158">
                    <declaration name="res" type="byte[]" line="159"/>
                </scope>
            </method>
            <method name="parseFields" type="JavaThing[]" line="164">
                <params>
                    <param name="data" type="byte[]"/>
                    <param name="verbose" type="boolean"/>
                </params>
                <declaration name="cl" type="JavaClass" line="165"/>
                <declaration name="target" type="int" line="166"/>
                <declaration name="fields" type="JavaField[]" line="167"/>
                <declaration name="fieldValues" type="JavaThing[]" line="168"/>
                <declaration name="snapshot" type="Snapshot" line="169"/>
                <declaration name="idSize" type="int" line="170"/>
                <declaration name="fieldNo" type="int" line="171"/>
                <declaration name="currClass" type="JavaClass" line="173"/>
                <declaration name="index" type="int" line="174"/>
                <scope line="175">
                    <scope line="176"/>
                    <declaration name="f" type="JavaField" line="182"/>
                    <declaration name="sig" type="char" line="183"/>
                    <scope line="187">
                        <declaration name="id" type="long" line="188"/>
                        <declaration name="ref" type="JavaObjectRef" line="190"/>
                    </scope>
                    <scope line="195">
                        <declaration name="value" type="byte" line="196"/>
                    </scope>
                    <scope line="202">
                        <declaration name="value" type="byte" line="203"/>
                    </scope>
                    <scope line="209">
                        <declaration name="value" type="short" line="210"/>
                    </scope>
                    <scope line="216">
                        <declaration name="value" type="char" line="217"/>
                    </scope>
                    <scope line="223">
                        <declaration name="value" type="int" line="224"/>
                    </scope>
                    <scope line="230">
                        <declaration name="value" type="long" line="231"/>
                    </scope>
                    <scope line="237">
                        <declaration name="value" type="float" line="238"/>
                    </scope>
                    <scope line="244">
                        <declaration name="value" type="double" line="245"/>
                    </scope>
                </scope>
            </method>
            <method name="warn" type="void" line="256">
                <params>
                    <param name="msg" type="String"/>
                </params>
            </method>
        </class>
    </source>