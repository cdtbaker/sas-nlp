<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.hat.internal.model">
        <import package="java.io.IOException"/>
        <import package="com.sun.tools.hat.internal.parser.ReadBuffer"/>
        <class name="JavaLazyReadObject" line="41">
            <extends class="JavaHeapObject"/>
            <comment line="44">
                file offset from which this object data starts                
            </comment>
            <comment line="59">
                return the length of the data for this object                
            </comment>
            <comment line="70">
                get this object&apos;s content as byte array                
            </comment>
            <comment line="81">
                get ID of this object                
            </comment>
            <comment line="101">
                make Integer or Long for given object ID                
            </comment>
            <comment line="110">
                get ID as long value from Number                
            </comment>
            <comment line="119">
                read object ID from given index from given byte array                
            </comment>
            <comment line="129">
                utility methods to read primitive types from byte array                
            </comment>
            <declaration name="offset" type="long" line="44"/>
            <method name="JavaLazyReadObject" type="constructor" line="46">
                <params>
                    <param name="offset" type="long"/>
                </params>
            </method>
            <method name="getSize" type="int" line="50"/>
            <method name="getOffset" type="long" line="54"/>
            <method name="getValueLength" type="int" line="59">
                <scope line="60"/>
                <scope line="62"/>
            </method>
            <method name="getValue" type="byte[]" line="70">
                <scope line="71"/>
                <scope line="73"/>
            </method>
            <method name="getId" type="long" line="81">
                <scope line="82">
                    <declaration name="buf" type="ReadBuffer" line="83"/>
                    <declaration name="idSize" type="int" line="84"/>
                    <scope line="85"/>
                    <scope line="87"/>
                </scope>
                <scope line="90"/>
            </method>
            <method name="readValueLength" type="int" line="97"/>
            <method name="readValue" type="byte[]" line="98"/>
            <method name="makeId" type="Number" line="101">
                <params>
                    <param name="id" type="long"/>
                </params>
                <scope line="102"/>
                <scope line="104"/>
            </method>
            <method name="getIdValue" type="long" line="110">
                <params>
                    <param name="num" type="Number"/>
                </params>
                <declaration name="id" type="long" line="111"/>
                <scope line="112"/>
            </method>
            <method name="objectIdAt" type="long" line="119">
                <params>
                    <param name="index" type="int"/>
                    <param name="data" type="byte[]"/>
                </params>
                <declaration name="idSize" type="int" line="120"/>
                <scope line="121"/>
                <scope line="123"/>
            </method>
            <method name="byteAt" type="byte" line="129">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="byte[]"/>
                </params>
            </method>
            <method name="booleanAt" type="boolean" line="133">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="byte[]"/>
                </params>
            </method>
            <method name="charAt" type="char" line="137">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="byte[]"/>
                </params>
                <declaration name="b1" type="int" line="138"/>
                <declaration name="b2" type="int" line="139"/>
            </method>
            <method name="shortAt" type="short" line="143">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="byte[]"/>
                </params>
                <declaration name="b1" type="int" line="144"/>
                <declaration name="b2" type="int" line="145"/>
            </method>
            <method name="intAt" type="int" line="149">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="byte[]"/>
                </params>
                <declaration name="b1" type="int" line="150"/>
                <declaration name="b2" type="int" line="151"/>
                <declaration name="b3" type="int" line="152"/>
                <declaration name="b4" type="int" line="153"/>
            </method>
            <method name="longAt" type="long" line="157">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="byte[]"/>
                </params>
                <declaration name="val" type="long" line="158"/>
                <scope line="159">
                    <declaration name="b" type="int" line="161"/>
                </scope>
            </method>
            <method name="floatAt" type="float" line="167">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="byte[]"/>
                </params>
                <declaration name="val" type="int" line="168"/>
            </method>
            <method name="doubleAt" type="double" line="172">
                <params>
                    <param name="index" type="int"/>
                    <param name="value" type="byte[]"/>
                </params>
                <declaration name="val" type="long" line="173"/>
            </method>
        </class>
    </source>