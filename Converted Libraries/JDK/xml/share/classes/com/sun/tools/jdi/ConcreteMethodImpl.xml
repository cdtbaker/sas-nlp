<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.jdi">
        <import package="com.sun.jdi"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.ListIterator"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collections"/>
        <import package="java.lang.ref.SoftReference"/>
        <class name="ConcreteMethodImpl" line="39">
            <extends class="MethodImpl"/>
            <comment line="47">
                A subset of the line number info that is softly cached                
            </comment>
            <javadoc line="39">
                Represents methods with method bodies.
                  That is, non-native non-abstract methods.
                  Private to MethodImpl.                
            </javadoc>
            <class name="SoftLocationXRefs" line="49">
                <comment line="51">
                    The stratum of this information                    
                </comment>
                <comment line="52">
                    Maps line number to location(s)                    
                </comment>
                <comment line="53">
                    List of locations ordered by code index                    
                </comment>
                <comment line="55">
                    Note: these do not necessarily correspond to
                     the line numbers of the first and last elements
                     in the lineLocations list. Use these only for bounds
                     checking and with lineMapper.                    
                </comment>
                <declaration name="stratumID" type="String" line="50"/>
                <declaration name="lineMapper" type="Map&lt;Integer,List&lt;Location&gt;&gt;" line="51"/>
                <declaration name="lineLocations" type="List&lt;Location&gt;" line="52"/>
                <declaration name="lowestLine" type="int" line="60"/>
                <declaration name="highestLine" type="int" line="61"/>
                <method name="SoftLocationXRefs" type="constructor" line="64">
                    <params>
                        <param name="stratumID" type="String"/>
                        <param name="lineMapper" type="Map<Integer,List<Location>>"/>
                        <param name="lineLocations" type="List<Location>"/>
                        <param name="lowestLine" type="int"/>
                        <param name="highestLine" type="int"/>
                    </params>
                </method>
            </class>
            <declaration name="location" type="Location" line="74"/>
            <declaration name="softBaseLocationXRefsRef" type="SoftReference&lt;SoftLocationXRefs&gt;" line="75"/>
            <declaration name="softOtherLocationXRefsRef" type="SoftReference&lt;SoftLocationXRefs&gt;" line="76"/>
            <declaration name="variablesRef" type="SoftReference&lt;List&lt;LocalVariable&gt;&gt;" line="77"/>
            <declaration name="absentVariableInformation" type="boolean" line="78"/>
            <declaration name="firstIndex" type="long" line="79"/>
            <declaration name="lastIndex" type="long" line="80"/>
            <declaration name="bytecodesRef" type="SoftReference&lt;byte[]&gt;" line="81"/>
            <declaration name="argSlotCount" type="int" line="82"/>
            <method name="ConcreteMethodImpl" type="constructor" line="87">
                <params>
                    <param name="vm" type="VirtualMachine"/>
                    <param name="declaringType" type="ReferenceTypeImpl"/>
                    <param name="ref" type="long"/>
                    <param name="name" type="String"/>
                    <param name="signature" type="String"/>
                    <param name="genericSignature" type="String"/>
                    <param name="modifiers" type="int"/>
                </params>
                <comment line="89">
                    The generic signature is set when this is created                    
                </comment>
            </method>
            <method name="location" type="Location" line="94">
                <scope line="95"/>
            </method>
            <method name="sourceNameFilter" type="List<Location>" line="104">
                <params>
                    <param name="list" type="List<Location>"/>
                    <param name="stratum" type="SDE.Stratum"/>
                    <param name="sourceName" type="String"/>
                </params>
                <comment line="108">
                                        
                </comment>
                <scope line="105"/>
                <scope line="107">
                    <declaration name="locs" type="List&lt;Location&gt;" line="109"/>
                    <scope line="110">
                        <scope line="111"/>
                    </scope>
                </scope>
            </method>
            <method name="allLineLocations" type="List<Location>" line="121">
                <params>
                    <param name="stratum" type="SDE.Stratum"/>
                    <param name="sourceName" type="String"/>
                </params>
                <declaration name="lineLocations" type="List&lt;Location&gt;" line="122"/>
                <scope line="124"/>
            </method>
            <method name="locationsOfLine" type="List<Location>" line="135">
                <params>
                    <param name="stratum" type="SDE.Stratum"/>
                    <param name="sourceName" type="String"/>
                    <param name="lineNumber" type="int"/>
                </params>
                <comment line="142">
                    Find the locations which match the line number
                     passed in.                    
                </comment>
                <declaration name="info" type="SoftLocationXRefs" line="136"/>
                <scope line="138"/>
                <declaration name="list" type="List&lt;Location&gt;" line="146"/>
                <scope line="148"/>
            </method>
            <method name="locationOfCodeIndex" type="Location" line="156">
                <params>
                    <param name="codeIndex" type="long"/>
                </params>
                <comment line="161">
                    Check for invalid code index.                    
                </comment>
                <scope line="157"/>
                <scope line="164"/>
            </method>
            <method name="codeIndexToLineInfo" type="LineInfo" line="173">
                <params>
                    <param name="stratum" type="SDE.Stratum"/>
                    <param name="codeIndex" type="long"/>
                </params>
                <comment line="178">
                    Check for invalid code index.                    
                </comment>
                <comment line="188">
                    Check for absent line numbers.                    
                </comment>
                <comment line="196">
                    Treat code before the beginning of the first line table
                     entry as part of the first line.  javac will generate
                     code like this for some local classes. This &quot;prolog&quot;
                     code contains assignments from locals in the enclosing
                     scope to synthetic fields in the local class.  Same for
                     other language prolog code.                    
                </comment>
                <scope line="174"/>
                <scope line="181"/>
                <declaration name="lineLocations" type="List&lt;Location&gt;" line="186"/>
                <scope line="191"/>
                <declaration name="iter" type="Iterator" line="195"/>
                <declaration name="bestMatch" type="LocationImpl" line="204"/>
                <scope line="205">
                    <declaration name="current" type="LocationImpl" line="206"/>
                    <scope line="207"/>
                </scope>
            </method>
            <method name="variables" type="List<LocalVariable>" line="216"/>
            <method name="variablesByName" type="List<LocalVariable>" line="220">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="variables" type="List&lt;LocalVariable&gt;" line="221"/>
                <declaration name="retList" type="List&lt;LocalVariable&gt;" line="223"/>
                <declaration name="iter" type="Iterator" line="224"/>
                <scope line="225">
                    <declaration name="variable" type="LocalVariable" line="226"/>
                    <scope line="227"/>
                </scope>
            </method>
            <method name="arguments" type="List<LocalVariable>" line="234">
                <declaration name="variables" type="List&lt;LocalVariable&gt;" line="235"/>
                <declaration name="retList" type="List&lt;LocalVariable&gt;" line="237"/>
                <declaration name="iter" type="Iterator" line="238"/>
                <scope line="239">
                    <declaration name="variable" type="LocalVariable" line="240"/>
                    <scope line="241"/>
                </scope>
            </method>
            <method name="bytecodes" type="byte[]" line="248">
                <comment line="260">
                    Arrays are always modifiable, so it is a little unsafe
                     to return the cached bytecodes directly; instead, we
                     make a clone at the cost of using more memory.                    
                </comment>
                <declaration name="bytecodes" type="byte[]" line="249"/>
                <scope line="251">
                    <scope line="252"/>
                    <scope line="255"/>
                </scope>
            </method>
            <method name="argSlotCount" type="int" line="268">
                <scope line="269"/>
            </method>
            <method name="getLocations" type="SoftLocationXRefs" line="275">
                <params>
                    <param name="stratum" type="SDE.Stratum"/>
                </params>
                <comment line="303">
                    location not mapped in this stratum                    
                </comment>
                <comment line="309">
                    remove unmapped and dup lines                    
                </comment>
                <comment line="314">
                    Remember the largest/smallest line number                    
                </comment>
                <comment line="328">
                    Add to the location list                    
                </comment>
                <comment line="331">
                    Add to the line -&gt; locations map                    
                </comment>
                <scope line="276"/>
                <declaration name="stratumID" type="String" line="279"/>
                <declaration name="info" type="SoftLocationXRefs" line="280"/>
                <scope line="283"/>
                <declaration name="lineLocations" type="List&lt;Location&gt;" line="287"/>
                <declaration name="lineMapper" type="Map&lt;Integer,List&lt;Location&gt;&gt;" line="288"/>
                <declaration name="lowestLine" type="int" line="289"/>
                <declaration name="highestLine" type="int" line="290"/>
                <declaration name="lastLineStratum" type="SDE.LineStratum" line="291"/>
                <declaration name="baseStratum" type="SDE.Stratum" line="292"/>
                <declaration name="it" type="Iterator" line="294"/>
                <scope line="295">
                    <declaration name="loc" type="LocationImpl" line="296"/>
                    <declaration name="baseLineNumber" type="int" line="297"/>
                    <declaration name="lineStratum" type="SDE.LineStratum" line="298"/>
                    <scope line="302"/>
                    <declaration name="lineNumber" type="int" line="307"/>
                    <scope line="311">
                        <scope line="315"/>
                        <scope line="318"/>
                        <declaration name="key" type="Integer" line="332"/>
                        <declaration name="mappedLocs" type="List&lt;Location&gt;" line="333"/>
                        <scope line="334"/>
                    </scope>
                </scope>
            </method>
            <method name="getBaseLocations" type="SoftLocationXRefs" line="349">
                <comment line="360">
                    Note: the absent info error shouldn&apos;t happen here
                     because the first and last index are always available.                    
                </comment>
                <comment line="377">
                    Some compilers will point multiple consecutive
                     lines at the same location. We need to choose
                     one of them so that we can consistently map back
                     and forth between line and location. So we choose
                     to record only the last line entry at a particular
                     location.                    
                </comment>
                <comment line="386">
                    Remember the largest/smallest line number                    
                </comment>
                <comment line="398">
                    Add to the location list                    
                </comment>
                <comment line="401">
                    Add to the line -&gt; locations map                    
                </comment>
                <comment line="412">
                    firstIndex, lastIndex, and startLocation need to be
                     retrieved only once since they are strongly referenced.                    
                </comment>
                <comment line="419">
                    The startLocation is the first one in the
                     location list if we have one;
                     otherwise, we construct a location for a
                     method start with no line info                    
                </comment>
                <declaration name="info" type="SoftLocationXRefs" line="350"/>
                <scope line="352"/>
                <declaration name="lntab" type="JDWP.Method.LineTable" line="356"/>
                <scope line="357"/>
                <scope line="359"/>
                <declaration name="count" type="int" line="367"/>
                <declaration name="lineLocations" type="List&lt;Location&gt;" line="369"/>
                <declaration name="lineMapper" type="Map&lt;Integer,List&lt;Location&gt;&gt;" line="370"/>
                <declaration name="lowestLine" type="int" line="371"/>
                <declaration name="highestLine" type="int" line="372"/>
                <scope line="373">
                    <declaration name="bci" type="long" line="374"/>
                    <declaration name="lineNumber" type="int" line="375"/>
                    <scope line="385">
                        <scope line="387"/>
                        <scope line="390"/>
                        <declaration name="loc" type="LocationImpl" line="393"/>
                        <declaration name="key" type="Integer" line="402"/>
                        <declaration name="mappedLocs" type="List&lt;Location&gt;" line="403"/>
                        <scope line="404"/>
                    </scope>
                </scope>
                <scope line="416">
                    <scope line="425"/>
                    <scope line="427"/>
                </scope>
            </method>
            <method name="getVariables1_4" type="List<LocalVariable>" line="440">
                <comment line="454">
                    Get the number of slots used by argument variables                    
                </comment>
                <comment line="461">
                    Skip &quot;this&quot; entries because they are never real
                     variables from the JLS perspective.                    
                </comment>
                <comment line="475">
                    Add to the variable list                    
                </comment>
                <declaration name="vartab" type="JDWP.Method.VariableTable" line="441"/>
                <scope line="442"/>
                <scope line="445">
                    <scope line="446"/>
                    <scope line="449"/>
                </scope>
                <declaration name="count" type="int" line="456"/>
                <declaration name="variables" type="List&lt;LocalVariable&gt;" line="457"/>
                <scope line="458">
                    <declaration name="si" type="JDWP.Method.VariableTable.SlotInfo" line="459"/>
                    <scope line="465">
                        <declaration name="scopeStart" type="Location" line="466"/>
                        <declaration name="scopeEnd" type="Location" line="468"/>
                        <declaration name="variable" type="LocalVariable" line="471"/>
                    </scope>
                </scope>
            </method>
            <method name="getVariables1" type="List<LocalVariable>" line="482">
                <comment line="501">
                    Get the number of slots used by argument variables                    
                </comment>
                <comment line="508">
                    Skip &quot;this&quot; entries because they are never real
                     variables from the JLS perspective.                    
                </comment>
                <comment line="523">
                    Add to the variable list                    
                </comment>
                <scope line="484"/>
                <declaration name="vartab" type="JDWP.Method.VariableTableWithGeneric" line="488"/>
                <scope line="489"/>
                <scope line="492">
                    <scope line="493"/>
                    <scope line="496"/>
                </scope>
                <declaration name="count" type="int" line="503"/>
                <declaration name="variables" type="List&lt;LocalVariable&gt;" line="504"/>
                <scope line="505">
                    <declaration name="si" type="JDWP.Method.VariableTableWithGeneric.SlotInfo" line="506"/>
                    <scope line="512">
                        <declaration name="scopeStart" type="Location" line="513"/>
                        <declaration name="scopeEnd" type="Location" line="515"/>
                        <declaration name="variable" type="LocalVariable" line="518"/>
                    </scope>
                </scope>
            </method>
            <method name="getVariables" type="List<LocalVariable>" line="530">
                <scope line="531"/>
                <declaration name="variables" type="List&lt;LocalVariable&gt;" line="535"/>
                <scope line="537"/>
            </method>
        </class>
    </source>