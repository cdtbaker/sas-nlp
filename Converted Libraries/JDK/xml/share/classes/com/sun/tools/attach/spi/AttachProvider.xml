<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.attach.spi">
        <import package="java.io.IOException"/>
        <import package="java.util.Collections"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="com.sun.tools.attach.VirtualMachine"/>
        <import package="com.sun.tools.attach.VirtualMachineDescriptor"/>
        <import package="com.sun.tools.attach.AttachPermission"/>
        <import package="com.sun.tools.attach.AttachNotSupportedException"/>
        <import package="java.util.ServiceLoader"/>
        <class name="AttachProvider" line="39">
            <javadoc line="39">
                Attach provider class for attaching to a Java virtual machine.
                  &lt;p&gt; An attach provider is a concrete subclass of this class that has a
                  zero-argument constructor and implements the abstract methods specified
                  below. &lt;/p&gt;
                  &lt;p&gt; An attach provider implementation is typically tied to a Java virtual
                  machine implementation, version, or even mode of operation. That is, a specific
                  provider implementation will typically only be capable of attaching to
                  a specific Java virtual machine implementation or version. For example, Sun&apos;s
                  JDK implementation ships with provider implementations that can only attach to
                  Sun&apos;s &lt;i&gt;HotSpot&lt;/i&gt; virtual machine. In general, if an environment
                  consists of Java virtual machines of different versions and from different
                  vendors then there will be an attach provider implementation for each
                  &lt;i&gt;family&lt;/i&gt; of implementations or versions. &lt;/p&gt;
                  &lt;p&gt; An attach provider is identified by its {@link #name &lt;i&gt;name&lt;/i&gt;} and{@link #type &lt;i&gt;type&lt;/i&gt;}. The &lt;i&gt;name&lt;/i&gt; is typically, but not required to
                  be, a name that corresponds to the VM vendor. The Sun JDK implementation,
                  for example, ships with attach providers that use the name &lt;i&gt;&quot;sun&quot;&lt;/i&gt;. The
                  &lt;i&gt;type&lt;/i&gt; typically corresponds to the attach mechanism. For example, an
                  implementation that uses the Doors inter-process communication mechanism
                  might use the type &lt;i&gt;&quot;doors&quot;&lt;/i&gt;. The purpose of the name and type is to
                  identify providers in environments where there are multiple providers
                  installed. &lt;/p&gt;
                  &lt;p&gt; AttachProvider implementations are loaded and instantiated at the first
                  invocation of the {@link #providers() providers} method. This method
                  attempts to load all provider implementations that are installed on the
                  platform. &lt;/p&gt;
                  &lt;p&gt; All of the methods in this class are safe for use by multiple
                  concurrent threads. &lt;/p&gt;                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="lock" type="Object" line="79"/>
            <declaration name="providers" type="List&lt;AttachProvider&gt;" line="80"/>
            <javadoc line="82">
                Initializes a new instance of this class.  &lt;/p&gt;                
                <throws>
                    SecurityExceptionIf a security manager has been installed and it denies{@link com.sun.tools.attach.AttachPermission AttachPermission}&lt;tt&gt;(&quot;createAttachProvider&quot;)&lt;/tt&gt;                    
                </throws>
            </javadoc>
            <method name="AttachProvider" type="constructor" line="90">
                <declaration name="sm" type="SecurityManager" line="91"/>
            </method>
            <method name="name" type="String" line="96"/>
            <javadoc line="96">
                Return this provider&apos;s name. &lt;/p&gt;                
                <return>
                    The name of this provider                    
                </return>
            </javadoc>
            <method name="type" type="String" line="103"/>
            <javadoc line="103">
                Return this provider&apos;s type. &lt;/p&gt;                
                <return>
                    The type of this provider                    
                </return>
            </javadoc>
            <method name="attachVirtualMachine" type="VirtualMachine" line="110"/>
            <javadoc line="110">
                Attaches to a Java virtual machine.
                  &lt;p&gt; A Java virtual machine is identified by an abstract identifier. The
                  nature of this identifier is platform dependent but in many cases it will be the
                  string representation of the process identifier (or pid). &lt;/p&gt;
                  &lt;p&gt; This method parses the identifier and maps the identifier to a Java
                  virtual machine (in an implementation dependent manner). If the identifier
                  cannot be parsed by the provider then an {@link com.sun.tools.attach.AttachNotSupportedException AttachNotSupportedException}is thrown. Once parsed this method attempts to attach to the Java virtual machine.
                  If the provider detects that the identifier corresponds to a Java virtual machine
                  that does not exist, or it corresponds to a Java virtual machine that does not support
                  the attach mechanism implemented by this provider, or it detects that the
                  Java virtual machine is a version to which this provider cannot attach, then
                  an &lt;code&gt;AttachNotSupportedException&lt;/code&gt; is thrown. &lt;/p&gt;                
                <param>
                    idThe abstract identifier that identifies the Java virtual machine.                    
                </param>
                <return>
                    VirtualMachine representing the target virtual machine.                    
                </return>
                <throws>
                    SecurityExceptionIf a security manager has been installed and it denies{@link com.sun.tools.attach.AttachPermission AttachPermission}&lt;tt&gt;(&quot;attachVirtualMachine&quot;)&lt;/tt&gt;, or other permission
                      required by the implementation.                    
                </throws>
                <throws>
                    AttachNotSupportedExceptionIf the identifier cannot be parsed, or it corresponds to
                      to a Java virtual machine that does not exist, or it
                      corresponds to a Java virtual machine which this
                      provider cannot attach.                    
                </throws>
                <throws>
                    IOExceptionIf some other I/O error occurs                    
                </throws>
                <throws>
                    NullPointerExceptionIf &lt;code&gt;id&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;                    
                </throws>
            </javadoc>
            <javadoc line="154">
                Attaches to a Java virtual machine.
                  &lt;p&gt; A Java virtual machine can be described using a {@link com.sun.tools.attach.VirtualMachineDescriptor VirtualMachineDescriptor}.
                  This method invokes the descriptor&apos;s {@link com.sun.tools.attach.VirtualMachineDescriptor#provider() provider()} method
                  to check that it is equal to this provider. It then attempts to attach to the
                  Java virtual machine.                
                <param>
                    vmdThe virtual machine descriptor                    
                </param>
                <return>
                    VirtualMachine representing the target virtual machine.                    
                </return>
                <throws>
                    SecurityExceptionIf a security manager has been installed and it denies{@link com.sun.tools.attach.AttachPermission AttachPermission}&lt;tt&gt;(&quot;attachVirtualMachine&quot;)&lt;/tt&gt;, or other permission
                      required by the implementation.                    
                </throws>
                <throws>
                    AttachNotSupportedExceptionIf the descriptor&apos;s {@link com.sun.tools.attach.VirtualMachineDescriptor#provider() provider()} method
                      returns a provider that is not this provider, or it does not correspond
                      to a Java virtual machine to which this provider can attach.                    
                </throws>
                <throws>
                    IOExceptionIf some other I/O error occurs                    
                </throws>
                <throws>
                    NullPointerExceptionIf &lt;code&gt;vmd&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;                    
                </throws>
            </javadoc>
            <method name="attachVirtualMachine" type="VirtualMachine" line="189">
                <params>
                    <param name="vmd" type="VirtualMachineDescriptor"/>
                </params>
                <scope line="190"/>
            </method>
            <method name="listVirtualMachines" type="List<VirtualMachineDescriptor>" line="196"/>
            <javadoc line="196">
                Lists the Java virtual machines known to this provider.
                  &lt;p&gt; This method returns a list of {@link com.sun.tools.attach.VirtualMachineDescriptor} elements. Each
                  &lt;code&gt;VirtualMachineDescriptor&lt;/code&gt; describes a Java virtual machine
                  to which this provider can &lt;i&gt;potentially&lt;/i&gt; attach.  There isn&apos;t any
                  guarantee that invoking {@link #attachVirtualMachine(VirtualMachineDescriptor)attachVirtualMachine} on each descriptor in the list will succeed.                
                <return>
                    The list of virtual machine descriptors which describe the
                      Java virtual machines known to this provider (may be empty).                    
                </return>
            </javadoc>
            <javadoc line="212">
                Returns a list of the installed attach providers.
                  &lt;p&gt; An AttachProvider is installed on the platform if:
                  &lt;ul&gt;
                  &lt;li&gt;&lt;p&gt;It is installed in a JAR file that is visible to the defining
                  class loader of the AttachProvider type (usually, but not required
                  to be, the {@link java.lang.ClassLoader#getSystemClassLoader system
                  class loader}).&lt;/p&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;p&gt;The JAR file contains a provider configuration named
                  &lt;tt&gt;com.sun.tools.attach.spi.AttachProvider&lt;/tt&gt; in the resource directory
                  &lt;tt&gt;META-INF/services&lt;/tt&gt;. &lt;/p&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;p&gt;The provider configuration file lists the full-qualified class
                  name of the AttachProvider implementation. &lt;/p&gt;&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;p&gt; The format of the provider configuration file is one fully-qualified
                  class name per line. Space and tab characters surrounding each class name,
                  as well as blank lines are ignored. The comment character is
                  &lt;tt&gt;&apos;#&apos;&lt;/tt&gt; (&lt;tt&gt;0x23&lt;/tt&gt;), and on each line all characters following
                  the first comment character are ignored. The file must be encoded in
                  UTF-8. &lt;/p&gt;
                  &lt;p&gt; AttachProvider implementations are loaded and instantiated
                  (using the zero-arg constructor) at the first invocation of this method.
                  The list returned by the first invocation of this method is the list
                  of providers. Subsequent invocations of this method return a list of the same
                  providers. The list is unmodifable.&lt;/p&gt;                
                <return>
                    A list of the installed attach providers.                    
                </return>
            </javadoc>
            <method name="providers" type="List<AttachProvider>" line="246">
                <comment line="266">
                    Ignore errors and exceptions                    
                </comment>
                <scope line="247">
                    <scope line="248">
                        <declaration name="providerLoader" type="ServiceLoader&lt;AttachProvider&gt;" line="251"/>
                        <declaration name="i" type="Iterator&lt;AttachProvider&gt;" line="255"/>
                        <scope line="257">
                            <scope line="258"/>
                            <scope line="260">
                                <scope line="261">
                                    <declaration name="td" type="ThreadDeath" line="262"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
        </class>
    </source>