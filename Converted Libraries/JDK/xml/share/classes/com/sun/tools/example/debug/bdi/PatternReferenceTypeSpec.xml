<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.example.debug.bdi">
        <import package="com.sun.jdi"/>
        <import package="java.util.StringTokenizer"/>
        <class name="PatternReferenceTypeSpec" line="31">
            <implements interface="ReferenceTypeSpec"/>
            <declaration name="isWild" type="boolean" line="32"/>
            <declaration name="classId" type="String" line="33"/>
            <method name="PatternReferenceTypeSpec" type="constructor" line="37">
                <params>
                    <param name="classId" type="String"/>
                </params>
                <comment line="37">
                    throws ClassNotFoundException                    
                </comment>
                <comment line="39">
                    checkClassName(classId);                    
                </comment>
                <scope line="40"/>
                <scope line="42"/>
            </method>
            <javadoc line="47">
                Does the specified ReferenceType match this spec.                
            </javadoc>
            <method name="matches" type="boolean" line="51">
                <params>
                    <param name="refType" type="ReferenceType"/>
                </params>
                <scope line="52"/>
                <scope line="54"/>
            </method>
            <method name="hashCode" type="int" line="60"/>
            <method name="equals" type="boolean" line="65">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="66">
                    <declaration name="spec" type="PatternReferenceTypeSpec" line="67"/>
                </scope>
                <scope line="70"/>
            </method>
            <method name="checkClassName" type="void" line="75">
                <params>
                    <param name="className" type="String"/>
                </params>
                <comment line="77">
                    Do stricter checking of class name validity on deferred
                      because if the name is invalid, it will
                     never match a future loaded class, and we&apos;ll be silent
                     about it.                    
                </comment>
                <comment line="85">
                    Each dot-separated piece must be a valid identifier
                     and the first token can also be &quot;*&quot;. (Note that
                     numeric class ids are not permitted. They must
                     match a loaded class.)                    
                </comment>
                <declaration name="tokenizer" type="StringTokenizer" line="80"/>
                <declaration name="first" type="boolean" line="81"/>
                <scope line="82">
                    <declaration name="token" type="String" line="83"/>
                    <scope line="88"/>
                </scope>
            </method>
            <method name="toString" type="String" line="96"/>
        </class>
    </source>