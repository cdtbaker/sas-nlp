<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.tools.extcheck">
        <import package="java.util"/>
        <import package="java.net.MalformedURLException"/>
        <import package="java.util.Vector"/>
        <import package="java.io"/>
        <import package="java.util.StringTokenizer"/>
        <import package="java.net.URL"/>
        <import package="java.util.jar.JarFile"/>
        <import package="java.util.jar.JarEntry"/>
        <import package="java.util.jar.Manifest"/>
        <import package="java.util.jar.Attributes"/>
        <import package="java.util.jar.Attributes.Name"/>
        <import package="java.net.URLConnection"/>
        <import package="java.security.Permission"/>
        <import package="java.util.jar"/>
        <import package="java.net.JarURLConnection"/>
        <import package="sun.net.www.ParseUtil"/>
        <class name="ExtCheck" line="18">
            <javadoc line="18">
                ExtCheck reports on clashes between a specified (target)
                  jar file and jar files already installed in the extensions
                  directory.                
                <author>
                    Benedict Gomes                    
                </author>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <declaration name="DEBUG" type="boolean" line="26"/>
            <declaration name="targetSpecTitle" type="String" line="27"/>
            <declaration name="targetSpecVersion" type="String" line="28"/>
            <declaration name="targetSpecVendor" type="String" line="29"/>
            <declaration name="targetImplTitle" type="String" line="30"/>
            <declaration name="targetImplVersion" type="String" line="31"/>
            <declaration name="targetImplVendor" type="String" line="32"/>
            <declaration name="targetsealed" type="String" line="33"/>
            <declaration name="verboseFlag" type="boolean" line="34"/>
            <method name="create" type="ExtCheck" line="35">
                <params>
                    <param name="targetFile" type="File"/>
                    <param name="verbose" type="boolean"/>
                </params>
            </method>
            <method name="ExtCheck" type="constructor" line="38">
                <params>
                    <param name="targetFile" type="File"/>
                    <param name="verbose" type="boolean"/>
                </params>
            </method>
            <method name="investigateTarget" type="void" line="42">
                <params>
                    <param name="targetFile" type="File"/>
                </params>
                <declaration name="targetManifest" type="Manifest" line="44"/>
                <scope line="45">
                    <declaration name="canon" type="File" line="46"/>
                    <declaration name="url" type="URL" line="47"/>
                    <scope line="48">
                        <declaration name="loader" type="JarLoader" line="49"/>
                        <declaration name="jarFile" type="JarFile" line="50"/>
                    </scope>
                </scope>
                <scope line="54"/>
                <scope line="57"/>
                <declaration name="attr" type="Attributes" line="61"/>
                <scope line="62"/>
                <scope line="71"/>
            </method>
            <javadoc line="83">
                Verify that none of the jar files in the install directory
                  has the same specification-title and the same or a newer
                  specification-version.                
                <return>
                    Return true if the target jar file is newer
                      than any installed jar file with the same specification-title,
                      otherwise return false                    
                </return>
            </javadoc>
            <method name="checkInstalledAgainstTarget" type="boolean" line="91">
                <declaration name="s" type="String" line="92"/>
                <declaration name="dirs" type="File[]" line="93"/>
                <scope line="94">
                    <declaration name="st" type="StringTokenizer" line="95"/>
                    <declaration name="count" type="int" line="96"/>
                    <scope line="98"/>
                </scope>
                <scope line="102"/>
                <declaration name="result" type="boolean" line="105"/>
                <scope line="106">
                    <declaration name="files" type="String[]" line="107"/>
                    <scope line="108">
                        <scope line="109">
                            <scope line="110">
                                <declaration name="f" type="File" line="111"/>
                                <declaration name="canon" type="File" line="112"/>
                                <declaration name="url" type="URL" line="113"/>
                                <scope line="114"/>
                            </scope>
                            <scope line="118"/>
                            <scope line="121"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="127"/>
                <scope line="130"/>
            </method>
            <javadoc line="135">
                Recursively verify that a jar file, and any urls mentioned
                  in its class path, do not conflict with the target jar file.                
                <param>
                    indent is the current nesting level                    
                </param>
                <param>
                    url is the path to the jar file being checked.                    
                </param>
                <return>
                    true if there is no newer URL, otherwise false                    
                </return>
            </javadoc>
            <method name="checkURLRecursively" type="boolean" line="142">
                <params>
                    <param name="indent" type="int"/>
                    <param name="url" type="URL"/>
                </params>
                <declaration name="jarloader" type="JarLoader" line="144"/>
                <declaration name="j" type="JarFile" line="145"/>
                <declaration name="man" type="Manifest" line="146"/>
                <scope line="147">
                    <declaration name="attr" type="Attributes" line="148"/>
                    <scope line="149">
                        <declaration name="title" type="String" line="150"/>
                        <declaration name="version" type="String" line="151"/>
                        <declaration name="vendor" type="String" line="152"/>
                        <declaration name="implTitle" type="String" line="153"/>
                        <declaration name="implVersion" type="String" line="154"/>
                        <declaration name="implVendor" type="String" line="155"/>
                        <declaration name="sealed" type="String" line="156"/>
                        <scope line="157">
                            <scope line="158">
                                <scope line="159">
                                    <scope line="160"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <declaration name="result" type="boolean" line="175"/>
                <declaration name="loaderList" type="URL[]" line="176"/>
                <scope line="177">
                    <scope line="178">
                        <scope line="179">
                            <declaration name="res" type="boolean" line="180"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="187">
                See comment in method java.lang.Package.isCompatibleWith.
                  Return true if already is not older than target. i.e. the
                  target file may be superseded by a file already installed                
            </javadoc>
            <method name="isNotOlderThan" type="boolean" line="192">
                <params>
                    <param name="already" type="String"/>
                    <param name="target" type="String"/>
                </params>
                <scope line="193"/>
                <declaration name="dtok" type="StringTokenizer" line="196"/>
                <declaration name="stok" type="StringTokenizer" line="197"/>
                <scope line="198">
                    <declaration name="dver" type="int" line="199"/>
                    <declaration name="sver" type="int" line="200"/>
                    <scope line="201"/>
                    <scope line="205"/>
                </scope>
            </method>
            <javadoc line="216">
                Prints out message if the verboseFlag is set                
            </javadoc>
            <method name="verboseMessage" type="void" line="219">
                <params>
                    <param name="message" type="String"/>
                </params>
                <scope line="220"/>
            </method>
            <method name="generalMessage" type="void" line="224">
                <params>
                    <param name="message" type="String"/>
                </params>
            </method>
            <javadoc line="227">
                Throws a RuntimeException with a message describing the error.                
            </javadoc>
            <method name="error" type="void" line="230">
                <params>
                    <param name="message" type="String"/>
                </params>
            </method>
            <class name="JarLoader" line="233">
                <javadoc line="233">
                    Inner class used to represent a loader of resources and classes
                      from a base URL. Somewhat modified version of code in
                      sun.misc.URLClassPath.JarLoader                    
                </javadoc>
                <declaration name="base" type="URL" line="239"/>
                <declaration name="jar" type="JarFile" line="240"/>
                <declaration name="csu" type="URL" line="241"/>
                <method name="JarLoader" type="constructor" line="242">
                    <params>
                        <param name="url" type="URL"/>
                    </params>
                    <declaration name="urlName" type="String" line="243"/>
                    <declaration name="tmpBaseURL" type="URL" line="244"/>
                    <scope line="245"/>
                    <scope line="250"/>
                    <scope line="253"/>
                </method>
                <method name="getBaseURL" type="URL" line="258"/>
                <method name="getJarFile" type="JarFile" line="261"/>
                <method name="findJarFile" type="JarFile" line="264">
                    <params>
                        <param name="url" type="URL"/>
                    </params>
                    <scope line="265">
                        <declaration name="path" type="String" line="266"/>
                        <declaration name="file" type="File" line="267"/>
                        <scope line="268"/>
                    </scope>
                    <declaration name="uc" type="URLConnection" line="273"/>
                </method>
                <method name="getClassPath" type="URL[]" line="276">
                    <declaration name="man" type="Manifest" line="277"/>
                    <scope line="278">
                        <declaration name="attr" type="Attributes" line="279"/>
                        <scope line="280">
                            <declaration name="value" type="String" line="281"/>
                            <scope line="282"/>
                        </scope>
                    </scope>
                </method>
                <method name="parseClassPath" type="URL[]" line="289">
                    <params>
                        <param name="base" type="URL"/>
                        <param name="value" type="String"/>
                    </params>
                    <declaration name="st" type="StringTokenizer" line="290"/>
                    <declaration name="urls" type="URL[]" line="291"/>
                    <declaration name="i" type="int" line="292"/>
                    <scope line="293">
                        <declaration name="path" type="String" line="294"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>