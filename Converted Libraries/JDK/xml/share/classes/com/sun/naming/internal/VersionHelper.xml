<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.naming.internal">
        <import package="java.io.InputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.net.MalformedURLException"/>
        <import package="java.net.URL"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.StringTokenizer"/>
        <import package="java.util.Vector"/>
        <import package="javax.naming.NamingEnumeration"/>
        <class name="VersionHelper" line="38">
            <comment line="72">
                Disallow anyone from creating one of these.                
            </comment>
            <comment line="91">
                Returns a JNDI property from the system properties.  Returns
                 null if the property is not set, or if there is no permission
                 to read it.                
            </comment>
            <comment line="98">
                Reads each property in PROPS from the system properties, and
                 returns their values -- in order -- in an array.  For each
                 unset property, the corresponding array element is set to null.
                 Returns null if there is no permission to call System.getProperties().                
            </comment>
            <comment line="106">
                Returns the resource of a given name associated with a particular
                 class (never null), or null if none can be found.                
            </comment>
            <comment line="112">
                Returns an input stream for a file in &lt;java.home&gt;lib,
                 or null if it cannot be located or opened.
                
                 @param filename  The file name, sans directory.                
            </comment>
            <comment line="120">
                Returns an enumeration (never null) of InputStreams of the
                 resources of a given name associated with a particular class
                 loader.  Null represents the bootstrap class loader in some
                 Java implementations.                
            </comment>
            <comment line="129">
                Returns the context class loader associated with the current thread.
                 Null indicates the bootstrap class loader in some Java implementations.
                
                 @throws SecurityException if the class loader is not accessible.                
            </comment>
            <javadoc line="38">
                VersionHelper was used by JNDI to accommodate differences between
                  JDK 1.1.x and the Java 2 platform. As this is no longer necessary
                  since JNDI&apos;s inclusion in the platform, this class currently
                  serves as a set of utilities for performing system-level things,
                  such as class-loading and reading system properties.                
                <author>
                    Rosanna Lee                    
                </author>
                <author>
                    Scott Seligman                    
                </author>
            </javadoc>
            <declaration name="helper" type="VersionHelper" line="50"/>
            <declaration name="PROPS" type="String[]" line="52"/>
            <declaration name="INITIAL_CONTEXT_FACTORY" type="int" line="63"/>
            <declaration name="OBJECT_FACTORIES" type="int" line="64"/>
            <declaration name="URL_PKG_PREFIXES" type="int" line="65"/>
            <declaration name="STATE_FACTORIES" type="int" line="66"/>
            <declaration name="PROVIDER_URL" type="int" line="67"/>
            <declaration name="DNS_URL" type="int" line="68"/>
            <declaration name="CONTROL_FACTORIES" type="int" line="69"/>
            <method name="VersionHelper" type="constructor" line="71"/>
            <scope line="73"/>
            <method name="getVersionHelper" type="VersionHelper" line="77"/>
            <method name="loadClass" type="Class" line="81"/>
            <method name="loadClass" type="Class" line="84"/>
            <method name="loadClass" type="Class" line="87"/>
            <method name="getJndiProperty" type="String" line="95"/>
            <method name="getJndiProperties" type="String[]" line="103"/>
            <method name="getResourceAsStream" type="InputStream" line="109"/>
            <method name="getJavaHomeLibStream" type="InputStream" line="117"/>
            <method name="getResources" type="NamingEnumeration" line="125"/>
            <method name="getContextClassLoader" type="ClassLoader" line="134"/>
            <method name="getUrlArray" type="URL[]" line="137">
                <params>
                    <param name="codebase" type="String"/>
                </params>
                <comment line="139">
                    Parse codebase into separate URLs                    
                </comment>
                <declaration name="parser" type="StringTokenizer" line="139"/>
                <declaration name="vec" type="Vector" line="140"/>
                <scope line="141"/>
                <declaration name="url" type="String[]" line="144"/>
                <scope line="145"/>
                <declaration name="urlArray" type="URL[]" line="149"/>
                <scope line="150"/>
            </method>
        </class>
    </source>