<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.naming.internal">
        <import package="java.io.InputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.net.MalformedURLException"/>
        <import package="java.net.URLClassLoader"/>
        <import package="java.net.URL"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.security.PrivilegedActionException"/>
        <import package="java.security.PrivilegedExceptionAction"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.Hashtable"/>
        <import package="java.util.NoSuchElementException"/>
        <import package="java.util.Properties"/>
        <import package="javax.naming"/>
        <class name="VersionHelper12" line="16">
            <extends class="VersionHelper"/>
            <javadoc line="16">
                VersionHelper was used by JNDI to accommodate differences between
                  JDK 1.1.x and the Java 2 platform. As this is no longer necessary
                  since JNDI&apos;s inclusion in the platform, this class currently
                  serves as a set of utilities for performing system-level things,
                  such as class-loading and reading system properties.                
                <author>
                    Rosanna Lee                    
                </author>
                <author>
                    Scott Seligman                    
                </author>
            </javadoc>
            <declaration name="getSystemPropsFailed" type="boolean" line="26"/>
            <method name="VersionHelper12" type="constructor" line="27"/>
            <method name="loadClass" type="Class" line="29">
                <params>
                    <param name="className" type="String"/>
                </params>
                <declaration name="cl" type="ClassLoader" line="30"/>
            </method>
            <javadoc line="33">
                Package private.                
            </javadoc>
            <method name="loadClass" type="Class" line="36">
                <params>
                    <param name="className" type="String"/>
                    <param name="cl" type="ClassLoader"/>
                </params>
            </method>
            <javadoc line="39">
                @param className A non-null fully qualified class name.                
                <param>
                    codebase A non-null, space-separated list of URL strings.                    
                </param>
            </javadoc>
            <method name="loadClass" type="Class" line="43">
                <params>
                    <param name="className" type="String"/>
                    <param name="codebase" type="String"/>
                </params>
                <declaration name="cl" type="ClassLoader" line="44"/>
                <declaration name="parent" type="ClassLoader" line="45"/>
            </method>
            <method name="getJndiProperty" type="String" line="49">
                <params>
                    <param name="i" type="int"/>
                </params>
                <anonymous_class line="50">
                    <method name="run" type="Object" line="51">
                        <scope line="52"/>
                        <scope line="55"/>
                    </method>
                </anonymous_class>
            </method>
            <method name="getJndiProperties" type="String[]" line="62">
                <scope line="63"/>
                <anonymous_class line="66">
                    <method name="run" type="Object" line="67">
                        <scope line="68"/>
                        <scope line="71"/>
                    </method>
                </anonymous_class>
                <declaration name="sysProps" type="Properties" line="66"/>
                <scope line="78"/>
                <declaration name="jProps" type="String[]" line="81"/>
                <scope line="82"/>
            </method>
            <method name="getResourceAsStream" type="InputStream" line="87">
                <params>
                    <param name="c" type="Class"/>
                    <param name="name" type="String"/>
                </params>
                <anonymous_class line="88">
                    <method name="run" type="Object" line="89"/>
                </anonymous_class>
            </method>
            <method name="getJavaHomeLibStream" type="InputStream" line="95">
                <params>
                    <param name="filename" type="String"/>
                </params>
                <anonymous_class line="96">
                    <method name="run" type="Object" line="97">
                        <scope line="98">
                            <declaration name="javahome" type="String" line="99"/>
                            <scope line="100"/>
                            <declaration name="pathname" type="String" line="103"/>
                        </scope>
                        <scope line="106"/>
                    </method>
                </anonymous_class>
            </method>
            <method name="getResources" type="NamingEnumeration" line="113">
                <params>
                    <param name="cl" type="ClassLoader"/>
                    <param name="name" type="String"/>
                </params>
                <declaration name="urls" type="Enumeration" line="114"/>
                <scope line="115">
                    <anonymous_class line="116">
                        <method name="run" type="Object" line="117"/>
                    </anonymous_class>
                </scope>
                <scope line="123"/>
            </method>
            <method name="getContextClassLoader" type="ClassLoader" line="128">
                <anonymous_class line="129">
                    <method name="run" type="Object" line="130"/>
                </anonymous_class>
            </method>
            <class name="InputStreamEnumeration" line="136">
                <implements interface="NamingEnumeration"/>
                <javadoc line="136">
                    Given an enumeration of URLs, an instance of this class represents
                      an enumeration of their InputStreams.  Each operation on the URL
                      enumeration is performed within a doPrivileged block.
                      This is used to enumerate the resources under a foreign codebase.
                      This class is not MT-safe.                    
                </javadoc>
                <declaration name="urls" type="Enumeration" line="144"/>
                <declaration name="nextElement" type="Object" line="145"/>
                <method name="InputStreamEnumeration" type="constructor" line="146">
                    <params>
                        <param name="urls" type="Enumeration"/>
                    </params>
                </method>
                <method name="getNextElement" type="Object" line="149">
                    <anonymous_class line="150">
                        <method name="run" type="Object" line="151">
                            <scope line="152">
                                <scope line="153"/>
                                <scope line="156"/>
                            </scope>
                        </method>
                    </anonymous_class>
                </method>
                <method name="hasMore" type="boolean" line="164">
                    <scope line="165"/>
                </method>
                <method name="hasMoreElements" type="boolean" line="171"/>
                <method name="next" type="Object" line="174">
                    <scope line="175">
                        <declaration name="res" type="Object" line="176"/>
                    </scope>
                    <scope line="180"/>
                </method>
                <method name="nextElement" type="Object" line="184"/>
                <method name="close" type="void" line="187"/>
            </class>
        </class>
    </source>