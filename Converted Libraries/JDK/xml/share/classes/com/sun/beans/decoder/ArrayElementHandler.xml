<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.beans.decoder">
        <import package="java.lang.reflect.Array"/>
        <class name="ArrayElementHandler" line="3">
            <extends class="NewElementHandler"/>
            <javadoc line="3">
                This class is intended to handle &amp;lt;array&amp;gt; element,
                  that is used to array creation.
                  The {@code length} attribute specifies the length of the array.
                  The {@code class} attribute specifies the elements type.
                  The {@link Object} type is used by default.
                  For example:&lt;pre&gt;
                  &amp;lt;array length=&quot;10&quot;/&amp;gt;&lt;/pre&gt;
                  is equivalent to {@code new Component[10]} in Java code.
                  The {@code set} and {@code get} methods,
                  as defined in the {@link java.util.List} interface,
                  can be used as if they could be applied to array instances.
                  The {@code index} attribute can thus be used with arrays.
                  For example:&lt;pre&gt;
                  &amp;lt;array length=&quot;3&quot; class=&quot;java.lang.String&quot;&amp;gt;
                  &amp;lt;void index=&quot;1&quot;&amp;gt;
                  &amp;lt;string&amp;gt;Hello, world&amp;lt;/string&amp;gt;
                  &amp;lt;/void&amp;gt;
                  &amp;lt;/array&amp;gt;&lt;/pre&gt;
                  is equivalent to the following Java code:&lt;pre&gt;
                  String[] s = new String[3];
                  s[1] = &quot;Hello, world&quot;;&lt;/pre&gt;
                  It is possible to omit the {@code length} attribute and
                  specify the values directly, without using {@code void} tags.
                  The length of the array is equal to the number of values specified.
                  For example:&lt;pre&gt;
                  &amp;lt;array id=&quot;array&quot; class=&quot;int&quot;&amp;gt;
                  &amp;lt;int&amp;gt;123&amp;lt;/int&amp;gt;
                  &amp;lt;int&amp;gt;456&amp;lt;/int&amp;gt;
                  &amp;lt;/array&amp;gt;&lt;/pre&gt;
                  is equivalent to {@code} int[] array = 
                  123, 456}} in Java code.
                  &lt;p&gt;The following atributes are supported:
                  &lt;dl&gt;
                  &lt;dt&gt;length
                  &lt;dd&gt;the array length
                  &lt;dt&gt;class
                  &lt;dd&gt;the type of object for instantiation
                  &lt;dt&gt;id
                  &lt;dd&gt;the identifier of the variable that is intended to store the result
                  &lt;/dl&gt;                
                <since>
                    1.7                    
                </since>
                <author>
                    Sergey A. Malenkov                    
                </author>
            </javadoc>
            <declaration name="length" type="Integer" line="48"/>
            <javadoc line="49">
                Parses attributes of the element.
                  The following atributes are supported:
                  &lt;dl&gt;
                  &lt;dt&gt;length
                  &lt;dd&gt;the array length
                  &lt;dt&gt;class
                  &lt;dd&gt;the type of object for instantiation
                  &lt;dt&gt;id
                  &lt;dd&gt;the identifier of the variable that is intended to store the result
                  &lt;/dl&gt;                
                <param>
                    name   the attribute name                    
                </param>
                <param>
                    value  the attribute value                    
                </param>
            </javadoc>
            <method name="addAttribute" type="void" line="63">
                <params>
                    <param name="name" type="String"/>
                    <param name="value" type="String"/>
                </params>
                <scope line="64"/>
                <scope line="67"/>
            </method>
            <javadoc line="71">
                Calculates the value of this element
                  if the lentgh attribute is set.                
            </javadoc>
            <method name="startElement" type="void" line="75">
                <scope line="76"/>
            </method>
            <javadoc line="80">
                Creates an instance of the array.                
                <param>
                    type  the base class                    
                </param>
                <param>
                    args  the array of arguments                    
                </param>
                <return>
                    the value of this element                    
                </return>
            </javadoc>
            <method name="getValueObject" type="ValueObject" line="86">
                <params>
                    <param name="type" type="Class&lt;?&gt;"/>
                    <param name="args" type="Object[]"/>
                </params>
                <scope line="87"/>
                <scope line="90"/>
                <declaration name="array" type="Object" line="93"/>
                <scope line="94"/>
            </method>
        </class>
    </source>