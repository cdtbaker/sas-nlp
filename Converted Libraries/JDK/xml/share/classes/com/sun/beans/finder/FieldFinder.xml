<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.beans.finder">
        <import package="java.lang.reflect.Field"/>
        <import package="java.lang.reflect.Modifier"/>
        <class name="FieldFinder" line="30">
            <javadoc line="30">
                This utility class provides {@code static} methods
                  to find a public field with specified name
                  in specified class.                
                <since>
                    1.7                    
                </since>
                <author>
                    Sergey A. Malenkov                    
                </author>
            </javadoc>
            <javadoc line="41">
                Finds public field (static or non-static)
                  that is declared in public class.                
                <param>
                    type  the class that can have field                    
                </param>
                <param>
                    name  the name of field to find                    
                </param>
                <return>
                    object that represents found field                    
                </return>
                <throws>
                    NoSuchFieldException if field is not found                    
                </throws>
                <see>
                    Class#getField                    
                </see>
            </javadoc>
            <method name="findField" type="Field" line="51">
                <params>
                    <param name="type" type="Class<?>"/>
                    <param name="name" type="String"/>
                </params>
                <scope line="52"/>
                <declaration name="field" type="Field" line="55"/>
                <scope line="56"/>
                <scope line="59"/>
            </method>
            <javadoc line="65">
                Finds public non-static field
                  that is declared in public class.                
                <param>
                    type  the class that can have field                    
                </param>
                <param>
                    name  the name of field to find                    
                </param>
                <return>
                    object that represents found field                    
                </return>
                <throws>
                    NoSuchFieldException if field is not found                    
                </throws>
                <see>
                    Class#getField                    
                </see>
            </javadoc>
            <method name="findInstanceField" type="Field" line="75">
                <params>
                    <param name="type" type="Class<?>"/>
                    <param name="name" type="String"/>
                </params>
                <declaration name="field" type="Field" line="76"/>
                <scope line="77"/>
            </method>
            <javadoc line="83">
                Finds public static field
                  that is declared in public class.                
                <param>
                    type  the class that can have field                    
                </param>
                <param>
                    name  the name of field to find                    
                </param>
                <return>
                    object that represents found field                    
                </return>
                <throws>
                    NoSuchFieldException if field is not found                    
                </throws>
                <see>
                    Class#getField                    
                </see>
            </javadoc>
            <method name="findStaticField" type="Field" line="93">
                <params>
                    <param name="type" type="Class<?>"/>
                    <param name="name" type="String"/>
                </params>
                <declaration name="field" type="Field" line="94"/>
                <scope line="95"/>
            </method>
            <javadoc line="101">
                Disable instantiation.                
            </javadoc>
            <method name="FieldFinder" type="constructor" line="104"/>
        </class>
    </source>