<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.beans.decoder">
        <class name="StringElementHandler" line="27">
            <extends class="ElementHandler"/>
            <javadoc line="27">
                This class is intended to handle &amp;lt;string&amp;gt; element.
                  This element specifies {@link String} values.
                  The result value is created from text of the body of this element.
                  For example:&lt;pre&gt;
                  &amp;lt;string&amp;gt;description&amp;lt;/string&amp;gt;&lt;/pre&gt;
                  is equivalent to {@code &quot;description&quot;} in Java code.
                  The value of inner element is calculated
                  before adding to the string using {@link String#valueOf(Object)}.
                  Note that all characters are used including whitespaces (&apos; &apos;, &apos;\t&apos;, &apos;\n&apos;, &apos;\r&apos;).
                  So the value of the element&lt;pre&gt;
                  &amp;lt;string&amp;gt&amp;lt;true&amp;gt&amp;lt;/string&amp;gt;&lt;/pre&gt;
                  is not equal to the value of the element&lt;pre&gt;
                  &amp;lt;string&amp;gt;
                  &amp;lt;true&amp;gt;
                  &amp;lt;/string&amp;gt;&lt;/pre&gt;
                  &lt;p&gt;The following atribute is supported:
                  &lt;dl&gt;
                  &lt;dt&gt;id
                  &lt;dd&gt;the identifier of the variable that is intended to store the result
                  &lt;/dl&gt;                
                <since>
                    1.7                    
                </since>
                <author>
                    Sergey A. Malenkov                    
                </author>
            </javadoc>
            <declaration name="sb" type="StringBuilder" line="54"/>
            <declaration name="value" type="ValueObject" line="55"/>
            <javadoc line="57">
                Adds the character that contained in this element.                
                <param>
                    ch  the character                    
                </param>
            </javadoc>
            <method name="addCharacter" type="void" line="63">
                <params>
                    <param name="ch" type="char"/>
                </params>
                <scope line="64"/>
            </method>
            <javadoc line="70">
                Adds the string value of the argument to the string value of this element.                
                <param>
                    argument  the value of the element that contained in this one                    
                </param>
            </javadoc>
            <method name="addArgument" type="void" line="76">
                <params>
                    <param name="argument" type="Object"/>
                </params>
                <scope line="77"/>
            </method>
            <javadoc line="83">
                Returns the value of this element.                
                <return>
                    the value of this element                    
                </return>
            </javadoc>
            <method name="getValueObject" type="ValueObject" line="89">
                <scope line="90">
                    <scope line="91"/>
                    <scope line="94"/>
                    <scope line="97"/>
                </scope>
            </method>
            <javadoc line="104">
                Returns the text of the body of this element.
                  This method evaluates value from text of the body,
                  and should be overridden in those handlers
                  that extend behavior of this element.                
                <param>
                    argument  the text of the body                    
                </param>
                <return>
                    evaluated value                    
                </return>
            </javadoc>
            <method name="getValue" type="Object" line="113">
                <params>
                    <param name="argument" type="String"/>
                </params>
            </method>
        </class>
    </source>