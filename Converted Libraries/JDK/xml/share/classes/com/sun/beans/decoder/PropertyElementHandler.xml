<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.beans.decoder">
        <import package="com.sun.beans.finder.MethodFinder"/>
        <import package="java.beans.IndexedPropertyDescriptor"/>
        <import package="java.beans.IntrospectionException"/>
        <import package="java.beans.Introspector"/>
        <import package="java.beans.PropertyDescriptor"/>
        <import package="java.lang.reflect.Array"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.lang.reflect.Method"/>
        <class name="PropertyElementHandler" line="38">
            <extends class="AccessorElementHandler"/>
            <comment line="80">
                NON-NLS: the getter prefix                
            </comment>
            <comment line="81">
                NON-NLS: the setter prefix                
            </comment>
            <javadoc line="38">
                This class is intended to handle &amp;lt;property&amp;gt; element.
                  This element simplifies access to the properties.
                  If the {@code index} attribute is specified
                  this element uses additional {@code int} parameter.
                  If the {@code name} attribute is not specified
                  this element uses method &quot;get&quot; as getter
                  and method &quot;set&quot; as setter.
                  This element defines getter if it contains no argument.
                  It returns the value of the property in this case.
                  For example:&lt;pre&gt;
                  &amp;lt;property name=&quot;object&quot; index=&quot;10&quot;/&amp;gt;&lt;/pre&gt;
                  is shortcut to&lt;pre&gt;
                  &amp;lt;method name=&quot;getObject&quot;&amp;gt;
                  &amp;lt;int&amp;gt;10&amp;lt;/int&amp;gt;
                  &amp;lt;/method&amp;gt;&lt;/pre&gt;
                  which is equivalent to {@code getObject(10)} in Java code.
                  This element defines setter if it contains one argument.
                  It does not return the value of the property in this case.
                  For example:&lt;pre&gt;
                  &amp;lt;property&amp;gt;&amp;lt;int&amp;gt;0&amp;lt;/int&amp;gt;&amp;lt;/property&amp;gt;&lt;/pre&gt;
                  is shortcut to&lt;pre&gt;
                  &amp;lt;method name=&quot;set&quot;&amp;gt;
                  &amp;lt;int&amp;gt;0&amp;lt;/int&amp;gt;
                  &amp;lt;/method&amp;gt;&lt;/pre&gt;
                  which is equivalent to {@code set(0)} in Java code.
                  &lt;p&gt;The following atributes are supported:
                  &lt;dl&gt;
                  &lt;dt&gt;name
                  &lt;dd&gt;the property name
                  &lt;dt&gt;index
                  &lt;dd&gt;the property index
                  &lt;dt&gt;id
                  &lt;dd&gt;the identifier of the variable that is intended to store the result
                  &lt;/dl&gt;                
                <since>
                    1.7                    
                </since>
                <author>
                    Sergey A. Malenkov                    
                </author>
            </javadoc>
            <declaration name="GETTER" type="String" line="79"/>
            <declaration name="SETTER" type="String" line="80"/>
            <declaration name="index" type="Integer" line="82"/>
            <javadoc line="84">
                Parses attributes of the element.
                  The following atributes are supported:
                  &lt;dl&gt;
                  &lt;dt&gt;name
                  &lt;dd&gt;the property name
                  &lt;dt&gt;index
                  &lt;dd&gt;the property index
                  &lt;dt&gt;id
                  &lt;dd&gt;the identifier of the variable that is intended to store the result
                  &lt;/dl&gt;                
                <param>
                    name   the attribute name                    
                </param>
                <param>
                    value  the attribute value                    
                </param>
            </javadoc>
            <method name="addAttribute" type="void" line="100">
                <params>
                    <param name="name" type="String"/>
                    <param name="value" type="String"/>
                </params>
                <comment line="102">
                    NON-NLS: the attribute name                    
                </comment>
                <scope line="101"/>
                <scope line="103"/>
            </method>
            <javadoc line="108">
                Tests whether the value of this element can be used
                  as an argument of the element that contained in this one.                
                <return>
                    {@code true} if the value of this element should be used
                      as an argument of the element that contained in this one,{@code false} otherwise                    
                </return>
            </javadoc>
            <method name="isArgument" type="boolean" line="117">
                <comment line="119">
                    non-static accessor cannot be used an argument                    
                </comment>
            </method>
            <javadoc line="121">
                Returns the value of the property with specified {@code name}.                
                <param>
                    name  the name of the property                    
                </param>
                <return>
                    the value of the specified property                    
                </return>
            </javadoc>
            <method name="getValue" type="Object" line="128">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="129"/>
                <scope line="132"/>
            </method>
            <javadoc line="138">
                Sets the new value for the property with specified {@code name}.                
                <param>
                    name   the name of the property                    
                </param>
                <param>
                    value  the new value for the specified property                    
                </param>
            </javadoc>
            <method name="setValue" type="void" line="145">
                <params>
                    <param name="name" type="String"/>
                    <param name="value" type="Object"/>
                </params>
                <scope line="146"/>
                <scope line="149"/>
            </method>
            <javadoc line="154">
                Performs the search of the getter for the property
                  with specified {@code name} in specified class
                  and returns value of the property.                
                <param>
                    bean   the context bean that contains property                    
                </param>
                <param>
                    name   the name of the property                    
                </param>
                <param>
                    index  the index of the indexed property                    
                </param>
                <return>
                    the value of the property                    
                </return>
                <throws>
                    IllegalAccessException    if the property is not accesible                    
                </throws>
                <throws>
                    IntrospectionException    if the bean introspection is failed                    
                </throws>
                <throws>
                    InvocationTargetException if the getter cannot be invoked                    
                </throws>
                <throws>
                    NoSuchMethodException     if the getter is not found                    
                </throws>
            </javadoc>
            <method name="getPropertyValue" type="Object" line="168">
                <params>
                    <param name="bean" type="Object"/>
                    <param name="name" type="String"/>
                    <param name="index" type="Integer"/>
                </params>
                <declaration name="type" type="Class&lt;?&gt;" line="169"/>
                <scope line="170"/>
                <scope line="172"/>
                <scope line="174"/>
            </method>
            <javadoc line="179">
                Performs the search of the setter for the property
                  with specified {@code name} in specified class
                  and updates value of the property.                
                <param>
                    bean   the context bean that contains property                    
                </param>
                <param>
                    name   the name of the property                    
                </param>
                <param>
                    index  the index of the indexed property                    
                </param>
                <param>
                    value  the new value for the property                    
                </param>
                <throws>
                    IllegalAccessException    if the property is not accesible                    
                </throws>
                <throws>
                    IntrospectionException    if the bean introspection is failed                    
                </throws>
                <throws>
                    InvocationTargetException if the setter cannot be invoked                    
                </throws>
                <throws>
                    NoSuchMethodException     if the setter is not found                    
                </throws>
            </javadoc>
            <method name="setPropertyValue" type="void" line="193">
                <params>
                    <param name="bean" type="Object"/>
                    <param name="name" type="String"/>
                    <param name="index" type="Integer"/>
                    <param name="value" type="Object"/>
                </params>
                <declaration name="type" type="Class&lt;?&gt;" line="194"/>
                <declaration name="param" type="Class&lt;?&gt;" line="195"/>
                <scope line="199"/>
                <scope line="201"/>
                <scope line="203"/>
            </method>
            <javadoc line="208">
                Performs the search of the getter for the property
                  with specified {@code name} in specified class.                
                <param>
                    type  the class that contains method                    
                </param>
                <param>
                    name  the name of the property                    
                </param>
                <param>
                    args  the method arguments                    
                </param>
                <return>
                    method object that represents found getter                    
                </return>
                <throws>
                    IntrospectionException if the bean introspection is failed                    
                </throws>
                <throws>
                    NoSuchMethodException  if method is not found                    
                </throws>
            </javadoc>
            <method name="findGetter" type="Method" line="219">
                <params>
                    <param name="type" type="Class<?>"/>
                    <param name="name" type="String"/>
                    <param name="args" type="Class<?>"/>
                </params>
                <scope line="220"/>
                <declaration name="pd" type="PropertyDescriptor" line="223"/>
                <scope line="224">
                    <declaration name="method" type="Method" line="225"/>
                    <scope line="226"/>
                </scope>
                <scope line="229">
                    <declaration name="ipd" type="IndexedPropertyDescriptor" line="230"/>
                    <declaration name="method" type="Method" line="231"/>
                    <scope line="232"/>
                </scope>
            </method>
            <javadoc line="239">
                Performs the search of the setter for the property
                  with specified {@code name} in specified class.                
                <param>
                    type  the class that contains method                    
                </param>
                <param>
                    name  the name of the property                    
                </param>
                <param>
                    args  the method arguments                    
                </param>
                <return>
                    method object that represents found setter                    
                </return>
                <throws>
                    IntrospectionException if the bean introspection is failed                    
                </throws>
                <throws>
                    NoSuchMethodException  if method is not found                    
                </throws>
            </javadoc>
            <method name="findSetter" type="Method" line="250">
                <params>
                    <param name="type" type="Class<?>"/>
                    <param name="name" type="String"/>
                    <param name="args" type="Class<?>"/>
                </params>
                <scope line="251"/>
                <declaration name="pd" type="PropertyDescriptor" line="254"/>
                <scope line="255">
                    <declaration name="method" type="Method" line="256"/>
                    <scope line="257"/>
                </scope>
                <scope line="260">
                    <declaration name="ipd" type="IndexedPropertyDescriptor" line="261"/>
                    <declaration name="method" type="Method" line="262"/>
                    <scope line="263"/>
                </scope>
            </method>
            <javadoc line="270">
                Performs the search of the descriptor for the property
                  with specified {@code name} in specified class.                
                <param>
                    type  the class to introspect                    
                </param>
                <param>
                    name  the property name                    
                </param>
                <return>
                    descriptor for the named property                    
                </return>
                <throws>
                    IntrospectionException if property descriptor is not found                    
                </throws>
            </javadoc>
            <method name="getProperty" type="PropertyDescriptor" line="279">
                <params>
                    <param name="type" type="Class<?>"/>
                    <param name="name" type="String"/>
                </params>
                <scope line="280">
                    <scope line="281"/>
                </scope>
            </method>
        </class>
    </source>