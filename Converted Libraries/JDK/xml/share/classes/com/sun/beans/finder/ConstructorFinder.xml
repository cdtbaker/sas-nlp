<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.beans.finder">
        <import package="com.sun.beans.WeakCache"/>
        <import package="java.lang.reflect.Constructor"/>
        <import package="java.lang.reflect.Modifier"/>
        <class name="ConstructorFinder" line="5">
            <extends class="AbstractFinder">
                <type_params>
                    <type_param name="Constructor<?>"/>
                </type_params>
            </extends>
            <javadoc line="5">
                This utility class provides {@code static} methods
                  to find a public constructor with specified parameter types
                  in specified class.                
                <since>
                    1.7                    
                </since>
                <author>
                    Sergey A. Malenkov                    
                </author>
            </javadoc>
            <declaration name="CACHE" type="WeakCache&lt;Signature,Constructor&lt;?&gt;&gt;" line="13"/>
            <javadoc line="14">
                Finds public constructor
                  that is declared in public class.                
                <param>
                    type  the class that can have constructor                    
                </param>
                <param>
                    args  parameter types that is used to find constructor                    
                </param>
                <return>
                    object that represents found constructor                    
                </return>
                <throws>
                    NoSuchMethodException if constructor could not be found
                      or some constructors are found                    
                </throws>
            </javadoc>
            <method name="findConstructor" type="Constructor<?>" line="23">
                <params>
                    <param name="type" type="Class<?>"/>
                    <param name="args" type="Class<?>"/>
                </params>
                <scope line="24"/>
                <scope line="27"/>
                <scope line="30"/>
                <scope line="33"/>
                <declaration name="signature" type="Signature" line="37"/>
                <declaration name="constructor" type="Constructor&lt;?&gt;" line="38"/>
                <scope line="39"/>
            </method>
            <javadoc line="46">
                Creates constructor finder with specified array of parameter types.                
                <param>
                    args  the array of parameter types                    
                </param>
            </javadoc>
            <method name="ConstructorFinder" type="constructor" line="50">
                <params>
                    <param name="args" type="Class<?>[]"/>
                </params>
            </method>
            <javadoc line="53">
                Returns an array of {@code Class} objects
                  that represent the formal parameter types of the constructor
                  Returns an empty array if the constructor takes no parameters.                
                <param>
                    constructor  the object that represents constructor                    
                </param>
                <return>
                    the parameter types of the constructor                    
                </return>
            </javadoc>
            <method name="getParameters" type="Class<?>[]" line="60">
                <params>
                    <param name="constructor" type="Constructor<?>"/>
                </params>
            </method>
            <javadoc line="63">
                Returns {@code true} if and only if the constructor
                  was declared to take a variable number of arguments.                
                <param>
                    constructor  the object that represents constructor                    
                </param>
                <return>
                    {@code true} if the constructor was declared
                      to take a variable number of arguments;{@code false} otherwise                    
                </return>
            </javadoc>
            <method name="isVarArgs" type="boolean" line="70">
                <params>
                    <param name="constructor" type="Constructor<?>"/>
                </params>
            </method>
            <javadoc line="73">
                Checks validness of the constructor.
                  The valid constructor should be public.                
                <param>
                    constructor  the object that represents constructor                    
                </param>
                <return>
                    {@code true} if the constructor is valid,{@code false} otherwise                    
                </return>
            </javadoc>
            <method name="isValid" type="boolean" line="79">
                <params>
                    <param name="constructor" type="Constructor<?>"/>
                </params>
            </method>
        </class>
    </source>