<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.beans.decoder">
        <class name="ElementHandler" line="2">
            <javadoc line="2">
                The base class for element handlers.                
                <since>
                    1.7                    
                </since>
                <author>
                    Sergey A. Malenkov                    
                </author>
                <see>
                    DocumentHandler                    
                </see>
            </javadoc>
            <declaration name="owner" type="DocumentHandler" line="9"/>
            <declaration name="parent" type="ElementHandler" line="10"/>
            <declaration name="id" type="String" line="11"/>
            <javadoc line="12">
                Returns the document handler that creates this element handler.                
                <return>
                    the owner document handler                    
                </return>
            </javadoc>
            <method name="getOwner" type="DocumentHandler" line="16"/>
            <javadoc line="19">
                Sets the document handler that creates this element handler.
                  The owner document handler should be set after instantiation.
                  Such approach is used to simplify the extensibility.                
                <param>
                    owner  the owner document handler                    
                </param>
                <see>
                    DocumentHandler#startElement                    
                </see>
            </javadoc>
            <method name="setOwner" type="void" line="26">
                <params>
                    <param name="owner" type="DocumentHandler"/>
                </params>
                <scope line="27"/>
            </method>
            <javadoc line="32">
                Returns the element handler that contains this one.                
                <return>
                    the parent element handler                    
                </return>
            </javadoc>
            <method name="getParent" type="ElementHandler" line="36"/>
            <javadoc line="39">
                Sets the element handler that contains this one.
                  The parent element handler should be set after instantiation.
                  Such approach is used to simplify the extensibility.                
                <param>
                    parent  the parent element handler                    
                </param>
                <see>
                    DocumentHandler#startElement                    
                </see>
            </javadoc>
            <method name="setParent" type="void" line="46">
                <params>
                    <param name="parent" type="ElementHandler"/>
                </params>
            </method>
            <javadoc line="49">
                Returns the value of the variable with specified identifier.                
                <param>
                    id  the identifier                    
                </param>
                <return>
                    the value of the variable                    
                </return>
            </javadoc>
            <method name="getVariable" type="Object" line="54">
                <params>
                    <param name="id" type="String"/>
                </params>
                <scope line="55">
                    <declaration name="value" type="ValueObject" line="56"/>
                    <scope line="57"/>
                </scope>
            </method>
            <javadoc line="64">
                Returns the value of the parent element.                
                <return>
                    the value of the parent element                    
                </return>
            </javadoc>
            <method name="getContextBean" type="Object" line="68">
                <scope line="69">
                    <declaration name="value" type="ValueObject" line="70"/>
                    <scope line="71"/>
                </scope>
                <scope line="76">
                    <declaration name="value" type="Object" line="77"/>
                    <scope line="78"/>
                </scope>
            </method>
            <javadoc line="84">
                Parses attributes of the element.
                  By default, the following atribute is supported:
                  &lt;dl&gt;
                  &lt;dt&gt;id
                  &lt;dd&gt;the identifier of the variable that is intended to store the result
                  &lt;/dl&gt;                
                <param>
                    name   the attribute name                    
                </param>
                <param>
                    value  the attribute value                    
                </param>
            </javadoc>
            <method name="addAttribute" type="void" line="94">
                <params>
                    <param name="name" type="String"/>
                    <param name="value" type="String"/>
                </params>
                <scope line="95"/>
                <scope line="98"/>
            </method>
            <javadoc line="102">
                This method is called before parsing of the element&apos;s body.
                  All attributes are parsed at this point.
                  By default, do nothing.                
            </javadoc>
            <method name="startElement" type="void" line="107"/>
            <javadoc line="109">
                This method is called after parsing of the element&apos;s body.
                  By default, it calculates the value of this element.
                  The following tasks are executing for any non-void value:
                  &lt;ol&gt;
                  &lt;li&gt;If the {@code id} attribute is set
                  the value of the variable with the specified identifier
                  is set to the value of this element.&lt;/li&gt;
                  &lt;li&gt;This element is used as an argument of parent element if it is possible.&lt;/li&gt;
                  &lt;/ol&gt;                
                <see>
                    #isArgument                    
                </see>
            </javadoc>
            <method name="endElement" type="void" line="121">
                <declaration name="value" type="ValueObject" line="122"/>
                <scope line="123">
                    <scope line="124"/>
                    <scope line="127">
                        <scope line="128"/>
                        <scope line="131"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="137">
                Adds the character that contained in this element.
                  By default, only whitespaces are acceptable.                
                <param>
                    ch  the character                    
                </param>
            </javadoc>
            <method name="addCharacter" type="void" line="142">
                <params>
                    <param name="ch" type="char"/>
                </params>
                <scope line="143"/>
            </method>
            <javadoc line="147">
                Adds the argument that is used to calculate the value of this element.
                  By default, no arguments are acceptable.                
                <param>
                    argument  the value of the element that contained in this one                    
                </param>
            </javadoc>
            <method name="addArgument" type="void" line="152">
                <params>
                    <param name="argument" type="Object"/>
                </params>
            </method>
            <javadoc line="155">
                Tests whether the value of this element can be used
                  as an argument of the element that contained in this one.                
                <return>
                    {@code true} if the value of this element can be used
                      as an argument of the element that contained in this one,{@code false} otherwise                    
                </return>
            </javadoc>
            <method name="isArgument" type="boolean" line="161"/>
            <method name="getValueObject" type="ValueObject" line="164"/>
            <javadoc line="164">
                Returns the value of this element.                
                <return>
                    the value of this element                    
                </return>
            </javadoc>
        </class>
    </source>