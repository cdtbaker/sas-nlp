<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.beans.decoder">
        <class name="ElementHandler" line="27">
            <javadoc line="27">
                The base class for element handlers.                
                <since>
                    1.7                    
                </since>
                <author>
                    Sergey A. Malenkov                    
                </author>
                <see>
                    DocumentHandler                    
                </see>
            </javadoc>
            <declaration name="owner" type="DocumentHandler" line="37"/>
            <declaration name="parent" type="ElementHandler" line="38"/>
            <declaration name="id" type="String" line="40"/>
            <javadoc line="42">
                Returns the document handler that creates this element handler.                
                <return>
                    the owner document handler                    
                </return>
            </javadoc>
            <method name="getOwner" type="DocumentHandler" line="47"/>
            <javadoc line="51">
                Sets the document handler that creates this element handler.
                  The owner document handler should be set after instantiation.
                  Such approach is used to simplify the extensibility.                
                <param>
                    owner  the owner document handler                    
                </param>
                <see>
                    DocumentHandler#startElement                    
                </see>
            </javadoc>
            <method name="setOwner" type="void" line="59">
                <params>
                    <param name="owner" type="DocumentHandler"/>
                </params>
                <scope line="60"/>
            </method>
            <javadoc line="66">
                Returns the element handler that contains this one.                
                <return>
                    the parent element handler                    
                </return>
            </javadoc>
            <method name="getParent" type="ElementHandler" line="71"/>
            <javadoc line="75">
                Sets the element handler that contains this one.
                  The parent element handler should be set after instantiation.
                  Such approach is used to simplify the extensibility.                
                <param>
                    parent  the parent element handler                    
                </param>
                <see>
                    DocumentHandler#startElement                    
                </see>
            </javadoc>
            <method name="setParent" type="void" line="83">
                <params>
                    <param name="parent" type="ElementHandler"/>
                </params>
            </method>
            <javadoc line="87">
                Returns the value of the variable with specified identifier.                
                <param>
                    id  the identifier                    
                </param>
                <return>
                    the value of the variable                    
                </return>
            </javadoc>
            <method name="getVariable" type="Object" line="93">
                <params>
                    <param name="id" type="String"/>
                </params>
                <scope line="94">
                    <declaration name="value" type="ValueObject" line="95"/>
                    <scope line="96"/>
                </scope>
            </method>
            <javadoc line="106">
                Returns the value of the parent element.                
                <return>
                    the value of the parent element                    
                </return>
            </javadoc>
            <method name="getContextBean" type="Object" line="111">
                <scope line="112">
                    <declaration name="value" type="ValueObject" line="113"/>
                    <scope line="114"/>
                </scope>
                <scope line="118">
                    <declaration name="value" type="Object" line="119"/>
                    <scope line="120"/>
                </scope>
            </method>
            <javadoc line="127">
                Parses attributes of the element.
                  By default, the following atribute is supported:
                  &lt;dl&gt;
                  &lt;dt&gt;id
                  &lt;dd&gt;the identifier of the variable that is intended to store the result
                  &lt;/dl&gt;                
                <param>
                    name   the attribute name                    
                </param>
                <param>
                    value  the attribute value                    
                </param>
            </javadoc>
            <method name="addAttribute" type="void" line="138">
                <params>
                    <param name="name" type="String"/>
                    <param name="value" type="String"/>
                </params>
                <comment line="139">
                    NON-NLS: the attribute name                    
                </comment>
                <scope line="139"/>
                <scope line="141"/>
            </method>
            <javadoc line="146">
                This method is called before parsing of the element&apos;s body.
                  All attributes are parsed at this point.
                  By default, do nothing.                
            </javadoc>
            <method name="startElement" type="void" line="151"/>
            <javadoc line="154">
                This method is called after parsing of the element&apos;s body.
                  By default, it calculates the value of this element.
                  The following tasks are executing for any non-void value:
                  &lt;ol&gt;
                  &lt;li&gt;If the {@code id} attribute is set
                  the value of the variable with the specified identifier
                  is set to the value of this element.&lt;/li&gt;
                  &lt;li&gt;This element is used as an argument of parent element if it is possible.&lt;/li&gt;
                  &lt;/ol&gt;                
                <see>
                    #isArgument                    
                </see>
            </javadoc>
            <method name="endElement" type="void" line="167">
                <comment line="168">
                    do nothing if no value returned                    
                </comment>
                <declaration name="value" type="ValueObject" line="169"/>
                <scope line="170">
                    <scope line="171"/>
                    <scope line="174">
                        <scope line="175"/>
                        <scope line="177"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="184">
                Adds the character that contained in this element.
                  By default, only whitespaces are acceptable.                
                <param>
                    ch  the character                    
                </param>
            </javadoc>
            <method name="addCharacter" type="void" line="190">
                <params>
                    <param name="ch" type="char"/>
                </params>
                <scope line="191"/>
            </method>
            <javadoc line="196">
                Adds the argument that is used to calculate the value of this element.
                  By default, no arguments are acceptable.                
                <param>
                    argument  the value of the element that contained in this one                    
                </param>
            </javadoc>
            <method name="addArgument" type="void" line="202">
                <params>
                    <param name="argument" type="Object"/>
                </params>
            </method>
            <javadoc line="206">
                Tests whether the value of this element can be used
                  as an argument of the element that contained in this one.                
                <return>
                    {@code true} if the value of this element can be used
                      as an argument of the element that contained in this one,{@code false} otherwise                    
                </return>
            </javadoc>
            <method name="isArgument" type="boolean" line="214"/>
            <method name="getValueObject" type="ValueObject" line="218"/>
            <javadoc line="218">
                Returns the value of this element.                
                <return>
                    the value of this element                    
                </return>
            </javadoc>
        </class>
    </source>