<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.beans.finder">
        <class name="Signature" line="27">
            <javadoc line="27">
                This class is designed to be a key of a cache
                  of constructors or methods.                
                <since>
                    1.7                    
                </since>
                <author>
                    Sergey A. Malenkov                    
                </author>
            </javadoc>
            <declaration name="type" type="Class&lt;?&gt;" line="36"/>
            <declaration name="name" type="String" line="37"/>
            <declaration name="args" type="Class&lt;?&gt;[]" line="38"/>
            <declaration name="code" type="int" line="40"/>
            <javadoc line="42">
                Constructs signature for constructor.                
                <param>
                    type  the class that contains constructor                    
                </param>
                <param>
                    args  the types of constructor's parameters                    
                </param>
            </javadoc>
            <method name="Signature" type="constructor" line="48">
                <params>
                    <param name="type" type="Class<?>"/>
                    <param name="args" type="Class<?>[]"/>
                </params>
            </method>
            <javadoc line="52">
                Constructs signature for method.                
                <param>
                    type  the class that contains method                    
                </param>
                <param>
                    name  the name of the method                    
                </param>
                <param>
                    args  the types of method's parameters                    
                </param>
            </javadoc>
            <method name="Signature" type="constructor" line="59">
                <params>
                    <param name="type" type="Class<?>"/>
                    <param name="name" type="String"/>
                    <param name="args" type="Class<?>[]"/>
                </params>
            </method>
            <javadoc line="65">
                Indicates whether some other object is &quot;equal to&quot; this one.                
                <param>
                    object  the reference object with which to compare                    
                </param>
                <return>
                    {@code true} if this object is the same as the{@code object} argument, {@code false} otherwise                    
                </return>
                <see>
                    #hashCode()                    
                </see>
            </javadoc>
            <method name="equals" type="boolean" line="74">
                <params>
                    <param name="object" type="Object"/>
                </params>
                <scope line="75"/>
                <scope line="78">
                    <declaration name="signature" type="Signature" line="79"/>
                </scope>
            </method>
            <javadoc line="87">
                Indicates whether some object is &quot;equal to&quot; another one.
                  This method supports {@code null} values.                
                <param>
                    obj1  the first reference object that will compared                    
                </param>
                <param>
                    obj2  the second reference object that will compared                    
                </param>
                <return>
                    {@code true} if first object is the same as the second object,{@code false} otherwise                    
                </return>
            </javadoc>
            <method name="isEqual" type="boolean" line="96">
                <params>
                    <param name="obj1" type="Object"/>
                    <param name="obj2" type="Object"/>
                </params>
            </method>
            <javadoc line="102">
                Indicates whether some array is &quot;equal to&quot; another one.
                  This method supports {@code null} values.                
                <param>
                    args1 the first reference array that will compared                    
                </param>
                <param>
                    args2 the second reference array that will compared                    
                </param>
                <return>
                    {@code true} if first array is the same as the second array,{@code false} otherwise                    
                </return>
            </javadoc>
            <method name="isEqual" type="boolean" line="111">
                <params>
                    <param name="args1" type="Class<?>[]"/>
                    <param name="args2" type="Class<?>[]"/>
                </params>
                <scope line="112"/>
                <scope line="115"/>
                <scope line="118">
                    <scope line="119"/>
                </scope>
            </method>
            <javadoc line="126">
                Returns a hash code value for the object.
                  This method is supported for the benefit of hashtables
                  such as {@link java.util.HashMap} or {@link java.util.HashSet}.
                  Hash code computed using algorithm
                  suggested in Effective Java, Item 8.                
                <return>
                    a hash code value for this object                    
                </return>
                <see>
                    #equals(Object)                    
                </see>
            </javadoc>
            <method name="hashCode" type="int" line="137">
                <scope line="138">
                    <declaration name="code" type="int" line="139"/>
                    <scope line="143">
                        <scope line="144"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="153">
                Adds hash code value if specified object.
                  This is a part of the algorithm
                  suggested in Effective Java, Item 8.                
                <param>
                    code    current hash code value                    
                </param>
                <param>
                    object  object that updates hash code value                    
                </param>
                <return>
                    updated hash code value                    
                </return>
                <see>
                    #hashCode()                    
                </see>
            </javadoc>
            <method name="addHashCode" type="int" line="163">
                <params>
                    <param name="code" type="int"/>
                    <param name="object" type="Object"/>
                </params>
            </method>
        </class>
    </source>