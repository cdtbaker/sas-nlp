<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.beans.decoder">
        <class name="CharElementHandler" line="2">
            <extends class="StringElementHandler"/>
            <javadoc line="2">
                This class is intended to handle &amp;lt;char&amp;gt; element.
                  This element specifies {@code char} values.
                  The class {@link Character} is used as wrapper for these values.
                  The result value is created from text of the body of this element.
                  The body parsing is described in the class {@link StringElementHandler}.
                  For example:&lt;pre&gt;
                  &amp;lt;char&amp;gt;X&amp;lt;/char&amp;gt;&lt;/pre&gt;
                  which is equivalent to {@code Character.valueOf(&apos;X&apos;)} in Java code.
                  &lt;p&gt;The following atributes are supported:
                  &lt;dl&gt;
                  &lt;dt&gt;code
                  &lt;dd&gt;this attribute specifies character code
                  &lt;dt&gt;id
                  &lt;dd&gt;the identifier of the variable that is intended to store the result
                  &lt;/dl&gt;
                  The {@code code} attribute can be used for characters
                  that are illegal in XML document, for example:&lt;pre&gt;
                  &amp;lt;char code=&quot;0&quot;/&amp;gt;&lt;/pre&gt;                
                <since>
                    1.7                    
                </since>
                <author>
                    Sergey A. Malenkov                    
                </author>
            </javadoc>
            <javadoc line="25">
                Parses attributes of the element.
                  The following atributes are supported:
                  &lt;dl&gt;
                  &lt;dt&gt;code
                  &lt;dd&gt;this attribute specifies character code
                  &lt;dt&gt;id
                  &lt;dd&gt;the identifier of the variable that is intended to store the result
                  &lt;/dl&gt;                
                <param>
                    name   the attribute name                    
                </param>
                <param>
                    value  the attribute value                    
                </param>
            </javadoc>
            <method name="addAttribute" type="void" line="37">
                <params>
                    <param name="name" type="String"/>
                    <param name="value" type="String"/>
                </params>
                <scope line="38">
                    <declaration name="code" type="int" line="39"/>
                    <scope line="40"/>
                </scope>
                <scope line="44"/>
            </method>
            <javadoc line="48">
                Creates {@code char} value from
                  the text of the body of this element.                
                <param>
                    argument  the text of the body                    
                </param>
                <return>
                    evaluated {@code char} value                    
                </return>
            </javadoc>
            <method name="getValue" type="Object" line="54">
                <params>
                    <param name="argument" type="String"/>
                </params>
                <scope line="55"/>
            </method>
        </class>
    </source>