<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp.agent">
        <import package="java.util.Enumeration"/>
        <import package="java.util.Vector"/>
        <import package="com.sun.jmx.snmp.SnmpPdu"/>
        <import package="com.sun.jmx.snmp.SnmpVarBind"/>
        <import package="com.sun.jmx.snmp.SnmpEngine"/>
        <class name="SnmpMibRequestImpl" line="7">
            <implements interface="SnmpMibRequest"/>
            <javadoc line="7">
                This class implements the SnmpMibRequest interface.
                  It represents the part of a SNMP request that involves a specific
                  MIB. One instance of this class will be created for every MIB
                  involved in a SNMP request, and will be passed to the SnmpMibAgent
                  in charge of handling that MIB.
                  Instances of this class are allocated by the SNMP engine. You will
                  never need to use this class directly. You will only access
                  instances of this class through their SnmpMibRequest interface.                
            </javadoc>
            <javadoc line="18">
                @param engine The local engine.                
                <param>
                    reqPdu The received pdu.                    
                </param>
                <param>
                    vblist The vector of SnmpVarBind objects in which the
                      MIB concerned by this request is involved.                    
                </param>
                <param>
                    protocolVersion  The protocol version of the SNMP request.                    
                </param>
                <param>
                    userData     User allocated contextual data. This object must
                      be allocated on a per SNMP request basis through the
                      SnmpUserDataFactory registered with the SnmpAdaptorServer,
                      and is handed back to the user through SnmpMibRequest objects.                    
                </param>
            </javadoc>
            <method name="SnmpMibRequestImpl" type="constructor" line="29">
                <params>
                    <param name="engine" type="SnmpEngine"/>
                    <param name="reqPdu" type="SnmpPdu"/>
                    <param name="vblist" type="Vector&lt;SnmpVarBind&gt;"/>
                    <param name="protocolVersion" type="int"/>
                    <param name="userData" type="Object"/>
                    <param name="principal" type="String"/>
                    <param name="securityLevel" type="int"/>
                    <param name="securityModel" type="int"/>
                    <param name="contextName" type="byte[]"/>
                    <param name="accessContextName" type="byte[]"/>
                </params>
            </method>
            <javadoc line="41">
                Returns the local engine. This parameter is returned only if &lt;CODE&gt; SnmpV3AdaptorServer &lt;/CODE&gt; is the adaptor receiving this request. Otherwise null is returned.                
                <return>
                    the local engine.                    
                </return>
            </javadoc>
            <method name="getEngine" type="SnmpEngine" line="45"/>
            <javadoc line="48">
                Gets the incoming request principal. This parameter is returned only if &lt;CODE&gt; SnmpV3AdaptorServer &lt;/CODE&gt; is the adaptor receiving this request. Otherwise null is returned.                
                <return>
                    The request principal.                    
                </return>
            </javadoc>
            <method name="getPrincipal" type="String" line="52"/>
            <javadoc line="55">
                Gets the incoming request security level. This level is defined in {@link com.sun.jmx.snmp.SnmpEngine SnmpEngine}. This parameter is returned only if &lt;CODE&gt; SnmpV3AdaptorServer &lt;/CODE&gt; is the adaptor receiving this request. Otherwise -1 is returned.                
                <return>
                    The security level.                    
                </return>
            </javadoc>
            <method name="getSecurityLevel" type="int" line="59"/>
            <javadoc line="62">
                Gets the incoming request security model. This parameter is returned only if &lt;CODE&gt; SnmpV3AdaptorServer &lt;/CODE&gt; is the adaptor receiving this request. Otherwise -1 is returned.                
                <return>
                    The security model.                    
                </return>
            </javadoc>
            <method name="getSecurityModel" type="int" line="66"/>
            <javadoc line="69">
                Gets the incoming request context name. This parameter is returned only if &lt;CODE&gt; SnmpV3AdaptorServer &lt;/CODE&gt; is the adaptor receiving this request. Otherwise null is returned.                
                <return>
                    The context name.                    
                </return>
            </javadoc>
            <method name="getContextName" type="byte[]" line="73"/>
            <javadoc line="76">
                Gets the incoming request context name used by Access Control Model in order to allow or deny the access to OIDs. This parameter is returned only if &lt;CODE&gt; SnmpV3AdaptorServer &lt;/CODE&gt; is the adaptor receiving this request. Otherwise null is returned.                
                <return>
                    The checked context.                    
                </return>
            </javadoc>
            <method name="getAccessContextName" type="byte[]" line="80"/>
            <method name="getPdu" type="SnmpPdu" line="83"/>
            <method name="getElements" type="Enumeration" line="86"/>
            <method name="getSubList" type="Vector&lt;SnmpVarBind&gt;" line="89"/>
            <method name="getSize" type="int" line="92"/>
            <method name="getVersion" type="int" line="96"/>
            <method name="getRequestPduVersion" type="int" line="99"/>
            <method name="getUserData" type="Object" line="102"/>
            <method name="getVarIndex" type="int" line="105">
                <params>
                    <param name="varbind" type="SnmpVarBind"/>
                </params>
            </method>
            <method name="addVarBind" type="void" line="108">
                <params>
                    <param name="varbind" type="SnmpVarBind"/>
                </params>
            </method>
            <method name="setRequestTree" type="void" line="111">
                <params>
                    <param name="tree" type="SnmpRequestTree"/>
                </params>
            </method>
            <method name="getRequestTree" type="SnmpRequestTree" line="114"/>
            <method name="getVarbinds" type="Vector" line="117"/>
            <declaration name="varbinds" type="Vector&amp;lt;SnmpVarBind&amp;gt;" line="120"/>
            <declaration name="version" type="int" line="121"/>
            <declaration name="data" type="Object" line="122"/>
            <declaration name="reqPdu" type="SnmpPdu" line="123"/>
            <declaration name="tree" type="SnmpRequestTree" line="124"/>
            <declaration name="engine" type="SnmpEngine" line="125"/>
            <declaration name="principal" type="String" line="126"/>
            <declaration name="securityLevel" type="int" line="127"/>
            <declaration name="securityModel" type="int" line="128"/>
            <declaration name="contextName" type="byte[]" line="129"/>
            <declaration name="accessContextName" type="byte[]" line="130"/>
        </class>
    </source>