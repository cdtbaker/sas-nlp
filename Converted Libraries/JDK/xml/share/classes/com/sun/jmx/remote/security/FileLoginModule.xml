<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.remote.security">
        <import package="com.sun.jmx.mbeanserver.GetPropertyAction"/>
        <import package="com.sun.jmx.mbeanserver.Util"/>
        <import package="java.io.BufferedInputStream"/>
        <import package="java.io.File"/>
        <import package="java.io.FileInputStream"/>
        <import package="java.io.FilePermission"/>
        <import package="java.io.IOException"/>
        <import package="java.security.AccessControlException"/>
        <import package="java.security.AccessController"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.Hashtable"/>
        <import package="java.util.Map"/>
        <import package="java.util.Properties"/>
        <import package="javax.security.auth"/>
        <import package="javax.security.auth.callback"/>
        <import package="javax.security.auth.login"/>
        <import package="javax.security.auth.spi"/>
        <import package="javax.management.remote.JMXPrincipal"/>
        <import package="com.sun.jmx.remote.util.ClassLogger"/>
        <import package="com.sun.jmx.remote.util.EnvHelp"/>
        <import package="sun.management.jmxremote.ConnectorBootstrap"/>
        <class name="FileLoginModule" line="52">
            <comment line="114">
                Location of the default password file                
            </comment>
            <comment line="121">
                Key to retrieve the stored username                
            </comment>
            <comment line="125">
                Key to retrieve the stored password                
            </comment>
            <comment line="129">
                Log messages                
            </comment>
            <comment line="133">
                Configurable options                
            </comment>
            <comment line="139">
                Authentication status                
            </comment>
            <comment line="143">
                Supplied username and password                
            </comment>
            <comment line="148">
                Initial state                
            </comment>
            <comment line="472">
                Read the password file.                
            </comment>
            <implements interface="LoginModule"/>
            <javadoc line="52">
                This {@link LoginModule} performs file-based authentication.
                  &lt;p&gt; A supplied username and password is verified against the
                  corresponding user credentials stored in a designated password file.
                  If successful then a new {@link JMXPrincipal} is created with the
                  user&apos;s name and it is associated with the current {@link Subject}.
                  Such principals may be identified and granted management privileges in
                  the access control file for JMX remote management or in a Java security
                  policy.
                  &lt;p&gt; The password file comprises a list of key-value pairs as specified in{@link Properties}. The key represents a user&apos;s name and the value is its
                  associated cleartext password. By default, the following password file is
                  used:
                  &lt;pre&gt;
                  ${java.home}/lib/management/jmxremote.password
                  &lt;/pre&gt;
                  A different password file can be specified via the &lt;code&gt;passwordFile&lt;/code&gt;
                  configuration option.
                  &lt;p&gt; This module recognizes the following &lt;code&gt;Configuration&lt;/code&gt; options:
                  &lt;dl&gt;
                  &lt;dt&gt; &lt;code&gt;passwordFile&lt;/code&gt; &lt;/dt&gt;
                  &lt;dd&gt; the path to an alternative password file. It is used instead of
                  the default password file.&lt;/dd&gt;
                  &lt;dt&gt; &lt;code&gt;useFirstPass&lt;/code&gt; &lt;/dt&gt;
                  &lt;dd&gt; if &lt;code&gt;true&lt;/code&gt;, this module retrieves the username and password
                  from the module&apos;s shared state, using &quot;javax.security.auth.login.name&quot;
                  and &quot;javax.security.auth.login.password&quot; as the respective keys. The
                  retrieved values are used for authentication. If authentication fails,
                  no attempt for a retry is made, and the failure is reported back to
                  the calling application.&lt;/dd&gt;
                  &lt;dt&gt; &lt;code&gt;tryFirstPass&lt;/code&gt; &lt;/dt&gt;
                  &lt;dd&gt; if &lt;code&gt;true&lt;/code&gt;, this module retrieves the username and password
                  from the module&apos;s shared state, using &quot;javax.security.auth.login.name&quot;
                  and &quot;javax.security.auth.login.password&quot; as the respective keys.  The
                  retrieved values are used for authentication. If authentication fails,
                  the module uses the CallbackHandler to retrieve a new username and
                  password, and another attempt to authenticate is made. If the
                  authentication fails, the failure is reported back to the calling
                  application.&lt;/dd&gt;
                  &lt;dt&gt; &lt;code&gt;storePass&lt;/code&gt; &lt;/dt&gt;
                  &lt;dd&gt; if &lt;code&gt;true&lt;/code&gt;, this module stores the username and password
                  obtained from the CallbackHandler in the module&apos;s shared state, using
                  &quot;javax.security.auth.login.name&quot; and
                  &quot;javax.security.auth.login.password&quot; as the respective keys.  This is
                  not performed if existing values already exist for the username and
                  password in the shared state, or if authentication fails.&lt;/dd&gt;
                  &lt;dt&gt; &lt;code&gt;clearPass&lt;/code&gt; &lt;/dt&gt;
                  &lt;dd&gt; if &lt;code&gt;true&lt;/code&gt;, this module clears the username and password
                  stored in the module&apos;s shared state after both phases of authentication
                  (login and commit) have completed.&lt;/dd&gt;
                  &lt;/dl&gt;                
            </javadoc>
            <declaration name="DEFAULT_PASSWORD_FILE_NAME" type="String" line="114"/>
            <declaration name="USERNAME_KEY" type="String" line="121"/>
            <declaration name="PASSWORD_KEY" type="String" line="125"/>
            <declaration name="logger" type="ClassLogger" line="129"/>
            <declaration name="useFirstPass" type="boolean" line="133"/>
            <declaration name="tryFirstPass" type="boolean" line="134"/>
            <declaration name="storePass" type="boolean" line="135"/>
            <declaration name="clearPass" type="boolean" line="136"/>
            <declaration name="succeeded" type="boolean" line="139"/>
            <declaration name="commitSucceeded" type="boolean" line="140"/>
            <declaration name="username" type="String" line="143"/>
            <declaration name="password" type="char[]" line="144"/>
            <declaration name="user" type="JMXPrincipal" line="145"/>
            <declaration name="subject" type="Subject" line="148"/>
            <declaration name="callbackHandler" type="CallbackHandler" line="149"/>
            <declaration name="sharedState" type="Map&lt;String,Object&gt;" line="150"/>
            <declaration name="options" type="Map&lt;String,?&gt;" line="151"/>
            <declaration name="passwordFile" type="String" line="152"/>
            <declaration name="passwordFileDisplayName" type="String" line="153"/>
            <declaration name="userSuppliedPasswordFile" type="boolean" line="154"/>
            <declaration name="hasJavaHomePermission" type="boolean" line="155"/>
            <declaration name="userCredentials" type="Properties" line="156"/>
            <javadoc line="158">
                Initialize this &lt;code&gt;LoginModule&lt;/code&gt;.                
                <param>
                    subject the &lt;code&gt;Subject&lt;/code&gt; to be authenticated.                    
                </param>
                <param>
                    callbackHandler a &lt;code&gt;CallbackHandler&lt;/code&gt; to acquire the
                      user&apos;s name and password.                    
                </param>
                <param>
                    sharedState shared &lt;code&gt;LoginModule&lt;/code&gt; state.                    
                </param>
                <param>
                    options options specified in the login
                      &lt;code&gt;Configuration&lt;/code&gt; for this particular
                      &lt;code&gt;LoginModule&lt;/code&gt;.                    
                </param>
            </javadoc>
            <method name="initialize" type="void" line="172">
                <params>
                    <param name="subject" type="Subject"/>
                    <param name="callbackHandler" type="CallbackHandler"/>
                    <param name="sharedState" type="Map<String,?>"/>
                    <param name="options" type="Map<String,?>"/>
                </params>
                <comment line="180">
                    initialize any configured options                    
                </comment>
                <comment line="194">
                    set the location of the password file                    
                </comment>
                <scope line="194">
                    <scope line="197"/>
                    <scope line="201"/>
                </scope>
            </method>
            <javadoc line="209">
                Begin user authentication (Authentication Phase 1).
                  &lt;p&gt; Acquire the user&apos;s name and password and verify them against
                  the corresponding credentials from the password file.                
                <return>
                    true always, since this &lt;code&gt;LoginModule&lt;/code&gt;
                      should not be ignored.                    
                </return>
                <exception>
                    FailedLoginException if the authentication fails.                    
                </exception>
                <exception>
                    LoginException if this &lt;code&gt;LoginModule&lt;/code&gt;
                      is unable to perform the authentication.                    
                </exception>
            </javadoc>
            <method name="login" type="boolean" line="221">
                <comment line="243">
                    attempt the authentication                    
                </comment>
                <comment line="247">
                    attempt the authentication by getting the
                     username and password from shared state                    
                </comment>
                <comment line="251">
                    authentication succeeded                    
                </comment>
                <comment line="260">
                    authentication failed -- try again below by prompting                    
                </comment>
                <comment line="269">
                    attempt the authentication by getting the
                     username and password from shared state                    
                </comment>
                <comment line="273">
                    authentication succeeded                    
                </comment>
                <comment line="282">
                    authentication failed                    
                </comment>
                <comment line="295">
                    attempt the authentication using the supplied username and password                    
                </comment>
                <comment line="299">
                    authentication succeeded                    
                </comment>
                <scope line="223"/>
                <scope line="225">
                    <declaration name="le" type="LoginException" line="226"/>
                </scope>
                <scope line="232"/>
                <scope line="237"/>
                <scope line="243">
                    <scope line="245">
                        <scope line="252"/>
                    </scope>
                    <scope line="258"/>
                </scope>
                <scope line="265">
                    <scope line="267">
                        <scope line="274"/>
                    </scope>
                    <scope line="280"/>
                </scope>
                <scope line="290"/>
                <scope line="295">
                    <scope line="300"/>
                </scope>
                <scope line="305"/>
            </method>
            <javadoc line="313">
                Complete user authentication (Authentication Phase 2).
                  &lt;p&gt; This method is called if the LoginContext&apos;s
                  overall authentication has succeeded
                  (all the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL
                  LoginModules have succeeded).
                  &lt;p&gt; If this LoginModule&apos;s own authentication attempt
                  succeeded (checked by retrieving the private state saved by the
                  &lt;code&gt;login&lt;/code&gt; method), then this method associates a
                  &lt;code&gt;JMXPrincipal&lt;/code&gt; with the &lt;code&gt;Subject&lt;/code&gt; located in the
                  &lt;code&gt;LoginModule&lt;/code&gt;.  If this LoginModule&apos;s own
                  authentication attempted failed, then this method removes
                  any state that was originally saved.                
                <exception>
                    LoginException if the commit fails                    
                </exception>
                <return>
                    true if this LoginModule&apos;s own login and commit
                      attempts succeeded, or false otherwise.                    
                </return>
            </javadoc>
            <method name="commit" type="boolean" line="333">
                <comment line="343">
                    add Principals to the Subject                    
                </comment>
                <comment line="353">
                    in any case, clean out state                    
                </comment>
                <scope line="335"/>
                <scope line="337">
                    <scope line="338"/>
                    <scope line="343"/>
                    <scope line="347"/>
                </scope>
            </method>
            <javadoc line="358">
                Abort user authentication (Authentication Phase 2).
                  &lt;p&gt; This method is called if the LoginContext&apos;s overall authentication
                  failed (the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL
                  LoginModules did not succeed).
                  &lt;p&gt; If this LoginModule&apos;s own authentication attempt
                  succeeded (checked by retrieving the private state saved by the
                  &lt;code&gt;login&lt;/code&gt; and &lt;code&gt;commit&lt;/code&gt; methods),
                  then this method cleans up any state that was originally saved.                
                <exception>
                    LoginException if the abort fails.                    
                </exception>
                <return>
                    false if this LoginModule&apos;s own login and/or commit attempts
                      failed, and true otherwise.                    
                </return>
            </javadoc>
            <method name="abort" type="boolean" line="374">
                <comment line="386">
                    Clean out state                    
                </comment>
                <comment line="391">
                    overall authentication succeeded and commit succeeded,
                     but someone else&apos;s commit failed                    
                </comment>
                <scope line="376"/>
                <scope line="381"/>
                <scope line="383"/>
                <scope line="389"/>
            </method>
            <javadoc line="397">
                Logout a user.
                  &lt;p&gt; This method removes the Principals
                  that were added by the &lt;code&gt;commit&lt;/code&gt; method.                
                <exception>
                    LoginException if the logout fails.                    
                </exception>
                <return>
                    true in all cases since this &lt;code&gt;LoginModule&lt;/code&gt;
                      should not be ignored.                    
                </return>
            </javadoc>
            <method name="logout" type="boolean" line="407">
                <comment line="415">
                    clean out state                    
                </comment>
                <scope line="408"/>
                <scope line="420"/>
            </method>
            <javadoc line="427">
                Attempt authentication                
                <param>
                    usePasswdFromSharedState a flag to tell this method whether
                      to retrieve the password from the sharedState.                    
                </param>
            </javadoc>
            <method name="attemptAuthentication" type="void" line="435">
                <params>
                    <param name="usePasswdFromSharedState" type="boolean"/>
                </params>
                <comment line="434">
                    sharedState used as Map&lt;String,Object&gt;                    
                </comment>
                <comment line="438">
                    get the username and password                    
                </comment>
                <comment line="443">
                    userCredentials is initialized in login()                    
                </comment>
                <comment line="447">
                    username not found or passwords do not match                    
                </comment>
                <comment line="454">
                    Save the username and password in the shared state
                     only if authentication succeeded                    
                </comment>
                <comment line="463">
                    Create a new user principal                    
                </comment>
                <declaration name="localPassword" type="String" line="440"/>
                <scope line="444">
                    <scope line="447"/>
                </scope>
                <scope line="457"/>
                <scope line="465"/>
            </method>
            <method name="loadPasswordFile" type="void" line="474">
                <declaration name="fis" type="FileInputStream" line="475"/>
                <scope line="476"/>
                <scope line="478">
                    <scope line="479"/>
                    <scope line="481">
                        <declaration name="fp" type="FilePermission" line="482"/>
                        <declaration name="ace" type="AccessControlException" line="484"/>
                    </scope>
                </scope>
                <scope line="490">
                    <declaration name="bis" type="BufferedInputStream" line="491"/>
                    <scope line="492"/>
                    <scope line="495"/>
                </scope>
                <scope line="498"/>
            </method>
            <javadoc line="503">
                Get the username and password.
                  This method does not return any value.
                  Instead, it sets global name and password variables.
                  &lt;p&gt; Also note that this method will set the username and password
                  values in the shared state in case subsequent LoginModules
                  want to use them via use/tryFirstPass.                
                <param>
                    usePasswdFromSharedState boolean that tells this method whether
                      to retrieve the password from the sharedState.                    
                </param>
            </javadoc>
            <method name="getUsernamePassword" type="void" line="516">
                <params>
                    <param name="usePasswdFromSharedState" type="boolean"/>
                </params>
                <comment line="520">
                    use the password saved by the first module in the stack                    
                </comment>
                <comment line="526">
                    acquire username and password                    
                </comment>
                <scope line="518"/>
                <declaration name="callbacks" type="Callback[]" line="530"/>
                <scope line="534">
                    <declaration name="tmpPassword" type="char[]" line="537"/>
                </scope>
                <scope line="543">
                    <declaration name="le" type="LoginException" line="544"/>
                </scope>
                <scope line="546">
                    <declaration name="le" type="LoginException" line="547"/>
                </scope>
            </method>
            <javadoc line="555">
                Clean out state because of a failed authentication attempt                
            </javadoc>
            <method name="cleanState" type="void" line="558">
                <scope line="560"/>
                <scope line="565"/>
            </method>
        </class>
    </source>