<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp.IPAcl">
        <import package="java.util.Vector"/>
        <import package="java.util.Enumeration"/>
        <import package="java.io.Serializable"/>
        <import package="java.net.UnknownHostException"/>
        <import package="java.security.Principal"/>
        <import package="java.security.acl.Group"/>
        <class name="GroupImpl" line="8">
            <extends class="PrincipalImpl"/>
            <implements interface="Group"/>
            <implements interface="Serializable"/>
            <javadoc line="8">
                This class is used to represent a subnet mask (a group of hosts
                  matching the same
                  IP mask).                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="14"/>
            <javadoc line="15">
                Constructs an empty group.                
                <exception>
                    UnknownHostException Not implemented                    
                </exception>
            </javadoc>
            <method name="GroupImpl" type="constructor" line="19"/>
            <javadoc line="21">
                Constructs a group using the specified subnet mask.                
                <param>
                    mask The subnet mask to use to build the group.                    
                </param>
                <exception>
                    UnknownHostException if the subnet mask cann&apos;t be built.                    
                </exception>
            </javadoc>
            <method name="GroupImpl" type="constructor" line="26">
                <params>
                    <param name="mask" type="String"/>
                </params>
            </method>
            <javadoc line="29">
                Adds the specified member to the group.                
                <param>
                    p the principal to add to this group.                    
                </param>
                <return>
                    true if the member was successfully added, false if the
                      principal was already a member.                    
                </return>
            </javadoc>
            <method name="addMember" type="boolean" line="35">
                <params>
                    <param name="p" type="Principal"/>
                </params>
            </method>
            <method name="hashCode" type="int" line="38"/>
            <javadoc line="41">
                Compares this group to the specified object. Returns true if the object
                  passed in matches the group represented.                
                <param>
                    p the object to compare with.                    
                </param>
                <return>
                    true if the object passed in matches the subnet mask,
                      false otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="48">
                <params>
                    <param name="p" type="Object"/>
                </params>
                <scope line="49"/>
                <scope line="53"/>
            </method>
            <javadoc line="57">
                Returns true if the passed principal is a member of the group.                
                <param>
                    p the principal whose membership is to be checked.                    
                </param>
                <return>
                    true if the principal is a member of this group, false otherwise.                    
                </return>
            </javadoc>
            <method name="isMember" type="boolean" line="62">
                <params>
                    <param name="p" type="Principal"/>
                </params>
            </method>
            <javadoc line="66">
                Returns an enumeration which contains the subnet mask.                
                <return>
                    an enumeration which contains the subnet mask.                    
                </return>
            </javadoc>
            <method name="members" type="Enumeration&lt;? extends Principal&gt;" line="70">
                <declaration name="v" type="Vector&amp;lt;Principal&amp;gt;" line="71"/>
            </method>
            <javadoc line="75">
                Removes the specified member from the group. (Not implemented)                
                <param>
                    p the principal to remove from this group.                    
                </param>
                <return>
                    allways return true.                    
                </return>
            </javadoc>
            <method name="removeMember" type="boolean" line="80">
                <params>
                    <param name="p" type="Principal"/>
                </params>
            </method>
            <javadoc line="83">
                Prints a string representation of this group.                
                <return>
                    a string representation of this group.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="87"/>
        </class>
    </source>