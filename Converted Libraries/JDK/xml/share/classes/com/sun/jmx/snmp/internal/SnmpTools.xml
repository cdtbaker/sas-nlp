<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp.internal">
        <import package="com.sun.jmx.snmp.SnmpDefinitions"/>
        <class name="SnmpTools" line="28">
            <implements interface="SnmpDefinitions"/>
            <javadoc line="28">
                Utility class used to deal with various data representations.
                  &lt;p&gt;&lt;b&gt;This API is a Sun Microsystems internal API  and is subject
                  to change without notice.&lt;/b&gt;&lt;/p&gt;                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <javadoc line="36">
                Translates a binary representation in an ASCII one. The returned string is an hexadecimal string starting with 0x.                
                <param>
                    data Binary to translate.                    
                </param>
                <return>
                    Translated binary.                    
                </return>
            </javadoc>
            <method name="binary2ascii" type="String" line="42">
                <params>
                    <param name="data" type="byte[]"/>
                    <param name="length" type="int"/>
                </params>
                <declaration name="size" type="int" line="44"/>
                <declaration name="asciiData" type="byte[]" line="45"/>
                <scope line="48">
                    <declaration name="j" type="int" line="49"/>
                    <declaration name="v" type="int" line="50"/>
                </scope>
            </method>
            <javadoc line="65">
                Translates a binary representation in an ASCII one. The returned string is an hexadecimal string starting with 0x.                
                <param>
                    data Binary to translate.                    
                </param>
                <return>
                    Translated binary.                    
                </return>
            </javadoc>
            <method name="binary2ascii" type="String" line="71">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
            </method>
            <javadoc line="74">
                Translates a stringified representation in a binary one. The passed string is an hexadecimal one starting with 0x.                
                <param>
                    str String to translate.                    
                </param>
                <return>
                    Translated string.                    
                </return>
            </javadoc>
            <method name="ascii2binary" type="byte[]" line="79">
                <params>
                    <param name="str" type="String"/>
                </params>
                <comment line="104">
                    System.out.println(&quot;ascii : &quot; + p[j+1]);                    
                </comment>
                <comment line="106">
                    System.out.println(&quot;binary : &quot; + v);                    
                </comment>
                <comment line="109">
                    System.out.println(&quot;ascii : &quot; + p[j+1]);                    
                </comment>
                <comment line="111">
                    System.out.println(&quot;binary : &quot; + v+1);                    
                </comment>
                <comment line="114">
                    System.out.println(&quot;ascii : &quot; + p[j+1]);                    
                </comment>
                <comment line="116">
                    System.out.println(&quot;binary : &quot; + v);                    
                </comment>
                <declaration name="val" type="String" line="81"/>
                <declaration name="size" type="int" line="83"/>
                <declaration name="buf" type="byte[]" line="84"/>
                <declaration name="p" type="byte[]" line="85"/>
                <scope line="88">
                    <declaration name="j" type="int" line="89"/>
                    <declaration name="v" type="byte" line="90"/>
                    <scope line="91"/>
                    <scope line="94"/>
                    <scope line="97"/>
                    <scope line="103"/>
                    <scope line="108"/>
                    <scope line="113"/>
                </scope>
            </method>
        </class>
    </source>