<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp">
        <class name="SnmpUnsignedInt" line="2">
            <extends class="SnmpInt"/>
            <javadoc line="2">
                Is the base for all SNMP syntaxes based on unsigned integers.
                  &lt;p&gt;&lt;b&gt;This API is a Sun Microsystems internal API  and is subject
                  to change without notice.&lt;/b&gt;&lt;/p&gt;                
            </javadoc>
            <declaration name="MAX_VALUE" type="long" line="8"/>
            <javadoc line="8">
                The largest value of the type &lt;code&gt;unsigned int&lt;/code&gt; (2^32 - 1).                
            </javadoc>
            <javadoc line="12">
                Constructs a new &lt;CODE&gt;SnmpUnsignedInt&lt;/CODE&gt; from the specified integer value.                
                <param>
                    v The initialization value.                    
                </param>
                <exception>
                    IllegalArgumentException The specified value is negative
                      or larger than {@link #MAX_VALUE SnmpUnsignedInt.MAX_VALUE}.                    
                </exception>
            </javadoc>
            <method name="SnmpUnsignedInt" type="constructor" line="18">
                <params>
                    <param name="v" type="int"/>
                </params>
            </method>
            <javadoc line="21">
                Constructs a new &lt;CODE&gt;SnmpUnsignedInt&lt;/CODE&gt; from the specified &lt;CODE&gt;Integer&lt;/CODE&gt; value.                
                <param>
                    v The initialization value.                    
                </param>
                <exception>
                    IllegalArgumentException The specified value is negative
                      or larger than {@link #MAX_VALUE SnmpUnsignedInt.MAX_VALUE}.                    
                </exception>
            </javadoc>
            <method name="SnmpUnsignedInt" type="constructor" line="27">
                <params>
                    <param name="v" type="Integer"/>
                </params>
            </method>
            <javadoc line="30">
                Constructs a new &lt;CODE&gt;SnmpUnsignedInt&lt;/CODE&gt; from the specified long value.                
                <param>
                    v The initialization value.                    
                </param>
                <exception>
                    IllegalArgumentException The specified value is negative
                      or larger than {@link #MAX_VALUE SnmpUnsignedInt.MAX_VALUE}.                    
                </exception>
            </javadoc>
            <method name="SnmpUnsignedInt" type="constructor" line="36">
                <params>
                    <param name="v" type="long"/>
                </params>
            </method>
            <javadoc line="39">
                Constructs a new &lt;CODE&gt;SnmpUnsignedInt&lt;/CODE&gt; from the specified &lt;CODE&gt;Long&lt;/CODE&gt; value.                
                <param>
                    v The initialization value.                    
                </param>
                <exception>
                    IllegalArgumentException The specified value is negative
                      or larger than {@link #MAX_VALUE SnmpUnsignedInt.MAX_VALUE}.                    
                </exception>
            </javadoc>
            <method name="SnmpUnsignedInt" type="constructor" line="45">
                <params>
                    <param name="v" type="Long"/>
                </params>
            </method>
            <javadoc line="48">
                Returns a textual description of the type object.                
                <return>
                    ASN.1 textual description.                    
                </return>
            </javadoc>
            <method name="getTypeName" type="String" line="52"/>
            <javadoc line="55">
                This method has been defined to allow the sub-classes
                  of SnmpInt to perform their own control at intialization time.                
            </javadoc>
            <method name="isInitValueValid" type="boolean" line="59">
                <params>
                    <param name="v" type="int"/>
                </params>
                <scope line="60"/>
            </method>
            <javadoc line="65">
                This method has been defined to allow the sub-classes
                  of SnmpInt to perform their own control at intialization time.                
            </javadoc>
            <method name="isInitValueValid" type="boolean" line="69">
                <params>
                    <param name="v" type="long"/>
                </params>
                <scope line="70"/>
            </method>
            <declaration name="name" type="String" line="75"/>
            <javadoc line="75">
                Name of the type.                
            </javadoc>
        </class>
    </source>