<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp.IPAcl">
        <import package="java.net.InetAddress"/>
        <import package="java.util.Hashtable"/>
        <import package="java.util.Vector"/>
        <class name="SimpleNode" line="35">
            <comment line="87">
                SR. Extend the SimpleNode definition                
            </comment>
            <comment line="132">
                                
            </comment>
            <comment line="134">
                You can override these two methods in subclasses of SimpleNode to
                customize the way the node appears when the tree is dumped.  If
                your output uses more than one line you should override
                toString(String), otherwise overriding toString() is probably all                
            </comment>
            <comment line="143">
                Override this method if you want to customize how the node dumps                
            </comment>
            <implements interface="Node"/>
            <declaration name="parent" type="Node" line="36"/>
            <declaration name="children" type="Node[]" line="37"/>
            <declaration name="id" type="int" line="38"/>
            <declaration name="parser" type="Parser" line="39"/>
            <method name="SimpleNode" type="constructor" line="41">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="SimpleNode" type="constructor" line="45">
                <params>
                    <param name="p" type="Parser"/>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="jjtCreate" type="Node" line="50">
                <params>
                    <param name="id" type="int"/>
                </params>
            </method>
            <method name="jjtCreate" type="Node" line="54">
                <params>
                    <param name="p" type="Parser"/>
                    <param name="id" type="int"/>
                </params>
            </method>
            <method name="jjtOpen" type="void" line="58"/>
            <method name="jjtClose" type="void" line="61"/>
            <method name="jjtSetParent" type="void" line="64">
                <params>
                    <param name="n" type="Node"/>
                </params>
            </method>
            <method name="jjtGetParent" type="Node" line="65"/>
            <method name="jjtAddChild" type="void" line="67">
                <params>
                    <param name="n" type="Node"/>
                    <param name="i" type="int"/>
                </params>
                <scope line="68"/>
                <scope line="70">
                    <declaration name="c" type="Node" line="71"/>
                </scope>
            </method>
            <method name="jjtGetChild" type="Node" line="78">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="jjtGetNumChildren" type="int" line="82"/>
            <javadoc line="90">
                Build the Trap entries from the syntactic tree.                
            </javadoc>
            <method name="buildTrapEntries" type="void" line="93">
                <params>
                    <param name="dest" type="Hashtable<InetAddress,Vector<String>>"/>
                </params>
                <comment line="100">
                                        
                </comment>
                <scope line="94">
                    <scope line="95">
                        <declaration name="n" type="SimpleNode" line="96"/>
                        <scope line="97"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="103">
                Build the Inform entries from the syntactic tree.                
            </javadoc>
            <method name="buildInformEntries" type="void" line="106">
                <params>
                    <param name="dest" type="Hashtable<InetAddress,Vector<String>>"/>
                </params>
                <comment line="113">
                                        
                </comment>
                <scope line="107">
                    <scope line="108">
                        <declaration name="n" type="SimpleNode" line="109"/>
                        <scope line="110"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="117">
                Build the Acl entries from the syntactic tree.                
            </javadoc>
            <method name="buildAclEntries" type="void" line="120">
                <params>
                    <param name="owner" type="PrincipalImpl"/>
                    <param name="acl" type="AclImpl"/>
                </params>
                <comment line="127">
                                        
                </comment>
                <scope line="121">
                    <scope line="122">
                        <declaration name="n" type="SimpleNode" line="123"/>
                        <scope line="124"/>
                    </scope>
                </scope>
            </method>
            <method name="toString" type="String" line="139"/>
            <method name="toString" type="String" line="140">
                <params>
                    <param name="prefix" type="String"/>
                </params>
            </method>
            <method name="dump" type="void" line="145">
                <params>
                    <param name="prefix" type="String"/>
                </params>
                <scope line="146">
                    <scope line="147">
                        <declaration name="n" type="SimpleNode" line="148"/>
                        <scope line="149"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>