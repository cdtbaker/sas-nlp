<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.remote.internal">
        <import package="com.sun.jmx.mbeanserver.Util"/>
        <import package="com.sun.jmx.remote.security.NotificationAccessController"/>
        <import package="com.sun.jmx.remote.util.ClassLogger"/>
        <import package="com.sun.jmx.remote.util.EnvHelp"/>
        <import package="java.io.IOException"/>
        <import package="java.security.AccessControlContext"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.security.PrivilegedActionException"/>
        <import package="java.security.PrivilegedExceptionAction"/>
        <import package="java.util.Collections"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.util.Set"/>
        <import package="javax.management.InstanceNotFoundException"/>
        <import package="javax.management.ListenerNotFoundException"/>
        <import package="javax.management.MBeanPermission"/>
        <import package="javax.management.MBeanServer"/>
        <import package="javax.management.MBeanServerDelegate"/>
        <import package="javax.management.MBeanServerNotification"/>
        <import package="javax.management.Notification"/>
        <import package="javax.management.NotificationBroadcaster"/>
        <import package="javax.management.NotificationFilter"/>
        <import package="javax.management.ObjectInstance"/>
        <import package="javax.management.ObjectName"/>
        <import package="javax.management.remote.NotificationResult"/>
        <import package="javax.management.remote.TargetedNotification"/>
        <import package="javax.management.MalformedObjectNameException"/>
        <import package="javax.security.auth.Subject"/>
        <class name="ServerNotifForwarder" line="33">
            <method name="ServerNotifForwarder" type="constructor" line="34">
                <params>
                    <param name="mbeanServer" type="MBeanServer"/>
                    <param name="env" type="Map&lt;String,?&gt;"/>
                    <param name="notifBuffer" type="NotificationBuffer"/>
                    <param name="connectionId" type="String"/>
                </params>
            </method>
            <method name="addNotificationListener" type="Integer" line="42">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="filter" type="NotificationFilter"/>
                </params>
                <scope line="43"/>
                <scope line="48"/>
                <scope line="51">
                    <anonymous_class line="52">
                        <method name="run" type="Boolean" line="53"/>
                    </anonymous_class>
                    <declaration name="instanceOf" type="boolean" line="52"/>
                    <scope line="58"/>
                </scope>
                <scope line="62"/>
                <declaration name="id" type="Integer" line="65"/>
                <declaration name="nn" type="ObjectName" line="66"/>
                <scope line="67">
                    <scope line="68"/>
                    <scope line="71">
                        <declaration name="ioe" type="IOException" line="72"/>
                    </scope>
                </scope>
                <scope line="77">
                    <declaration name="idaf" type="IdAndFilter" line="78"/>
                    <declaration name="set" type="Set&amp;lt;IdAndFilter&amp;gt;" line="79"/>
                    <scope line="81"/>
                </scope>
            </method>
            <method name="removeNotificationListener" type="void" line="89">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="listenerIDs" type="Integer[]"/>
                </params>
                <scope line="90"/>
                <scope line="95"/>
                <declaration name="re" type="Exception" line="98"/>
                <scope line="99">
                    <scope line="100"/>
                    <scope line="103">
                        <scope line="104"/>
                    </scope>
                </scope>
                <scope line="109"/>
            </method>
            <method name="removeNotificationListener" type="void" line="113">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="listenerID" type="Integer"/>
                </params>
                <scope line="114"/>
                <scope line="118">
                    <scope line="119"/>
                </scope>
                <scope line="123">
                    <declaration name="set" type="Set&amp;lt;IdAndFilter&amp;gt;" line="124"/>
                    <declaration name="idaf" type="IdAndFilter" line="125"/>
                </scope>
            </method>
            <declaration name="bufferFilter" type="NotificationBufferFilter" line="131"/>
            <anonymous_class line="131">
                <method name="apply" type="void" line="132">
                    <params>
                        <param name="targetedNotifs" type="List&lt;TargetedNotification&gt;"/>
                        <param name="source" type="ObjectName"/>
                        <param name="notif" type="Notification"/>
                    </params>
                    <declaration name="candidates" type="IdAndFilter[]" line="133"/>
                    <scope line="134">
                        <declaration name="set" type="Set&amp;lt;IdAndFilter&amp;gt;" line="135"/>
                        <scope line="136"/>
                    </scope>
                    <scope line="143">
                        <declaration name="nf" type="NotificationFilter" line="144"/>
                        <scope line="145">
                            <declaration name="tn" type="TargetedNotification" line="147"/>
                        </scope>
                    </scope>
                </method>
            </anonymous_class>
            <method name="fetchNotifs" type="NotificationResult" line="154">
                <params>
                    <param name="startSequenceNumber" type="long"/>
                    <param name="timeout" type="long"/>
                    <param name="maxNotifications" type="int"/>
                </params>
                <scope line="155"/>
                <declaration name="nr" type="NotificationResult" line="158"/>
                <declaration name="t" type="long" line="159"/>
                <scope line="160"/>
                <scope line="164"/>
                <scope line="167"/>
            </method>
            <method name="snoopOnUnregister" type="void" line="172">
                <params>
                    <param name="nr" type="NotificationResult"/>
                </params>
                <declaration name="delegateSet" type="Set&amp;lt;IdAndFilter&amp;gt;" line="173"/>
                <scope line="174"/>
                <scope line="177">
                    <declaration name="id" type="Integer" line="178"/>
                    <scope line="179">
                        <scope line="180">
                            <declaration name="n" type="Notification" line="181"/>
                            <scope line="182">
                                <declaration name="mbsn" type="MBeanServerNotification" line="183"/>
                                <declaration name="gone" type="ObjectName" line="184"/>
                                <scope line="185"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="terminate" type="void" line="193">
                <scope line="194"/>
                <scope line="197">
                    <scope line="198"/>
                    <scope line="202"/>
                </scope>
                <scope line="206"/>
            </method>
            <method name="getSubject" type="Subject" line="210"/>
            <method name="checkState" type="void" line="213">
                <scope line="214">
                    <scope line="215"/>
                </scope>
            </method>
            <method name="getListenerID" type="Integer" line="220">
                <scope line="221"/>
            </method>
            <javadoc line="225">
                Explicitly check the MBeanPermission for
                  the current access control context.                
            </javadoc>
            <method name="checkMBeanPermission" type="void" line="229">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="actions" type="String"/>
                </params>
                <declaration name="sm" type="SecurityManager" line="230"/>
                <scope line="231">
                    <declaration name="acc" type="AccessControlContext" line="232"/>
                    <declaration name="oi" type="ObjectInstance" line="233"/>
                    <scope line="234">
                        <anonymous_class line="235">
                            <method name="run" type="ObjectInstance" line="236"/>
                        </anonymous_class>
                    </scope>
                    <scope line="242"/>
                    <declaration name="classname" type="String" line="245"/>
                    <declaration name="perm" type="MBeanPermission" line="246"/>
                </scope>
            </method>
            <javadoc line="250">
                Check if the caller has the right to get the following notifications.                
            </javadoc>
            <method name="allowNotificationEmission" type="boolean" line="253">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="tn" type="TargetedNotification"/>
                </params>
                <scope line="254">
                    <scope line="255"/>
                    <scope line="258"/>
                </scope>
                <scope line="263">
                    <scope line="264"/>
                </scope>
                <scope line="269">
                    <scope line="270"/>
                </scope>
            </method>
            <javadoc line="276">
                Iterate until we extract the real exception
                  from a stack of PrivilegedActionExceptions.                
            </javadoc>
            <method name="extractException" type="Exception" line="280">
                <params>
                    <param name="e" type="Exception"/>
                </params>
                <scope line="281"/>
            </method>
            <class name="IdAndFilter" line="286">
                <declaration name="id" type="Integer" line="287"/>
                <declaration name="filter" type="NotificationFilter" line="288"/>
                <method name="IdAndFilter" type="constructor" line="289">
                    <params>
                        <param name="id" type="Integer"/>
                        <param name="filter" type="NotificationFilter"/>
                    </params>
                </method>
                <method name="getId" type="Integer" line="293"/>
                <method name="getFilter" type="NotificationFilter" line="296"/>
                <method name="hashCode" type="int" line="299"/>
                <method name="equals" type="boolean" line="302">
                    <params>
                        <param name="o" type="Object"/>
                    </params>
                </method>
            </class>
            <declaration name="mbeanServer" type="MBeanServer" line="306"/>
            <declaration name="connectionId" type="String" line="307"/>
            <declaration name="connectionTimeout" type="long" line="308"/>
            <declaration name="listenerCounter" type="int" line="309"/>
            <declaration name="listenerCounterLock" type="int[]" line="310"/>
            <declaration name="notifBuffer" type="NotificationBuffer" line="311"/>
            <declaration name="listenerMap" type="Map&amp;lt;ObjectName,Set&amp;lt;IdAndFilter&amp;gt;&amp;gt;" line="312"/>
            <declaration name="terminated" type="boolean" line="313"/>
            <declaration name="terminationLock" type="int[]" line="314"/>
            <declaration name="broadcasterClass" type="String" line="315"/>
            <declaration name="checkNotificationEmission" type="boolean" line="316"/>
            <declaration name="notificationAccessController" type="NotificationAccessController" line="317"/>
            <declaration name="logger" type="ClassLogger" line="318"/>
        </class>
    </source>