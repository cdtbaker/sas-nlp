<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.mbeanserver">
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.lang.reflect.Method"/>
        <import package="java.lang.reflect.Type"/>
        <import package="java.util.WeakHashMap"/>
        <import package="javax.management.Descriptor"/>
        <import package="javax.management.ImmutableDescriptor"/>
        <import package="javax.management.IntrospectionException"/>
        <import package="javax.management.MBeanAttributeInfo"/>
        <import package="javax.management.MBeanException"/>
        <import package="javax.management.MBeanOperationInfo"/>
        <import package="javax.management.NotCompliantMBeanException"/>
        <import package="javax.management.NotificationBroadcaster"/>
        <import package="javax.management.NotificationBroadcasterSupport"/>
        <class name="StandardMBeanIntrospector" line="42">
            <extends class="MBeanIntrospector">
                <type_params>
                    <type_param name="Method"/>
                </type_params>
            </extends>
            <comment line="155">
                Return true if and only if we can be sure that the given MBean implementation
                 class has immutable MBeanInfo.  A Standard MBean that is a
                 NotificationBroadcaster is allowed to return different values at
                 different times from its getNotificationInfo() method, which is when
                 we might not know if it is immutable.  But if it is a subclass of
                 NotificationBroadcasterSupport and does not override
                 getNotificationInfo(), then we know it won&apos;t change.                
            </comment>
            <javadoc line="42">
                @since 1.6                
            </javadoc>
            <declaration name="instance" type="StandardMBeanIntrospector" line="46"/>
            <method name="getInstance" type="StandardMBeanIntrospector" line="49"/>
            <method name="getPerInterfaceMap" type="PerInterfaceMap<Method>" line="54"/>
            <method name="getMBeanInfoMap" type="MBeanInfoMap" line="59"/>
            <method name="getAnalyzer" type="MBeanAnalyzer<Method>" line="65">
                <params>
                    <param name="mbeanInterface" type="Class<?>"/>
                </params>
            </method>
            <method name="isMXBean" type="boolean" line="70"/>
            <method name="mFrom" type="Method" line="75">
                <params>
                    <param name="m" type="Method"/>
                </params>
            </method>
            <method name="getName" type="String" line="80">
                <params>
                    <param name="m" type="Method"/>
                </params>
            </method>
            <method name="getGenericReturnType" type="Type" line="85">
                <params>
                    <param name="m" type="Method"/>
                </params>
            </method>
            <method name="getGenericParameterTypes" type="Type[]" line="90">
                <params>
                    <param name="m" type="Method"/>
                </params>
            </method>
            <method name="getSignature" type="String[]" line="95">
                <params>
                    <param name="m" type="Method"/>
                </params>
                <declaration name="params" type="Class&lt;?&gt;[]" line="96"/>
                <declaration name="sig" type="String[]" line="97"/>
            </method>
            <method name="checkMethod" type="void" line="104">
                <params>
                    <param name="m" type="Method"/>
                </params>
            </method>
            <method name="invokeM2" type="Object" line="110">
                <params>
                    <param name="m" type="Method"/>
                    <param name="target" type="Object"/>
                    <param name="args" type="Object[]"/>
                    <param name="cookie" type="Object"/>
                </params>
            </method>
            <method name="validParameter" type="boolean" line="115">
                <params>
                    <param name="m" type="Method"/>
                    <param name="value" type="Object"/>
                    <param name="paramNo" type="int"/>
                    <param name="cookie" type="Object"/>
                </params>
            </method>
            <method name="getMBeanAttributeInfo" type="MBeanAttributeInfo" line="121">
                <params>
                    <param name="attributeName" type="String"/>
                    <param name="getter" type="Method"/>
                    <param name="setter" type="Method"/>
                </params>
                <comment line="129">
                    should not happen                    
                </comment>
                <declaration name="description" type="String" line="123"/>
                <scope line="124"/>
                <scope line="127"/>
            </method>
            <method name="getMBeanOperationInfo" type="MBeanOperationInfo" line="134">
                <params>
                    <param name="operationName" type="String"/>
                    <param name="operation" type="Method"/>
                </params>
                <declaration name="description" type="String" line="135"/>
            </method>
            <method name="getBasicMBeanDescriptor" type="Descriptor" line="140">
                <comment line="142">
                    We don&apos;t bother saying mxbean=false, and we can&apos;t know whether
                    the info is immutable until we know whether the MBean class                    
                </comment>
            </method>
            <method name="getMBeanDescriptor" type="Descriptor" line="148">
                <params>
                    <param name="resourceClass" type="Class<?>"/>
                </params>
                <declaration name="immutable" type="boolean" line="149"/>
            </method>
            <method name="isDefinitelyImmutableInfo" type="boolean" line="162">
                <params>
                    <param name="implClass" type="Class<?>"/>
                </params>
                <comment line="176">
                    Too bad, we&apos;ll say no for now.                    
                </comment>
                <scope line="165">
                    <declaration name="immutable" type="Boolean" line="166"/>
                    <scope line="167">
                        <declaration name="nbs" type="Class&lt;NotificationBroadcasterSupport&gt;" line="168"/>
                        <scope line="170">
                            <scope line="171">
                                <declaration name="m" type="Method" line="172"/>
                            </scope>
                            <scope line="174"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <declaration name="definitelyImmutable" type="WeakHashMap&lt;Class&lt;?&gt;,Boolean&gt;" line="185"/>
            <declaration name="perInterfaceMap" type="PerInterfaceMap&lt;Method&gt;" line="188"/>
            <declaration name="mbeanInfoMap" type="MBeanInfoMap" line="191"/>
        </class>
    </source>