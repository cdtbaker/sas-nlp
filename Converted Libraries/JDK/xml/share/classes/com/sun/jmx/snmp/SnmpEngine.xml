<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp">
        <interface name="SnmpEngine">
            <javadoc line="27">
                This engine is conformant with the RFC 2571. It is the main object within an SNMP entity (agent, manager...).
                  To an engine is associated an {@link SnmpEngineId}.
                  Engine instantiation is based on a factory {@link com.sun.jmx.snmp.SnmpEngineFactory  SnmpEngineFactory}.
                  When an &lt;CODE&gt; SnmpEngine &lt;/CODE&gt; is created, a User based Security Model (USM) is initialized. The security configuration is located in a text file.
                  The text file is read when the engine is created.
                  &lt;p&gt;Note that the engine is not used when the agent is SNMPv1/SNMPv2 only.
                  &lt;P&gt; The USM configuration text file is remotely updatable using the USM Mib.&lt;/P&gt;
                  &lt;P&gt; User that are configured in the Usm text file are nonVolatile. &lt;/P&gt;
                  &lt;P&gt; Usm Mib userEntry supported storage type values are : volatile or nonVolatile only. Other values are rejected and a wrongValue is returned) &lt;/P&gt;
                  &lt;ul&gt;
                  &lt;li&gt; volatile means that user entry is not flushed in security file &lt;/li&gt;
                  &lt;li&gt; nonVolatile means that user entry is flushed in security file &lt;/li&gt;
                  &lt;li&gt; If a nonVolatile row is set to be volatile, it will be not flushed in the file &lt;/li&gt;
                  &lt;li&gt;If a volatile row created from the UsmMib is set to nonVolatile, it will be flushed in the file (if the file exist and is writable otherwise an inconsistentValue is returned)&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;p&gt;&lt;b&gt;This API is a Sun Microsystems internal API  and is subject
                  to change without notice.&lt;/b&gt;&lt;/p&gt;                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="getEngineTime" type="int" line="48"/>
            <javadoc line="48">
                Gets the engine time in seconds. This is the time from the last reboot.                
                <return>
                    The time from the last reboot.                    
                </return>
            </javadoc>
            <method name="getEngineId" type="SnmpEngineId" line="53"/>
            <javadoc line="53">
                Gets the engine Id. This is unique for each engine.                
                <return>
                    The engine Id object.                    
                </return>
            </javadoc>
            <method name="getEngineBoots" type="int" line="59"/>
            <javadoc line="59">
                Gets the engine boot number. This is the number of time this engine has rebooted. Each time an &lt;CODE&gt;SnmpEngine&lt;/CODE&gt; is instantiated, it will read this value in its Lcd, and store back the value incremented by one.                
                <return>
                    The engine's number of reboot.                    
                </return>
            </javadoc>
            <method name="getUsmKeyHandler" type="SnmpUsmKeyHandler" line="65"/>
            <javadoc line="65">
                Gets the Usm key handler.                
                <return>
                    The key handler.                    
                </return>
            </javadoc>
        </interface>
    </source>