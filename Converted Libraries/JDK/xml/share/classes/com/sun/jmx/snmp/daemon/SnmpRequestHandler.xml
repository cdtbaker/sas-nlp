<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp.daemon">
        <import package="java.util.Vector"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.Hashtable"/>
        <import package="java.util.logging.Level"/>
        <import package="java.io.InterruptedIOException"/>
        <import package="java.net.DatagramSocket"/>
        <import package="java.net.DatagramPacket"/>
        <import package="java.net.SocketException"/>
        <import package="javax.management.MBeanServer"/>
        <import package="javax.management.ObjectName"/>
        <import package="com.sun.jmx.snmp.SnmpMessage"/>
        <import package="com.sun.jmx.snmp.SnmpPduFactory"/>
        <import package="com.sun.jmx.snmp.SnmpPduBulk"/>
        <import package="com.sun.jmx.snmp.SnmpPduPacket"/>
        <import package="com.sun.jmx.snmp.SnmpPduRequest"/>
        <import package="com.sun.jmx.snmp.SnmpPduTrap"/>
        <import package="com.sun.jmx.snmp.SnmpValue"/>
        <import package="com.sun.jmx.snmp.SnmpVarBind"/>
        <import package="com.sun.jmx.snmp.SnmpVarBindList"/>
        <import package="com.sun.jmx.snmp.SnmpDefinitions"/>
        <import package="com.sun.jmx.snmp.SnmpStatusException"/>
        <import package="com.sun.jmx.snmp.SnmpTooBigException"/>
        <import package="com.sun.jmx.snmp.SnmpDataTypeEnums"/>
        <import package="com.sun.jmx.defaults.JmxProperties.SNMP_ADAPTOR_LOGGER"/>
        <import package="com.sun.jmx.snmp.agent.SnmpMibAgent"/>
        <import package="com.sun.jmx.snmp.agent.SnmpUserDataFactory"/>
        <import package="com.sun.jmx.snmp.InetAddressAcl"/>
        <class name="SnmpRequestHandler" line="72">
            <extends class="ClientHandler"/>
            <comment line="442">
                Generates a response packet, filling the values in the
                 varbindlist with one of endOfMibView, noSuchObject, noSuchInstance
                 according to the value of &lt;code&gt;status&lt;/code&gt;
                
                 @param statusTag should be one of:
                        &lt;li&gt;SnmpDataTypeEnums.errEndOfMibViewTag&lt;/li&gt;
                        &lt;li&gt;SnmpDataTypeEnums.errNoSuchObjectTag&lt;/li&gt;
                        &lt;li&gt;SnmpDataTypeEnums.errNoSuchInstanceTag&lt;/li&gt;                
            </comment>
            <comment line="476">
                Generates an appropriate response when no mib is registered in
                 the adaptor.
                
                 &lt;li&gt;If the version is V1:&lt;/li&gt;
                 &lt;ul&gt;&lt;li&gt;Generates a NoSuchName error V1 response PDU&lt;/li&gt;&lt;/ul&gt;
                 &lt;li&gt;If the version is V2:&lt;/li&gt;
                 &lt;ul&gt;&lt;li&gt;If the request is a GET, fills the varbind list with
                         NoSuchObject&apos;s&lt;/li&gt;
                     &lt;li&gt;If the request is a GET-NEXT/GET-BULK, fills the varbind
                         list with EndOfMibView&apos;s&lt;/li&gt;
                     &lt;li&gt;If the request is a SET, generates a NoAccess error V2
                          response PDU&lt;/li&gt;
                 &lt;/ul&gt;                
            </comment>
            <implements interface="SnmpDefinitions"/>
            <declaration name="socket" type="DatagramSocket" line="74"/>
            <declaration name="packet" type="DatagramPacket" line="75"/>
            <declaration name="mibs" type="Vector" line="76"/>
            <declaration name="subs" type="Hashtable&lt;SnmpMibAgent,SnmpSubRequestHandler&gt;" line="78"/>
            <javadoc line="78">
                Contains the list of sub-requests associated to the current request.                
            </javadoc>
            <declaration name="root" type="SnmpMibTree" line="83"/>
            <javadoc line="83">
                Reference on the MIBS                
            </javadoc>
            <declaration name="ipacl" type="Object" line="88"/>
            <declaration name="pduFactory" type="SnmpPduFactory" line="89"/>
            <declaration name="userDataFactory" type="SnmpUserDataFactory" line="90"/>
            <declaration name="adaptor" type="SnmpAdaptorServer" line="91"/>
            <javadoc line="92">
                Full constructor                
            </javadoc>
            <method name="SnmpRequestHandler" type="constructor" line="101">
                <params>
                    <param name="server" type="SnmpAdaptorServer"/>
                    <param name="id" type="int"/>
                    <param name="s" type="DatagramSocket"/>
                    <param name="p" type="DatagramPacket"/>
                    <param name="tree" type="SnmpMibTree"/>
                    <param name="m" type="Vector"/>
                    <param name="a" type="Object"/>
                    <param name="factory" type="SnmpPduFactory"/>
                    <param name="dataFactory" type="SnmpUserDataFactory"/>
                    <param name="f" type="MBeanServer"/>
                    <param name="n" type="ObjectName"/>
                </params>
                <comment line="105">
                    Need a reference on SnmpAdaptorServer for getNext &amp; getBulk,
                     in case of oid equality (mib overlapping).                    
                </comment>
                <comment line="117">
                    thread.start();                    
                </comment>
            </method>
            <javadoc line="119">
                Treat the request available in &apos;packet&apos; and send the result
                  back to the client.
                  Note: we overwrite &apos;packet&apos; with the response bytes.                
            </javadoc>
            <method name="doRun" type="void" line="124">
                <comment line="127">
                    Trace the input packet                    
                </comment>
                <comment line="135">
                    Let&apos;s build the response packet                    
                </comment>
                <comment line="139">
                    Trace the output packet                    
                </comment>
                <comment line="147">
                    Send the response packet if any                    
                </comment>
                <scope line="128"/>
                <declaration name="respPacket" type="DatagramPacket" line="136"/>
                <scope line="140"/>
                <scope line="148">
                    <scope line="149"/>
                    <scope line="151">
                        <scope line="152">
                            <scope line="153"/>
                            <scope line="156"/>
                        </scope>
                    </scope>
                    <scope line="161">
                        <scope line="162"/>
                    </scope>
                    <scope line="166">
                        <scope line="167"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="175">
                Here we make a response packet from a request packet.
                  We return null if there no response packet to sent.                
            </javadoc>
            <method name="makeResponsePacket" type="DatagramPacket" line="179">
                <params>
                    <param name="reqPacket" type="DatagramPacket"/>
                </params>
                <comment line="183">
                    Transform the request packet into a request SnmpMessage                    
                </comment>
                <comment line="200">
                    Make the response SnmpMessage if any                    
                </comment>
                <comment line="207">
                    Try to transform the response SnmpMessage into response packet.
                     NOTE: we overwrite the request packet.                    
                </comment>
                <declaration name="respPacket" type="DatagramPacket" line="180"/>
                <declaration name="reqMsg" type="SnmpMessage" line="184"/>
                <scope line="185"/>
                <scope line="190">
                    <scope line="191"/>
                </scope>
                <declaration name="respMsg" type="SnmpMessage" line="201"/>
                <scope line="202"/>
                <scope line="209">
                    <scope line="210"/>
                    <scope line="214">
                        <scope line="215"/>
                        <scope line="219"/>
                        <scope line="224">
                            <scope line="225"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="237">
                Here we make a response message from a request message.
                  We return null if there is no message to reply.                
            </javadoc>
            <method name="makeResponseMessage" type="SnmpMessage" line="241">
                <params>
                    <param name="reqMsg" type="SnmpMessage"/>
                </params>
                <comment line="245">
                    Transform the request message into a request pdu                    
                </comment>
                <comment line="266">
                    Make the response pdu if any                    
                </comment>
                <comment line="279">
                    Try to transform the response pdu into a response message if any                    
                </comment>
                <comment line="300">
                    if the PDU is too small, why should we try to do
                     recovery ?                    
                </comment>
                <comment line="330">
                    we can not go any further in trying to
                     reduce the message !                    
                </comment>
                <comment line="336">
                    end of loop                    
                </comment>
                <declaration name="respMsg" type="SnmpMessage" line="242"/>
                <declaration name="reqPdu" type="SnmpPduPacket" line="246"/>
                <declaration name="userData" type="Object" line="247"/>
                <scope line="248"/>
                <scope line="253">
                    <declaration name="snmpServer" type="SnmpAdaptorServer" line="255"/>
                    <scope line="259"/>
                </scope>
                <declaration name="respPdu" type="SnmpPduPacket" line="267"/>
                <scope line="268">
                    <scope line="270"/>
                    <scope line="273"/>
                </scope>
                <scope line="280">
                    <scope line="281"/>
                    <scope line="285">
                        <scope line="287"/>
                    </scope>
                    <scope line="292">
                        <scope line="293"/>
                        <scope line="298">
                            <declaration name="pos" type="int" line="304"/>
                            <scope line="305"/>
                            <declaration name="old" type="int" line="309"/>
                            <scope line="310">
                                <scope line="311"/>
                                <scope line="317">
                                    <scope line="318"/>
                                    <scope line="324"/>
                                    <scope line="328"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="336">
                            <scope line="338"/>
                        </scope>
                        <scope line="343">
                            <scope line="344"/>
                            <scope line="349">
                                <scope line="351"/>
                            </scope>
                            <scope line="357">
                                <scope line="358"/>
                            </scope>
                        </scope>
                        <scope line="365">
                            <scope line="366"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="377">
                Here we make a response pdu from a request pdu.
                  We return null if there is no pdu to reply.                
            </javadoc>
            <method name="makeResponsePdu" type="SnmpPduPacket" line="382">
                <params>
                    <param name="reqPdu" type="SnmpPduPacket"/>
                    <param name="userData" type="Object"/>
                </params>
                <comment line="395">
                    reqPdu is accepted by ACLs                    
                </comment>
                <comment line="418">
                    reqPdu is rejected by ACLs                    
                </comment>
                <comment line="419">
                    respPdu contains the error response to be sent.
                     We send this response only if authResEnabled is true.                    
                </comment>
                <comment line="421">
                    No response should be sent                    
                </comment>
                <comment line="424">
                    A trap must be sent                    
                </comment>
                <declaration name="snmpServer" type="SnmpAdaptorServer" line="384"/>
                <declaration name="respPdu" type="SnmpPduPacket" line="385"/>
                <scope line="392">
                    <scope line="394">
                        <scope line="395">
                            <scope line="396"/>
                        </scope>
                    </scope>
                    <scope line="417">
                        <scope line="420"/>
                        <scope line="423">
                            <scope line="424"/>
                            <scope line="429">
                                <scope line="430"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="makeErrorVarbindPdu" type="SnmpPduPacket" line="451">
                <params>
                    <param name="req" type="SnmpPduPacket"/>
                    <param name="statusTag" type="int"/>
                </params>
                <declaration name="vblist" type="SnmpVarBind[]" line="453"/>
                <declaration name="length" type="int" line="454"/>
            </method>
            <method name="makeNoMibErrorPdu" type="SnmpPduPacket" line="490">
                <params>
                    <param name="req" type="SnmpPduRequest"/>
                    <param name="userData" type="Object"/>
                </params>
                <comment line="492">
                    There is no agent registered                    
                </comment>
                <comment line="495">
                    Version 1: =&gt; NoSuchName                    
                </comment>
                <comment line="499">
                    Version 2: =&gt; depends on PDU type                    
                </comment>
                <comment line="503">
                    SET request =&gt; NoAccess                    
                </comment>
                <comment line="507">
                    GET request =&gt; NoSuchObject                    
                </comment>
                <comment line="513">
                    GET-NEXT or GET-BULK =&gt; EndOfMibView                    
                </comment>
                <comment line="520">
                    Something wrong here: =&gt; snmpRspGenErr                    
                </comment>
                <scope line="493"/>
                <scope line="497"/>
            </method>
            <javadoc line="523">
                Here we make the response pdu from a get/set request pdu.
                  At this level, the result is never null.                
            </javadoc>
            <method name="makeGetSetResponsePdu" type="SnmpPduPacket" line="528">
                <params>
                    <param name="req" type="SnmpPduRequest"/>
                    <param name="userData" type="Object"/>
                </params>
                <comment line="531">
                    Create the trhead group specific for handling sub-requests
                     associated to the current request. Use the invoke id
                    
                     Nice idea to use a thread group on a request basis.
                     However the impact on performance is terrible !
                     theGroup= new ThreadGroup(thread.getThreadGroup(),
                                    &quot;request &quot; + String.valueOf(req.requestId));                    
                </comment>
                <comment line="539">
                    Let&apos;s build the varBindList for the response pdu                    
                </comment>
                <comment line="543">
                    Good ! Let&apos;s make a full response pdu.                    
                </comment>
                <comment line="548">
                    First we need to split the request into subrequests                    
                </comment>
                <comment line="556">
                    Execute all the subrequests resulting from the split of the
                     varbind list.                    
                </comment>
                <comment line="561">
                    It means that an error occured. The error is already
                     formatted by the executeSubRequest
                     method.                    
                </comment>
                <comment line="566">
                    So far so good. So we need to concatenate all the answers.                    
                </comment>
                <scope line="541"/>
                <declaration name="nbSubRequest" type="int" line="550"/>
                <declaration name="result" type="SnmpPduPacket" line="558"/>
                <scope line="567"/>
            </method>
            <javadoc line="575">
                The method runs all the sub-requests associated to the current
                  instance of SnmpRequestHandler.                
            </javadoc>
            <method name="executeSubRequest" type="SnmpPduPacket" line="580">
                <params>
                    <param name="req" type="SnmpPduPacket"/>
                    <param name="userData" type="Object"/>
                </params>
                <comment line="587">
                    If it&apos;s a set request, we must first check any varBind                    
                </comment>
                <comment line="593">
                    Indicate to the sub request that a check must be invoked ...
                     OK we should have defined out own tag for that !                    
                </comment>
                <comment line="606">
                    No point to go any further.                    
                </comment>
                <comment line="617">
                    end processing check operation for a set PDU.                    
                </comment>
                <comment line="619">
                    Let&apos;s start the sub-requests.                    
                </comment>
                <comment line="624">
                                        
                </comment>
                <comment line="626">
                                        
                </comment>
                <comment line="631">
                    No point to go any further.                    
                </comment>
                <comment line="643">
                    everything is ok                    
                </comment>
                <declaration name="errorStatus" type="int" line="582"/>
                <declaration name="nbSubRequest" type="int" line="583"/>
                <declaration name="i" type="int" line="585"/>
                <scope line="588">
                    <scope line="591">
                        <declaration name="sub" type="SnmpSubRequestHandler" line="595"/>
                        <scope line="604">
                            <scope line="607"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="621">
                    <declaration name="sub" type="SnmpSubRequestHandler" line="622"/>
                    <scope line="629">
                        <scope line="632"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="647">
                Optimize when there is only one sub request                
            </javadoc>
            <method name="turboProcessingGetSet" type="SnmpPduPacket" line="651">
                <params>
                    <param name="req" type="SnmpPduRequest"/>
                    <param name="userData" type="Object"/>
                </params>
                <comment line="658">
                    Indicate to the sub request that a check must be invoked ...
                     OK we should have defined out own tag for that !                    
                </comment>
                <comment line="666">
                    Check the error status.                    
                </comment>
                <comment line="670">
                    No point to go any further.                    
                </comment>
                <comment line="677">
                    process the operation                    
                </comment>
                <comment line="683">
                    No point to go any further.                    
                </comment>
                <comment line="693">
                    So far so good. So we need to concatenate all the answers.                    
                </comment>
                <declaration name="errorStatus" type="int" line="653"/>
                <declaration name="sub" type="SnmpSubRequestHandler" line="654"/>
                <scope line="660">
                    <scope line="668"/>
                </scope>
                <scope line="681">
                    <scope line="684"/>
                    <declaration name="realIndex" type="int" line="688"/>
                </scope>
                <scope line="695"/>
            </method>
            <javadoc line="703">
                Here we make the response pdu for a bulk request.
                  At this level, the result is never null.                
            </javadoc>
            <method name="makeGetBulkResponsePdu" type="SnmpPduPacket" line="708">
                <params>
                    <param name="req" type="SnmpPduBulk"/>
                    <param name="userData" type="Object"/>
                </params>
                <comment line="713">
                    RFC 1905, Section 4.2.3, p14                    
                </comment>
                <comment line="720">
                    Good ! Let&apos;s make a full response pdu.                    
                </comment>
                <comment line="725">
                    Split the request into subrequests.                    
                </comment>
                <comment line="734">
                    Now we remove useless trailing endOfMibView.                    
                </comment>
                <comment line="736">
                    respVarBindList[m2] item and next are going to be removed                    
                </comment>
                <comment line="745">
                    Trivial, of course...                    
                </comment>
                <comment line="754">
                    Good ! Let&apos;s make a full response pdu.                    
                </comment>
                <declaration name="respVarBindList" type="SnmpVarBind[]" line="710"/>
                <declaration name="L" type="int" line="713"/>
                <declaration name="N" type="int" line="714"/>
                <declaration name="M" type="int" line="715"/>
                <declaration name="R" type="int" line="716"/>
                <scope line="718"/>
                <declaration name="result" type="SnmpPduPacket" line="727"/>
                <declaration name="m2" type="int" line="735"/>
                <declaration name="t" type="int" line="736"/>
                <scope line="738"/>
                <scope line="745">
                    <declaration name="truncatedList" type="SnmpVarBind[]" line="746"/>
                    <scope line="747"/>
                </scope>
            </method>
            <javadoc line="758">
                Check the type of the pdu: only the get/set/bulk request
                  are accepted.                
            </javadoc>
            <method name="checkPduType" type="boolean" line="762">
                <params>
                    <param name="pdu" type="SnmpPduPacket"/>
                </params>
                <declaration name="result" type="boolean" line="764"/>
                <scope line="776"/>
            </method>
            <javadoc line="787">
                Check if the specified pdu is conform to the ACL.
                  This method returns null if the pdu is ok. If not, it returns
                  the response pdu to be replied.                
            </javadoc>
            <method name="checkAcl" type="SnmpPduPacket" line="792">
                <params>
                    <param name="pdu" type="SnmpPduPacket"/>
                </params>
                <comment line="797">
                    We check the pdu type and create an error response if
                     the check failed.                    
                </comment>
                <comment line="852">
                    If the response is not null, this means the pdu is rejected.
                     So let&apos;s update the statistics.                    
                </comment>
                <declaration name="response" type="SnmpPduPacket" line="793"/>
                <declaration name="community" type="String" line="794"/>
                <scope line="799">
                    <scope line="800">
                        <scope line="802">
                            <scope line="803"/>
                            <declaration name="err" type="int" line="808"/>
                        </scope>
                        <scope line="814">
                            <scope line="815"/>
                        </scope>
                    </scope>
                    <scope line="822">
                        <scope line="823">
                            <scope line="824"/>
                            <declaration name="err" type="int" line="829"/>
                            <declaration name="snmpServer" type="SnmpAdaptorServer" line="836"/>
                        </scope>
                        <scope line="841">
                            <scope line="842"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="854">
                    <declaration name="snmpServer" type="SnmpAdaptorServer" line="855"/>
                </scope>
            </method>
            <javadoc line="864">
                Make a response pdu with the specified error status and index.
                  NOTE: the response pdu share its varBindList with the request pdu.                
            </javadoc>
            <method name="newValidResponsePdu" type="SnmpPduRequest" line="869">
                <params>
                    <param name="reqPdu" type="SnmpPduPacket"/>
                    <param name="varBindList" type="SnmpVarBind[]"/>
                </params>
                <declaration name="result" type="SnmpPduRequest" line="870"/>
            </method>
            <javadoc line="888">
                Make a response pdu with the specified error status and index.
                  NOTE: the response pdu share its varBindList with the request pdu.                
            </javadoc>
            <method name="newErrorResponsePdu" type="SnmpPduRequest" line="892">
                <params>
                    <param name="req" type="SnmpPduPacket"/>
                    <param name="s" type="int"/>
                    <param name="i" type="int"/>
                </params>
                <declaration name="result" type="SnmpPduRequest" line="893"/>
            </method>
            <method name="newTooBigMessage" type="SnmpMessage" line="905">
                <params>
                    <param name="reqMsg" type="SnmpMessage"/>
                </params>
                <comment line="919">
                    This should not occur because decodeIncomingRequest has normally
                     been successfully called before.                    
                </comment>
                <declaration name="result" type="SnmpMessage" line="906"/>
                <declaration name="reqPdu" type="SnmpPduPacket" line="907"/>
                <scope line="909">
                    <scope line="911">
                        <declaration name="respPdu" type="SnmpPduPacket" line="912"/>
                    </scope>
                </scope>
                <scope line="917">
                    <scope line="920"/>
                </scope>
            </method>
            <method name="newTooBigPdu" type="SnmpPduPacket" line="930">
                <params>
                    <param name="req" type="SnmpPduPacket"/>
                </params>
                <declaration name="result" type="SnmpPduRequest" line="931"/>
            </method>
            <method name="reduceResponsePdu" type="SnmpPduPacket" line="940">
                <params>
                    <param name="req" type="SnmpPduPacket"/>
                    <param name="resp" type="SnmpPduPacket"/>
                    <param name="acceptedVbCount" type="int"/>
                </params>
                <comment line="943">
                    Reduction can be attempted only on bulk response                    
                </comment>
                <comment line="953">
                    We&apos;re going to reduce the varbind list.
                     First determine which items should be removed.
                     Next duplicate and replace the existing list by the reduced one.
                    
                     acceptedVbCount is the number of varbind which have been
                     successfully encoded before reaching bufferSize:
                       * when it is &gt;= 2, we split the varbindlist at this
                         position (-1 to be safe),
                       * when it is 1, we only put one (big?) item in the varbindlist
                       * when it is 0 (in fact, acceptedVbCount is not available),
                         we split the varbindlist by 2.                    
                </comment>
                <comment line="970">
                    acceptedCount == 0 ie it is unknown                    
                </comment>
                <scope line="944">
                    <scope line="945"/>
                </scope>
                <declaration name="vbCount" type="int" line="964"/>
                <scope line="972">
                    <scope line="973"/>
                </scope>
                <scope line="979">
                    <declaration name="newVbList" type="SnmpVarBind[]" line="980"/>
                    <scope line="981"/>
                    <scope line="984"/>
                </scope>
            </method>
            <javadoc line="995">
                The method takes the incoming requests and split it into subrequests.                
            </javadoc>
            <method name="splitRequest" type="void" line="998">
                <params>
                    <param name="req" type="SnmpPduRequest"/>
                </params>
                <comment line="1004">
                    Take all the oids contained in the request and                    
                </comment>
                <comment line="1010">
                    For the get next operation we are going to send the varbind list
                     to all agents                    
                </comment>
                <comment line="1028">
                    We need to create the sub request handler and update
                     the hashtable                    
                </comment>
                <comment line="1035">
                    Update the translation table within the subrequest                    
                </comment>
                <declaration name="nbAgents" type="int" line="1000"/>
                <declaration name="agent" type="SnmpMibAgent" line="1001"/>
                <scope line="1002"/>
                <scope line="1012">
                    <scope line="1013">
                        <declaration name="ag" type="SnmpMibAgent" line="1014"/>
                    </scope>
                </scope>
                <declaration name="nbReqs" type="int" line="1020"/>
                <declaration name="vars" type="SnmpVarBind[]" line="1021"/>
                <declaration name="sub" type="SnmpSubRequestHandler" line="1022"/>
                <scope line="1023">
                    <scope line="1026"/>
                </scope>
            </method>
            <javadoc line="1040">
                The method takes the incoming get bulk requests and split it into
                  subrequests.                
            </javadoc>
            <method name="splitBulkRequest" type="void" line="1047">
                <params>
                    <param name="req" type="SnmpPduBulk"/>
                    <param name="nonRepeaters" type="int"/>
                    <param name="maxRepetitions" type="int"/>
                    <param name="R" type="int"/>
                </params>
                <comment line="1049">
                    Send the getBulk to all agents                    
                </comment>
                <scope line="1050">
                    <declaration name="agent" type="SnmpMibAgent" line="1051"/>
                    <scope line="1053"/>
                </scope>
            </method>
            <method name="mergeResponses" type="SnmpPduPacket" line="1070">
                <params>
                    <param name="req" type="SnmpPduRequest"/>
                </params>
                <comment line="1079">
                    Go through the list of subrequests and concatenate.
                     Hopefully, by now all the sub-requests should be finished                    
                </comment>
                <scope line="1072"/>
                <declaration name="result" type="SnmpVarBind[]" line="1076"/>
                <scope line="1081">
                    <declaration name="sub" type="SnmpSubRequestHandler" line="1082"/>
                </scope>
            </method>
            <method name="mergeNextResponses" type="SnmpPduPacket" line="1088">
                <params>
                    <param name="req" type="SnmpPduRequest"/>
                </params>
                <comment line="1093">
                    Go through the list of subrequests and concatenate.
                     Hopefully, by now all the sub-requests should be finished                    
                </comment>
                <comment line="1105">
                    In v1 make sure there is no endOfMibView ...                    
                </comment>
                <comment line="1114">
                    So far so good ...                    
                </comment>
                <declaration name="max" type="int" line="1089"/>
                <declaration name="result" type="SnmpVarBind[]" line="1090"/>
                <scope line="1095">
                    <declaration name="sub" type="SnmpSubRequestHandler" line="1096"/>
                </scope>
                <scope line="1100"/>
                <scope line="1106">
                    <declaration name="val" type="SnmpValue" line="1107"/>
                </scope>
            </method>
            <method name="mergeBulkResponses" type="SnmpVarBind[]" line="1118">
                <params>
                    <param name="size" type="int"/>
                </params>
                <comment line="1120">
                    Let&apos;s allocate the array for storing the result                    
                </comment>
                <comment line="1128">
                    Go through the list of subrequests and concatenate.
                     Hopefully, by now all the sub-requests should be finished                    
                </comment>
                <declaration name="result" type="SnmpVarBind[]" line="1121"/>
                <scope line="1122"/>
                <scope line="1130">
                    <declaration name="sub" type="SnmpSubRequestHandler" line="1131"/>
                </scope>
            </method>
            <method name="makeDebugTag" type="String" line="1138"/>
            <method name="createThread" type="Thread" line="1143">
                <params>
                    <param name="r" type="Runnable"/>
                </params>
            </method>
            <declaration name="InterruptSysCallMsg" type="String" line="1147"/>
            <declaration name="noSuchNameException" type="SnmpStatusException" line="1150"/>
        </class>
    </source>