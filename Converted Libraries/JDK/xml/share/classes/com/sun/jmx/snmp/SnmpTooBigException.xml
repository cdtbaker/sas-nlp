<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp">
        <class name="SnmpTooBigException" line="2">
            <extends class="Exception"/>
            <javadoc line="2">
                Is used internally to signal that the size of a PDU exceeds the packet size limitation.
                  &lt;p&gt;
                  You will not usually need to use this class, except if you
                  decide to implement your own{@link com.sun.jmx.snmp.SnmpPduFactory SnmPduFactory} object.
                  &lt;p&gt;
                  The &lt;CODE&gt;varBindCount&lt;/CODE&gt; property contains the
                  number of &lt;CODE&gt;SnmpVarBind&lt;/CODE&gt; successfully encoded
                  before the exception was thrown. Its value is 0
                  when this number is unknown.
                  &lt;p&gt;&lt;b&gt;This API is a Sun Microsystems internal API  and is subject
                  to change without notice.&lt;/b&gt;&lt;/p&gt;                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="16"/>
            <javadoc line="17">
                Builds an &lt;CODE&gt;SnmpTooBigException&lt;/CODE&gt; with
                  &lt;CODE&gt;varBindCount&lt;/CODE&gt; set to 0.                
            </javadoc>
            <method name="SnmpTooBigException" type="constructor" line="21"/>
            <javadoc line="24">
                Builds an &lt;CODE&gt;SnmpTooBigException&lt;/CODE&gt; with
                  &lt;CODE&gt;varBindCount&lt;/CODE&gt; set to the specified value.                
                <param>
                    n The &lt;CODE&gt;varBindCount&lt;/CODE&gt; value.                    
                </param>
            </javadoc>
            <method name="SnmpTooBigException" type="constructor" line="29">
                <params>
                    <param name="n" type="int"/>
                </params>
            </method>
            <javadoc line="32">
                Returns the number of &lt;CODE&gt;SnmpVarBind&lt;/CODE&gt; successfully
                  encoded before the exception was thrown.                
                <return>
                    A positive integer (0 means the number is unknown).                    
                </return>
            </javadoc>
            <method name="getVarBindCount" type="int" line="37"/>
            <declaration name="varBindCount" type="int" line="40"/>
            <javadoc line="40">
                The &lt;CODE&gt;varBindCount&lt;/CODE&gt;.                
                <serial>
                                        
                </serial>
            </javadoc>
        </class>
    </source>