<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp.IPAcl">
        <import package="java.util.Vector"/>
        <import package="java.io.Serializable"/>
        <import package="java.security.Principal"/>
        <import package="java.security.acl.Owner"/>
        <import package="java.security.acl.LastOwnerException"/>
        <import package="java.security.acl.NotOwnerException"/>
        <class name="OwnerImpl" line="8">
            <implements interface="Owner"/>
            <implements interface="Serializable"/>
            <javadoc line="8">
                Owner of Access Control Lists (ACLs).
                  The initial owner Principal should be specified as an
                  argument to the constructor of the class AclImpl.                
                <see>
                    java.security.acl.Owner                    
                </see>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="15"/>
            <declaration name="ownerList" type="Vector&amp;lt;Principal&amp;gt;" line="16"/>
            <javadoc line="17">
                Constructs an empty list of owner.                
            </javadoc>
            <method name="OwnerImpl" type="constructor" line="20"/>
            <javadoc line="23">
                Constructs a list of owner with the specified principal as first element.                
                <param>
                    owner the principal added to the owner list.                    
                </param>
            </javadoc>
            <method name="OwnerImpl" type="constructor" line="27">
                <params>
                    <param name="owner" type="PrincipalImpl"/>
                </params>
            </method>
            <javadoc line="31">
                Adds an owner. Only owners can modify ACL contents. The caller principal
                  must be an owner of the ACL in order to invoke this method. That is, only
                  an owner can add another owner. The initial owner is configured at
                  ACL construction time.                
                <param>
                    caller the principal invoking this method.
                      It must be an owner of the ACL.                    
                </param>
                <param>
                    owner the owner that should be added to the list of owners.                    
                </param>
                <return>
                    true if successful, false if owner is already an owner.                    
                </return>
                <exception>
                    NotOwnerException if the caller principal is not an owner
                      of the ACL.                    
                </exception>
            </javadoc>
            <method name="addOwner" type="boolean" line="43">
                <params>
                    <param name="caller" type="Principal"/>
                    <param name="owner" type="Principal"/>
                </params>
                <scope line="45"/>
                <scope line="48"/>
            </method>
            <javadoc line="53">
                Deletes an owner. If this is the last owner in the ACL, an exception is raised.
                  &lt;P&gt;
                  The caller principal must be an owner of the ACL in order to invoke this method.                
                <param>
                    caller the principal invoking this method. It must be an owner
                      of the ACL.                    
                </param>
                <param>
                    owner the owner to be removed from the list of owners.                    
                </param>
                <return>
                    true if successful, false if owner is already an owner.                    
                </return>
                <exception>
                    NotOwnerException if the caller principal is not an owner
                      of the ACL.                    
                </exception>
                <exception>
                    LastOwnerException if there is only one owner left, so that
                      deleteOwner would leave the ACL owner-less.                    
                </exception>
            </javadoc>
            <method name="deleteOwner" type="boolean" line="66">
                <params>
                    <param name="caller" type="Principal"/>
                    <param name="owner" type="Principal"/>
                </params>
                <scope line="68"/>
                <scope line="71"/>
            </method>
            <javadoc line="77">
                Returns true if the given principal is an owner of the ACL.                
                <param>
                    owner the principal to be checked to determine whether or
                      not it is an owner.                    
                </param>
                <return>
                    true if the given principal is an owner of the ACL.                    
                </return>
            </javadoc>
            <method name="isOwner" type="boolean" line="83">
                <params>
                    <param name="owner" type="Principal"/>
                </params>
            </method>
        </class>
    </source>