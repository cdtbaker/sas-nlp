<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp">
        <import package="java.io.Serializable"/>
        <import package="com.sun.jmx.snmp.SnmpSecurityParameters"/>
        <import package="com.sun.jmx.snmp.SnmpDefinitions"/>
        <class name="SnmpScopedPduPacket" line="33">
            <extends class="SnmpPdu"/>
            <implements interface="Serializable"/>
            <javadoc line="33">
                Is the fully decoded representation of an SNMP V3 packet.
                  &lt;P&gt;
                  Classes are derived from &lt;CODE&gt;SnmpPdu&lt;/CODE&gt; to
                  represent the different forms of SNMP pdu
                  ({@link com.sun.jmx.snmp.SnmpScopedPduRequest SnmpScopedPduRequest},{@link com.sun.jmx.snmp.SnmpScopedPduBulk SnmpScopedPduBulk}).
                  &lt;BR&gt;The &lt;CODE&gt;SnmpScopedPduPacket&lt;/CODE&gt; class defines the attributes
                  common to every scoped SNMP packets.
                  &lt;p&gt;&lt;b&gt;This API is a Sun Microsystems internal API  and is subject
                  to change without notice.&lt;/b&gt;&lt;/p&gt;                
                <see>
                    SnmpV3Message                    
                </see>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="msgMaxSize" type="int" line="52"/>
            <javadoc line="52">
                Message max size the pdu sender can deal with.                
            </javadoc>
            <declaration name="msgId" type="int" line="57"/>
            <javadoc line="57">
                Message identifier.                
            </javadoc>
            <declaration name="msgFlags" type="byte" line="62"/>
            <javadoc line="62">
                Message flags. Reportable flag  and security level.&lt;/P&gt;
                  &lt;PRE&gt;
                  --  .... ...1   authFlag
                  --  .... ..1.   privFlag
                  --  .... .1..   reportableFlag
                  --              Please observe:
                  --  .... ..00   is OK, means noAuthNoPriv
                  --  .... ..01   is OK, means authNoPriv
                  --  .... ..10   reserved, must NOT be used.
                  --  .... ..11   is OK, means authPriv
                  &lt;/PRE&gt;                
            </javadoc>
            <declaration name="msgSecurityModel" type="int" line="77"/>
            <javadoc line="77">
                The security model the security sub system MUST use in order to deal with this pdu (eg: User based Security Model Id = 3).                
            </javadoc>
            <declaration name="contextEngineId" type="byte[]" line="82"/>
            <javadoc line="82">
                The context engine Id in which the pdu must be handled (Generaly the local engine Id).                
            </javadoc>
            <declaration name="contextName" type="byte[]" line="87"/>
            <javadoc line="87">
                The context name in which the OID have to be interpreted.                
            </javadoc>
            <declaration name="securityParameters" type="SnmpSecurityParameters" line="92"/>
            <javadoc line="92">
                The security parameters. This is an opaque member that is
                  interpreted by the concerned security model.                
            </javadoc>
            <javadoc line="98">
                Constructor. Is only called by a son. Set the version to &lt;CODE&gt;SnmpDefinitions.snmpVersionThree&lt;/CODE&gt;.                
            </javadoc>
            <method name="SnmpScopedPduPacket" type="constructor" line="101"/>
        </class>
    </source>