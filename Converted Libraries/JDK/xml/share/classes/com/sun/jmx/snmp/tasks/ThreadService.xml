<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp.tasks">
        <import package="java.util.ArrayList"/>
        <import package="com.sun.jmx.snmp.tasks.Task"/>
        <import package="com.sun.jmx.snmp.tasks.TaskServer"/>
        <class name="ThreadService" line="5">
            <implements interface="TaskServer"/>
            <javadoc line="5">
                This class implements a {@link com.sun.jmx.snmp.tasks.TaskServer} over
                  a thread pool.
                  &lt;p&gt;&lt;b&gt;This API is a Sun Microsystems internal API  and is subject
                  to change without notice.&lt;/b&gt;&lt;/p&gt;                
            </javadoc>
            <method name="ThreadService" type="constructor" line="12">
                <params>
                    <param name="threadNumber" type="int"/>
                </params>
                <scope line="13"/>
            </method>
            <javadoc line="21">
                Submit a task to be executed.
                  Once a task is submitted, it is guaranteed that either{@link com.sun.jmx.snmp.tasks.Task#run() task.run()} or{@link com.sun.jmx.snmp.tasks.Task#cancel() task.cancel()} will be called.
                  This implementation of TaskServer uses a thread pool to execute
                  the submitted tasks.                
                <param>
                    task The task to be executed.                    
                </param>
                <exception>
                    IllegalArgumentException if the submitted task is null.                    
                </exception>
            </javadoc>
            <method name="submitTask" type="void" line="29">
                <params>
                    <param name="task" type="Task"/>
                </params>
            </method>
            <javadoc line="32">
                Submit a task to be executed.
                  This implementation of TaskServer uses a thread pool to execute
                  the submitted tasks.                
                <param>
                    task The task to be executed.                    
                </param>
                <exception>
                    IllegalArgumentException if the submitted task is null.                    
                </exception>
            </javadoc>
            <method name="submitTask" type="void" line="39">
                <params>
                    <param name="task" type="Runnable"/>
                </params>
                <scope line="41"/>
                <scope line="44"/>
            </method>
            <method name="removeTask" type="Runnable" line="50">
                <params>
                    <param name="task" type="Runnable"/>
                </params>
                <declaration name="removed" type="Runnable" line="52"/>
                <scope line="53">
                    <declaration name="lg" type="int" line="54"/>
                    <scope line="55"/>
                </scope>
            </method>
            <method name="removeAll" type="void" line="62">
                <declaration name="jobs" type="Object[]" line="64"/>
                <scope line="65"/>
                <declaration name="len" type="int" line="69"/>
                <scope line="70">
                    <declaration name="o" type="Object" line="71"/>
                </scope>
            </method>
            <method name="terminate" type="void" line="75">
                <scope line="76"/>
                <scope line="80"/>
                <scope line="84">
                    <scope line="85"/>
                    <scope line="88"/>
                </scope>
            </method>
            <class name="ExecutorThread" line="93">
                <extends class="Thread"/>
                <method name="ExecutorThread" type="constructor" line="94"/>
                <method name="run" type="void" line="101">
                    <scope line="102">
                        <declaration name="job" type="Runnable" line="103"/>
                        <scope line="104">
                            <scope line="105">
                                <scope line="107"/>
                            </scope>
                            <scope line="111">
                                <scope line="112"/>
                                <scope line="115"/>
                                <scope line="117"/>
                            </scope>
                        </scope>
                        <scope line="122">
                            <scope line="123"/>
                            <scope line="127"/>
                            <scope line="130"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <method name="stateCheck" type="void" line="140">
                <scope line="141"/>
            </method>
            <method name="createThread" type="void" line="145">
                <scope line="146">
                    <scope line="147">
                        <scope line="148">
                            <declaration name="et" type="ExecutorThread" line="149"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <declaration name="jobList" type="ArrayList&lt;Runnable&gt;" line="156"/>
            <declaration name="threadList" type="ExecutorThread[]" line="157"/>
            <declaration name="minThreads" type="int" line="158"/>
            <declaration name="currThreds" type="int" line="159"/>
            <declaration name="idle" type="int" line="160"/>
            <declaration name="terminated" type="boolean" line="161"/>
            <declaration name="priority" type="int" line="162"/>
            <declaration name="threadGroup" type="ThreadGroup" line="163"/>
            <declaration name="cloader" type="ClassLoader" line="164"/>
            <declaration name="counter" type="long" line="165"/>
            <declaration name="addedJobs" type="int" line="166"/>
            <declaration name="doneJobs" type="int" line="167"/>
        </class>
    </source>