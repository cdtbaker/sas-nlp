<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp.daemon">
        <import package="java.util.logging.Level"/>
        <import package="java.util.Vector"/>
        <import package="com.sun.jmx.snmp.SnmpEngine"/>
        <import package="com.sun.jmx.snmp.SnmpPdu"/>
        <import package="com.sun.jmx.snmp.SnmpValue"/>
        <import package="com.sun.jmx.snmp.SnmpVarBind"/>
        <import package="com.sun.jmx.snmp.SnmpVarBindList"/>
        <import package="com.sun.jmx.snmp.SnmpOid"/>
        <import package="com.sun.jmx.snmp.SnmpDefinitions"/>
        <import package="com.sun.jmx.snmp.SnmpStatusException"/>
        <import package="com.sun.jmx.defaults.JmxProperties.SNMP_ADAPTOR_LOGGER"/>
        <import package="com.sun.jmx.snmp.agent.SnmpMibAgent"/>
        <import package="com.sun.jmx.snmp.agent.SnmpMibRequest"/>
        <import package="com.sun.jmx.snmp.daemon.SnmpAdaptorServer"/>
        <import package="com.sun.jmx.snmp.internal.SnmpIncomingRequest"/>
        <import package="com.sun.jmx.snmp.ThreadContext"/>
        <class name="SnmpSubNextRequestHandler" line="55">
            <extends class="SnmpSubRequestHandler"/>
            <declaration name="server" type="SnmpAdaptorServer" line="56"/>
            <javadoc line="57">
                The constuctor initialize the subrequest with the whole varbind
                  list contained in the original request.                
            </javadoc>
            <method name="SnmpSubNextRequestHandler" type="constructor" line="63">
                <params>
                    <param name="server" type="SnmpAdaptorServer"/>
                    <param name="agent" type="SnmpMibAgent"/>
                    <param name="req" type="SnmpPdu"/>
                </params>
            </method>
            <method name="SnmpSubNextRequestHandler" type="constructor" line="72">
                <params>
                    <param name="engine" type="SnmpEngine"/>
                    <param name="server" type="SnmpAdaptorServer"/>
                    <param name="incRequest" type="SnmpIncomingRequest"/>
                    <param name="agent" type="SnmpMibAgent"/>
                    <param name="req" type="SnmpPdu"/>
                </params>
                <scope line="75"/>
            </method>
            <method name="init" type="void" line="81">
                <params>
                    <param name="req" type="SnmpPdu"/>
                    <param name="server" type="SnmpAdaptorServer"/>
                </params>
                <comment line="84">
                    The translation table is easy in this case ...                    
                </comment>
                <comment line="85">
                                        
                </comment>
                <comment line="92">
                    we need to allocate a new SnmpVarBind. Otherwise the first                    
                </comment>
                <comment line="93">
                    sub request will modify the list...                    
                </comment>
                <comment line="94">
                                        
                </comment>
                <declaration name="max" type="int" line="86"/>
                <declaration name="list" type="SnmpVarBind[]" line="87"/>
                <declaration name="nonSyncVarBind" type="NonSyncVector&lt;SnmpVarBind&gt;" line="88"/>
                <scope line="90">
                    <declaration name="newVarBind" type="SnmpVarBind" line="95"/>
                </scope>
            </method>
            <method name="run" type="void" line="101">
                <comment line="104">
                                        
                </comment>
                <comment line="114">
                    Always call with V2. So the merge of the responses will                    
                </comment>
                <comment line="115">
                    be easier.                    
                </comment>
                <comment line="116">
                                        
                </comment>
                <comment line="121">
                                        
                </comment>
                <scope line="103">
                    <declaration name="oldContext" type="ThreadContext" line="105"/>
                    <scope line="107">
                        <scope line="108"/>
                    </scope>
                    <scope line="118"/>
                </scope>
                <scope line="124">
                    <scope line="127"/>
                </scope>
                <scope line="133">
                    <scope line="135"/>
                </scope>
                <scope line="141"/>
            </method>
            <javadoc line="147">
                The method updates the varbind list of the subrequest.                
            </javadoc>
            <method name="updateRequest" type="void" line="150">
                <params>
                    <param name="var" type="SnmpVarBind"/>
                    <param name="pos" type="int"/>
                </params>
                <scope line="151"/>
                <declaration name="size" type="int" line="155"/>
                <declaration name="newVarBind" type="SnmpVarBind" line="157"/>
                <scope line="159"/>
            </method>
            <javadoc line="166">
                The method updates a given var bind list with the result of a
                  previsouly invoked operation.
                  Prior to calling the method, one must make sure that the operation was
                  successful. As such the method getErrorIndex or getErrorStatus should be
                  called.                
            </javadoc>
            <method name="updateResult" type="void" line="173">
                <params>
                    <param name="result" type="SnmpVarBind[]"/>
                </params>
                <comment line="177">
                    May be we should control the position ...                    
                </comment>
                <comment line="178">
                                        
                </comment>
                <comment line="186">
                                        
                </comment>
                <comment line="187">
                    if ((elmt != null) &amp;&amp;  (elmt.value == null) &amp;&amp;                    
                </comment>
                <comment line="188">
                    (version == snmpVersionTwo))                    
                </comment>
                <comment line="189">
                    elmt.value = SnmpVarBind.endOfMibView;                    
                </comment>
                <comment line="190">
                                        
                </comment>
                <comment line="196">
                                        
                </comment>
                <comment line="200">
                    else if ((val == null) &amp;&amp; (version == snmpVersionTwo))                    
                </comment>
                <comment line="201">
                    vb.value = SnmpVarBind.endOfMibView;                    
                </comment>
                <comment line="203">
                                        
                </comment>
                <comment line="206">
                                        
                </comment>
                <comment line="208">
                                        
                </comment>
                <comment line="213">
                    Now we need to take the smallest oid ...                    
                </comment>
                <comment line="214">
                                        
                </comment>
                <comment line="217">
                    Take the smallest (lexicographically)                    
                </comment>
                <comment line="218">
                                        
                </comment>
                <comment line="223">
                    Must compare agent used for reply                    
                </comment>
                <comment line="224">
                    Take the deeper within the reply                    
                </comment>
                <comment line="249">
                    Vector v = new Vector();
                    SnmpMibRequest getReq = createMibRequest(v,
                    version,
                    null);
                    SnmpVarBind realValue = new SnmpVarBind(oid);
                    getReq.addVarBind(realValue);
                    try {
                    deeperAgent.get(getReq);
                    } catch(SnmpStatusException e) {
                    e.printStackTrace();
                    }
                    
                    if(isDebugOn())
                    trace(&quot;updateResult&quot;, &quot;Biggest priority value is : &quot; +
                    realValue.value);
                    
                    result[index].value = realValue.value;                    
                </comment>
                <declaration name="max" type="int" line="175"/>
                <scope line="176">
                    <declaration name="index" type="int" line="179"/>
                    <declaration name="elmt" type="SnmpVarBind" line="180"/>
                    <declaration name="vb" type="SnmpVarBind" line="183"/>
                    <scope line="184"/>
                    <declaration name="val" type="SnmpValue" line="194"/>
                    <scope line="195"/>
                    <declaration name="comp" type="int" line="215"/>
                    <scope line="216"/>
                    <scope line="221">
                        <scope line="222">
                            <scope line="225"/>
                            <declaration name="oid" type="SnmpOid" line="234"/>
                            <declaration name="deeperAgent" type="SnmpMibAgent" line="235"/>
                            <scope line="237"/>
                            <scope line="241">
                                <scope line="242"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
        </class>
    </source>