<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.remote.security">
        <import package="java.security.AccessController"/>
        <import package="java.security.AccessControlContext"/>
        <import package="java.security.Permission"/>
        <import package="java.security.Principal"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="javax.security.auth.Subject"/>
        <import package="javax.management.remote.SubjectDelegationPermission"/>
        <import package="com.sun.jmx.remote.util.CacheMap"/>
        <class name="SubjectDelegator" line="39">
            <comment line="47">
                Return the AccessControlContext appropriate to execute an
                operation on behalf of the delegatedSubject.  If the
                authenticatedAccessControlContext does not have permission to                
            </comment>
            <declaration name="PRINCIPALS_CACHE_SIZE" type="int" line="40"/>
            <declaration name="ACC_CACHE_SIZE" type="int" line="41"/>
            <declaration name="principalsCache" type="CacheMap&lt;Subject,Principal[]&gt;" line="43"/>
            <declaration name="accCache" type="CacheMap&lt;Subject,AccessControlContext&gt;" line="44"/>
            <method name="delegatedContext" type="AccessControlContext" line="54">
                <params>
                    <param name="authenticatedACC" type="AccessControlContext"/>
                    <param name="delegatedSubject" type="Subject"/>
                    <param name="removeCallerContext" type="boolean"/>
                </params>
                <comment line="63">
                    Retrieve the principals for the given                    
                </comment>
                <comment line="64">
                    delegated subject from the cache                    
                </comment>
                <comment line="65">
                                        
                </comment>
                <comment line="68">
                    Convert the set of principals stored in the                    
                </comment>
                <comment line="69">
                    delegated subject into an array of principals                    
                </comment>
                <comment line="70">
                    and store it in the cache                    
                </comment>
                <comment line="71">
                                        
                </comment>
                <comment line="78">
                    Retrieve the access control context for the                    
                </comment>
                <comment line="79">
                    given delegated subject from the cache                    
                </comment>
                <comment line="80">
                                        
                </comment>
                <comment line="83">
                    Build the access control context to be used                    
                </comment>
                <comment line="84">
                    when executing code as the delegated subject                    
                </comment>
                <comment line="85">
                    and store it in the cache                    
                </comment>
                <comment line="86">
                                        
                </comment>
                <comment line="99">
                    Check if the subject delegation permission allows the                    
                </comment>
                <comment line="100">
                    authenticated subject to assume the identity of each                    
                </comment>
                <comment line="101">
                    principal in the delegated subject                    
                </comment>
                <comment line="102">
                                        
                </comment>
                <scope line="56"/>
                <declaration name="delegatedPrincipals" type="Principal[]" line="66"/>
                <scope line="72"/>
                <declaration name="delegatedACC" type="AccessControlContext" line="81"/>
                <scope line="87">
                    <scope line="88"/>
                    <scope line="92"/>
                </scope>
                <declaration name="dp" type="Principal[]" line="103"/>
                <anonymous_class line="105">
                    <method name="run" type="Void" line="106">
                        <scope line="107">
                            <declaration name="pname" type="String" line="108"/>
                            <declaration name="sdp" type="Permission" line="110"/>
                        </scope>
                    </method>
                </anonymous_class>
                <declaration name="action" type="PrivilegedAction&lt;Void&gt;" line="104"/>
            </method>
            <javadoc line="122">
                Check if the connector server creator can assume the identity of each
                  principal in the authenticated subject, i.e. check if the connector
                  server creator codebase contains a subject delegation permission for
                  each principal present in the authenticated subject.                
                <return>
                    {@code true} if the connector server creator can delegate to all
                      the authenticated principals in the subject. Otherwise, {@code false}.                    
                </return>
            </javadoc>
            <method name="checkRemoveCallerContext" type="boolean" line="132">
                <params>
                    <param name="subject" type="Subject"/>
                </params>
                <scope line="133">
                    <declaration name="dp" type="Principal[]" line="134"/>
                    <scope line="136">
                        <declaration name="pname" type="String" line="137"/>
                        <declaration name="sdp" type="Permission" line="139"/>
                    </scope>
                </scope>
                <scope line="143"/>
            </method>
        </class>
    </source>