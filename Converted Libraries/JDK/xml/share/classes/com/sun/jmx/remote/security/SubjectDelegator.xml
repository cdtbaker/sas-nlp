<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.remote.security">
        <import package="java.security.AccessController"/>
        <import package="java.security.AccessControlContext"/>
        <import package="java.security.Permission"/>
        <import package="java.security.Principal"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="javax.security.auth.Subject"/>
        <import package="javax.management.remote.SubjectDelegationPermission"/>
        <import package="com.sun.jmx.remote.util.CacheMap"/>
        <class name="SubjectDelegator" line="10">
            <declaration name="PRINCIPALS_CACHE_SIZE" type="int" line="11"/>
            <declaration name="ACC_CACHE_SIZE" type="int" line="12"/>
            <declaration name="principalsCache" type="CacheMap&lt;Subject,Principal[]&gt;" line="13"/>
            <declaration name="accCache" type="CacheMap&lt;Subject,AccessControlContext&gt;" line="14"/>
            <method name="delegatedContext" type="AccessControlContext" line="15">
                <params>
                    <param name="authenticatedACC" type="AccessControlContext"/>
                    <param name="delegatedSubject" type="Subject"/>
                    <param name="removeCallerContext" type="boolean"/>
                </params>
                <scope line="16"/>
                <declaration name="delegatedPrincipals" type="Principal[]" line="20"/>
                <scope line="21"/>
                <declaration name="delegatedACC" type="AccessControlContext" line="25"/>
                <scope line="26">
                    <scope line="27"/>
                    <scope line="30"/>
                </scope>
                <declaration name="dp" type="Principal[]" line="35"/>
                <anonymous_class line="36">
                    <method name="run" type="Void" line="37">
                        <scope line="38">
                            <declaration name="pname" type="String" line="39"/>
                            <declaration name="sdp" type="Permission" line="40"/>
                        </scope>
                    </method>
                </anonymous_class>
                <declaration name="action" type="PrivilegedAction&lt;Void&gt;" line="36"/>
            </method>
            <javadoc line="50">
                Check if the connector server creator can assume the identity of each
                  principal in the authenticated subject, i.e. check if the connector
                  server creator codebase contains a subject delegation permission for
                  each principal present in the authenticated subject.                
                <return>
                    {@code true} if the connector server creator can delegate to all
                      the authenticated principals in the subject. Otherwise, {@code false}.                    
                </return>
            </javadoc>
            <method name="checkRemoveCallerContext" type="boolean" line="58">
                <params>
                    <param name="subject" type="Subject"/>
                </params>
                <scope line="59">
                    <declaration name="dp" type="Principal[]" line="60"/>
                    <scope line="61">
                        <declaration name="pname" type="String" line="62"/>
                        <declaration name="sdp" type="Permission" line="63"/>
                    </scope>
                </scope>
                <scope line="67"/>
            </method>
        </class>
    </source>