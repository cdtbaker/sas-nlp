<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp">
        <import package="java.util.Enumeration"/>
        <import package="java.net.InetAddress"/>
        <interface name="UserAcl">
            <javadoc line="4">
                Defines the user based ACL used by the SNMP protocol adaptor.
                  &lt;p&gt;
                  &lt;p&gt;&lt;b&gt;This API is a Sun Microsystems internal API  and is subject
                  to change without notice.&lt;/b&gt;&lt;/p&gt;                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="getName" type="String" line="12"/>
            <javadoc line="12">
                Returns the name of the ACL.                
                <return>
                    The name of the ACL.                    
                </return>
            </javadoc>
            <method name="checkReadPermission" type="boolean" line="17"/>
            <javadoc line="17">
                Checks whether or not the specified user has &lt;CODE&gt;READ&lt;/CODE&gt; access.                
                <param>
                    user The user name to check.                    
                </param>
                <return>
                    <CODE>true</CODE> if the host has read permission, <CODE>false</CODE> otherwise.                    
                </return>
            </javadoc>
            <method name="checkReadPermission" type="boolean" line="23"/>
            <javadoc line="23">
                Checks whether or not the specified user and context name have &lt;CODE&gt;READ&lt;/CODE&gt; access.                
                <param>
                    user The user name to check.                    
                </param>
                <param>
                    contextName The context name associated with the user.                    
                </param>
                <param>
                    securityLevel The request security level.                    
                </param>
                <return>
                    <CODE>true</CODE> if the pair (user, context) has read permission, <CODE>false</CODE> otherwise.                    
                </return>
            </javadoc>
            <method name="checkContextName" type="boolean" line="31"/>
            <javadoc line="31">
                Checks whether or not a context name is defined.                
                <param>
                    contextName The context name to check.                    
                </param>
                <return>
                    <CODE>true</CODE> if the context is known, <CODE>false</CODE> otherwise.                    
                </return>
            </javadoc>
            <method name="checkWritePermission" type="boolean" line="37"/>
            <javadoc line="37">
                Checks whether or not the specified user has &lt;CODE&gt;WRITE&lt;/CODE&gt; access.                
                <param>
                    user The user to check.                    
                </param>
                <return>
                    <CODE>true</CODE> if the user has write permission, <CODE>false</CODE> otherwise.                    
                </return>
            </javadoc>
            <method name="checkWritePermission" type="boolean" line="43"/>
            <javadoc line="43">
                Checks whether or not the specified user and context name have &lt;CODE&gt;WRITE&lt;/CODE&gt; access.                
                <param>
                    user The user name to check.                    
                </param>
                <param>
                    contextName The context name associated with the user.                    
                </param>
                <param>
                    securityLevel The request security level.                    
                </param>
                <return>
                    <CODE>true</CODE> if the pair (user, context) has write permission, <CODE>false</CODE> otherwise.                    
                </return>
            </javadoc>
        </interface>
    </source>