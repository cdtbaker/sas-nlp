<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp.daemon">
        <import package="java.util.Vector"/>
        <import package="java.util.Enumeration"/>
        <import package="com.sun.jmx.snmp.SnmpOid"/>
        <import package="com.sun.jmx.snmp.agent.SnmpMibAgent"/>
        <class name="SnmpMibTree" line="44">
            <comment line="100">
                public void unregister(SnmpMibAgent agent) {
                long[] oid= agent.getRootOid();
                TreeNode node= root.retrieveMatchingBranch(oid, 0);
                if (node == null)
                return;
                node.removeAgent(agent);
                }                
            </comment>
            <comment line="116">
                A SnmpMibTree object is a tree of TreeNode                
            </comment>
            <comment line="269">
                end of class TreeNode                
            </comment>
            <javadoc line="44">
                The class is used for building a tree representation of the different
                  root oids of the supported MIBs. Each node is associated to a specific MIB.                
            </javadoc>
            <method name="SnmpMibTree" type="constructor" line="50"/>
            <method name="setDefaultAgent" type="void" line="55">
                <params>
                    <param name="def" type="SnmpMibAgent"/>
                </params>
            </method>
            <method name="getDefaultAgent" type="SnmpMibAgent" line="60"/>
            <method name="register" type="void" line="64">
                <params>
                    <param name="agent" type="SnmpMibAgent"/>
                </params>
            </method>
            <method name="register" type="void" line="68">
                <params>
                    <param name="agent" type="SnmpMibAgent"/>
                    <param name="oid" type="long[]"/>
                </params>
            </method>
            <method name="getAgentMib" type="SnmpMibAgent" line="72">
                <params>
                    <param name="oid" type="SnmpOid"/>
                </params>
                <declaration name="node" type="TreeNode" line="73"/>
            </method>
            <method name="unregister" type="void" line="83">
                <params>
                    <param name="agent" type="SnmpMibAgent"/>
                    <param name="oids" type="SnmpOid[]"/>
                </params>
                <scope line="84">
                    <declaration name="oid" type="long[]" line="85"/>
                    <declaration name="node" type="TreeNode" line="86"/>
                </scope>
            </method>
            <method name="unregister" type="void" line="94">
                <params>
                    <param name="agent" type="SnmpMibAgent"/>
                </params>
            </method>
            <method name="printTree" type="void" line="108"/>
            <declaration name="defaultAgent" type="SnmpMibAgent" line="112"/>
            <declaration name="root" type="TreeNode" line="113"/>
            <class name="TreeNode" line="117">
                <comment line="175">
                    PRIVATE STUFF
                    --------------                    
                </comment>
                <method name="registerNode" type="void" line="119">
                    <params>
                        <param name="agent" type="SnmpMibAgent"/>
                    </params>
                    <declaration name="oid" type="long[]" line="120"/>
                </method>
                <method name="retrieveMatchingBranch" type="TreeNode" line="124">
                    <params>
                        <param name="oid" type="long[]"/>
                        <param name="cursor" type="int"/>
                    </params>
                    <comment line="130">
                        In this case, the node does not have any children. So no point to
                         continue the search ...                        
                    </comment>
                    <comment line="135">
                        In this case, the oid does not have any more element. So the search
                         is over.                        
                    </comment>
                    <comment line="141">
                        If the returned node got a null agent, we have to replace it by
                        the current one (in case it is not null)                        
                    </comment>
                    <declaration name="node" type="TreeNode" line="125"/>
                    <scope line="128"/>
                    <scope line="133"/>
                    <declaration name="n" type="TreeNode" line="139"/>
                </method>
                <method name="getAgentMib" type="SnmpMibAgent" line="146"/>
                <method name="printTree" type="void" line="150">
                    <params>
                        <param name="ident" type="String"/>
                    </params>
                    <declaration name="buff" type="StringBuffer" line="152"/>
                    <scope line="153"/>
                    <scope line="157">
                        <declaration name="mib" type="SnmpMibAgent" line="158"/>
                    </scope>
                    <scope line="165"/>
                    <scope line="168">
                        <declaration name="node" type="TreeNode" line="169"/>
                    </scope>
                </method>
                <javadoc line="177">
                    Only the treeNode class can create an instance of treeNode.
                      The creation occurs when registering a new oid.                    
                </javadoc>
                <method name="TreeNode" type="constructor" line="181">
                    <params>
                        <param name="nodeValue" type="long"/>
                        <param name="agent" type="SnmpMibAgent"/>
                        <param name="sup" type="TreeNode"/>
                    </params>
                </method>
                <method name="removeAgentFully" type="void" line="187">
                    <params>
                        <param name="agent" type="SnmpMibAgent"/>
                    </params>
                    <declaration name="v" type="Vector&lt;TreeNode&gt;" line="188"/>
                    <scope line="190">
                        <declaration name="node" type="TreeNode" line="192"/>
                    </scope>
                    <scope line="198"/>
                </method>
                <method name="removeAgent" type="void" line="205">
                    <params>
                        <param name="mib" type="SnmpMibAgent"/>
                    </params>
                </method>
                <method name="setAgent" type="void" line="215">
                    <params>
                        <param name="agent" type="SnmpMibAgent"/>
                    </params>
                </method>
                <method name="registerNode" type="void" line="219">
                    <params>
                        <param name="oid" type="long[]"/>
                        <param name="cursor" type="int"/>
                        <param name="agent" type="SnmpMibAgent"/>
                    </params>
                    <comment line="223">
                        That&apos;s it !                        
                    </comment>
                    <comment line="228">
                        Create a child and register it !                        
                    </comment>
                    <comment line="239">
                        We have to set the agent attribute                        
                    </comment>
                    <declaration name="child" type="TreeNode" line="225"/>
                    <scope line="226">
                        <declaration name="theValue" type="long" line="229"/>
                    </scope>
                    <scope line="234"/>
                    <scope line="240"/>
                </method>
                <method name="retrieveChild" type="TreeNode" line="247">
                    <params>
                        <param name="oid" type="long[]"/>
                        <param name="current" type="int"/>
                    </params>
                    <declaration name="theValue" type="long" line="248"/>
                    <scope line="250">
                        <declaration name="node" type="TreeNode" line="251"/>
                    </scope>
                </method>
                <method name="match" type="boolean" line="258">
                    <params>
                        <param name="value" type="long"/>
                    </params>
                </method>
                <declaration name="children" type="Vector&lt;TreeNode&gt;" line="262"/>
                <declaration name="agents" type="Vector&lt;SnmpMibAgent&gt;" line="263"/>
                <declaration name="nodeValue" type="long" line="264"/>
                <declaration name="agent" type="SnmpMibAgent" line="265"/>
                <declaration name="parent" type="TreeNode" line="266"/>
            </class>
        </class>
    </source>