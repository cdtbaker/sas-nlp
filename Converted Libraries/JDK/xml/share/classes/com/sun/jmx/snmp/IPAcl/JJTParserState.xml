<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp.IPAcl">
        <class name="JJTParserState" line="30">
            <comment line="31">
                generated code, not worth fixing                
            </comment>
            <comment line="36">
                number of nodes on stack                
            </comment>
            <comment line="37">
                current mark                
            </comment>
            <comment line="47">
                Determines whether the current node was actually closed and
                pushed.  This should only be called in the final user action of a                
            </comment>
            <comment line="54">
                Call this to reinitialize the node stack.  It is called                
            </comment>
            <comment line="63">
                Returns the root node of the AST.  It only makes sense to call                
            </comment>
            <comment line="69">
                                
            </comment>
            <comment line="75">
                Returns the node on the top of the stack, and remove it from the                
            </comment>
            <comment line="84">
                                
            </comment>
            <comment line="89">
                Returns the number of children on the stack in the current node                
            </comment>
            <comment line="111">
                A definite node is constructed from a specified number of
                children.  That number of nodes are popped from the stack and
                made the children of the definite node.  Then the definite node                
            </comment>
            <comment line="128">
                A conditional node is constructed if its condition is true.  All
                the nodes that have been pushed since the node was opened are
                made children of the the conditional node, which is then pushed
                on to the stack.  If the condition is false the node is not                
            </comment>
            <declaration name="nodes" type="java.util.Stack" line="32"/>
            <declaration name="marks" type="java.util.Stack" line="33"/>
            <declaration name="sp" type="int" line="35"/>
            <declaration name="mk" type="int" line="36"/>
            <declaration name="node_created" type="boolean" line="37"/>
            <method name="JJTParserState" type="constructor" line="39"/>
            <method name="nodeCreated" type="boolean" line="49"/>
            <method name="reset" type="void" line="55"/>
            <method name="rootNode" type="Node" line="64"/>
            <method name="pushNode" type="void" line="69">
                <params>
                    <param name="n" type="Node"/>
                </params>
            </method>
            <method name="popNode" type="Node" line="76">
                <scope line="77"/>
            </method>
            <method name="peekNode" type="Node" line="84"/>
            <method name="nodeArity" type="int" line="90"/>
            <method name="clearNodeScope" type="void" line="95">
                <params>
                    <param name="n" type="Node"/>
                </params>
                <scope line="96"/>
            </method>
            <method name="openNodeScope" type="void" line="103">
                <params>
                    <param name="n" type="Node"/>
                </params>
            </method>
            <method name="closeNodeScope" type="void" line="114">
                <params>
                    <param name="n" type="Node"/>
                    <param name="num" type="int"/>
                </params>
                <scope line="116">
                    <declaration name="c" type="Node" line="117"/>
                </scope>
            </method>
            <method name="closeNodeScope" type="void" line="132">
                <params>
                    <param name="n" type="Node"/>
                    <param name="condition" type="boolean"/>
                </params>
                <scope line="133">
                    <declaration name="a" type="int" line="134"/>
                    <scope line="136">
                        <declaration name="c" type="Node" line="137"/>
                    </scope>
                </scope>
                <scope line="144"/>
            </method>
        </class>
    </source>