<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp.agent">
        <import package="java.io.Serializable"/>
        <import package="java.util.Vector"/>
        <import package="java.util.Enumeration"/>
        <import package="com.sun.jmx.snmp.SnmpOid"/>
        <class name="SnmpIndex" line="41">
            <comment line="177">
                PRIVATE VARIABLES
                ------------------                
            </comment>
            <implements interface="Serializable"/>
            <javadoc line="41">
                Represents a SNMP index.
                  An &lt;CODE&gt;SnmpIndex&lt;/CODE&gt; is represented as a &lt;CODE&gt;Vector&lt;/CODE&gt; of &lt;CODE&gt;SnmpOid&lt;/CODE&gt;.
                  &lt;P&gt;
                  This class is used internally and by the classes generated by &lt;CODE&gt;mibgen&lt;/CODE&gt;.
                  You should not need to use this class directly.
                  &lt;p&gt;&lt;b&gt;This API is a Sun Microsystems internal API  and is subject
                  to change without notice.&lt;/b&gt;&lt;/p&gt;                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="53"/>
            <javadoc line="55">
                Initializes an &lt;CODE&gt;SnmpIndex&lt;/CODE&gt; using a vector of object identifiers.
                  &lt;P&gt;Following the RFC recommendations, every syntax that is used as a
                  table index should have an object identifier representation. There are
                  some guidelines on how to map the different syntaxes into an object identifier.
                  In the different &lt;CODE&gt;SnmpValue&lt;/CODE&gt; classes provided, there is a &lt;CODE&gt;toOid&lt;/CODE&gt; method to get
                  the object identifier of the value.                
                <param>
                    oidList The list of Object Identifiers.                    
                </param>
            </javadoc>
            <method name="SnmpIndex" type="constructor" line="65">
                <params>
                    <param name="oidList" type="SnmpOid[]"/>
                </params>
                <comment line="69">
                    The order is important ...                    
                </comment>
                <scope line="67"/>
            </method>
            <javadoc line="74">
                Initializes an &lt;CODE&gt;SnmpIndex&lt;/CODE&gt; using the specified Object Identifier.                
                <param>
                    oid The Object Identifier.                    
                </param>
            </javadoc>
            <method name="SnmpIndex" type="constructor" line="79">
                <params>
                    <param name="oid" type="SnmpOid"/>
                </params>
            </method>
            <javadoc line="84">
                Gets the number of Object Identifiers the index is made of.                
                <return>
                    The number of Object Identifiers.                    
                </return>
            </javadoc>
            <method name="getNbComponents" type="int" line="89"/>
            <javadoc line="93">
                Gets the index as a vector of Object Identifiers.                
                <return>
                    The index as a vector.                    
                </return>
            </javadoc>
            <method name="getComponents" type="Vector<SnmpOid>" line="98"/>
            <javadoc line="102">
                Compares two indexes for equality.                
                <param>
                    index The index to compare <CODE>this</CODE> with.                    
                </param>
                <return>
                    <CODE>true</CODE> if the two indexes are equal, <CODE>false</CODE> otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="109">
                <params>
                    <param name="index" type="SnmpIndex"/>
                </params>
                <comment line="115">
                    The two vectors have the same length.
                     Compare each single element ...                    
                </comment>
                <declaration name="oid1" type="SnmpOid" line="117"/>
                <declaration name="oid2" type="SnmpOid" line="118"/>
                <declaration name="components" type="Vector&lt;SnmpOid&gt;" line="119"/>
                <scope line="120"/>
            </method>
            <javadoc line="129">
                Compares two indexes.                
                <param>
                    index The index to compare <CODE>this</CODE> with.                    
                </param>
                <return>
                    The value 0 if the two OID vectors have the same elements, another value otherwise.                    
                </return>
            </javadoc>
            <method name="compareTo" type="int" line="136">
                <params>
                    <param name="index" type="SnmpIndex"/>
                </params>
                <comment line="146">
                    There is no more element in the index                    
                </comment>
                <comment line="150">
                    Access the element ...                    
                </comment>
                <declaration name="length" type="int" line="138"/>
                <declaration name="components" type="Vector&lt;SnmpOid&gt;" line="139"/>
                <declaration name="oid1" type="SnmpOid" line="140"/>
                <declaration name="oid2" type="SnmpOid" line="141"/>
                <declaration name="comp" type="int" line="142"/>
                <scope line="143">
                    <scope line="144"/>
                </scope>
            </method>
            <javadoc line="161">
                Returns a &lt;CODE&gt;String&lt;/CODE&gt; representation of the index.
                  The different elements are separated by &quot;//&quot;.                
                <return>
                    A string representation of the index.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="167">
                <declaration name="msg" type="StringBuffer" line="168"/>
                <scope line="169">
                    <declaration name="val" type="SnmpOid" line="170"/>
                </scope>
            </method>
            <declaration name="oids" type="Vector&lt;SnmpOid&gt;" line="179"/>
            <javadoc line="179">
                The list of OIDs.                
                <serial>
                                        
                </serial>
            </javadoc>
            <declaration name="size" type="int" line="185"/>
            <javadoc line="185">
                The number of elements in the index.                
                <serial>
                                        
                </serial>
            </javadoc>
        </class>
    </source>