<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp.daemon">
        <import package="java.util.logging.Level"/>
        <import package="java.util.Vector"/>
        <import package="com.sun.jmx.defaults.JmxProperties.SNMP_ADAPTOR_LOGGER"/>
        <import package="com.sun.jmx.snmp.SnmpPdu"/>
        <import package="com.sun.jmx.snmp.SnmpVarBind"/>
        <import package="com.sun.jmx.snmp.SnmpDefinitions"/>
        <import package="com.sun.jmx.snmp.SnmpStatusException"/>
        <import package="com.sun.jmx.snmp.SnmpEngine"/>
        <import package="com.sun.jmx.snmp.agent.SnmpMibAgent"/>
        <import package="com.sun.jmx.snmp.agent.SnmpMibRequest"/>
        <import package="com.sun.jmx.snmp.ThreadContext"/>
        <import package="com.sun.jmx.snmp.internal.SnmpIncomingRequest"/>
        <class name="SnmpSubRequestHandler" line="52">
            <comment line="252">
                -------------------------------------------------------------                
            </comment>
            <comment line="253">
                                
            </comment>
            <comment line="254">
                This function does a best-effort to map global error status                
            </comment>
            <comment line="255">
                to SNMP v1 valid global error status.                
            </comment>
            <comment line="256">
                                
            </comment>
            <comment line="257">
                An SnmpStatusException can contain either:                
            </comment>
            <comment line="258">
                &lt;li&gt; v2 local error codes (that should be stored in the varbind)&lt;/li&gt;                
            </comment>
            <comment line="259">
                &lt;li&gt; v2 global error codes &lt;/li&gt;                
            </comment>
            <comment line="260">
                &lt;li&gt; v1 global error codes &lt;/li&gt;                
            </comment>
            <comment line="261">
                                
            </comment>
            <comment line="262">
                v2 local error codes (noSuchInstance, noSuchObject) are                
            </comment>
            <comment line="263">
                transformed in a global v1 snmpRspNoSuchName error.                
            </comment>
            <comment line="264">
                                
            </comment>
            <comment line="265">
                v2 global error codes are transformed in the following way:                
            </comment>
            <comment line="266">
                                
            </comment>
            <comment line="267">
                If the request was a GET/GETNEXT then either                
            </comment>
            <comment line="268">
                snmpRspNoSuchName or snmpRspGenErr is returned.                
            </comment>
            <comment line="269">
                                
            </comment>
            <comment line="270">
                Otherwise:                
            </comment>
            <comment line="271">
                snmpRspNoAccess, snmpRspInconsistentName                
            </comment>
            <comment line="272">
                =&gt; snmpRspNoSuchName                
            </comment>
            <comment line="273">
                snmpRspAuthorizationError, snmpRspNotWritable, snmpRspNoCreation                
            </comment>
            <comment line="274">
                =&gt; snmpRspReadOnly  (snmpRspNoSuchName for GET/GETNEXT)                
            </comment>
            <comment line="275">
                snmpRspWrong*                
            </comment>
            <comment line="276">
                =&gt; snmpRspBadValue  (snmpRspNoSuchName for GET/GETNEXT)                
            </comment>
            <comment line="277">
                snmpRspResourceUnavailable, snmpRspRspCommitFailed,                
            </comment>
            <comment line="278">
                snmpRspUndoFailed                
            </comment>
            <comment line="279">
                =&gt; snmpRspGenErr                
            </comment>
            <comment line="280">
                                
            </comment>
            <comment line="281">
                -------------------------------------------------------------                
            </comment>
            <comment line="282">
                                
            </comment>
            <comment line="361">
                -------------------------------------------------------------                
            </comment>
            <comment line="362">
                                
            </comment>
            <comment line="363">
                This function does a best-effort to map global error status                
            </comment>
            <comment line="364">
                to SNMP v2 valid global error status.                
            </comment>
            <comment line="365">
                                
            </comment>
            <comment line="366">
                An SnmpStatusException can contain either:                
            </comment>
            <comment line="367">
                &lt;li&gt; v2 local error codes (that should be stored in the varbind)&lt;/li&gt;                
            </comment>
            <comment line="368">
                &lt;li&gt; v2 global error codes &lt;/li&gt;                
            </comment>
            <comment line="369">
                &lt;li&gt; v1 global error codes &lt;/li&gt;                
            </comment>
            <comment line="370">
                                
            </comment>
            <comment line="371">
                v2 local error codes (noSuchInstance, noSuchObject)                
            </comment>
            <comment line="372">
                should not raise this level: they should have been stored in the                
            </comment>
            <comment line="373">
                varbind earlier. If they, do there is nothing much we can do except                
            </comment>
            <comment line="374">
                to transform them into:                
            </comment>
            <comment line="375">
                &lt;li&gt; a global snmpRspGenErr (if the request is a GET/GETNEXT) &lt;/li&gt;                
            </comment>
            <comment line="376">
                &lt;li&gt; a global snmpRspNoSuchName otherwise. &lt;/li&gt;                
            </comment>
            <comment line="377">
                                
            </comment>
            <comment line="378">
                v2 global error codes are transformed in the following way:                
            </comment>
            <comment line="379">
                                
            </comment>
            <comment line="380">
                If the request was a GET/GETNEXT then snmpRspGenErr is returned.                
            </comment>
            <comment line="381">
                (snmpRspGenErr is the only global error that is expected to be                
            </comment>
            <comment line="382">
                raised by a GET/GETNEXT request).                
            </comment>
            <comment line="383">
                                
            </comment>
            <comment line="384">
                Otherwise the v2 code itself is returned                
            </comment>
            <comment line="385">
                                
            </comment>
            <comment line="386">
                v1 global error codes are transformed in the following way:                
            </comment>
            <comment line="387">
                                
            </comment>
            <comment line="388">
                snmpRspNoSuchName                
            </comment>
            <comment line="389">
                =&gt; snmpRspNoAccess  (snmpRspGenErr for GET/GETNEXT)                
            </comment>
            <comment line="390">
                snmpRspReadOnly                
            </comment>
            <comment line="391">
                =&gt; snmpRspNotWritable (snmpRspGenErr for GET/GETNEXT)                
            </comment>
            <comment line="392">
                snmpRspBadValue                
            </comment>
            <comment line="393">
                =&gt; snmpRspWrongValue  (snmpRspGenErr for GET/GETNEXT)                
            </comment>
            <comment line="394">
                                
            </comment>
            <comment line="395">
                -------------------------------------------------------------                
            </comment>
            <comment line="396">
                                
            </comment>
            <comment line="551">
                PRIVATE VARIABLES                
            </comment>
            <comment line="552">
                ------------------                
            </comment>
            <comment line="610">
                All the methods of the Vector class are synchronized.                
            </comment>
            <comment line="611">
                Synchronization is a very expensive operation. In our case it is not always                
            </comment>
            <comment line="612">
                required...                
            </comment>
            <comment line="613">
                                
            </comment>
            <implements interface="SnmpDefinitions"/>
            <implements interface="Runnable"/>
            <declaration name="incRequest" type="SnmpIncomingRequest" line="54"/>
            <declaration name="engine" type="SnmpEngine" line="55"/>
            <javadoc line="56">
                V3 enabled Adaptor. Each Oid is added using updateRequest method.                
            </javadoc>
            <method name="SnmpSubRequestHandler" type="constructor" line="62">
                <params>
                    <param name="engine" type="SnmpEngine"/>
                    <param name="incRequest" type="SnmpIncomingRequest"/>
                    <param name="agent" type="SnmpMibAgent"/>
                    <param name="req" type="SnmpPdu"/>
                </params>
            </method>
            <javadoc line="67">
                V3 enabled Adaptor.                
            </javadoc>
            <method name="SnmpSubRequestHandler" type="constructor" line="74">
                <params>
                    <param name="engine" type="SnmpEngine"/>
                    <param name="incRequest" type="SnmpIncomingRequest"/>
                    <param name="agent" type="SnmpMibAgent"/>
                    <param name="req" type="SnmpPdu"/>
                    <param name="nouse" type="boolean"/>
                </params>
            </method>
            <javadoc line="78">
                SNMP V1/V2 . To be called with updateRequest.                
            </javadoc>
            <method name="SnmpSubRequestHandler" type="constructor" line="81">
                <params>
                    <param name="agent" type="SnmpMibAgent"/>
                    <param name="req" type="SnmpPdu"/>
                </params>
                <comment line="91">
                    We get a ref on the pdu in order to pass it to SnmpMibRequest.                    
                </comment>
                <comment line="94">
                    Pre-allocate room for storing varbindlist and translation table.                    
                </comment>
                <comment line="95">
                                        
                </comment>
                <scope line="82"/>
                <declaration name="length" type="int" line="96"/>
            </method>
            <javadoc line="101">
                SNMP V1/V2 The constuctor initialize the subrequest with the whole varbind list contained
                  in the original request.                
            </javadoc>
            <method name="SnmpSubRequestHandler" type="constructor" line="108">
                <params>
                    <param name="agent" type="SnmpMibAgent"/>
                    <param name="req" type="SnmpPdu"/>
                    <param name="nouse" type="boolean"/>
                </params>
                <comment line="105">
                    cast to NonSyncVector&lt;SnmpVarBind&gt;                    
                </comment>
                <comment line="111">
                    The translation table is easy in this case ...                    
                </comment>
                <comment line="112">
                                        
                </comment>
                <declaration name="max" type="int" line="113"/>
                <declaration name="list" type="SnmpVarBind[]" line="114"/>
                <scope line="115"/>
            </method>
            <method name="createMibRequest" type="SnmpMibRequest" line="123">
                <params>
                    <param name="vblist" type="Vector<SnmpVarBind>"/>
                    <param name="protocolVersion" type="int"/>
                    <param name="userData" type="Object"/>
                </params>
                <comment line="125">
                    This is an optimization:                    
                </comment>
                <comment line="126">
                    The SnmpMibRequest created in the check() phase is                    
                </comment>
                <comment line="127">
                    reused in the set() phase.                    
                </comment>
                <comment line="128">
                                        
                </comment>
                <comment line="132">
                    This is a request comming from an SnmpV3AdaptorServer.                    
                </comment>
                <comment line="133">
                    Full power.                    
                </comment>
                <comment line="152">
                    If we&apos;re doing the check() phase, we store the SnmpMibRequest                    
                </comment>
                <comment line="153">
                    so that we can reuse it in the set() phase.                    
                </comment>
                <comment line="154">
                                        
                </comment>
                <declaration name="result" type="SnmpMibRequest" line="134"/>
                <scope line="135"/>
                <scope line="146"/>
            </method>
            <method name="setUserData" type="void" line="161">
                <params>
                    <param name="userData" type="Object"/>
                </params>
            </method>
            <method name="run" type="void" line="165">
                <comment line="173">
                    Invoke a get operation                    
                </comment>
                <comment line="174">
                                        
                </comment>
                <comment line="190">
                    #ifdef DEBUG                    
                </comment>
                <comment line="223">
                    end of switch                    
                </comment>
                <scope line="167">
                    <declaration name="oldContext" type="ThreadContext" line="168"/>
                    <scope line="170">
                        <scope line="175"/>
                        <scope line="185"/>
                        <scope line="195"/>
                        <scope line="204"/>
                        <scope line="213"/>
                    </scope>
                    <scope line="225"/>
                </scope>
                <scope line="228">
                    <scope line="231"/>
                </scope>
                <scope line="237">
                    <scope line="239"/>
                </scope>
                <scope line="245"/>
            </method>
            <method name="mapErrorStatusToV1" type="int" line="282">
                <params>
                    <param name="errorStatus" type="int"/>
                    <param name="reqPduType" type="int"/>
                </params>
                <comment line="283">
                    Map v2 codes onto v1 codes                    
                </comment>
                <comment line="284">
                                        
                </comment>
                <comment line="339">
                    At this point we should have a V1 error code                    
                </comment>
                <comment line="340">
                                        
                </comment>
                <comment line="353">
                    We have a snmpRspGenErr, or something which is not defined                    
                </comment>
                <comment line="354">
                    in RFC1905 =&gt; return a snmpRspGenErr                    
                </comment>
                <comment line="355">
                                        
                </comment>
                <scope line="298"/>
                <scope line="304"/>
                <scope line="311"/>
                <scope line="321"/>
                <scope line="333"/>
                <scope line="345"/>
            </method>
            <method name="mapErrorStatusToV2" type="int" line="396">
                <params>
                    <param name="errorStatus" type="int"/>
                    <param name="reqPduType" type="int"/>
                </params>
                <comment line="397">
                    Map v1 codes onto v2 codes                    
                </comment>
                <comment line="398">
                                        
                </comment>
                <comment line="408">
                    For get / getNext / getBulk the only global error                    
                </comment>
                <comment line="409">
                    (PDU-level) possible is genErr.                    
                </comment>
                <comment line="410">
                                        
                </comment>
                <comment line="419">
                    Map to noSuchName                    
                </comment>
                <comment line="420">
                    if ((errorStatus == SnmpDefinitions.snmpRspNoSuchName) ||                    
                </comment>
                <comment line="421">
                    (errorStatus == SnmpStatusException.noSuchInstance) ||                    
                </comment>
                <comment line="422">
                    (errorStatus == SnmpStatusException.noSuchObject))                    
                </comment>
                <comment line="423">
                    return SnmpDefinitions.snmpRspNoSuchName;                    
                </comment>
                <comment line="425">
                    SnmpStatusException.noSuchInstance and                    
                </comment>
                <comment line="426">
                    SnmpStatusException.noSuchObject can&apos;t happen...                    
                </comment>
                <comment line="431">
                    Map to notWritable                    
                </comment>
                <comment line="435">
                    Map to wrongValue                    
                </comment>
                <comment line="439">
                    Other valid V2 codes                    
                </comment>
                <comment line="456">
                    Ivalid V2 code =&gt; genErr                    
                </comment>
                <scope line="412"/>
            </method>
            <method name="mapErrorStatus" type="int" line="462">
                <params>
                    <param name="errorStatus" type="int"/>
                    <param name="protocolVersion" type="int"/>
                    <param name="reqPduType" type="int"/>
                </params>
                <comment line="466">
                    Too bad, an error occurs ... we need to translate it ...                    
                </comment>
                <comment line="467">
                                        
                </comment>
            </method>
            <javadoc line="477">
                The method returns the error status of the operation.
                  The method takes into account the protocol version.                
            </javadoc>
            <method name="getErrorStatus" type="int" line="481"/>
            <javadoc line="488">
                The method returns the error index as a position in the var bind list.
                  The value returned by the method corresponds to the index in the original
                  var bind list as received by the SNMP protocol adaptor.                
            </javadoc>
            <method name="getErrorIndex" type="int" line="493">
                <comment line="497">
                    An error occurs. We need to be carefull because the index                    
                </comment>
                <comment line="498">
                    we are getting is a valid SNMP index (so range starts at 1).                    
                </comment>
                <comment line="499">
                    FIX ME: Shall we double-check the range here ?                    
                </comment>
                <comment line="500">
                    The response is : YES :                    
                </comment>
            </method>
            <javadoc line="507">
                The method updates the varbind list of the subrequest.                
            </javadoc>
            <method name="updateRequest" type="void" line="510">
                <params>
                    <param name="var" type="SnmpVarBind"/>
                    <param name="pos" type="int"/>
                </params>
                <declaration name="size" type="int" line="511"/>
            </method>
            <javadoc line="516">
                The method updates a given var bind list with the result of a
                  previsouly invoked operation.
                  Prior to calling the method, one must make sure that the operation was
                  successful. As such the method getErrorIndex or getErrorStatus should be
                  called.                
            </javadoc>
            <method name="updateResult" type="void" line="523">
                <params>
                    <param name="result" type="SnmpVarBind[]"/>
                </params>
                <comment line="529">
                    bugId 4641694: must check position in order to avoid                    
                </comment>
                <comment line="530">
                    ArrayIndexOutOfBoundException                    
                </comment>
                <declaration name="max" type="int" line="526"/>
                <declaration name="len" type="int" line="527"/>
                <scope line="528">
                    <declaration name="pos" type="int" line="531"/>
                    <scope line="532"/>
                    <scope line="535">
                        <scope line="536"/>
                    </scope>
                </scope>
            </method>
            <method name="init" type="void" line="545">
                <params>
                    <param name="engine" type="SnmpEngine"/>
                    <param name="incRequest" type="SnmpIncomingRequest"/>
                </params>
            </method>
            <declaration name="version" type="int" line="553"/>
            <javadoc line="553">
                Store the protocol version to handle                
            </javadoc>
            <declaration name="type" type="int" line="558"/>
            <javadoc line="558">
                Store the operation type. Remember if the type is Walk, it means
                  that we have to invoke the check method ...                
            </javadoc>
            <declaration name="agent" type="SnmpMibAgent" line="564"/>
            <javadoc line="564">
                Agent directly handled by the sub-request handler.                
            </javadoc>
            <declaration name="errorStatus" type="int" line="569"/>
            <javadoc line="569">
                Error status.                
            </javadoc>
            <declaration name="errorIndex" type="int" line="574"/>
            <javadoc line="574">
                Index of error.
                  A value of -1 means no error.                
            </javadoc>
            <declaration name="varBind" type="Vector&lt;SnmpVarBind&gt;" line="580"/>
            <javadoc line="580">
                The varbind list specific to the current sub request.
                  The vector must contain object of type SnmpVarBind.                
            </javadoc>
            <declaration name="translation" type="int[]" line="586"/>
            <javadoc line="586">
                The array giving the index translation between the content of
                  &lt;VAR&gt;varBind&lt;/VAR&gt; and the varbind list as specified in the request.                
            </javadoc>
            <declaration name="data" type="Object" line="592"/>
            <javadoc line="592">
                Contextual object allocated by the SnmpUserDataFactory.                
            </javadoc>
            <declaration name="mibRequest" type="SnmpMibRequest" line="597"/>
            <javadoc line="597">
                The SnmpMibRequest that will be passed to the agent.                
            </javadoc>
            <declaration name="reqPdu" type="SnmpPdu" line="603"/>
            <javadoc line="603">
                The SnmpPdu that will be passed to the request.                
            </javadoc>
            <class name="NonSyncVector" line="613">
                <type_params>
                    <type_param name="E"/>
                </type_params>
                <extends class="Vector">
                    <type_params>
                        <type_param name="E"/>
                    </type_params>
                </extends>
                <comment line="106">
                    cast to NonSyncVector&lt;SnmpVarBind&gt;                    
                </comment>
                <comment line="614">
                    we never serialize this                    
                </comment>
                <method name="NonSyncVector" type="constructor" line="616">
                    <params>
                        <param name="size" type="int"/>
                    </params>
                </method>
                <method name="addNonSyncElement" type="void" line="620">
                    <params>
                        <param name="obj" type="E"/>
                    </params>
                </method>
                <method name="elementAtNonSync" type="E" line="626">
                    <params>
                        <param name="index" type="int"/>
                    </params>
                </method>
            </class>
        </class>
    </source>