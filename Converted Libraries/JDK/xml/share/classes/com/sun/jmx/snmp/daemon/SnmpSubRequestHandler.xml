<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp.daemon">
        <import package="java.util.logging.Level"/>
        <import package="java.util.Vector"/>
        <import package="com.sun.jmx.defaults.JmxProperties.SNMP_ADAPTOR_LOGGER"/>
        <import package="com.sun.jmx.snmp.SnmpPdu"/>
        <import package="com.sun.jmx.snmp.SnmpVarBind"/>
        <import package="com.sun.jmx.snmp.SnmpDefinitions"/>
        <import package="com.sun.jmx.snmp.SnmpStatusException"/>
        <import package="com.sun.jmx.snmp.SnmpEngine"/>
        <import package="com.sun.jmx.snmp.agent.SnmpMibAgent"/>
        <import package="com.sun.jmx.snmp.agent.SnmpMibRequest"/>
        <import package="com.sun.jmx.snmp.ThreadContext"/>
        <import package="com.sun.jmx.snmp.internal.SnmpIncomingRequest"/>
        <class name="SnmpSubRequestHandler" line="14">
            <implements interface="SnmpDefinitions"/>
            <implements interface="Runnable"/>
            <declaration name="incRequest" type="SnmpIncomingRequest" line="15"/>
            <declaration name="engine" type="SnmpEngine" line="16"/>
            <javadoc line="17">
                V3 enabled Adaptor. Each Oid is added using updateRequest method.                
            </javadoc>
            <method name="SnmpSubRequestHandler" type="constructor" line="20">
                <params>
                    <param name="engine" type="SnmpEngine"/>
                    <param name="incRequest" type="SnmpIncomingRequest"/>
                    <param name="agent" type="SnmpMibAgent"/>
                    <param name="req" type="SnmpPdu"/>
                </params>
            </method>
            <javadoc line="24">
                V3 enabled Adaptor.                
            </javadoc>
            <method name="SnmpSubRequestHandler" type="constructor" line="27">
                <params>
                    <param name="engine" type="SnmpEngine"/>
                    <param name="incRequest" type="SnmpIncomingRequest"/>
                    <param name="agent" type="SnmpMibAgent"/>
                    <param name="req" type="SnmpPdu"/>
                    <param name="nouse" type="boolean"/>
                </params>
            </method>
            <javadoc line="31">
                SNMP V1/V2 . To be called with updateRequest.                
            </javadoc>
            <method name="SnmpSubRequestHandler" type="constructor" line="34">
                <params>
                    <param name="agent" type="SnmpMibAgent"/>
                    <param name="req" type="SnmpPdu"/>
                </params>
                <scope line="35"/>
                <declaration name="length" type="int" line="42"/>
            </method>
            <javadoc line="46">
                SNMP V1/V2 The constuctor initialize the subrequest with the whole varbind list contained
                  in the original request.                
            </javadoc>
            <method name="SnmpSubRequestHandler" type="constructor" line="50">
                <params>
                    <param name="agent" type="SnmpMibAgent"/>
                    <param name="req" type="SnmpPdu"/>
                    <param name="nouse" type="boolean"/>
                </params>
                <declaration name="max" type="int" line="52"/>
                <declaration name="list" type="SnmpVarBind[]" line="53"/>
                <scope line="54"/>
            </method>
            <method name="createMibRequest" type="SnmpMibRequest" line="59">
                <params>
                    <param name="vblist" type="Vector&lt;SnmpVarBind&gt;"/>
                    <param name="protocolVersion" type="int"/>
                    <param name="userData" type="Object"/>
                </params>
                <declaration name="result" type="SnmpMibRequest" line="61"/>
                <scope line="62"/>
                <scope line="65"/>
            </method>
            <method name="setUserData" type="void" line="71">
                <params>
                    <param name="userData" type="Object"/>
                </params>
            </method>
            <method name="run" type="void" line="74">
                <scope line="75">
                    <declaration name="oldContext" type="ThreadContext" line="76"/>
                    <scope line="77">
                        <scope line="80"/>
                        <scope line="86"/>
                        <scope line="92"/>
                        <scope line="98"/>
                        <scope line="104"/>
                    </scope>
                    <scope line="112"/>
                </scope>
                <scope line="116">
                    <scope line="119"/>
                </scope>
                <scope line="123">
                    <scope line="125"/>
                </scope>
                <scope line="129"/>
            </method>
            <method name="mapErrorStatusToV1" type="int" line="133">
                <params>
                    <param name="errorStatus" type="int"/>
                    <param name="reqPduType" type="int"/>
                </params>
                <scope line="137"/>
                <scope line="140"/>
                <scope line="144"/>
                <scope line="147"/>
                <scope line="151"/>
                <scope line="155"/>
            </method>
            <method name="mapErrorStatusToV2" type="int" line="161">
                <params>
                    <param name="errorStatus" type="int"/>
                    <param name="reqPduType" type="int"/>
                </params>
                <scope line="165"/>
            </method>
            <method name="mapErrorStatus" type="int" line="175">
                <params>
                    <param name="errorStatus" type="int"/>
                    <param name="protocolVersion" type="int"/>
                    <param name="reqPduType" type="int"/>
                </params>
            </method>
            <javadoc line="181">
                The method returns the error status of the operation.
                  The method takes into account the protocol version.                
            </javadoc>
            <method name="getErrorStatus" type="int" line="185"/>
            <javadoc line="189">
                The method returns the error index as a position in the var bind list.
                  The value returned by the method corresponds to the index in the original
                  var bind list as received by the SNMP protocol adaptor.                
            </javadoc>
            <method name="getErrorIndex" type="int" line="194"/>
            <javadoc line="199">
                The method updates the varbind list of the subrequest.                
            </javadoc>
            <method name="updateRequest" type="void" line="202">
                <params>
                    <param name="var" type="SnmpVarBind"/>
                    <param name="pos" type="int"/>
                </params>
                <declaration name="size" type="int" line="203"/>
            </method>
            <javadoc line="207">
                The method updates a given var bind list with the result of a
                  previsouly invoked operation.
                  Prior to calling the method, one must make sure that the operation was
                  successful. As such the method getErrorIndex or getErrorStatus should be
                  called.                
            </javadoc>
            <method name="updateResult" type="void" line="214">
                <params>
                    <param name="result" type="SnmpVarBind[]"/>
                </params>
                <declaration name="max" type="int" line="216"/>
                <declaration name="len" type="int" line="217"/>
                <scope line="218">
                    <declaration name="pos" type="int" line="219"/>
                    <scope line="220"/>
                    <scope line="223">
                        <scope line="224"/>
                    </scope>
                </scope>
            </method>
            <method name="init" type="void" line="230">
                <params>
                    <param name="engine" type="SnmpEngine"/>
                    <param name="incRequest" type="SnmpIncomingRequest"/>
                </params>
            </method>
            <declaration name="version" type="int" line="234"/>
            <javadoc line="234">
                Store the protocol version to handle                
            </javadoc>
            <declaration name="type" type="int" line="238"/>
            <javadoc line="238">
                Store the operation type. Remember if the type is Walk, it means
                  that we have to invoke the check method ...                
            </javadoc>
            <declaration name="agent" type="SnmpMibAgent" line="243"/>
            <javadoc line="243">
                Agent directly handled by the sub-request handler.                
            </javadoc>
            <declaration name="errorStatus" type="int" line="247"/>
            <javadoc line="247">
                Error status.                
            </javadoc>
            <declaration name="errorIndex" type="int" line="251"/>
            <javadoc line="251">
                Index of error.
                  A value of -1 means no error.                
            </javadoc>
            <declaration name="varBind" type="Vector&amp;lt;SnmpVarBind&amp;gt;" line="256"/>
            <javadoc line="256">
                The varbind list specific to the current sub request.
                  The vector must contain object of type SnmpVarBind.                
            </javadoc>
            <declaration name="translation" type="int[]" line="261"/>
            <javadoc line="261">
                The array giving the index translation between the content of
                  &lt;VAR&gt;varBind&lt;/VAR&gt; and the varbind list as specified in the request.                
            </javadoc>
            <declaration name="data" type="Object" line="266"/>
            <javadoc line="266">
                Contextual object allocated by the SnmpUserDataFactory.                
            </javadoc>
            <declaration name="mibRequest" type="SnmpMibRequest" line="270"/>
            <javadoc line="270">
                The SnmpMibRequest that will be passed to the agent.                
            </javadoc>
            <declaration name="reqPdu" type="SnmpPdu" line="274"/>
            <javadoc line="274">
                The SnmpPdu that will be passed to the request.                
            </javadoc>
            <class name="NonSyncVector" line="278">
                <type_params>
                    <type_param name="E"/>
                </type_params>
                <extends class="Vector">
                    <type_params>
                        <type_param name="E"/>
                    </type_params>
                </extends>
                <method name="NonSyncVector" type="constructor" line="279">
                    <params>
                        <param name="size" type="int"/>
                    </params>
                </method>
                <method name="addNonSyncElement" type="void" line="282">
                    <params>
                        <param name="obj" type="E"/>
                    </params>
                </method>
                <method name="elementAtNonSync" type="E" line="286">
                    <params>
                        <param name="index" type="int"/>
                    </params>
                </method>
            </class>
        </class>
    </source>