<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.remote.internal">
        <import package="java.io.IOException"/>
        <import package="java.io.NotSerializableException"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.util.concurrent.Executor"/>
        <import package="java.security.AccessControlContext"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="javax.security.auth.Subject"/>
        <import package="javax.management.Notification"/>
        <import package="javax.management.NotificationListener"/>
        <import package="javax.management.NotificationFilter"/>
        <import package="javax.management.ObjectName"/>
        <import package="javax.management.MBeanServerNotification"/>
        <import package="javax.management.InstanceNotFoundException"/>
        <import package="javax.management.ListenerNotFoundException"/>
        <import package="javax.management.remote.NotificationResult"/>
        <import package="javax.management.remote.TargetedNotification"/>
        <import package="com.sun.jmx.remote.util.ClassLogger"/>
        <import package="com.sun.jmx.remote.util.EnvHelp"/>
        <class name="ClientNotifForwarder" line="24">
            <declaration name="acc" type="AccessControlContext" line="25"/>
            <method name="ClientNotifForwarder" type="constructor" line="26">
                <params>
                    <param name="env" type="Map"/>
                </params>
            </method>
            <declaration name="threadId" type="int" line="29"/>
            <class name="LinearExecutor" line="30">
                <implements interface="Executor"/>
                <method name="execute" type="void" line="31">
                    <params>
                        <param name="command" type="Runnable"/>
                    </params>
                    <scope line="34">
                        <anonymous_class line="35">
                            <method name="run" type="void" line="36">
                                <scope line="37">
                                    <declaration name="r" type="Runnable" line="38"/>
                                    <scope line="39">
                                        <scope line="40"/>
                                        <scope line="44"/>
                                    </scope>
                                </scope>
                            </method>
                        </anonymous_class>
                    </scope>
                </method>
                <declaration name="command" type="Runnable" line="59"/>
                <declaration name="thread" type="Thread" line="60"/>
            </class>
            <method name="ClientNotifForwarder" type="constructor" line="62">
                <params>
                    <param name="defaultClassLoader" type="ClassLoader"/>
                    <param name="env" type="Map&lt;String,?&gt;"/>
                </params>
                <declaration name="ex" type="Executor" line="65"/>
            </method>
            <method name="fetchNotifs" type="NotificationResult" line="72"/>
            <javadoc line="72">
                Called to to fetch notifications from a server.                
            </javadoc>
            <method name="addListenerForMBeanRemovedNotif" type="Integer" line="76"/>
            <method name="removeListenerForMBeanRemovedNotif" type="void" line="77"/>
            <method name="lostNotifs" type="void" line="78"/>
            <javadoc line="78">
                Used to send out a notification about lost notifs                
            </javadoc>
            <method name="addNotificationListener" type="void" line="82">
                <params>
                    <param name="listenerID" type="Integer"/>
                    <param name="name" type="ObjectName"/>
                    <param name="listener" type="NotificationListener"/>
                    <param name="filter" type="NotificationFilter"/>
                    <param name="handback" type="Object"/>
                    <param name="delegationSubject" type="Subject"/>
                </params>
                <scope line="83"/>
            </method>
            <method name="removeNotificationListener" type="Integer[]" line="89">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="listener" type="NotificationListener"/>
                </params>
                <scope line="91"/>
                <declaration name="ids" type="List&amp;lt;Integer&amp;gt;" line="94"/>
                <declaration name="values" type="List&amp;lt;ClientListenerInfo&amp;gt;" line="95"/>
                <scope line="96">
                    <declaration name="li" type="ClientListenerInfo" line="97"/>
                    <scope line="98"/>
                </scope>
            </method>
            <method name="removeNotificationListener" type="Integer" line="106">
                <params>
                    <param name="name" type="ObjectName"/>
                    <param name="listener" type="NotificationListener"/>
                    <param name="filter" type="NotificationFilter"/>
                    <param name="handback" type="Object"/>
                </params>
                <scope line="107"/>
                <declaration name="id" type="Integer" line="111"/>
                <declaration name="values" type="List&amp;lt;ClientListenerInfo&amp;gt;" line="112"/>
                <scope line="113">
                    <declaration name="li" type="ClientListenerInfo" line="114"/>
                    <scope line="115"/>
                </scope>
            </method>
            <method name="removeNotificationListener" type="Integer[]" line="124">
                <params>
                    <param name="name" type="ObjectName"/>
                </params>
                <scope line="125"/>
                <declaration name="ids" type="List&amp;lt;Integer&amp;gt;" line="128"/>
                <declaration name="values" type="List&amp;lt;ClientListenerInfo&amp;gt;" line="129"/>
                <scope line="130">
                    <declaration name="li" type="ClientListenerInfo" line="131"/>
                    <scope line="132"/>
                </scope>
            </method>
            <method name="preReconnection" type="ClientListenerInfo[]" line="139">
                <scope line="140"/>
                <declaration name="tmp" type="ClientListenerInfo[]" line="143"/>
            </method>
            <javadoc line="148">
                Called after reconnection is finished.
                  This method is intended to be called only by a client connector:
                  &lt;code&gt;RMIConnector&lt;/code&gt; and &lt;code&gt;ClientIntermediary&lt;/code&gt;.                
            </javadoc>
            <method name="postReconnection" type="void" line="153">
                <params>
                    <param name="listenerInfos" type="ClientListenerInfo[]"/>
                </params>
                <scope line="154"/>
                <scope line="157">
                    <scope line="158"/>
                    <scope line="161">
                        <declaration name="ioe" type="IOException" line="162"/>
                    </scope>
                </scope>
                <declaration name="trace" type="boolean" line="167"/>
                <declaration name="len" type="int" line="168"/>
                <scope line="169">
                    <scope line="170"/>
                </scope>
                <scope line="177">
                    <scope line="178"/>
                    <scope line="181">
                        <declaration name="msg" type="String" line="182"/>
                        <scope line="183"/>
                    </scope>
                </scope>
                <scope line="188">
                    <scope line="189">
                        <scope line="190"/>
                        <scope line="193">
                            <declaration name="ioe" type="IOException" line="194"/>
                        </scope>
                    </scope>
                    <scope line="199"/>
                    <scope line="202"/>
                </scope>
            </method>
            <method name="terminate" type="void" line="207">
                <scope line="208"/>
                <scope line="211"/>
                <scope line="214"/>
            </method>
            <class name="NotifFetcher" line="219">
                <implements interface="Runnable"/>
                <declaration name="alreadyLogged" type="boolean" line="220"/>
                <method name="logOnce" type="void" line="221">
                    <params>
                        <param name="msg" type="String"/>
                        <param name="x" type="SecurityException"/>
                    </params>
                </method>
                <method name="setContextClassLoader" type="ClassLoader" line="227">
                    <params>
                        <param name="loader" type="ClassLoader"/>
                    </params>
                    <declaration name="ctxt" type="AccessControlContext" line="228"/>
                    <scope line="229"/>
                    <anonymous_class line="233">
                        <method name="run" type="ClassLoader" line="234">
                            <scope line="235">
                                <declaration name="previous" type="ClassLoader" line="236"/>
                            </scope>
                            <scope line="241"/>
                        </method>
                    </anonymous_class>
                </method>
                <method name="run" type="void" line="249">
                    <declaration name="previous" type="ClassLoader" line="250"/>
                    <scope line="251"/>
                    <scope line="254"/>
                    <scope line="257"/>
                    <scope line="260">
                        <scope line="261"/>
                    </scope>
                </method>
                <method name="doRun" type="void" line="266">
                    <scope line="267">
                        <scope line="269"/>
                    </scope>
                    <declaration name="nr" type="NotificationResult" line="273"/>
                    <scope line="274">
                        <declaration name="notifs" type="TargetedNotification[]" line="275"/>
                        <declaration name="len" type="int" line="276"/>
                        <declaration name="listeners" type="Map&amp;lt;Integer,ClientListenerInfo&amp;gt;" line="277"/>
                        <declaration name="myListenerID" type="Integer" line="278"/>
                        <declaration name="missed" type="long" line="279"/>
                        <scope line="280">
                            <scope line="281"/>
                            <scope line="286">
                                <declaration name="tn" type="TargetedNotification" line="287"/>
                                <declaration name="listenerID" type="Integer" line="288"/>
                                <scope line="289">
                                    <declaration name="li" type="ClientListenerInfo" line="290"/>
                                    <scope line="291"/>
                                </scope>
                                <declaration name="notif" type="Notification" line="296"/>
                                <declaration name="unreg" type="String" line="297"/>
                                <scope line="298">
                                    <declaration name="mbsn" type="MBeanServerNotification" line="299"/>
                                    <declaration name="name" type="ObjectName" line="300"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="306">
                            <declaration name="msg" type="String" line="307"/>
                        </scope>
                        <scope line="311">
                            <declaration name="tn" type="TargetedNotification" line="312"/>
                        </scope>
                    </scope>
                    <scope line="316"/>
                    <scope line="319">
                        <scope line="321"/>
                        <scope line="324">
                            <scope line="325"/>
                        </scope>
                    </scope>
                    <scope line="330"/>
                </method>
                <method name="dispatchNotification" type="void" line="334">
                    <params>
                        <param name="tn" type="TargetedNotification"/>
                        <param name="myListenerID" type="Integer"/>
                        <param name="listeners" type="Map&lt;Integer,ClientListenerInfo&gt;"/>
                    </params>
                    <declaration name="notif" type="Notification" line="335"/>
                    <declaration name="listenerID" type="Integer" line="336"/>
                    <declaration name="li" type="ClientListenerInfo" line="338"/>
                    <scope line="339"/>
                    <declaration name="l" type="NotificationListener" line="343"/>
                    <declaration name="h" type="Object" line="344"/>
                    <scope line="345"/>
                    <scope line="348">
                        <declaration name="msg" type="String" line="349"/>
                    </scope>
                </method>
                <method name="fetchNotifs" type="NotificationResult" line="353">
                    <scope line="354">
                        <declaration name="nr" type="NotificationResult" line="355"/>
                        <scope line="356"/>
                    </scope>
                    <scope line="361"/>
                    <scope line="365"/>
                    <scope line="369">
                        <scope line="370"/>
                    </scope>
                </method>
                <method name="fetchOneNotif" type="NotificationResult" line="377">
                    <declaration name="cnf" type="ClientNotifForwarder" line="378"/>
                    <declaration name="startSequenceNumber" type="long" line="379"/>
                    <declaration name="notFoundCount" type="int" line="380"/>
                    <declaration name="result" type="NotificationResult" line="381"/>
                    <declaration name="firstEarliest" type="long" line="382"/>
                    <scope line="383">
                        <declaration name="nr" type="NotificationResult" line="384"/>
                        <scope line="385"/>
                        <scope line="388"/>
                        <scope line="393"/>
                        <scope line="400"/>
                        <scope line="403">
                            <scope line="404">
                                <scope line="406"/>
                            </scope>
                            <scope line="412"/>
                        </scope>
                    </scope>
                    <scope line="418">
                        <declaration name="msg" type="String" line="419"/>
                        <scope line="421"/>
                    </scope>
                </method>
                <method name="shouldStop" type="boolean" line="427">
                    <scope line="428">
                        <scope line="429"/>
                        <scope line="432"/>
                    </scope>
                </method>
            </class>
            <method name="setState" type="void" line="440">
                <params>
                    <param name="newState" type="int"/>
                </params>
                <scope line="441"/>
            </method>
            <method name="init" type="void" line="447">
                <params>
                    <param name="reconnected" type="boolean"/>
                </params>
                <scope line="456"/>
                <scope line="459">
                    <scope line="460"/>
                    <scope line="463">
                        <declaration name="ioe" type="IOException" line="464"/>
                    </scope>
                </scope>
                <scope line="472"/>
                <scope line="475"/>
                <scope line="478">
                    <scope line="479">
                        <declaration name="nr" type="NotificationResult" line="480"/>
                    </scope>
                    <scope line="483"/>
                </scope>
                <scope line="488"/>
                <scope line="491">
                    <declaration name="msg" type="String" line="492"/>
                    <scope line="493"/>
                </scope>
            </method>
            <javadoc line="504">
                Import: should not remove a listener during reconnection, the reconnection
                  needs to change the listener list and that will possibly make removal fail.                
            </javadoc>
            <method name="beforeRemove" type="void" line="508">
                <scope line="509">
                    <scope line="510"/>
                    <scope line="513"/>
                    <scope line="516">
                        <declaration name="ioe" type="IOException" line="517"/>
                    </scope>
                </scope>
                <scope line="522"/>
            </method>
            <declaration name="defaultClassLoader" type="ClassLoader" line="526"/>
            <declaration name="executor" type="Executor" line="527"/>
            <declaration name="infoList" type="Map&amp;lt;Integer,ClientListenerInfo&amp;gt;" line="528"/>
            <declaration name="clientSequenceNumber" type="long" line="529"/>
            <declaration name="maxNotifications" type="int" line="530"/>
            <declaration name="timeout" type="long" line="531"/>
            <declaration name="mbeanRemovedNotifID" type="Integer" line="532"/>
            <declaration name="currentFetchThread" type="Thread" line="533"/>
            <declaration name="STARTING" type="int" line="534"/>
            <javadoc line="534">
                This state means that a thread is being created for fetching and forwarding notifications.                
            </javadoc>
            <declaration name="STARTED" type="int" line="538"/>
            <javadoc line="538">
                This state tells that a thread has been started for fetching and forwarding notifications.                
            </javadoc>
            <declaration name="STOPPING" type="int" line="542"/>
            <javadoc line="542">
                This state means that the fetching thread is informed to stop.                
            </javadoc>
            <declaration name="STOPPED" type="int" line="546"/>
            <javadoc line="546">
                This state means that the fetching thread is already stopped.                
            </javadoc>
            <declaration name="TERMINATED" type="int" line="550"/>
            <javadoc line="550">
                This state means that this object is terminated and no more thread will be created
                  for fetching notifications.                
            </javadoc>
            <declaration name="state" type="int" line="555"/>
            <declaration name="beingReconnected" type="boolean" line="556"/>
            <javadoc line="556">
                This variable is used to tell whether a connector (RMIConnector or ClientIntermediary)
                  is doing reconnection.
                  This variable will be set to true by the method &lt;code&gt;preReconnection&lt;/code&gt;, and set
                  to false by &lt;code&gt;postReconnection&lt;/code&gt;.
                  When beingReconnected == true, no thread will be created for fetching notifications.                
            </javadoc>
            <declaration name="logger" type="ClassLogger" line="564"/>
        </class>
    </source>