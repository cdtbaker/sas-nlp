<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.remote.internal">
        <import package="java.util.Properties"/>
        <import package="java.rmi.Remote"/>
        <import package="java.rmi.RemoteException"/>
        <import package="java.rmi.NoSuchObjectException"/>
        <import package="java.util.Properties"/>
        <import package="java.rmi.Remote"/>
        <import package="java.rmi.RemoteException"/>
        <import package="java.rmi.NoSuchObjectException"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <class name="IIOPHelper" line="41">
            <comment line="49">
                loads IIOPProxy implementation class if available                
            </comment>
            <javadoc line="41">
                A helper class for RMI-IIOP and CORBA APIs.                
            </javadoc>
            <method name="IIOPHelper" type="constructor" line="46"/>
            <declaration name="IMPL_CLASS" type="String" line="49"/>
            <declaration name="proxy" type="IIOPProxy" line="51"/>
            <anonymous_class line="52">
                <method name="run" type="IIOPProxy" line="53">
                    <scope line="54">
                        <declaration name="c" type="Class&lt;?&gt;" line="55"/>
                    </scope>
                    <scope line="57"/>
                    <scope line="59"/>
                    <scope line="61"/>
                </method>
            </anonymous_class>
            <javadoc line="66">
                Returns true if RMI-IIOP and CORBA is available.                
            </javadoc>
            <method name="isAvailable" type="boolean" line="69"/>
            <method name="ensureAvailable" type="void" line="73"/>
            <javadoc line="78">
                Returns true if the given object is a Stub.                
            </javadoc>
            <method name="isStub" type="boolean" line="81">
                <params>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <javadoc line="85">
                Returns the Delegate to which the given Stub delegates.                
            </javadoc>
            <method name="getDelegate" type="Object" line="88">
                <params>
                    <param name="stub" type="Object"/>
                </params>
            </method>
            <javadoc line="93">
                Sets the Delegate for a given Stub.                
            </javadoc>
            <method name="setDelegate" type="void" line="96">
                <params>
                    <param name="stub" type="Object"/>
                    <param name="delegate" type="Object"/>
                </params>
            </method>
            <javadoc line="101">
                Returns the ORB associated with the given stub                
                <throws>
                    UnsupportedOperationExceptionif the object does not support the operation that
                      was invoked                    
                </throws>
            </javadoc>
            <method name="getOrb" type="Object" line="108">
                <params>
                    <param name="stub" type="Object"/>
                </params>
            </method>
            <javadoc line="113">
                Connects the Stub to the given ORB.                
            </javadoc>
            <method name="connect" type="void" line="118">
                <params>
                    <param name="stub" type="Object"/>
                    <param name="orb" type="Object"/>
                </params>
            </method>
            <javadoc line="123">
                Returns true if the given object is an ORB.                
            </javadoc>
            <method name="isOrb" type="boolean" line="126">
                <params>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <javadoc line="131">
                Creates, and returns, a new ORB instance.                
            </javadoc>
            <method name="createOrb" type="Object" line="134">
                <params>
                    <param name="args" type="String[]"/>
                    <param name="props" type="Properties"/>
                </params>
            </method>
            <javadoc line="139">
                Converts a string, produced by the object_to_string method, back
                  to a CORBA object reference.                
            </javadoc>
            <method name="stringToObject" type="Object" line="143">
                <params>
                    <param name="orb" type="Object"/>
                    <param name="str" type="String"/>
                </params>
            </method>
            <javadoc line="148">
                Converts the given CORBA object reference to a string.                
            </javadoc>
            <method name="objectToString" type="String" line="151">
                <params>
                    <param name="orb" type="Object"/>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <javadoc line="156">
                Checks to ensure that an object of a remote or abstract interface
                  type can be cast to a desired type.                
            </javadoc>
            <method name="narrow" type="T" line="160">
                <params>
                    <param name="narrowFrom" type="Object"/>
                    <param name="narrowTo" type="Class<T>"/>
                </params>
            </method>
            <javadoc line="165">
                Makes a server object ready to receive remote calls                
            </javadoc>
            <method name="exportObject" type="void" line="168">
                <params>
                    <param name="obj" type="Remote"/>
                </params>
            </method>
            <javadoc line="173">
                Deregisters a server object from the runtime.                
            </javadoc>
            <method name="unexportObject" type="void" line="176">
                <params>
                    <param name="obj" type="Remote"/>
                </params>
            </method>
            <javadoc line="181">
                Returns a stub for the given server object.                
            </javadoc>
            <method name="toStub" type="Remote" line="184">
                <params>
                    <param name="obj" type="Remote"/>
                </params>
            </method>
        </class>
    </source>