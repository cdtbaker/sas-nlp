<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.remote.internal">
        <import package="java.util.Properties"/>
        <import package="java.rmi.Remote"/>
        <import package="java.rmi.RemoteException"/>
        <import package="java.rmi.NoSuchObjectException"/>
        <import package="java.util.Properties"/>
        <import package="java.rmi.Remote"/>
        <import package="java.rmi.RemoteException"/>
        <import package="java.rmi.NoSuchObjectException"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <class name="IIOPHelper" line="12">
            <javadoc line="12">
                A helper class for RMI-IIOP and CORBA APIs.                
            </javadoc>
            <method name="IIOPHelper" type="constructor" line="16"/>
            <declaration name="IMPL_CLASS" type="String" line="18"/>
            <declaration name="proxy" type="IIOPProxy" line="19"/>
            <anonymous_class line="19">
                <method name="run" type="IIOPProxy" line="20">
                    <scope line="21">
                        <declaration name="c" type="Class&amp;lt;?&amp;gt;" line="22"/>
                    </scope>
                    <scope line="25"/>
                    <scope line="28"/>
                    <scope line="31"/>
                </method>
            </anonymous_class>
            <javadoc line="37">
                Returns true if RMI-IIOP and CORBA is available.                
            </javadoc>
            <method name="isAvailable" type="boolean" line="40"/>
            <method name="ensureAvailable" type="void" line="43"/>
            <javadoc line="46">
                Returns true if the given object is a Stub.                
            </javadoc>
            <method name="isStub" type="boolean" line="49">
                <params>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <javadoc line="52">
                Returns the Delegate to which the given Stub delegates.                
            </javadoc>
            <method name="getDelegate" type="Object" line="55">
                <params>
                    <param name="stub" type="Object"/>
                </params>
            </method>
            <javadoc line="59">
                Sets the Delegate for a given Stub.                
            </javadoc>
            <method name="setDelegate" type="void" line="62">
                <params>
                    <param name="stub" type="Object"/>
                    <param name="delegate" type="Object"/>
                </params>
            </method>
            <javadoc line="66">
                Returns the ORB associated with the given stub                
                <throws>
                    UnsupportedOperationExceptionif the object does not support the operation that
                      was invoked                    
                </throws>
            </javadoc>
            <method name="getOrb" type="Object" line="71">
                <params>
                    <param name="stub" type="Object"/>
                </params>
            </method>
            <javadoc line="75">
                Connects the Stub to the given ORB.                
            </javadoc>
            <method name="connect" type="void" line="78">
                <params>
                    <param name="stub" type="Object"/>
                    <param name="orb" type="Object"/>
                </params>
            </method>
            <javadoc line="82">
                Returns true if the given object is an ORB.                
            </javadoc>
            <method name="isOrb" type="boolean" line="85">
                <params>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <javadoc line="89">
                Creates, and returns, a new ORB instance.                
            </javadoc>
            <method name="createOrb" type="Object" line="92">
                <params>
                    <param name="args" type="String[]"/>
                    <param name="props" type="Properties"/>
                </params>
            </method>
            <javadoc line="96">
                Converts a string, produced by the object_to_string method, back
                  to a CORBA object reference.                
            </javadoc>
            <method name="stringToObject" type="Object" line="100">
                <params>
                    <param name="orb" type="Object"/>
                    <param name="str" type="String"/>
                </params>
            </method>
            <javadoc line="104">
                Converts the given CORBA object reference to a string.                
            </javadoc>
            <method name="objectToString" type="String" line="107">
                <params>
                    <param name="orb" type="Object"/>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <javadoc line="111">
                Checks to ensure that an object of a remote or abstract interface
                  type can be cast to a desired type.                
            </javadoc>
            <method name="narrow" type="T" line="115">
                <params>
                    <param name="narrowFrom" type="Object"/>
                    <param name="narrowTo" type="Class&lt;T&gt;"/>
                </params>
            </method>
            <javadoc line="119">
                Makes a server object ready to receive remote calls                
            </javadoc>
            <method name="exportObject" type="void" line="122">
                <params>
                    <param name="obj" type="Remote"/>
                </params>
            </method>
            <javadoc line="126">
                Deregisters a server object from the runtime.                
            </javadoc>
            <method name="unexportObject" type="void" line="129">
                <params>
                    <param name="obj" type="Remote"/>
                </params>
            </method>
            <javadoc line="133">
                Returns a stub for the given server object.                
            </javadoc>
            <method name="toStub" type="Remote" line="136">
                <params>
                    <param name="obj" type="Remote"/>
                </params>
            </method>
        </class>
    </source>