<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp">
        <interface name="SnmpPduFactory">
            <javadoc line="2">
                Defines the interface of the object in charge of encoding and decoding SNMP packets.
                  &lt;P&gt;
                  You will not usually need to use this interface, except if you
                  decide to replace the default implementation &lt;CODE&gt;SnmpPduFactoryBER&lt;/CODE&gt;.
                  &lt;P&gt;
                  An &lt;CODE&gt;SnmpPduFactory&lt;/CODE&gt; object is attached to an{@link com.sun.jmx.snmp.daemon.SnmpAdaptorServer SNMP protocol adaptor}or an {@link com.sun.jmx.snmp.SnmpPeer SnmpPeer}.
                  It is used each time an SNMP packet needs to be encoded or decoded.
                  &lt;BR&gt;{@link com.sun.jmx.snmp.SnmpPduFactoryBER SnmpPduFactoryBER} is the default
                  implementation.
                  It simply applies the standard ASN.1 encoding and decoding
                  on the bytes of the SNMP packet.
                  &lt;P&gt;
                  It&apos;s possible to implement your own &lt;CODE&gt;SnmpPduFactory&lt;/CODE&gt;
                  object and to add authentication and/or encryption to the
                  default encoding/decoding process.
                  &lt;p&gt;&lt;b&gt;This API is a Sun Microsystems internal API  and is subject
                  to change without notice.&lt;/b&gt;&lt;/p&gt;                
                <see>
                    SnmpPduFactory                    
                </see>
                <see>
                    SnmpPduPacket                    
                </see>
                <see>
                    SnmpMessage                    
                </see>
            </javadoc>
            <method name="decodeSnmpPdu" type="SnmpPdu" line="25"/>
            <javadoc line="25">
                Decodes the specified &lt;CODE&gt;SnmpMsg&lt;/CODE&gt; and returns the
                  resulting &lt;CODE&gt;SnmpPdu&lt;/CODE&gt;. If this method returns
                  &lt;CODE&gt;null&lt;/CODE&gt;, the message will be considered unsafe
                  and will be dropped.                
                <param>
                    msg The <CODE>SnmpMsg</CODE> to be decoded.                    
                </param>
                <return>
                    Null or a fully initialized <CODE>SnmpPdu</CODE>.                    
                </return>
                <exception>
                    SnmpStatusException If the encoding is invalid.                    
                </exception>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="encodeSnmpPdu" type="SnmpMsg" line="36"/>
            <javadoc line="36">
                Encodes the specified &lt;CODE&gt;SnmpPdu&lt;/CODE&gt; and
                  returns the resulting &lt;CODE&gt;SnmpMsg&lt;/CODE&gt;. If this
                  method returns null, the specified &lt;CODE&gt;SnmpPdu&lt;/CODE&gt;
                  will be dropped and the current SNMP request will be
                  aborted.                
                <param>
                    p The <CODE>SnmpPdu</CODE> to be encoded.                    
                </param>
                <param>
                    maxDataLength The size limit of the resulting encoding.                    
                </param>
                <return>
                    Null or a fully encoded <CODE>SnmpMsg</CODE>.                    
                </return>
                <exception>
                    SnmpStatusException If <CODE>pdu</CODE> contains
                      illegal values and cannot be encoded.                    
                </exception>
                <exception>
                    SnmpTooBigException If the resulting encoding does not
                      fit into <CODE>maxPktSize</CODE> bytes.                    
                </exception>
                <since>
                    1.5                    
                </since>
            </javadoc>
        </interface>
    </source>