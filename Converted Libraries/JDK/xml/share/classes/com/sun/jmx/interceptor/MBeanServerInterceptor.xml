<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.interceptor">
        <import package="java.io.ObjectInputStream"/>
        <import package="javax.management.InstanceNotFoundException"/>
        <import package="javax.management.MBeanException"/>
        <import package="javax.management.MBeanServer"/>
        <import package="javax.management.ObjectName"/>
        <import package="javax.management.OperationsException"/>
        <import package="javax.management.ReflectionException"/>
        <import package="javax.management.loading.ClassLoaderRepository"/>
        <interface name="MBeanServerInterceptor">
            <implements interface="MBeanServer"/>
            <javadoc line="38">
                &lt;p&gt;This interface specifies the behavior to be implemented by an
                  MBean Server Interceptor.  An MBean Server Interceptor has
                  essentially the same interface as an MBean Server.  An MBean Server
                  forwards received requests to its default interceptor, which may
                  handle them itself or forward them to other interceptors.  The
                  default interceptor may be changed via the {@link com.sun.jmx.mbeanserver.SunJmxMBeanServer#setMBeanServerInterceptor}method.&lt;/p&gt;
                  &lt;p&gt;The initial default interceptor provides the standard MBean
                  Server behavior.  It handles a collection of named MBeans, each
                  represented by a Java object.  A replacement default interceptor
                  may build on this behavior, for instance by adding logging or
                  security checks, before forwarding requests to the initial default
                  interceptor.  Or, it may route each request to one of a number of
                  sub-interceptors, for instance based on the {@link ObjectName} in
                  the request.&lt;/p&gt;
                  &lt;p&gt;An interceptor, default or not, need not implement MBeans as
                  Java objects, in the way that the initial default interceptor does.
                  It may instead implement &lt;em&gt;virtual MBeans&lt;/em&gt;, which do not
                  exist as Java objects when they are not in use.  For example, these
                  MBeans could be implemented by forwarding requests to a database,
                  or to a remote MBean server, or by performing system calls to query
                  or modify system resources.&lt;/p&gt;                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="instantiate" type="Object" line="68"/>
            <javadoc line="68">
                This method should never be called.
                  Usually hrows UnsupportedOperationException.                
            </javadoc>
            <method name="instantiate" type="Object" line="74"/>
            <javadoc line="74">
                This method should never be called.
                  Usually throws UnsupportedOperationException.                
            </javadoc>
            <method name="instantiate" type="Object" line="81"/>
            <javadoc line="81">
                This method should never be called.
                  Usually throws UnsupportedOperationException.                
            </javadoc>
            <method name="instantiate" type="Object" line="88"/>
            <javadoc line="88">
                This method should never be called.
                  Usually throws UnsupportedOperationException.                
            </javadoc>
            <method name="deserialize" type="ObjectInputStream" line="97"/>
            <javadoc line="97">
                This method should never be called.
                  Usually throws UnsupportedOperationException.                
            </javadoc>
            <method name="deserialize" type="ObjectInputStream" line="105"/>
            <javadoc line="105">
                This method should never be called.
                  Usually throws UnsupportedOperationException.                
            </javadoc>
            <method name="deserialize" type="ObjectInputStream" line="113"/>
            <javadoc line="113">
                This method should never be called.
                  Usually hrows UnsupportedOperationException.                
            </javadoc>
            <method name="getClassLoaderRepository" type="ClassLoaderRepository" line="123"/>
            <javadoc line="123">
                This method should never be called.
                  Usually throws UnsupportedOperationException.                
            </javadoc>
        </interface>
    </source>