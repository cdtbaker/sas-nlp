<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.mbeanserver">
        <import package="com.sun.jmx.mbeanserver.MBeanIntrospector.MBeanInfoMap"/>
        <import package="com.sun.jmx.mbeanserver.MBeanIntrospector.PerInterfaceMap"/>
        <import package="java.lang.annotation.Annotation"/>
        <import package="java.lang.reflect.GenericArrayType"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.lang.reflect.Method"/>
        <import package="java.lang.reflect.ParameterizedType"/>
        <import package="java.lang.reflect.Type"/>
        <import package="javax.management.Descriptor"/>
        <import package="javax.management.ImmutableDescriptor"/>
        <import package="javax.management.MBeanAttributeInfo"/>
        <import package="javax.management.MBeanException"/>
        <import package="javax.management.MBeanOperationInfo"/>
        <import package="javax.management.MBeanParameterInfo"/>
        <import package="javax.management.NotCompliantMBeanException"/>
        <import package="javax.management.openmbean.OpenMBeanAttributeInfoSupport"/>
        <import package="javax.management.openmbean.OpenMBeanOperationInfoSupport"/>
        <import package="javax.management.openmbean.OpenMBeanParameterInfo"/>
        <import package="javax.management.openmbean.OpenMBeanParameterInfoSupport"/>
        <import package="javax.management.openmbean.OpenType"/>
        <class name="MXBeanIntrospector" line="22">
            <extends class="MBeanIntrospector">
                <type_params>
                    <type_param name="ConvertingMethod"/>
                </type_params>
            </extends>
            <javadoc line="22">
                Introspector for MXBeans.  There is exactly one instance of this class.                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="instance" type="MXBeanIntrospector" line="27"/>
            <method name="getInstance" type="MXBeanIntrospector" line="28"/>
            <method name="getPerInterfaceMap" type="PerInterfaceMap<ConvertingMethod>" line="31"/>
            <method name="getMBeanInfoMap" type="MBeanInfoMap" line="34"/>
            <method name="getAnalyzer" type="MBeanAnalyzer<ConvertingMethod>" line="37">
                <params>
                    <param name="mbeanInterface" type="Class<?>"/>
                </params>
            </method>
            <method name="isMXBean" type="boolean" line="40"/>
            <method name="mFrom" type="ConvertingMethod" line="43">
                <params>
                    <param name="m" type="Method"/>
                </params>
            </method>
            <method name="getName" type="String" line="46">
                <params>
                    <param name="m" type="ConvertingMethod"/>
                </params>
            </method>
            <method name="getGenericReturnType" type="Type" line="49">
                <params>
                    <param name="m" type="ConvertingMethod"/>
                </params>
            </method>
            <method name="getGenericParameterTypes" type="Type[]" line="52">
                <params>
                    <param name="m" type="ConvertingMethod"/>
                </params>
            </method>
            <method name="getSignature" type="String[]" line="55">
                <params>
                    <param name="m" type="ConvertingMethod"/>
                </params>
            </method>
            <method name="checkMethod" type="void" line="58">
                <params>
                    <param name="m" type="ConvertingMethod"/>
                </params>
            </method>
            <method name="invokeM2" type="Object" line="61">
                <params>
                    <param name="m" type="ConvertingMethod"/>
                    <param name="target" type="Object"/>
                    <param name="args" type="Object[]"/>
                    <param name="cookie" type="Object"/>
                </params>
            </method>
            <method name="validParameter" type="boolean" line="64">
                <params>
                    <param name="m" type="ConvertingMethod"/>
                    <param name="value" type="Object"/>
                    <param name="paramNo" type="int"/>
                    <param name="cookie" type="Object"/>
                </params>
                <scope line="65">
                    <declaration name="t" type="Type" line="66"/>
                </scope>
                <scope line="69">
                    <declaration name="v" type="Object" line="70"/>
                    <scope line="71"/>
                    <scope line="74"/>
                </scope>
            </method>
            <method name="getMBeanAttributeInfo" type="MBeanAttributeInfo" line="80">
                <params>
                    <param name="attributeName" type="String"/>
                    <param name="getter" type="ConvertingMethod"/>
                    <param name="setter" type="ConvertingMethod"/>
                </params>
                <declaration name="isReadable" type="boolean" line="81"/>
                <declaration name="isWritable" type="boolean" line="82"/>
                <declaration name="isIs" type="boolean" line="83"/>
                <declaration name="description" type="String" line="84"/>
                <declaration name="openType" type="OpenType&lt;?&gt;" line="85"/>
                <declaration name="originalType" type="Type" line="86"/>
                <scope line="87"/>
                <scope line="91"/>
                <declaration name="descriptor" type="Descriptor" line="95"/>
                <scope line="96"/>
                <scope line="99"/>
                <declaration name="ai" type="MBeanAttributeInfo" line="102"/>
                <scope line="103"/>
                <scope line="106"/>
            </method>
            <method name="getMBeanOperationInfo" type="MBeanOperationInfo" line="111">
                <params>
                    <param name="operationName" type="String"/>
                    <param name="operation" type="ConvertingMethod"/>
                </params>
                <declaration name="method" type="Method" line="112"/>
                <declaration name="description" type="String" line="113"/>
                <declaration name="impact" type="int" line="114"/>
                <declaration name="returnType" type="OpenType&lt;?&gt;" line="115"/>
                <declaration name="originalReturnType" type="Type" line="116"/>
                <declaration name="paramTypes" type="OpenType&lt;?&gt;[]" line="117"/>
                <declaration name="originalParamTypes" type="Type[]" line="118"/>
                <declaration name="params" type="MBeanParameterInfo[]" line="119"/>
                <declaration name="openReturnType" type="boolean" line="120"/>
                <declaration name="openParameterTypes" type="boolean" line="121"/>
                <declaration name="annots" type="Annotation[][]" line="122"/>
                <scope line="123">
                    <declaration name="paramName" type="String" line="124"/>
                    <declaration name="paramDescription" type="String" line="125"/>
                    <declaration name="openType" type="OpenType&lt;?&gt;" line="126"/>
                    <declaration name="originalType" type="Type" line="127"/>
                    <declaration name="descriptor" type="Descriptor" line="128"/>
                    <declaration name="pi" type="MBeanParameterInfo" line="130"/>
                    <scope line="131"/>
                    <scope line="134"/>
                </scope>
                <declaration name="descriptor" type="Descriptor" line="140"/>
                <declaration name="oi" type="MBeanOperationInfo" line="142"/>
                <scope line="143">
                    <declaration name="oparams" type="OpenMBeanParameterInfo[]" line="144"/>
                </scope>
                <scope line="148"/>
            </method>
            <method name="getBasicMBeanDescriptor" type="Descriptor" line="153"/>
            <method name="getMBeanDescriptor" type="Descriptor" line="156">
                <params>
                    <param name="resourceClass" type="Class<?>"/>
                </params>
            </method>
            <method name="typeDescriptor" type="Descriptor" line="159">
                <params>
                    <param name="openType" type="OpenType<?>"/>
                    <param name="originalType" type="Type"/>
                </params>
            </method>
            <javadoc line="162">
                &lt;p&gt;True if this type can be faithfully represented in an
                  OpenMBeanInfo.&lt;/p&gt;
                  &lt;p&gt;Compatibility with JSR 174 means that primitive types must be
                  represented by an MBeanInfo whose getType() is the primitive type
                  string, e.g. &quot;int&quot;.  If we used an OpenMBeanInfo then this string
                  would be the wrapped type, e.g. &quot;java.lang.Integer&quot;.&lt;/p&gt;
                  &lt;p&gt;Compatibility with JMX 1.2 (including J2SE 5.0) means that arrays
                  of primitive types cannot use an ArrayType representing an array of
                  primitives, because that didn&apos;t exist in JMX 1.2.&lt;/p&gt;                
            </javadoc>
            <method name="canUseOpenInfo" type="boolean" line="173">
                <params>
                    <param name="type" type="Type"/>
                </params>
                <scope line="174"/>
                <scope line="177"/>
            </method>
            <method name="originalTypeString" type="String" line="182">
                <params>
                    <param name="type" type="Type"/>
                </params>
            </method>
            <method name="typeName" type="String" line="186">
                <params>
                    <param name="type" type="Type"/>
                </params>
                <scope line="187">
                    <declaration name="c" type="Class&lt;?&gt;" line="188"/>
                </scope>
                <scope line="192">
                    <declaration name="gat" type="GenericArrayType" line="193"/>
                </scope>
                <scope line="196">
                    <declaration name="pt" type="ParameterizedType" line="197"/>
                    <declaration name="sb" type="StringBuilder" line="198"/>
                    <declaration name="sep" type="String" line="200"/>
                    <scope line="201"/>
                </scope>
            </method>
            <declaration name="perInterfaceMap" type="PerInterfaceMap&lt;ConvertingMethod&gt;" line="209"/>
            <declaration name="mbeanInfoMap" type="MBeanInfoMap" line="210"/>
        </class>
    </source>