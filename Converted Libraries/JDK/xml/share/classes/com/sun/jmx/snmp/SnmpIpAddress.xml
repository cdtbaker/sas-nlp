<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp">
        <class name="SnmpIpAddress" line="2">
            <extends class="SnmpOid"/>
            <javadoc line="2">
                Represents an SNMP IpAddress.
                  &lt;p&gt;&lt;b&gt;This API is a Sun Microsystems internal API  and is subject
                  to change without notice.&lt;/b&gt;&lt;/p&gt;                
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="8"/>
            <javadoc line="9">
                Constructs a new &lt;CODE&gt;SnmpIpAddress&lt;/CODE&gt; from the specified bytes array.                
                <param>
                    bytes The four bytes composing the address.                    
                </param>
                <exception>
                    IllegalArgumentException The length of the array is not equal to four.                    
                </exception>
            </javadoc>
            <method name="SnmpIpAddress" type="constructor" line="14">
                <params>
                    <param name="bytes" type="byte[]"/>
                </params>
            </method>
            <javadoc line="17">
                Constructs a new &lt;CODE&gt;SnmpIpAddress&lt;/CODE&gt; from the specified long value.                
                <param>
                    addr The initialization value.                    
                </param>
            </javadoc>
            <method name="SnmpIpAddress" type="constructor" line="21">
                <params>
                    <param name="addr" type="long"/>
                </params>
                <declaration name="address" type="int" line="22"/>
                <declaration name="ipaddr" type="byte[]" line="23"/>
            </method>
            <javadoc line="30">
                Constructs a new &lt;CODE&gt;SnmpIpAddress&lt;/CODE&gt; from a dot-formatted &lt;CODE&gt;String&lt;/CODE&gt;.
                  The dot-formatted &lt;CODE&gt;String&lt;/CODE&gt; is formulated x.x.x.x .                
                <param>
                    dotAddress The initialization value.                    
                </param>
                <exception>
                    IllegalArgumentException The string does not correspond to an ip address.                    
                </exception>
            </javadoc>
            <method name="SnmpIpAddress" type="constructor" line="36">
                <params>
                    <param name="dotAddress" type="String"/>
                </params>
                <scope line="38"/>
            </method>
            <javadoc line="42">
                Constructs a new &lt;CODE&gt;SnmpIpAddress&lt;/CODE&gt; from four long values.                
                <param>
                    b1 Byte 1.                    
                </param>
                <param>
                    b2 Byte 2.                    
                </param>
                <param>
                    b3 Byte 3.                    
                </param>
                <param>
                    b4 Byte 4.                    
                </param>
                <exception>
                    IllegalArgumentException A value is outside of [0-255].                    
                </exception>
            </javadoc>
            <method name="SnmpIpAddress" type="constructor" line="50">
                <params>
                    <param name="b1" type="long"/>
                    <param name="b2" type="long"/>
                    <param name="b3" type="long"/>
                    <param name="b4" type="long"/>
                </params>
                <scope line="52"/>
            </method>
            <javadoc line="56">
                Converts the address value to its byte array form.                
                <return>
                    The byte array representation of the value.                    
                </return>
            </javadoc>
            <method name="byteValue" type="byte[]" line="60">
                <declaration name="result" type="byte[]" line="61"/>
            </method>
            <javadoc line="68">
                Converts the address to its &lt;CODE&gt;String&lt;/CODE&gt; form.
                  Same as &lt;CODE&gt;toString()&lt;/CODE&gt;. Exists only to follow a naming scheme.                
                <return>
                    The &lt;CODE&gt;String&lt;/CODE&gt; representation of the value.                    
                </return>
            </javadoc>
            <method name="stringValue" type="String" line="73"/>
            <javadoc line="76">
                Extracts the ip address from an index OID and returns its
                  value converted as an &lt;CODE&gt;SnmpOid&lt;/CODE&gt;.                
                <param>
                    index The index array.                    
                </param>
                <param>
                    start The position in the index array.                    
                </param>
                <return>
                    The OID representing the ip address value.                    
                </return>
                <exception>
                    SnmpStatusException There is no ip address value
                      available at the start position.                    
                </exception>
            </javadoc>
            <method name="toOid" type="SnmpOid" line="85">
                <params>
                    <param name="index" type="long[]"/>
                    <param name="start" type="int"/>
                </params>
                <scope line="86">
                    <scope line="87"/>
                    <scope line="90"/>
                </scope>
                <scope line="94"/>
            </method>
            <javadoc line="98">
                Scans an index OID, skips the address value and returns the position
                  of the next value.                
                <param>
                    index The index array.                    
                </param>
                <param>
                    start The position in the index array.                    
                </param>
                <return>
                    The position of the next value.                    
                </return>
                <exception>
                    SnmpStatusException There is no address value
                      available at the start position.                    
                </exception>
            </javadoc>
            <method name="nextOid" type="int" line="107">
                <params>
                    <param name="index" type="long[]"/>
                    <param name="start" type="int"/>
                </params>
                <scope line="108"/>
                <scope line="111"/>
            </method>
            <javadoc line="115">
                Appends an &lt;CODE&gt;SnmpOid&lt;/CODE&gt; representing an &lt;CODE&gt;SnmpIpAddress&lt;/CODE&gt; to another OID.                
                <param>
                    source An OID representing an &lt;CODE&gt;SnmpIpAddress&lt;/CODE&gt; value.                    
                </param>
                <param>
                    dest Where source should be appended.                    
                </param>
            </javadoc>
            <method name="appendToOid" type="void" line="120">
                <params>
                    <param name="source" type="SnmpOid"/>
                    <param name="dest" type="SnmpOid"/>
                </params>
                <scope line="121"/>
            </method>
            <javadoc line="126">
                Returns a textual description of the type object.                
                <return>
                    ASN.1 textual description.                    
                </return>
            </javadoc>
            <method name="getTypeName" type="String" line="130"/>
            <javadoc line="133">
                Build Ip address from byte array.                
            </javadoc>
            <method name="buildFromByteArray" type="void" line="136">
                <params>
                    <param name="bytes" type="byte[]"/>
                </params>
                <scope line="137"/>
            </method>
            <declaration name="name" type="String" line="147"/>
            <javadoc line="147">
                Name of the type.                
            </javadoc>
        </class>
    </source>