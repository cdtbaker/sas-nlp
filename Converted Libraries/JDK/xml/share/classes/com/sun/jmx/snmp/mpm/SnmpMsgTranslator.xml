<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp.mpm">
        <import package="com.sun.jmx.snmp.SnmpSecurityParameters"/>
        <import package="com.sun.jmx.snmp.SnmpMsg"/>
        <interface name="SnmpMsgTranslator">
            <javadoc line="4">
                The translator interface is implemented by classes dealing with a specific SNMP protocol version. SnmpMsgTranslator are used in conjonction with SnmpMsgProcessingModel implementations.
                  &lt;p&gt;&lt;b&gt;This API is a Sun Microsystems internal API  and is subject
                  to change without notice.&lt;/b&gt;&lt;/p&gt;                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="getMsgId" type="int" line="11"/>
            <javadoc line="11">
                Returns the request or message Id contained in the passed message. The message is a generic one that is narrowed in the object implementing this interface.                
            </javadoc>
            <method name="getMsgMaxSize" type="int" line="15"/>
            <javadoc line="15">
                Returns the response max message size. The message is a generic one that is narrowed in the object implementing this interface.                
            </javadoc>
            <method name="getMsgFlags" type="byte" line="19"/>
            <javadoc line="19">
                Returns the message flags. The message is a generic one that is narrowed in the object implementing this interface.                
            </javadoc>
            <method name="getMsgSecurityModel" type="int" line="23"/>
            <javadoc line="23">
                Returns the message security model. The message is a generic one that is narrowed in the object implementing this interface.                
            </javadoc>
            <method name="getSecurityLevel" type="int" line="27"/>
            <javadoc line="27">
                Returns the message security level. The message is a generic one that is narrowed in the object implementing this interface.                
            </javadoc>
            <method name="getFlatSecurityParameters" type="byte[]" line="31"/>
            <javadoc line="31">
                Returns an encoded representation of security parameters contained in the passed msg. The message is a generic one that is narrowed in the object implementing this interface.                
            </javadoc>
            <method name="getSecurityParameters" type="SnmpSecurityParameters" line="35"/>
            <javadoc line="35">
                Returns the message security parameters. The message is a generic one that is narrowed in the object implementing this interface.                
            </javadoc>
            <method name="getContextEngineId" type="byte[]" line="39"/>
            <javadoc line="39">
                Returns the message context Engine Id. The message is a generic one that is narrowed in the object implementing this interface.                
            </javadoc>
            <method name="getContextName" type="byte[]" line="43"/>
            <javadoc line="43">
                Returns the message context name. The message is a generic one that is narrowed in the object implementing this interface.                
            </javadoc>
            <method name="getRawContextName" type="byte[]" line="47"/>
            <javadoc line="47">
                Returns the raw message context name. Raw mean as it is received from the network, without translation. It can be useful when some data are piggy backed in the context name.The message is a generic one that is narrowed in the object implementing this interface.                
            </javadoc>
            <method name="getAccessContext" type="byte[]" line="51"/>
            <javadoc line="51">
                Returns the message accesscontext name. This access context name is used when dealing with access rights (eg: community for V1/V2 or context name for V3).The message is a generic one that is narrowed in the object implementing this interface.                
            </javadoc>
            <method name="getEncryptedPdu" type="byte[]" line="55"/>
            <javadoc line="55">
                Returns the message encrypted pdu or null if no encryption. The message is a generic one that is narrowed in the object implementing this interface.                
            </javadoc>
            <method name="setContextName" type="void" line="59"/>
            <javadoc line="59">
                Set the context name of the passed message.                
            </javadoc>
            <method name="setContextEngineId" type="void" line="63"/>
            <javadoc line="63">
                Set the context engine Id of the passed message.                
            </javadoc>
        </interface>
    </source>