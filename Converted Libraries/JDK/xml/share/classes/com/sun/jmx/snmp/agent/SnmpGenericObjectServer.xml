<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp.agent">
        <import package="java.util.Vector"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.Iterator"/>
        <import package="javax.management.AttributeList"/>
        <import package="javax.management.Attribute"/>
        <import package="javax.management.MBeanException"/>
        <import package="javax.management.MBeanServer"/>
        <import package="javax.management.ObjectName"/>
        <import package="javax.management.ReflectionException"/>
        <import package="javax.management.InstanceNotFoundException"/>
        <import package="javax.management.InvalidAttributeValueException"/>
        <import package="javax.management.InstanceAlreadyExistsException"/>
        <import package="javax.management.MBeanRegistrationException"/>
        <import package="javax.management.NotCompliantMBeanException"/>
        <import package="javax.management.RuntimeOperationsException"/>
        <import package="com.sun.jmx.snmp.SnmpOid"/>
        <import package="com.sun.jmx.snmp.SnmpValue"/>
        <import package="com.sun.jmx.snmp.SnmpVarBind"/>
        <import package="com.sun.jmx.snmp.SnmpStatusException"/>
        <class name="SnmpGenericObjectServer" line="55">
            <comment line="79">
                ----------------------------------------------------------------------                
            </comment>
            <comment line="80">
                                
            </comment>
            <comment line="81">
                Protected variables                
            </comment>
            <comment line="82">
                                
            </comment>
            <comment line="83">
                ----------------------------------------------------------------------                
            </comment>
            <comment line="90">
                ----------------------------------------------------------------------                
            </comment>
            <comment line="91">
                                
            </comment>
            <comment line="92">
                Constructors                
            </comment>
            <comment line="93">
                                
            </comment>
            <comment line="94">
                ----------------------------------------------------------------------                
            </comment>
            <javadoc line="55">
                &lt;p&gt;
                  This class is a utility class that transforms SNMP GET / SET requests
                  into standard JMX getAttributes() setAttributes() requests.
                  &lt;/p&gt;
                  &lt;p&gt;
                  The transformation relies on the metadata information provided by the{@link com.sun.jmx.snmp.agent.SnmpGenericMetaServer} object which is
                  passed as the first parameter to every method. This SnmpGenericMetaServer
                  object is usually a Metadata object generated by &lt;code&gt;mibgen&lt;/code&gt;.
                  &lt;/p&gt;
                  &lt;p&gt;&lt;b&gt;&lt;i&gt;
                  This class is used internally by mibgen generated metadata objects and
                  you should never need to use it directly.
                  &lt;/b&gt;&lt;/i&gt;&lt;/p&gt;
                  &lt;p&gt;&lt;b&gt;This API is a Sun Microsystems internal API  and is subject
                  to change without notice.&lt;/b&gt;&lt;/p&gt;                
            </javadoc>
            <declaration name="server" type="MBeanServer" line="84"/>
            <javadoc line="84">
                The MBean server through which the MBeans will be accessed.                
            </javadoc>
            <javadoc line="95">
                Builds a new SnmpGenericObjectServer. Usually there will be a single
                  object of this type per MIB.                
                <param>
                    server The MBeanServer in which the MBean accessed by this
                      MIB are registered.                    
                </param>
            </javadoc>
            <method name="SnmpGenericObjectServer" type="constructor" line="102">
                <params>
                    <param name="server" type="MBeanServer"/>
                </params>
            </method>
            <javadoc line="106">
                Execute an SNMP GET request.
                  &lt;p&gt;
                  This method first builds the list of attributes that need to be
                  retrieved from the MBean and then calls getAttributes() on the
                  MBean server. Then it updates the SnmpMibSubRequest with the values
                  retrieved from the MBean.
                  &lt;/p&gt;
                  &lt;p&gt;
                  The SNMP metadata information is obtained through the given
                  &lt;code&gt;meta&lt;/code&gt; object, which usually is an instance of a
                  &lt;code&gt;mibgen&lt;/code&gt; generated class.
                  &lt;/p&gt;
                  &lt;p&gt;&lt;b&gt;&lt;i&gt;
                  This method is called internally by &lt;code&gt;mibgen&lt;/code&gt; generated
                  objects and you should never need to call it directly.
                  &lt;/i&gt;&lt;/b&gt;&lt;/p&gt;                
                <param>
                    meta  The metadata object impacted by the subrequest                    
                </param>
                <param>
                    name  The ObjectName of the MBean impacted by this subrequest                    
                </param>
                <param>
                    req   The SNMP subrequest to execute on the MBean                    
                </param>
                <param>
                    depth The depth of the SNMP object in the OID tree.                    
                </param>
                <exception>
                    SnmpStatusException whenever an SNMP exception must be
                      raised. Raising an exception will abort the request.<br>
                      Exceptions should never be raised directly, but only by means of
                      <code>
                      req.registerGetException(<i>VariableId</i>,<i>SnmpStatusException</i>)
                      </code>                    
                </exception>
            </javadoc>
            <method name="get" type="void" line="141">
                <params>
                    <param name="meta" type="SnmpGenericMetaServer"/>
                    <param name="name" type="ObjectName"/>
                    <param name="req" type="SnmpMibSubRequest"/>
                    <param name="depth" type="int"/>
                </params>
                <comment line="143">
                    java.lang.System.out.println(&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; GET &quot; + name);                    
                </comment>
                <comment line="160">
                    Check the access rights according to the MIB.                    
                </comment>
                <comment line="161">
                    The MBean might be less restrictive (have a getter                    
                </comment>
                <comment line="162">
                    while the MIB defines the variable as AFN)                    
                </comment>
                <comment line="163">
                                        
                </comment>
                <comment line="166">
                    java.lang.System.out.println(nameList[i] + &quot; added.&quot;);                    
                </comment>
                <comment line="169">
                    java.lang.System.out.println(&quot;exception for &quot; + nameList[i]);                    
                </comment>
                <comment line="170">
                    x.printStackTrace();                    
                </comment>
                <comment line="181">
                    java.lang.System.out.println(name + &quot;: instance not found.&quot;);                    
                </comment>
                <comment line="182">
                    f.printStackTrace();                    
                </comment>
                <comment line="185">
                    java.lang.System.out.println(name + &quot;: reflexion error.&quot;);                    
                </comment>
                <comment line="186">
                    r.printStackTrace();                    
                </comment>
                <comment line="197">
                    java.lang.System.out.println(name + &quot;variable[&quot; + j +                    
                </comment>
                <comment line="198">
                    &quot;] absent&quot;);                    
                </comment>
                <comment line="208">
                    java.lang.System.out.println(name + &quot;variable[&quot; +j +                    
                </comment>
                <comment line="209">
                    &quot;] not found&quot;);                    
                </comment>
                <comment line="224">
                    java.lang.System.out.println(att.getName() + &quot; retrieved.&quot;);                    
                </comment>
                <comment line="226">
                    java.lang.System.out.println(&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; END GET&quot;);                    
                </comment>
                <declaration name="size" type="int" line="145"/>
                <declaration name="data" type="Object" line="146"/>
                <declaration name="nameList" type="String[]" line="147"/>
                <declaration name="varList" type="SnmpVarBind[]" line="148"/>
                <declaration name="idList" type="long[]" line="149"/>
                <declaration name="i" type="int" line="150"/>
                <scope line="152">
                    <declaration name="var" type="SnmpVarBind" line="153"/>
                    <scope line="154">
                        <declaration name="id" type="long" line="155"/>
                    </scope>
                    <scope line="168"/>
                </scope>
                <declaration name="result" type="AttributeList" line="175"/>
                <declaration name="errorCode" type="int" line="176"/>
                <scope line="178"/>
                <scope line="180"/>
                <scope line="184"/>
                <scope line="188"/>
                <declaration name="it" type="Iterator" line="193"/>
                <scope line="195">
                    <scope line="196">
                        <declaration name="x" type="SnmpStatusException" line="199"/>
                    </scope>
                    <declaration name="att" type="Attribute" line="205"/>
                    <scope line="207">
                        <declaration name="x" type="SnmpStatusException" line="210"/>
                    </scope>
                    <scope line="218"/>
                    <scope line="221"/>
                </scope>
            </method>
            <javadoc line="229">
                Get the value of an SNMP variable.
                  &lt;p&gt;&lt;b&gt;&lt;i&gt;
                  You should never need to use this method directly.
                  &lt;/i&gt;&lt;/b&gt;&lt;/p&gt;                
                <param>
                    meta  The impacted metadata object                    
                </param>
                <param>
                    name  The ObjectName of the impacted MBean                    
                </param>
                <param>
                    id    The OID arc identifying the variable we're trying to set.                    
                </param>
                <param>
                    data  User contextual data allocated through the{@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}                    
                </param>
                <return>
                    The value of the variable.                    
                </return>
                <exception>
                    SnmpStatusException whenever an SNMP exception must be
                      raised. Raising an exception will abort the request. <br>
                      Exceptions should never be raised directly, but only by means of
                      <code>
                      req.registerGetException(<i>VariableId</i>,<i>SnmpStatusException</i>)
                      </code>                    
                </exception>
            </javadoc>
            <method name="get" type="SnmpValue" line="253">
                <params>
                    <param name="meta" type="SnmpGenericMetaServer"/>
                    <param name="name" type="ObjectName"/>
                    <param name="id" type="long"/>
                    <param name="data" type="Object"/>
                </params>
                <declaration name="attname" type="String" line="254"/>
                <declaration name="result" type="Object" line="255"/>
                <scope line="257"/>
                <scope line="259">
                    <declaration name="t" type="Exception" line="260"/>
                </scope>
                <scope line="264"/>
            </method>
            <javadoc line="271">
                Execute an SNMP SET request.
                  &lt;p&gt;
                  This method first builds the list of attributes that need to be
                  set on the MBean and then calls setAttributes() on the
                  MBean server. Then it updates the SnmpMibSubRequest with the new
                  values retrieved from the MBean.
                  &lt;/p&gt;
                  &lt;p&gt;
                  The SNMP metadata information is obtained through the given
                  &lt;code&gt;meta&lt;/code&gt; object, which usually is an instance of a
                  &lt;code&gt;mibgen&lt;/code&gt; generated class.
                  &lt;/p&gt;
                  &lt;p&gt;&lt;b&gt;&lt;i&gt;
                  This method is called internally by &lt;code&gt;mibgen&lt;/code&gt; generated
                  objects and you should never need to call it directly.
                  &lt;/i&gt;&lt;/b&gt;&lt;/p&gt;                
                <param>
                    meta  The metadata object impacted by the subrequest                    
                </param>
                <param>
                    name  The ObjectName of the MBean impacted by this subrequest                    
                </param>
                <param>
                    req   The SNMP subrequest to execute on the MBean                    
                </param>
                <param>
                    depth The depth of the SNMP object in the OID tree.                    
                </param>
                <exception>
                    SnmpStatusException whenever an SNMP exception must be
                      raised. Raising an exception will abort the request. <br>
                      Exceptions should never be raised directly, but only by means of
                      <code>
                      req.registerGetException(<i>VariableId</i>,<i>SnmpStatusException</i>)
                      </code>                    
                </exception>
            </javadoc>
            <method name="set" type="void" line="306">
                <params>
                    <param name="meta" type="SnmpGenericMetaServer"/>
                    <param name="name" type="ObjectName"/>
                    <param name="req" type="SnmpMibSubRequest"/>
                    <param name="depth" type="int"/>
                </params>
                <declaration name="size" type="int" line="308"/>
                <declaration name="attList" type="AttributeList" line="309"/>
                <declaration name="nameList" type="String[]" line="310"/>
                <declaration name="varList" type="SnmpVarBind[]" line="311"/>
                <declaration name="idList" type="long[]" line="312"/>
                <declaration name="i" type="int" line="313"/>
                <scope line="315">
                    <declaration name="var" type="SnmpVarBind" line="316"/>
                    <scope line="317">
                        <declaration name="id" type="long" line="318"/>
                        <declaration name="attname" type="String" line="319"/>
                        <declaration name="attvalue" type="Object" line="320"/>
                        <declaration name="att" type="Attribute" line="322"/>
                    </scope>
                    <scope line="328"/>
                </scope>
                <declaration name="result" type="AttributeList" line="333"/>
                <declaration name="errorCode" type="int" line="334"/>
                <scope line="336"/>
                <scope line="338"/>
                <scope line="341"/>
                <scope line="344"/>
                <declaration name="it" type="Iterator" line="348"/>
                <scope line="350">
                    <scope line="351">
                        <declaration name="x" type="SnmpStatusException" line="352"/>
                    </scope>
                    <declaration name="att" type="Attribute" line="358"/>
                    <scope line="360">
                        <declaration name="x" type="SnmpStatusException" line="361"/>
                    </scope>
                    <scope line="369"/>
                    <scope line="372"/>
                </scope>
            </method>
            <javadoc line="379">
                Set the value of an SNMP variable.
                  &lt;p&gt;&lt;b&gt;&lt;i&gt;
                  You should never need to use this method directly.
                  &lt;/i&gt;&lt;/b&gt;&lt;/p&gt;                
                <param>
                    meta  The impacted metadata object                    
                </param>
                <param>
                    name  The ObjectName of the impacted MBean                    
                </param>
                <param>
                    x     The new requested SnmpValue                    
                </param>
                <param>
                    id    The OID arc identifying the variable we're trying to set.                    
                </param>
                <param>
                    data  User contextual data allocated through the{@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}                    
                </param>
                <return>
                    The new value of the variable after the operation.                    
                </return>
                <exception>
                    SnmpStatusException whenever an SNMP exception must be
                      raised. Raising an exception will abort the request. <br>
                      Exceptions should never be raised directly, but only by means of
                      <code>
                      req.registerSetException(<i>VariableId</i>,<i>SnmpStatusException</i>)
                      </code>                    
                </exception>
            </javadoc>
            <method name="set" type="SnmpValue" line="404">
                <params>
                    <param name="meta" type="SnmpGenericMetaServer"/>
                    <param name="name" type="ObjectName"/>
                    <param name="x" type="SnmpValue"/>
                    <param name="id" type="long"/>
                    <param name="data" type="Object"/>
                </params>
                <declaration name="attname" type="String" line="405"/>
                <declaration name="attvalue" type="Object" line="406"/>
                <declaration name="att" type="Attribute" line="408"/>
                <declaration name="result" type="Object" line="410"/>
                <scope line="412"/>
                <scope line="415"/>
                <scope line="418"/>
                <scope line="421"/>
                <scope line="424">
                    <declaration name="t" type="Exception" line="425"/>
                </scope>
                <scope line="430"/>
            </method>
            <javadoc line="438">
                Checks whether an SNMP SET request can be successfully performed.
                  &lt;p&gt;
                  For each variable in the subrequest, this method calls
                  checkSetAccess() on the meta object, and then tries to invoke the
                  check&lt;i&gt;AttributeName&lt;/i&gt;() method on the MBean. If this method
                  is not defined then it is assumed that the SET won&apos;t fail.
                  &lt;/p&gt;
                  &lt;p&gt;&lt;b&gt;&lt;i&gt;
                  This method is called internally by &lt;code&gt;mibgen&lt;/code&gt; generated
                  objects and you should never need to call it directly.
                  &lt;/i&gt;&lt;/b&gt;&lt;/p&gt;                
                <param>
                    meta  The metadata object impacted by the subrequest                    
                </param>
                <param>
                    name  The ObjectName of the MBean impacted by this subrequest                    
                </param>
                <param>
                    req   The SNMP subrequest to execute on the MBean                    
                </param>
                <param>
                    depth The depth of the SNMP object in the OID tree.                    
                </param>
                <exception>
                    SnmpStatusException if the requested SET operation must
                      be rejected. Raising an exception will abort the request. <br>
                      Exceptions should never be raised directly, but only by means of
                      <code>
                      req.registerCheckException(<i>VariableId</i>,<i>SnmpStatusException</i>)
                      </code>                    
                </exception>
            </javadoc>
            <method name="check" type="void" line="468">
                <params>
                    <param name="meta" type="SnmpGenericMetaServer"/>
                    <param name="name" type="ObjectName"/>
                    <param name="req" type="SnmpMibSubRequest"/>
                    <param name="depth" type="int"/>
                </params>
                <comment line="476">
                    call meta.check() here, and meta.check will call check()                    
                </comment>
                <declaration name="data" type="Object" line="470"/>
                <scope line="472">
                    <declaration name="var" type="SnmpVarBind" line="473"/>
                    <scope line="474">
                        <declaration name="id" type="long" line="475"/>
                    </scope>
                    <scope line="478"/>
                </scope>
            </method>
            <javadoc line="484">
                Checks whether a SET operation can be performed on a given SNMP
                  variable.                
                <param>
                    meta  The impacted metadata object                    
                </param>
                <param>
                    name  The ObjectName of the impacted MBean                    
                </param>
                <param>
                    x     The new requested SnmpValue                    
                </param>
                <param>
                    id    The OID arc identifying the variable we're trying to set.                    
                </param>
                <param>
                    data  User contextual data allocated through the{@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}<p>
                      This method calls checkSetAccess() on the meta object, and then
                      tries to invoke the check<i>AttributeName</i>() method on the MBean.
                      If this method is not defined then it is assumed that the SET
                      won't fail.
                      </p>
                      <p><b><i>
                      This method is called internally by <code>mibgen</code> generated
                      objects and you should never need to call it directly.
                      </i></b></p>                    
                </param>
                <exception>
                    SnmpStatusException if the requested SET operation must
                      be rejected. Raising an exception will abort the request. <br>
                      Exceptions should never be raised directly, but only by means of
                      <code>
                      req.registerCheckException(<i>VariableId</i>,<i>SnmpStatusException</i>)
                      </code>                    
                </exception>
            </javadoc>
            <method name="check" type="void" line="518">
                <params>
                    <param name="meta" type="SnmpGenericMetaServer"/>
                    <param name="name" type="ObjectName"/>
                    <param name="x" type="SnmpValue"/>
                    <param name="id" type="long"/>
                    <param name="data" type="Object"/>
                </params>
                <comment line="515">
                    XXX xxx ZZZ zzz Maybe we should go through the MBeanInfo here?                    
                </comment>
                <comment line="538">
                    checkXXXX() not defined =&gt; do nothing                    
                </comment>
                <scope line="521">
                    <declaration name="attname" type="String" line="522"/>
                    <declaration name="attvalue" type="Object" line="523"/>
                    <declaration name="params" type="Object[]" line="524"/>
                    <declaration name="signature" type="String[]" line="525"/>
                </scope>
                <scope line="531"/>
                <scope line="534"/>
                <scope line="537"/>
                <scope line="539">
                    <declaration name="t" type="Exception" line="540"/>
                </scope>
                <scope line="544"/>
            </method>
            <method name="registerTableEntry" type="void" line="552">
                <params>
                    <param name="meta" type="SnmpMibTable"/>
                    <param name="rowOid" type="SnmpOid"/>
                    <param name="objname" type="ObjectName"/>
                    <param name="entry" type="Object"/>
                </params>
                <scope line="556"/>
                <scope line="559"/>
                <scope line="562"/>
                <scope line="564"/>
                <scope line="566"/>
                <scope line="568"/>
            </method>
        </class>
    </source>