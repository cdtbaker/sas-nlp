<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp.internal">
        <import package="com.sun.jmx.snmp.mpm.SnmpMsgTranslator"/>
        <import package="com.sun.jmx.snmp.SnmpTooBigException"/>
        <import package="com.sun.jmx.snmp.SnmpStatusException"/>
        <import package="com.sun.jmx.snmp.SnmpPdu"/>
        <import package="com.sun.jmx.snmp.SnmpPduFactory"/>
        <import package="com.sun.jmx.snmp.SnmpSecurityParameters"/>
        <import package="com.sun.jmx.snmp.SnmpParams"/>
        <interface name="SnmpMsgProcessingModel">
            <implements interface="SnmpModel"/>
            <javadoc line="9">
                The message processing model interface. Any message processing model must implement this interface in order to be integrated in the engine framework.
                  The model is called by the dispatcher when a call is received or when a call is sent.
                  &lt;p&gt;&lt;b&gt;This API is a Sun Microsystems internal API  and is subject
                  to change without notice.&lt;/b&gt;&lt;/p&gt;                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="getOutgoingRequest" type="SnmpOutgoingRequest" line="17"/>
            <javadoc line="17">
                This method is called when a call is to be sent to the network.                
                <param>
                    factory The pdu factory to use to encode and decode pdu.                    
                </param>
                <return>
                    The object that will handle every steps of the sending (mainly marshalling and security).                    
                </return>
            </javadoc>
            <method name="getIncomingRequest" type="SnmpIncomingRequest" line="23"/>
            <javadoc line="23">
                This method is called when a call is received from the network.                
                <param>
                    factory The pdu factory to use to encode and decode pdu.                    
                </param>
                <return>
                    The object that will handle every steps of the receiving (mainly unmarshalling and security).                    
                </return>
            </javadoc>
            <method name="getIncomingResponse" type="SnmpIncomingResponse" line="29"/>
            <javadoc line="29">
                This method is called when a response is received from the network.                
                <param>
                    factory The pdu factory to use to encode and decode pdu.                    
                </param>
                <return>
                    The object that will handle every steps of the receiving (mainly unmarshalling and security).                    
                </return>
            </javadoc>
            <method name="getRequestPdu" type="SnmpPdu" line="35"/>
            <javadoc line="35">
                This method is called to instantiate a pdu according to the passed pdu type and parameters.                
                <param>
                    p The request parameters.                    
                </param>
                <param>
                    type The pdu type.                    
                </param>
                <return>
                    The pdu.                    
                </return>
            </javadoc>
            <method name="encode" type="int" line="42"/>
            <javadoc line="42">
                This method is called to encode a full scoped pdu that has not been encrypted. &lt;CODE&gt;contextName&lt;/CODE&gt;, &lt;CODE&gt;contextEngineID&lt;/CODE&gt; and data are known.
                  &lt;BR&gt;The specified parameters are defined in RFC 2572 (see also the {@link com.sun.jmx.snmp.SnmpV3Message} class).                
                <param>
                    version The SNMP protocol version.                    
                </param>
                <param>
                    msgID The SNMP message ID.                    
                </param>
                <param>
                    msgMaxSize The max message size.                    
                </param>
                <param>
                    msgFlags The message flags.                    
                </param>
                <param>
                    msgSecurityModel The message security model.                    
                </param>
                <param>
                    params The security parameters.                    
                </param>
                <param>
                    contextEngineID The context engine ID.                    
                </param>
                <param>
                    contextName The context name.                    
                </param>
                <param>
                    data The encoded data.                    
                </param>
                <param>
                    dataLength The encoded data length.                    
                </param>
                <param>
                    outputBytes The buffer containing the encoded message.                    
                </param>
                <return>
                    The encoded bytes number.                    
                </return>
            </javadoc>
            <method name="encodePriv" type="int" line="59"/>
            <javadoc line="59">
                This method is called to encode a full scoped pdu that as been encrypted. &lt;CODE&gt;contextName&lt;/CODE&gt;, &lt;CODE&gt;contextEngineID&lt;/CODE&gt; and data are known.
                  &lt;BR&gt;The specified parameters are defined in RFC 2572 (see also the {@link com.sun.jmx.snmp.SnmpV3Message} class).                
                <param>
                    version The SNMP protocol version.                    
                </param>
                <param>
                    msgID The SNMP message ID.                    
                </param>
                <param>
                    msgMaxSize The max message size.                    
                </param>
                <param>
                    msgFlags The message flags.                    
                </param>
                <param>
                    msgSecurityModel The message security model.                    
                </param>
                <param>
                    params The security parameters.                    
                </param>
                <param>
                    encryptedPdu The encrypted pdu.                    
                </param>
                <param>
                    outputBytes The buffer containing the encoded message.                    
                </param>
                <return>
                    The encoded bytes number.                    
                </return>
            </javadoc>
            <method name="decode" type="SnmpDecryptedPdu" line="73"/>
            <javadoc line="73">
                This method returns a decoded scoped pdu. This method decodes only the &lt;CODE&gt;contextEngineID&lt;/CODE&gt;, &lt;CODE&gt;contextName&lt;/CODE&gt; and data. It is needed by the &lt;CODE&gt;SnmpSecurityModel&lt;/CODE&gt; after decryption.                
                <param>
                    pdu The encoded pdu.                    
                </param>
                <return>
                    The partialy scoped pdu.                    
                </return>
            </javadoc>
            <method name="encode" type="int" line="79"/>
            <javadoc line="79">
                This method returns an encoded scoped pdu. This method encode only the &lt;CODE&gt;contextEngineID&lt;/CODE&gt;, &lt;CODE&gt;contextName&lt;/CODE&gt; and data. It is needed by the &lt;CODE&gt;SnmpSecurityModel&lt;/CODE&gt; for decryption.                
                <param>
                    pdu The pdu to encode.                    
                </param>
                <param>
                    outputBytes The partialy scoped pdu.                    
                </param>
                <return>
                    The encoded bytes number.                    
                </return>
            </javadoc>
            <method name="setMsgTranslator" type="void" line="86"/>
            <javadoc line="86">
                In order to change the behavior of the translator, set it.                
                <param>
                    translator The translator that will be used.                    
                </param>
            </javadoc>
            <method name="getMsgTranslator" type="SnmpMsgTranslator" line="91"/>
            <javadoc line="91">
                Returns the current translator.                
                <return>
                    The current translator.                    
                </return>
            </javadoc>
        </interface>
    </source>