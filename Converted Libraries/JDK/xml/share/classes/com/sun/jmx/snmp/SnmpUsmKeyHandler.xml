<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.snmp">
        <interface name="SnmpUsmKeyHandler">
            <javadoc line="2">
                This interface allows you to compute key localization and delta generation. It is useful when adding user in USM MIB. An instance of &lt;CODE&gt; SnmpUsmKeyHandler &lt;/CODE&gt; is associated to each &lt;CODE&gt; SnmpEngine &lt;/CODE&gt; object.
                  When computing key, an authentication algorithm is needed. The supported ones are : usmHMACMD5AuthProtocol and usmHMACSHAAuthProtocol.
                  &lt;p&gt;&lt;b&gt;This API is a Sun Microsystems internal API  and is subject
                  to change without notice.&lt;/b&gt;&lt;/p&gt;                
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="DES_KEY_SIZE" type="int" line="10"/>
            <javadoc line="10">
                DES privacy algorithm key size. To be used when localizing privacy key                
            </javadoc>
            <declaration name="DES_DELTA_SIZE" type="int" line="14"/>
            <javadoc line="14">
                DES privacy algorithm delta size. To be used when calculing privacy key delta.                
            </javadoc>
            <method name="password_to_key" type="byte[]" line="18"/>
            <javadoc line="18">
                Translate a password to a key. It MUST be compliant to RFC 2574 description.                
                <param>
                    algoName The authentication algorithm to use.                    
                </param>
                <param>
                    password Password to convert.                    
                </param>
                <return>
                    The key.                    
                </return>
                <exception>
                    IllegalArgumentException If the algorithm is unknown.                    
                </exception>
            </javadoc>
            <method name="localizeAuthKey" type="byte[]" line="26"/>
            <javadoc line="26">
                Localize the passed key using the passed &lt;CODE&gt;SnmpEngineId&lt;/CODE&gt;. It MUST be compliant to RFC 2574 description.                
                <param>
                    algoName The authentication algorithm to use.                    
                </param>
                <param>
                    key The key to localize;                    
                </param>
                <param>
                    engineId The Id used to localize the key.                    
                </param>
                <return>
                    The localized key.                    
                </return>
                <exception>
                    IllegalArgumentException If the algorithm is unknown.                    
                </exception>
            </javadoc>
            <method name="localizePrivKey" type="byte[]" line="35"/>
            <javadoc line="35">
                Localize the passed privacy key using the passed &lt;CODE&gt;SnmpEngineId&lt;/CODE&gt;. It MUST be compliant to RFC 2574 description.                
                <param>
                    algoName The authentication algorithm to use.                    
                </param>
                <param>
                    key The key to localize;                    
                </param>
                <param>
                    engineId The Id used to localize the key.                    
                </param>
                <param>
                    keysize The privacy algorithm key size.                    
                </param>
                <return>
                    The localized key.                    
                </return>
                <exception>
                    IllegalArgumentException If the algorithm is unknown.                    
                </exception>
            </javadoc>
            <method name="calculateAuthDelta" type="byte[]" line="45"/>
            <javadoc line="45">
                Calculate the delta parameter needed when processing key change. This computation is done by the key change initiator. It MUST be compliant to RFC 2574 description.                
                <param>
                    algoName The authentication algorithm to use.                    
                </param>
                <param>
                    oldKey The old key.                    
                </param>
                <param>
                    newKey The new key.                    
                </param>
                <param>
                    random The random value.                    
                </param>
                <return>
                    The delta.                    
                </return>
                <exception>
                    IllegalArgumentException If the algorithm is unknown.                    
                </exception>
            </javadoc>
            <method name="calculatePrivDelta" type="byte[]" line="55"/>
            <javadoc line="55">
                Calculate the delta parameter needed when processing key change for a privacy algorithm. This computation is done by the key change initiator. It MUST be compliant to RFC 2574 description.                
                <param>
                    algoName The authentication algorithm to use.                    
                </param>
                <param>
                    oldKey The old key.                    
                </param>
                <param>
                    newKey The new key.                    
                </param>
                <param>
                    random The random value.                    
                </param>
                <param>
                    deltaSize The algo delta size.                    
                </param>
                <return>
                    The delta.                    
                </return>
                <exception>
                    IllegalArgumentException If the algorithm is unknown.                    
                </exception>
            </javadoc>
        </interface>
    </source>