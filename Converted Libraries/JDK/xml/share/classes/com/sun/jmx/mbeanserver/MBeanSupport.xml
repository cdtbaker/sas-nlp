<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.mbeanserver">
        <import package="javax.management.Attribute"/>
        <import package="javax.management.AttributeList"/>
        <import package="javax.management.AttributeNotFoundException"/>
        <import package="javax.management.InvalidAttributeValueException"/>
        <import package="javax.management.MBeanException"/>
        <import package="javax.management.MBeanInfo"/>
        <import package="javax.management.MBeanRegistration"/>
        <import package="javax.management.MBeanServer"/>
        <import package="javax.management.NotCompliantMBeanException"/>
        <import package="javax.management.ObjectName"/>
        <import package="javax.management.ReflectionException"/>
        <import package="com.sun.jmx.mbeanserver.MXBeanMappingFactory"/>
        <class name="MBeanSupport" line="14">
            <type_params>
                <type_param name="M"/>
            </type_params>
            <implements interface="DynamicMBean2"/>
            <implements interface="MBeanRegistration"/>
            <javadoc line="14">
                Base class for MBeans.  There is one instance of this class for
                  every Standard MBean and every MXBean.  We try to limit the amount
                  of information per instance so we can handle very large numbers of
                  MBeans comfortably.                
                <param>
                    <M>
                      either Method or ConvertingMethod, for Standard MBeans
                      and MXBeans respectively.                    
                </param>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="MBeanSupport" type="constructor" line="25">
                <params>
                    <param name="resource" type="T"/>
                    <param name="mbeanInterfaceType" type="Class<T>"/>
                </params>
                <scope line="27">
                    <declaration name="msg" type="String" line="28"/>
                </scope>
                <declaration name="introspector" type="MBeanIntrospector&lt;M&gt;" line="32"/>
            </method>
            <method name="getMBeanIntrospector" type="MBeanIntrospector<M>" line="36"/>
            <javadoc line="36">
                Return the appropriate introspector for this type of MBean.                
            </javadoc>
            <method name="getCookie" type="Object" line="40"/>
            <javadoc line="40">
                Return a cookie for this MBean.  This cookie will be passed to
                  MBean method invocations where it can supply additional information
                  to the invocation.  For example, with MXBeans it can be used to
                  supply the MXBeanLookup context for resolving inter-MXBean references.                
            </javadoc>
            <method name="isMXBean" type="boolean" line="47"/>
            <method name="register" type="void" line="50"/>
            <method name="unregister" type="void" line="51"/>
            <method name="preRegister" type="ObjectName" line="52">
                <params>
                    <param name="server" type="MBeanServer"/>
                    <param name="name" type="ObjectName"/>
                </params>
            </method>
            <method name="preRegister2" type="void" line="56">
                <params>
                    <param name="server" type="MBeanServer"/>
                    <param name="name" type="ObjectName"/>
                </params>
            </method>
            <method name="registerFailed" type="void" line="59"/>
            <method name="postRegister" type="void" line="62">
                <params>
                    <param name="registrationDone" type="Boolean"/>
                </params>
            </method>
            <method name="preDeregister" type="void" line="65"/>
            <method name="postDeregister" type="void" line="68">
                <scope line="69"/>
                <scope line="72"/>
            </method>
            <method name="getAttribute" type="Object" line="76">
                <params>
                    <param name="attribute" type="String"/>
                </params>
            </method>
            <method name="getAttributes" type="AttributeList" line="79">
                <params>
                    <param name="attributes" type="String[]"/>
                </params>
                <declaration name="result" type="AttributeList" line="80"/>
                <scope line="81">
                    <scope line="82">
                        <declaration name="attrValue" type="Object" line="83"/>
                    </scope>
                    <scope line="86"/>
                </scope>
            </method>
            <method name="setAttribute" type="void" line="91">
                <params>
                    <param name="attribute" type="Attribute"/>
                </params>
                <declaration name="name" type="String" line="92"/>
                <declaration name="value" type="Object" line="93"/>
            </method>
            <method name="setAttributes" type="AttributeList" line="96">
                <params>
                    <param name="attributes" type="AttributeList"/>
                </params>
                <declaration name="result" type="AttributeList" line="97"/>
                <scope line="98">
                    <declaration name="attr" type="Attribute" line="99"/>
                    <scope line="100"/>
                    <scope line="104"/>
                </scope>
            </method>
            <method name="invoke" type="Object" line="109">
                <params>
                    <param name="operation" type="String"/>
                    <param name="params" type="Object[]"/>
                    <param name="signature" type="String[]"/>
                </params>
            </method>
            <method name="getMBeanInfo" type="MBeanInfo" line="112"/>
            <method name="getClassName" type="String" line="115"/>
            <method name="getResource" type="Object" line="118"/>
            <method name="getMBeanInterface" type="Class<?>" line="121"/>
            <declaration name="mbeanInfo" type="MBeanInfo" line="124"/>
            <declaration name="resource" type="Object" line="125"/>
            <declaration name="perInterface" type="PerInterface&lt;M&gt;" line="126"/>
        </class>
    </source>