<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jmx.mbeanserver">
        <import package="com.sun.jmx.mbeanserver.Util"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.Set"/>
        <import package="javax.management.InstanceAlreadyExistsException"/>
        <import package="javax.management.JMX"/>
        <import package="javax.management.MBeanServer"/>
        <import package="javax.management.NotCompliantMBeanException"/>
        <import package="javax.management.ObjectName"/>
        <class name="MXBeanSupport" line="10">
            <extends class="MBeanSupport">
                <type_params>
                    <type_param name="ConvertingMethod"/>
                </type_params>
            </extends>
            <javadoc line="10">
                Base class for MXBeans.                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <javadoc line="15">
                &lt;p&gt;Construct an MXBean that wraps the given resource using the
                  given MXBean interface.&lt;/p&gt;                
                <param>
                    resource the underlying resource for the new MXBean.                    
                </param>
                <param>
                    mxbeanInterface the interface to be used to determine
                      the MXBean's management interface.                    
                </param>
                <param>
                    <T>
                      a type parameter that allows the compiler to check
                      that {@code resource} implements {@code mxbeanInterface},
                      provided that {@code mxbeanInterface} is a class constant like{@code SomeMXBean.class}.                    
                </param>
                <throws>
                    IllegalArgumentException if {@code resource} is null or
                      if it does not implement the class {@code mxbeanInterface} or if
                      that class is not a valid MXBean interface.                    
                </throws>
            </javadoc>
            <method name="MXBeanSupport" type="constructor" line="29">
                <params>
                    <param name="resource" type="T"/>
                    <param name="mxbeanInterface" type="Class<T>"/>
                </params>
            </method>
            <method name="getMBeanIntrospector" type="MBeanIntrospector<ConvertingMethod>" line="32"/>
            <method name="getCookie" type="Object" line="35"/>
            <method name="findMXBeanInterface" type="Class<? super T>" line="38">
                <params>
                    <param name="resourceClass" type="Class<T>"/>
                </params>
                <declaration name="intfs" type="Set&lt;Class&lt;?&gt;&gt;" line="40"/>
                <declaration name="candidates" type="Set&lt;Class&lt;?&gt;&gt;" line="41"/>
                <scope line="42"/>
                <scope line="45">
                    <scope line="46">
                        <scope line="47">
                            <declaration name="intf2" type="Class&lt;?&gt;" line="48"/>
                            <scope line="49"/>
                        </scope>
                    </scope>
                    <declaration name="msg" type="String" line="55"/>
                </scope>
                <scope line="58"/>
                <scope line="61">
                    <declaration name="msg" type="String" line="62"/>
                </scope>
            </method>
            <method name="transitiveInterfaces" type="Set<Class<?>>" line="66">
                <params>
                    <param name="c" type="Class<?>"/>
                </params>
                <declaration name="set" type="Set&lt;Class&lt;?&gt;&gt;" line="67"/>
            </method>
            <method name="transitiveInterfaces" type="void" line="71">
                <params>
                    <param name="c" type="Class<?>"/>
                    <param name="intfs" type="Set<Class<?>>"/>
                </params>
            </method>
            <method name="register" type="void" line="77">
                <params>
                    <param name="server" type="MBeanServer"/>
                    <param name="name" type="ObjectName"/>
                </params>
                <scope line="79"/>
            </method>
            <method name="unregister" type="void" line="85">
                <scope line="86">
                    <scope line="87"/>
                </scope>
            </method>
            <declaration name="lock" type="Object" line="92"/>
            <declaration name="mxbeanLookup" type="MXBeanLookup" line="93"/>
            <declaration name="objectName" type="ObjectName" line="94"/>
        </class>
    </source>