<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jndi.ldap">
        <import package="javax.naming"/>
        <import package="javax.naming.directory"/>
        <import package="javax.naming.spi"/>
        <import package="com.sun.jndi.toolkit.ctx.Continuation"/>
        <import package="java.util.NoSuchElementException"/>
        <import package="java.util.Vector"/>
        <import package="javax.naming.ldap.LdapName"/>
        <class name="LdapNamingEnumeration" line="37">
            <comment line="48">
                used to fill in exceptions                
            </comment>
            <comment line="58">
                Record the next set of entries andor referrals.                
            </comment>
            <comment line="125">
                Retrieve the next set of entries andor referrals.                
            </comment>
            <comment line="173">
                assume we have something to start with                
            </comment>
            <comment line="176">
                Test if unprocessed entries or referrals exist.                
            </comment>
            <comment line="194">
                Retrieve the next entry.                
            </comment>
            <comment line="206">
                Test if unprocessed entries or referrals exist.                
            </comment>
            <comment line="250">
                Retrieve the next entry.                
            </comment>
            <comment line="317">
                Append the supplied (chain of) referrals onto the
                 end of the current (chain of) referrals.                
            </comment>
            <comment line="340">
                Iterate through the URLs of a referral. If successful then perform
                 a search operation and merge the received results with the current
                 results.                
            </comment>
            <comment line="393">
                Merge the entries andor referrals from the supplied enumeration
                 with those of the current enumeration.                
            </comment>
            <implements interface="NamingEnumeration"/>
            <implements interface="ReferralEnumeration"/>
            <javadoc line="37">
                Basic enumeration for NameClassPair, Binding, and SearchResults.                
            </javadoc>
            <declaration name="listArg" type="Name" line="42"/>
            <declaration name="cleaned" type="boolean" line="44"/>
            <declaration name="res" type="LdapResult" line="45"/>
            <declaration name="enumClnt" type="LdapClient" line="46"/>
            <declaration name="cont" type="Continuation" line="47"/>
            <declaration name="entries" type="Vector" line="48"/>
            <declaration name="limit" type="int" line="49"/>
            <declaration name="posn" type="int" line="50"/>
            <declaration name="homeCtx" type="LdapCtx" line="51"/>
            <declaration name="refEx" type="LdapReferralException" line="52"/>
            <declaration name="errEx" type="NamingException" line="53"/>
            <declaration name="defaultClassName" type="String" line="55"/>
            <method name="LdapNamingEnumeration" type="constructor" line="61">
                <params>
                    <param name="homeCtx" type="LdapCtx"/>
                    <param name="answer" type="LdapResult"/>
                    <param name="listArg" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="64">
                    These checks are to accommodate referrals and limit exceptions
                     which will generate an enumeration and defer the exception
                     to be thrown at the end of the enumeration.
                     All other exceptions are thrown immediately.
                     Exceptions shouldn&apos;t be thrown here anyhow because
                     process_return_code() is called before the constructor
                     is called, so these are just safety checks.                    
                </comment>
                <comment line="79">
                    %%% need to deal with referral                    
                </comment>
                <comment line="87">
                    otherwise continue                    
                </comment>
                <comment line="91">
                    handle empty set                    
                </comment>
                <comment line="99">
                    Ensures that context won&apos;t get closed from underneath us                    
                </comment>
                <comment line="102">
                    remember                    
                </comment>
                <scope line="76">
                    <declaration name="e" type="NamingException" line="79"/>
                </scope>
                <scope line="94"/>
            </method>
            <method name="nextElement" type="Object" line="104">
                <comment line="109">
                    can&apos;t throw exception                    
                </comment>
                <scope line="105"/>
                <scope line="107"/>
            </method>
            <method name="hasMoreElements" type="boolean" line="114">
                <comment line="119">
                    can&apos;t throw exception                    
                </comment>
                <scope line="115"/>
                <scope line="117"/>
            </method>
            <method name="getNextBatch" type="void" line="127">
                <comment line="137">
                    handle empty set                    
                </comment>
                <comment line="138">
                    reset                    
                </comment>
                <comment line="140">
                    mimimize the number of calls to processReturnCode()
                     (expensive when batchSize is small and there are many results)                    
                </comment>
                <comment line="147">
                    convert referrals into a chain of LdapReferralException                    
                </comment>
                <comment line="158">
                    merge any newly received referrals with any current referrals                    
                </comment>
                <comment line="165">
                    reset                    
                </comment>
                <scope line="130"/>
                <scope line="143">
                    <scope line="145"/>
                    <scope line="149"/>
                    <scope line="152"/>
                </scope>
                <scope line="158">
                    <scope line="159"/>
                    <scope line="161"/>
                </scope>
                <scope line="167"/>
            </method>
            <declaration name="more" type="boolean" line="172"/>
            <declaration name="hasMoreCalled" type="boolean" line="173"/>
            <method name="hasMore" type="boolean" line="178">
                <scope line="180"/>
                <scope line="186"/>
                <scope line="188"/>
            </method>
            <method name="next" type="Object" line="196">
                <scope line="198"/>
            </method>
            <method name="hasMoreImpl" type="boolean" line="208">
                <comment line="210">
                    when page size is supported, this
                     might generate an exception while attempting
                     to fetch the next batch to determine
                     whether there are any more elements                    
                </comment>
                <comment line="215">
                    test if the current set of entries has been processed                    
                </comment>
                <comment line="220">
                    test if any unprocessed entries exist                    
                </comment>
                <comment line="226">
                    try to process another referral                    
                </comment>
                <scope line="215"/>
                <scope line="220"/>
                <scope line="222">
                    <scope line="224"/>
                    <scope line="228"/>
                    <scope line="232"/>
                    <scope line="236"/>
                    <scope line="240">
                        <declaration name="pre" type="PartialResultException" line="242"/>
                    </scope>
                </scope>
            </method>
            <method name="nextImpl" type="Object" line="252">
                <scope line="253"/>
                <scope line="255"/>
            </method>
            <method name="nextAux" type="Object" line="261">
                <comment line="264">
                    updates posn and limit                    
                </comment>
                <comment line="274">
                    gets and outputs DN from the entry                    
                </comment>
                <scope line="262"/>
                <scope line="266"/>
                <declaration name="result" type="LdapEntry" line="271"/>
            </method>
            <method name="getAtom" type="String" line="277">
                <params>
                    <param name="dn" type="String"/>
                </params>
                <comment line="280">
                    need to strip off all but lowest component of dn
                     so that is relative to current context (currentDN)                    
                </comment>
                <declaration name="atom" type="String" line="278"/>
                <scope line="281">
                    <declaration name="parsed" type="Name" line="282"/>
                </scope>
                <scope line="284"/>
            </method>
            <method name="createItem" type="NameClassPair" line="290">
                <params>
                    <param name="dn" type="String"/>
                    <param name="attrs" type="Attributes"/>
                    <param name="respCtls" type="Vector"/>
                </params>
                <comment line="296">
                    use the Java classname if present                    
                </comment>
                <declaration name="attr" type="Attribute" line="292"/>
                <declaration name="className" type="String" line="293"/>
                <scope line="296"/>
                <scope line="298"/>
                <declaration name="cn" type="CompositeName" line="301"/>
                <declaration name="ncp" type="NameClassPair" line="304"/>
                <scope line="305"/>
                <scope line="309"/>
            </method>
            <method name="appendUnprocessedReferrals" type="void" line="320">
                <params>
                    <param name="ex" type="LdapReferralException"/>
                </params>
                <scope line="322"/>
                <scope line="324"/>
            </method>
            <method name="setNamingException" type="void" line="329">
                <params>
                    <param name="e" type="NamingException"/>
                </params>
            </method>
            <method name="getReferredResults" type="LdapNamingEnumeration" line="334">
                <params>
                    <param name="refCtx" type="LdapReferralContext"/>
                </params>
                <comment line="336">
                    repeat the original operation at the new context                    
                </comment>
            </method>
            <method name="hasMoreReferrals" type="boolean" line="344">
                <comment line="355">
                    process the referrals sequentially                    
                </comment>
                <comment line="369">
                    record a previous exception                    
                </comment>
                <comment line="377">
                    Make sure we close referral context                    
                </comment>
                <scope line="348">
                    <scope line="350"/>
                    <scope line="355">
                        <declaration name="refCtx" type="LdapReferralContext" line="357"/>
                        <scope line="361"/>
                        <scope line="366">
                            <scope line="369"/>
                        </scope>
                        <scope line="375"/>
                    </scope>
                </scope>
                <scope line="382">
                    <scope line="385"/>
                </scope>
            </method>
            <method name="update" type="void" line="396">
                <params>
                    <param name="ne" type="LdapNamingEnumeration"/>
                </params>
                <comment line="398">
                    Cleanup previous context first                    
                </comment>
                <comment line="401">
                    New enum will have already incremented enum count and recorded clnt                    
                </comment>
                <comment line="405">
                    Do this to prevent referral enumeration (ne) from decrementing
                     enum count because we&apos;ll be doing that here from this
                     enumeration.                    
                </comment>
                <comment line="410">
                    Record rest of information from new enum                    
                </comment>
            </method>
            <method name="finalize" type="void" line="418"/>
            <method name="cleanup" type="void" line="422">
                <comment line="424">
                    been there; done that                    
                </comment>
                <scope line="425"/>
                <scope line="431"/>
            </method>
            <method name="close" type="void" line="437"/>
        </class>
    </source>