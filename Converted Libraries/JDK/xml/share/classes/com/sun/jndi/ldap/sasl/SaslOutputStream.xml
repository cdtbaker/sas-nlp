<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jndi.ldap.sasl">
        <import package="javax.security.sasl.Sasl"/>
        <import package="javax.security.sasl.SaslClient"/>
        <import package="javax.security.sasl.SaslException"/>
        <import package="java.io.IOException"/>
        <import package="java.io.FilterOutputStream"/>
        <import package="java.io.OutputStream"/>
        <class name="SaslOutputStream" line="8">
            <extends class="FilterOutputStream"/>
            <declaration name="debug" type="boolean" line="9"/>
            <declaration name="lenBuf" type="byte[]" line="10"/>
            <declaration name="rawSendSize" type="int" line="11"/>
            <declaration name="sc" type="SaslClient" line="12"/>
            <method name="SaslOutputStream" type="constructor" line="13">
                <params>
                    <param name="sc" type="SaslClient"/>
                    <param name="out" type="OutputStream"/>
                </params>
                <scope line="16"/>
                <declaration name="str" type="String" line="19"/>
                <scope line="20">
                    <scope line="21"/>
                    <scope line="24"/>
                </scope>
            </method>
            <method name="write" type="void" line="29">
                <params>
                    <param name="b" type="int"/>
                </params>
                <declaration name="buffer" type="byte[]" line="30"/>
            </method>
            <javadoc line="34">
                Override this method to &quot;wrap&quot; the outgoing buffer before
                  writing it to the underlying output stream.                
            </javadoc>
            <method name="write" type="void" line="38">
                <params>
                    <param name="buffer" type="byte[]"/>
                    <param name="offset" type="int"/>
                    <param name="total" type="int"/>
                </params>
                <declaration name="count" type="int" line="39"/>
                <declaration name="wrappedToken" type="byte[]" line="40"/>
                <scope line="41"/>
                <scope line="44">
                    <scope line="48"/>
                </scope>
            </method>
            <method name="close" type="void" line="55">
                <declaration name="save" type="SaslException" line="56"/>
                <scope line="57"/>
                <scope line="60"/>
                <scope line="64"/>
            </method>
            <javadoc line="68">
                Encodes an integer into 4 bytes in network byte order in the buffer
                  supplied.                
            </javadoc>
            <method name="intToNetworkByteOrder" type="void" line="72">
                <params>
                    <param name="num" type="int"/>
                    <param name="buf" type="byte[]"/>
                    <param name="start" type="int"/>
                    <param name="count" type="int"/>
                </params>
                <scope line="73"/>
                <scope line="76"/>
            </method>
        </class>
    </source>