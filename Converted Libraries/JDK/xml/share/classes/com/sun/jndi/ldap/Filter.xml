<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jndi.ldap">
        <import package="javax.naming.NamingException"/>
        <import package="javax.naming.directory.InvalidSearchFilterException"/>
        <import package="java.io.IOException"/>
        <class name="Filter" line="5">
            <javadoc line="5">
                LDAP (RFC-1960) and LDAPv3 (RFC-2254) search filters.                
                <author>
                    Xuelei Fan                    
                </author>
                <author>
                    Vincent Ryan                    
                </author>
                <author>
                    Jagane Sundar                    
                </author>
                <author>
                    Rosanna Lee                    
                </author>
            </javadoc>
            <javadoc line="13">
                First convert filter string into byte[].
                  For LDAP v3, the conversion uses Unicode -&gt; UTF8
                  For LDAP v2, the conversion uses Unicode -&gt; ISO 8859 (Latin-1)
                  Then parse the byte[] as a filter, converting \hh to
                  a single byte, and encoding the resulting filter
                  into the supplied BER buffer                
            </javadoc>
            <method name="encodeFilterString" type="void" line="21">
                <params>
                    <param name="ber" type="BerEncoder"/>
                    <param name="filterStr" type="String"/>
                    <param name="isLdapv3" type="boolean"/>
                </params>
                <scope line="22"/>
                <declaration name="filter" type="byte[]" line="25"/>
                <declaration name="filterLen" type="int" line="26"/>
                <scope line="27"/>
                <scope line="30"/>
                <scope line="34"/>
            </method>
            <method name="encodeFilter" type="void" line="42">
                <params>
                    <param name="ber" type="BerEncoder"/>
                    <param name="filter" type="byte[]"/>
                    <param name="filterStart" type="int"/>
                    <param name="filterEnd" type="int"/>
                </params>
                <scope line="43"/>
                <scope line="47"/>
                <declaration name="nextOffset" type="int" line="50"/>
                <declaration name="parens" type="int" line="51"/>
                <declaration name="escape" type="boolean" line="52"/>
                <declaration name="filtOffset" type="int" line="54"/>
                <scope line="55">
                    <scope line="77">
                        <scope line="78"/>
                    </scope>
                    <scope line="106"/>
                </scope>
                <scope line="110"/>
                <scope line="113"/>
            </method>
            <javadoc line="117">
                convert character &apos;c&apos; that represents a hexadecimal digit to an integer.
                  if &apos;c&apos; is not a hexidecimal digit [0-9A-Fa-f], -1 is returned.
                  otherwise the converted value is returned.                
            </javadoc>
            <method name="hexchar2int" type="int" line="122">
                <params>
                    <param name="c" type="byte"/>
                </params>
                <scope line="123"/>
                <scope line="126"/>
                <scope line="129"/>
            </method>
            <method name="unescapeFilterValue" type="byte[]" line="134">
                <params>
                    <param name="orig" type="byte[]"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <declaration name="escape" type="boolean" line="135"/>
                <declaration name="ival" type="int" line="136"/>
                <declaration name="ch" type="byte" line="137"/>
                <scope line="138"/>
                <declaration name="len" type="int" line="141"/>
                <declaration name="tbuf" type="byte" line="142"/>
                <declaration name="j" type="int" line="143"/>
                <scope line="144">
                    <scope line="146">
                        <scope line="147">
                            <scope line="148"/>
                            <scope line="152"/>
                        </scope>
                        <scope line="156">
                            <scope line="157"/>
                            <scope line="161"/>
                        </scope>
                    </scope>
                    <scope line="167"/>
                    <scope line="171"/>
                </scope>
                <declaration name="answer" type="byte[]" line="175"/>
                <scope line="177"/>
            </method>
            <method name="indexOf" type="int" line="182">
                <params>
                    <param name="str" type="byte[]"/>
                    <param name="ch" type="char"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <scope line="183"/>
            </method>
            <method name="indexOf" type="int" line="188">
                <params>
                    <param name="str" type="byte[]"/>
                    <param name="target" type="String"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <declaration name="where" type="int" line="189"/>
                <scope line="190">
                    <scope line="191">
                        <scope line="192"/>
                    </scope>
                </scope>
            </method>
            <method name="findUnescaped" type="int" line="199">
                <params>
                    <param name="str" type="byte[]"/>
                    <param name="ch" type="char"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <scope line="200">
                    <declaration name="where" type="int" line="201"/>
                    <declaration name="backSlashPos" type="int" line="202"/>
                    <declaration name="backSlashCnt" type="int" line="203"/>
                </scope>
            </method>
            <method name="encodeSimpleFilter" type="void" line="210">
                <params>
                    <param name="ber" type="BerEncoder"/>
                    <param name="filter" type="byte[]"/>
                    <param name="filtStart" type="int"/>
                    <param name="filtEnd" type="int"/>
                </params>
                <scope line="211"/>
                <declaration name="type" type="String" line="215"/>
                <declaration name="valueStart" type="int" line="216"/>
                <declaration name="eq" type="int" line="217"/>
                <scope line="218"/>
                <declaration name="ftype" type="int" line="224"/>
                <scope line="247"/>
                <declaration name="optionsStart" type="int" line="251"/>
                <declaration name="extensibleStart" type="int" line="252"/>
                <scope line="253">
                    <declaration name="isNumericOid" type="boolean" line="254"/>
                    <scope line="255">
                        <scope line="256">
                            <scope line="257"/>
                        </scope>
                        <scope line="263">
                            <scope line="264"/>
                        </scope>
                        <scope line="270">
                            <scope line="271"/>
                        </scope>
                        <scope line="275">
                            <scope line="276"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="282"/>
                <scope line="285"/>
                <scope line="288">
                    <scope line="289">
                        <scope line="290">
                            <scope line="291"/>
                        </scope>
                        <scope line="296">
                            <scope line="297"/>
                        </scope>
                        <scope line="303"/>
                    </scope>
                </scope>
                <scope line="308">
                    <declaration name="isMatchingRule" type="boolean" line="309"/>
                    <scope line="310">
                        <scope line="311"/>
                        <scope line="314">
                            <declaration name="isNumericOid" type="boolean" line="315"/>
                            <scope line="317">
                                <scope line="318">
                                    <scope line="319"/>
                                    <scope line="322"/>
                                </scope>
                                <scope line="328">
                                    <scope line="329"/>
                                </scope>
                                <scope line="333">
                                    <scope line="334"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="340"/>
                    </scope>
                </scope>
                <scope line="345"/>
                <scope line="348">
                    <scope line="349"/>
                    <scope line="352"/>
                    <scope line="355"/>
                </scope>
                <scope line="360"/>
                <scope line="363"/>
                <scope line="366"/>
                <scope line="372"/>
            </method>
            <method name="encodeSubstringFilter" type="void" line="376">
                <params>
                    <param name="ber" type="BerEncoder"/>
                    <param name="filter" type="byte[]"/>
                    <param name="typeStart" type="int"/>
                    <param name="typeEnd" type="int"/>
                    <param name="valueStart" type="int"/>
                    <param name="valueEnd" type="int"/>
                </params>
                <scope line="377"/>
                <declaration name="index" type="int" line="385"/>
                <declaration name="previndex" type="int" line="386"/>
                <scope line="387">
                    <scope line="388">
                        <scope line="389"/>
                    </scope>
                    <scope line="394">
                        <scope line="395"/>
                    </scope>
                </scope>
                <scope line="402"/>
                <scope line="408"/>
            </method>
            <method name="encodeComplexFilter" type="void" line="412">
                <params>
                    <param name="ber" type="BerEncoder"/>
                    <param name="filter" type="byte[]"/>
                    <param name="filterType" type="int"/>
                    <param name="filtOffset" type="int"/>
                    <param name="filtEnd" type="int"/>
                </params>
                <scope line="413"/>
                <declaration name="parens" type="int[]" line="420"/>
                <scope line="423"/>
            </method>
            <method name="findRightParen" type="int[]" line="427">
                <params>
                    <param name="filter" type="byte[]"/>
                    <param name="filtOffset" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <declaration name="balance" type="int" line="428"/>
                <declaration name="escape" type="boolean" line="429"/>
                <declaration name="nextOffset" type="int" line="430"/>
                <scope line="431">
                    <scope line="432"/>
                </scope>
                <scope line="440"/>
                <declaration name="tmp" type="int[]" line="443"/>
            </method>
            <method name="encodeFilterList" type="void" line="447">
                <params>
                    <param name="ber" type="BerEncoder"/>
                    <param name="filter" type="byte[]"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <scope line="448"/>
                <declaration name="filtOffset" type="int" line="452"/>
                <scope line="453">
                    <scope line="455"/>
                    <declaration name="parens" type="int[]" line="458"/>
                    <declaration name="len" type="int" line="459"/>
                    <declaration name="newfilter" type="byte[]" line="460"/>
                </scope>
                <scope line="466"/>
            </method>
            <method name="encodeExtensibleMatch" type="void" line="470">
                <params>
                    <param name="ber" type="BerEncoder"/>
                    <param name="filter" type="byte[]"/>
                    <param name="matchStart" type="int"/>
                    <param name="matchEnd" type="int"/>
                    <param name="valueStart" type="int"/>
                    <param name="valueEnd" type="int"/>
                </params>
                <declaration name="matchDN" type="boolean" line="471"/>
                <declaration name="colon" type="int" line="472"/>
                <declaration name="colon2" type="int" line="473"/>
                <declaration name="i" type="int" line="474"/>
                <scope line="476">
                    <scope line="477"/>
                    <scope line="480">
                        <scope line="481"/>
                        <scope line="484"/>
                        <scope line="487"/>
                    </scope>
                    <scope line="491"/>
                </scope>
                <scope line="495"/>
            </method>
            <declaration name="dbg" type="boolean" line="502"/>
            <declaration name="dbgIndent" type="int" line="503"/>
            <method name="dprint" type="void" line="504">
                <params>
                    <param name="msg" type="String"/>
                </params>
            </method>
            <method name="dprint" type="void" line="507">
                <params>
                    <param name="msg" type="String"/>
                    <param name="str" type="byte[]"/>
                </params>
            </method>
            <method name="dprint" type="void" line="510">
                <params>
                    <param name="msg" type="String"/>
                    <param name="str" type="byte[]"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <declaration name="dstr" type="String" line="511"/>
                <declaration name="i" type="int" line="512"/>
                <scope line="513"/>
                <scope line="518"/>
            </method>
            <declaration name="LDAP_FILTER_AND" type="int" line="523"/>
            <declaration name="LDAP_FILTER_OR" type="int" line="524"/>
            <declaration name="LDAP_FILTER_NOT" type="int" line="525"/>
            <declaration name="LDAP_FILTER_EQUALITY" type="int" line="526"/>
            <declaration name="LDAP_FILTER_SUBSTRINGS" type="int" line="527"/>
            <declaration name="LDAP_FILTER_GE" type="int" line="528"/>
            <declaration name="LDAP_FILTER_LE" type="int" line="529"/>
            <declaration name="LDAP_FILTER_PRESENT" type="int" line="530"/>
            <declaration name="LDAP_FILTER_APPROX" type="int" line="531"/>
            <declaration name="LDAP_FILTER_EXT" type="int" line="532"/>
            <declaration name="LDAP_FILTER_EXT_RULE" type="int" line="533"/>
            <declaration name="LDAP_FILTER_EXT_TYPE" type="int" line="534"/>
            <declaration name="LDAP_FILTER_EXT_VAL" type="int" line="535"/>
            <declaration name="LDAP_FILTER_EXT_DN" type="int" line="536"/>
            <declaration name="LDAP_SUBSTRING_INITIAL" type="int" line="537"/>
            <declaration name="LDAP_SUBSTRING_ANY" type="int" line="538"/>
            <declaration name="LDAP_SUBSTRING_FINAL" type="int" line="539"/>
        </class>
    </source>