<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jndi.cosnaming">
        <import package="javax.naming"/>
        <import package="javax.naming.directory"/>
        <import package="javax.naming.spi"/>
        <import package="org.omg.CosNaming"/>
        <import package="org.omg.CosNaming.NamingContextPackage"/>
        <import package="org.omg.CORBA"/>
        <class name="ExceptionMapper" line="36">
            <comment line="43">
                ensure no instance                
            </comment>
            <javadoc line="36">
                A convenience class to map the COS Naming exceptions to the JNDI exceptions.                
                <author>
                    Raj Krishnamurthy                    
                </author>
            </javadoc>
            <method name="ExceptionMapper" type="constructor" line="42"/>
            <declaration name="debug" type="boolean" line="43"/>
            <method name="mapException" type="NamingException" line="46">
                <params>
                    <param name="e" type="Exception"/>
                    <param name="ctx" type="CNCtx"/>
                    <param name="inputName" type="NameComponent[]"/>
                </params>
                <comment line="70">
                    %%% We assume that rest returns *all* unprocessed components.                    
                </comment>
                <comment line="71">
                    Don&apos;t&apos; know if that is a good assumption, given                    
                </comment>
                <comment line="72">
                    NotFound doesn&apos;t set rest as expected. -RL                    
                </comment>
                <comment line="77">
                    Wrap resolved NamingContext inside a CNCtx                    
                </comment>
                <comment line="78">
                    Guess that its name (which is relative to ctx)                    
                </comment>
                <comment line="79">
                    is the part of inputName minus rest_of_name                    
                </comment>
                <scope line="47"/>
                <scope line="51"/>
                <declaration name="ne" type="NamingException" line="55"/>
                <scope line="56">
                    <scope line="57"/>
                    <scope line="60"/>
                </scope>
                <scope line="64">
                    <declaration name="nc" type="NamingContext" line="67"/>
                    <declaration name="rest" type="NameComponent[]" line="68"/>
                    <scope line="73">
                        <declaration name="resolvedName" type="NameComponent[]" line="74"/>
                    </scope>
                    <scope line="83"/>
                </scope>
                <scope line="89"/>
                <scope line="91"/>
                <scope line="93"/>
                <scope line="95"/>
            </method>
            <method name="tryFed" type="NamingException" line="104">
                <params>
                    <param name="e" type="NotFound"/>
                    <param name="ctx" type="CNCtx"/>
                    <param name="inputName" type="NameComponent[]"/>
                </params>
                <comment line="112">
                    %%% Using 1.2 &amp; 1.3 Sun&apos;s tnameserv, &apos;rest&apos; contains only the first                    
                </comment>
                <comment line="113">
                    component that failed, not *rest* as advertized. This is useless                    
                </comment>
                <comment line="114">
                    because what if you have something like aa/aa/aa/aa/aa.                    
                </comment>
                <comment line="115">
                    If one of those is not found, you get &quot;aa&quot; as &apos;rest&apos;.                    
                </comment>
                <comment line="117">
                    Check that we&apos;re not talking to 1.2/1.3 Sun tnameserv                    
                </comment>
                <comment line="122">
                    Might be legit                    
                </comment>
                <comment line="125">
                    Due to 1.2/1.3 bug that always returns single-item &apos;rest&apos;                    
                </comment>
                <comment line="132">
                    Fixed in 1.4; perform calculations based on correct (1.4) behavior                    
                </comment>
                <comment line="134">
                    Calculate the components of the name that has been resolved                    
                </comment>
                <comment line="140">
                    First component of rest is found but not a context; keep it                    
                </comment>
                <comment line="141">
                    as part of resolved name                    
                </comment>
                <comment line="144">
                    Remove resolved component from rest                    
                </comment>
                <comment line="146">
                    No more remaining                    
                </comment>
                <comment line="163">
                    Create CPE and set common fields                    
                </comment>
                <comment line="175">
                    Lookup resolved name to get resolved object                    
                </comment>
                <comment line="180">
                    obj is a context and child is not found                    
                </comment>
                <comment line="181">
                    try getting its nns dynamically by constructing                    
                </comment>
                <comment line="182">
                    a Reference containing obj.                    
                </comment>
                <comment line="192">
                    Resolved name has trailing slash to indicate nns                    
                </comment>
                <comment line="194">
                    add trailing slash                    
                </comment>
                <comment line="202">
                    Not a context, use object factory to transform object.                    
                </comment>
                <comment line="218">
                    If a context, continue operation with context                    
                </comment>
                <comment line="222">
                    Add trailing slash                    
                </comment>
                <comment line="226">
                    Create nns reference                    
                </comment>
                <declaration name="rest" type="NameComponent[]" line="105"/>
                <scope line="107"/>
                <scope line="116">
                    <declaration name="lastIn" type="NameComponent" line="118"/>
                    <scope line="121"/>
                    <scope line="124">
                        <declaration name="ne" type="NamingException" line="126"/>
                    </scope>
                </scope>
                <declaration name="resolvedName" type="NameComponent[]" line="135"/>
                <declaration name="len" type="int" line="136"/>
                <scope line="137">
                    <scope line="139">
                        <scope line="145"/>
                        <scope line="148">
                            <declaration name="tmp" type="NameComponent[]" line="149"/>
                        </scope>
                    </scope>
                    <scope line="153"/>
                    <scope line="157"/>
                </scope>
                <declaration name="cpe" type="CannotProceedException" line="164"/>
                <scope line="166"/>
                <scope line="171"/>
                <declaration name="resolvedObj" type="java.lang.Object" line="176"/>
                <scope line="179">
                    <anonymous_class line="183">
                        <method name="getContent" type="java.lang.Object" line="184"/>
                        <declaration name="serialVersionUID" type="long" line="187"/>
                    </anonymous_class>
                    <declaration name="addr" type="RefAddr" line="183"/>
                    <declaration name="ref" type="Reference" line="190"/>
                    <declaration name="cname" type="CompositeName" line="193"/>
                </scope>
                <scope line="201">
                    <declaration name="cname" type="Name" line="204"/>
                    <declaration name="resolvedObj2" type="java.lang.Object" line="205"/>
                    <scope line="206"/>
                    <scope line="209"/>
                    <scope line="211">
                        <declaration name="ne" type="NamingException" line="212"/>
                    </scope>
                    <scope line="219"/>
                    <scope line="221">
                        <declaration name="rf2" type="java.lang.Object" line="227"/>
                        <anonymous_class line="228">
                            <method name="getContent" type="java.lang.Object" line="229"/>
                            <declaration name="serialVersionUID" type="long" line="232"/>
                        </anonymous_class>
                        <declaration name="addr" type="RefAddr" line="228"/>
                        <declaration name="ref" type="Reference" line="235"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>