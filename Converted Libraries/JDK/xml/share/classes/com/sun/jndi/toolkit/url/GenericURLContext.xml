<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jndi.toolkit.url">
        <import package="javax.naming"/>
        <import package="javax.naming.spi.ResolveResult"/>
        <import package="javax.naming.spi.NamingManager"/>
        <import package="java.util.Hashtable"/>
        <import package="java.net.MalformedURLException"/>
        <class name="GenericURLContext" line="7">
            <implements interface="Context"/>
            <javadoc line="7">
                This abstract class is a generic URL context that accepts as the
                  name argument either a string URL or a Name whose first component
                  is a URL. It resolves the URL to a target context and then continues
                  the operation using the remaining name in the target context as if
                  the first component names a junction.
                  A subclass must define getRootURLContext()
                  to process the URL into head/tail pieces. If it wants to control how
                  URL strings are parsed and compared for the rename() operation, then
                  it should override getNonRootURLSuffixes() and urlEquals().                
                <author>
                    Scott Seligman                    
                </author>
                <author>
                    Rosanna Lee                    
                </author>
            </javadoc>
            <declaration name="myEnv" type="Hashtable" line="21"/>
            <method name="GenericURLContext" type="constructor" line="22">
                <params>
                    <param name="env" type="Hashtable"/>
                </params>
            </method>
            <method name="close" type="void" line="25"/>
            <method name="getNameInNamespace" type="String" line="28"/>
            <method name="getRootURLContext" type="ResolveResult" line="31"/>
            <javadoc line="31">
                Resolves &apos;name&apos; into a target context with remaining name.
                  For example, with a JNDI URL &quot;jndi://dnsname/rest_name&quot;,
                  this method resolves &quot;jndi://dnsname/&quot; to a target context,
                  and returns the target context with &quot;rest_name&quot;.
                  The definition of &quot;root URL&quot; and how much of the URL to
                  consume is implementation specific.
                  If rename() is supported for a particular URL scheme,
                  getRootURLContext(), getURLPrefix(), and getURLSuffix()
                  must be in sync wrt how URLs are parsed and returned.                
            </javadoc>
            <javadoc line="43">
                Returns the suffix of the url. The result should be identical to
                  that of calling getRootURLContext().getRemainingName(), but
                  without the overhead of doing anything with the prefix like
                  creating a context.
                  &lt;p&gt;
                  This method returns a Name instead of a String because to give
                  the provider an opportunity to return a Name (for example,
                  for weakly separated naming systems like COS naming).
                  &lt;p&gt;
                  The default implementation uses skips &apos;prefix&apos;, calls
                  UrlUtil.decode() on it, and returns the result as a single component
                  CompositeName.
                  Subclass should override if this is not appropriate.
                  This method is used only by rename().
                  If rename() is supported for a particular URL scheme,
                  getRootURLContext(), getURLPrefix(), and getURLSuffix()
                  must be in sync wrt how URLs are parsed and returned.
                  &lt;p&gt;
                  For many URL schemes, this method is very similar to URL.getFile(),
                  except getFile() will return a leading slash in the
                  2nd, 3rd, and 4th cases. For schemes like &quot;ldap&quot; and &quot;iiop&quot;,
                  the leading slash must be skipped before the name is an acceptable
                  format for operation by the Context methods. For schemes that treat the
                  leading slash as significant (such as &quot;file&quot;),
                  the subclass must override getURLSuffix() to get the correct behavior.
                  Remember, the behavior must match getRootURLContext().
                  URL                                     Suffix
                  foo://host:port                         &lt;empty string&gt;
                  foo://host:port/rest/of/name            rest/of/name
                  foo:///rest/of/name                     rest/of/name
                  foo:/rest/of/name                       rest/of/name
                  foo:rest/of/name                        rest/of/name                
            </javadoc>
            <method name="getURLSuffix" type="Name" line="77">
                <params>
                    <param name="prefix" type="String"/>
                    <param name="url" type="String"/>
                </params>
                <declaration name="suffix" type="String" line="78"/>
                <scope line="79"/>
                <scope line="82"/>
                <scope line="85"/>
                <scope line="88"/>
            </method>
            <javadoc line="92">
                Finds the prefix of a URL.
                  Default implementation looks for slashes and then extracts
                  prefixes using String.substring().
                  Subclass should override if this is not appropriate.
                  This method is used only by rename().
                  If rename() is supported for a particular URL scheme,
                  getRootURLContext(), getURLPrefix(), and getURLSuffix()
                  must be in sync wrt how URLs are parsed and returned.
                  &lt;p&gt;
                  URL                                     Prefix
                  foo://host:port                         foo://host:port
                  foo://host:port/rest/of/name            foo://host:port
                  foo:///rest/of/name                     foo://
                  foo:/rest/of/name                       foo:
                  foo:rest/of/name                        foo:                
            </javadoc>
            <method name="getURLPrefix" type="String" line="109">
                <params>
                    <param name="url" type="String"/>
                </params>
                <declaration name="start" type="int" line="110"/>
                <scope line="111"/>
                <scope line="115">
                    <declaration name="posn" type="int" line="117"/>
                    <scope line="118"/>
                    <scope line="121"/>
                </scope>
            </method>
            <javadoc line="127">
                Determines whether two URLs are the same.
                  Default implementation uses String.equals().
                  Subclass should override if this is not appropriate.
                  This method is used by rename().                
            </javadoc>
            <method name="urlEquals" type="boolean" line="133">
                <params>
                    <param name="url1" type="String"/>
                    <param name="url2" type="String"/>
                </params>
            </method>
            <javadoc line="136">
                Gets the context in which to continue the operation. This method
                  is called when this context is asked to process a multicomponent
                  Name in which the first component is a URL.
                  Treat the first component like a junction: resolve it and then use
                  NamingManager.getContinuationContext() to get the target context in
                  which to operate on the remainder of the name (n.getSuffix(1)).                
            </javadoc>
            <method name="getContinuationContext" type="Context" line="144">
                <params>
                    <param name="n" type="Name"/>
                </params>
                <declaration name="obj" type="Object" line="145"/>
                <declaration name="cpe" type="CannotProceedException" line="146"/>
            </method>
            <method name="lookup" type="Object" line="151">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="res" type="ResolveResult" line="152"/>
                <declaration name="ctx" type="Context" line="153"/>
                <scope line="154"/>
                <scope line="157"/>
            </method>
            <method name="lookup" type="Object" line="161">
                <params>
                    <param name="name" type="Name"/>
                </params>
                <scope line="162"/>
                <scope line="165">
                    <declaration name="ctx" type="Context" line="166"/>
                    <scope line="167"/>
                    <scope line="170"/>
                </scope>
            </method>
            <method name="bind" type="void" line="175">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
                <declaration name="res" type="ResolveResult" line="176"/>
                <declaration name="ctx" type="Context" line="177"/>
                <scope line="178"/>
                <scope line="181"/>
            </method>
            <method name="bind" type="void" line="185">
                <params>
                    <param name="name" type="Name"/>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="186"/>
                <scope line="189">
                    <declaration name="ctx" type="Context" line="190"/>
                    <scope line="191"/>
                    <scope line="194"/>
                </scope>
            </method>
            <method name="rebind" type="void" line="199">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                </params>
                <declaration name="res" type="ResolveResult" line="200"/>
                <declaration name="ctx" type="Context" line="201"/>
                <scope line="202"/>
                <scope line="205"/>
            </method>
            <method name="rebind" type="void" line="209">
                <params>
                    <param name="name" type="Name"/>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="210"/>
                <scope line="213">
                    <declaration name="ctx" type="Context" line="214"/>
                    <scope line="215"/>
                    <scope line="218"/>
                </scope>
            </method>
            <method name="unbind" type="void" line="223">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="res" type="ResolveResult" line="224"/>
                <declaration name="ctx" type="Context" line="225"/>
                <scope line="226"/>
                <scope line="229"/>
            </method>
            <method name="unbind" type="void" line="233">
                <params>
                    <param name="name" type="Name"/>
                </params>
                <scope line="234"/>
                <scope line="237">
                    <declaration name="ctx" type="Context" line="238"/>
                    <scope line="239"/>
                    <scope line="242"/>
                </scope>
            </method>
            <method name="rename" type="void" line="247">
                <params>
                    <param name="oldName" type="String"/>
                    <param name="newName" type="String"/>
                </params>
                <declaration name="oldPrefix" type="String" line="248"/>
                <declaration name="newPrefix" type="String" line="249"/>
                <scope line="250"/>
                <declaration name="res" type="ResolveResult" line="253"/>
                <declaration name="ctx" type="Context" line="254"/>
                <scope line="255"/>
                <scope line="258"/>
            </method>
            <method name="rename" type="void" line="262">
                <params>
                    <param name="name" type="Name"/>
                    <param name="newName" type="Name"/>
                </params>
                <scope line="263">
                    <scope line="264"/>
                </scope>
                <scope line="269">
                    <scope line="270"/>
                    <declaration name="ctx" type="Context" line="273"/>
                    <scope line="274"/>
                    <scope line="277"/>
                </scope>
            </method>
            <method name="list" type="NamingEnumeration<NameClassPair>" line="282">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="res" type="ResolveResult" line="283"/>
                <declaration name="ctx" type="Context" line="284"/>
                <scope line="285"/>
                <scope line="288"/>
            </method>
            <method name="list" type="NamingEnumeration<NameClassPair>" line="292">
                <params>
                    <param name="name" type="Name"/>
                </params>
                <scope line="293"/>
                <scope line="296">
                    <declaration name="ctx" type="Context" line="297"/>
                    <scope line="298"/>
                    <scope line="301"/>
                </scope>
            </method>
            <method name="listBindings" type="NamingEnumeration<Binding>" line="306">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="res" type="ResolveResult" line="307"/>
                <declaration name="ctx" type="Context" line="308"/>
                <scope line="309"/>
                <scope line="312"/>
            </method>
            <method name="listBindings" type="NamingEnumeration<Binding>" line="316">
                <params>
                    <param name="name" type="Name"/>
                </params>
                <scope line="317"/>
                <scope line="320">
                    <declaration name="ctx" type="Context" line="321"/>
                    <scope line="322"/>
                    <scope line="325"/>
                </scope>
            </method>
            <method name="destroySubcontext" type="void" line="330">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="res" type="ResolveResult" line="331"/>
                <declaration name="ctx" type="Context" line="332"/>
                <scope line="333"/>
                <scope line="336"/>
            </method>
            <method name="destroySubcontext" type="void" line="340">
                <params>
                    <param name="name" type="Name"/>
                </params>
                <scope line="341"/>
                <scope line="344">
                    <declaration name="ctx" type="Context" line="345"/>
                    <scope line="346"/>
                    <scope line="349"/>
                </scope>
            </method>
            <method name="createSubcontext" type="Context" line="354">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="res" type="ResolveResult" line="355"/>
                <declaration name="ctx" type="Context" line="356"/>
                <scope line="357"/>
                <scope line="360"/>
            </method>
            <method name="createSubcontext" type="Context" line="364">
                <params>
                    <param name="name" type="Name"/>
                </params>
                <scope line="365"/>
                <scope line="368">
                    <declaration name="ctx" type="Context" line="369"/>
                    <scope line="370"/>
                    <scope line="373"/>
                </scope>
            </method>
            <method name="lookupLink" type="Object" line="378">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="res" type="ResolveResult" line="379"/>
                <declaration name="ctx" type="Context" line="380"/>
                <scope line="381"/>
                <scope line="384"/>
            </method>
            <method name="lookupLink" type="Object" line="388">
                <params>
                    <param name="name" type="Name"/>
                </params>
                <scope line="389"/>
                <scope line="392">
                    <declaration name="ctx" type="Context" line="393"/>
                    <scope line="394"/>
                    <scope line="397"/>
                </scope>
            </method>
            <method name="getNameParser" type="NameParser" line="402">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="res" type="ResolveResult" line="403"/>
                <declaration name="ctx" type="Context" line="404"/>
                <scope line="405"/>
                <scope line="408"/>
            </method>
            <method name="getNameParser" type="NameParser" line="412">
                <params>
                    <param name="name" type="Name"/>
                </params>
                <scope line="413"/>
                <scope line="416">
                    <declaration name="ctx" type="Context" line="417"/>
                    <scope line="418"/>
                    <scope line="421"/>
                </scope>
            </method>
            <method name="composeName" type="String" line="426">
                <params>
                    <param name="name" type="String"/>
                    <param name="prefix" type="String"/>
                </params>
                <scope line="427"/>
                <scope line="430"/>
                <scope line="433"/>
            </method>
            <method name="composeName" type="Name" line="437">
                <params>
                    <param name="name" type="Name"/>
                    <param name="prefix" type="Name"/>
                </params>
                <declaration name="result" type="Name" line="438"/>
            </method>
            <method name="removeFromEnvironment" type="Object" line="442">
                <params>
                    <param name="propName" type="String"/>
                </params>
                <scope line="443"/>
            </method>
            <method name="addToEnvironment" type="Object" line="449">
                <params>
                    <param name="propName" type="String"/>
                    <param name="propVal" type="Object"/>
                </params>
            </method>
            <method name="getEnvironment" type="Hashtable" line="453">
                <scope line="454"/>
                <scope line="457"/>
            </method>
        </class>
    </source>