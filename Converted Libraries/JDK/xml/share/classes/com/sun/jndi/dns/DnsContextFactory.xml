<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jndi.dns">
        <import package="java.net.MalformedURLException"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Hashtable"/>
        <import package="java.util.List"/>
        <import package="javax.naming"/>
        <import package="javax.naming.spi"/>
        <import package="com.sun.jndi.toolkit.url.UrlUtil"/>
        <import package="sun.net.dns.ResolverConfiguration"/>
        <class name="DnsContextFactory" line="10">
            <implements interface="InitialContextFactory"/>
            <javadoc line="10">
                A DnsContextFactory serves as the initial context factory for DNS.
                  &lt;p&gt; When an initial context is being created, the environment
                  property &quot;java.naming.provider.url&quot; should contain a DNS pseudo-URL
                  (see DnsUrl) or a space-separated list of them.  Multiple URLs must
                  all have the same domain value.
                  If the property is not set, the default &quot;dns:&quot; is used.                
                <author>
                    Scott Seligman                    
                </author>
            </javadoc>
            <declaration name="DEFAULT_URL" type="String" line="20"/>
            <declaration name="DEFAULT_PORT" type="int" line="21"/>
            <method name="getInitialContext" type="Context" line="22">
                <params>
                    <param name="env" type="Hashtable&lt;?,?&gt;"/>
                </params>
                <scope line="23"/>
            </method>
            <method name="getContext" type="DnsContext" line="28">
                <params>
                    <param name="domain" type="String"/>
                    <param name="servers" type="String[]"/>
                    <param name="env" type="Hashtable&lt;?,?&gt;"/>
                </params>
            </method>
            <method name="getContext" type="DnsContext" line="31">
                <params>
                    <param name="domain" type="String"/>
                    <param name="urls" type="DnsUrl[]"/>
                    <param name="env" type="Hashtable"/>
                </params>
                <declaration name="servers" type="String[]" line="32"/>
                <declaration name="ctx" type="DnsContext" line="33"/>
                <scope line="34"/>
            </method>
            <method name="platformServersAvailable" type="boolean" line="39"/>
            <method name="urlToContext" type="Context" line="42">
                <params>
                    <param name="url" type="String"/>
                    <param name="env" type="Hashtable"/>
                </params>
                <declaration name="urls" type="DnsUrl[]" line="43"/>
                <scope line="44"/>
                <scope line="47"/>
                <scope line="50"/>
                <declaration name="domain" type="String" line="53"/>
                <scope line="54">
                    <scope line="55"/>
                </scope>
            </method>
            <method name="serversForUrls" type="String[]" line="61">
                <params>
                    <param name="urls" type="DnsUrl[]"/>
                </params>
                <scope line="62"/>
                <declaration name="servers" type="List&amp;lt;String&amp;gt;" line="65"/>
                <scope line="66">
                    <declaration name="server" type="String" line="67"/>
                    <declaration name="port" type="int" line="68"/>
                    <scope line="69">
                        <declaration name="platformServers" type="List&amp;lt;String&amp;gt;" line="70"/>
                        <scope line="71"/>
                    </scope>
                    <scope line="76"/>
                </scope>
            </method>
            <method name="platformServersUsed" type="boolean" line="83">
                <params>
                    <param name="urls" type="DnsUrl[]"/>
                </params>
                <scope line="84"/>
                <scope line="87">
                    <scope line="88"/>
                </scope>
            </method>
            <method name="constructProviderUrl" type="String" line="94">
                <params>
                    <param name="domain" type="String"/>
                    <param name="servers" type="String[]"/>
                </params>
                <declaration name="path" type="String" line="95"/>
                <scope line="96">
                    <scope line="97"/>
                    <scope line="100"/>
                </scope>
                <declaration name="buf" type="StringBuffer" line="103"/>
                <scope line="104">
                    <scope line="105"/>
                </scope>
            </method>
            <method name="getInitCtxUrl" type="String" line="112">
                <params>
                    <param name="env" type="Hashtable"/>
                </params>
                <declaration name="url" type="String" line="113"/>
            </method>
            <javadoc line="116">
                Removes any DNS server that&apos;s not permitted to access                
                <param>
                    input the input server[:port] list, must not be null                    
                </param>
                <param>
                    oneIsEnough return output once there exists one ok                    
                </param>
                <return>
                    the filtered list, all non-permitted input removed                    
                </return>
            </javadoc>
            <method name="filterNameServers" type="List" line="122">
                <params>
                    <param name="input" type="List"/>
                    <param name="oneIsEnough" type="boolean"/>
                </params>
                <declaration name="security" type="SecurityManager" line="123"/>
                <scope line="124"/>
                <scope line="127">
                    <declaration name="output" type="List" line="128"/>
                    <scope line="129">
                        <scope line="130">
                            <declaration name="platformServer" type="String" line="131"/>
                            <declaration name="colon" type="int" line="132"/>
                            <declaration name="p" type="int" line="133"/>
                            <declaration name="s" type="String" line="134"/>
                            <scope line="135">
                                <scope line="138"/>
                            </scope>
                            <scope line="142"/>
                        </scope>
                    </scope>
                </scope>
            </method>
        </class>
    </source>