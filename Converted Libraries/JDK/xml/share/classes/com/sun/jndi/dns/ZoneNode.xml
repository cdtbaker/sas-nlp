<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jndi.dns">
        <import package="java.lang.ref.SoftReference"/>
        <import package="java.util.Date"/>
        <import package="java.util.Vector"/>
        <class name="ZoneNode" line="5">
            <extends class="NameNode"/>
            <javadoc line="5">
                ZoneNode extends NameNode to represent a tree of the zones in the
                  DNS namespace, along with any intermediate nodes between zones.
                  A ZoneNode that represents a zone may be &quot;populated&quot; with a
                  NameNode tree containing the zone&apos;s contents.
                  &lt;p&gt; A populated zone&apos;s contents will be flagged as having expired after
                  the time specified by the minimum TTL value in the zone&apos;s SOA record.
                  &lt;p&gt; Since zone cuts aren&apos;t directly modeled by a tree of ZoneNodes,
                  ZoneNode.isZoneCut() always returns false.
                  &lt;p&gt; The synchronization strategy is documented in DnsContext.java.
                  &lt;p&gt; The zone&apos;s contents are accessed via a soft reference, so its
                  heap space may be reclaimed when necessary.  The zone may be
                  repopulated later.                
                <author>
                    Scott Seligman                    
                </author>
            </javadoc>
            <declaration name="contentsRef" type="SoftReference" line="21"/>
            <declaration name="serialNumber" type="long" line="22"/>
            <declaration name="expiration" type="Date" line="23"/>
            <method name="ZoneNode" type="constructor" line="24">
                <params>
                    <param name="label" type="String"/>
                </params>
            </method>
            <method name="newNameNode" type="NameNode" line="27">
                <params>
                    <param name="label" type="String"/>
                </params>
            </method>
            <method name="depopulate" type="void" line="30"/>
            <method name="isPopulated" type="boolean" line="34"/>
            <method name="getContents" type="NameNode" line="37"/>
            <method name="isExpired" type="boolean" line="40"/>
            <method name="getDeepestPopulated" type="ZoneNode" line="43">
                <params>
                    <param name="fqdn" type="DnsName"/>
                </params>
                <declaration name="znode" type="ZoneNode" line="44"/>
                <declaration name="popNode" type="ZoneNode" line="45"/>
                <scope line="46">
                    <scope line="48"/>
                    <scope line="51"/>
                </scope>
            </method>
            <method name="populate" type="NameNode" line="57">
                <params>
                    <param name="zone" type="DnsName"/>
                    <param name="rrs" type="ResourceRecords"/>
                </params>
                <declaration name="newContents" type="NameNode" line="58"/>
                <scope line="59">
                    <declaration name="rr" type="ResourceRecord" line="60"/>
                    <declaration name="n" type="DnsName" line="61"/>
                    <scope line="62">
                        <declaration name="nnode" type="NameNode" line="63"/>
                        <scope line="64"/>
                    </scope>
                </scope>
                <declaration name="soa" type="ResourceRecord" line="69"/>
                <scope line="70"/>
            </method>
            <method name="setExpiration" type="void" line="77">
                <params>
                    <param name="secsToExpiration" type="long"/>
                </params>
            </method>
            <method name="getMinimumTtl" type="long" line="80">
                <params>
                    <param name="soa" type="ResourceRecord"/>
                </params>
                <declaration name="rdata" type="String" line="81"/>
                <declaration name="pos" type="int" line="82"/>
            </method>
            <method name="compareSerialNumberTo" type="int" line="85">
                <params>
                    <param name="soa" type="ResourceRecord"/>
                </params>
            </method>
            <method name="getSerialNumber" type="long" line="88">
                <params>
                    <param name="soa" type="ResourceRecord"/>
                </params>
                <declaration name="rdata" type="String" line="89"/>
                <declaration name="beg" type="int" line="90"/>
                <declaration name="end" type="int" line="91"/>
                <scope line="92"/>
            </method>
        </class>
    </source>