<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jndi.ldap">
        <import package="java.util.Hashtable"/>
        <import package="java.util.Vector"/>
        <import package="java.util.Enumeration"/>
        <import package="java.net.MalformedURLException"/>
        <import package="javax.naming"/>
        <import package="javax.naming.directory"/>
        <import package="javax.naming.spi.ObjectFactory"/>
        <import package="javax.naming.spi.InitialContextFactory"/>
        <import package="javax.naming.ldap.Control"/>
        <import package="com.sun.jndi.url.ldap.ldapURLContextFactory"/>
        <class name="LdapCtxFactory" line="41">
            <comment line="48">
                ----------------- ObjectFactory interface --------------------                
            </comment>
            <comment line="61">
                ----------------- InitialContext interface  --------------------                
            </comment>
            <comment line="147">
                ------------ Utilities used by other classes ----------------                
            </comment>
            <comment line="201">
                Try each URL until one of them succeeds.
                 If all URLs fail, throw one of the exceptions arbitrarily.
                 Not pretty, but potentially more informative than returning null.                
            </comment>
            <implements interface="ObjectFactory"/>
            <implements interface="InitialContextFactory"/>
            <declaration name="ADDRESS_TYPE" type="String" line="42"/>
            <javadoc line="42">
                The type of each address in an LDAP reference.                
            </javadoc>
            <method name="getObjectInstance" type="Object" line="50">
                <params>
                    <param name="ref" type="Object"/>
                    <param name="name" type="Name"/>
                    <param name="nameCtx" type="Context"/>
                    <param name="env" type="Hashtable<?,?>"/>
                </params>
                <scope line="52"/>
                <declaration name="factory" type="ObjectFactory" line="55"/>
                <declaration name="urls" type="String[]" line="56"/>
            </method>
            <method name="getInitialContext" type="Context" line="63">
                <params>
                    <param name="envprops" type="Hashtable<?,?>"/>
                </params>
                <comment line="70">
                    If URL not in environment, use defaults                    
                </comment>
                <comment line="76">
                    Extract URL(s)                    
                </comment>
                <comment line="84">
                    Generate an LDAP context                    
                </comment>
                <scope line="65">
                    <declaration name="providerUrl" type="String" line="66"/>
                    <scope line="70"/>
                    <declaration name="urls" type="String[]" line="76"/>
                    <scope line="78"/>
                </scope>
                <scope line="86">
                    <scope line="89"/>
                    <declaration name="bindCtls" type="Control[]" line="93"/>
                </scope>
            </method>
            <javadoc line="100">
                Returns true if argument is an LDAP reference.                
            </javadoc>
            <method name="isLdapRef" type="boolean" line="103">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="105"/>
                <declaration name="thisClassName" type="String" line="108"/>
                <declaration name="ref" type="Reference" line="109"/>
            </method>
            <javadoc line="114">
                Returns the URLs contained within an LDAP reference.                
            </javadoc>
            <method name="getURLs" type="String[]" line="117">
                <params>
                    <param name="ref" type="Reference"/>
                </params>
                <comment line="120">
                    number of URLs                    
                </comment>
                <comment line="138">
                    Trim URL array down to size.                    
                </comment>
                <declaration name="size" type="int" line="119"/>
                <declaration name="urls" type="String[]" line="120"/>
                <declaration name="addrs" type="Enumeration" line="122"/>
                <scope line="123">
                    <declaration name="addr" type="RefAddr" line="124"/>
                    <scope line="127"/>
                </scope>
                <scope line="132"/>
                <scope line="138"/>
                <declaration name="urls2" type="String[]" line="141"/>
            </method>
            <method name="getLdapCtxInstance" type="DirContext" line="149">
                <params>
                    <param name="urlInfo" type="Object"/>
                    <param name="env" type="Hashtable"/>
                </params>
                <scope line="151"/>
                <scope line="153"/>
                <scope line="155"/>
            </method>
            <method name="getUsingURL" type="DirContext" line="162">
                <params>
                    <param name="url" type="String"/>
                    <param name="env" type="Hashtable"/>
                </params>
                <comment line="172">
                    handle a URL with no hostport (ldap:/// or ldaps:///)
                     locate the LDAP service using the URL&apos;s distinguished name                    
                </comment>
                <comment line="180">
                    Generate new URLs that include the discovered hostports.
                     Reuse the original URL scheme.                    
                </comment>
                <comment line="190">
                    Associate the derived domain name with the context                    
                </comment>
                <comment line="195">
                    Record the URL that created the context                    
                </comment>
                <declaration name="ctx" type="DirContext" line="163"/>
                <declaration name="ldapUrl" type="LdapURL" line="164"/>
                <declaration name="dn" type="String" line="165"/>
                <declaration name="host" type="String" line="166"/>
                <declaration name="port" type="int" line="167"/>
                <declaration name="hostports" type="String[]" line="168"/>
                <declaration name="domainName" type="String" line="169"/>
                <scope line="178">
                    <declaration name="scheme" type="String" line="181"/>
                    <declaration name="newUrls" type="String[]" line="182"/>
                    <declaration name="query" type="String" line="183"/>
                    <declaration name="urlSuffix" type="String" line="184"/>
                    <scope line="185"/>
                </scope>
                <scope line="192"/>
            </method>
            <method name="getUsingURLs" type="DirContext" line="206">
                <params>
                    <param name="urls" type="String[]"/>
                    <param name="env" type="Hashtable"/>
                </params>
                <declaration name="ne" type="NamingException" line="207"/>
                <declaration name="ctx" type="DirContext" line="208"/>
                <scope line="209">
                    <scope line="210"/>
                    <scope line="212"/>
                    <scope line="214"/>
                </scope>
            </method>
            <javadoc line="221">
                Used by Obj and obj/RemoteToAttrs too so must be public                
            </javadoc>
            <method name="createTypeNameAttr" type="Attribute" line="224">
                <params>
                    <param name="cl" type="Class"/>
                </params>
                <declaration name="v" type="Vector" line="225"/>
                <declaration name="types" type="String[]" line="226"/>
                <scope line="227">
                    <declaration name="tAttr" type="BasicAttribute" line="228"/>
                    <scope line="230"/>
                </scope>
            </method>
            <method name="getTypeNames" type="String[]" line="238">
                <params>
                    <param name="currentClass" type="Class"/>
                    <param name="v" type="Vector"/>
                </params>
                <declaration name="members" type="Class[]" line="241"/>
                <scope line="242"/>
                <declaration name="ret" type="String[]" line="245"/>
                <declaration name="i" type="int" line="246"/>
                <scope line="247"/>
            </method>
            <method name="getClassesAux" type="void" line="253">
                <params>
                    <param name="currentClass" type="Class"/>
                    <param name="v" type="Vector"/>
                </params>
                <scope line="254"/>
                <scope line="259"/>
            </method>
        </class>
    </source>