<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jndi.dns">
        <import package="java.io.IOException"/>
        <import package="java.net.DatagramSocket"/>
        <import package="java.net.DatagramPacket"/>
        <import package="java.net.InetAddress"/>
        <import package="java.net.Socket"/>
        <import package="javax.naming"/>
        <import package="java.util.Collections"/>
        <import package="java.util.Map"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Set"/>
        <import package="java.util.HashSet"/>
        <class name="DnsClient" line="13">
            <javadoc line="13">
                The DnsClient class performs DNS client operations in support of DnsContext.                
            </javadoc>
            <declaration name="IDENT_OFFSET" type="int" line="17"/>
            <declaration name="FLAGS_OFFSET" type="int" line="18"/>
            <declaration name="NUMQ_OFFSET" type="int" line="19"/>
            <declaration name="NUMANS_OFFSET" type="int" line="20"/>
            <declaration name="NUMAUTH_OFFSET" type="int" line="21"/>
            <declaration name="NUMADD_OFFSET" type="int" line="22"/>
            <declaration name="DNS_HDR_SIZE" type="int" line="23"/>
            <declaration name="NO_ERROR" type="int" line="24"/>
            <declaration name="FORMAT_ERROR" type="int" line="25"/>
            <declaration name="SERVER_FAILURE" type="int" line="26"/>
            <declaration name="NAME_ERROR" type="int" line="27"/>
            <declaration name="NOT_IMPL" type="int" line="28"/>
            <declaration name="REFUSED" type="int" line="29"/>
            <declaration name="rcodeDescription" type="String[]" line="30"/>
            <declaration name="DEFAULT_PORT" type="int" line="31"/>
            <declaration name="servers" type="InetAddress[]" line="32"/>
            <declaration name="serverPorts" type="int[]" line="33"/>
            <declaration name="timeout" type="int" line="34"/>
            <declaration name="retries" type="int" line="35"/>
            <declaration name="udpSocket" type="DatagramSocket" line="36"/>
            <declaration name="reqs" type="Set&amp;lt;Integer&amp;gt;" line="37"/>
            <declaration name="resps" type="Map&amp;lt;Integer,byte[]&amp;gt;" line="38"/>
            <method name="DnsClient" type="constructor" line="39">
                <params>
                    <param name="servers" type="String[]"/>
                    <param name="timeout" type="int"/>
                    <param name="retries" type="int"/>
                </params>
                <scope line="42"/>
                <scope line="45">
                    <declaration name="ne" type="NamingException" line="46"/>
                </scope>
                <scope line="52">
                    <declaration name="colon" type="int" line="53"/>
                    <declaration name="server" type="String" line="55"/>
                    <scope line="56"/>
                    <scope line="59">
                        <declaration name="ne" type="NamingException" line="60"/>
                    </scope>
                </scope>
            </method>
            <method name="finalize" type="void" line="68"/>
            <declaration name="queuesLock" type="Object" line="71"/>
            <method name="close" type="void" line="72">
                <scope line="74"/>
            </method>
            <declaration name="ident" type="int" line="79"/>
            <declaration name="identLock" type="Object" line="80"/>
            <method name="query" type="ResourceRecords" line="81">
                <params>
                    <param name="fqdn" type="DnsName"/>
                    <param name="qclass" type="int"/>
                    <param name="qtype" type="int"/>
                    <param name="recursion" type="boolean"/>
                    <param name="auth" type="boolean"/>
                </params>
                <declaration name="xid" type="int" line="82"/>
                <scope line="83"/>
                <declaration name="pkt" type="Packet" line="88"/>
                <declaration name="caughtException" type="Exception" line="89"/>
                <declaration name="doNotRetry" type="boolean[]" line="90"/>
                <scope line="91">
                    <scope line="92">
                        <scope line="93"/>
                        <scope line="96">
                            <scope line="97"/>
                            <declaration name="msg" type="byte[]" line="100"/>
                            <scope line="102">
                                <scope line="103"/>
                                <scope line="106"/>
                            </scope>
                            <declaration name="hdr" type="Header" line="110"/>
                            <scope line="111"/>
                            <scope line="116">
                                <scope line="117">
                                    <declaration name="ij" type="int" line="118"/>
                                    <scope line="119"/>
                                    <scope line="122">
                                        <declaration name="tcp" type="Tcp" line="123"/>
                                        <declaration name="msg2" type="byte[]" line="124"/>
                                        <scope line="125"/>
                                        <scope line="128"/>
                                        <declaration name="hdr2" type="Header" line="131"/>
                                        <scope line="132"/>
                                        <scope line="136"/>
                                        <scope line="141"/>
                                    </scope>
                                    <scope line="145"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="151">
                            <scope line="152"/>
                            <scope line="155"/>
                            <scope line="158"/>
                        </scope>
                        <scope line="162"/>
                        <scope line="165">
                            <scope line="166"/>
                        </scope>
                        <scope line="170">
                            <scope line="171"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="179"/>
                <declaration name="ne" type="NamingException" line="182"/>
            </method>
            <method name="queryZone" type="ResourceRecords" line="186">
                <params>
                    <param name="zone" type="DnsName"/>
                    <param name="qclass" type="int"/>
                    <param name="recursion" type="boolean"/>
                </params>
                <declaration name="xid" type="int" line="187"/>
                <scope line="188"/>
                <declaration name="pkt" type="Packet" line="192"/>
                <declaration name="caughtException" type="Exception" line="193"/>
                <scope line="194">
                    <scope line="195">
                        <declaration name="tcp" type="Tcp" line="196"/>
                        <declaration name="msg" type="byte[]" line="197"/>
                        <scope line="198">
                            <declaration name="hdr" type="Header" line="200"/>
                            <declaration name="rrs" type="ResourceRecords" line="202"/>
                            <scope line="203"/>
                            <scope line="206">
                                <scope line="207">
                                    <scope line="209"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="221"/>
                    </scope>
                    <scope line="225"/>
                    <scope line="228"/>
                    <scope line="231"/>
                </scope>
                <scope line="235"/>
                <declaration name="ne" type="NamingException" line="238"/>
            </method>
            <javadoc line="242">
                Tries to retreive an UDP packet matching the given xid
                  received within the timeout.
                  If a packet with different xid is received, the received packet
                  is enqueued with the corresponding xid in &apos;resps&apos;.                
            </javadoc>
            <method name="doUdpQuery" type="byte[]" line="248">
                <params>
                    <param name="pkt" type="Packet"/>
                    <param name="server" type="InetAddress"/>
                    <param name="port" type="int"/>
                    <param name="retry" type="int"/>
                    <param name="xid" type="int"/>
                </params>
                <declaration name="minTimeout" type="int" line="249"/>
                <scope line="250">
                    <declaration name="opkt" type="DatagramPacket" line="251"/>
                    <declaration name="ipkt" type="DatagramPacket" line="252"/>
                    <declaration name="pktTimeout" type="int" line="254"/>
                    <scope line="255">
                        <declaration name="timeoutLeft" type="int" line="257"/>
                        <declaration name="cnt" type="int" line="258"/>
                        <scope line="259">
                            <scope line="260"/>
                            <declaration name="start" type="long" line="265"/>
                            <declaration name="end" type="long" line="267"/>
                            <declaration name="data" type="byte[]" line="268"/>
                            <scope line="270"/>
                        </scope>
                    </scope>
                    <scope line="277"/>
                </scope>
            </method>
            <method name="doTcpQuery" type="byte[]" line="283">
                <params>
                    <param name="tcp" type="Tcp"/>
                    <param name="pkt" type="Packet"/>
                </params>
                <declaration name="len" type="int" line="284"/>
                <declaration name="msg" type="byte[]" line="289"/>
                <scope line="290"/>
            </method>
            <method name="continueTcpQuery" type="byte[]" line="295">
                <params>
                    <param name="tcp" type="Tcp"/>
                </params>
                <declaration name="lenHi" type="int" line="296"/>
                <scope line="297"/>
                <declaration name="lenLo" type="int" line="300"/>
                <scope line="301"/>
                <declaration name="len" type="int" line="304"/>
                <declaration name="msg" type="byte[]" line="305"/>
                <declaration name="pos" type="int" line="306"/>
                <scope line="307">
                    <declaration name="n" type="int" line="308"/>
                    <scope line="309"/>
                </scope>
            </method>
            <method name="makeQueryPacket" type="Packet" line="317">
                <params>
                    <param name="fqdn" type="DnsName"/>
                    <param name="xid" type="int"/>
                    <param name="qclass" type="int"/>
                    <param name="qtype" type="int"/>
                    <param name="recursion" type="boolean"/>
                </params>
                <declaration name="qnameLen" type="int" line="318"/>
                <declaration name="pktLen" type="int" line="319"/>
                <declaration name="pkt" type="Packet" line="320"/>
                <declaration name="flags" type="short" line="321"/>
            </method>
            <method name="makeQueryName" type="void" line="332">
                <params>
                    <param name="fqdn" type="DnsName"/>
                    <param name="pkt" type="Packet"/>
                    <param name="off" type="int"/>
                </params>
                <scope line="333">
                    <declaration name="label" type="String" line="334"/>
                    <declaration name="len" type="int" line="335"/>
                    <scope line="337"/>
                </scope>
                <scope line="341"/>
            </method>
            <method name="lookupResponse" type="byte[]" line="345">
                <params>
                    <param name="xid" type="Integer"/>
                </params>
                <scope line="346"/>
                <declaration name="pkt" type="byte[]" line="349"/>
                <scope line="350">
                    <scope line="352"/>
                    <scope line="356"/>
                </scope>
            </method>
            <method name="isMatchResponse" type="boolean" line="362">
                <params>
                    <param name="pkt" type="byte[]"/>
                    <param name="xid" type="int"/>
                </params>
                <declaration name="hdr" type="Header" line="363"/>
                <scope line="364"/>
                <scope line="367"/>
                <scope line="370">
                    <scope line="371"/>
                    <scope line="375"/>
                </scope>
                <scope line="381">
                    <scope line="382"/>
                </scope>
                <scope line="386"/>
            </method>
            <method name="checkResponseCode" type="void" line="391">
                <params>
                    <param name="hdr" type="Header"/>
                </params>
                <declaration name="rcode" type="int" line="392"/>
                <scope line="393"/>
                <declaration name="msg" type="String" line="396"/>
            </method>
            <declaration name="debug" type="boolean" line="411"/>
            <method name="setDebug" type="void" line="412">
                <params>
                    <param name="flag" type="boolean"/>
                </params>
            </method>
            <method name="dprint" type="void" line="415">
                <params>
                    <param name="mess" type="String"/>
                </params>
                <scope line="416"/>
            </method>
        </class>
        <class name="Tcp" line="421">
            <declaration name="sock" type="Socket" line="422"/>
            <declaration name="in" type="java.io.InputStream" line="423"/>
            <declaration name="out" type="java.io.OutputStream" line="424"/>
            <method name="Tcp" type="constructor" line="425">
                <params>
                    <param name="server" type="InetAddress"/>
                    <param name="port" type="int"/>
                </params>
            </method>
            <method name="close" type="void" line="431"/>
        </class>
        <class name="Packet" line="435">
            <declaration name="buf" type="byte" line="436"/>
            <method name="Packet" type="constructor" line="437">
                <params>
                    <param name="len" type="int"/>
                </params>
            </method>
            <method name="Packet" type="constructor" line="440">
                <params>
                    <param name="data" type="byte"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <method name="putInt" type="void" line="444">
                <params>
                    <param name="x" type="int"/>
                    <param name="off" type="int"/>
                </params>
            </method>
            <method name="putShort" type="void" line="450">
                <params>
                    <param name="x" type="int"/>
                    <param name="off" type="int"/>
                </params>
            </method>
            <method name="putByte" type="void" line="454">
                <params>
                    <param name="x" type="int"/>
                    <param name="off" type="int"/>
                </params>
            </method>
            <method name="putBytes" type="void" line="457">
                <params>
                    <param name="src" type="byte"/>
                    <param name="src_offset" type="int"/>
                    <param name="dst_offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <method name="length" type="int" line="460"/>
            <method name="getData" type="byte[]" line="463"/>
        </class>
    </source>