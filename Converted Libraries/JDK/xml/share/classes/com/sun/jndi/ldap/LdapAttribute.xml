<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jndi.ldap">
        <import package="java.io.IOException"/>
        <import package="java.io.Serializable"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.Hashtable"/>
        <import package="java.util.Vector"/>
        <import package="javax.naming"/>
        <import package="javax.naming.directory"/>
        <class name="LdapAttribute" line="9">
            <extends class="BasicAttribute"/>
            <javadoc line="9">
                This subclass is used by LDAP to implement the schema calls.
                  Basically, it keeps track of which context it is an attribute of
                  so it can get the schema for that cotnext.                
                <author>
                    Jon Ruiz                    
                </author>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="16"/>
            <declaration name="baseCtx" type="DirContext" line="17"/>
            <declaration name="rdn" type="Name" line="18"/>
            <declaration name="baseCtxURL" type="String" line="19"/>
            <declaration name="baseCtxEnv" type="Hashtable" line="20"/>
            <method name="clone" type="Object" line="21">
                <declaration name="attr" type="LdapAttribute" line="22"/>
            </method>
            <javadoc line="26">
                Adds a new value to this attribute.                
                <param>
                    attrVal The value to be added. If null, a null value is added to
                      the attribute.                    
                </param>
                <return>
                    true Always returns true.                    
                </return>
            </javadoc>
            <method name="add" type="boolean" line="32">
                <params>
                    <param name="attrVal" type="Object"/>
                </params>
            </method>
            <javadoc line="36">
                Constructs a new instance of an attribute.                
                <param>
                    id The attribute's id. It cannot be null.                    
                </param>
            </javadoc>
            <method name="LdapAttribute" type="constructor" line="40">
                <params>
                    <param name="id" type="String"/>
                </params>
            </method>
            <javadoc line="43">
                Constructs a new instance of an attribute.                
                <param>
                    id The attribute's id. It cannot be null.                    
                </param>
                <param>
                    baseCtx  the baseCtx object of this attribute                    
                </param>
                <param>
                    rdn      the RDN of the entry (relative to baseCtx)                    
                </param>
            </javadoc>
            <method name="LdapAttribute" type="constructor" line="49">
                <params>
                    <param name="id" type="String"/>
                    <param name="baseCtx" type="DirContext"/>
                    <param name="rdn" type="Name"/>
                </params>
            </method>
            <javadoc line="54">
                Sets the baseCtx and rdn used to find the attribute&apos;s schema
                  Used by LdapCtx.setParents().                
            </javadoc>
            <method name="setParent" type="void" line="58">
                <params>
                    <param name="baseCtx" type="DirContext"/>
                    <param name="rdn" type="Name"/>
                </params>
            </method>
            <javadoc line="62">
                returns the ctx this attribute came from. This call allows
                  LDAPAttribute to be serializable. &apos;baseCtx&apos; is transient so if
                  it is null, the `baseCtxURL` is used to reconstruct the context
                  to which calls are made.                
            </javadoc>
            <method name="getBaseCtx" type="DirContext" line="68">
                <scope line="69">
                    <scope line="70"/>
                </scope>
            </method>
            <javadoc line="79">
                This is called when the object is serialized. It is
                  overridden so that the appropriate class variables can be set
                  to re-construct the baseCtx when deserialized. Setting these
                  variables is costly, so it is only done if the object
                  is actually serialized.                
            </javadoc>
            <method name="writeObject" type="void" line="86">
                <params>
                    <param name="out" type="java.io.ObjectOutputStream"/>
                </params>
            </method>
            <javadoc line="90">
                sets the information needed to reconstruct the baseCtx if
                  we are serialized. This must be called _before_ the object is
                  serialized!!!                
            </javadoc>
            <method name="setBaseCtxInfo" type="void" line="95">
                <declaration name="realEnv" type="Hashtable" line="96"/>
                <declaration name="secureEnv" type="Hashtable" line="97"/>
                <scope line="98"/>
                <scope line="102">
                    <declaration name="keys" type="Enumeration" line="103"/>
                    <scope line="104">
                        <declaration name="key" type="String" line="105"/>
                        <scope line="106">
                            <scope line="107"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="116">
                Retrieves the syntax definition associated with this attribute.                
                <return>
                    This attribute's syntax definition.                    
                </return>
            </javadoc>
            <method name="getAttributeSyntaxDefinition" type="DirContext" line="120">
                <declaration name="schema" type="DirContext" line="121"/>
                <declaration name="attrDef" type="DirContext" line="122"/>
                <declaration name="syntaxAttr" type="Attribute" line="123"/>
                <scope line="124"/>
                <declaration name="syntaxName" type="String" line="127"/>
            </method>
            <javadoc line="130">
                Retrieves this attribute&apos;s schema definition.                
                <return>
                    This attribute's schema definition.                    
                </return>
            </javadoc>
            <method name="getAttributeDefinition" type="DirContext" line="134">
                <declaration name="schema" type="DirContext" line="135"/>
            </method>
        </class>
    </source>