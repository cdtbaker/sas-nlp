<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jndi.ldap.pool">
        <class name="ConnectionsRef" line="2">
            <javadoc line="2">
                Is a reference to Connections that is stored in Pool.
                  This is an intermediate object that is outside of the circular
                  reference loop of
                  com.sun.jndi.ldap.Connection &lt;-&gt; com.sun.jndi.ldap.LdapClient
                  &lt;-&gt; com.sun.jndi.ldap.pool.Connections
                  Because Connection is a daemon thread, it will keep LdapClient
                  alive until LdapClient closes Connection. This will in turn
                  keep Connections alive. So even when Connections is removed
                  from (the WeakHashMap of) Pool, it won&apos;t be finalized.
                  ConnectionsRef acts as Connections&apos;s finalizer.
                  Without connection pooling, com.sun.jndi.ldap.LdapCtx&apos;s finalize()
                  closes LdapClient, which in turn closes Connection.
                  With connection pooling, ConnectionsRef&apos;s finalize() calls
                  Connections.close(), which in turn will close all idle connections
                  and mark Connections such that in-use connections will be closed
                  when they are returned to the pool.                
            </javadoc>
            <declaration name="conns" type="Connections" line="21"/>
            <method name="ConnectionsRef" type="constructor" line="22">
                <params>
                    <param name="conns" type="Connections"/>
                </params>
            </method>
            <method name="getConnections" type="Connections" line="25"/>
        </class>
    </source>