<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jndi.ldap">
        <import package="java.net"/>
        <import package="java.io"/>
        <import package="java.util.Vector"/>
        <import package="java.util.Hashtable"/>
        <import package="javax.naming"/>
        <import package="javax.naming.directory"/>
        <import package="javax.naming.ldap"/>
        <import package="com.sun.jndi.ldap.pool.PooledConnection"/>
        <import package="com.sun.jndi.ldap.pool.PoolCallback"/>
        <import package="com.sun.jndi.ldap.sasl.LdapSasl"/>
        <import package="com.sun.jndi.ldap.sasl.SaslInputStream"/>
        <class name="LdapClient" line="42">
            <comment line="80">
                ---------------------- Constants ----------------------------------                
            </comment>
            <comment line="84">
                Default list of binary attributes                
            </comment>
            <comment line="114">
                ----------------------- instance fields ------------------------                
            </comment>
            <comment line="115">
                Used by LdapCtx                
            </comment>
            <comment line="116">
                Used by LdapCtx for check for sharing                
            </comment>
            <comment line="118">
                Connection to server; has reader thread
                 used by LdapCtx for StartTLS                
            </comment>
            <comment line="125">
                //////////////////////////////////////////////////////////////////////////
                
                 constructor: Create an authenticated connection to server                
            </comment>
            <comment line="451">
                NOTE: Should NOT be synchronized otherwise won&apos;t be able to close                
            </comment>
            <comment line="476">
                Used by connection pooling to close physical connection.                
            </comment>
            <comment line="507">
                //////////////////////////////////////////////////////////////////////////
                
                 LDAP search. also includes methods to encode rfc 1558 compliant filters                
            </comment>
            <comment line="560">
                Abandon the search operation and remove it from the message queue.                
            </comment>
            <comment line="586">
                Retrieve the next batch of entries andor referrals.                
            </comment>
            <comment line="730">
                returns number of bytes that were parsed. Adds the values to attr                
            </comment>
            <comment line="754">
                package entry point; used by Connection                
            </comment>
            <comment line="785">
                package entry point; used by Connection                
            </comment>
            <comment line="843">
                Encode LDAPv3 controls                
            </comment>
            <comment line="895">
                //////////////////////////////////////////////////////////////////////////
                
                 LDAP modify:
                  Modify the DN dn with the operations on attributes attrs.
                  ie, operations[0] is the operation to be performed on
                  attrs[0];
                          dn - DN to modify
                          operations - add, delete or replace
                          attrs - array of Attribute
                          reqCtls - array of request controls                
            </comment>
            <comment line="984">
                //////////////////////////////////////////////////////////////////////////
                
                 LDAP add
                          Adds entry to the Directory                
            </comment>
            <comment line="1032">
                //////////////////////////////////////////////////////////////////////////
                
                 LDAP delete
                          deletes entry from the Directory                
            </comment>
            <comment line="1064">
                //////////////////////////////////////////////////////////////////////////
                
                 LDAP modrdn
                  Changes the last element of DN to newrdn
                          dn - DN to change
                          newrdn - new RDN to rename to
                          deleteoldrdn - boolean whether to delete old attrs or not
                          newSuperior - new place to put the entry in the tree
                                        (ignored if server is LDAPv2)
                          reqCtls - array of request controls                
            </comment>
            <comment line="1115">
                //////////////////////////////////////////////////////////////////////////
                
                 LDAP compare
                  Compare attribute-&gt;value pairs in dn                
            </comment>
            <comment line="1160">
                //////////////////////////////////////////////////////////////////////////
                
                 LDAP extended operation                
            </comment>
            <comment line="1212">
                //////////////////////////////////////////////////////////////////////////
                
                 Some BER definitions convenient for LDAP                
            </comment>
            <comment line="1220">
                LDAPv3                
            </comment>
            <comment line="1223">
                follow referrals                
            </comment>
            <comment line="1224">
                throw referral ex.                
            </comment>
            <comment line="1225">
                ignore referrals                
            </comment>
            <comment line="1227">
                &quot;;           // LDAPv3                
            </comment>
            <comment line="1228">
                &quot;;         // LDAPv3                
            </comment>
            <comment line="1241">
                app + constructed                
            </comment>
            <comment line="1242">
                app + primitive                
            </comment>
            <comment line="1243">
                app + constructed                
            </comment>
            <comment line="1244">
                app + constructed                
            </comment>
            <comment line="1245">
                app + constructed                
            </comment>
            <comment line="1246">
                app + primitive                
            </comment>
            <comment line="1247">
                app + constructed                
            </comment>
            <comment line="1248">
                app + constructed                
            </comment>
            <comment line="1249">
                app + primitive                
            </comment>
            <comment line="1250">
                app + constructed    (LDAPv3)                
            </comment>
            <comment line="1252">
                app + constructed | 1                
            </comment>
            <comment line="1253">
                app + constructed | 4                
            </comment>
            <comment line="1255">
                app + constructed | 5                
            </comment>
            <comment line="1256">
                app + constructed | 7                
            </comment>
            <comment line="1257">
                app + constructed | 9                
            </comment>
            <comment line="1258">
                app + primitive | b                
            </comment>
            <comment line="1259">
                app + primitive | d                
            </comment>
            <comment line="1260">
                app + primitive | f                
            </comment>
            <comment line="1261">
                app + constructed    (LDAPv3)                
            </comment>
            <comment line="1263">
                ctx + constructed    (LDAPv3)                
            </comment>
            <comment line="1264">
                ctx + primitive      (LDAPv3)                
            </comment>
            <comment line="1265">
                ctx + primitive      (LDAPv3)                
            </comment>
            <comment line="1267">
                LDAPv3 Controls                
            </comment>
            <comment line="1269">
                ctx + constructed    (LDAPv3)                
            </comment>
            <comment line="1276">
                //////////////////////////////////////////////////////////////////////////
                
                 return codes                
            </comment>
            <comment line="1291">
                Slapd                
            </comment>
            <comment line="1292">
                LDAPv3                
            </comment>
            <comment line="1293">
                LDAPv3                
            </comment>
            <comment line="1294">
                LDAPv3                
            </comment>
            <comment line="1295">
                LDAPv3                
            </comment>
            <comment line="1296">
                LDAPv3                
            </comment>
            <comment line="1321">
                LDAPv3                
            </comment>
            <comment line="1419">
                Generate an error message from the LDAP error code and error diagnostic.
                 The message format is:
                
                     &quot;[LDAP: error code &lt;errorCode&gt; - &lt;errorMessage&gt;]&quot;
                
                 where &lt;errorCode&gt; is a numeric error code
                 and &lt;errorMessage&gt; is a textual description of the error (if available)                
            </comment>
            <comment line="1454">
                //////////////////////////////////////////////////////////////////////////
                
                 Unsolicited notification support.
                
                 An LdapClient maintains a list of LdapCtx that have registered
                 for UnsolicitedNotifications. This is a list because a single
                 LdapClient might be shared among multiple contexts.
                
                 When addUnsolicited() is invoked, the LdapCtx is added to the list.
                
                 When Connection receives an unsolicited notification (msgid == 0),
                 it invokes LdapClient.processUnsolicited(). processUnsolicited()
                 parses the Extended Response. If there are registered listeners,
                 LdapClient creates an UnsolicitedNotification from the response
                 and informs each LdapCtx to fire an event for the notification.
                 If it is a DISCONNECT notification, the connection is closed and a
                 NamingExceptionEvent is fired to the listeners.
                
                 When the connection is closed out-of-band like this, the next
                 time a method is invoked on LdapClient, an IOException is thrown.
                
                 removeUnsolicited() is invoked to remove an LdapCtx from this client.                
            </comment>
            <comment line="1498">
                NOTE: Cannot be synchronized because this is called asynchronously
                 by the reader thread in Connection. Instead, sync on &apos;unsolicited&apos; Vector.                
            </comment>
            <comment line="1584">
                package private (used by LdapCtx)                
            </comment>
            <implements interface="PooledConnection"/>
            <javadoc line="42">
                LDAP (RFC-1777) and LDAPv3 (RFC-2251) compliant client
                  This class represents a connection to an LDAP client.
                  Callers interact with this class at an LDAP operation level.
                  That is, the caller invokes a method to do a SEARCH or MODRDN
                  operation and gets back the result.
                  The caller uses the constructor to create a connection to the server.
                  It then needs to use authenticate() to perform an LDAP BIND.
                  Note that for v3, BIND is optional so authenticate() might not
                  actually send a BIND. authenticate() can be used later on to issue
                  a BIND, for example, for a v3 client that wants to change the connection&apos;s
                  credentials.
                  &lt;p&gt;
                  Multiple LdapCtx might share the same LdapClient. For example, contexts
                  derived from the same initial context would share the same LdapClient
                  until changes to a context&apos;s properties necessitates its own LdapClient.
                  LdapClient methods that access shared data are thread-safe (i.e., caller
                  does not have to sync).
                  &lt;p&gt;
                  Fields:
                  isLdapv3 - no sync; initialized and updated within sync authenticate();
                  always updated when connection is &quot;quiet&quot; and not shared;
                  read access from outside LdapClient not sync
                  referenceCount - sync within LdapClient; exception is forceClose() which
                  is used by Connection thread to close connection upon receiving
                  an Unsolicited Notification.
                  access from outside LdapClient must sync;
                  conn - no sync; Connection takes care of its own sync
                  unsolicited - sync Vector; multiple operations sync&apos;ed                
                <author>
                    Vincent Ryan                    
                </author>
                <author>
                    Jagane Sundar                    
                </author>
                <author>
                    Rosanna Lee                    
                </author>
            </javadoc>
            <declaration name="debug" type="int" line="80"/>
            <declaration name="caseIgnore" type="boolean" line="81"/>
            <declaration name="defaultBinaryAttrs" type="Hashtable" line="84"/>
            <scope line="85"/>
            <declaration name="DISCONNECT_OID" type="String" line="110"/>
            <declaration name="isLdapv3" type="boolean" line="114"/>
            <declaration name="referenceCount" type="int" line="115"/>
            <declaration name="conn" type="Connection" line="117"/>
            <declaration name="pcb" type="PoolCallback" line="120"/>
            <declaration name="pooled" type="boolean" line="121"/>
            <declaration name="authenticateCalled" type="boolean" line="122"/>
            <method name="LdapClient" type="constructor" line="132">
                <params>
                    <param name="host" type="String"/>
                    <param name="port" type="int"/>
                    <param name="socketFactory" type="String"/>
                    <param name="connectTimeout" type="int"/>
                    <param name="readTimeout" type="int"/>
                    <param name="trace" type="OutputStream"/>
                    <param name="pcb" type="PoolCallback"/>
                </params>
            </method>
            <method name="authenticateCalled" type="boolean" line="143"/>
            <method name="authenticate" type="LdapResult" line="150">
                <params>
                    <param name="initial" type="boolean"/>
                    <param name="name" type="String"/>
                    <param name="pw" type="Object"/>
                    <param name="version" type="int"/>
                    <param name="authMechanism" type="String"/>
                    <param name="ctls" type="Control[]"/>
                    <param name="env" type="Hashtable"/>
                </params>
                <comment line="181">
                    Perform LDAP bind if we are reauthenticating, using LDAPv2,
                     supporting failover to LDAPv2, or controls have been supplied.                    
                </comment>
                <comment line="188">
                    anonymous bind; update name/pw for LDAPv2 retry                    
                </comment>
                <comment line="202">
                    Skip LDAP bind for LDAPv3 anonymous bind                    
                </comment>
                <comment line="207">
                    simple authentication                    
                </comment>
                <comment line="222">
                    If pw was copied to a new array, clear that array as
                     a security precaution.                    
                </comment>
                <comment line="231">
                    SASL authentication                    
                </comment>
                <comment line="249">
                    re-try login using v2 if failing over                    
                </comment>
                <comment line="274">
                    If pw was copied to a new array, clear that array as
                     a security precaution.                    
                </comment>
                <comment line="284">
                    principal name not found
                     (map NameNotFoundException to AuthenticationException)
                     %%% This is a workaround for Netscape servers returning
                     %%% no such object when the principal name is not found
                     %%% Note that when this workaround is applied, it does not allow
                     %%% response controls to be recorded by the calling context                    
                </comment>
                <scope line="154"/>
                <scope line="156">
                    <declaration name="ne" type="NamingException" line="157"/>
                </scope>
                <declaration name="res" type="LdapResult" line="175"/>
                <scope line="178">
                    <scope line="185">
                        <scope line="186">
                            <scope line="190"/>
                        </scope>
                        <scope line="193">
                            <declaration name="ne" type="NamingException" line="194"/>
                        </scope>
                    </scope>
                    <scope line="200"/>
                </scope>
                <scope line="205">
                    <declaration name="encodedPw" type="byte[]" line="207"/>
                    <scope line="208">
                        <scope line="211"/>
                    </scope>
                    <scope line="214">
                        <declaration name="ne" type="NamingException" line="215"/>
                    </scope>
                    <scope line="220">
                        <scope line="223">
                            <scope line="224"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="229">
                    <scope line="231">
                        <scope line="234"/>
                    </scope>
                    <scope line="237">
                        <declaration name="ne" type="NamingException" line="238"/>
                    </scope>
                </scope>
                <scope line="244"/>
                <scope line="256">
                    <declaration name="encodedPw" type="byte[]" line="258"/>
                    <scope line="259">
                        <scope line="263"/>
                    </scope>
                    <scope line="266">
                        <declaration name="ne" type="NamingException" line="267"/>
                    </scope>
                    <scope line="272">
                        <scope line="275">
                            <scope line="276"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="289"/>
            </method>
            <javadoc line="297">
                Sends an LDAP Bind request.
                  Cannot be private; called by LdapSasl                
                <param>
                    dn The possibly null DN to use in the BIND request. null if anonymous.                    
                </param>
                <param>
                    toServer The possibly null array of bytes to send to the server.                    
                </param>
                <param>
                    auth The authentication mechanism                    
                </param>
            </javadoc>
            <method name="ldapBind" type="LdapResult" line="307">
                <params>
                    <param name="dn" type="String"/>
                    <param name="toServer" type="byte[]"/>
                    <param name="bindCtls" type="Control[]"/>
                    <param name="auth" type="String"/>
                    <param name="pauseAfterReceipt" type="boolean"/>
                </params>
                <comment line="312">
                    flush outstanding requests                    
                </comment>
                <comment line="320">
                    build the bind request.                    
                </comment>
                <comment line="329">
                    if authentication mechanism specified, it is SASL                    
                </comment>
                <comment line="332">
                    SASL mechanism                    
                </comment>
                <comment line="347">
                    Encode controls                    
                </comment>
                <comment line="355">
                    clear internally-stored password                    
                </comment>
                <comment line="358">
                    Read reply                    
                </comment>
                <comment line="361">
                    init seq                    
                </comment>
                <comment line="362">
                    msg id                    
                </comment>
                <comment line="370">
                    handle server&apos;s credentials (if present)                    
                </comment>
                <declaration name="ber" type="BerEncoder" line="314"/>
                <declaration name="curMsgId" type="int" line="315"/>
                <declaration name="res" type="LdapResult" line="316"/>
                <scope line="329">
                    <scope line="332"/>
                </scope>
                <scope line="337">
                    <scope line="338"/>
                    <scope line="340"/>
                </scope>
                <scope line="347"/>
                <declaration name="req" type="LdapRequest" line="352"/>
                <scope line="353"/>
                <declaration name="rber" type="BerDecoder" line="358"/>
                <scope line="362"/>
                <scope line="372"/>
            </method>
            <javadoc line="382">
                Determines whether SASL encryption/integrity is in progress.
                  This check is made prior to reauthentication. You cannot reauthenticate
                  over an encrypted/integrity-protected SASL channel. You must
                  close the channel and open a new one.                
            </javadoc>
            <method name="usingSaslStreams" type="boolean" line="388"/>
            <method name="incRefCount" type="void" line="392">
                <scope line="394"/>
            </method>
            <javadoc line="400">
                Returns the encoded password.                
            </javadoc>
            <method name="encodePassword" type="byte[]" line="403">
                <params>
                    <param name="pw" type="Object"/>
                    <param name="v3" type="boolean"/>
                </params>
                <scope line="405"/>
                <scope line="409">
                    <scope line="410"/>
                    <scope line="412"/>
                </scope>
                <scope line="415"/>
            </method>
            <method name="close" type="void" line="420">
                <params>
                    <param name="reqCtls" type="Control[]"/>
                    <param name="hardClose" type="boolean"/>
                </params>
                <comment line="433">
                    Not being pooled; continue with closing                    
                </comment>
                <comment line="437">
                    Pooled                    
                </comment>
                <comment line="439">
                    Is this a real close or a request to return conn to pool                    
                </comment>
                <scope line="423"/>
                <scope line="429">
                    <scope line="431"/>
                    <scope line="435">
                        <scope line="439"/>
                        <scope line="443"/>
                    </scope>
                </scope>
            </method>
            <method name="forceClose" type="void" line="451">
                <params>
                    <param name="cleanPool" type="boolean"/>
                </params>
                <comment line="453">
                    force closing of connection                    
                </comment>
                <scope line="454"/>
                <scope line="458">
                    <scope line="464"/>
                </scope>
            </method>
            <method name="finalize" type="void" line="470"/>
            <method name="closeConnection" type="void" line="478">
                <comment line="480">
                    this is a pool callback so no need to clean pool                    
                </comment>
            </method>
            <javadoc line="482">
                Called by Connection.cleanup(). LdapClient should
                  notify any unsolicited listeners and removing itself from any pool.
                  This is almost like forceClose(), except it doesn&apos;t call
                  Connection.cleanup() (because this is called from cleanup()).                
            </javadoc>
            <method name="processConnectionClosure" type="void" line="488">
                <comment line="490">
                    Notify listeners                    
                </comment>
                <comment line="501">
                    Remove from pool                    
                </comment>
                <scope line="490">
                    <declaration name="msg" type="String" line="491"/>
                    <scope line="492"/>
                    <scope line="494"/>
                </scope>
                <scope line="501"/>
            </method>
            <declaration name="SCOPE_BASE_OBJECT" type="int" line="512"/>
            <declaration name="SCOPE_ONE_LEVEL" type="int" line="513"/>
            <declaration name="SCOPE_SUBTREE" type="int" line="514"/>
            <method name="search" type="LdapResult" line="521">
                <params>
                    <param name="dn" type="String"/>
                    <param name="scope" type="int"/>
                    <param name="deref" type="int"/>
                    <param name="sizeLimit" type="int"/>
                    <param name="timeLimit" type="int"/>
                    <param name="attrsOnly" type="boolean"/>
                    <param name="attrs" type="String"/>
                    <param name="filter" type="String"/>
                    <param name="batchSize" type="int"/>
                    <param name="reqCtls" type="Control[]"/>
                    <param name="binaryAttrs" type="Hashtable"/>
                    <param name="waitFirstReply" type="boolean"/>
                    <param name="replyQueueCapacity" type="int"/>
                </params>
                <comment line="552">
                    optimistic                    
                </comment>
                <comment line="554">
                    get first reply                    
                </comment>
                <declaration name="res" type="LdapResult" line="525"/>
                <declaration name="ber" type="BerEncoder" line="527"/>
                <declaration name="curMsgId" type="int" line="528"/>
                <declaration name="req" type="LdapRequest" line="547"/>
                <scope line="552"/>
            </method>
            <method name="clearSearchReply" type="void" line="562">
                <params>
                    <param name="res" type="LdapResult"/>
                    <param name="ctls" type="Control[]"/>
                </params>
                <comment line="566">
                    Only send an LDAP abandon operation when clearing the search
                     reply from a one-level or subtree search.                    
                </comment>
                <comment line="573">
                    OK if req got removed after check; double removal attempt
                     but otherwise no harm done                    
                </comment>
                <comment line="576">
                    Send an LDAP abandon only if the search operation has not yet
                     completed.                    
                </comment>
                <scope line="563">
                    <declaration name="req" type="LdapRequest" line="567"/>
                    <scope line="568"/>
                    <scope line="577"/>
                    <scope line="579"/>
                </scope>
            </method>
            <method name="getSearchReply" type="LdapResult" line="589">
                <params>
                    <param name="batchSize" type="int"/>
                    <param name="res" type="LdapResult"/>
                    <param name="binaryAttrs" type="Hashtable"/>
                </params>
                <declaration name="req" type="LdapRequest" line="593"/>
                <scope line="595"/>
            </method>
            <method name="getSearchReply" type="LdapResult" line="604">
                <params>
                    <param name="req" type="LdapRequest"/>
                    <param name="batchSize" type="int"/>
                    <param name="res" type="LdapResult"/>
                    <param name="binaryAttrs" type="Hashtable"/>
                </params>
                <comment line="611">
                    clear the (previous) set of entries                    
                </comment>
                <comment line="618">
                    clear the (previous) set of referrals                    
                </comment>
                <comment line="621">
                    Decoder for response                    
                </comment>
                <comment line="622">
                    Request id                    
                </comment>
                <comment line="624">
                    Attribute set read from response                    
                </comment>
                <comment line="625">
                    Attribute read from response                    
                </comment>
                <comment line="626">
                    DN read from response                    
                </comment>
                <comment line="627">
                    LDAP entry representing response                    
                </comment>
                <comment line="628">
                    Holder for response length                    
                </comment>
                <comment line="629">
                    Position of end of response                    
                </comment>
                <comment line="634">
                    process search reply                    
                </comment>
                <comment line="637">
                    init seq                    
                </comment>
                <comment line="638">
                    req id                    
                </comment>
                <comment line="643">
                    handle LDAPv3 search entries                    
                </comment>
                <comment line="663">
                    handle LDAPv3 search reference                    
                </comment>
                <comment line="666">
                    %%% Although not strictly correct, some LDAP servers
                         encode the SEQUENCE OF tag in the SearchResultRef                    
                </comment>
                <comment line="685">
                    Save referral and continue to get next search result                    
                </comment>
                <comment line="689">
                    %%% ignore for now                    
                </comment>
                <comment line="697">
                    Done with search                    
                </comment>
                <scope line="609"/>
                <scope line="611"/>
                <scope line="616"/>
                <declaration name="replyBer" type="BerDecoder" line="620"/>
                <declaration name="seq" type="int" line="621"/>
                <declaration name="lattrs" type="Attributes" line="623"/>
                <declaration name="la" type="Attribute" line="624"/>
                <declaration name="DN" type="String" line="625"/>
                <declaration name="le" type="LdapEntry" line="626"/>
                <declaration name="seqlen" type="int[]" line="627"/>
                <declaration name="endseq" type="int" line="628"/>
                <scope line="630">
                    <scope line="640">
                        <scope line="651"/>
                    </scope>
                    <scope line="660">
                        <declaration name="URLs" type="Vector" line="663"/>
                        <scope line="668"/>
                        <scope line="673"/>
                        <scope line="678"/>
                    </scope>
                    <scope line="686"/>
                    <scope line="690"/>
                </scope>
            </method>
            <method name="parseAttribute" type="Attribute" line="704">
                <params>
                    <param name="ber" type="BerDecoder"/>
                    <param name="binaryAttrs" type="Hashtable"/>
                </params>
                <comment line="724">
                    Skip the rest of the sequence because it is not what we want                    
                </comment>
                <declaration name="len" type="int" line="706"/>
                <declaration name="seq" type="int" line="707"/>
                <declaration name="attrid" type="String" line="708"/>
                <declaration name="hasBinaryValues" type="boolean" line="709"/>
                <declaration name="la" type="Attribute" line="710"/>
                <scope line="712">
                    <declaration name="attrlen" type="int" line="713"/>
                    <scope line="714">
                        <scope line="715"/>
                        <scope line="717"/>
                    </scope>
                </scope>
                <scope line="722"/>
            </method>
            <method name="parseAttributeValue" type="int" line="733">
                <params>
                    <param name="ber" type="BerDecoder"/>
                    <param name="la" type="Attribute"/>
                    <param name="hasBinaryValues" type="boolean"/>
                </params>
                <declaration name="len" type="int" line="735"/>
                <scope line="737"/>
                <scope line="739"/>
            </method>
            <method name="isBinaryValued" type="boolean" line="745">
                <params>
                    <param name="attrid" type="String"/>
                    <param name="binaryAttrs" type="Hashtable"/>
                </params>
                <declaration name="id" type="String" line="746"/>
            </method>
            <method name="parseResult" type="void" line="755">
                <params>
                    <param name="replyBer" type="BerDecoder"/>
                    <param name="res" type="LdapResult"/>
                    <param name="isLdapv3" type="boolean"/>
                </params>
                <comment line="762">
                    handle LDAPv3 referrals (if present)                    
                </comment>
                <scope line="764">
                    <declaration name="URLs" type="Vector" line="766"/>
                    <declaration name="seqlen" type="int[]" line="767"/>
                    <declaration name="endseq" type="int" line="770"/>
                    <scope line="772"/>
                    <scope line="777"/>
                </scope>
            </method>
            <method name="parseControls" type="Vector" line="785">
                <params>
                    <param name="replyBer" type="BerDecoder"/>
                </params>
                <comment line="788">
                    handle LDAPv3 controls (if present)                    
                </comment>
                <comment line="792">
                    default                    
                </comment>
                <comment line="793">
                    optional                    
                </comment>
                <scope line="788">
                    <declaration name="ctls" type="Vector" line="789"/>
                    <declaration name="controlOID" type="String" line="790"/>
                    <declaration name="criticality" type="boolean" line="791"/>
                    <declaration name="controlValue" type="byte[]" line="792"/>
                    <declaration name="seqlen" type="int[]" line="793"/>
                    <declaration name="endseq" type="int" line="796"/>
                    <scope line="798">
                        <scope line="804"/>
                        <scope line="808"/>
                        <scope line="812"/>
                    </scope>
                </scope>
                <scope line="818"/>
            </method>
            <method name="parseExtResponse" type="void" line="824">
                <params>
                    <param name="replyBer" type="BerDecoder"/>
                    <param name="res" type="LdapResult"/>
                </params>
                <scope line="829"/>
                <scope line="834"/>
            </method>
            <method name="encodeControls" type="void" line="846">
                <params>
                    <param name="ber" type="BerEncoder"/>
                    <param name="reqCtls" type="Control[]"/>
                </params>
                <comment line="859">
                    control OID                    
                </comment>
                <comment line="861">
                    critical control                    
                </comment>
                <scope line="848"/>
                <declaration name="controlVal" type="byte[]" line="852"/>
                <scope line="856">
                    <scope line="859"/>
                    <scope line="862"/>
                </scope>
            </method>
            <javadoc line="870">
                Reads the next reply corresponding to msgId, outstanding on requestBer.
                  Processes the result and any controls.                
            </javadoc>
            <method name="processReply" type="LdapResult" line="875">
                <params>
                    <param name="req" type="LdapRequest"/>
                    <param name="res" type="LdapResult"/>
                    <param name="responseType" type="int"/>
                </params>
                <comment line="880">
                    init seq                    
                </comment>
                <comment line="881">
                    msg id                    
                </comment>
                <comment line="892">
                    Done with operation                    
                </comment>
                <declaration name="rber" type="BerDecoder" line="877"/>
                <scope line="881"/>
            </method>
            <declaration name="ADD" type="int" line="907"/>
            <declaration name="DELETE" type="int" line="908"/>
            <declaration name="REPLACE" type="int" line="909"/>
            <method name="modify" type="LdapResult" line="913">
                <params>
                    <param name="dn" type="String"/>
                    <param name="operations" type="int"/>
                    <param name="attrs" type="Attribute"/>
                    <param name="reqCtls" type="Control[]"/>
                </params>
                <comment line="936">
                    zero values is not permitted for the add op.                    
                </comment>
                <declaration name="res" type="LdapResult" line="917"/>
                <declaration name="ber" type="BerEncoder" line="923"/>
                <declaration name="curMsgId" type="int" line="924"/>
                <scope line="931">
                    <scope line="936"/>
                    <scope line="939"/>
                </scope>
                <declaration name="req" type="LdapRequest" line="949"/>
            </method>
            <method name="encodeAttribute" type="void" line="955">
                <params>
                    <param name="ber" type="BerEncoder"/>
                    <param name="attr" type="Attribute"/>
                </params>
                <comment line="970">
                    no attribute value                    
                </comment>
                <declaration name="enum_" type="NamingEnumeration" line="960"/>
                <declaration name="val" type="Object" line="961"/>
                <scope line="962">
                    <scope line="964"/>
                    <scope line="966"/>
                    <scope line="968"/>
                    <scope line="970"/>
                </scope>
            </method>
            <method name="hasNoValue" type="boolean" line="979">
                <params>
                    <param name="attr" type="Attribute"/>
                </params>
            </method>
            <method name="add" type="LdapResult" line="991">
                <params>
                    <param name="entry" type="LdapEntry"/>
                    <param name="reqCtls" type="Control[]"/>
                </params>
                <comment line="1015">
                    zero values is not permitted                    
                </comment>
                <declaration name="res" type="LdapResult" line="995"/>
                <declaration name="ber" type="BerEncoder" line="1001"/>
                <declaration name="curMsgId" type="int" line="1002"/>
                <declaration name="attr" type="Attribute" line="1003"/>
                <declaration name="enum_" type="NamingEnumeration" line="1010"/>
                <scope line="1011">
                    <scope line="1015"/>
                    <scope line="1018"/>
                </scope>
                <declaration name="req" type="LdapRequest" line="1027"/>
            </method>
            <method name="delete" type="LdapResult" line="1039">
                <params>
                    <param name="DN" type="String"/>
                    <param name="reqCtls" type="Control[]"/>
                </params>
                <declaration name="res" type="LdapResult" line="1043"/>
                <declaration name="ber" type="BerEncoder" line="1049"/>
                <declaration name="curMsgId" type="int" line="1050"/>
                <declaration name="req" type="LdapRequest" line="1058"/>
            </method>
            <method name="moddn" type="LdapResult" line="1078">
                <params>
                    <param name="DN" type="String"/>
                    <param name="newrdn" type="String"/>
                    <param name="deleteOldRdn" type="boolean"/>
                    <param name="newSuperior" type="String"/>
                    <param name="reqCtls" type="Control[]"/>
                </params>
                <comment line="1102">
                    System.err.println(&quot;changin superior&quot;);                    
                </comment>
                <declaration name="changeSuperior" type="boolean" line="1082"/>
                <declaration name="res" type="LdapResult" line="1085"/>
                <declaration name="ber" type="BerEncoder" line="1091"/>
                <declaration name="curMsgId" type="int" line="1092"/>
                <scope line="1100"/>
                <declaration name="req" type="LdapRequest" line="1109"/>
            </method>
            <method name="compare" type="LdapResult" line="1122">
                <params>
                    <param name="DN" type="String"/>
                    <param name="type" type="String"/>
                    <param name="value" type="String"/>
                    <param name="reqCtls" type="Control[]"/>
                </params>
                <comment line="1143">
                    replace any escaped characters in the value                    
                </comment>
                <declaration name="res" type="LdapResult" line="1126"/>
                <declaration name="ber" type="BerEncoder" line="1132"/>
                <declaration name="curMsgId" type="int" line="1133"/>
                <declaration name="val" type="byte[]" line="1143"/>
                <declaration name="req" type="LdapRequest" line="1154"/>
            </method>
            <method name="extendedOp" type="LdapResult" line="1166">
                <params>
                    <param name="id" type="String"/>
                    <param name="request" type="byte[]"/>
                    <param name="reqCtls" type="Control[]"/>
                    <param name="pauseAfterReceipt" type="boolean"/>
                </params>
                <comment line="1184">
                    [0]                    
                </comment>
                <comment line="1187">
                    [1]                    
                </comment>
                <comment line="1190">
                    always v3                    
                </comment>
                <comment line="1197">
                    init seq                    
                </comment>
                <comment line="1198">
                    msg id                    
                </comment>
                <comment line="1207">
                    Done with operation                    
                </comment>
                <declaration name="res" type="LdapResult" line="1170"/>
                <declaration name="ber" type="BerEncoder" line="1176"/>
                <declaration name="curMsgId" type="int" line="1177"/>
                <scope line="1184"/>
                <declaration name="req" type="LdapRequest" line="1192"/>
                <declaration name="rber" type="BerDecoder" line="1194"/>
                <scope line="1198"/>
            </method>
            <declaration name="LDAP_VERSION3_VERSION2" type="int" line="1217"/>
            <declaration name="LDAP_VERSION2" type="int" line="1218"/>
            <declaration name="LDAP_VERSION3" type="int" line="1219"/>
            <declaration name="LDAP_VERSION" type="int" line="1220"/>
            <declaration name="LDAP_REF_FOLLOW" type="int" line="1222"/>
            <declaration name="LDAP_REF_THROW" type="int" line="1223"/>
            <declaration name="LDAP_REF_IGNORE" type="int" line="1224"/>
            <declaration name="LDAP_URL" type="String" line="1226"/>
            <declaration name="LDAPS_URL" type="String" line="1227"/>
            <declaration name="LBER_BOOLEAN" type="int" line="1229"/>
            <declaration name="LBER_INTEGER" type="int" line="1230"/>
            <declaration name="LBER_BITSTRING" type="int" line="1231"/>
            <declaration name="LBER_OCTETSTRING" type="int" line="1232"/>
            <declaration name="LBER_NULL" type="int" line="1233"/>
            <declaration name="LBER_ENUMERATED" type="int" line="1234"/>
            <declaration name="LBER_SEQUENCE" type="int" line="1235"/>
            <declaration name="LBER_SET" type="int" line="1236"/>
            <declaration name="LDAP_SUPERIOR_DN" type="int" line="1238"/>
            <declaration name="LDAP_REQ_BIND" type="int" line="1240"/>
            <declaration name="LDAP_REQ_UNBIND" type="int" line="1241"/>
            <declaration name="LDAP_REQ_SEARCH" type="int" line="1242"/>
            <declaration name="LDAP_REQ_MODIFY" type="int" line="1243"/>
            <declaration name="LDAP_REQ_ADD" type="int" line="1244"/>
            <declaration name="LDAP_REQ_DELETE" type="int" line="1245"/>
            <declaration name="LDAP_REQ_MODRDN" type="int" line="1246"/>
            <declaration name="LDAP_REQ_COMPARE" type="int" line="1247"/>
            <declaration name="LDAP_REQ_ABANDON" type="int" line="1248"/>
            <declaration name="LDAP_REQ_EXTENSION" type="int" line="1249"/>
            <declaration name="LDAP_REP_BIND" type="int" line="1251"/>
            <declaration name="LDAP_REP_SEARCH" type="int" line="1252"/>
            <declaration name="LDAP_REP_SEARCH_REF" type="int" line="1253"/>
            <declaration name="LDAP_REP_RESULT" type="int" line="1254"/>
            <declaration name="LDAP_REP_MODIFY" type="int" line="1255"/>
            <declaration name="LDAP_REP_ADD" type="int" line="1256"/>
            <declaration name="LDAP_REP_DELETE" type="int" line="1257"/>
            <declaration name="LDAP_REP_MODRDN" type="int" line="1258"/>
            <declaration name="LDAP_REP_COMPARE" type="int" line="1259"/>
            <declaration name="LDAP_REP_EXTENSION" type="int" line="1260"/>
            <declaration name="LDAP_REP_REFERRAL" type="int" line="1262"/>
            <declaration name="LDAP_REP_EXT_OID" type="int" line="1263"/>
            <declaration name="LDAP_REP_EXT_VAL" type="int" line="1264"/>
            <declaration name="LDAP_CONTROLS" type="int" line="1268"/>
            <declaration name="LDAP_CONTROL_MANAGE_DSA_IT" type="String" line="1269"/>
            <declaration name="LDAP_CONTROL_PREFERRED_LANG" type="String" line="1270"/>
            <declaration name="LDAP_CONTROL_PAGED_RESULTS" type="String" line="1271"/>
            <declaration name="LDAP_CONTROL_SERVER_SORT_REQ" type="String" line="1272"/>
            <declaration name="LDAP_CONTROL_SERVER_SORT_RES" type="String" line="1273"/>
            <declaration name="LDAP_SUCCESS" type="int" line="1281"/>
            <declaration name="LDAP_OPERATIONS_ERROR" type="int" line="1282"/>
            <declaration name="LDAP_PROTOCOL_ERROR" type="int" line="1283"/>
            <declaration name="LDAP_TIME_LIMIT_EXCEEDED" type="int" line="1284"/>
            <declaration name="LDAP_SIZE_LIMIT_EXCEEDED" type="int" line="1285"/>
            <declaration name="LDAP_COMPARE_FALSE" type="int" line="1286"/>
            <declaration name="LDAP_COMPARE_TRUE" type="int" line="1287"/>
            <declaration name="LDAP_AUTH_METHOD_NOT_SUPPORTED" type="int" line="1288"/>
            <declaration name="LDAP_STRONG_AUTH_REQUIRED" type="int" line="1289"/>
            <declaration name="LDAP_PARTIAL_RESULTS" type="int" line="1290"/>
            <declaration name="LDAP_REFERRAL" type="int" line="1291"/>
            <declaration name="LDAP_ADMIN_LIMIT_EXCEEDED" type="int" line="1292"/>
            <declaration name="LDAP_UNAVAILABLE_CRITICAL_EXTENSION" type="int" line="1293"/>
            <declaration name="LDAP_CONFIDENTIALITY_REQUIRED" type="int" line="1294"/>
            <declaration name="LDAP_SASL_BIND_IN_PROGRESS" type="int" line="1295"/>
            <declaration name="LDAP_NO_SUCH_ATTRIBUTE" type="int" line="1296"/>
            <declaration name="LDAP_UNDEFINED_ATTRIBUTE_TYPE" type="int" line="1297"/>
            <declaration name="LDAP_INAPPROPRIATE_MATCHING" type="int" line="1298"/>
            <declaration name="LDAP_CONSTRAINT_VIOLATION" type="int" line="1299"/>
            <declaration name="LDAP_ATTRIBUTE_OR_VALUE_EXISTS" type="int" line="1300"/>
            <declaration name="LDAP_INVALID_ATTRIBUTE_SYNTAX" type="int" line="1301"/>
            <declaration name="LDAP_NO_SUCH_OBJECT" type="int" line="1302"/>
            <declaration name="LDAP_ALIAS_PROBLEM" type="int" line="1303"/>
            <declaration name="LDAP_INVALID_DN_SYNTAX" type="int" line="1304"/>
            <declaration name="LDAP_IS_LEAF" type="int" line="1305"/>
            <declaration name="LDAP_ALIAS_DEREFERENCING_PROBLEM" type="int" line="1306"/>
            <declaration name="LDAP_INAPPROPRIATE_AUTHENTICATION" type="int" line="1307"/>
            <declaration name="LDAP_INVALID_CREDENTIALS" type="int" line="1308"/>
            <declaration name="LDAP_INSUFFICIENT_ACCESS_RIGHTS" type="int" line="1309"/>
            <declaration name="LDAP_BUSY" type="int" line="1310"/>
            <declaration name="LDAP_UNAVAILABLE" type="int" line="1311"/>
            <declaration name="LDAP_UNWILLING_TO_PERFORM" type="int" line="1312"/>
            <declaration name="LDAP_LOOP_DETECT" type="int" line="1313"/>
            <declaration name="LDAP_NAMING_VIOLATION" type="int" line="1314"/>
            <declaration name="LDAP_OBJECT_CLASS_VIOLATION" type="int" line="1315"/>
            <declaration name="LDAP_NOT_ALLOWED_ON_NON_LEAF" type="int" line="1316"/>
            <declaration name="LDAP_NOT_ALLOWED_ON_RDN" type="int" line="1317"/>
            <declaration name="LDAP_ENTRY_ALREADY_EXISTS" type="int" line="1318"/>
            <declaration name="LDAP_OBJECT_CLASS_MODS_PROHIBITED" type="int" line="1319"/>
            <declaration name="LDAP_AFFECTS_MULTIPLE_DSAS" type="int" line="1320"/>
            <declaration name="LDAP_OTHER" type="int" line="1321"/>
            <declaration name="ldap_error_message" type="String[]" line="1323"/>
            <method name="getErrorMessage" type="String" line="1428">
                <params>
                    <param name="errorCode" type="int"/>
                    <param name="errorMessage" type="String"/>
                </params>
                <comment line="1435">
                    append error message from the server                    
                </comment>
                <comment line="1440">
                    append built-in error message                    
                </comment>
                <declaration name="message" type="String" line="1430"/>
                <scope line="1432"/>
                <scope line="1437">
                    <scope line="1440">
                        <scope line="1441"/>
                    </scope>
                    <scope line="1445"/>
                </scope>
            </method>
            <declaration name="unsolicited" type="Vector" line="1477"/>
            <method name="addUnsolicited" type="void" line="1478">
                <params>
                    <param name="ctx" type="LdapCtx"/>
                </params>
                <scope line="1479"/>
            </method>
            <method name="removeUnsolicited" type="void" line="1485">
                <params>
                    <param name="ctx" type="LdapCtx"/>
                </params>
                <scope line="1486"/>
                <scope line="1489">
                    <scope line="1490"/>
                </scope>
            </method>
            <method name="processUnsolicited" type="void" line="1499">
                <params>
                    <param name="ber" type="BerDecoder"/>
                </params>
                <comment line="1506">
                    Parse the response                    
                </comment>
                <comment line="1509">
                    init seq                    
                </comment>
                <comment line="1510">
                    msg id; should be 0; ignored                    
                </comment>
                <comment line="1519">
                    force closing of connection                    
                </comment>
                <comment line="1524">
                    Create an UnsolicitedNotification using the parsed data
                     Need a &apos;ctx&apos; object because we want to use the context&apos;s
                     list of provider control factories.                    
                </comment>
                <comment line="1538">
                    Fire UnsolicitedNotification events to listeners                    
                </comment>
                <comment line="1541">
                    If &quot;disconnect&quot; notification,
                     notify unsolicited listeners via NamingException                    
                </comment>
                <comment line="1550">
                    no one registered; ignore                    
                </comment>
                <scope line="1500"/>
                <scope line="1503">
                    <scope line="1504">
                        <declaration name="res" type="LdapResult" line="1506"/>
                        <scope line="1510"/>
                        <scope line="1517"/>
                        <scope line="1522">
                            <declaration name="notice" type="UnsolicitedNotification" line="1526"/>
                            <scope line="1542"/>
                        </scope>
                    </scope>
                    <scope line="1547">
                        <declaration name="ne" type="NamingException" line="1551"/>
                    </scope>
                    <scope line="1557"/>
                </scope>
            </method>
            <method name="notifyUnsolicited" type="void" line="1564">
                <params>
                    <param name="e" type="Object"/>
                </params>
                <comment line="1570">
                    no more listeners after exception                    
                </comment>
                <scope line="1565"/>
                <scope line="1568"/>
            </method>
            <method name="ensureOpen" type="void" line="1573">
                <scope line="1574">
                    <scope line="1575"/>
                    <scope line="1577"/>
                </scope>
            </method>
            <method name="getInstance" type="LdapClient" line="1587">
                <params>
                    <param name="usePool" type="boolean"/>
                    <param name="hostname" type="String"/>
                    <param name="port" type="int"/>
                    <param name="factory" type="String"/>
                    <param name="connectTimeout" type="int"/>
                    <param name="readTimeout" type="int"/>
                    <param name="trace" type="OutputStream"/>
                    <param name="version" type="int"/>
                    <param name="authMechanism" type="String"/>
                    <param name="ctls" type="Control[]"/>
                    <param name="protocol" type="String"/>
                    <param name="user" type="String"/>
                    <param name="passwd" type="Object"/>
                    <param name="env" type="Hashtable"/>
                </params>
                <comment line="1597">
                    always one when starting out                    
                </comment>
                <scope line="1589">
                    <scope line="1591">
                        <declaration name="answer" type="LdapClient" line="1592"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>