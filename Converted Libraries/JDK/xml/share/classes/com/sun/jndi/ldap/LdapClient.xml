<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jndi.ldap">
        <import package="java.net"/>
        <import package="java.io"/>
        <import package="java.util.Vector"/>
        <import package="java.util.Hashtable"/>
        <import package="javax.naming"/>
        <import package="javax.naming.directory"/>
        <import package="javax.naming.ldap"/>
        <import package="com.sun.jndi.ldap.pool.PooledConnection"/>
        <import package="com.sun.jndi.ldap.pool.PoolCallback"/>
        <import package="com.sun.jndi.ldap.sasl.LdapSasl"/>
        <import package="com.sun.jndi.ldap.sasl.SaslInputStream"/>
        <class name="LdapClient" line="13">
            <implements interface="PooledConnection"/>
            <javadoc line="13">
                LDAP (RFC-1777) and LDAPv3 (RFC-2251) compliant client
                  This class represents a connection to an LDAP client.
                  Callers interact with this class at an LDAP operation level.
                  That is, the caller invokes a method to do a SEARCH or MODRDN
                  operation and gets back the result.
                  The caller uses the constructor to create a connection to the server.
                  It then needs to use authenticate() to perform an LDAP BIND.
                  Note that for v3, BIND is optional so authenticate() might not
                  actually send a BIND. authenticate() can be used later on to issue
                  a BIND, for example, for a v3 client that wants to change the connection&apos;s
                  credentials.
                  &lt;p&gt;
                  Multiple LdapCtx might share the same LdapClient. For example, contexts
                  derived from the same initial context would share the same LdapClient
                  until changes to a context&apos;s properties necessitates its own LdapClient.
                  LdapClient methods that access shared data are thread-safe (i.e., caller
                  does not have to sync).
                  &lt;p&gt;
                  Fields:
                  isLdapv3 - no sync; initialized and updated within sync authenticate();
                  always updated when connection is &quot;quiet&quot; and not shared;
                  read access from outside LdapClient not sync
                  referenceCount - sync within LdapClient; exception is forceClose() which
                  is used by Connection thread to close connection upon receiving
                  an Unsolicited Notification.
                  access from outside LdapClient must sync;
                  conn - no sync; Connection takes care of its own sync
                  unsolicited - sync Vector; multiple operations sync&apos;ed                
                <author>
                    Vincent Ryan                    
                </author>
                <author>
                    Jagane Sundar                    
                </author>
                <author>
                    Rosanna Lee                    
                </author>
            </javadoc>
            <declaration name="debug" type="int" line="47"/>
            <declaration name="caseIgnore" type="boolean" line="48"/>
            <declaration name="defaultBinaryAttrs" type="Hashtable" line="49"/>
            <scope line="50"/>
            <declaration name="DISCONNECT_OID" type="String" line="67"/>
            <declaration name="isLdapv3" type="boolean" line="68"/>
            <declaration name="referenceCount" type="int" line="69"/>
            <declaration name="conn" type="Connection" line="70"/>
            <declaration name="pcb" type="PoolCallback" line="71"/>
            <declaration name="pooled" type="boolean" line="72"/>
            <declaration name="authenticateCalled" type="boolean" line="73"/>
            <method name="LdapClient" type="constructor" line="74">
                <params>
                    <param name="host" type="String"/>
                    <param name="port" type="int"/>
                    <param name="socketFactory" type="String"/>
                    <param name="connectTimeout" type="int"/>
                    <param name="readTimeout" type="int"/>
                    <param name="trace" type="OutputStream"/>
                    <param name="pcb" type="PoolCallback"/>
                </params>
            </method>
            <method name="authenticateCalled" type="boolean" line="80"/>
            <method name="authenticate" type="LdapResult" line="83">
                <params>
                    <param name="initial" type="boolean"/>
                    <param name="name" type="String"/>
                    <param name="pw" type="Object"/>
                    <param name="version" type="int"/>
                    <param name="authMechanism" type="String"/>
                    <param name="ctls" type="Control[]"/>
                    <param name="env" type="Hashtable"/>
                </params>
                <scope line="85"/>
                <scope line="88">
                    <declaration name="ne" type="NamingException" line="89"/>
                </scope>
                <declaration name="res" type="LdapResult" line="104"/>
                <scope line="105">
                    <scope line="106">
                        <scope line="107">
                            <scope line="109"/>
                        </scope>
                        <scope line="113">
                            <declaration name="ne" type="NamingException" line="114"/>
                        </scope>
                    </scope>
                    <scope line="119"/>
                </scope>
                <scope line="124">
                    <declaration name="encodedPw" type="byte[]" line="125"/>
                    <scope line="126">
                        <scope line="129"/>
                    </scope>
                    <scope line="133">
                        <declaration name="ne" type="NamingException" line="134"/>
                    </scope>
                    <scope line="138">
                        <scope line="139">
                            <scope line="140"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="146">
                    <scope line="147">
                        <scope line="149"/>
                    </scope>
                    <scope line="153">
                        <declaration name="ne" type="NamingException" line="154"/>
                    </scope>
                </scope>
                <scope line="159"/>
                <scope line="162">
                    <declaration name="encodedPw" type="byte[]" line="163"/>
                    <scope line="164">
                        <scope line="168"/>
                    </scope>
                    <scope line="172">
                        <declaration name="ne" type="NamingException" line="173"/>
                    </scope>
                    <scope line="177">
                        <scope line="178">
                            <scope line="179"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="185"/>
            </method>
            <javadoc line="191">
                Sends an LDAP Bind request.
                  Cannot be private; called by LdapSasl                
                <param>
                    dn The possibly null DN to use in the BIND request. null if anonymous.                    
                </param>
                <param>
                    toServer The possibly null array of bytes to send to the server.                    
                </param>
                <param>
                    auth The authentication mechanism                    
                </param>
            </javadoc>
            <method name="ldapBind" type="LdapResult" line="198">
                <params>
                    <param name="dn" type="String"/>
                    <param name="toServer" type="byte[]"/>
                    <param name="bindCtls" type="Control[]"/>
                    <param name="auth" type="String"/>
                    <param name="pauseAfterReceipt" type="boolean"/>
                </params>
                <declaration name="ber" type="BerEncoder" line="201"/>
                <declaration name="curMsgId" type="int" line="202"/>
                <declaration name="res" type="LdapResult" line="203"/>
                <scope line="210">
                    <scope line="213"/>
                </scope>
                <scope line="218">
                    <scope line="219"/>
                    <scope line="222"/>
                </scope>
                <scope line="227"/>
                <declaration name="req" type="LdapRequest" line="231"/>
                <scope line="232"/>
                <declaration name="rber" type="BerDecoder" line="235"/>
                <scope line="238"/>
                <scope line="243"/>
            </method>
            <javadoc line="250">
                Determines whether SASL encryption/integrity is in progress.
                  This check is made prior to reauthentication. You cannot reauthenticate
                  over an encrypted/integrity-protected SASL channel. You must
                  close the channel and open a new one.                
            </javadoc>
            <method name="usingSaslStreams" type="boolean" line="256"/>
            <method name="incRefCount" type="void" line="259">
                <scope line="261"/>
            </method>
            <javadoc line="265">
                Returns the encoded password.                
            </javadoc>
            <method name="encodePassword" type="byte[]" line="268">
                <params>
                    <param name="pw" type="Object"/>
                    <param name="v3" type="boolean"/>
                </params>
                <scope line="269"/>
                <scope line="272">
                    <scope line="273"/>
                    <scope line="276"/>
                </scope>
                <scope line="280"/>
            </method>
            <method name="close" type="void" line="284">
                <params>
                    <param name="reqCtls" type="Control[]"/>
                    <param name="hardClose" type="boolean"/>
                </params>
                <scope line="286"/>
                <scope line="291">
                    <scope line="293"/>
                    <scope line="297">
                        <scope line="298"/>
                        <scope line="303"/>
                    </scope>
                </scope>
            </method>
            <method name="forceClose" type="void" line="309">
                <params>
                    <param name="cleanPool" type="boolean"/>
                </params>
                <scope line="311"/>
                <scope line="314">
                    <scope line="318"/>
                </scope>
            </method>
            <method name="finalize" type="void" line="323"/>
            <method name="closeConnection" type="void" line="327"/>
            <javadoc line="330">
                Called by Connection.cleanup(). LdapClient should
                  notify any unsolicited listeners and removing itself from any pool.
                  This is almost like forceClose(), except it doesn&apos;t call
                  Connection.cleanup() (because this is called from cleanup()).                
            </javadoc>
            <method name="processConnectionClosure" type="void" line="336">
                <scope line="337">
                    <declaration name="msg" type="String" line="338"/>
                    <scope line="339"/>
                    <scope line="342"/>
                </scope>
                <scope line="347"/>
            </method>
            <declaration name="SCOPE_BASE_OBJECT" type="int" line="351"/>
            <declaration name="SCOPE_ONE_LEVEL" type="int" line="352"/>
            <declaration name="SCOPE_SUBTREE" type="int" line="353"/>
            <method name="search" type="LdapResult" line="354">
                <params>
                    <param name="dn" type="String"/>
                    <param name="scope" type="int"/>
                    <param name="deref" type="int"/>
                    <param name="sizeLimit" type="int"/>
                    <param name="timeLimit" type="int"/>
                    <param name="attrsOnly" type="boolean"/>
                    <param name="attrs" type="String"/>
                    <param name="filter" type="String"/>
                    <param name="batchSize" type="int"/>
                    <param name="reqCtls" type="Control[]"/>
                    <param name="binaryAttrs" type="Hashtable"/>
                    <param name="waitFirstReply" type="boolean"/>
                    <param name="replyQueueCapacity" type="int"/>
                </params>
                <declaration name="res" type="LdapResult" line="356"/>
                <declaration name="ber" type="BerEncoder" line="357"/>
                <declaration name="curMsgId" type="int" line="358"/>
                <declaration name="req" type="LdapRequest" line="375"/>
                <scope line="378"/>
            </method>
            <method name="clearSearchReply" type="void" line="383">
                <params>
                    <param name="res" type="LdapResult"/>
                    <param name="ctls" type="Control[]"/>
                </params>
                <scope line="384">
                    <declaration name="req" type="LdapRequest" line="385"/>
                    <scope line="386"/>
                    <scope line="389"/>
                    <scope line="392"/>
                </scope>
            </method>
            <method name="getSearchReply" type="LdapResult" line="397">
                <params>
                    <param name="batchSize" type="int"/>
                    <param name="res" type="LdapResult"/>
                    <param name="binaryAttrs" type="Hashtable"/>
                </params>
                <declaration name="req" type="LdapRequest" line="399"/>
                <scope line="400"/>
            </method>
            <method name="getSearchReply" type="LdapResult" line="405">
                <params>
                    <param name="req" type="LdapRequest"/>
                    <param name="batchSize" type="int"/>
                    <param name="res" type="LdapResult"/>
                    <param name="binaryAttrs" type="Hashtable"/>
                </params>
                <scope line="407"/>
                <scope line="410"/>
                <scope line="413"/>
                <declaration name="replyBer" type="BerDecoder" line="416"/>
                <declaration name="seq" type="int" line="417"/>
                <declaration name="lattrs" type="Attributes" line="418"/>
                <declaration name="la" type="Attribute" line="419"/>
                <declaration name="DN" type="String" line="420"/>
                <declaration name="le" type="LdapEntry" line="421"/>
                <declaration name="seqlen" type="int[]" line="422"/>
                <declaration name="endseq" type="int" line="423"/>
                <scope line="424">
                    <scope line="429">
                        <scope line="436"/>
                    </scope>
                    <scope line="444">
                        <declaration name="URLs" type="Vector" line="445"/>
                        <scope line="446"/>
                        <scope line="449"/>
                        <scope line="452"/>
                    </scope>
                    <scope line="458"/>
                    <scope line="461"/>
                </scope>
            </method>
            <method name="parseAttribute" type="Attribute" line="470">
                <params>
                    <param name="ber" type="BerDecoder"/>
                    <param name="binaryAttrs" type="Hashtable"/>
                </params>
                <declaration name="len" type="int" line="471"/>
                <declaration name="seq" type="int" line="472"/>
                <declaration name="attrid" type="String" line="473"/>
                <declaration name="hasBinaryValues" type="boolean" line="474"/>
                <declaration name="la" type="Attribute" line="475"/>
                <scope line="476">
                    <declaration name="attrlen" type="int" line="477"/>
                    <scope line="478">
                        <scope line="479"/>
                        <scope line="482"/>
                    </scope>
                </scope>
                <scope line="488"/>
            </method>
            <method name="parseAttributeValue" type="int" line="493">
                <params>
                    <param name="ber" type="BerDecoder"/>
                    <param name="la" type="Attribute"/>
                    <param name="hasBinaryValues" type="boolean"/>
                </params>
                <declaration name="len" type="int" line="494"/>
                <scope line="495"/>
                <scope line="498"/>
            </method>
            <method name="isBinaryValued" type="boolean" line="503">
                <params>
                    <param name="attrid" type="String"/>
                    <param name="binaryAttrs" type="Hashtable"/>
                </params>
                <declaration name="id" type="String" line="504"/>
            </method>
            <method name="parseResult" type="void" line="507">
                <params>
                    <param name="replyBer" type="BerDecoder"/>
                    <param name="res" type="LdapResult"/>
                    <param name="isLdapv3" type="boolean"/>
                </params>
                <scope line="511">
                    <declaration name="URLs" type="Vector" line="512"/>
                    <declaration name="seqlen" type="int[]" line="513"/>
                    <declaration name="endseq" type="int" line="515"/>
                    <scope line="516"/>
                    <scope line="519"/>
                </scope>
            </method>
            <method name="parseControls" type="Vector" line="525">
                <params>
                    <param name="replyBer" type="BerDecoder"/>
                </params>
                <scope line="526">
                    <declaration name="ctls" type="Vector" line="527"/>
                    <declaration name="controlOID" type="String" line="528"/>
                    <declaration name="criticality" type="boolean" line="529"/>
                    <declaration name="controlValue" type="byte[]" line="530"/>
                    <declaration name="seqlen" type="int[]" line="531"/>
                    <declaration name="endseq" type="int" line="533"/>
                    <scope line="534">
                        <scope line="537"/>
                        <scope line="540"/>
                        <scope line="543"/>
                    </scope>
                </scope>
                <scope line="549"/>
            </method>
            <method name="parseExtResponse" type="void" line="553">
                <params>
                    <param name="replyBer" type="BerDecoder"/>
                    <param name="res" type="LdapResult"/>
                </params>
                <scope line="555"/>
                <scope line="558"/>
            </method>
            <method name="encodeControls" type="void" line="563">
                <params>
                    <param name="ber" type="BerEncoder"/>
                    <param name="reqCtls" type="Control[]"/>
                </params>
                <scope line="564"/>
                <declaration name="controlVal" type="byte[]" line="567"/>
                <scope line="569">
                    <scope line="572"/>
                    <scope line="575"/>
                </scope>
            </method>
            <javadoc line="582">
                Reads the next reply corresponding to msgId, outstanding on requestBer.
                  Processes the result and any controls.                
            </javadoc>
            <method name="processReply" type="LdapResult" line="586">
                <params>
                    <param name="req" type="LdapRequest"/>
                    <param name="res" type="LdapResult"/>
                    <param name="responseType" type="int"/>
                </params>
                <declaration name="rber" type="BerDecoder" line="587"/>
                <scope line="590"/>
            </method>
            <declaration name="ADD" type="int" line="599"/>
            <declaration name="DELETE" type="int" line="600"/>
            <declaration name="REPLACE" type="int" line="601"/>
            <method name="modify" type="LdapResult" line="602">
                <params>
                    <param name="dn" type="String"/>
                    <param name="operations" type="int"/>
                    <param name="attrs" type="Attribute"/>
                    <param name="reqCtls" type="Control[]"/>
                </params>
                <declaration name="res" type="LdapResult" line="604"/>
                <declaration name="ber" type="BerEncoder" line="607"/>
                <declaration name="curMsgId" type="int" line="608"/>
                <scope line="614">
                    <scope line="617"/>
                    <scope line="620"/>
                </scope>
                <declaration name="req" type="LdapRequest" line="629"/>
            </method>
            <method name="encodeAttribute" type="void" line="632">
                <params>
                    <param name="ber" type="BerEncoder"/>
                    <param name="attr" type="Attribute"/>
                </params>
                <declaration name="enum_" type="NamingEnumeration" line="636"/>
                <declaration name="val" type="Object" line="637"/>
                <scope line="638">
                    <scope line="640"/>
                    <scope line="643"/>
                    <scope line="646"/>
                    <scope line="648"/>
                </scope>
            </method>
            <method name="hasNoValue" type="boolean" line="655">
                <params>
                    <param name="attr" type="Attribute"/>
                </params>
            </method>
            <method name="add" type="LdapResult" line="658">
                <params>
                    <param name="entry" type="LdapEntry"/>
                    <param name="reqCtls" type="Control[]"/>
                </params>
                <declaration name="res" type="LdapResult" line="660"/>
                <declaration name="ber" type="BerEncoder" line="663"/>
                <declaration name="curMsgId" type="int" line="664"/>
                <declaration name="attr" type="Attribute" line="665"/>
                <declaration name="enum_" type="NamingEnumeration" line="671"/>
                <scope line="672">
                    <scope line="674"/>
                    <scope line="677"/>
                </scope>
                <declaration name="req" type="LdapRequest" line="685"/>
            </method>
            <method name="delete" type="LdapResult" line="688">
                <params>
                    <param name="DN" type="String"/>
                    <param name="reqCtls" type="Control[]"/>
                </params>
                <declaration name="res" type="LdapResult" line="690"/>
                <declaration name="ber" type="BerEncoder" line="693"/>
                <declaration name="curMsgId" type="int" line="694"/>
                <declaration name="req" type="LdapRequest" line="700"/>
            </method>
            <method name="moddn" type="LdapResult" line="703">
                <params>
                    <param name="DN" type="String"/>
                    <param name="newrdn" type="String"/>
                    <param name="deleteOldRdn" type="boolean"/>
                    <param name="newSuperior" type="String"/>
                    <param name="reqCtls" type="Control[]"/>
                </params>
                <declaration name="changeSuperior" type="boolean" line="705"/>
                <declaration name="res" type="LdapResult" line="706"/>
                <declaration name="ber" type="BerEncoder" line="709"/>
                <declaration name="curMsgId" type="int" line="710"/>
                <scope line="717"/>
                <declaration name="req" type="LdapRequest" line="723"/>
            </method>
            <method name="compare" type="LdapResult" line="726">
                <params>
                    <param name="DN" type="String"/>
                    <param name="type" type="String"/>
                    <param name="value" type="String"/>
                    <param name="reqCtls" type="Control[]"/>
                </params>
                <declaration name="res" type="LdapResult" line="728"/>
                <declaration name="ber" type="BerEncoder" line="731"/>
                <declaration name="curMsgId" type="int" line="732"/>
                <declaration name="val" type="byte[]" line="739"/>
                <declaration name="req" type="LdapRequest" line="745"/>
            </method>
            <method name="extendedOp" type="LdapResult" line="748">
                <params>
                    <param name="id" type="String"/>
                    <param name="request" type="byte[]"/>
                    <param name="reqCtls" type="Control[]"/>
                    <param name="pauseAfterReceipt" type="boolean"/>
                </params>
                <declaration name="res" type="LdapResult" line="750"/>
                <declaration name="ber" type="BerEncoder" line="753"/>
                <declaration name="curMsgId" type="int" line="754"/>
                <scope line="759"/>
                <declaration name="req" type="LdapRequest" line="765"/>
                <declaration name="rber" type="BerDecoder" line="766"/>
                <scope line="769"/>
            </method>
            <declaration name="LDAP_VERSION3_VERSION2" type="int" line="777"/>
            <declaration name="LDAP_VERSION2" type="int" line="778"/>
            <declaration name="LDAP_VERSION3" type="int" line="779"/>
            <declaration name="LDAP_VERSION" type="int" line="780"/>
            <declaration name="LDAP_REF_FOLLOW" type="int" line="781"/>
            <declaration name="LDAP_REF_THROW" type="int" line="782"/>
            <declaration name="LDAP_REF_IGNORE" type="int" line="783"/>
            <declaration name="LDAP_URL" type="String" line="784"/>
            <declaration name="LDAPS_URL" type="String" line="785"/>
            <declaration name="LBER_BOOLEAN" type="int" line="786"/>
            <declaration name="LBER_INTEGER" type="int" line="787"/>
            <declaration name="LBER_BITSTRING" type="int" line="788"/>
            <declaration name="LBER_OCTETSTRING" type="int" line="789"/>
            <declaration name="LBER_NULL" type="int" line="790"/>
            <declaration name="LBER_ENUMERATED" type="int" line="791"/>
            <declaration name="LBER_SEQUENCE" type="int" line="792"/>
            <declaration name="LBER_SET" type="int" line="793"/>
            <declaration name="LDAP_SUPERIOR_DN" type="int" line="794"/>
            <declaration name="LDAP_REQ_BIND" type="int" line="795"/>
            <declaration name="LDAP_REQ_UNBIND" type="int" line="796"/>
            <declaration name="LDAP_REQ_SEARCH" type="int" line="797"/>
            <declaration name="LDAP_REQ_MODIFY" type="int" line="798"/>
            <declaration name="LDAP_REQ_ADD" type="int" line="799"/>
            <declaration name="LDAP_REQ_DELETE" type="int" line="800"/>
            <declaration name="LDAP_REQ_MODRDN" type="int" line="801"/>
            <declaration name="LDAP_REQ_COMPARE" type="int" line="802"/>
            <declaration name="LDAP_REQ_ABANDON" type="int" line="803"/>
            <declaration name="LDAP_REQ_EXTENSION" type="int" line="804"/>
            <declaration name="LDAP_REP_BIND" type="int" line="805"/>
            <declaration name="LDAP_REP_SEARCH" type="int" line="806"/>
            <declaration name="LDAP_REP_SEARCH_REF" type="int" line="807"/>
            <declaration name="LDAP_REP_RESULT" type="int" line="808"/>
            <declaration name="LDAP_REP_MODIFY" type="int" line="809"/>
            <declaration name="LDAP_REP_ADD" type="int" line="810"/>
            <declaration name="LDAP_REP_DELETE" type="int" line="811"/>
            <declaration name="LDAP_REP_MODRDN" type="int" line="812"/>
            <declaration name="LDAP_REP_COMPARE" type="int" line="813"/>
            <declaration name="LDAP_REP_EXTENSION" type="int" line="814"/>
            <declaration name="LDAP_REP_REFERRAL" type="int" line="815"/>
            <declaration name="LDAP_REP_EXT_OID" type="int" line="816"/>
            <declaration name="LDAP_REP_EXT_VAL" type="int" line="817"/>
            <declaration name="LDAP_CONTROLS" type="int" line="818"/>
            <declaration name="LDAP_CONTROL_MANAGE_DSA_IT" type="String" line="819"/>
            <declaration name="LDAP_CONTROL_PREFERRED_LANG" type="String" line="820"/>
            <declaration name="LDAP_CONTROL_PAGED_RESULTS" type="String" line="821"/>
            <declaration name="LDAP_CONTROL_SERVER_SORT_REQ" type="String" line="822"/>
            <declaration name="LDAP_CONTROL_SERVER_SORT_RES" type="String" line="823"/>
            <declaration name="LDAP_SUCCESS" type="int" line="824"/>
            <declaration name="LDAP_OPERATIONS_ERROR" type="int" line="825"/>
            <declaration name="LDAP_PROTOCOL_ERROR" type="int" line="826"/>
            <declaration name="LDAP_TIME_LIMIT_EXCEEDED" type="int" line="827"/>
            <declaration name="LDAP_SIZE_LIMIT_EXCEEDED" type="int" line="828"/>
            <declaration name="LDAP_COMPARE_FALSE" type="int" line="829"/>
            <declaration name="LDAP_COMPARE_TRUE" type="int" line="830"/>
            <declaration name="LDAP_AUTH_METHOD_NOT_SUPPORTED" type="int" line="831"/>
            <declaration name="LDAP_STRONG_AUTH_REQUIRED" type="int" line="832"/>
            <declaration name="LDAP_PARTIAL_RESULTS" type="int" line="833"/>
            <declaration name="LDAP_REFERRAL" type="int" line="834"/>
            <declaration name="LDAP_ADMIN_LIMIT_EXCEEDED" type="int" line="835"/>
            <declaration name="LDAP_UNAVAILABLE_CRITICAL_EXTENSION" type="int" line="836"/>
            <declaration name="LDAP_CONFIDENTIALITY_REQUIRED" type="int" line="837"/>
            <declaration name="LDAP_SASL_BIND_IN_PROGRESS" type="int" line="838"/>
            <declaration name="LDAP_NO_SUCH_ATTRIBUTE" type="int" line="839"/>
            <declaration name="LDAP_UNDEFINED_ATTRIBUTE_TYPE" type="int" line="840"/>
            <declaration name="LDAP_INAPPROPRIATE_MATCHING" type="int" line="841"/>
            <declaration name="LDAP_CONSTRAINT_VIOLATION" type="int" line="842"/>
            <declaration name="LDAP_ATTRIBUTE_OR_VALUE_EXISTS" type="int" line="843"/>
            <declaration name="LDAP_INVALID_ATTRIBUTE_SYNTAX" type="int" line="844"/>
            <declaration name="LDAP_NO_SUCH_OBJECT" type="int" line="845"/>
            <declaration name="LDAP_ALIAS_PROBLEM" type="int" line="846"/>
            <declaration name="LDAP_INVALID_DN_SYNTAX" type="int" line="847"/>
            <declaration name="LDAP_IS_LEAF" type="int" line="848"/>
            <declaration name="LDAP_ALIAS_DEREFERENCING_PROBLEM" type="int" line="849"/>
            <declaration name="LDAP_INAPPROPRIATE_AUTHENTICATION" type="int" line="850"/>
            <declaration name="LDAP_INVALID_CREDENTIALS" type="int" line="851"/>
            <declaration name="LDAP_INSUFFICIENT_ACCESS_RIGHTS" type="int" line="852"/>
            <declaration name="LDAP_BUSY" type="int" line="853"/>
            <declaration name="LDAP_UNAVAILABLE" type="int" line="854"/>
            <declaration name="LDAP_UNWILLING_TO_PERFORM" type="int" line="855"/>
            <declaration name="LDAP_LOOP_DETECT" type="int" line="856"/>
            <declaration name="LDAP_NAMING_VIOLATION" type="int" line="857"/>
            <declaration name="LDAP_OBJECT_CLASS_VIOLATION" type="int" line="858"/>
            <declaration name="LDAP_NOT_ALLOWED_ON_NON_LEAF" type="int" line="859"/>
            <declaration name="LDAP_NOT_ALLOWED_ON_RDN" type="int" line="860"/>
            <declaration name="LDAP_ENTRY_ALREADY_EXISTS" type="int" line="861"/>
            <declaration name="LDAP_OBJECT_CLASS_MODS_PROHIBITED" type="int" line="862"/>
            <declaration name="LDAP_AFFECTS_MULTIPLE_DSAS" type="int" line="863"/>
            <declaration name="LDAP_OTHER" type="int" line="864"/>
            <declaration name="ldap_error_message" type="String[]" line="865"/>
            <method name="getErrorMessage" type="String" line="866">
                <params>
                    <param name="errorCode" type="int"/>
                    <param name="errorMessage" type="String"/>
                </params>
                <declaration name="message" type="String" line="867"/>
                <scope line="868"/>
                <scope line="871">
                    <scope line="872">
                        <scope line="873"/>
                    </scope>
                    <scope line="877"/>
                </scope>
            </method>
            <declaration name="unsolicited" type="Vector" line="883"/>
            <method name="addUnsolicited" type="void" line="884">
                <params>
                    <param name="ctx" type="LdapCtx"/>
                </params>
                <scope line="885"/>
            </method>
            <method name="removeUnsolicited" type="void" line="890">
                <params>
                    <param name="ctx" type="LdapCtx"/>
                </params>
                <scope line="891"/>
                <scope line="894">
                    <scope line="895"/>
                </scope>
            </method>
            <method name="processUnsolicited" type="void" line="901">
                <params>
                    <param name="ber" type="BerDecoder"/>
                </params>
                <scope line="902"/>
                <scope line="905">
                    <scope line="906">
                        <declaration name="res" type="LdapResult" line="907"/>
                        <scope line="910"/>
                        <scope line="915"/>
                        <scope line="918">
                            <declaration name="notice" type="UnsolicitedNotification" line="919"/>
                            <scope line="921"/>
                        </scope>
                    </scope>
                    <scope line="926">
                        <declaration name="ne" type="NamingException" line="928"/>
                    </scope>
                    <scope line="932"/>
                </scope>
            </method>
            <method name="notifyUnsolicited" type="void" line="937">
                <params>
                    <param name="e" type="Object"/>
                </params>
                <scope line="938"/>
                <scope line="941"/>
            </method>
            <method name="ensureOpen" type="void" line="945">
                <scope line="946">
                    <scope line="947"/>
                    <scope line="950"/>
                </scope>
            </method>
            <method name="getInstance" type="LdapClient" line="955">
                <params>
                    <param name="usePool" type="boolean"/>
                    <param name="hostname" type="String"/>
                    <param name="port" type="int"/>
                    <param name="factory" type="String"/>
                    <param name="connectTimeout" type="int"/>
                    <param name="readTimeout" type="int"/>
                    <param name="trace" type="OutputStream"/>
                    <param name="version" type="int"/>
                    <param name="authMechanism" type="String"/>
                    <param name="ctls" type="Control[]"/>
                    <param name="protocol" type="String"/>
                    <param name="user" type="String"/>
                    <param name="passwd" type="Object"/>
                    <param name="env" type="Hashtable"/>
                </params>
                <scope line="956">
                    <scope line="957">
                        <declaration name="answer" type="LdapClient" line="958"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>