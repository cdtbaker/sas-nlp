<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jndi.ldap">
        <import package="javax.naming"/>
        <import package="javax.naming.directory"/>
        <import package="javax.naming.event"/>
        <import package="javax.naming.ldap"/>
        <import package="javax.naming.ldap.LdapName"/>
        <import package="java.util.Vector"/>
        <import package="com.sun.jndi.toolkit.ctx.Continuation"/>
        <class name="NamingEventNotifier" line="37">
            <comment line="61">
                package private; used by EventSupport to remove it                
            </comment>
            <comment line="95">
                package private; used by EventSupport; namingListener already synchronized                
            </comment>
            <comment line="100">
                package private; used by EventSupport; namingListener already synchronized                
            </comment>
            <comment line="105">
                package private; used by EventSupport; namingListener already synchronized                
            </comment>
            <implements interface="Runnable"/>
            <javadoc line="37">
                Gathers information to generate events by using the Persistent Search
                  control.
                  &lt;p&gt;
                  This class maintains a list of listeners all interested in the same
                  &quot;search&quot; request. It creates a thread that does the persistent search
                  and blocks, collecting the results of the search.
                  For each result that it receives from the search, it fires the
                  corresponding event to its listeners. If an exception is encountered,
                  it fires a NamingExceptionEvent.                
                <author>
                    Rosanna Lee                    
                </author>
            </javadoc>
            <declaration name="debug" type="boolean" line="51"/>
            <declaration name="namingListeners" type="Vector" line="53"/>
            <declaration name="worker" type="Thread" line="54"/>
            <declaration name="context" type="LdapCtx" line="55"/>
            <declaration name="eventSrc" type="EventContext" line="56"/>
            <declaration name="support" type="EventSupport" line="57"/>
            <declaration name="results" type="NamingEnumeration" line="58"/>
            <declaration name="info" type="NotifierArgs" line="61"/>
            <method name="NamingEventNotifier" type="constructor" line="64">
                <params>
                    <param name="support" type="EventSupport"/>
                    <param name="ctx" type="LdapCtx"/>
                    <param name="info" type="NotifierArgs"/>
                    <param name="firstListener" type="NamingListener"/>
                </params>
                <comment line="72">
                                        
                </comment>
                <comment line="73">
                                        
                </comment>
                <comment line="82">
                    Add psearch control to existing list                    
                </comment>
                <comment line="90">
                    not a user thread                    
                </comment>
                <declaration name="psearch" type="Control" line="68"/>
                <scope line="69"/>
                <scope line="75">
                    <declaration name="ne" type="NamingException" line="76"/>
                </scope>
            </method>
            <method name="addNamingListener" type="void" line="95">
                <params>
                    <param name="l" type="NamingListener"/>
                </params>
            </method>
            <method name="removeNamingListener" type="void" line="100">
                <params>
                    <param name="l" type="NamingListener"/>
                </params>
            </method>
            <method name="hasNamingListeners" type="boolean" line="105"/>
            <javadoc line="109">
                Execute &quot;persistent search&quot;.
                  For each result, create the appropriate NamingEvent and
                  queue to be dispatched to listeners.                
            </javadoc>
            <method name="run" type="void" line="114">
                <comment line="124">
                    Change root of search results so that it will generate                    
                </comment>
                <comment line="125">
                    names relative to the event context instead of that                    
                </comment>
                <comment line="126">
                    named by nm                    
                </comment>
                <comment line="144">
                    Just process ECs; ignore all the rest                    
                </comment>
                <comment line="147">
                    %%% Should be checking OID instead of class                    
                </comment>
                <comment line="148">
                    %%% in case using someone else&apos;s  EC ctl                    
                </comment>
                <comment line="175">
                    Fire event to notify NamingExceptionEvent listeners                    
                </comment>
                <comment line="178">
                    This notifier is no longer valid                    
                </comment>
                <scope line="115">
                    <declaration name="cont" type="Continuation" line="116"/>
                    <declaration name="nm" type="Name" line="118"/>
                    <declaration name="si" type="SearchResult" line="129"/>
                    <declaration name="respctls" type="Control[]" line="130"/>
                    <declaration name="ec" type="EntryChangeResponseControl" line="131"/>
                    <declaration name="changeNum" type="long" line="132"/>
                    <scope line="134">
                        <scope line="139"/>
                        <scope line="145">
                            <scope line="146">
                                <scope line="149"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="172"/>
                <scope line="174"/>
                <scope line="180"/>
            </method>
            <method name="cleanup" type="void" line="186">
                <comment line="192">
                    this will abandon the search                    
                </comment>
                <scope line="189">
                    <scope line="190"/>
                    <scope line="195"/>
                </scope>
                <scope line="200"/>
            </method>
            <javadoc line="203">
                Stop the dispatcher so we can be destroyed.
                  package private; used by EventSupport                
            </javadoc>
            <method name="stop" type="void" line="207">
                <comment line="210">
                    kill our thread                    
                </comment>
                <scope line="209"/>
            </method>
            <javadoc line="215">
                Fire an &quot;object added&quot; event to registered NamingListeners.                
            </javadoc>
            <method name="fireObjectAdded" type="void" line="218">
                <params>
                    <param name="newBd" type="Binding"/>
                    <param name="changeID" type="long"/>
                </params>
                <declaration name="e" type="NamingEvent" line="222"/>
            </method>
            <javadoc line="227">
                Fire an &quot;object removed&quot; event to registered NamingListeners.                
            </javadoc>
            <method name="fireObjectRemoved" type="void" line="230">
                <params>
                    <param name="oldBd" type="Binding"/>
                    <param name="changeID" type="long"/>
                </params>
                <declaration name="e" type="NamingEvent" line="234"/>
            </method>
            <javadoc line="239">
                Fires an &quot;object changed&quot; event to registered NamingListeners.                
            </javadoc>
            <method name="fireObjectChanged" type="void" line="242">
                <params>
                    <param name="newBd" type="Binding"/>
                    <param name="changeID" type="long"/>
                </params>
                <comment line="246">
                    Name hasn&apos;t changed; construct old binding using name from new binding                    
                </comment>
                <declaration name="oldBd" type="Binding" line="247"/>
                <declaration name="e" type="NamingEvent" line="249"/>
            </method>
            <javadoc line="254">
                Fires an &quot;object renamed&quot; to registered NamingListeners.                
            </javadoc>
            <method name="fireObjectRenamed" type="void" line="257">
                <params>
                    <param name="newBd" type="Binding"/>
                    <param name="oldDN" type="String"/>
                    <param name="changeID" type="long"/>
                </params>
                <comment line="271">
                                        
                </comment>
                <declaration name="oldBd" type="Binding" line="261"/>
                <scope line="262">
                    <declaration name="dn" type="LdapName" line="263"/>
                    <scope line="264">
                        <declaration name="relDN" type="String" line="265"/>
                    </scope>
                </scope>
                <scope line="268"/>
                <scope line="270"/>
                <declaration name="e" type="NamingEvent" line="274"/>
            </method>
            <method name="fireNamingException" type="void" line="279">
                <params>
                    <param name="e" type="NamingException"/>
                </params>
                <declaration name="evt" type="NamingExceptionEvent" line="283"/>
            </method>
        </class>
    </source>