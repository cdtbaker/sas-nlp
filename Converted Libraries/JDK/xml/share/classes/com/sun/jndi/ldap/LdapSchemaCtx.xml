<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jndi.ldap">
        <import package="javax.naming"/>
        <import package="javax.naming.directory"/>
        <import package="java.util.Hashtable"/>
        <import package="com.sun.jndi.toolkit.dir.HierMemDirCtx"/>
        <class name="LdapSchemaCtx" line="33">
            <extends class="HierMemDirCtx"/>
            <comment line="49">
                schema object (e.g. attribute type defn)                
            </comment>
            <comment line="50">
                schema tree root                
            </comment>
            <comment line="51">
                root of object class subtree                
            </comment>
            <comment line="52">
                root of attribute type subtree                
            </comment>
            <comment line="53">
                root of syntax subtree                
            </comment>
            <comment line="54">
                root of matching rule subtree                
            </comment>
            <comment line="55">
                an object class definition                
            </comment>
            <comment line="56">
                an attribute type definition                
            </comment>
            <comment line="57">
                a syntax definition                
            </comment>
            <comment line="58">
                a matching rule definition                
            </comment>
            <comment line="83">
                Called by createNewCtx                
            </comment>
            <comment line="91">
                override HierMemDirCtx.close to prevent premature GC of shared data                
            </comment>
            <comment line="96">
                override to ignore obj and use attrs
                 treat same as createSubcontext                
            </comment>
            <comment line="124">
                override to use bind() instead                
            </comment>
            <comment line="188">
                Called to create oc, attr, syntax or matching rule roots and leaf entries                
            </comment>
            <comment line="252">
                we override this so the superclass creates the right kind of contexts
                 Default is to create LEAF objects; caller will change after creation
                 if necessary                
            </comment>
            <javadoc line="33">
                This is the class used to implement LDAP&apos;s GetSchema call.
                  It subclasses HierMemDirContext for most of the functionality. It
                  overrides functions that cause the schema definitions to change.
                  In such a case, it write the schema to the LdapServer and (assuming
                  there are no errors), calls it&apos;s superclass&apos;s equivalent function.
                  Thus, the schema tree and the LDAP server&apos;s schema attributes are
                  always in sync.                
            </javadoc>
            <declaration name="debug" type="boolean" line="46"/>
            <declaration name="LEAF" type="int" line="48"/>
            <declaration name="SCHEMA_ROOT" type="int" line="49"/>
            <declaration name="OBJECTCLASS_ROOT" type="int" line="50"/>
            <declaration name="ATTRIBUTE_ROOT" type="int" line="51"/>
            <declaration name="SYNTAX_ROOT" type="int" line="52"/>
            <declaration name="MATCHRULE_ROOT" type="int" line="53"/>
            <declaration name="OBJECTCLASS" type="int" line="54"/>
            <declaration name="ATTRIBUTE" type="int" line="55"/>
            <declaration name="SYNTAX" type="int" line="56"/>
            <declaration name="MATCHRULE" type="int" line="57"/>
            <declaration name="info" type="SchemaInfo" line="59"/>
            <declaration name="setupMode" type="boolean" line="60"/>
            <declaration name="objectType" type="int" line="62"/>
            <method name="createSchemaTree" type="DirContext" line="66">
                <params>
                    <param name="env" type="Hashtable"/>
                    <param name="subschemasubentry" type="String"/>
                    <param name="schemaEntry" type="LdapCtx"/>
                    <param name="schemaAttrs" type="Attributes"/>
                    <param name="netscapeBug" type="boolean"/>
                </params>
                <comment line="78">
                    cleanup                    
                </comment>
                <scope line="67">
                    <declaration name="parser" type="LdapSchemaParser" line="68"/>
                    <declaration name="allinfo" type="SchemaInfo" line="70"/>
                    <declaration name="root" type="LdapSchemaCtx" line="73"/>
                </scope>
                <scope line="76"/>
            </method>
            <method name="LdapSchemaCtx" type="constructor" line="83">
                <params>
                    <param name="objectType" type="int"/>
                    <param name="environment" type="Hashtable"/>
                    <param name="info" type="SchemaInfo"/>
                </params>
            </method>
            <method name="close" type="void" line="91"/>
            <method name="bind" type="void" line="98">
                <params>
                    <param name="name" type="Name"/>
                    <param name="obj" type="Object"/>
                    <param name="attrs" type="Attributes"/>
                </params>
                <comment line="105">
                    Update server                    
                </comment>
                <comment line="109">
                    Update in-memory copy                    
                </comment>
                <scope line="99">
                    <scope line="100"/>
                </scope>
                <declaration name="newEntry" type="LdapSchemaCtx" line="109"/>
            </method>
            <method name="doBind" type="void" line="114">
                <params>
                    <param name="name" type="Name"/>
                    <param name="obj" type="Object"/>
                    <param name="attrs" type="Attributes"/>
                    <param name="useFactory" type="boolean"/>
                </params>
                <comment line="120">
                    always ignore factories                    
                </comment>
                <scope line="115"/>
                <scope line="118"/>
            </method>
            <method name="rebind" type="void" line="125">
                <params>
                    <param name="name" type="Name"/>
                    <param name="obj" type="Object"/>
                    <param name="attrs" type="Attributes"/>
                </params>
                <scope line="126"/>
                <scope line="130"/>
            </method>
            <method name="doRebind" type="void" line="136">
                <params>
                    <param name="name" type="Name"/>
                    <param name="obj" type="Object"/>
                    <param name="attrs" type="Attributes"/>
                    <param name="useFactory" type="boolean"/>
                </params>
                <comment line="142">
                    always ignore factories                    
                </comment>
                <scope line="137"/>
                <scope line="140"/>
            </method>
            <method name="doUnbind" type="void" line="145">
                <params>
                    <param name="name" type="Name"/>
                </params>
                <comment line="148">
                    Update server                    
                </comment>
                <comment line="150">
                    Lookup entry from memory                    
                </comment>
                <comment line="158">
                    Update in-memory copy                    
                </comment>
                <scope line="146">
                    <scope line="148">
                        <declaration name="target" type="LdapSchemaCtx" line="150"/>
                    </scope>
                    <scope line="153"/>
                </scope>
            </method>
            <method name="doRename" type="void" line="162">
                <params>
                    <param name="oldname" type="Name"/>
                    <param name="newname" type="Name"/>
                </params>
                <scope line="163"/>
                <scope line="165"/>
            </method>
            <method name="doDestroySubcontext" type="void" line="170">
                <params>
                    <param name="name" type="Name"/>
                </params>
                <comment line="173">
                    Update server                    
                </comment>
                <comment line="175">
                    Lookup entry from memory                    
                </comment>
                <comment line="184">
                    Update in-memory copy                    
                </comment>
                <scope line="171">
                    <scope line="173">
                        <declaration name="target" type="LdapSchemaCtx" line="175"/>
                    </scope>
                    <scope line="178"/>
                </scope>
            </method>
            <method name="setup" type="LdapSchemaCtx" line="189">
                <params>
                    <param name="objectType" type="int"/>
                    <param name="name" type="String"/>
                    <param name="attrs" type="Attributes"/>
                </params>
                <scope line="190">
                    <declaration name="answer" type="LdapSchemaCtx" line="192"/>
                </scope>
                <scope line="199"/>
            </method>
            <method name="doCreateSubcontext" type="DirContext" line="205">
                <params>
                    <param name="name" type="Name"/>
                    <param name="attrs" type="Attributes"/>
                </params>
                <comment line="214">
                    Update server                    
                </comment>
                <comment line="218">
                    Update in-memory copy                    
                </comment>
                <scope line="207"/>
                <scope line="212"/>
                <declaration name="newEntry" type="LdapSchemaCtx" line="218"/>
            </method>
            <method name="deepClone" type="Attributes" line="224">
                <params>
                    <param name="orig" type="Attributes"/>
                </params>
                <declaration name="copy" type="BasicAttributes" line="225"/>
                <declaration name="attrs" type="NamingEnumeration" line="226"/>
                <scope line="227"/>
            </method>
            <method name="doModifyAttributes" type="void" line="234">
                <params>
                    <param name="mods" type="ModificationItem[]"/>
                </params>
                <comment line="241">
                    Apply modifications to copy                    
                </comment>
                <comment line="244">
                    Update server copy                    
                </comment>
                <comment line="247">
                    Update in-memory copy                    
                </comment>
                <scope line="235"/>
                <scope line="237">
                    <declaration name="copy" type="Attributes" line="238"/>
                </scope>
            </method>
            <method name="createNewCtx" type="HierMemDirCtx" line="254">
                <declaration name="ctx" type="LdapSchemaCtx" line="255"/>
            </method>
            <method name="addServerSchema" type="void" line="261">
                <params>
                    <param name="attrs" type="Attributes"/>
                </params>
                <comment line="293">
                    System.err.println((String)schemaAttr.get());                    
                </comment>
                <declaration name="schemaAttr" type="Attribute" line="262"/>
                <declaration name="holder" type="Attributes" line="290"/>
            </method>
            <javadoc line="298">
                When we delete an entry, we use the original to make sure that
                  any formatting inconsistencies are eliminated.
                  This is because we&apos;re just deleting a value from an attribute
                  on the server and there might not be any checks for extra spaces
                  or parens.                
            </javadoc>
            <method name="deleteServerSchema" type="void" line="306">
                <params>
                    <param name="origAttrs" type="Attributes"/>
                </params>
                <declaration name="origAttrVal" type="Attribute" line="308"/>
                <declaration name="mods" type="ModificationItem[]" line="336"/>
            </method>
            <javadoc line="342">
                When we modify an entry, we use the original attribute value
                  in the schema to make sure that any formatting inconsistencies
                  are eliminated. A modification is done by deleting the original
                  value and adding a new value with the modification.                
            </javadoc>
            <method name="modifyServerSchema" type="void" line="349">
                <params>
                    <param name="origAttrs" type="Attributes"/>
                    <param name="newAttrs" type="Attributes"/>
                </params>
                <declaration name="newAttrVal" type="Attribute" line="351"/>
                <declaration name="origAttrVal" type="Attribute" line="352"/>
                <declaration name="mods" type="ModificationItem[]" line="380"/>
            </method>
            <class name="SchemaInfo" line="387">
                <declaration name="schemaEntry" type="LdapCtx" line="388"/>
                <declaration name="schemaEntryName" type="String" line="389"/>
                <declaration name="parser" type="LdapSchemaParser" line="390"/>
                <declaration name="host" type="String" line="391"/>
                <declaration name="port" type="int" line="392"/>
                <declaration name="hasLdapsScheme" type="boolean" line="393"/>
                <method name="SchemaInfo" type="constructor" line="396">
                    <params>
                        <param name="schemaEntryName" type="String"/>
                        <param name="schemaEntry" type="LdapCtx"/>
                        <param name="parser" type="LdapSchemaParser"/>
                    </params>
                </method>
                <method name="close" type="void" line="405">
                    <scope line="406"/>
                </method>
                <method name="reopenEntry" type="LdapCtx" line="412">
                    <params>
                        <param name="env" type="Hashtable"/>
                    </params>
                    <comment line="414">
                        Use subschemasubentry name as DN                        
                    </comment>
                </method>
                <method name="modifyAttributes" type="void" line="419">
                    <params>
                        <param name="env" type="Hashtable"/>
                        <param name="mods" type="ModificationItem[]"/>
                    </params>
                    <scope line="420"/>
                </method>
                <method name="modifyAttributes" type="void" line="427">
                    <params>
                        <param name="env" type="Hashtable"/>
                        <param name="mod" type="int"/>
                        <param name="attrs" type="Attributes"/>
                    </params>
                    <scope line="428"/>
                </method>
            </class>
        </class>
    </source>