<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jndi.ldap">
        <import package="javax.naming"/>
        <import package="javax.naming.directory"/>
        <import package="javax.naming.spi"/>
        <import package="javax.naming.event"/>
        <import package="javax.naming.ldap"/>
        <import package="javax.naming.ldap.LdapName"/>
        <import package="javax.naming.ldap.Rdn"/>
        <import package="java.util.Vector"/>
        <import package="java.util.Hashtable"/>
        <import package="java.util.List"/>
        <import package="java.util.StringTokenizer"/>
        <import package="java.util.Enumeration"/>
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="com.sun.jndi.toolkit.ctx"/>
        <import package="com.sun.jndi.toolkit.dir.HierMemDirCtx"/>
        <import package="com.sun.jndi.toolkit.dir.SearchFilter"/>
        <import package="com.sun.jndi.ldap.ext.StartTlsResponseImpl"/>
        <class name="LdapCtx" line="50">
            <extends class="ComponentDirContext"/>
            <comment line="95">
                Used to store arguments to the search method.                
            </comment>
            <comment line="117">
                -----------------  Constants  -----------------                
            </comment>
            <comment line="125">
                always deref                
            </comment>
            <comment line="131">
                Used by LdapPoolManager                
            </comment>
            <comment line="133">
                use Sun&apos;s SSL                
            </comment>
            <comment line="137">
                schema operational and user attributes                
            </comment>
            <comment line="141">
                --------------- Environment property names ----------                
            </comment>
            <comment line="143">
                LDAP protocol version: &quot;2&quot;, &quot;3&quot;                
            </comment>
            <comment line="146">
                Binary-valued attributes. Space separated string of attribute names.                
            </comment>
            <comment line="150">
                Delete old RDN during modifyDN: &quot;true&quot;, &quot;false&quot;                
            </comment>
            <comment line="153">
                De-reference aliases: &quot;never&quot;, &quot;searching&quot;, &quot;finding&quot;, &quot;always&quot;                
            </comment>
            <comment line="156">
                Return only attribute types (no values)                
            </comment>
            <comment line="159">
                Separator character for encoding Reference&apos;s RefAddrs; default is &apos;#&apos;                
            </comment>
            <comment line="162">
                Socket factory                
            </comment>
            <comment line="165">
                Bind Controls (used by LdapReferralException)                
            </comment>
            <comment line="171">
                trace BER (java.io.OutputStream)                
            </comment>
            <comment line="174">
                Get around Netscape Schema Bugs                
            </comment>
            <comment line="177">
                deprecated                
            </comment>
            <comment line="179">
                for backward compatability                
            </comment>
            <comment line="181">
                Timeout for socket connect                
            </comment>
            <comment line="185">
                Timeout for reading responses                
            </comment>
            <comment line="189">
                Environment property for connection pooling                
            </comment>
            <comment line="192">
                Environment property for the domain name (derived from this context&apos;s DN)                
            </comment>
            <comment line="195">
                Block until the first search reply is received                
            </comment>
            <comment line="199">
                Size of the queue of unprocessed search replies                
            </comment>
            <comment line="203">
                ----------------- Fields that don&apos;t change -----------------------                
            </comment>
            <comment line="206">
                controls that Provider needs                
            </comment>
            <comment line="218">
                ------------ Package private instance variables ----------------
                 Cannot be private; used by enums                
            </comment>
            <comment line="221">
                ------- Inherited by derived context instances                
            </comment>
            <comment line="223">
                port number of server                
            </comment>
            <comment line="224">
                host name of server (no brackets
                   for IPv6 literals)                
            </comment>
            <comment line="226">
                connection handle                
            </comment>
            <comment line="227">
                environment properties of context                
            </comment>
            <comment line="228">
                how referral is handled                
            </comment>
            <comment line="229">
                true if the context was created
                  using an LDAPS URL.                
            </comment>
            <comment line="232">
                ------- Not inherited by derived context instances                
            </comment>
            <comment line="234">
                DN of this context                
            </comment>
            <comment line="235">
                DN of this context                
            </comment>
            <comment line="236">
                Response controls read                
            </comment>
            <comment line="237">
                Controls to be sent with each request                
            </comment>
            <comment line="240">
                ------------- Private instance variables ------------------------                
            </comment>
            <comment line="242">
                ------- Inherited by derived context instances                
            </comment>
            <comment line="244">
                output stream for BER debug output                
            </comment>
            <comment line="245">
                workaround                
            </comment>
            <comment line="246">
                Controls to be sent with LDAP &quot;bind&quot;                
            </comment>
            <comment line="247">
                max referral                
            </comment>
            <comment line="248">
                schema root of this context                
            </comment>
            <comment line="249">
                batch size for search results                
            </comment>
            <comment line="250">
                delete the old RDN when modifying DN                
            </comment>
            <comment line="251">
                return attribute types (no values)                
            </comment>
            <comment line="253">
                encoding RefAddr                
            </comment>
            <comment line="255">
                attr values returned as byte[]                
            </comment>
            <comment line="256">
                no timeout value                
            </comment>
            <comment line="257">
                no timeout value                
            </comment>
            <comment line="258">
                wait for search response                
            </comment>
            <comment line="259">
                unlimited queue size                
            </comment>
            <comment line="260">
                true if SSL protocol is active                
            </comment>
            <comment line="261">
                no port number was supplied                
            </comment>
            <comment line="263">
                ------- Not inherited by derived context instances                
            </comment>
            <comment line="265">
                True if this context was created by another LdapCtx.                
            </comment>
            <comment line="266">
                see composeName()                
            </comment>
            <comment line="268">
                current referral hop count                
            </comment>
            <comment line="269">
                URL of context; see getURL()                
            </comment>
            <comment line="270">
                Event support helper for this ctx                
            </comment>
            <comment line="271">
                if there unsolicited listeners                
            </comment>
            <comment line="272">
                can share connection with other ctx                
            </comment>
            <comment line="274">
                -------------- Constructors  -----------------------------------                
            </comment>
            <comment line="371">
                --------------- Namespace Updates ---------------------
                 -- bind/rebind/unbind
                 -- rename
                 -- createSubcontext/destroySubcontext                
            </comment>
            <comment line="381">
                attrs == null
                      if obj is DirContext, attrs = obj.getAttributes()
                 if attrs == null &amp;&amp; obj == null
                      disallow (cannot determine objectclass to use)
                 if obj == null
                      just create entry using attrs
                 else
                      objAttrs = create attributes for representing obj
                      attrs += objAttrs
                      create entry using attrs                
            </comment>
            <comment line="466">
                attrs == null
                    if obj is DirContext, attrs = obj.getAttributes().
                 if attrs == null
                    leave any existing attributes alone
                    (set attrs = {objectclass=top} if object doesn&apos;t exist)
                 else
                    replace all existing attributes with attrs
                 if obj == null
                      just create entry using attrs
                 else
                      objAttrs = create attributes for representing obj
                      attrs += objAttrs
                      create entry using attrs                
            </comment>
            <comment line="993">
                Append the the second Vector onto the first Vector
                 (v2 must be non-null)                
            </comment>
            <comment line="1008">
                ------------- Lookups and Browsing -------------------------
                 lookup/lookupLink
                 list/listBindings                
            </comment>
            <comment line="1241">
                --------------- Name-related Methods -----------------------
                 -- getNameParser/getNameInNamespace/composeName                
            </comment>
            <comment line="1304">
                used by LdapSearchEnumeration                
            </comment>
            <comment line="1315">
                --------------- Reading and Updating Attributes
                 getAttributes/modifyAttributes                
            </comment>
            <comment line="1534">
                ------------------- Schema -----------------------                
            </comment>
            <comment line="1587">
                getSchemaTree first looks to see if we have already built a
                 schema tree for the given entry. If not, it builds a new one and
                 stores it in our private hash table                
            </comment>
            <comment line="1606">
                buildSchemaTree builds the schema tree corresponding to the
                 given subschemasubentree                
            </comment>
            <comment line="1648">
                getSchemaEntree returns the DN of the subschemasubentree for the
                 given entree. It first looks to see if the given entry has
                 a subschema different from that of the root DIT (by looking for
                 a &quot;subschemasubentry&quot; attribute). If it doesn&apos;t find one, it returns
                 the one for the root of the DIT (by looking for the root&apos;s
                 &quot;subschemasubentry&quot; attribute).
                
                 This function is called regardless of the server&apos;s version, since
                 an administrator may have setup the server to support client schema
                 queries. If this function trys a serarch on a v2 server that
                 doesn&apos;t support schema, one of these two things will happen:
                 1) It will get an exception when querying the root DSE
                 2) It will not find a subschemasubentry on the root DSE
                 If either of these things occur and the server is not v3, we
                 throw OperationNotSupported.
                
                 the relative flag tells whether the given name is relative to this
                 context.                
            </comment>
            <comment line="1720">
                package-private; used by search enum.
                 Set attributes to point to this context in case some one
                 asked for their schema                
            </comment>
            <comment line="1730">
                Returns the URL associated with this context; used by LdapAttribute
                 after deserialization to get pointer to this context.                
            </comment>
            <comment line="1743">
                --------------------- Searches -----------------------------                
            </comment>
            <comment line="1793">
                Used by NamingNotifier                
            </comment>
            <comment line="1928">
                Perform a search. Expect 1 SearchResultEntry and the SearchResultDone.                
            </comment>
            <comment line="2011">
                Certain simple JNDI searches are automatically converted to
                 LDAP compare operations by the LDAP service provider. A search
                 is converted to a compare iff:
                
                    - the scope is set to OBJECT_SCOPE
                    - the filter string contains a simple assertion: &quot;&lt;type&gt;=&lt;value&gt;&quot;
                    - the returning attributes list is present but empty                
            </comment>
            <comment line="2021">
                returns true if a search can be caried out as a compare, and sets
                 tokens[0] and tokens[1] to the type and value respectively.
                 e.g. filter &quot;cn=Jon Ruiz&quot; becomes, type &quot;cn&quot; and value &quot;Jon Ruiz&quot;
                 This function uses the documents JNDI Compare example as a model
                 for when to turn a search into a compare.                
            </comment>
            <comment line="2052">
                If the supplied filter is a simple assertion i.e. &quot;&lt;type&gt;=&lt;value&gt;&quot;
                 (enclosing parentheses are permitted) then
                 filterToAssertion will return true and pass the type and value as
                 the first and second elements of tokens respectively.
                 precondition: tokens[] must be initialized and be at least of size 2.                
            </comment>
            <comment line="2142">
                -------------- Environment Properties ------------------                
            </comment>
            <comment line="2456">
                For counting referral hops                
            </comment>
            <comment line="2511">
                Extract URLs from a string. The format of the string is:
                
                     &lt;urlstring &gt; ::= &quot;Referral:&quot; &lt;ldapurls&gt;
                     &lt;ldapurls&gt;   ::= &lt;separator&gt; &lt;ldapurl&gt; | &lt;ldapurls&gt;
                     &lt;separator&gt;  ::= ASCII linefeed character (0x0a)
                     &lt;ldapurl&gt;    ::= LDAP URL format (RFC 1959)                
            </comment>
            <comment line="2545">
                Argument is a space-separated list of attribute IDs
                 Converts attribute IDs to lowercase before adding to built-in list.                
            </comment>
            <comment line="2563">
                ----------------- Connection  ---------------------                
            </comment>
            <comment line="2810">
                Used by Enum classes to track whether it still needs context                
            </comment>
            <comment line="2833">
                ------------ Return code and Error messages  -----------------------                
            </comment>
            <comment line="3197">
                ----------------- Extensions and Controls -------------------                
            </comment>
            <comment line="3367">
                -------------------- Events ------------------------                
            </comment>
            <comment line="3368">
                Access to eventSupport need not be synchronized even though the
                 Connection thread can access it asynchronously. It is
                 impossible for a race condition to occur because
                 eventSupport.addNamingListener() must have been called before
                 the Connection thread can call back to this ctx.                
            </comment>
            <comment line="3463">
                ------------------ Unsolicited Notification ---------------
                 package private methods for handling unsolicited notification                
            </comment>
            <implements interface="EventDirContext"/>
            <implements interface="LdapContext"/>
            <javadoc line="50">
                The LDAP context implementation.
                  Implementation is not thread-safe. Caller must sync as per JNDI spec.
                  Members that are used directly or indirectly by internal worker threads
                  (Connection, EventQueue, NamingEventNotifier) must be thread-safe.
                  Connection - calls LdapClient.processUnsolicited(), which in turn calls
                  LdapCtx.convertControls() and LdapCtx.fireUnsolicited().
                  convertControls() - no sync; reads envprops and &apos;this&apos;
                  fireUnsolicited() - sync on eventSupport for all references to &apos;unsolicited&apos;
                  (even those in other methods);  don&apos;t sync on LdapCtx in case caller
                  is already sync&apos;ing on it - this would prevent Unsol events from firing
                  and the Connection thread to block (thus preventing any other data
                  from being read from the connection)
                  References to &apos;eventSupport&apos; need not be sync&apos;ed because these
                  methods can only be called after eventSupport has been set first
                  (via addNamingListener()).
                  EventQueue - no direct or indirect calls to LdapCtx
                  NamingEventNotifier - calls newInstance() to get instance for run() to use;
                  no sync needed for methods invoked on new instance;
                  LdapAttribute links to LdapCtx in order to process getAttributeDefinition()
                  and getAttributeSyntaxDefinition() calls. It invokes LdapCtx.getSchema(),
                  which uses schemaTrees (a Hashtable - already sync). Potential conflict
                  of duplicating construction of tree for same subschemasubentry
                  but no inconsistency problems.
                  NamingEnumerations link to LdapCtx for the following:
                  1. increment/decrement enum count so that ctx doesn&apos;t close the
                  underlying connection
                  2. LdapClient handle to get next batch of results
                  3. Sets LdapCtx&apos;s response controls
                  4. Process return code
                  5. For narrowing response controls (using ctx&apos;s factories)
                  Since processing of NamingEnumeration by client is treated the same as method
                  invocation on LdapCtx, caller is responsible for locking.                
                <author>
                    Vincent Ryan                    
                </author>
                <author>
                    Rosanna Lee                    
                </author>
            </javadoc>
            <class name="SearchArgs" line="97">
                <comment line="102">
                    those attributes originally requested                    
                </comment>
                <comment line="252">
                    de-reference alias entries during searching                    
                </comment>
                <declaration name="name" type="Name" line="98"/>
                <declaration name="filter" type="String" line="99"/>
                <declaration name="cons" type="SearchControls" line="100"/>
                <declaration name="reqAttrs" type="String[]" line="101"/>
                <method name="SearchArgs" type="constructor" line="103">
                    <params>
                        <param name="name" type="Name"/>
                        <param name="filter" type="String"/>
                        <param name="cons" type="SearchControls"/>
                        <param name="ra" type="String[]"/>
                    </params>
                </method>
            </class>
            <declaration name="debug" type="boolean" line="111"/>
            <declaration name="HARD_CLOSE" type="boolean" line="113"/>
            <declaration name="SOFT_CLOSE" type="boolean" line="114"/>
            <declaration name="DEFAULT_PORT" type="int" line="118"/>
            <declaration name="DEFAULT_SSL_PORT" type="int" line="119"/>
            <declaration name="DEFAULT_HOST" type="String" line="120"/>
            <declaration name="DEFAULT_DELETE_RDN" type="boolean" line="122"/>
            <declaration name="DEFAULT_TYPES_ONLY" type="boolean" line="123"/>
            <declaration name="DEFAULT_DEREF_ALIASES" type="int" line="124"/>
            <declaration name="DEFAULT_LDAP_VERSION" type="int" line="125"/>
            <declaration name="DEFAULT_BATCH_SIZE" type="int" line="126"/>
            <declaration name="DEFAULT_REFERRAL_MODE" type="int" line="127"/>
            <declaration name="DEFAULT_REF_SEPARATOR" type="char" line="128"/>
            <declaration name="DEFAULT_SSL_FACTORY" type="String" line="131"/>
            <declaration name="DEFAULT_REFERRAL_LIMIT" type="int" line="133"/>
            <declaration name="STARTTLS_REQ_OID" type="String" line="134"/>
            <declaration name="SCHEMA_ATTRIBUTES" type="String[]" line="137"/>
            <declaration name="VERSION" type="String" line="143"/>
            <declaration name="BINARY_ATTRIBUTES" type="String" line="146"/>
            <declaration name="DELETE_RDN" type="String" line="150"/>
            <declaration name="DEREF_ALIASES" type="String" line="153"/>
            <declaration name="TYPES_ONLY" type="String" line="156"/>
            <declaration name="REF_SEPARATOR" type="String" line="159"/>
            <declaration name="SOCKET_FACTORY" type="String" line="162"/>
            <declaration name="BIND_CONTROLS" type="String" line="165"/>
            <declaration name="REFERRAL_LIMIT" type="String" line="167"/>
            <declaration name="TRACE_BER" type="String" line="171"/>
            <declaration name="NETSCAPE_SCHEMA_BUG" type="String" line="174"/>
            <declaration name="OLD_NETSCAPE_SCHEMA_BUG" type="String" line="177"/>
            <declaration name="CONNECT_TIMEOUT" type="String" line="181"/>
            <declaration name="READ_TIMEOUT" type="String" line="185"/>
            <declaration name="ENABLE_POOL" type="String" line="189"/>
            <declaration name="DOMAIN_NAME" type="String" line="192"/>
            <declaration name="WAIT_FOR_REPLY" type="String" line="195"/>
            <declaration name="REPLY_QUEUE_SIZE" type="String" line="199"/>
            <declaration name="parser" type="NameParser" line="203"/>
            <declaration name="myResponseControlFactory" type="ControlFactory" line="206"/>
            <declaration name="manageReferralControl" type="Control" line="208"/>
            <declaration name="EMPTY_SCHEMA" type="HierMemDirCtx" line="211"/>
            <scope line="212"/>
            <declaration name="port_number" type="int" line="222"/>
            <declaration name="hostname" type="String" line="223"/>
            <declaration name="clnt" type="LdapClient" line="225"/>
            <declaration name="envprops" type="Hashtable" line="226"/>
            <declaration name="handleReferrals" type="int" line="227"/>
            <declaration name="hasLdapsScheme" type="boolean" line="228"/>
            <declaration name="currentDN" type="String" line="233"/>
            <declaration name="currentParsedDN" type="Name" line="234"/>
            <declaration name="respCtls" type="Vector" line="235"/>
            <declaration name="reqCtls" type="Control[]" line="236"/>
            <declaration name="trace" type="OutputStream" line="243"/>
            <declaration name="netscapeSchemaBug" type="boolean" line="244"/>
            <declaration name="bindCtls" type="Control[]" line="245"/>
            <declaration name="referralHopLimit" type="int" line="246"/>
            <declaration name="schemaTrees" type="Hashtable" line="247"/>
            <declaration name="batchSize" type="int" line="248"/>
            <declaration name="deleteRDN" type="boolean" line="249"/>
            <declaration name="typesOnly" type="boolean" line="250"/>
            <declaration name="derefAliases" type="int" line="251"/>
            <declaration name="addrEncodingSeparator" type="char" line="252"/>
            <declaration name="binaryAttrs" type="Hashtable" line="254"/>
            <declaration name="connectTimeout" type="int" line="255"/>
            <declaration name="readTimeout" type="int" line="256"/>
            <declaration name="waitForReply" type="boolean" line="257"/>
            <declaration name="replyQueueSize" type="int" line="258"/>
            <declaration name="useSsl" type="boolean" line="259"/>
            <declaration name="useDefaultPortNumber" type="boolean" line="260"/>
            <declaration name="parentIsLdapCtx" type="boolean" line="265"/>
            <declaration name="hopCount" type="int" line="267"/>
            <declaration name="url" type="String" line="268"/>
            <declaration name="eventSupport" type="EventSupport" line="269"/>
            <declaration name="unsolicited" type="boolean" line="270"/>
            <declaration name="sharable" type="boolean" line="271"/>
            <method name="LdapCtx" type="constructor" line="276">
                <params>
                    <param name="dn" type="String"/>
                    <param name="host" type="String"/>
                    <param name="port_number" type="int"/>
                    <param name="props" type="Hashtable"/>
                    <param name="useSsl" type="boolean"/>
                </params>
                <comment line="284">
                    SSL env prop overrides the useSsl argument                    
                </comment>
                <comment line="289">
                    %%% These are only examined when the context is created
                     %%% because they are only for debugging or workaround purposes.                    
                </comment>
                <comment line="322">
                    Nothing                    
                </comment>
                <scope line="280">
                    <scope line="284"/>
                    <scope line="293"/>
                </scope>
                <scope line="302"/>
                <scope line="306"/>
                <scope line="308"/>
                <scope line="315"/>
                <scope line="317">
                    <scope line="318"/>
                    <scope line="320"/>
                </scope>
            </method>
            <method name="LdapCtx" type="constructor" line="327">
                <params>
                    <param name="existing" type="LdapCtx"/>
                    <param name="newDN" type="String"/>
                </params>
                <comment line="352">
                    inherit these debugging/workaround flags                    
                </comment>
                <scope line="335"/>
                <scope line="337"/>
            </method>
            <method name="newInstance" type="LdapContext" line="358">
                <params>
                    <param name="reqCtls" type="Control[]"/>
                </params>
                <comment line="363">
                    Connection controls are inherited from environment                    
                </comment>
                <comment line="365">
                    Set clone&apos;s request controls
                     setRequestControls() will clone reqCtls                    
                </comment>
                <declaration name="clone" type="LdapContext" line="360"/>
            </method>
            <method name="c_bind" type="void" line="376">
                <params>
                    <param name="name" type="Name"/>
                    <param name="obj" type="Object"/>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="c_bind" type="void" line="394">
                <params>
                    <param name="name" type="Name"/>
                    <param name="obj" type="Object"/>
                    <param name="attrs" type="Attributes"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="399">
                    Attributes supplied by caller                    
                </comment>
                <comment line="410">
                    not cloned                    
                </comment>
                <comment line="418">
                    retrieve response controls                    
                </comment>
                <comment line="428">
                    process the referrals sequentially                    
                </comment>
                <comment line="434">
                    repeat the original operation at the new context                    
                </comment>
                <comment line="445">
                    Make sure we close referral context                    
                </comment>
                <declaration name="inputAttrs" type="Attributes" line="398"/>
                <scope line="399">
                    <scope line="402">
                        <scope line="403"/>
                    </scope>
                    <scope line="407"/>
                    <declaration name="newDN" type="String" line="412"/>
                    <declaration name="entry" type="LdapEntry" line="414"/>
                    <declaration name="answer" type="LdapResult" line="416"/>
                    <scope line="419"/>
                </scope>
                <scope line="423">
                    <scope line="428">
                        <declaration name="refCtx" type="LdapReferralContext" line="430"/>
                        <scope line="434"/>
                        <scope line="439"/>
                        <scope line="443"/>
                    </scope>
                </scope>
                <scope line="449">
                    <declaration name="e2" type="NamingException" line="450"/>
                </scope>
                <scope line="454"/>
            </method>
            <method name="c_rebind" type="void" line="460">
                <params>
                    <param name="name" type="Name"/>
                    <param name="obj" type="Object"/>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="c_rebind" type="void" line="481">
                <params>
                    <param name="name" type="Name"/>
                    <param name="obj" type="Object"/>
                    <param name="attrs" type="Attributes"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="491">
                    Check if name is bound                    
                </comment>
                <comment line="496">
                    Name not bound, just add it                    
                </comment>
                <comment line="502">
                    there&apos;s an object there already, need to figure out
                     what to do about its attributes                    
                </comment>
                <comment line="511">
                    we&apos;re not changing any attrs, leave old attributes alone                    
                </comment>
                <comment line="513">
                    Remove Java-related object classes from objectclass attribute                    
                </comment>
                <comment line="518">
                    clone so that keepAttrs is not affected                    
                </comment>
                <comment line="524">
                    update;                    
                </comment>
                <comment line="528">
                    remove all Java-related attributes except objectclass                    
                </comment>
                <comment line="542">
                    remove entry                    
                </comment>
                <comment line="544">
                    retrieve response controls                    
                </comment>
                <comment line="555">
                    add it back using updated attrs                    
                </comment>
                <comment line="569">
                    Attempt to restore old entry                    
                </comment>
                <comment line="581">
                    Rethrow exception                    
                </comment>
                <comment line="592">
                    process the referrals sequentially                    
                </comment>
                <comment line="598">
                    repeat the original operation at the new context                    
                </comment>
                <comment line="609">
                    Make sure we close referral context                    
                </comment>
                <declaration name="inputAttrs" type="Attributes" line="485"/>
                <scope line="487">
                    <declaration name="origAttrs" type="Attributes" line="488"/>
                    <scope line="491"/>
                    <scope line="493"/>
                    <scope line="496"/>
                    <scope line="504"/>
                    <declaration name="keepAttrs" type="Attributes" line="507"/>
                    <scope line="509">
                        <declaration name="origObjectClass" type="Attribute" line="513"/>
                        <scope line="516">
                            <scope line="519"/>
                        </scope>
                        <scope line="528"/>
                    </scope>
                    <scope line="534"/>
                    <declaration name="newDN" type="String" line="540"/>
                    <declaration name="answer" type="LdapResult" line="542"/>
                    <scope line="545"/>
                    <declaration name="addEx" type="Exception" line="550"/>
                    <scope line="551">
                        <declaration name="entry" type="LdapEntry" line="555"/>
                        <scope line="557"/>
                    </scope>
                    <scope line="560"/>
                    <scope line="562"/>
                    <scope line="567">
                        <declaration name="answer2" type="LdapResult" line="569"/>
                        <scope line="571"/>
                        <scope line="575"/>
                    </scope>
                    <scope line="581"/>
                    <scope line="583"/>
                </scope>
                <scope line="587">
                    <scope line="592">
                        <declaration name="refCtx" type="LdapReferralContext" line="594"/>
                        <scope line="598"/>
                        <scope line="603"/>
                        <scope line="607"/>
                    </scope>
                </scope>
                <scope line="613">
                    <declaration name="e2" type="NamingException" line="614"/>
                </scope>
                <scope line="618"/>
            </method>
            <method name="c_unbind" type="void" line="624">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="633">
                    retrieve response controls                    
                </comment>
                <comment line="645">
                    process the referrals sequentially                    
                </comment>
                <comment line="651">
                    repeat the original operation at the new context                    
                </comment>
                <comment line="662">
                    Make sure we close referral context                    
                </comment>
                <scope line="627">
                    <declaration name="fname" type="String" line="630"/>
                    <declaration name="answer" type="LdapResult" line="631"/>
                    <scope line="636"/>
                </scope>
                <scope line="640">
                    <scope line="645">
                        <declaration name="refCtx" type="LdapReferralContext" line="647"/>
                        <scope line="651"/>
                        <scope line="656"/>
                        <scope line="660"/>
                    </scope>
                </scope>
                <scope line="666">
                    <declaration name="e2" type="NamingException" line="667"/>
                </scope>
                <scope line="671"/>
            </method>
            <method name="c_rename" type="void" line="678">
                <params>
                    <param name="oldName" type="Name"/>
                    <param name="newName" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="685">
                    assert (oldName instanceOf CompositeName);                    
                </comment>
                <comment line="692">
                    permit oldName to be empty (for processing referral contexts)                    
                </comment>
                <comment line="696">
                    extract DN &amp; parse                    
                </comment>
                <comment line="701">
                    extract DN &amp; parse                    
                </comment>
                <comment line="703">
                    CompoundName/LdapName is already parsed                    
                </comment>
                <comment line="724">
                    retrieve response controls                    
                </comment>
                <comment line="732">
                    Record the new RDN (for use after the referral is followed).                    
                </comment>
                <comment line="735">
                    Cannot continue when a referral has been received and a
                     newSuperior name was supplied (because the newSuperior is
                     relative to a naming context BEFORE the referral is followed).                    
                </comment>
                <comment line="749">
                    process the referrals sequentially                    
                </comment>
                <comment line="755">
                    repeat the original operation at the new context                    
                </comment>
                <comment line="766">
                    Make sure we close referral context                    
                </comment>
                <declaration name="oldParsed" type="Name" line="679"/>
                <declaration name="oldParent" type="Name" line="680"/>
                <declaration name="newRDN" type="String" line="681"/>
                <declaration name="newSuperior" type="String" line="682"/>
                <scope line="688">
                    <scope line="692"/>
                    <scope line="694"/>
                    <scope line="699"/>
                    <scope line="701"/>
                    <scope line="706">
                        <scope line="707"/>
                        <scope line="711"/>
                    </scope>
                    <declaration name="answer" type="LdapResult" line="718"/>
                    <scope line="725"/>
                </scope>
                <scope line="729">
                    <scope line="737">
                        <declaration name="pre" type="PartialResultException" line="738"/>
                    </scope>
                    <scope line="749">
                        <declaration name="refCtx" type="LdapReferralContext" line="751"/>
                        <scope line="755"/>
                        <scope line="760"/>
                        <scope line="764"/>
                    </scope>
                </scope>
                <scope line="770">
                    <declaration name="e2" type="NamingException" line="771"/>
                </scope>
                <scope line="775"/>
            </method>
            <method name="c_createSubcontext" type="Context" line="781">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="c_createSubcontext" type="DirContext" line="787">
                <params>
                    <param name="name" type="Name"/>
                    <param name="attrs" type="Attributes"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="795">
                    add structural objectclass; name needs to have &quot;cn&quot;                    
                </comment>
                <comment line="800">
                    case ignore                    
                </comment>
                <comment line="809">
                    retrieve response controls                    
                </comment>
                <comment line="816">
                    creation successful, get back live object                    
                </comment>
                <comment line="823">
                    process the referrals sequentially                    
                </comment>
                <comment line="829">
                    repeat the original operation at the new context                    
                </comment>
                <comment line="839">
                    Make sure we close referral context                    
                </comment>
                <declaration name="inputAttrs" type="Attributes" line="790"/>
                <scope line="791">
                    <scope line="793">
                        <declaration name="oc" type="Attribute" line="795"/>
                    </scope>
                    <declaration name="newDN" type="String" line="802"/>
                    <declaration name="entry" type="LdapEntry" line="805"/>
                    <declaration name="answer" type="LdapResult" line="807"/>
                    <scope line="810"/>
                </scope>
                <scope line="818">
                    <scope line="823">
                        <declaration name="refCtx" type="LdapReferralContext" line="825"/>
                        <scope line="829"/>
                        <scope line="833"/>
                        <scope line="837"/>
                    </scope>
                </scope>
                <scope line="843">
                    <declaration name="e2" type="NamingException" line="844"/>
                </scope>
                <scope line="848"/>
            </method>
            <method name="c_destroySubcontext" type="void" line="854">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="863">
                    retrieve response controls                    
                </comment>
                <comment line="875">
                    process the referrals sequentially                    
                </comment>
                <comment line="881">
                    repeat the original operation at the new context                    
                </comment>
                <comment line="890">
                    Make sure we close referral context                    
                </comment>
                <scope line="857">
                    <declaration name="fname" type="String" line="860"/>
                    <declaration name="answer" type="LdapResult" line="861"/>
                    <scope line="866"/>
                </scope>
                <scope line="870">
                    <scope line="875">
                        <declaration name="refCtx" type="LdapReferralContext" line="877"/>
                        <scope line="881"/>
                        <scope line="885"/>
                        <scope line="888"/>
                    </scope>
                </scope>
                <scope line="893">
                    <declaration name="e2" type="NamingException" line="894"/>
                </scope>
                <scope line="897"/>
            </method>
            <javadoc line="902">
                Adds attributes from RDN to attrs if not already present.
                  Note that if attrs already contains an attribute by the same name,
                  or if the distinguished name is empty, then leave attrs unchanged.                
                <param>
                    dn The non-null DN of the entry to add                    
                </param>
                <param>
                    attrs The non-null attributes of entry to add                    
                </param>
                <param>
                    directUpdate Whether attrs can be updated directly                    
                </param>
                <returns>
                    Non-null attributes with attributes from the RDN added                    
                </returns>
            </javadoc>
            <method name="addRdnAttributes" type="Attributes" line="913">
                <params>
                    <param name="dn" type="String"/>
                    <param name="attrs" type="Attributes"/>
                    <param name="directUpdate" type="boolean"/>
                </params>
                <comment line="916">
                    Handle the empty name                    
                </comment>
                <comment line="921">
                    Parse string name into list of RDNs
                    List&lt;Rdn&gt; rdnList = (new LdapName(dn)).rdns();                    
                </comment>
                <comment line="925">
                    Get leaf RDN
                    Rdn rdn = rdnList.get(rdnList.size() - 1);                    
                </comment>
                <comment line="930">
                    Add attributes of RDN to attrs if not already there                    
                </comment>
                <comment line="936">
                    If attrs already has the attribute, don&apos;t change or add to it                    
                </comment>
                <comment line="939">
                    When attrs.isCaseIgnored() is false, attrs.get() will
                     return null when the case mis-matches for otherwise
                     equal attrIDs.
                     As the attrIDs&apos; case is irrelevant for LDAP, ignore
                     the case of attrIDs even when attrs.isCaseIgnored() is
                     false. This is done by explicitly comparing the elements in
                     the enumeration of IDs with their case ignored.                    
                </comment>
                <scope line="916"/>
                <declaration name="rdnList" type="List" line="922"/>
                <declaration name="rdn" type="Rdn" line="926"/>
                <declaration name="nameAttrs" type="Attributes" line="927"/>
                <declaration name="enum_" type="NamingEnumeration" line="930"/>
                <declaration name="nameAttr" type="Attribute" line="931"/>
                <scope line="932">
                    <scope line="936">
                        <scope line="948"/>
                        <scope line="952"/>
                    </scope>
                </scope>
            </method>
            <method name="containsIgnoreCase" type="boolean" line="965">
                <params>
                    <param name="enumStr" type="NamingEnumeration"/>
                    <param name="str" type="String"/>
                </params>
                <declaration name="strEntry" type="String" line="966"/>
                <scope line="968">
                    <scope line="970"/>
                </scope>
            </method>
            <method name="adjustDeleteStatus" type="void" line="978">
                <params>
                    <param name="fname" type="String"/>
                    <param name="answer" type="LdapResult"/>
                </params>
                <comment line="983">
                    %%% RL: are there any implications for referrals?                    
                </comment>
                <scope line="980">
                    <scope line="981">
                        <declaration name="orig" type="Name" line="984"/>
                        <declaration name="matched" type="Name" line="985"/>
                    </scope>
                    <scope line="988"/>
                </scope>
            </method>
            <method name="appendVector" type="Vector" line="996">
                <params>
                    <param name="v1" type="Vector"/>
                    <param name="v2" type="Vector"/>
                </params>
                <scope line="997"/>
                <scope line="999">
                    <scope line="1000"/>
                </scope>
            </method>
            <method name="c_lookupLink" type="Object" line="1012">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="c_lookup" type="Object" line="1017">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="1026">
                    ask for all attributes                    
                </comment>
                <comment line="1027">
                    need values to construct obj                    
                </comment>
                <comment line="1030">
                    retrieve response controls                    
                </comment>
                <comment line="1032">
                    should get back 1 SearchResponse and 1 SearchResult                    
                </comment>
                <comment line="1039">
                    found it but got no attributes                    
                </comment>
                <comment line="1045">
                    retrieve entry controls                    
                </comment>
                <comment line="1047">
                    concatenate controls                    
                </comment>
                <comment line="1052">
                    serialized object or object reference                    
                </comment>
                <comment line="1062">
                    process the referrals sequentially                    
                </comment>
                <comment line="1067">
                    repeat the original operation at the new context                    
                </comment>
                <comment line="1077">
                    Make sure we close referral context                    
                </comment>
                <declaration name="obj" type="Object" line="1019"/>
                <declaration name="attrs" type="Attributes" line="1020"/>
                <scope line="1022">
                    <declaration name="cons" type="SearchControls" line="1023"/>
                    <declaration name="answer" type="LdapResult" line="1028"/>
                    <scope line="1033"/>
                    <scope line="1037"/>
                    <scope line="1040">
                        <declaration name="entry" type="LdapEntry" line="1041"/>
                        <declaration name="entryCtls" type="Vector" line="1044"/>
                        <scope line="1045"/>
                    </scope>
                    <scope line="1050"/>
                    <scope line="1054"/>
                </scope>
                <scope line="1057">
                    <scope line="1062">
                        <declaration name="refCtx" type="LdapReferralContext" line="1064"/>
                        <scope line="1067"/>
                        <scope line="1071"/>
                        <scope line="1075"/>
                    </scope>
                </scope>
                <scope line="1081"/>
                <scope line="1085"/>
                <scope line="1089"/>
                <scope line="1092">
                    <declaration name="e2" type="NamingException" line="1093"/>
                </scope>
            </method>
            <method name="c_list" type="NamingEnumeration" line="1101">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="1110">
                    set this flag to override the typesOnly flag                    
                </comment>
                <comment line="1120">
                    list result may contain continuation references                    
                </comment>
                <comment line="1132">
                    process the referrals sequentially                    
                </comment>
                <comment line="1138">
                    repeat the original operation at the new context                    
                </comment>
                <comment line="1148">
                    Make sure we close referral context                    
                </comment>
                <declaration name="cons" type="SearchControls" line="1102"/>
                <declaration name="classAttrs" type="String[]" line="1103"/>
                <declaration name="answer" type="LdapResult" line="1114"/>
                <scope line="1116">
                    <scope line="1121"/>
                </scope>
                <scope line="1127">
                    <scope line="1132">
                        <declaration name="refCtx" type="LdapReferralContext" line="1134"/>
                        <scope line="1138"/>
                        <scope line="1142"/>
                        <scope line="1146"/>
                    </scope>
                </scope>
                <scope line="1152">
                    <declaration name="res" type="LdapNamingEnumeration" line="1153"/>
                </scope>
                <scope line="1160">
                    <declaration name="res" type="LdapNamingEnumeration" line="1161"/>
                </scope>
                <scope line="1168"/>
            </method>
            <method name="c_listBindings" type="NamingEnumeration" line="1174">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="1178">
                    ask for all attributes                    
                </comment>
                <comment line="1179">
                    need values to construct obj                    
                </comment>
                <comment line="1188">
                    listBindings result may contain continuation references                    
                </comment>
                <comment line="1200">
                    process the referrals sequentially                    
                </comment>
                <comment line="1206">
                    repeat the original operation at the new context                    
                </comment>
                <comment line="1216">
                    Make sure we close referral context                    
                </comment>
                <declaration name="cons" type="SearchControls" line="1176"/>
                <declaration name="answer" type="LdapResult" line="1182"/>
                <scope line="1184">
                    <scope line="1189"/>
                </scope>
                <scope line="1195">
                    <scope line="1200">
                        <declaration name="refCtx" type="LdapReferralContext" line="1202"/>
                        <scope line="1206"/>
                        <scope line="1210"/>
                        <scope line="1214"/>
                    </scope>
                </scope>
                <scope line="1219">
                    <declaration name="res" type="LdapBindingEnumeration" line="1220"/>
                </scope>
                <scope line="1227">
                    <declaration name="res" type="LdapBindingEnumeration" line="1228"/>
                </scope>
                <scope line="1235"/>
            </method>
            <method name="c_getNameParser" type="NameParser" line="1245">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="1247">
                    ignore name, always return same parser                    
                </comment>
            </method>
            <method name="getNameInNamespace" type="String" line="1251"/>
            <method name="composeName" type="Name" line="1257">
                <params>
                    <param name="name" type="Name"/>
                    <param name="prefix" type="Name"/>
                </params>
                <comment line="1261">
                    Handle compound names.  A pair of LdapNames is an easy case.                    
                </comment>
                <declaration name="result" type="Name" line="1258"/>
                <scope line="1261"/>
                <scope line="1266"/>
                <scope line="1269"/>
                <declaration name="prefixLast" type="int" line="1273"/>
                <scope line="1276"/>
                <scope line="1283">
                    <declaration name="ldapComp" type="String" line="1284"/>
                </scope>
            </method>
            <method name="fullyQualifiedName" type="String" line="1293">
                <params>
                    <param name="rel" type="Name"/>
                </params>
            </method>
            <method name="fullyQualifiedName" type="String" line="1299">
                <params>
                    <param name="rel" type="String"/>
                </params>
            </method>
            <method name="concatNames" type="String" line="1304">
                <params>
                    <param name="lesser" type="String"/>
                    <param name="greater" type="String"/>
                </params>
                <scope line="1305"/>
                <scope line="1307"/>
                <scope line="1309"/>
            </method>
            <method name="c_getAttributes" type="Attributes" line="1319">
                <params>
                    <param name="name" type="Name"/>
                    <param name="attrIds" type="String[]"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="1330">
                    retrieve response controls                    
                </comment>
                <comment line="1340">
                    get attributes from result                    
                </comment>
                <comment line="1343">
                    retrieve entry controls                    
                </comment>
                <comment line="1345">
                    concatenate controls                    
                </comment>
                <comment line="1348">
                    do this so attributes can find their schema                    
                </comment>
                <comment line="1357">
                    process the referrals sequentially                    
                </comment>
                <comment line="1363">
                    repeat the original operation at the new context                    
                </comment>
                <comment line="1373">
                    Make sure we close referral context                    
                </comment>
                <declaration name="cons" type="SearchControls" line="1322"/>
                <scope line="1326">
                    <declaration name="answer" type="LdapResult" line="1327"/>
                    <scope line="1331"/>
                    <scope line="1335"/>
                    <declaration name="entry" type="LdapEntry" line="1340"/>
                    <declaration name="entryCtls" type="Vector" line="1342"/>
                    <scope line="1343"/>
                </scope>
                <scope line="1352">
                    <scope line="1357">
                        <declaration name="refCtx" type="LdapReferralContext" line="1359"/>
                        <scope line="1363"/>
                        <scope line="1367"/>
                        <scope line="1371"/>
                    </scope>
                </scope>
                <scope line="1377"/>
            </method>
            <method name="c_modifyAttributes" type="void" line="1384">
                <params>
                    <param name="name" type="Name"/>
                    <param name="mod_op" type="int"/>
                    <param name="attrs" type="Attributes"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="1393">
                    nothing to do                    
                </comment>
                <comment line="1398">
                    construct mod list                    
                </comment>
                <comment line="1409">
                    retrieve response controls                    
                </comment>
                <comment line="1420">
                    process the referrals sequentially                    
                </comment>
                <comment line="1426">
                    repeat the original operation at the new context                    
                </comment>
                <comment line="1437">
                    Make sure we close referral context                    
                </comment>
                <scope line="1388">
                    <scope line="1391"/>
                    <declaration name="newDN" type="String" line="1394"/>
                    <declaration name="jmod_op" type="int" line="1395"/>
                    <declaration name="jmods" type="int[]" line="1398"/>
                    <declaration name="jattrs" type="Attribute[]" line="1399"/>
                    <declaration name="ae" type="NamingEnumeration" line="1401"/>
                    <scope line="1402"/>
                    <declaration name="answer" type="LdapResult" line="1407"/>
                    <scope line="1410"/>
                </scope>
                <scope line="1415">
                    <scope line="1420">
                        <declaration name="refCtx" type="LdapReferralContext" line="1422"/>
                        <scope line="1426"/>
                        <scope line="1431"/>
                        <scope line="1435"/>
                    </scope>
                </scope>
                <scope line="1441">
                    <declaration name="e2" type="NamingException" line="1442"/>
                </scope>
                <scope line="1446"/>
            </method>
            <method name="c_modifyAttributes" type="void" line="1453">
                <params>
                    <param name="name" type="Name"/>
                    <param name="mods" type="ModificationItem[]"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="1461">
                    nothing to do                    
                </comment>
                <comment line="1465">
                    construct mod list                    
                </comment>
                <comment line="1476">
                    retrieve response controls                    
                </comment>
                <comment line="1486">
                    process the referrals sequentially                    
                </comment>
                <comment line="1492">
                    repeat the original operation at the new context                    
                </comment>
                <comment line="1503">
                    Make sure we close referral context                    
                </comment>
                <scope line="1456">
                    <scope line="1459"/>
                    <declaration name="newDN" type="String" line="1462"/>
                    <declaration name="jmods" type="int[]" line="1465"/>
                    <declaration name="jattrs" type="Attribute[]" line="1466"/>
                    <declaration name="mod" type="ModificationItem" line="1467"/>
                    <scope line="1468"/>
                    <declaration name="answer" type="LdapResult" line="1474"/>
                    <scope line="1477"/>
                </scope>
                <scope line="1481">
                    <scope line="1486">
                        <declaration name="refCtx" type="LdapReferralContext" line="1488"/>
                        <scope line="1492"/>
                        <scope line="1497"/>
                        <scope line="1501"/>
                    </scope>
                </scope>
                <scope line="1507">
                    <declaration name="e2" type="NamingException" line="1508"/>
                </scope>
                <scope line="1512"/>
            </method>
            <method name="convertToLdapModCode" type="int" line="1517">
                <params>
                    <param name="mod_op" type="int"/>
                </params>
            </method>
            <method name="c_getSchema" type="DirContext" line="1536">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <scope line="1538"/>
                <scope line="1541"/>
            </method>
            <method name="c_getSchemaClassDefinition" type="DirContext" line="1548">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="1553">
                    retrieve the objectClass attribute from LDAP                    
                </comment>
                <comment line="1560">
                    retrieve the root of the ObjectClass schema tree                    
                </comment>
                <comment line="1564">
                    create a context to hold the schema objects representing the object
                     classes                    
                </comment>
                <comment line="1572">
                    %%% Should we fail if not found, or just continue?                    
                </comment>
                <comment line="1577">
                    Make context read-only                    
                </comment>
                <scope line="1551">
                    <declaration name="objectClassAttr" type="Attribute" line="1553"/>
                    <scope line="1555"/>
                    <declaration name="ocSchema" type="Context" line="1560"/>
                    <declaration name="objectClassCtx" type="HierMemDirCtx" line="1565"/>
                    <declaration name="objectClassDef" type="DirContext" line="1566"/>
                    <declaration name="objectClassName" type="String" line="1567"/>
                    <scope line="1569"/>
                </scope>
                <scope line="1581"/>
            </method>
            <method name="getSchemaTree" type="DirContext" line="1591">
                <params>
                    <param name="name" type="Name"/>
                </params>
                <declaration name="subschemasubentry" type="String" line="1592"/>
                <declaration name="schemaTree" type="DirContext" line="1594"/>
                <scope line="1596">
                    <scope line="1597"/>
                </scope>
            </method>
            <method name="buildSchemaTree" type="DirContext" line="1610">
                <params>
                    <param name="subschemasubentry" type="String"/>
                </params>
                <comment line="1613">
                    get the schema entry itself
                     DO ask for return object here because we need it to
                     create context. Since asking for all attrs, we won&apos;t
                     be transmitting any specific attrIDs (like Java-specific ones).                    
                </comment>
                <comment line="1619">
                                        
                </comment>
                <comment line="1620">
                                        
                </comment>
                <comment line="1621">
                                        
                </comment>
                <comment line="1622">
                                        
                </comment>
                <comment line="1643">
                                        
                </comment>
                <comment line="1644">
                                        
                </comment>
                <declaration name="constraints" type="SearchControls" line="1616"/>
                <declaration name="sse" type="Name" line="1623"/>
                <declaration name="results" type="NamingEnumeration" line="1624"/>
                <scope line="1628"/>
                <declaration name="result" type="SearchResult" line="1632"/>
                <declaration name="obj" type="Object" line="1635"/>
                <scope line="1636"/>
            </method>
            <method name="getSchemaEntry" type="String" line="1668">
                <params>
                    <param name="name" type="Name"/>
                    <param name="relative" type="boolean"/>
                </params>
                <comment line="1671">
                    Asks for operational attribute &quot;subschemasubentry&quot;                    
                </comment>
                <comment line="1673">
                                        
                </comment>
                <comment line="1674">
                                        
                </comment>
                <comment line="1675">
                                        
                </comment>
                <comment line="1676">
                                        
                </comment>
                <comment line="1685">
                    we got an error looking for a root entry on an ldapv2
                     server. The server must not support schema.                    
                </comment>
                <comment line="1704">
                    System.err.println(&quot;schema entry attrs: &quot; + schemaEntryAttr);                    
                </comment>
                <comment line="1708">
                    the server doesn&apos;t have a subschemasubentry in its root DSE.
                     therefore, it doesn&apos;t support schema.                    
                </comment>
                <comment line="1717">
                    return schema entry name                    
                </comment>
                <declaration name="constraints" type="SearchControls" line="1671"/>
                <declaration name="results" type="NamingEnumeration" line="1677"/>
                <scope line="1678"/>
                <scope line="1682">
                    <scope line="1683"/>
                    <scope line="1688"/>
                </scope>
                <scope line="1693"/>
                <declaration name="result" type="SearchResult" line="1698"/>
                <declaration name="schemaEntryAttr" type="Attribute" line="1701"/>
                <scope line="1705">
                    <scope line="1706"/>
                    <scope line="1711"/>
                </scope>
            </method>
            <method name="setParents" type="void" line="1722">
                <params>
                    <param name="attrs" type="Attributes"/>
                    <param name="name" type="Name"/>
                </params>
                <declaration name="ae" type="NamingEnumeration" line="1723"/>
                <scope line="1724"/>
            </method>
            <method name="getURL" type="String" line="1733">
                <scope line="1734"/>
            </method>
            <method name="c_search" type="NamingEnumeration" line="1746">
                <params>
                    <param name="name" type="Name"/>
                    <param name="matchingAttributes" type="Attributes"/>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="c_search" type="NamingEnumeration" line="1754">
                <params>
                    <param name="name" type="Name"/>
                    <param name="matchingAttributes" type="Attributes"/>
                    <param name="attributesToReturn" type="String[]"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <declaration name="cons" type="SearchControls" line="1755"/>
                <declaration name="filter" type="String" line="1757"/>
                <scope line="1758"/>
                <scope line="1760"/>
            </method>
            <method name="c_search" type="NamingEnumeration" line="1771">
                <params>
                    <param name="name" type="Name"/>
                    <param name="filter" type="String"/>
                    <param name="cons" type="SearchControls"/>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="c_search" type="NamingEnumeration" line="1781">
                <params>
                    <param name="name" type="Name"/>
                    <param name="filterExpr" type="String"/>
                    <param name="filterArgs" type="Object[]"/>
                    <param name="cons" type="SearchControls"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <declaration name="strfilter" type="String" line="1782"/>
                <scope line="1783"/>
                <scope line="1785"/>
            </method>
            <method name="searchAux" type="NamingEnumeration" line="1797">
                <params>
                    <param name="name" type="Name"/>
                    <param name="filter" type="String"/>
                    <param name="cons" type="SearchControls"/>
                    <param name="relative" type="boolean"/>
                    <param name="waitForReply" type="boolean"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="1801">
                    stores ldap compare op. values                    
                </comment>
                <comment line="1802">
                    remember what was asked                    
                </comment>
                <comment line="1809">
                    if objects are requested then request the Java attributes too
                     so that the objects can be constructed                    
                </comment>
                <comment line="1814">
                    check for presence of &quot;*&quot; (user attributes wildcard)                    
                </comment>
                <comment line="1840">
                    see if this can be done as a compare, otherwise do a search                    
                </comment>
                <comment line="1842">
                    System.err.println(&quot;compare triggered&quot;);                    
                </comment>
                <comment line="1849">
                    search result may contain referrals                    
                </comment>
                <comment line="1859">
                    process the referrals sequentially                    
                </comment>
                <comment line="1865">
                    repeat the original operation at the new context                    
                </comment>
                <comment line="1875">
                    Make sure we close referral context                    
                </comment>
                <declaration name="answer" type="LdapResult" line="1799"/>
                <declaration name="tokens" type="String[]" line="1800"/>
                <declaration name="reqAttrs" type="String[]" line="1801"/>
                <scope line="1803"/>
                <scope line="1810">
                    <scope line="1811">
                        <declaration name="hasWildcard" type="boolean" line="1814"/>
                        <scope line="1815">
                            <scope line="1816"/>
                        </scope>
                        <scope line="1821">
                            <declaration name="totalAttrs" type="String[]" line="1822"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="args" type="LdapCtx.SearchArgs" line="1834"/>
                <scope line="1838">
                    <scope line="1840">
                        <scope line="1843"/>
                    </scope>
                    <scope line="1846"/>
                </scope>
                <scope line="1854">
                    <scope line="1859">
                        <declaration name="refCtx" type="LdapReferralContext" line="1861"/>
                        <scope line="1865"/>
                        <scope line="1869"/>
                        <scope line="1873"/>
                    </scope>
                </scope>
                <scope line="1879">
                    <declaration name="res" type="LdapSearchEnumeration" line="1880"/>
                </scope>
                <scope line="1886">
                    <declaration name="res" type="LdapSearchEnumeration" line="1887"/>
                </scope>
                <scope line="1894">
                    <declaration name="e2" type="NamingException" line="1895"/>
                </scope>
                <scope line="1899"/>
            </method>
            <method name="getSearchReply" type="LdapResult" line="1906">
                <params>
                    <param name="eClnt" type="LdapClient"/>
                    <param name="res" type="LdapResult"/>
                </params>
                <comment line="1908">
                    ensureOpen() won&apos;t work here because
                     session was associated with previous connection                    
                </comment>
                <comment line="1911">
                    %%% RL: we can actually allow the enumeration to continue
                     using the old handle but other weird things might happen
                     when we hit a referral                    
                </comment>
                <scope line="1913"/>
                <scope line="1918"/>
                <scope line="1920">
                    <declaration name="e2" type="NamingException" line="1921"/>
                </scope>
            </method>
            <method name="doSearchOnce" type="LdapResult" line="1929">
                <params>
                    <param name="name" type="Name"/>
                    <param name="filter" type="String"/>
                    <param name="cons" type="SearchControls"/>
                    <param name="relative" type="boolean"/>
                </params>
                <comment line="1933">
                    2 protocol elements                    
                </comment>
                <declaration name="savedBatchSize" type="int" line="1931"/>
                <declaration name="answer" type="LdapResult" line="1934"/>
            </method>
            <method name="doSearch" type="LdapResult" line="1941">
                <params>
                    <param name="name" type="Name"/>
                    <param name="filter" type="String"/>
                    <param name="cons" type="SearchControls"/>
                    <param name="relative" type="boolean"/>
                    <param name="waitForReply" type="boolean"/>
                </params>
                <comment line="1960">
                    If cons.getReturningObjFlag() then caller should already
                     have make sure to request the appropriate attrs                    
                </comment>
                <comment line="1965">
                    Ldap treats null and empty array the same
                     need to replace with single element array                    
                </comment>
                <comment line="1977">
                    JNDI unit is milliseconds, LDAP unit is seconds.
                     Zero means no limit.                    
                </comment>
                <comment line="2000">
                    retrieve response controls                    
                </comment>
                <scope line="1943">
                    <declaration name="scope" type="int" line="1944"/>
                    <declaration name="retattrs" type="String[]" line="1962"/>
                    <scope line="1963"/>
                    <declaration name="nm" type="String" line="1970"/>
                    <declaration name="msecLimit" type="int" line="1978"/>
                    <declaration name="secLimit" type="int" line="1979"/>
                    <scope line="1981"/>
                    <declaration name="answer" type="LdapResult" line="1985"/>
                </scope>
                <scope line="2002">
                    <declaration name="e2" type="NamingException" line="2003"/>
                </scope>
            </method>
            <method name="searchToCompare" type="boolean" line="2029">
                <params>
                    <param name="filter" type="String"/>
                    <param name="cons" type="SearchControls"/>
                    <param name="tokens" type="String"/>
                </params>
                <comment line="2032">
                    if scope is not object-scope, it&apos;s really a search                    
                </comment>
                <comment line="2037">
                    if attributes are to be returned, it&apos;s really a search                    
                </comment>
                <comment line="2043">
                    if the filter not a simple assertion, it&apos;s really a search                    
                </comment>
                <comment line="2048">
                    it can be converted to a compare                    
                </comment>
                <scope line="2032"/>
                <declaration name="attrs" type="String[]" line="2037"/>
                <scope line="2038"/>
                <scope line="2043"/>
            </method>
            <method name="filterToAssertion" type="boolean" line="2057">
                <params>
                    <param name="filter" type="String"/>
                    <param name="tokens" type="String"/>
                </params>
                <comment line="2060">
                    find the left and right half of the assertion                    
                </comment>
                <comment line="2070">
                    make sure the value does not contain a wildcard                    
                </comment>
                <comment line="2075">
                    test for enclosing parenthesis                    
                </comment>
                <comment line="2085">
                    unbalanced                    
                </comment>
                <comment line="2088">
                    make sure the left and right half are not expresions themselves                    
                </comment>
                <comment line="2103">
                    strip off enclosing parenthesis, if present                    
                </comment>
                <declaration name="assertionTokenizer" type="StringTokenizer" line="2060"/>
                <scope line="2062"/>
                <scope line="2070"/>
                <declaration name="hasParens" type="boolean" line="2075"/>
                <declaration name="len" type="int" line="2076"/>
                <scope line="2079"/>
                <scope line="2083"/>
                <declaration name="illegalCharsTokenizer" type="StringTokenizer" line="2088"/>
                <scope line="2091"/>
                <scope line="2098"/>
                <scope line="2103"/>
            </method>
            <method name="compare" type="LdapResult" line="2112">
                <params>
                    <param name="name" type="Name"/>
                    <param name="type" type="String"/>
                    <param name="value" type="String"/>
                </params>
                <comment line="2119">
                    retrieve response controls                    
                </comment>
                <declaration name="nm" type="String" line="2115"/>
                <declaration name="answer" type="LdapResult" line="2117"/>
            </method>
            <method name="cloneSearchControls" type="SearchControls" line="2123">
                <params>
                    <param name="cons" type="SearchControls"/>
                </params>
                <scope line="2124"/>
                <declaration name="retAttrs" type="String[]" line="2127"/>
                <scope line="2128">
                    <declaration name="attrs" type="String[]" line="2129"/>
                </scope>
            </method>
            <javadoc line="2143">
                Override with noncloning version.                
            </javadoc>
            <method name="p_getEnvironment" type="Hashtable" line="2146"/>
            <method name="getEnvironment" type="Hashtable" line="2150"/>
            <method name="removeFromEnvironment" type="Object" line="2157">
                <params>
                    <param name="propName" type="String"/>
                </params>
                <comment line="2160">
                    not there; just return                    
                </comment>
                <comment line="2190">
                    The following properties affect the connection                    
                </comment>
                <comment line="2194">
                    De-activate SSL and reset the context&apos;s url and port number                    
                </comment>
                <comment line="2211">
                    Update environment; reconnection will use new props                    
                </comment>
                <scope line="2160"/>
                <scope line="2164"/>
                <scope line="2166"/>
                <scope line="2168"/>
                <scope line="2170"/>
                <scope line="2172"/>
                <scope line="2174"/>
                <scope line="2176"/>
                <scope line="2178"/>
                <scope line="2180"/>
                <scope line="2182"/>
                <scope line="2184"/>
                <scope line="2186"/>
                <scope line="2191">
                    <scope line="2194">
                        <scope line="2197"/>
                    </scope>
                </scope>
                <scope line="2202"/>
                <scope line="2206"/>
            </method>
            <method name="addToEnvironment" type="Object" line="2216">
                <params>
                    <param name="propName" type="String"/>
                    <param name="propVal" type="Object"/>
                </params>
                <comment line="2219">
                    If adding null, call remove                    
                </comment>
                <comment line="2249">
                    The following properties affect the connection                    
                </comment>
                <comment line="2253">
                    Activate SSL and reset the context&apos;s url and port number                    
                </comment>
                <comment line="2270">
                    Update environment; reconnection will use new props                    
                </comment>
                <scope line="2219"/>
                <scope line="2223"/>
                <scope line="2225"/>
                <scope line="2227"/>
                <scope line="2229"/>
                <scope line="2231"/>
                <scope line="2233"/>
                <scope line="2235"/>
                <scope line="2237"/>
                <scope line="2239"/>
                <scope line="2241"/>
                <scope line="2243"/>
                <scope line="2245"/>
                <scope line="2250">
                    <scope line="2253">
                        <scope line="2256"/>
                    </scope>
                </scope>
                <scope line="2261"/>
                <scope line="2265"/>
            </method>
            <javadoc line="2276">
                Sets the URL that created the context in the java.naming.provider.url
                  property.                
            </javadoc>
            <method name="setProviderUrl" type="void" line="2280">
                <params>
                    <param name="providerUrl" type="String"/>
                </params>
                <comment line="2281">
                    called by LdapCtxFactory                    
                </comment>
                <scope line="2281"/>
            </method>
            <javadoc line="2286">
                Sets the domain name for the context in the com.sun.jndi.ldap.domainname
                  property.
                  Used for hostname verification by Start TLS                
            </javadoc>
            <method name="setDomainName" type="void" line="2291">
                <params>
                    <param name="domainName" type="String"/>
                </params>
                <comment line="2292">
                    called by LdapCtxFactory                    
                </comment>
                <scope line="2292"/>
            </method>
            <method name="initEnv" type="void" line="2297">
                <comment line="2300">
                    Make sure that referrals are to their default                    
                </comment>
                <comment line="2305">
                    Set batch size                    
                </comment>
                <comment line="2308">
                    Set separator used for encoding RefAddr                    
                </comment>
                <comment line="2311">
                    Set whether RDN is removed when renaming object                    
                </comment>
                <comment line="2314">
                    Set whether types are returned only                    
                </comment>
                <comment line="2317">
                    Set how aliases are dereferenced                    
                </comment>
                <comment line="2320">
                    Set the limit on referral chains                    
                </comment>
                <comment line="2327">
                    set referral handling                    
                </comment>
                <comment line="2330">
                    Set the connect timeout                    
                </comment>
                <comment line="2333">
                    Set the read timeout                    
                </comment>
                <comment line="2336">
                    Set the flag that controls whether to block until the first reply
                     is received                    
                </comment>
                <comment line="2340">
                    Set the size of the queue of unprocessed search replies                    
                </comment>
                <comment line="2343">
                    When connection is created, it will use these and other
                     properties from the environment                    
                </comment>
                <scope line="2298"/>
            </method>
            <method name="setDeleteRDN" type="void" line="2346">
                <params>
                    <param name="deleteRDNProp" type="String"/>
                </params>
                <scope line="2348"/>
                <scope line="2350"/>
            </method>
            <method name="setTypesOnly" type="void" line="2355">
                <params>
                    <param name="typesOnlyProp" type="String"/>
                </params>
                <scope line="2357"/>
                <scope line="2359"/>
            </method>
            <javadoc line="2364">
                Sets the batch size of this context;                
            </javadoc>
            <method name="setBatchSize" type="void" line="2367">
                <params>
                    <param name="batchSizeProp" type="String"/>
                </params>
                <comment line="2369">
                    set batchsize                    
                </comment>
                <scope line="2369"/>
                <scope line="2371"/>
            </method>
            <javadoc line="2376">
                Sets the referral mode of this context to &apos;follow&apos;, &apos;throw&apos; or &apos;ignore&apos;.
                  If referral mode is &apos;ignore&apos; then activate the manageReferral control.                
            </javadoc>
            <method name="setReferralMode" type="void" line="2380">
                <params>
                    <param name="ref" type="String"/>
                    <param name="update" type="boolean"/>
                </params>
                <comment line="2382">
                    First determine the referral mode                    
                </comment>
                <comment line="2399">
                    If ignoring referrals, add manageReferralControl                    
                </comment>
                <comment line="2404">
                    If we&apos;re update an existing context, remove the control                    
                </comment>
                <comment line="2407">
                    else, leave alone; need not update                    
                </comment>
                <scope line="2382">
                    <scope line="2383"/>
                    <scope line="2385"/>
                    <scope line="2387"/>
                    <scope line="2389"/>
                </scope>
                <scope line="2393"/>
                <scope line="2397"/>
                <scope line="2401"/>
            </method>
            <javadoc line="2409">
                Set whether aliases are derefereced during resolution and searches.                
            </javadoc>
            <method name="setDerefAliases" type="void" line="2412">
                <params>
                    <param name="deref" type="String"/>
                </params>
                <comment line="2416">
                    never de-reference aliases                    
                </comment>
                <comment line="2418">
                    de-reference aliases during searching                    
                </comment>
                <comment line="2420">
                    de-reference during name resolution                    
                </comment>
                <comment line="2422">
                    always de-reference aliases                    
                </comment>
                <scope line="2413">
                    <scope line="2414"/>
                    <scope line="2416"/>
                    <scope line="2418"/>
                    <scope line="2420"/>
                    <scope line="2422"/>
                </scope>
                <scope line="2426"/>
            </method>
            <method name="setRefSeparator" type="void" line="2431">
                <params>
                    <param name="sepStr" type="String"/>
                </params>
                <scope line="2432"/>
                <scope line="2434"/>
            </method>
            <javadoc line="2439">
                Sets the limit on referral chains                
            </javadoc>
            <method name="setReferralLimit" type="void" line="2442">
                <params>
                    <param name="referralLimitProp" type="String"/>
                </params>
                <comment line="2444">
                    set referral limit                    
                </comment>
                <comment line="2448">
                    a zero setting indicates no limit                    
                </comment>
                <scope line="2444"/>
                <scope line="2450"/>
            </method>
            <method name="setHopCount" type="void" line="2456">
                <params>
                    <param name="hopCount" type="int"/>
                </params>
            </method>
            <javadoc line="2460">
                Sets the connect timeout value                
            </javadoc>
            <method name="setConnectTimeout" type="void" line="2463">
                <params>
                    <param name="connectTimeoutProp" type="String"/>
                </params>
                <scope line="2464"/>
                <scope line="2466"/>
            </method>
            <javadoc line="2471">
                Sets the size of the queue of unprocessed search replies                
            </javadoc>
            <method name="setReplyQueueSize" type="void" line="2474">
                <params>
                    <param name="replyQueueSizeProp" type="String"/>
                </params>
                <comment line="2478">
                    disallow an empty queue                    
                </comment>
                <comment line="2480">
                    unlimited                    
                </comment>
                <comment line="2483">
                    unlimited                    
                </comment>
                <scope line="2475">
                    <scope line="2478"/>
                </scope>
                <scope line="2481"/>
            </method>
            <javadoc line="2486">
                Sets the flag that controls whether to block until the first search
                  reply is received                
            </javadoc>
            <method name="setWaitForReply" type="void" line="2490">
                <params>
                    <param name="waitForReplyProp" type="String"/>
                </params>
                <scope line="2492"/>
                <scope line="2494"/>
            </method>
            <javadoc line="2499">
                Sets the read timeout value                
            </javadoc>
            <method name="setReadTimeout" type="void" line="2502">
                <params>
                    <param name="readTimeoutProp" type="String"/>
                </params>
                <scope line="2503"/>
                <scope line="2505"/>
            </method>
            <method name="extractURLs" type="Vector" line="2518">
                <params>
                    <param name="refString" type="String"/>
                </params>
                <comment line="2524">
                    count the number of URLs                    
                </comment>
                <declaration name="separator" type="int" line="2520"/>
                <declaration name="urlCount" type="int" line="2521"/>
                <scope line="2524"/>
                <declaration name="referrals" type="Vector" line="2529"/>
                <declaration name="iURL" type="int" line="2530"/>
                <declaration name="i" type="int" line="2531"/>
                <scope line="2535"/>
            </method>
            <method name="setBinaryAttributes" type="void" line="2548">
                <params>
                    <param name="attrIds" type="String"/>
                </params>
                <scope line="2549"/>
                <scope line="2551">
                    <declaration name="tokens" type="StringTokenizer" line="2553"/>
                    <scope line="2556"/>
                </scope>
            </method>
            <method name="finalize" type="void" line="2564">
                <comment line="2569">
                    ignore failures                    
                </comment>
                <scope line="2565"/>
                <scope line="2567"/>
            </method>
            <method name="close" type="void" line="2572">
                <comment line="2579">
                    Event (normal and unsolicited)                    
                </comment>
                <comment line="2581">
                    idempotent                    
                </comment>
                <comment line="2585">
                    Enumerations that are keeping the connection alive                    
                </comment>
                <comment line="2594">
                    %%%: RL: There is no need to set these to null, as they&apos;re just
                     variables whose contents and references will automatically
                     be cleaned up when they&apos;re no longer referenced.
                     Also, setting these to null creates problems for the attribute
                     schema-related methods, which need these to work.                    
                </comment>
                <comment line="2599">
                    schemaTrees = null;
                    envprops = null;                    
                </comment>
                <scope line="2573"/>
                <scope line="2579"/>
                <scope line="2585"/>
            </method>
            <method name="reconnect" type="void" line="2604">
                <params>
                    <param name="connCtls" type="Control[]"/>
                </params>
                <comment line="2606">
                    Update environment                    
                </comment>
                <comment line="2618">
                    can&apos;t share with existing contexts                    
                </comment>
                <comment line="2619">
                    open or reauthenticated                    
                </comment>
                <scope line="2610"/>
                <scope line="2613"/>
            </method>
            <method name="ensureOpen" type="void" line="2621"/>
            <method name="ensureOpen" type="void" line="2625">
                <params>
                    <param name="startTLS" type="boolean"/>
                </params>
                <comment line="2634">
                    reset the cache before a new connection is established                    
                </comment>
                <comment line="2647">
                    reset the cache before a new connection is established                    
                </comment>
                <comment line="2653">
                    connection is now either new or single-use
                     OK for others to start sharing again                    
                </comment>
                <scope line="2627">
                    <scope line="2628">
                        <scope line="2629"/>
                    </scope>
                    <scope line="2637">
                        <scope line="2639">
                            <scope line="2642"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="2651"/>
            </method>
            <method name="connect" type="void" line="2657">
                <params>
                    <param name="startTLS" type="boolean"/>
                </params>
                <comment line="2661">
                    authenticating user                    
                </comment>
                <comment line="2662">
                    password for authenticating user                    
                </comment>
                <comment line="2663">
                    security protocol (e.g. &quot;ssl&quot;)                    
                </comment>
                <comment line="2664">
                    socket factory                    
                </comment>
                <comment line="2665">
                    authentication mechanism                    
                </comment>
                <comment line="2667">
                    LDAP protocol version                    
                </comment>
                <comment line="2668">
                    enable connection pooling                    
                </comment>
                <comment line="2700">
                    Whether to use connection pooling                    
                </comment>
                <comment line="2702">
                    Required for LdapClient constructor                    
                </comment>
                <comment line="2710">
                    Required for basic client identity                    
                </comment>
                <comment line="2716">
                    Required for simple client identity                    
                </comment>
                <comment line="2720">
                    Required for SASL client identity                    
                </comment>
                <comment line="2724">
                    Pooled connections are preauthenticated;
                     newly created ones are not.                    
                </comment>
                <comment line="2733">
                    no authentication required                    
                </comment>
                <comment line="2736">
                    reauthenticating over existing connection;
                     only v3 supports this                    
                </comment>
                <comment line="2744">
                    retrieve (bind) response controls                    
                </comment>
                <comment line="2748">
                    hard close                    
                </comment>
                <comment line="2761">
                    Process the referrals sequentially (top level) and
                     recursively (per referral)                    
                </comment>
                <comment line="2766">
                    No more referrals to follow                    
                </comment>
                <comment line="2771">
                    No saved exception, something must have gone wrong                    
                </comment>
                <comment line="2777">
                    Use host/port number from referral                    
                </comment>
                <comment line="2785">
                    Try to connect again using new host/port number                    
                </comment>
                <comment line="2792">
                    follow another referral                    
                </comment>
                <scope line="2658"/>
                <declaration name="user" type="String" line="2660"/>
                <declaration name="passwd" type="Object" line="2661"/>
                <declaration name="secProtocol" type="String" line="2662"/>
                <declaration name="socketFactory" type="String" line="2663"/>
                <declaration name="authMechanism" type="String" line="2664"/>
                <declaration name="ver" type="String" line="2665"/>
                <declaration name="ldapVersion" type="int" line="2666"/>
                <declaration name="usePool" type="boolean" line="2667"/>
                <scope line="2669"/>
                <scope line="2682"/>
                <scope line="2687"/>
                <scope line="2691">
                    <declaration name="initial" type="boolean" line="2692"/>
                    <scope line="2694">
                        <scope line="2727"/>
                    </scope>
                    <scope line="2731"/>
                    <scope line="2734"/>
                    <declaration name="answer" type="LdapResult" line="2740"/>
                    <scope line="2745">
                        <scope line="2746"/>
                    </scope>
                </scope>
                <scope line="2752">
                    <declaration name="referral" type="String" line="2756"/>
                    <declaration name="url" type="LdapURL" line="2757"/>
                    <declaration name="saved_ex" type="NamingException" line="2758"/>
                    <scope line="2762">
                        <scope line="2764">
                            <scope line="2767"/>
                            <scope line="2769"/>
                        </scope>
                        <scope line="2779"/>
                        <scope line="2785"/>
                        <scope line="2789"/>
                    </scope>
                </scope>
            </method>
            <method name="closeConnection" type="void" line="2797">
                <params>
                    <param name="hardclose" type="boolean"/>
                </params>
                <comment line="2799">
                    idempotent                    
                </comment>
                <scope line="2800">
                    <scope line="2801"/>
                </scope>
            </method>
            <declaration name="enumCount" type="int" line="2810"/>
            <declaration name="closeRequested" type="boolean" line="2811"/>
            <method name="incEnumCount" type="void" line="2813"/>
            <method name="decEnumCount" type="void" line="2818">
                <comment line="2827">
                    ignore failures                    
                </comment>
                <scope line="2822">
                    <scope line="2823"/>
                    <scope line="2825"/>
                </scope>
            </method>
            <method name="processReturnCode" type="void" line="2834">
                <params>
                    <param name="answer" type="LdapResult"/>
                </params>
            </method>
            <method name="processReturnCode" type="void" line="2839">
                <params>
                    <param name="answer" type="LdapResult"/>
                    <param name="remainName" type="Name"/>
                </params>
            </method>
            <method name="processReturnCode" type="void" line="2850">
                <params>
                    <param name="res" type="LdapResult"/>
                    <param name="resolvedName" type="Name"/>
                    <param name="resolvedObj" type="Object"/>
                    <param name="remainName" type="Name"/>
                    <param name="envprops" type="Hashtable"/>
                    <param name="fullDN" type="String"/>
                </params>
                <comment line="2861">
                    handle Search continuation references                    
                </comment>
                <comment line="2871">
                    handle multiple sets of URLs                    
                </comment>
                <comment line="2878">
                    make a chain of LdapReferralExceptions                    
                </comment>
                <comment line="2893">
                    append ex. to end of chain                    
                </comment>
                <comment line="2897">
                    reset                    
                </comment>
                <comment line="2911">
                    check the hop limit                    
                </comment>
                <comment line="2930">
                    only one set of URLs is present                    
                </comment>
                <comment line="2937">
                    check the hop limit                    
                </comment>
                <comment line="2949">
                    Handle SLAPD-style referrals.
                    
                     Referrals received during name resolution should be followed
                     until one succeeds - the target entry is located. An exception
                     is thrown now to handle these.
                    
                     Referrals received during a search operation point to unexplored
                     parts of the directory and each should be followed. An exception
                     is thrown later (during results enumeration) to handle these.                    
                </comment>
                <comment line="2968">
                    extract SLAPD-style referrals from errorMessage                    
                </comment>
                <comment line="2976">
                    build exception                    
                </comment>
                <comment line="2989">
                    %%%
                     SLAPD-style referrals received during name resolution
                     cannot be distinguished from those received during a
                     search operation. Since both must be handled differently
                     the following rule is applied:
                    
                         If 1 referral and 0 entries is received then
                         assume name resolution has not yet completed.                    
                </comment>
                <comment line="3004">
                    check the hop limit                    
                </comment>
                <declaration name="msg" type="String" line="2852"/>
                <declaration name="e" type="NamingException" line="2853"/>
                <declaration name="r" type="LdapReferralException" line="2854"/>
                <scope line="2861">
                    <scope line="2865"/>
                    <declaration name="contRefCount" type="int" line="2871"/>
                    <declaration name="head" type="LdapReferralException" line="2872"/>
                    <declaration name="ptr" type="LdapReferralException" line="2873"/>
                    <scope line="2878">
                        <scope line="2885"/>
                        <scope line="2889"/>
                        <scope line="2891"/>
                    </scope>
                    <scope line="2898"/>
                    <scope line="2901">
                        <scope line="2904"/>
                    </scope>
                    <scope line="2911">
                        <declaration name="lee" type="NamingException" line="2912"/>
                    </scope>
                </scope>
                <scope line="2922"/>
                <scope line="2932"/>
                <scope line="2937">
                    <declaration name="lee" type="NamingException" line="2938"/>
                </scope>
                <scope line="2943"/>
                <scope line="2962"/>
                <scope line="2968"/>
                <scope line="2970"/>
                <scope line="2985"/>
                <scope line="2999">
                    <scope line="3004">
                        <declaration name="lee" type="NamingException" line="3005"/>
                    </scope>
                    <scope line="3010"/>
                </scope>
                <scope line="3014"/>
                <scope line="3024"/>
                <scope line="3027"/>
            </method>
            <javadoc line="3042">
                Maps an LDAP error code to an appropriate NamingException.
                  %%% public; used by controls                
                <param>
                    errorCode numeric LDAP error code                    
                </param>
                <param>
                    errorMessage textual description of the LDAP error. May be null.                    
                </param>
                <return>
                    A NamingException or null if the error code indicates success.                    
                </return>
            </javadoc>
            <method name="mapErrorCode" type="NamingException" line="3052">
                <params>
                    <param name="errorCode" type="int"/>
                    <param name="errorMessage" type="String"/>
                </params>
                <comment line="3127">
                    %%% need new exception ?                    
                </comment>
                <comment line="3167">
                    these are really not exceptions and this code probably
                     never gets executed                    
                </comment>
                <declaration name="e" type="NamingException" line="3057"/>
                <declaration name="message" type="String" line="3058"/>
            </method>
            <method name="extendedOperation" type="ExtendedResponse" line="3199">
                <params>
                    <param name="request" type="ExtendedRequest"/>
                </params>
                <comment line="3210">
                    retrieve response controls                    
                </comment>
                <comment line="3215">
                    %%% verify request.getID() == answer.extensionId                    
                </comment>
                <comment line="3226">
                    Pass the connection handle to StartTlsResponseImpl                    
                </comment>
                <comment line="3238">
                    process the referrals sequentially                    
                </comment>
                <comment line="3244">
                    repeat the original operation at the new context                    
                </comment>
                <comment line="3254">
                    Make sure we close referral context                    
                </comment>
                <declaration name="startTLS" type="boolean" line="3201"/>
                <scope line="3204">
                    <declaration name="answer" type="LdapResult" line="3206"/>
                    <scope line="3211"/>
                    <declaration name="len" type="int" line="3216"/>
                    <declaration name="er" type="ExtendedResponse" line="3220"/>
                    <scope line="3224">
                        <declaration name="domainName" type="String" line="3226"/>
                    </scope>
                </scope>
                <scope line="3232">
                    <scope line="3238">
                        <declaration name="refCtx" type="LdapReferralContext" line="3240"/>
                        <scope line="3244"/>
                        <scope line="3248"/>
                        <scope line="3252"/>
                    </scope>
                </scope>
                <scope line="3258">
                    <declaration name="e2" type="NamingException" line="3259"/>
                </scope>
            </method>
            <method name="setRequestControls" type="void" line="3265">
                <params>
                    <param name="reqCtls" type="Control[]"/>
                </params>
                <scope line="3266"/>
                <scope line="3268"/>
            </method>
            <method name="getRequestControls" type="Control[]" line="3273"/>
            <method name="getConnectControls" type="Control[]" line="3277"/>
            <method name="getResponseControls" type="Control[]" line="3281"/>
            <javadoc line="3285">
                Narrow controls using own default factory and ControlFactory.                
                <param>
                    ctls A non-null Vector                    
                </param>
            </javadoc>
            <method name="convertControls" type="Control[]" line="3289">
                <params>
                    <param name="ctls" type="Vector"/>
                </params>
                <comment line="3300">
                    Try own factory first                    
                </comment>
                <comment line="3304">
                    Try assigned factories if own produced null                    
                </comment>
                <declaration name="count" type="int" line="3290"/>
                <scope line="3292"/>
                <declaration name="controls" type="Control[]" line="3296"/>
                <scope line="3298">
                    <scope line="3304"/>
                </scope>
            </method>
            <method name="addControl" type="Control[]" line="3312">
                <params>
                    <param name="prevCtls" type="Control[]"/>
                    <param name="addition" type="Control"/>
                </params>
                <comment line="3318">
                    Find it                    
                </comment>
                <comment line="3321">
                    no need to do it again                    
                </comment>
                <scope line="3313"/>
                <declaration name="found" type="int" line="3318"/>
                <scope line="3319"/>
                <declaration name="newCtls" type="Control[]" line="3323"/>
            </method>
            <method name="findControl" type="int" line="3329">
                <params>
                    <param name="ctls" type="Control[]"/>
                    <param name="target" type="Control"/>
                </params>
                <scope line="3330">
                    <scope line="3331"/>
                </scope>
            </method>
            <method name="removeControl" type="Control[]" line="3338">
                <params>
                    <param name="prevCtls" type="Control[]"/>
                    <param name="target" type="Control"/>
                </params>
                <comment line="3344">
                    Find it                    
                </comment>
                <comment line="3347">
                    not there                    
                </comment>
                <comment line="3350">
                    Remove it                    
                </comment>
                <scope line="3339"/>
                <declaration name="found" type="int" line="3344"/>
                <scope line="3345"/>
                <declaration name="newCtls" type="Control[]" line="3350"/>
            </method>
            <method name="cloneControls" type="Control[]" line="3357">
                <params>
                    <param name="ctls" type="Control[]"/>
                </params>
                <scope line="3358"/>
                <declaration name="copiedCtls" type="Control[]" line="3361"/>
            </method>
            <method name="addNamingListener" type="void" line="3375">
                <params>
                    <param name="nm" type="Name"/>
                    <param name="scope" type="int"/>
                    <param name="l" type="NamingListener"/>
                </params>
            </method>
            <method name="addNamingListener" type="void" line="3380">
                <params>
                    <param name="nm" type="String"/>
                    <param name="scope" type="int"/>
                    <param name="l" type="NamingListener"/>
                </params>
                <comment line="3387">
                    If first time asking for unsol                    
                </comment>
                <scope line="3387"/>
            </method>
            <method name="removeNamingListener" type="void" line="3392">
                <params>
                    <param name="l" type="NamingListener"/>
                </params>
                <comment line="3395">
                    no activity before, so just return                    
                </comment>
                <comment line="3399">
                    If removing an Unsol listener and it is the last one, let clnt know                    
                </comment>
                <scope line="3400"/>
            </method>
            <method name="addNamingListener" type="void" line="3406">
                <params>
                    <param name="nm" type="String"/>
                    <param name="filter" type="String"/>
                    <param name="ctls" type="SearchControls"/>
                    <param name="l" type="NamingListener"/>
                </params>
                <comment line="3413">
                    If first time asking for unsol                    
                </comment>
                <scope line="3413"/>
            </method>
            <method name="addNamingListener" type="void" line="3419">
                <params>
                    <param name="nm" type="Name"/>
                    <param name="filter" type="String"/>
                    <param name="ctls" type="SearchControls"/>
                    <param name="l" type="NamingListener"/>
                </params>
            </method>
            <method name="addNamingListener" type="void" line="3424">
                <params>
                    <param name="nm" type="Name"/>
                    <param name="filter" type="String"/>
                    <param name="filterArgs" type="Object[]"/>
                    <param name="ctls" type="SearchControls"/>
                    <param name="l" type="NamingListener"/>
                </params>
            </method>
            <method name="addNamingListener" type="void" line="3429">
                <params>
                    <param name="nm" type="String"/>
                    <param name="filterExpr" type="String"/>
                    <param name="filterArgs" type="Object[]"/>
                    <param name="ctls" type="SearchControls"/>
                    <param name="l" type="NamingListener"/>
                </params>
                <declaration name="strfilter" type="String" line="3430"/>
            </method>
            <method name="targetMustExist" type="boolean" line="3434"/>
            <javadoc line="3438">
                Retrieves the target name for which the listener is registering.
                  If nm is a CompositeName, use its first and only component. It
                  cannot have more than one components because a target be outside of
                  this namespace. If nm is not a CompositeName, then treat it as a
                  compound name.                
                <param>
                    nm The non-null target name.                    
                </param>
            </javadoc>
            <method name="getTargetName" type="String" line="3446">
                <params>
                    <param name="nm" type="Name"/>
                </params>
                <comment line="3458">
                    treat as compound name                    
                </comment>
                <scope line="3447">
                    <scope line="3448"/>
                    <scope line="3451"/>
                    <scope line="3453"/>
                </scope>
                <scope line="3456"/>
            </method>
            <javadoc line="3465">
                Registers this context with the underlying LdapClient.
                  When the underlying LdapClient receives an unsolicited notification,
                  it will invoke LdapCtx.fireUnsolicited() so that this context
                  can (using EventSupport) notified any registered listeners.
                  This method is called by EventSupport when an unsolicited listener
                  first registers with this context (should be called just once).                
                <see>
                    #removeUnsolicited                    
                </see>
                <see>
                    #fireUnsolicited                    
                </see>
            </javadoc>
            <method name="addUnsolicited" type="void" line="3475">
                <comment line="3481">
                    addNamingListener must have created EventSupport already                    
                </comment>
                <scope line="3476"/>
                <scope line="3482"/>
            </method>
            <javadoc line="3488">
                Removes this context from registering interest in unsolicited
                  notifications from the underlying LdapClient. This method is called
                  under any one of the following conditions:
                  &lt;ul&gt;
                  &lt;li&gt;All unsolicited listeners have been removed. (see removingNamingListener)
                  &lt;li&gt;This context is closed.
                  &lt;li&gt;This context&apos;s underlying LdapClient changes.
                  &lt;/ul&gt;
                  After this method has been called, this context will not pass
                  on any events related to unsolicited notifications to EventSupport and
                  and its listeners.                
            </javadoc>
            <method name="removeUnsolicited" type="void" line="3502">
                <comment line="3511">
                    addNamingListener must have created EventSupport already                    
                </comment>
                <scope line="3503"/>
                <scope line="3506"/>
                <scope line="3511">
                    <scope line="3512"/>
                </scope>
            </method>
            <javadoc line="3519">
                Uses EventSupport to fire an event related to an unsolicited notification.
                  Called by LdapClient when LdapClient receives an unsolicited notification.                
            </javadoc>
            <method name="fireUnsolicited" type="void" line="3523">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <comment line="3528">
                    addNamingListener must have created EventSupport already                    
                </comment>
                <comment line="3535">
                    No need to notify clnt because clnt is the
                     only one that can fire a NamingException to
                     unsol listeners and it will handle its own cleanup                    
                </comment>
                <scope line="3524"/>
                <scope line="3528">
                    <scope line="3529">
                        <scope line="3532"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>