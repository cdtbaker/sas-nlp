<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jndi.toolkit.ctx">
        <import package="javax.naming"/>
        <import package="javax.naming.spi.ResolveResult"/>
        <class name="AtomicContext" line="31">
            <extends class="ComponentContext"/>
            <comment line="53">
                ------ Abstract methods whose implementation are provided by subclasses                
            </comment>
            <comment line="56">
                                
            </comment>
            <comment line="81">
                                
            </comment>
            <comment line="94">
                ------ Methods that need to be overridden by subclass                
            </comment>
            <comment line="96">
                                
            </comment>
            <comment line="168">
                                
            </comment>
            <comment line="170">
                The following methods are called when the DirContext methods                
            </comment>
            <comment line="171">
                are invoked with a name that has a trailing slash.                
            </comment>
            <comment line="172">
                For naming systems that support implicit nns,                
            </comment>
            <comment line="173">
                the trailing slash signifies the implicit nns.                
            </comment>
            <comment line="174">
                For such naming systems, override these a_*_nns methods.                
            </comment>
            <comment line="175">
                                
            </comment>
            <comment line="176">
                For naming systems that support junctions (explicit nns),                
            </comment>
            <comment line="177">
                the trailing slash is meaningless because a junction does not                
            </comment>
            <comment line="178">
                have an implicit nns.  The default implementation here                
            </comment>
            <comment line="179">
                throws a NameNotFoundException for such names.                
            </comment>
            <comment line="180">
                If a context wants to accept a trailing slash as having                
            </comment>
            <comment line="181">
                the same meaning as the same name without a trailing slash,                
            </comment>
            <comment line="182">
                then it should override these a_*_nns methods.                
            </comment>
            <comment line="251">
                ------ implementations of c_  and c_*_nns methods using                
            </comment>
            <comment line="252">
                ------ the corresponding a_ and a_*_nns methods                
            </comment>
            <comment line="254">
                                
            </comment>
            <comment line="338">
                The following are overridden only for AtomicContexts.
                 AtomicContext is used by PartialCompositeDirContext and ComponentDirContext
                 in the inheritance tree to make use of methods in
                 PartialCompositeContext and ComponentContext. We only want to use the
                 atomic forms when we&apos;re actually an atomic context.                
            </comment>
            <comment line="345">
                                
            </comment>
            <comment line="365">
                                
            </comment>
            <comment line="497">
                --------------    internal methods used by this class                
            </comment>
            <comment line="499">
                                
            </comment>
            <comment line="560">
                                
            </comment>
            <javadoc line="31">
                Clients: deal only with names for its own naming service
                  and deals with single contexts that can be built up into
                  hierarchical naming systems.
                  Direct subclasses of AtomicContext must provide implementations for
                  the abstract a_ Context methods, and c_parseComponent().
                  If the subclass implements the notion of implicit nns,
                  it must override the a__nns Context methods as well.                
                <author>
                    Rosanna Lee                    
                </author>
            </javadoc>
            <declaration name="debug" type="int" line="46"/>
            <method name="AtomicContext" type="constructor" line="48"/>
            <method name="a_lookup" type="Object" line="56"/>
            <method name="a_lookupLink" type="Object" line="58"/>
            <method name="a_list" type="NamingEnumeration" line="61"/>
            <method name="a_listBindings" type="NamingEnumeration" line="63"/>
            <method name="a_bind" type="void" line="65"/>
            <method name="a_rebind" type="void" line="67"/>
            <method name="a_unbind" type="void" line="69"/>
            <method name="a_destroySubcontext" type="void" line="71"/>
            <method name="a_createSubcontext" type="Context" line="73"/>
            <method name="a_rename" type="void" line="75"/>
            <method name="a_getNameParser" type="NameParser" line="77"/>
            <method name="c_parseComponent" type="StringHeadTail" line="81"/>
            <javadoc line="81">
                Parse &apos;inputName&apos; into two parts:
                  head: the first component in this name
                  tail: the rest of the unused name.
                  Subclasses should provide an implementation for this method
                  which parses inputName using its own name syntax.                
            </javadoc>
            <javadoc line="96">
                Resolves the nns for &apos;name&apos; when the named context is acting
                  as an intermediate context.
                  For a system that supports junctions, this would be equilvalent to
                  a_lookup(name, cont);
                  because for junctions, an intermediate slash simply signifies
                  a syntactic separator.
                  For a system that supports implicit nns, this would be equivalent to
                  a_lookup_nns(name, cont);
                  because for implicit nns, a slash always signifies the implicit nns,
                  regardless of whether it is intermediate or trailing.
                  By default this method supports junctions, and also allows for an
                  implicit nns to be dynamically determined through the use of the
                  &quot;nns&quot; reference (see a_processJunction_nns()).
                  Contexts that implement implicit nns directly should provide an
                  appropriate override.                
            </javadoc>
            <method name="a_resolveIntermediate_nns" type="Object" line="117">
                <params>
                    <param name="name" type="String"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="121">
                    Do not append &quot;&quot; to Continuation &apos;cont&apos; even if set                    
                </comment>
                <comment line="122">
                    because the intention is to ignore the nns                    
                </comment>
                <comment line="124">
                                        
                </comment>
                <comment line="126">
                    If &quot;obj&quot; is in the same type as this object, it must                    
                </comment>
                <comment line="127">
                    not be a junction. Continue the lookup with &quot;/&quot;.                    
                </comment>
                <comment line="133">
                    obj is not even a context, so try to find its nns                    
                </comment>
                <comment line="134">
                    dynamically by constructing a Reference containing obj.                    
                </comment>
                <comment line="144">
                    Resolved name has trailing slash to indicate nns                    
                </comment>
                <comment line="147">
                    add trailing slash                    
                </comment>
                <comment line="149">
                    Set continuation leave it to                    
                </comment>
                <comment line="150">
                    PartialCompositeContext.getPCContext() to throw CPE.                    
                </comment>
                <comment line="151">
                    Do not use setContinueNNS() because we&apos;ve already                    
                </comment>
                <comment line="152">
                    consumed &quot;/&quot; (i.e., moved it to resName).                    
                </comment>
                <comment line="162">
                    add nns back                    
                </comment>
                <scope line="118">
                    <declaration name="obj" type="Object" line="119"/>
                    <scope line="125"/>
                    <scope line="132">
                        <anonymous_class line="135">
                            <method name="getContent" type="Object" line="136"/>
                            <declaration name="serialVersionUID" type="long" line="139"/>
                        </anonymous_class>
                        <declaration name="addr" type="RefAddr" line="135"/>
                        <declaration name="ref" type="Reference" line="142"/>
                        <declaration name="resName" type="CompositeName" line="145"/>
                    </scope>
                    <scope line="157"/>
                </scope>
                <scope line="161"/>
            </method>
            <method name="a_lookup_nns" type="Object" line="185">
                <params>
                    <param name="name" type="String"/>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="a_lookupLink_nns" type="Object" line="191">
                <params>
                    <param name="name" type="String"/>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="a_list_nns" type="NamingEnumeration" line="197">
                <params>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="a_listBindings_nns" type="NamingEnumeration" line="202">
                <params>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="a_bind_nns" type="void" line="208">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="a_rebind_nns" type="void" line="213">
                <params>
                    <param name="name" type="String"/>
                    <param name="obj" type="Object"/>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="a_unbind_nns" type="void" line="218">
                <params>
                    <param name="name" type="String"/>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="a_createSubcontext_nns" type="Context" line="223">
                <params>
                    <param name="name" type="String"/>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="a_destroySubcontext_nns" type="void" line="229">
                <params>
                    <param name="name" type="String"/>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="a_rename_nns" type="void" line="234">
                <params>
                    <param name="oldname" type="String"/>
                    <param name="newname" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="a_getNameParser_nns" type="NameParser" line="239">
                <params>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="isEmpty" type="boolean" line="246">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="c_lookup" type="Object" line="256">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <declaration name="ret" type="Object" line="257"/>
                <scope line="258">
                    <scope line="260"/>
                </scope>
            </method>
            <method name="c_lookupLink" type="Object" line="269">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <scope line="270"/>
            </method>
            <method name="c_list" type="NamingEnumeration" line="277">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <scope line="278"/>
            </method>
            <method name="c_listBindings" type="NamingEnumeration" line="285">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <scope line="286"/>
            </method>
            <method name="c_bind" type="void" line="293">
                <params>
                    <param name="name" type="Name"/>
                    <param name="obj" type="Object"/>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="c_rebind" type="void" line="299">
                <params>
                    <param name="name" type="Name"/>
                    <param name="obj" type="Object"/>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="c_unbind" type="void" line="305">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="c_destroySubcontext" type="void" line="311">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="c_createSubcontext" type="Context" line="317">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="c_rename" type="void" line="325">
                <params>
                    <param name="oldname" type="Name"/>
                    <param name="newname" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="c_getNameParser" type="NameParser" line="331">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
            </method>
            <method name="c_resolveIntermediate_nns" type="Object" line="347">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="359">
                    use ComponentContext                    
                </comment>
                <scope line="348">
                    <declaration name="ret" type="Object" line="349"/>
                    <scope line="350">
                        <scope line="352"/>
                    </scope>
                </scope>
                <scope line="358"/>
            </method>
            <method name="c_lookup_nns" type="Object" line="367">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <scope line="368">
                    <declaration name="ret" type="Object" line="369"/>
                    <scope line="370">
                        <scope line="372"/>
                    </scope>
                </scope>
                <scope line="378"/>
            </method>
            <method name="c_lookupLink_nns" type="Object" line="384">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="386">
                    %%% check logic                    
                </comment>
                <comment line="390">
                    use ComponentContext                    
                </comment>
                <scope line="385"/>
                <scope line="389"/>
            </method>
            <method name="c_list_nns" type="NamingEnumeration" line="396">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="401">
                    use ComponentContext                    
                </comment>
                <scope line="397"/>
                <scope line="400"/>
            </method>
            <method name="c_listBindings_nns" type="NamingEnumeration" line="407">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="412">
                    use ComponentContext                    
                </comment>
                <scope line="408"/>
                <scope line="411"/>
            </method>
            <method name="c_bind_nns" type="void" line="418">
                <params>
                    <param name="name" type="Name"/>
                    <param name="obj" type="Object"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="423">
                    use ComponentContext                    
                </comment>
                <scope line="419"/>
                <scope line="422"/>
            </method>
            <method name="c_rebind_nns" type="void" line="429">
                <params>
                    <param name="name" type="Name"/>
                    <param name="obj" type="Object"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="434">
                    use ComponentContext                    
                </comment>
                <scope line="430"/>
                <scope line="433"/>
            </method>
            <method name="c_unbind_nns" type="void" line="440">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="445">
                    use ComponentContext                    
                </comment>
                <scope line="441"/>
                <scope line="444"/>
            </method>
            <method name="c_createSubcontext_nns" type="Context" line="451">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="458">
                    use ComponentContext                    
                </comment>
                <scope line="452"/>
                <scope line="457"/>
            </method>
            <method name="c_destroySubcontext_nns" type="void" line="464">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="469">
                    use ComponentContext                    
                </comment>
                <scope line="465"/>
                <scope line="468"/>
            </method>
            <method name="c_rename_nns" type="void" line="475">
                <params>
                    <param name="oldname" type="Name"/>
                    <param name="newname" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="480">
                    use ComponentContext                    
                </comment>
                <scope line="476"/>
                <scope line="479"/>
            </method>
            <method name="c_getNameParser_nns" type="NameParser" line="486">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="491">
                    use COmponentContext                    
                </comment>
                <scope line="487"/>
                <scope line="490"/>
            </method>
            <javadoc line="499">
                This function is used when implementing a naming system that
                  supports junctions.  For example, when the a_bind_nns(name, newobj)
                  method is invoked, that means the caller is attempting to bind the
                  object &apos;newobj&apos; to the nns of &apos;name&apos;.  For context that supports
                  junctions, &apos;name&apos; names a junction and is pointing to the root
                  of another naming system, which in turn might have an nns.
                  This means that a_bind_nns() should first resolve &apos;name&apos; and attempt to
                  continue the operation in the context named by &apos;name&apos;.  (i.e. bind
                  to the nns of the context named by &apos;name&apos;).
                  If name is already empty, then throw NameNotFoundException because
                  this context by default does not have any nns.                
            </javadoc>
            <method name="a_processJunction_nns" type="void" line="513">
                <params>
                    <param name="name" type="String"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="520">
                    lookup name to continue operation in nns                    
                </comment>
                <comment line="523">
                    add nns back                    
                </comment>
                <comment line="528">
                    add nns back                    
                </comment>
                <scope line="514">
                    <declaration name="e" type="NameNotFoundException" line="515"/>
                </scope>
                <scope line="519">
                    <declaration name="target" type="Object" line="521"/>
                    <scope line="524"/>
                </scope>
                <scope line="527"/>
            </method>
            <javadoc line="533">
                This function is used when implementing a naming system that
                  supports junctions.  For example, when the a_list_nns(newobj)
                  method is invoked, that means the caller is attempting to list the
                  the nns context of of this context.  For a context that supports
                  junctions, it by default does not have any nns.  Consequently,
                  a NameNotFoundException is thrown.                
            </javadoc>
            <method name="a_processJunction_nns" type="void" line="541">
                <params>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="543">
                    Construct a new Reference that contains this context.                    
                </comment>
                <comment line="552">
                    Set continuation leave it to PartialCompositeContext.getPCContext()                    
                </comment>
                <comment line="553">
                    to throw the exception.                    
                </comment>
                <comment line="554">
                    Do not use setContinueNNS() because we&apos;ve are                    
                </comment>
                <comment line="555">
                    setting relativeResolvedName to &quot;/&quot;.                    
                </comment>
                <anonymous_class line="544">
                    <method name="getContent" type="Object" line="545"/>
                    <declaration name="serialVersionUID" type="long" line="548"/>
                </anonymous_class>
                <declaration name="addr" type="RefAddr" line="544"/>
                <declaration name="ref" type="Reference" line="550"/>
            </method>
            <javadoc line="561">
                Resolve to context named by &apos;name&apos;.
                  Returns true if at named context (i.e. &apos;name&apos; is empty name).
                  Returns false otherwise, and sets Continuation on parts of &apos;name&apos;
                  not yet resolved.                
            </javadoc>
            <method name="resolve_to_context" type="boolean" line="567">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="580">
                    something is wrong; no name at all                    
                </comment>
                <comment line="585">
                    if there is head is a non-empty name                    
                </comment>
                <comment line="586">
                    this means more resolution to be done                    
                </comment>
                <comment line="589">
                    System.out.println(&quot;answer &quot; + headCtx);                    
                </comment>
                <comment line="599">
                    clear                    
                </comment>
                <declaration name="target" type="String" line="568"/>
                <declaration name="ht" type="StringHeadTail" line="571"/>
                <declaration name="tail" type="String" line="572"/>
                <declaration name="head" type="String" line="573"/>
                <scope line="579">
                    <declaration name="e" type="InvalidNameException" line="581"/>
                </scope>
                <scope line="584">
                    <scope line="587">
                        <declaration name="headCtx" type="Object" line="588"/>
                    </scope>
                    <scope line="594"/>
                </scope>
                <scope line="598"/>
            </method>
            <javadoc line="605">
                Resolves to penultimate context named by &apos;name&apos;.
                  Returns true if penultimate context has been reached (i.e. name
                  only has one atomic component left).
                  Returns false otherwise, and sets Continuation to parts of name
                  not yet resolved.                
            </javadoc>
            <method name="resolve_to_penultimate_context" type="boolean" line="613">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="623">
                    something is wrong; no name at all                    
                </comment>
                <comment line="629">
                    more components; hence not at penultimate context yet                    
                </comment>
                <comment line="641">
                    already at penultimate context                    
                </comment>
                <comment line="642">
                    clear                    
                </comment>
                <declaration name="target" type="String" line="614"/>
                <declaration name="ht" type="StringHeadTail" line="619"/>
                <declaration name="tail" type="String" line="620"/>
                <declaration name="head" type="String" line="621"/>
                <scope line="622">
                    <declaration name="e" type="InvalidNameException" line="624"/>
                </scope>
                <scope line="628">
                    <scope line="630">
                        <declaration name="headCtx" type="Object" line="631"/>
                    </scope>
                    <scope line="636"/>
                </scope>
                <scope line="640"/>
            </method>
            <javadoc line="648">
                This function is similar to resolve_to_penultimate_context()
                  except it should only be called by the nns() functions.
                  This function fixes any exception or continuations so that
                  it will have the proper nns name.                
            </javadoc>
            <method name="resolve_to_penultimate_context_nns" type="boolean" line="656">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="662">
                    resolve_to_penultimate_context() only calls a_lookup().                    
                </comment>
                <comment line="663">
                    Any continuation it sets is lacking the nns, so                    
                </comment>
                <comment line="664">
                    we need to add it back                    
                </comment>
                <comment line="670">
                    resolve_to_penultimate_context() only calls a_lookup().                    
                </comment>
                <comment line="671">
                    Any exceptions it throws is lacking the nns, so                    
                </comment>
                <comment line="672">
                    we need to add it back.                    
                </comment>
                <scope line="657">
                    <declaration name="answer" type="boolean" line="660"/>
                </scope>
                <scope line="669"/>
            </method>
            <javadoc line="678">
                Resolves to nns associated with &apos;name&apos; and set Continuation
                  to the result.                
            </javadoc>
            <method name="resolve_to_nns_and_continue" type="void" line="683">
                <params>
                    <param name="name" type="Name"/>
                    <param name="cont" type="Continuation"/>
                </params>
                <scope line="687">
                    <declaration name="nns" type="Object" line="688"/>
                </scope>
            </method>
        </class>
    </source>