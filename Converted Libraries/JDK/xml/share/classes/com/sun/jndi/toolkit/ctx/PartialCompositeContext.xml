<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jndi.toolkit.ctx">
        <import package="java.util.Hashtable"/>
        <import package="java.util.Enumeration"/>
        <import package="javax.naming"/>
        <import package="javax.naming.spi.Resolver"/>
        <import package="javax.naming.spi.ResolveResult"/>
        <import package="javax.naming.spi.NamingManager"/>
        <class name="PartialCompositeContext" line="36">
            <comment line="77">
                ------ Abstract methods whose implementations come from subclasses                
            </comment>
            <comment line="79">
                                
            </comment>
            <comment line="83">
                                
            </comment>
            <comment line="108">
                ------ should be overridden by subclass;                
            </comment>
            <comment line="109">
                ------ not abstract only for backward compatibility                
            </comment>
            <comment line="124">
                ------ implementations of methods in Resolver and Context                
            </comment>
            <comment line="125">
                ------ using corresponding p_ methods provided by subclass                
            </comment>
            <comment line="127">
                                
            </comment>
            <comment line="164">
                                
            </comment>
            <comment line="491">
                ------ internal methods used by PartialCompositeContext                
            </comment>
            <implements interface="Context"/>
            <implements interface="Resolver"/>
            <javadoc line="36">
                PartialCompositeContext implements Context operations on
                  composite names using implementations of the p_ interfaces
                  defined by its subclasses.
                  The main purpose provided by this class is that it deals with
                  partial resolutions and continuations, so that callers of the
                  Context operation don&apos;t have to.
                  Types of clients that will be direct subclasses of
                  PartialCompositeContext may be service providers that implement
                  one of the JNDI protocols, but which do not deal with
                  continuations.  Usually, service providers will be using
                  one of the subclasses of PartialCompositeContext.                
                <author>
                    Rosanna Lee                    
                </author>
            </javadoc>
            <declaration name="_PARTIAL" type="int" line="56"/>
            <declaration name="_COMPONENT" type="int" line="57"/>
            <declaration name="_ATOMIC" type="int" line="58"/>
            <declaration name="_contextType" type="int" line="60"/>
            <declaration name="_EMPTY_NAME" type="CompositeName" line="62"/>
            <declaration name="_NNS_NAME" type="CompositeName" line="63"/>
            <scope line="65">
                <scope line="66"/>
                <scope line="68"/>
            </scope>
            <method name="PartialCompositeContext" type="constructor" line="73"/>
            <method name="p_resolveToClass" type="ResolveResult" line="79"/>
            <method name="p_lookup" type="Object" line="83"/>
            <method name="p_lookupLink" type="Object" line="85"/>
            <method name="p_list" type="NamingEnumeration" line="87"/>
            <method name="p_listBindings" type="NamingEnumeration" line="89"/>
            <method name="p_bind" type="void" line="91"/>
            <method name="p_rebind" type="void" line="93"/>
            <method name="p_unbind" type="void" line="95"/>
            <method name="p_destroySubcontext" type="void" line="97"/>
            <method name="p_createSubcontext" type="Context" line="99"/>
            <method name="p_rename" type="void" line="101"/>
            <method name="p_getNameParser" type="NameParser" line="104"/>
            <javadoc line="110">
                A cheap way of getting the environment.
                  Default implemenation is NOT cheap because it simply calls
                  getEnvironment(), which most implementations clone before returning.
                  Subclass should ALWAYS override this with the cheapest possible way.
                  The toolkit knows to clone when necessary.                
                <return>
                    The possibly null environment of the context.                    
                </return>
            </javadoc>
            <method name="p_getEnvironment" type="Hashtable" line="118"/>
            <method name="resolveToClass" type="ResolveResult" line="131">
                <params>
                    <param name="name" type="String"/>
                    <param name="contextType" type="Class<? extends Context>"/>
                </params>
            </method>
            <method name="resolveToClass" type="ResolveResult" line="138">
                <params>
                    <param name="name" type="Name"/>
                    <param name="contextType" type="Class<? extends Context>"/>
                </params>
                <declaration name="ctx" type="PartialCompositeContext" line="139"/>
                <declaration name="env" type="Hashtable" line="140"/>
                <declaration name="cont" type="Continuation" line="141"/>
                <declaration name="answer" type="ResolveResult" line="142"/>
                <declaration name="nm" type="Name" line="143"/>
                <scope line="145">
                    <scope line="147"/>
                </scope>
                <scope line="152">
                    <declaration name="cctx" type="Context" line="153"/>
                    <scope line="154"/>
                </scope>
            </method>
            <method name="lookup" type="Object" line="165">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="lookup" type="Object" line="169">
                <params>
                    <param name="name" type="Name"/>
                </params>
                <declaration name="ctx" type="PartialCompositeContext" line="170"/>
                <declaration name="env" type="Hashtable" line="171"/>
                <declaration name="cont" type="Continuation" line="172"/>
                <declaration name="answer" type="Object" line="173"/>
                <declaration name="nm" type="Name" line="174"/>
                <scope line="176">
                    <scope line="178"/>
                </scope>
                <scope line="183">
                    <declaration name="cctx" type="Context" line="184"/>
                </scope>
            </method>
            <method name="bind" type="void" line="190">
                <params>
                    <param name="name" type="String"/>
                    <param name="newObj" type="Object"/>
                </params>
            </method>
            <method name="bind" type="void" line="194">
                <params>
                    <param name="name" type="Name"/>
                    <param name="newObj" type="Object"/>
                </params>
                <declaration name="ctx" type="PartialCompositeContext" line="195"/>
                <declaration name="nm" type="Name" line="196"/>
                <declaration name="env" type="Hashtable" line="197"/>
                <declaration name="cont" type="Continuation" line="198"/>
                <scope line="200">
                    <scope line="202"/>
                </scope>
                <scope line="207">
                    <declaration name="cctx" type="Context" line="208"/>
                </scope>
            </method>
            <method name="rebind" type="void" line="213">
                <params>
                    <param name="name" type="String"/>
                    <param name="newObj" type="Object"/>
                </params>
            </method>
            <method name="rebind" type="void" line="216">
                <params>
                    <param name="name" type="Name"/>
                    <param name="newObj" type="Object"/>
                </params>
                <declaration name="ctx" type="PartialCompositeContext" line="217"/>
                <declaration name="nm" type="Name" line="218"/>
                <declaration name="env" type="Hashtable" line="219"/>
                <declaration name="cont" type="Continuation" line="220"/>
                <scope line="222">
                    <scope line="224"/>
                </scope>
                <scope line="229">
                    <declaration name="cctx" type="Context" line="230"/>
                </scope>
            </method>
            <method name="unbind" type="void" line="235">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="unbind" type="void" line="238">
                <params>
                    <param name="name" type="Name"/>
                </params>
                <declaration name="ctx" type="PartialCompositeContext" line="239"/>
                <declaration name="nm" type="Name" line="240"/>
                <declaration name="env" type="Hashtable" line="241"/>
                <declaration name="cont" type="Continuation" line="242"/>
                <scope line="244">
                    <scope line="246"/>
                </scope>
                <scope line="251">
                    <declaration name="cctx" type="Context" line="252"/>
                </scope>
            </method>
            <method name="rename" type="void" line="257">
                <params>
                    <param name="oldName" type="String"/>
                    <param name="newName" type="String"/>
                </params>
            </method>
            <method name="rename" type="void" line="262">
                <params>
                    <param name="oldName" type="Name"/>
                    <param name="newName" type="Name"/>
                </params>
                <comment line="278">
                    %%% e.getRemainingNewName() should never be null                    
                </comment>
                <declaration name="ctx" type="PartialCompositeContext" line="263"/>
                <declaration name="nm" type="Name" line="264"/>
                <declaration name="env" type="Hashtable" line="265"/>
                <declaration name="cont" type="Continuation" line="266"/>
                <scope line="268">
                    <scope line="270"/>
                </scope>
                <scope line="275">
                    <declaration name="cctx" type="Context" line="276"/>
                    <scope line="277"/>
                </scope>
            </method>
            <method name="list" type="NamingEnumeration<NameClassPair>" line="287">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="list" type="NamingEnumeration<NameClassPair>" line="293">
                <params>
                    <param name="name" type="Name"/>
                </params>
                <declaration name="ctx" type="PartialCompositeContext" line="294"/>
                <declaration name="nm" type="Name" line="295"/>
                <declaration name="answer" type="NamingEnumeration" line="296"/>
                <declaration name="env" type="Hashtable" line="297"/>
                <declaration name="cont" type="Continuation" line="298"/>
                <scope line="300">
                    <scope line="302"/>
                </scope>
                <scope line="307">
                    <declaration name="cctx" type="Context" line="308"/>
                </scope>
            </method>
            <method name="listBindings" type="NamingEnumeration<Binding>" line="316">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="listBindings" type="NamingEnumeration<Binding>" line="322">
                <params>
                    <param name="name" type="Name"/>
                </params>
                <declaration name="ctx" type="PartialCompositeContext" line="323"/>
                <declaration name="nm" type="Name" line="324"/>
                <declaration name="answer" type="NamingEnumeration" line="325"/>
                <declaration name="env" type="Hashtable" line="326"/>
                <declaration name="cont" type="Continuation" line="327"/>
                <scope line="329">
                    <scope line="331"/>
                </scope>
                <scope line="336">
                    <declaration name="cctx" type="Context" line="337"/>
                </scope>
            </method>
            <method name="destroySubcontext" type="void" line="343">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="destroySubcontext" type="void" line="347">
                <params>
                    <param name="name" type="Name"/>
                </params>
                <declaration name="ctx" type="PartialCompositeContext" line="348"/>
                <declaration name="nm" type="Name" line="349"/>
                <declaration name="env" type="Hashtable" line="350"/>
                <declaration name="cont" type="Continuation" line="351"/>
                <scope line="353">
                    <scope line="355"/>
                </scope>
                <scope line="360">
                    <declaration name="cctx" type="Context" line="361"/>
                </scope>
            </method>
            <method name="createSubcontext" type="Context" line="366">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="createSubcontext" type="Context" line="370">
                <params>
                    <param name="name" type="Name"/>
                </params>
                <declaration name="ctx" type="PartialCompositeContext" line="371"/>
                <declaration name="nm" type="Name" line="372"/>
                <declaration name="answer" type="Context" line="373"/>
                <declaration name="env" type="Hashtable" line="374"/>
                <declaration name="cont" type="Continuation" line="375"/>
                <scope line="377">
                    <scope line="379"/>
                </scope>
                <scope line="384">
                    <declaration name="cctx" type="Context" line="385"/>
                </scope>
            </method>
            <method name="lookupLink" type="Object" line="391">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="lookupLink" type="Object" line="395">
                <params>
                    <param name="name" type="Name"/>
                </params>
                <declaration name="ctx" type="PartialCompositeContext" line="396"/>
                <declaration name="env" type="Hashtable" line="397"/>
                <declaration name="cont" type="Continuation" line="398"/>
                <declaration name="answer" type="Object" line="399"/>
                <declaration name="nm" type="Name" line="400"/>
                <scope line="402">
                    <scope line="404"/>
                </scope>
                <scope line="409">
                    <declaration name="cctx" type="Context" line="410"/>
                </scope>
            </method>
            <method name="getNameParser" type="NameParser" line="416">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="getNameParser" type="NameParser" line="420">
                <params>
                    <param name="name" type="Name"/>
                </params>
                <declaration name="ctx" type="PartialCompositeContext" line="421"/>
                <declaration name="nm" type="Name" line="422"/>
                <declaration name="answer" type="NameParser" line="423"/>
                <declaration name="env" type="Hashtable" line="424"/>
                <declaration name="cont" type="Continuation" line="425"/>
                <scope line="427">
                    <scope line="429"/>
                </scope>
                <scope line="434">
                    <declaration name="cctx" type="Context" line="435"/>
                </scope>
            </method>
            <method name="composeName" type="String" line="442">
                <params>
                    <param name="name" type="String"/>
                    <param name="prefix" type="String"/>
                </params>
                <declaration name="fullName" type="Name" line="443"/>
            </method>
            <javadoc line="448">
                This default implementation simply concatenates the two names.
                  There&apos;s one twist when the &quot;java.naming.provider.compose.elideEmpty&quot;
                  environment setting is set to &quot;true&quot;:  if each name contains a
                  nonempty component, and if &apos;prefix&apos; ends with an empty component or
                  &apos;name&apos; starts with one, then one empty component is dropped.
                  For example:
                  &lt;pre&gt;
                  elideEmpty=false     elideEmpty=true
                  {&quot;a&quot;} + {&quot;b&quot;}          =&gt;  {&quot;a&quot;, &quot;b&quot;}           {&quot;a&quot;, &quot;b&quot;}
                  {&quot;a&quot;} + {&quot;&quot;}           =&gt;  {&quot;a&quot;, &quot;&quot;}            {&quot;a&quot;, &quot;&quot;}
                  {&quot;a&quot;} + {&quot;&quot;, &quot;b&quot;}      =&gt;  {&quot;a&quot;, &quot;&quot;, &quot;b&quot;}       {&quot;a&quot;, &quot;b&quot;}
                  {&quot;a&quot;, &quot;&quot;} + {&quot;b&quot;, &quot;&quot;}  =&gt;  {&quot;a&quot;, &quot;&quot;, &quot;b&quot;, &quot;&quot;}   {&quot;a&quot;, &quot;b&quot;, &quot;&quot;}
                  {&quot;a&quot;, &quot;&quot;} + {&quot;&quot;, &quot;b&quot;}  =&gt;  {&quot;a&quot;, &quot;&quot;, &quot;&quot;, &quot;b&quot;}   {&quot;a&quot;, &quot;&quot;, &quot;b&quot;}
                  &lt;/pre&gt;                
            </javadoc>
            <method name="composeName" type="Name" line="464">
                <params>
                    <param name="name" type="Name"/>
                    <param name="prefix" type="Name"/>
                </params>
                <declaration name="res" type="Name" line="465"/>
                <scope line="466"/>
                <declaration name="elide" type="String" line="471"/>
                <scope line="473"/>
                <declaration name="len" type="int" line="477"/>
                <scope line="479">
                    <scope line="480"/>
                    <scope line="482"/>
                </scope>
            </method>
            <javadoc line="492">
                Tests whether a name contains a nonempty component.                
            </javadoc>
            <method name="allEmpty" type="boolean" line="495">
                <params>
                    <param name="name" type="Name"/>
                </params>
                <declaration name="enum_" type="Enumeration&lt;String&gt;" line="496"/>
                <scope line="497">
                    <scope line="498"/>
                </scope>
            </method>
            <javadoc line="505">
                Retrieves a PartialCompositeContext for the resolved object in
                  cont.  Throws CannotProceedException if not successful.                
            </javadoc>
            <method name="getPCContext" type="PartialCompositeContext" line="510">
                <params>
                    <param name="cont" type="Continuation"/>
                </params>
                <comment line="516">
                    Just cast if octx already is PartialCompositeContext                    
                </comment>
                <comment line="517">
                    %%% ignoring environment for now                    
                </comment>
                <declaration name="obj" type="Object" line="512"/>
                <declaration name="pctx" type="PartialCompositeContext" line="513"/>
                <scope line="515"/>
                <scope line="519"/>
            </method>
        </class>
    </source>