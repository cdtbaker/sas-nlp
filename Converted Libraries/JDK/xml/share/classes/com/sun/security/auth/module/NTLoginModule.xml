<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.security.auth.module">
        <import package="java.util"/>
        <import package="java.io.IOException"/>
        <import package="javax.security.auth"/>
        <import package="javax.security.auth.callback"/>
        <import package="javax.security.auth.login"/>
        <import package="javax.security.auth.spi"/>
        <import package="java.security.Principal"/>
        <import package="com.sun.security.auth.NTUserPrincipal"/>
        <import package="com.sun.security.auth.NTSidUserPrincipal"/>
        <import package="com.sun.security.auth.NTDomainPrincipal"/>
        <import package="com.sun.security.auth.NTSidDomainPrincipal"/>
        <import package="com.sun.security.auth.NTSidPrimaryGroupPrincipal"/>
        <import package="com.sun.security.auth.NTSidGroupPrincipal"/>
        <import package="com.sun.security.auth.NTNumericCredential"/>
        <class name="NTLoginModule" line="43">
            <comment line="65">
                initial state                
            </comment>
            <comment line="71">
                configurable option                
            </comment>
            <comment line="75">
                the authentication status                
            </comment>
            <comment line="79">
                user name                
            </comment>
            <comment line="80">
                user SID                
            </comment>
            <comment line="81">
                user domain                
            </comment>
            <comment line="82">
                domain SID                
            </comment>
            <comment line="83">
                primary group                
            </comment>
            <comment line="84">
                supplementary groups                
            </comment>
            <comment line="85">
                impersonation token                
            </comment>
            <implements interface="LoginModule"/>
            <javadoc line="43">
                &lt;p&gt; This &lt;code&gt;LoginModule&lt;/code&gt;
                  renders a user&apos;s NT security information as some number of
                  &lt;code&gt;Principal&lt;/code&gt;s
                  and associates them with a &lt;code&gt;Subject&lt;/code&gt;.
                  &lt;p&gt; This LoginModule recognizes the debug option.
                  If set to true in the login Configuration,
                  debug messages will be output to the output stream, System.out.
                  &lt;p&gt; This LoginModule also recognizes the debugNative option.
                  If set to true in the login Configuration,
                  debug messages from the native component of the module
                  will be output to the output stream, System.out.                
                <see>
                    javax.security.auth.spi.LoginModule                    
                </see>
            </javadoc>
            <declaration name="ntSystem" type="NTSystem" line="62"/>
            <declaration name="subject" type="Subject" line="65"/>
            <declaration name="callbackHandler" type="CallbackHandler" line="66"/>
            <declaration name="sharedState" type="Map&lt;String,?&gt;" line="67"/>
            <declaration name="options" type="Map&lt;String,?&gt;" line="68"/>
            <declaration name="debug" type="boolean" line="71"/>
            <declaration name="debugNative" type="boolean" line="72"/>
            <declaration name="succeeded" type="boolean" line="75"/>
            <declaration name="commitSucceeded" type="boolean" line="76"/>
            <declaration name="userPrincipal" type="NTUserPrincipal" line="78"/>
            <declaration name="userSID" type="NTSidUserPrincipal" line="79"/>
            <declaration name="userDomain" type="NTDomainPrincipal" line="80"/>
            <declaration name="domainSID" type="NTSidDomainPrincipal" line="81"/>
            <declaration name="primaryGroup" type="NTSidPrimaryGroupPrincipal" line="82"/>
            <declaration name="groups" type="NTSidGroupPrincipal" line="83"/>
            <declaration name="iToken" type="NTNumericCredential" line="84"/>
            <javadoc line="86">
                Initialize this &lt;code&gt;LoginModule&lt;/code&gt;.
                  &lt;p&gt;                
                <param>
                    subject the <code>Subject</code> to be authenticated. <p>                    
                </param>
                <param>
                    callbackHandler a <code>CallbackHandler</code> for communicating
                      with the end user (prompting for usernames and
                      passwords, for example). This particular LoginModule only
                      extracts the underlying NT system information, so this
                      parameter is ignored.<p>                    
                </param>
                <param>
                    sharedState shared <code>LoginModule</code> state. <p>                    
                </param>
                <param>
                    options options specified in the login
                      <code>Configuration</code> for this particular
                      <code>LoginModule</code>.                    
                </param>
            </javadoc>
            <method name="initialize" type="void" line="108">
                <params>
                    <param name="subject" type="Subject"/>
                    <param name="callbackHandler" type="CallbackHandler"/>
                    <param name="sharedState" type="Map<String,?>"/>
                    <param name="options" type="Map<String,?>"/>
                </params>
                <comment line="116">
                    initialize any configured options                    
                </comment>
                <scope line="119"/>
            </method>
            <javadoc line="124">
                Import underlying NT system identity information.
                  &lt;p&gt;                
                <return>
                    true in all cases since this <code>LoginModule</code>
                      should not be ignored.                    
                </return>
                <exception>
                    FailedLoginException if the authentication fails. <p>                    
                </exception>
                <exception>
                    LoginException if this <code>LoginModule</code>
                      is unable to perform the authentication.                    
                </exception>
            </javadoc>
            <method name="login" type="boolean" line="137">
                <comment line="140">
                    Indicate not yet successful                    
                </comment>
                <scope line="142">
                    <scope line="143"/>
                </scope>
                <scope line="152"/>
                <scope line="158"/>
                <scope line="165">
                    <scope line="167"/>
                </scope>
                <scope line="172">
                    <scope line="174"/>
                </scope>
                <scope line="179">
                    <scope line="182"/>
                </scope>
                <scope line="187">
                    <scope line="190"/>
                </scope>
                <scope line="196">
                    <declaration name="groupSIDs" type="String" line="198"/>
                    <scope line="200">
                        <scope line="202"/>
                    </scope>
                </scope>
                <scope line="208">
                    <scope line="210"/>
                </scope>
            </method>
            <javadoc line="220">
                &lt;p&gt; This method is called if the LoginContext&apos;s
                  overall authentication succeeded
                  (the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL LoginModules
                  succeeded).
                  &lt;p&gt; If this LoginModule&apos;s own authentication attempt
                  succeeded (checked by retrieving the private state saved by the
                  &lt;code&gt;login&lt;/code&gt; method), then this method associates some
                  number of various &lt;code&gt;Principal&lt;/code&gt;s
                  with the &lt;code&gt;Subject&lt;/code&gt; located in the
                  &lt;code&gt;LoginModuleContext&lt;/code&gt;.  If this LoginModule&apos;s own
                  authentication attempted failed, then this method removes
                  any state that was originally saved.
                  &lt;p&gt;                
                <exception>
                    LoginException if the commit fails.                    
                </exception>
                <return>
                    true if this LoginModule's own login and commit
                      attempts succeeded, or false otherwise.                    
                </return>
            </javadoc>
            <method name="commit" type="boolean" line="242">
                <comment line="257">
                    we must have a userPrincipal - everything else is optional                    
                </comment>
                <scope line="243">
                    <scope line="244"/>
                </scope>
                <scope line="251"/>
                <declaration name="principals" type="Set&lt;Principal&gt;" line="254"/>
                <scope line="257"/>
                <scope line="260"/>
                <scope line="264"/>
                <scope line="267"/>
                <scope line="271"/>
                <scope line="274">
                    <scope line="275"/>
                </scope>
                <declaration name="pubCreds" type="Set&lt;Object&gt;" line="280"/>
                <scope line="281"/>
            </method>
            <javadoc line="289">
                &lt;p&gt; This method is called if the LoginContext&apos;s
                  overall authentication failed.
                  (the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL LoginModules
                  did not succeed).
                  &lt;p&gt; If this LoginModule&apos;s own authentication attempt
                  succeeded (checked by retrieving the private state saved by the
                  &lt;code&gt;login&lt;/code&gt; and &lt;code&gt;commit&lt;/code&gt; methods),
                  then this method cleans up any state that was originally saved.
                  &lt;p&gt;                
                <exception>
                    LoginException if the abort fails.                    
                </exception>
                <return>
                    false if this LoginModule's own login and/or commit attempts
                      failed, and true otherwise.                    
                </return>
            </javadoc>
            <method name="abort" type="boolean" line="307">
                <comment line="327">
                    overall authentication succeeded and commit succeeded,
                     but someone else&apos;s commit failed                    
                </comment>
                <scope line="308"/>
                <scope line="313"/>
                <scope line="315"/>
                <scope line="325"/>
            </method>
            <javadoc line="333">
                Logout the user.
                  &lt;p&gt; This method removes the &lt;code&gt;NTUserPrincipal&lt;/code&gt;,
                  &lt;code&gt;NTDomainPrincipal&lt;/code&gt;, &lt;code&gt;NTSidUserPrincipal&lt;/code&gt;,
                  &lt;code&gt;NTSidDomainPrincipal&lt;/code&gt;, &lt;code&gt;NTSidGroupPrincipal&lt;/code&gt;s,
                  and &lt;code&gt;NTSidPrimaryGroupPrincipal&lt;/code&gt;
                  that may have been added by the &lt;code&gt;commit&lt;/code&gt; method.
                  &lt;p&gt;                
                <exception>
                    LoginException if the logout fails.                    
                </exception>
                <return>
                    true in all cases since this <code>LoginModule</code>
                      should not be ignored.                    
                </return>
            </javadoc>
            <method name="logout" type="boolean" line="349">
                <scope line="351"/>
                <declaration name="principals" type="Set&lt;Principal&gt;" line="354"/>
                <scope line="355"/>
                <scope line="358"/>
                <scope line="361"/>
                <scope line="364"/>
                <scope line="367"/>
                <scope line="370">
                    <scope line="371"/>
                </scope>
                <declaration name="pubCreds" type="Set&lt;Object&gt;" line="376"/>
                <scope line="377"/>
                <scope line="392"/>
            </method>
        </class>
    </source>