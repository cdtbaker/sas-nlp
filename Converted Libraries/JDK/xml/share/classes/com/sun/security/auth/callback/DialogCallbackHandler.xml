<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.security.auth.callback">
        <import package="javax.security.auth.callback.Callback"/>
        <import package="javax.security.auth.callback.CallbackHandler"/>
        <import package="javax.security.auth.callback.ConfirmationCallback"/>
        <import package="javax.security.auth.callback.NameCallback"/>
        <import package="javax.security.auth.callback.PasswordCallback"/>
        <import package="javax.security.auth.callback.TextOutputCallback"/>
        <import package="javax.security.auth.callback.UnsupportedCallbackException"/>
        <import package="java.awt.Component"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="javax.swing.Box"/>
        <import package="javax.swing.JLabel"/>
        <import package="javax.swing.JOptionPane"/>
        <import package="javax.swing.JPasswordField"/>
        <import package="javax.swing.JTextField"/>
        <class name="DialogCallbackHandler" line="48">
            <comment line="59">
                                
            </comment>
            <comment line="61">
                                
            </comment>
            <comment line="66">
                                
            </comment>
            <comment line="83">
                An interface for recording actions to carry out if the user
                 clicks OK for the dialog.                
            </comment>
            <comment line="217">
                Provides assistance with translating between JAAS and Swing
                 confirmation dialogs.                
            </comment>
            <implements interface="CallbackHandler"/>
            <javadoc line="48">
                &lt;p&gt;
                  Uses a Swing dialog window to query the user for answers to
                  authentication questions.
                  This can be used by a JAAS application to instantiate a
                  CallbackHandler                
                <see>
                    javax.security.auth.callback                    
                </see>
            </javadoc>
            <declaration name="parentComponent" type="Component" line="61"/>
            <declaration name="JPasswordFieldLen" type="int" line="62"/>
            <declaration name="JTextFieldLen" type="int" line="63"/>
            <javadoc line="67">
                Creates a callback dialog with the default parent window.                
            </javadoc>
            <method name="DialogCallbackHandler" type="constructor" line="70"/>
            <javadoc line="72">
                Creates a callback dialog and specify the parent window.                
                <param>
                    parentComponent the parent window -- specify &lt;code&gt;null&lt;/code&gt;
                      for the default parent                    
                </param>
            </javadoc>
            <method name="DialogCallbackHandler" type="constructor" line="78">
                <params>
                    <param name="parentComponent" type="Component"/>
                </params>
            </method>
            <interface name="Action">
                <comment line="233">
                                        
                </comment>
                <comment line="302">
                                        
                </comment>
                <method name="perform" type="void" line="87"/>
            </interface>
            <javadoc line="90">
                Handles the specified set of callbacks.                
                <param>
                    callbacks the callbacks to handle                    
                </param>
                <throws>
                    UnsupportedCallbackException if the callback is not an
                      instance  of NameCallback or PasswordCallback                    
                </throws>
            </javadoc>
            <method name="handle" type="void" line="100">
                <params>
                    <param name="callbacks" type="Callback[]"/>
                </params>
                <comment line="102">
                                        
                </comment>
                <comment line="105">
                                        
                </comment>
                <comment line="142">
                    Put the prompt and name in a horizontal box,
                     and add that to the set of messages.                    
                </comment>
                <comment line="151">
                                        
                </comment>
                <comment line="194">
                                        
                </comment>
                <comment line="198">
                                        
                </comment>
                <comment line="201">
                                        
                </comment>
                <comment line="202">
                                        
                </comment>
                <comment line="203">
                                        
                </comment>
                <comment line="205">
                                        
                </comment>
                <declaration name="messages" type="List&lt;Object&gt;" line="102"/>
                <declaration name="okActions" type="List&lt;Action&gt;" line="105"/>
                <declaration name="confirmation" type="ConfirmationInfo" line="107"/>
                <scope line="109">
                    <scope line="110">
                        <declaration name="tc" type="TextOutputCallback" line="111"/>
                    </scope>
                    <scope line="130">
                        <declaration name="nc" type="NameCallback" line="131"/>
                        <declaration name="prompt" type="JLabel" line="133"/>
                        <declaration name="name" type="JTextField" line="135"/>
                        <declaration name="defaultName" type="String" line="136"/>
                        <scope line="137"/>
                        <declaration name="namePanel" type="Box" line="145"/>
                        <anonymous_class line="151">
                            <method name="perform" type="void" line="152"/>
                        </anonymous_class>
                    </scope>
                    <scope line="157">
                        <declaration name="pc" type="PasswordCallback" line="158"/>
                        <declaration name="prompt" type="JLabel" line="160"/>
                        <declaration name="password" type="JPasswordField" line="162"/>
                        <scope line="164"/>
                        <declaration name="passwordPanel" type="Box" line="168"/>
                        <anonymous_class line="173">
                            <method name="perform" type="void" line="174"/>
                        </anonymous_class>
                    </scope>
                    <scope line="179">
                        <declaration name="cc" type="ConfirmationCallback" line="180"/>
                        <scope line="183"/>
                    </scope>
                    <scope line="187"/>
                </scope>
                <declaration name="result" type="int" line="194"/>
                <scope line="207">
                    <declaration name="iterator" type="Iterator&lt;Action&gt;" line="208"/>
                    <scope line="209"/>
                </scope>
            </method>
            <class name="ConfirmationInfo" line="220">
                <comment line="233">
                                        
                </comment>
                <comment line="302">
                                        
                </comment>
                <declaration name="translations" type="int[]" line="222"/>
                <declaration name="optionType" type="int" line="224"/>
                <declaration name="options" type="Object[]" line="225"/>
                <declaration name="initialValue" type="Object" line="226"/>
                <declaration name="messageType" type="int" line="228"/>
                <declaration name="callback" type="ConfirmationCallback" line="230"/>
                <method name="setCallback" type="void" line="235">
                    <params>
                        <param name="callback" type="ConfirmationCallback"/>
                    </params>
                    <comment line="268">
                        There&apos;s no way to know if the default option means
                         to cancel the login, but there isn&apos;t a better way
                         to guess this.                        
                    </comment>
                    <declaration name="confirmationOptionType" type="int" line="238"/>
                    <declaration name="confirmationMessageType" type="int" line="282"/>
                </method>
                <method name="handleResult" type="void" line="302">
                    <params>
                        <param name="result" type="int"/>
                    </params>
                    <scope line="303"/>
                    <scope line="307">
                        <scope line="308"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>