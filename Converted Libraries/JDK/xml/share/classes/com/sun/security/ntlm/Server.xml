<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.security.ntlm">
        <import package="java.util.Arrays"/>
        <import package="java.util.Locale"/>
        <class name="Server" line="4">
            <extends class="NTLM"/>
            <javadoc line="4">
                The NTLM server, not multi-thread enabled.&lt;p&gt;
                  Example:
                  &lt;pre&gt;
                  Server server = new Server(null, &quot;REALM&quot;) {
                  public char[] getPassword(String ntdomain, String username) {
                  switch (username) {
                  case &quot;dummy&quot;: return &quot;t0pSeCr3t&quot;.toCharArray();
                  case &quot;guest&quot;: return &quot;&quot;.toCharArray();
                  default: return null;
                  }
                  }
                  };
                  // Receive client request as type1
                  byte[] type2 = server.type2(type1, nonce);
                  // Send type2 to client and receive type3
                  verify(type3, nonce);
                  &lt;/pre&gt;                
            </javadoc>
            <declaration name="domain" type="String" line="24"/>
            <declaration name="allVersion" type="boolean" line="25"/>
            <javadoc line="26">
                Creates a Server instance.                
                <param>
                    version the NTLM version to use, which can be:
                      <ul>
                      <li>NTLM: Original NTLM v1
                      <li>NTLM2: NTLM v1 with Client Challenge
                      <li>NTLMv2: NTLM v2
                      </ul>
                      If null, all versions will be supported. Please note that unless NTLM2
                      is selected, authentication succeeds if one of LM (or LMv2) or
                      NTLM (or NTLMv2) is verified.                    
                </param>
                <param>
                    domain the domain, must not be null                    
                </param>
                <throws>
                    NullPointerException if {@code domain} is null.                    
                </throws>
            </javadoc>
            <method name="Server" type="constructor" line="40">
                <params>
                    <param name="version" type="String"/>
                    <param name="domain" type="String"/>
                </params>
                <scope line="42"/>
            </method>
            <javadoc line="49">
                Generates the Type 2 message                
                <param>
                    type1 the Type1 message received, must not be null                    
                </param>
                <param>
                    nonce the random 8-byte array to be used in message generation,
                      must not be null                    
                </param>
                <return>
                    the message generated                    
                </return>
                <throws>
                    NullPointerException if type1 or nonce is null                    
                </throws>
                <throws>
                    NTLMException if the incoming message is invalid                    
                </throws>
            </javadoc>
            <method name="type2" type="byte[]" line="58">
                <params>
                    <param name="type1" type="byte[]"/>
                    <param name="nonce" type="byte[]"/>
                </params>
                <scope line="59"/>
                <declaration name="p" type="Writer" line="64"/>
                <declaration name="flags" type="int" line="65"/>
            </method>
            <javadoc line="73">
                Verifies the Type3 message received from client and returns
                  various negotiated information.                
                <param>
                    type3 the incoming Type3 message from client, must not be null                    
                </param>
                <param>
                    nonce the same nonce provided in {@link #type2}, must not be null                    
                </param>
                <return>
                    username and hostname of the client in a byte array                    
                </return>
                <throws>
                    NullPointerException if {@code type3} or {@code nonce} is null                    
                </throws>
                <throws>
                    NTLMException if the incoming message is invalid                    
                </throws>
            </javadoc>
            <method name="verify" type="String[]" line="82">
                <params>
                    <param name="type3" type="byte[]"/>
                    <param name="nonce" type="byte[]"/>
                </params>
                <scope line="83"/>
                <declaration name="r" type="Reader" line="88"/>
                <declaration name="username" type="String" line="89"/>
                <declaration name="hostname" type="String" line="90"/>
                <declaration name="incomingDomain" type="String" line="91"/>
                <declaration name="verified" type="boolean" line="92"/>
                <declaration name="password" type="char[]" line="93"/>
                <scope line="94"/>
                <declaration name="incomingLM" type="byte[]" line="97"/>
                <declaration name="incomingNTLM" type="byte[]" line="98"/>
                <scope line="99">
                    <scope line="100">
                        <declaration name="pw1" type="byte[]" line="101"/>
                        <declaration name="lmhash" type="byte[]" line="102"/>
                        <declaration name="lmresponse" type="byte[]" line="103"/>
                        <scope line="104"/>
                    </scope>
                    <scope line="108">
                        <declaration name="pw2" type="byte[]" line="109"/>
                        <declaration name="nthash" type="byte[]" line="110"/>
                        <declaration name="ntresponse" type="byte[]" line="111"/>
                        <scope line="112"/>
                    </scope>
                </scope>
                <scope line="118">
                    <declaration name="pw2" type="byte[]" line="119"/>
                    <declaration name="nthash" type="byte[]" line="120"/>
                    <declaration name="clientNonce" type="byte[]" line="121"/>
                    <declaration name="ntlmresponse" type="byte[]" line="122"/>
                    <scope line="123"/>
                </scope>
                <scope line="128">
                    <declaration name="pw2" type="byte[]" line="129"/>
                    <declaration name="nthash" type="byte[]" line="130"/>
                    <scope line="131">
                        <declaration name="clientNonce" type="byte[]" line="132"/>
                        <declaration name="lmresponse" type="byte[]" line="133"/>
                        <scope line="134"/>
                    </scope>
                    <scope line="138">
                        <declaration name="clientBlob" type="byte[]" line="139"/>
                        <declaration name="ntlmresponse" type="byte[]" line="140"/>
                        <scope line="141"/>
                    </scope>
                </scope>
                <scope line="147"/>
            </method>
            <method name="getPassword" type="char[]" line="152"/>
            <javadoc line="152">
                Retrieves the password for a given user. This method should be
                  overridden in a concrete class.                
                <param>
                    domain can be null                    
                </param>
                <param>
                    username must not be null                    
                </param>
                <return>
                    the password for the user, or null if unknown                    
                </return>
            </javadoc>
        </class>
    </source>