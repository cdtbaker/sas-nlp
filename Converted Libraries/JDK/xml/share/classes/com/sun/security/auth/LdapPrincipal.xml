<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.security.auth">
        <import package="java.security.Principal"/>
        <import package="javax.naming.InvalidNameException"/>
        <import package="javax.naming.ldap.LdapName"/>
        <class name="LdapPrincipal" line="5">
            <implements interface="Principal"/>
            <implements interface="java.io.Serializable"/>
            <javadoc line="5">
                A principal identified by a distinguished name as specified by
                  &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;.
                  &lt;p&gt;
                  After successful authentication, a user {@link java.security.Principal}can be associated with a particular {@link javax.security.auth.Subject}to augment that &lt;code&gt;Subject&lt;/code&gt; with an additional identity.
                  Authorization decisions can then be based upon the
                  &lt;code&gt;Principal&lt;/code&gt;s that are associated with a &lt;code&gt;Subject&lt;/code&gt;.
                  &lt;p&gt;
                  This class is immutable.                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="17"/>
            <declaration name="nameString" type="String" line="18"/>
            <javadoc line="18">
                The principal&apos;s string name                
                <serial>
                                        
                </serial>
            </javadoc>
            <declaration name="name" type="LdapName" line="23"/>
            <javadoc line="23">
                The principal&apos;s name                
                <serial>
                                        
                </serial>
            </javadoc>
            <javadoc line="28">
                Creates an LDAP principal.                
                <param>
                    name The principal's string distinguished name.                    
                </param>
                <throws>
                    InvalidNameException If a syntax violation is detected.                    
                </throws>
                <exception>
                    NullPointerException If the <code>name</code> is
                      <code>null</code>.                    
                </exception>
            </javadoc>
            <method name="LdapPrincipal" type="constructor" line="35">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="36"/>
            </method>
            <javadoc line="42">
                Compares this principal to the specified object.                
                <param>
                    object The object to compare this principal against.                    
                </param>
                <return>
                    true if they are equal; false otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="47">
                <params>
                    <param name="object" type="Object"/>
                </params>
                <scope line="48"/>
                <scope line="51">
                    <scope line="52"/>
                    <scope line="55"/>
                </scope>
            </method>
            <javadoc line="61">
                Computes the hash code for this principal.                
                <return>
                    The principal's hash code.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="65"/>
            <javadoc line="68">
                Returns the name originally used to create this principal.                
                <return>
                    The principal's string name.                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="72"/>
            <javadoc line="75">
                Creates a string representation of this principal&apos;s name in the format
                  defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;.
                  If the name has zero components an empty string is returned.                
                <return>
                    The principal's string name.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="81"/>
            <method name="getLdapName" type="LdapName" line="84">
                <params>
                    <param name="name" type="String"/>
                </params>
            </method>
        </class>
    </source>