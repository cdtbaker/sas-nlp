<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.security.sasl">
        <import package="javax.security.sasl"/>
        <class name="PlainClient" line="3">
            <implements interface="SaslClient"/>
            <javadoc line="3">
                Implements the PLAIN SASL client mechanism.
                  (&lt;A
                  HREF=&quot;http://ftp.isi.edu/in-notes/rfc2595.txt&quot;&gt;RFC 2595&lt;/A&gt;)                
                <author>
                    Rosanna Lee                    
                </author>
            </javadoc>
            <declaration name="completed" type="boolean" line="10"/>
            <declaration name="pw" type="byte[]" line="11"/>
            <declaration name="authorizationID" type="String" line="12"/>
            <declaration name="authenticationID" type="String" line="13"/>
            <declaration name="SEP" type="byte" line="14"/>
            <javadoc line="15">
                Creates a SASL mechanism with client credentials that it needs
                  to participate in Plain authentication exchange with the server.                
                <param>
                    authorizationID A possibly null string representing the principal
                      for which authorization is being granted; if null, same as
                      authenticationID                    
                </param>
                <param>
                    authenticationID A non-null string representing the principal
                      being authenticated. pw is associated with with this principal.                    
                </param>
                <param>
                    pw A non-null byte[] containing the password.                    
                </param>
            </javadoc>
            <method name="PlainClient" type="constructor" line="25">
                <params>
                    <param name="authorizationID" type="String"/>
                    <param name="authenticationID" type="String"/>
                    <param name="pw" type="byte[]"/>
                </params>
                <scope line="26"/>
            </method>
            <javadoc line="33">
                Retrieves this mechanism&apos;s name for to initiate the PLAIN protocol
                  exchange.                
                <return>
                    The string &quot;PLAIN&quot;.                    
                </return>
            </javadoc>
            <method name="getMechanismName" type="String" line="38"/>
            <method name="hasInitialResponse" type="boolean" line="41"/>
            <method name="dispose" type="void" line="44"/>
            <javadoc line="47">
                Retrieves the initial response for the SASL command, which for
                  PLAIN is the concatenation of authorization ID, authentication ID
                  and password, with each component separated by the US-ASCII &lt;NUL&gt; byte.                
                <param>
                    challengeData Ignored                    
                </param>
                <return>
                    A non-null byte array containing the response to be sent to the server.                    
                </return>
                <throws>
                    SaslException If cannot encode ids in UTF-8                    
                </throws>
                <throw>
                    IllegalStateException if authentication already completed                    
                </throw>
            </javadoc>
            <method name="evaluateChallenge" type="byte[]" line="56">
                <params>
                    <param name="challengeData" type="byte[]"/>
                </params>
                <scope line="57"/>
                <scope line="61">
                    <declaration name="authz" type="byte[]" line="62"/>
                    <declaration name="auth" type="byte[]" line="63"/>
                    <declaration name="answer" type="byte[]" line="64"/>
                    <declaration name="pos" type="int" line="65"/>
                    <scope line="66"/>
                </scope>
                <scope line="78"/>
            </method>
            <javadoc line="82">
                Determines whether this mechanism has completed.
                  Plain completes after returning one response.                
                <return>
                    true if has completed; false otherwise;                    
                </return>
            </javadoc>
            <method name="isComplete" type="boolean" line="87"/>
            <javadoc line="90">
                Unwraps the incoming buffer.                
                <throws>
                    SaslException Not applicable to this mechanism.                    
                </throws>
            </javadoc>
            <method name="unwrap" type="byte[]" line="94">
                <params>
                    <param name="incoming" type="byte[]"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="95"/>
                <scope line="98"/>
            </method>
            <javadoc line="102">
                Wraps the outgoing buffer.                
                <throws>
                    SaslException Not applicable to this mechanism.                    
                </throws>
            </javadoc>
            <method name="wrap" type="byte[]" line="106">
                <params>
                    <param name="outgoing" type="byte[]"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="107"/>
                <scope line="110"/>
            </method>
            <javadoc line="114">
                Retrieves the negotiated property.
                  This method can be called only after the authentication exchange has
                  completed (i.e., when &lt;tt&gt;isComplete()&lt;/tt&gt; returns true); otherwise, a
                  &lt;tt&gt;SaslException&lt;/tt&gt; is thrown.                
                <return>
                    value of property; only QOP is applicable to PLAIN.                    
                </return>
                <exception>
                    IllegalStateException if this authentication exchange
                      has not completed                    
                </exception>
            </javadoc>
            <method name="getNegotiatedProperty" type="Object" line="123">
                <params>
                    <param name="propName" type="String"/>
                </params>
                <scope line="124">
                    <scope line="125"/>
                    <scope line="128"/>
                </scope>
                <scope line="132"/>
            </method>
            <method name="clearPassword" type="void" line="136">
                <scope line="137">
                    <scope line="138"/>
                </scope>
            </method>
            <method name="finalize" type="void" line="144"/>
        </class>
    </source>