<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.security.auth.callback">
        <import package="javax.security.auth.callback.Callback"/>
        <import package="javax.security.auth.callback.CallbackHandler"/>
        <import package="javax.security.auth.callback.ConfirmationCallback"/>
        <import package="javax.security.auth.callback.NameCallback"/>
        <import package="javax.security.auth.callback.PasswordCallback"/>
        <import package="javax.security.auth.callback.TextOutputCallback"/>
        <import package="javax.security.auth.callback.UnsupportedCallbackException"/>
        <import package="java.io.BufferedReader"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.InputStreamReader"/>
        <import package="java.io.PushbackInputStream"/>
        <import package="java.util.Arrays"/>
        <import package="sun.security.util.Password"/>
        <class name="TextCallbackHandler" line="16">
            <implements interface="CallbackHandler"/>
            <javadoc line="16">
                &lt;p&gt;
                  Prompts and reads from the command line for answers to authentication
                  questions.
                  This can be used by a JAAS application to instantiate a
                  CallbackHandler                
                <see>
                    javax.security.auth.callback                    
                </see>
            </javadoc>
            <javadoc line="25">
                &lt;p&gt;Creates a callback handler that prompts and reads from the
                  command line for answers to authentication questions.
                  This can be used by JAAS applications to instantiate a
                  CallbackHandler.                
            </javadoc>
            <method name="TextCallbackHandler" type="constructor" line="31"/>
            <javadoc line="33">
                Handles the specified set of callbacks.                
                <param>
                    callbacks the callbacks to handle                    
                </param>
                <throws>
                    IOException if an input or output error occurs.                    
                </throws>
                <throws>
                    UnsupportedCallbackException if the callback is not an
                      instance of NameCallback or PasswordCallback                    
                </throws>
            </javadoc>
            <method name="handle" type="void" line="40">
                <params>
                    <param name="callbacks" type="Callback[]"/>
                </params>
                <declaration name="confirmation" type="ConfirmationCallback" line="41"/>
                <scope line="42">
                    <scope line="43">
                        <declaration name="tc" type="TextOutputCallback" line="44"/>
                        <declaration name="text" type="String" line="45"/>
                        <declaration name="message" type="String" line="59"/>
                        <scope line="60"/>
                        <scope line="63"/>
                    </scope>
                    <scope line="67">
                        <declaration name="nc" type="NameCallback" line="68"/>
                        <scope line="69"/>
                        <scope line="72"/>
                        <declaration name="result" type="String" line="76"/>
                        <scope line="77"/>
                    </scope>
                    <scope line="82">
                        <declaration name="pc" type="PasswordCallback" line="83"/>
                    </scope>
                    <scope line="88"/>
                    <scope line="91"/>
                </scope>
                <scope line="95"/>
            </method>
            <method name="readLine" type="String" line="99">
                <declaration name="result" type="String" line="100"/>
                <scope line="101"/>
            </method>
            <method name="doConfirmation" type="void" line="106">
                <params>
                    <param name="confirmation" type="ConfirmationCallback"/>
                </params>
                <declaration name="prefix" type="String" line="107"/>
                <declaration name="messageType" type="int" line="108"/>
                <class name="OptionInfo" line="122">
                    <declaration name="name" type="String" line="123"/>
                    <declaration name="value" type="int" line="124"/>
                    <method name="OptionInfo" type="constructor" line="125">
                        <params>
                            <param name="name" type="String"/>
                            <param name="value" type="int"/>
                        </params>
                    </method>
                </class>
                <declaration name="options" type="OptionInfo[]" line="130"/>
                <declaration name="optionType" type="int" line="131"/>
                <declaration name="optionStrings" type="String[]" line="143"/>
                <scope line="145"/>
                <declaration name="defaultOption" type="int" line="152"/>
                <declaration name="prompt" type="String" line="153"/>
                <scope line="154"/>
                <scope line="158"/>
                <scope line="161">
                    <scope line="162"/>
                    <scope line="165"/>
                </scope>
                <declaration name="result" type="int" line="171"/>
                <scope line="172">
                    <scope line="174"/>
                </scope>
                <scope line="179"/>
            </method>
        </class>
    </source>