<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.security.auth.module">
        <import package="java.util"/>
        <import package="java.io.IOException"/>
        <import package="javax.security.auth"/>
        <import package="javax.security.auth.callback"/>
        <import package="javax.security.auth.login"/>
        <import package="javax.security.auth.spi"/>
        <import package="com.sun.security.auth.UnixPrincipal"/>
        <import package="com.sun.security.auth.UnixNumericUserPrincipal"/>
        <import package="com.sun.security.auth.UnixNumericGroupPrincipal"/>
        <class name="UnixLoginModule" line="38">
            <comment line="53">
                initial state                
            </comment>
            <comment line="59">
                configurable option                
            </comment>
            <comment line="62">
                UnixSystem to retrieve underlying system info                
            </comment>
            <comment line="65">
                the authentication status                
            </comment>
            <comment line="69">
                Underlying system info                
            </comment>
            <implements interface="LoginModule"/>
            <javadoc line="38">
                &lt;p&gt; This &lt;code&gt;LoginModule&lt;/code&gt; imports a user&apos;s Unix
                  &lt;code&gt;Principal&lt;/code&gt; information (&lt;code&gt;UnixPrincipal&lt;/code&gt;,
                  &lt;code&gt;UnixNumericUserPrincipal&lt;/code&gt;,
                  and &lt;code&gt;UnixNumericGroupPrincipal&lt;/code&gt;)
                  and associates them with the current &lt;code&gt;Subject&lt;/code&gt;.
                  &lt;p&gt; This LoginModule recognizes the debug option.
                  If set to true in the login Configuration,
                  debug messages will be output to the output stream, System.out.                
            </javadoc>
            <declaration name="subject" type="Subject" line="53"/>
            <declaration name="callbackHandler" type="CallbackHandler" line="54"/>
            <declaration name="sharedState" type="Map&lt;String,?&gt;" line="55"/>
            <declaration name="options" type="Map&lt;String,?&gt;" line="56"/>
            <declaration name="debug" type="boolean" line="59"/>
            <declaration name="ss" type="UnixSystem" line="62"/>
            <declaration name="succeeded" type="boolean" line="65"/>
            <declaration name="commitSucceeded" type="boolean" line="66"/>
            <declaration name="userPrincipal" type="UnixPrincipal" line="69"/>
            <declaration name="UIDPrincipal" type="UnixNumericUserPrincipal" line="70"/>
            <declaration name="GIDPrincipal" type="UnixNumericGroupPrincipal" line="71"/>
            <declaration name="supplementaryGroups" type="LinkedList&lt;UnixNumericGroupPrincipal&gt;" line="72"/>
            <javadoc line="75">
                Initialize this &lt;code&gt;LoginModule&lt;/code&gt;.
                  &lt;p&gt;                
                <param>
                    subject the &lt;code&gt;Subject&lt;/code&gt; to be authenticated. &lt;p&gt;                    
                </param>
                <param>
                    callbackHandler a &lt;code&gt;CallbackHandler&lt;/code&gt; for communicating
                      with the end user (prompting for usernames and
                      passwords, for example). &lt;p&gt;                    
                </param>
                <param>
                    sharedState shared &lt;code&gt;LoginModule&lt;/code&gt; state. &lt;p&gt;                    
                </param>
                <param>
                    options options specified in the login
                      &lt;code&gt;Configuration&lt;/code&gt; for this particular
                      &lt;code&gt;LoginModule&lt;/code&gt;.                    
                </param>
            </javadoc>
            <method name="initialize" type="void" line="94">
                <params>
                    <param name="subject" type="Subject"/>
                    <param name="callbackHandler" type="CallbackHandler"/>
                    <param name="sharedState" type="Map<String,?>"/>
                    <param name="options" type="Map<String,?>"/>
                </params>
                <comment line="102">
                    initialize any configured options                    
                </comment>
            </method>
            <javadoc line="105">
                Authenticate the user (first phase).
                  &lt;p&gt; The implementation of this method attempts to retrieve the user&apos;s
                  Unix &lt;code&gt;Subject&lt;/code&gt; information by making a native Unix
                  system call.
                  &lt;p&gt;                
                <exception>
                    FailedLoginException if attempts to retrieve the underlying
                      system information fail.                    
                </exception>
                <return>
                    true in all cases (this &lt;code&gt;LoginModule&lt;/code&gt;
                      should not be ignored).                    
                </return>
            </javadoc>
            <method name="login" type="boolean" line="120">
                <declaration name="unixGroups" type="long[]" line="122"/>
                <scope line="126"/>
                <scope line="131">
                    <scope line="135">
                        <scope line="137">
                            <declaration name="ngp" type="UnixNumericGroupPrincipal" line="138"/>
                        </scope>
                    </scope>
                    <scope line="145">
                        <scope line="151"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="160">
                Commit the authentication (second phase).
                  &lt;p&gt; This method is called if the LoginContext&apos;s
                  overall authentication succeeded
                  (the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL LoginModules
                  succeeded).
                  &lt;p&gt; If this LoginModule&apos;s own authentication attempt
                  succeeded (the importing of the Unix authentication information
                  succeeded), then this method associates the Unix Principals
                  with the &lt;code&gt;Subject&lt;/code&gt; currently tied to the
                  &lt;code&gt;LoginModule&lt;/code&gt;.  If this LoginModule&apos;s
                  authentication attempted failed, then this method removes
                  any state that was originally saved.
                  &lt;p&gt;                
                <exception>
                    LoginException if the commit fails                    
                </exception>
                <return>
                    true if this LoginModule&apos;s own login and commit attempts
                      succeeded, or false otherwise.                    
                </return>
            </javadoc>
            <method name="commit" type="boolean" line="183">
                <scope line="184">
                    <scope line="185"/>
                </scope>
                <scope line="191">
                    <scope line="192"/>
                    <scope line="202"/>
                    <scope line="208"/>
                </scope>
            </method>
            <javadoc line="221">
                Abort the authentication (second phase).
                  &lt;p&gt; This method is called if the LoginContext&apos;s
                  overall authentication failed.
                  (the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL LoginModules
                  did not succeed).
                  &lt;p&gt; This method cleans up any state that was originally saved
                  as part of the authentication attempt from the &lt;code&gt;login&lt;/code&gt;
                  and &lt;code&gt;commit&lt;/code&gt; methods.
                  &lt;p&gt;                
                <exception>
                    LoginException if the abort fails                    
                </exception>
                <return>
                    false if this LoginModule&apos;s own login and/or commit attempts
                      failed, and true otherwise.                    
                </return>
            </javadoc>
            <method name="abort" type="boolean" line="240">
                <comment line="251">
                    Clean out state                    
                </comment>
                <comment line="259">
                    overall authentication succeeded and commit succeeded,
                     but someone else&apos;s commit failed                    
                </comment>
                <scope line="241"/>
                <scope line="246"/>
                <scope line="248"/>
                <scope line="257"/>
            </method>
            <javadoc line="265">
                Logout the user
                  &lt;p&gt; This method removes the Principals associated
                  with the &lt;code&gt;Subject&lt;/code&gt;.
                  &lt;p&gt;                
                <exception>
                    LoginException if the logout fails                    
                </exception>
                <return>
                    true in all cases (this &lt;code&gt;LoginModule&lt;/code&gt;
                      should not be ignored).                    
                </return>
            </javadoc>
            <method name="logout" type="boolean" line="278">
                <comment line="285">
                    remove the added Principals from the Subject                    
                </comment>
                <comment line="293">
                    clean out state                    
                </comment>
                <scope line="280"/>
                <scope line="288"/>
                <scope line="301"/>
            </method>
        </class>
    </source>