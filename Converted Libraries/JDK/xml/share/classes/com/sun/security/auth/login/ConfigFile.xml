<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.security.auth.login">
        <import package="javax.security.auth.AuthPermission"/>
        <import package="javax.security.auth.login.AppConfigurationEntry"/>
        <import package="java.io"/>
        <import package="java.util"/>
        <import package="java.net.URI"/>
        <import package="java.net.URL"/>
        <import package="java.net.MalformedURLException"/>
        <import package="java.text.MessageFormat"/>
        <import package="sun.security.util.Debug"/>
        <import package="sun.security.util.ResourcesMgr"/>
        <import package="sun.security.util.PropertyExpander"/>
        <class name="ConfigFile" line="40">
            <extends class="javax.security.auth.login.Configuration"/>
            <comment line="611">
                Fast path reading from file urls in order to avoid calling
                 FileURLConnection.connect() which can be quite slow the first time
                 it is called. We really should clean up FileURLConnection so that
                 this is not a problem but in the meantime this fix helps reduce
                 start up time noticeably for the new launcher. -- DAC                
            </comment>
            <javadoc line="40">
                This class represents a default implementation for
                  &lt;code&gt;javax.security.auth.login.Configuration&lt;/code&gt;.
                  &lt;p&gt; This object stores the runtime login configuration representation,
                  and is the amalgamation of multiple static login
                  configurations that resides in files.
                  The algorithm for locating the login configuration file(s) and reading their
                  information into this &lt;code&gt;Configuration&lt;/code&gt; object is:
                  &lt;ol&gt;
                  &lt;li&gt;
                  Loop through the &lt;code&gt;java.security.Security&lt;/code&gt; properties,
                  &lt;i&gt;login.config.url.1&lt;/i&gt;, &lt;i&gt;login.config.url.2&lt;/i&gt;, ...,
                  &lt;i&gt;login.config.url.X&lt;/i&gt;.  These properties are set
                  in the Java security properties file, which is located in the file named
                  &amp;lt;JAVA_HOME&amp;gt;/lib/security/java.security.
                  &amp;lt;JAVA_HOME&amp;gt; refers to the value of the java.home system property,
                  and specifies the directory where the JRE is installed.
                  Each property value specifies a &lt;code&gt;URL&lt;/code&gt; pointing to a
                  login configuration file to be loaded.  Read in and load
                  each configuration.
                  &lt;li&gt;
                  The &lt;code&gt;java.lang.System&lt;/code&gt; property
                  &lt;i&gt;java.security.auth.login.config&lt;/i&gt;
                  may also be set to a &lt;code&gt;URL&lt;/code&gt; pointing to another
                  login configuration file
                  (which is the case when a user uses the -D switch at runtime).
                  If this property is defined, and its use is allowed by the
                  security property file (the Security property,
                  &lt;i&gt;policy.allowSystemProperty&lt;/i&gt; is set to &lt;i&gt;true&lt;/i&gt;),
                  also load that login configuration.
                  &lt;li&gt;
                  If the &lt;i&gt;java.security.auth.login.config&lt;/i&gt; property is defined using
                  &quot;==&quot; (rather than &quot;=&quot;), then ignore all other specified
                  login configurations and only load this configuration.
                  &lt;li&gt;
                  If no system or security properties were set, try to read from the file,
                  ${user.home}/.java.login.config, where ${user.home} is the value
                  represented by the &quot;user.home&quot; System property.
                  &lt;/ol&gt;
                  &lt;p&gt; The configuration syntax supported by this implementation
                  is exactly that syntax specified in the
                  &lt;code&gt;javax.security.auth.login.Configuration&lt;/code&gt; class.                
                <see>
                    javax.security.auth.login.LoginContext                    
                </see>
            </javadoc>
            <declaration name="st" type="StreamTokenizer" line="93"/>
            <declaration name="lookahead" type="int" line="94"/>
            <declaration name="linenum" type="int" line="95"/>
            <declaration name="configuration" type="HashMap&lt;String,LinkedList&lt;AppConfigurationEntry&gt;&gt;" line="96"/>
            <declaration name="expandProp" type="boolean" line="97"/>
            <declaration name="url" type="URL" line="98"/>
            <declaration name="debugConfig" type="Debug" line="100"/>
            <declaration name="debugParser" type="Debug" line="101"/>
            <javadoc line="103">
                Create a new &lt;code&gt;Configuration&lt;/code&gt; object.                
            </javadoc>
            <method name="ConfigFile" type="constructor" line="106">
                <scope line="107"/>
                <scope line="109"/>
            </method>
            <javadoc line="115">
                Create a new &lt;code&gt;Configuration&lt;/code&gt; object from the specified URI.                
                <param>
                    uri Create a new Configuration object from this URI.                    
                </param>
            </javadoc>
            <method name="ConfigFile" type="constructor" line="120">
                <params>
                    <param name="uri" type="URI"/>
                </params>
                <comment line="122">
                    only load config from the specified URI                    
                </comment>
                <scope line="122"/>
                <scope line="125"/>
                <scope line="128"/>
            </method>
            <javadoc line="134">
                Read and initialize the entire login Configuration.
                  &lt;p&gt;                
                <exception>
                    IOException if the Configuration can not be initialized. <p>                    
                </exception>
                <exception>
                    SecurityException if the caller does not have permission
                      to initialize the Configuration.                    
                </exception>
            </javadoc>
            <method name="init" type="void" line="143">
                <params>
                    <param name="url" type="URL"/>
                </params>
                <comment line="154">
                    new configuration                    
                </comment>
                <comment line="160">
                    If the caller specified a URI via Configuration.getInstance,
                     we only read from that URI                    
                </comment>
                <comment line="172">
                    Caller did not specify URI via Configuration.getInstance.
                     Read from URLs listed in the java.security properties file.                    
                </comment>
                <comment line="257">
                    get the config from the user&apos;s home directory                    
                </comment>
                <comment line="266">
                    No longer throws an exception when there&apos;s no config file
                     at all. Returns an empty Configuration instead.                    
                </comment>
                <declaration name="initialized" type="boolean" line="145"/>
                <declaration name="fr" type="FileReader" line="146"/>
                <declaration name="sep" type="String" line="147"/>
                <scope line="149"/>
                <declaration name="newConfig" type="HashMap&lt;String,LinkedList&lt;AppConfigurationEntry&gt;&gt;" line="154"/>
                <scope line="157">
                    <scope line="163"/>
                </scope>
                <declaration name="allowSys" type="String" line="176"/>
                <scope line="179">
                    <declaration name="extra_config" type="String" line="180"/>
                    <scope line="182">
                        <declaration name="overrideAll" type="boolean" line="183"/>
                        <scope line="184"/>
                        <scope line="188"/>
                        <scope line="190">
                            <declaration name="form" type="MessageFormat" line="191"/>
                            <declaration name="source" type="Object[]" line="195"/>
                        </scope>
                        <declaration name="configURL" type="URL" line="199"/>
                        <scope line="200"/>
                        <scope line="202">
                            <declaration name="configFile" type="File" line="203"/>
                            <scope line="204"/>
                            <scope line="206">
                                <declaration name="form" type="MessageFormat" line="207"/>
                                <declaration name="source" type="Object[]" line="211"/>
                            </scope>
                        </scope>
                        <scope line="216"/>
                        <scope line="221">
                            <scope line="222"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="n" type="int" line="231"/>
                <declaration name="config_url" type="String" line="232"/>
                <scope line="234">
                    <scope line="235">
                        <scope line="238"/>
                    </scope>
                    <scope line="243">
                        <declaration name="form" type="MessageFormat" line="244"/>
                        <declaration name="source" type="Object[]" line="248"/>
                    </scope>
                </scope>
                <scope line="254">
                    <scope line="257"/>
                    <declaration name="userConfigFile" type="String" line="262"/>
                    <scope line="267"/>
                </scope>
            </method>
            <method name="init" type="void" line="278">
                <params>
                    <param name="config" type="URL"/>
                    <param name="newConfig" type="HashMap<String,LinkedList<AppConfigurationEntry>>"/>
                </params>
                <declaration name="isr" type="InputStreamReader" line="280"/>
                <scope line="281"/>
                <scope line="284">
                    <scope line="285"/>
                </scope>
                <scope line="291">
                    <scope line="292"/>
                </scope>
            </method>
            <javadoc line="298">
                Retrieve an entry from the Configuration using an application name
                  as an index.
                  &lt;p&gt;                
                <param>
                    applicationName the name used to index the Configuration.                    
                </param>
                <return>
                    an array of AppConfigurationEntries which correspond to
                      the stacked configuration of LoginModules for this
                      application, or null if this application has no configured
                      LoginModules.                    
                </return>
            </javadoc>
            <method name="getAppConfigurationEntry" type="AppConfigurationEntry[]" line="311">
                <params>
                    <param name="applicationName" type="String"/>
                </params>
                <declaration name="list" type="LinkedList&lt;AppConfigurationEntry&gt;" line="313"/>
                <scope line="314"/>
                <declaration name="entries" type="AppConfigurationEntry[]" line="321"/>
                <declaration name="iterator" type="Iterator&lt;AppConfigurationEntry&gt;" line="323"/>
                <scope line="324">
                    <declaration name="e" type="AppConfigurationEntry" line="325"/>
                </scope>
            </method>
            <javadoc line="333">
                Refresh and reload the Configuration by re-reading all of the
                  login configurations.
                  &lt;p&gt;                
                <exception>
                    SecurityException if the caller does not have permission
                      to refresh the Configuration.                    
                </exception>
            </javadoc>
            <method name="refresh" type="void" line="342">
                <declaration name="sm" type="java.lang.SecurityManager" line="344"/>
                <anonymous_class line="349">
                    <method name="run" type="Void" line="350">
                        <scope line="351"/>
                        <scope line="353"/>
                    </method>
                </anonymous_class>
            </method>
            <method name="readConfig" type="void" line="364">
                <params>
                    <param name="reader" type="Reader"/>
                    <param name="newConfig" type="HashMap<String,LinkedList<AppConfigurationEntry>>"/>
                </params>
                <declaration name="linenum" type="int" line="366"/>
                <scope line="382"/>
            </method>
            <method name="parseLoginEntry" type="void" line="389">
                <params>
                    <param name="newConfig" type="HashMap<String,LinkedList<AppConfigurationEntry>>"/>
                </params>
                <comment line="398">
                    application name                    
                </comment>
                <comment line="408">
                    get the modules                    
                </comment>
                <comment line="410">
                    get the module class name                    
                </comment>
                <comment line="413">
                    controlFlag (required, optional, etc)                    
                </comment>
                <comment line="435">
                    get the args                    
                </comment>
                <comment line="452">
                    create the new element                    
                </comment>
                <comment line="474">
                    add this configuration entry                    
                </comment>
                <declaration name="appName" type="String" line="391"/>
                <declaration name="moduleClass" type="String" line="392"/>
                <declaration name="sflag" type="String" line="393"/>
                <declaration name="controlFlag" type="AppConfigurationEntry.LoginModuleControlFlag" line="394"/>
                <declaration name="configEntries" type="LinkedList&lt;AppConfigurationEntry&gt;" line="395"/>
                <scope line="401"/>
                <scope line="408">
                    <scope line="426">
                        <declaration name="form" type="MessageFormat" line="427"/>
                        <declaration name="source" type="Object[]" line="430"/>
                    </scope>
                    <declaration name="options" type="HashMap&lt;String,String&gt;" line="435"/>
                    <declaration name="key" type="String" line="436"/>
                    <declaration name="value" type="String" line="437"/>
                    <scope line="438">
                        <scope line="441"/>
                        <scope line="443"/>
                    </scope>
                    <scope line="452">
                        <declaration name="i" type="java.util.Iterator&lt;String&gt;" line="454"/>
                        <scope line="455"/>
                    </scope>
                    <declaration name="entry" type="AppConfigurationEntry" line="463"/>
                </scope>
                <scope line="474">
                    <declaration name="form" type="MessageFormat" line="475"/>
                    <declaration name="source" type="Object[]" line="478"/>
                </scope>
            </method>
            <method name="match" type="String" line="484">
                <params>
                    <param name="expect" type="String"/>
                </params>
                <declaration name="value" type="String" line="486"/>
                <declaration name="form1" type="MessageFormat" line="491"/>
                <declaration name="source1" type="Object[]" line="494"/>
                <scope line="503"/>
                <scope line="506">
                    <declaration name="form" type="MessageFormat" line="507"/>
                    <declaration name="source" type="Object[]" line="510"/>
                </scope>
                <scope line="517"/>
                <scope line="519">
                    <declaration name="form" type="MessageFormat" line="520"/>
                    <declaration name="source" type="Object[]" line="523"/>
                </scope>
                <scope line="530"/>
                <scope line="532">
                    <declaration name="form" type="MessageFormat" line="533"/>
                    <declaration name="source" type="Object[]" line="536"/>
                </scope>
                <scope line="543"/>
                <scope line="545">
                    <declaration name="form" type="MessageFormat" line="546"/>
                    <declaration name="source" type="Object[]" line="549"/>
                </scope>
                <scope line="556"/>
                <scope line="558">
                    <declaration name="form" type="MessageFormat" line="559"/>
                    <declaration name="source" type="Object[]" line="562"/>
                </scope>
                <declaration name="form" type="MessageFormat" line="568"/>
                <declaration name="source" type="Object[]" line="571"/>
            </method>
            <method name="peek" type="boolean" line="577">
                <params>
                    <param name="expect" type="String"/>
                </params>
                <declaration name="found" type="boolean" line="578"/>
            </method>
            <method name="nextToken" type="int" line="602">
                <declaration name="tok" type="int" line="603"/>
                <scope line="604"/>
            </method>
            <method name="getInputStream" type="InputStream" line="617">
                <params>
                    <param name="url" type="URL"/>
                </params>
                <comment line="620">
                    Compatibility notes:
                    
                     Code changed from
                       String path = url.getFile().replace(&apos;/&apos;, File.separatorChar);
                       return new FileInputStream(path);
                    
                     The original implementation would search for &quot;/tmp/a%20b&quot;
                     when url is &quot;file:/tmp/a%20b&quot;. This is incorrect. The
                     current codes fix this bug and searches for &quot;/tmp/a b&quot;.
                     For compatibility reasons, when the file &quot;/tmp/a b&quot; does
                     not exist, the file named &quot;/tmp/a%20b&quot; will be tried.
                    
                     This also means that if both file exists, the behavior of
                     this method is changed, and the current codes choose the
                     correct one.                    
                </comment>
                <comment line="639">
                    For Windows UNC                    
                </comment>
                <scope line="618">
                    <scope line="634"/>
                    <scope line="636">
                        <declaration name="file" type="String" line="637"/>
                        <scope line="638"/>
                        <scope line="641"/>
                    </scope>
                </scope>
                <scope line="647"/>
            </method>
            <method name="expand" type="String" line="653">
                <params>
                    <param name="value" type="String"/>
                </params>
                <scope line="655"/>
                <scope line="659">
                    <declaration name="s" type="String" line="661"/>
                    <scope line="663">
                        <declaration name="form" type="MessageFormat" line="664"/>
                        <declaration name="source" type="Object[]" line="667"/>
                    </scope>
                </scope>
                <scope line="671"/>
            </method>
        </class>
    </source>