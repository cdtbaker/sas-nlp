<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.security.auth">
        <import package="java.security.Principal"/>
        <class name="UserPrincipal" line="3">
            <implements interface="Principal"/>
            <implements interface="java.io.Serializable"/>
            <javadoc line="3">
                A user principal identified by a username or account name.
                  &lt;p&gt;
                  After successful authentication, a user {@link java.security.Principal}can be associated with a particular {@link javax.security.auth.Subject}to augment that &lt;code&gt;Subject&lt;/code&gt; with an additional identity.
                  Authorization decisions can then be based upon the
                  &lt;code&gt;Principal&lt;/code&gt;s that are associated with a &lt;code&gt;Subject&lt;/code&gt;.
                  &lt;p&gt;
                  This class is immutable.                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="serialVersionUID" type="long" line="14"/>
            <declaration name="name" type="String" line="15"/>
            <javadoc line="15">
                The principal&apos;s name                
                <serial>
                                        
                </serial>
            </javadoc>
            <javadoc line="20">
                Creates a principal.                
                <param>
                    name The principal&apos;s string name.                    
                </param>
                <exception>
                    NullPointerException If the &lt;code&gt;name&lt;/code&gt; is
                      &lt;code&gt;null&lt;/code&gt;.                    
                </exception>
            </javadoc>
            <method name="UserPrincipal" type="constructor" line="26">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="27"/>
            </method>
            <javadoc line="32">
                Compares this principal to the specified object.                
                <param>
                    object The object to compare this principal against.                    
                </param>
                <return>
                    true if they are equal; false otherwise.                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="37">
                <params>
                    <param name="object" type="Object"/>
                </params>
                <scope line="38"/>
                <scope line="41"/>
            </method>
            <javadoc line="46">
                Returns a hash code for this principal.                
                <return>
                    The principal&apos;s hash code.                    
                </return>
            </javadoc>
            <method name="hashCode" type="int" line="50"/>
            <javadoc line="53">
                Returns the name of this principal.                
                <return>
                    The principal&apos;s name.                    
                </return>
            </javadoc>
            <method name="getName" type="String" line="57"/>
            <javadoc line="60">
                Returns a string representation of this principal.                
                <return>
                    The principal&apos;s name.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="64"/>
        </class>
    </source>