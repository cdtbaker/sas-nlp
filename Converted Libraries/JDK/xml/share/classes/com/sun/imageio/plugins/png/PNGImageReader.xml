<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.imageio.plugins.png">
        <import package="java.awt.Point"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.color.ColorSpace"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.awt.image.DataBuffer"/>
        <import package="java.awt.image.DataBufferByte"/>
        <import package="java.awt.image.DataBufferUShort"/>
        <import package="java.awt.image.Raster"/>
        <import package="java.awt.image.WritableRaster"/>
        <import package="java.io.BufferedInputStream"/>
        <import package="java.io.ByteArrayInputStream"/>
        <import package="java.io.DataInputStream"/>
        <import package="java.io.EOFException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.SequenceInputStream"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.zip.Inflater"/>
        <import package="java.util.zip.InflaterInputStream"/>
        <import package="javax.imageio.IIOException"/>
        <import package="javax.imageio.ImageReader"/>
        <import package="javax.imageio.ImageReadParam"/>
        <import package="javax.imageio.ImageTypeSpecifier"/>
        <import package="javax.imageio.metadata.IIOMetadata"/>
        <import package="javax.imageio.spi.ImageReaderSpi"/>
        <import package="javax.imageio.stream.ImageInputStream"/>
        <import package="com.sun.imageio.plugins.common.InputStreamAdapter"/>
        <import package="com.sun.imageio.plugins.common.ReaderUtil"/>
        <import package="com.sun.imageio.plugins.common.SubImageInputStream"/>
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="sun.awt.image.ByteInterleavedRaster"/>
        <class name="PNGImageDataEnumeration" line="36">
            <implements interface="Enumeration">
                <type_params>
                    <type_param name="InputStream"/>
                </type_params>
            </implements>
            <declaration name="firstTime" type="boolean" line="37"/>
            <declaration name="stream" type="ImageInputStream" line="38"/>
            <declaration name="length" type="int" line="39"/>
            <method name="PNGImageDataEnumeration" type="constructor" line="40">
                <params>
                    <param name="stream" type="ImageInputStream"/>
                </params>
                <declaration name="type" type="int" line="43"/>
            </method>
            <method name="nextElement" type="InputStream" line="45">
                <scope line="46">
                    <declaration name="iis" type="ImageInputStream" line="48"/>
                </scope>
                <scope line="51"/>
            </method>
            <method name="hasMoreElements" type="boolean" line="55">
                <scope line="56"/>
                <scope line="59">
                    <declaration name="crc" type="int" line="60"/>
                    <declaration name="type" type="int" line="62"/>
                    <scope line="63"/>
                    <scope line="66"/>
                </scope>
                <scope line="70"/>
            </method>
        </class>
        <class name="PNGImageReader" line="75">
            <extends class="ImageReader"/>
            <declaration name="IHDR_TYPE" type="int" line="76"/>
            <declaration name="PLTE_TYPE" type="int" line="77"/>
            <declaration name="IDAT_TYPE" type="int" line="78"/>
            <declaration name="IEND_TYPE" type="int" line="79"/>
            <declaration name="bKGD_TYPE" type="int" line="80"/>
            <declaration name="cHRM_TYPE" type="int" line="81"/>
            <declaration name="gAMA_TYPE" type="int" line="82"/>
            <declaration name="hIST_TYPE" type="int" line="83"/>
            <declaration name="iCCP_TYPE" type="int" line="84"/>
            <declaration name="iTXt_TYPE" type="int" line="85"/>
            <declaration name="pHYs_TYPE" type="int" line="86"/>
            <declaration name="sBIT_TYPE" type="int" line="87"/>
            <declaration name="sPLT_TYPE" type="int" line="88"/>
            <declaration name="sRGB_TYPE" type="int" line="89"/>
            <declaration name="tEXt_TYPE" type="int" line="90"/>
            <declaration name="tIME_TYPE" type="int" line="91"/>
            <declaration name="tRNS_TYPE" type="int" line="92"/>
            <declaration name="zTXt_TYPE" type="int" line="93"/>
            <declaration name="PNG_COLOR_GRAY" type="int" line="94"/>
            <declaration name="PNG_COLOR_RGB" type="int" line="95"/>
            <declaration name="PNG_COLOR_PALETTE" type="int" line="96"/>
            <declaration name="PNG_COLOR_GRAY_ALPHA" type="int" line="97"/>
            <declaration name="PNG_COLOR_RGB_ALPHA" type="int" line="98"/>
            <declaration name="inputBandsForColorType" type="int[]" line="99"/>
            <declaration name="PNG_FILTER_NONE" type="int" line="100"/>
            <declaration name="PNG_FILTER_SUB" type="int" line="101"/>
            <declaration name="PNG_FILTER_UP" type="int" line="102"/>
            <declaration name="PNG_FILTER_AVERAGE" type="int" line="103"/>
            <declaration name="PNG_FILTER_PAETH" type="int" line="104"/>
            <declaration name="adam7XOffset" type="int[]" line="105"/>
            <declaration name="adam7YOffset" type="int[]" line="106"/>
            <declaration name="adam7XSubsampling" type="int[]" line="107"/>
            <declaration name="adam7YSubsampling" type="int[]" line="108"/>
            <declaration name="debug" type="boolean" line="109"/>
            <declaration name="stream" type="ImageInputStream" line="110"/>
            <declaration name="gotHeader" type="boolean" line="111"/>
            <declaration name="gotMetadata" type="boolean" line="112"/>
            <declaration name="lastParam" type="ImageReadParam" line="113"/>
            <declaration name="imageStartPosition" type="long" line="114"/>
            <declaration name="sourceRegion" type="Rectangle" line="115"/>
            <declaration name="sourceXSubsampling" type="int" line="116"/>
            <declaration name="sourceYSubsampling" type="int" line="117"/>
            <declaration name="sourceMinProgressivePass" type="int" line="118"/>
            <declaration name="sourceMaxProgressivePass" type="int" line="119"/>
            <declaration name="sourceBands" type="int[]" line="120"/>
            <declaration name="destinationBands" type="int[]" line="121"/>
            <declaration name="destinationOffset" type="Point" line="122"/>
            <declaration name="metadata" type="PNGMetadata" line="123"/>
            <declaration name="pixelStream" type="DataInputStream" line="124"/>
            <declaration name="theImage" type="BufferedImage" line="125"/>
            <declaration name="pixelsDone" type="int" line="126"/>
            <declaration name="totalPixels" type="int" line="127"/>
            <method name="PNGImageReader" type="constructor" line="128">
                <params>
                    <param name="originatingProvider" type="ImageReaderSpi"/>
                </params>
            </method>
            <method name="setInput" type="void" line="131">
                <params>
                    <param name="input" type="Object"/>
                    <param name="seekForwardOnly" type="boolean"/>
                    <param name="ignoreMetadata" type="boolean"/>
                </params>
            </method>
            <method name="readNullTerminatedString" type="String" line="136">
                <params>
                    <param name="charset" type="String"/>
                    <param name="maxLen" type="int"/>
                </params>
                <declaration name="baos" type="ByteArrayOutputStream" line="137"/>
                <declaration name="b" type="int" line="138"/>
                <declaration name="count" type="int" line="139"/>
                <scope line="140"/>
            </method>
            <method name="readHeader" type="void" line="146">
                <scope line="147"/>
                <scope line="150"/>
                <scope line="153">
                    <declaration name="signature" type="byte[]" line="154"/>
                    <scope line="156"/>
                    <declaration name="IHDR_length" type="int" line="159"/>
                    <scope line="160"/>
                    <declaration name="IHDR_type" type="int" line="163"/>
                    <scope line="164"/>
                    <declaration name="width" type="int" line="168"/>
                    <declaration name="height" type="int" line="169"/>
                    <declaration name="bitDepth" type="int" line="171"/>
                    <declaration name="colorType" type="int" line="172"/>
                    <declaration name="compressionMethod" type="int" line="173"/>
                    <declaration name="filterMethod" type="int" line="174"/>
                    <declaration name="interlaceMethod" type="int" line="175"/>
                    <scope line="178"/>
                    <scope line="181"/>
                    <scope line="184"/>
                    <scope line="187"/>
                    <scope line="190"/>
                    <scope line="193"/>
                    <scope line="196"/>
                    <scope line="199"/>
                    <scope line="202"/>
                </scope>
                <scope line="215"/>
            </method>
            <method name="parse_PLTE_chunk" type="void" line="219">
                <params>
                    <param name="chunkLength" type="int"/>
                </params>
                <scope line="220"/>
                <scope line="224"/>
                <declaration name="palette" type="byte[]" line="228"/>
                <declaration name="numEntries" type="int" line="230"/>
                <scope line="231">
                    <declaration name="maxEntries" type="int" line="232"/>
                    <scope line="233"/>
                </scope>
                <declaration name="paletteEntries" type="int" line="239"/>
                <scope line="240"/>
                <scope line="243"/>
                <scope line="246"/>
                <scope line="249"/>
                <declaration name="index" type="int" line="256"/>
                <scope line="257"/>
            </method>
            <method name="parse_bKGD_chunk" type="void" line="263">
                <scope line="264"/>
                <scope line="268"/>
                <scope line="272"/>
            </method>
            <method name="parse_cHRM_chunk" type="void" line="280"/>
            <method name="parse_gAMA_chunk" type="void" line="291">
                <declaration name="gamma" type="int" line="292"/>
            </method>
            <method name="parse_hIST_chunk" type="void" line="296">
                <params>
                    <param name="chunkLength" type="int"/>
                </params>
                <scope line="297"/>
            </method>
            <method name="parse_iCCP_chunk" type="void" line="304">
                <params>
                    <param name="chunkLength" type="int"/>
                </params>
                <declaration name="keyword" type="String" line="305"/>
                <declaration name="compressedProfile" type="byte[]" line="308"/>
            </method>
            <method name="parse_iTXt_chunk" type="void" line="313">
                <params>
                    <param name="chunkLength" type="int"/>
                </params>
                <declaration name="chunkStart" type="long" line="314"/>
                <declaration name="keyword" type="String" line="315"/>
                <declaration name="compressionFlag" type="int" line="317"/>
                <declaration name="compressionMethod" type="int" line="319"/>
                <declaration name="languageTag" type="String" line="321"/>
                <declaration name="pos" type="long" line="323"/>
                <declaration name="maxLen" type="int" line="324"/>
                <declaration name="translatedKeyword" type="String" line="325"/>
                <declaration name="text" type="String" line="327"/>
                <declaration name="b" type="byte[]" line="329"/>
                <scope line="331"/>
                <scope line="334"/>
            </method>
            <method name="parse_pHYs_chunk" type="void" line="339"/>
            <method name="parse_sBIT_chunk" type="void" line="345">
                <declaration name="colorType" type="int" line="346"/>
                <scope line="347"/>
                <scope line="350"/>
                <scope line="355"/>
            </method>
            <method name="parse_sPLT_chunk" type="void" line="361">
                <params>
                    <param name="chunkLength" type="int"/>
                </params>
                <declaration name="sampleDepth" type="int" line="364"/>
                <declaration name="numEntries" type="int" line="366"/>
                <scope line="372">
                    <scope line="373"/>
                </scope>
                <scope line="381">
                    <scope line="382"/>
                </scope>
                <scope line="390"/>
            </method>
            <method name="parse_sRGB_chunk" type="void" line="395"/>
            <method name="parse_tEXt_chunk" type="void" line="399">
                <params>
                    <param name="chunkLength" type="int"/>
                </params>
                <declaration name="keyword" type="String" line="400"/>
                <declaration name="b" type="byte[]" line="402"/>
            </method>
            <method name="parse_tIME_chunk" type="void" line="406"/>
            <method name="parse_tRNS_chunk" type="void" line="415">
                <params>
                    <param name="chunkLength" type="int"/>
                </params>
                <declaration name="colorType" type="int" line="416"/>
                <scope line="417">
                    <scope line="418"/>
                    <declaration name="maxEntries" type="int" line="422"/>
                    <declaration name="numEntries" type="int" line="423"/>
                    <scope line="424"/>
                </scope>
                <scope line="433">
                    <scope line="434"/>
                </scope>
                <scope line="442">
                    <scope line="443"/>
                </scope>
                <scope line="453"/>
            </method>
            <method name="inflate" type="byte[]" line="459">
                <params>
                    <param name="b" type="byte[]"/>
                </params>
                <declaration name="bais" type="InputStream" line="460"/>
                <declaration name="iis" type="InputStream" line="461"/>
                <declaration name="baos" type="ByteArrayOutputStream" line="462"/>
                <declaration name="c" type="int" line="463"/>
                <scope line="464">
                    <scope line="465"/>
                </scope>
                <scope line="469"/>
            </method>
            <method name="parse_zTXt_chunk" type="void" line="474">
                <params>
                    <param name="chunkLength" type="int"/>
                </params>
                <declaration name="keyword" type="String" line="475"/>
                <declaration name="method" type="int" line="477"/>
                <declaration name="b" type="byte[]" line="479"/>
            </method>
            <method name="readMetadata" type="void" line="483">
                <scope line="484"/>
                <declaration name="colorType" type="int" line="488"/>
                <scope line="489">
                    <scope line="490">
                        <scope line="491">
                            <declaration name="chunkLength" type="int" line="492"/>
                            <declaration name="chunkType" type="int" line="493"/>
                            <scope line="494"/>
                            <scope line="499"/>
                        </scope>
                    </scope>
                    <scope line="504"/>
                </scope>
                <scope line="510">
                    <scope line="511">
                        <declaration name="chunkLength" type="int" line="512"/>
                        <declaration name="chunkType" type="int" line="513"/>
                        <declaration name="b" type="byte[]" line="565"/>
                        <declaration name="chunkName" type="StringBuilder" line="567"/>
                        <declaration name="ancillaryBit" type="int" line="572"/>
                        <scope line="573"/>
                        <declaration name="chunkCRC" type="int" line="580"/>
                    </scope>
                </scope>
                <scope line="584"/>
            </method>
            <method name="decodeSubFilter" type="void" line="589">
                <params>
                    <param name="curr" type="byte[]"/>
                    <param name="coff" type="int"/>
                    <param name="count" type="int"/>
                    <param name="bpp" type="int"/>
                </params>
                <scope line="590">
                    <declaration name="val" type="int" line="591"/>
                </scope>
            </method>
            <method name="decodeUpFilter" type="void" line="597">
                <params>
                    <param name="curr" type="byte[]"/>
                    <param name="coff" type="int"/>
                    <param name="prev" type="byte[]"/>
                    <param name="poff" type="int"/>
                    <param name="count" type="int"/>
                </params>
                <scope line="598">
                    <declaration name="raw" type="int" line="599"/>
                    <declaration name="prior" type="int" line="600"/>
                </scope>
            </method>
            <method name="decodeAverageFilter" type="void" line="604">
                <params>
                    <param name="curr" type="byte[]"/>
                    <param name="coff" type="int"/>
                    <param name="prev" type="byte[]"/>
                    <param name="poff" type="int"/>
                    <param name="count" type="int"/>
                    <param name="bpp" type="int"/>
                </params>
                <declaration name="raw" type="int" line="605"/>
                <scope line="606"/>
                <scope line="611"/>
            </method>
            <method name="paethPredictor" type="int" line="618">
                <params>
                    <param name="a" type="int"/>
                    <param name="b" type="int"/>
                    <param name="c" type="int"/>
                </params>
                <declaration name="p" type="int" line="619"/>
                <declaration name="pa" type="int" line="620"/>
                <declaration name="pb" type="int" line="621"/>
                <declaration name="pc" type="int" line="622"/>
                <scope line="623"/>
                <scope line="626"/>
                <scope line="629"/>
            </method>
            <method name="decodePaethFilter" type="void" line="633">
                <params>
                    <param name="curr" type="byte[]"/>
                    <param name="coff" type="int"/>
                    <param name="prev" type="byte[]"/>
                    <param name="poff" type="int"/>
                    <param name="count" type="int"/>
                    <param name="bpp" type="int"/>
                </params>
                <declaration name="raw" type="int" line="634"/>
                <scope line="635"/>
                <scope line="640"/>
            </method>
            <declaration name="bandOffsets" type="int[][]" line="648"/>
            <method name="createRaster" type="WritableRaster" line="649">
                <params>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="bands" type="int"/>
                    <param name="scanlineStride" type="int"/>
                    <param name="bitDepth" type="int"/>
                </params>
                <declaration name="dataBuffer" type="DataBuffer" line="650"/>
                <declaration name="ras" type="WritableRaster" line="651"/>
                <declaration name="origin" type="Point" line="652"/>
                <scope line="653"/>
                <scope line="657"/>
                <scope line="661"/>
            </method>
            <method name="skipPass" type="void" line="667">
                <params>
                    <param name="passWidth" type="int"/>
                    <param name="passHeight" type="int"/>
                </params>
                <scope line="668"/>
                <declaration name="inputBands" type="int" line="671"/>
                <declaration name="bytesPerRow" type="int" line="672"/>
                <scope line="673">
                    <scope line="675"/>
                </scope>
            </method>
            <method name="updateImageProgress" type="void" line="680">
                <params>
                    <param name="newPixels" type="int"/>
                </params>
            </method>
            <method name="decodePass" type="void" line="684">
                <params>
                    <param name="passNum" type="int"/>
                    <param name="xStart" type="int"/>
                    <param name="yStart" type="int"/>
                    <param name="xStep" type="int"/>
                    <param name="yStep" type="int"/>
                    <param name="passWidth" type="int"/>
                    <param name="passHeight" type="int"/>
                </params>
                <scope line="685"/>
                <declaration name="imRas" type="WritableRaster" line="688"/>
                <declaration name="dstMinX" type="int" line="689"/>
                <declaration name="dstMaxX" type="int" line="690"/>
                <declaration name="dstMinY" type="int" line="691"/>
                <declaration name="dstMaxY" type="int" line="692"/>
                <declaration name="vals" type="int[]" line="693"/>
                <declaration name="updateMinX" type="int" line="694"/>
                <declaration name="updateMinY" type="int" line="695"/>
                <declaration name="updateWidth" type="int" line="696"/>
                <declaration name="updateXStep" type="int" line="697"/>
                <declaration name="updateYStep" type="int" line="698"/>
                <declaration name="bitDepth" type="int" line="699"/>
                <declaration name="inputBands" type="int" line="700"/>
                <declaration name="bytesPerPixel" type="int" line="701"/>
                <declaration name="bytesPerRow" type="int" line="703"/>
                <declaration name="eltsPerRow" type="int" line="704"/>
                <scope line="705">
                    <scope line="706"/>
                </scope>
                <declaration name="sourceX" type="int" line="712"/>
                <declaration name="srcX" type="int" line="713"/>
                <declaration name="srcXStep" type="int" line="714"/>
                <declaration name="byteData" type="byte[]" line="715"/>
                <declaration name="shortData" type="short[]" line="716"/>
                <declaration name="curr" type="byte[]" line="717"/>
                <declaration name="prior" type="byte[]" line="718"/>
                <declaration name="passRow" type="WritableRaster" line="719"/>
                <declaration name="ps" type="int[]" line="720"/>
                <declaration name="dataBuffer" type="DataBuffer" line="721"/>
                <declaration name="type" type="int" line="722"/>
                <scope line="723"/>
                <scope line="726"/>
                <scope line="730"/>
                <scope line="733"/>
                <declaration name="adjustBitDepths" type="boolean" line="736"/>
                <declaration name="outputSampleSize" type="int[]" line="737"/>
                <declaration name="numBands" type="int" line="738"/>
                <scope line="739">
                    <scope line="740"/>
                </scope>
                <declaration name="scale" type="int[][]" line="745"/>
                <scope line="746">
                    <declaration name="maxInSample" type="int" line="747"/>
                    <declaration name="halfMaxInSample" type="int" line="748"/>
                    <scope line="750">
                        <declaration name="maxOutSample" type="int" line="751"/>
                        <scope line="753"/>
                    </scope>
                </scope>
                <declaration name="useSetRect" type="boolean" line="758"/>
                <scope line="759"/>
                <scope line="762">
                    <declaration name="filter" type="int" line="764"/>
                    <scope line="765">
                        <declaration name="tmp" type="byte[]" line="766"/>
                    </scope>
                    <scope line="771"/>
                    <scope line="792"/>
                    <scope line="795">
                        <declaration name="idx" type="int" line="796"/>
                        <scope line="797"/>
                    </scope>
                    <declaration name="sourceY" type="int" line="802"/>
                    <scope line="803">
                        <declaration name="dstY" type="int" line="804"/>
                        <scope line="805"/>
                        <scope line="808"/>
                        <scope line="811"/>
                        <scope line="814">
                            <declaration name="newSrcX" type="int" line="815"/>
                            <scope line="816">
                                <scope line="818">
                                    <scope line="819"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="828"/>
                    </scope>
                </scope>
            </method>
            <method name="decodeImage" type="void" line="835">
                <declaration name="width" type="int" line="836"/>
                <declaration name="height" type="int" line="837"/>
                <scope line="841"/>
                <scope line="844">
                    <scope line="845">
                        <declaration name="XOffset" type="int" line="846"/>
                        <declaration name="YOffset" type="int" line="847"/>
                        <declaration name="XSubsampling" type="int" line="848"/>
                        <declaration name="YSubsampling" type="int" line="849"/>
                        <declaration name="xbump" type="int" line="850"/>
                        <declaration name="ybump" type="int" line="851"/>
                        <scope line="852"/>
                        <scope line="855"/>
                        <scope line="858"/>
                    </scope>
                </scope>
            </method>
            <method name="readImage" type="void" line="864">
                <params>
                    <param name="param" type="ImageReadParam"/>
                </params>
                <declaration name="width" type="int" line="866"/>
                <declaration name="height" type="int" line="867"/>
                <scope line="875"/>
                <declaration name="inf" type="Inflater" line="884"/>
                <scope line="885">
                    <declaration name="e" type="Enumeration&lt;InputStream&gt;" line="887"/>
                    <declaration name="is" type="InputStream" line="888"/>
                    <declaration name="destRegion" type="Rectangle" line="894"/>
                    <declaration name="colorType" type="int" line="898"/>
                    <scope line="902"/>
                    <scope line="905"/>
                </scope>
                <scope line="909"/>
                <scope line="912">
                    <scope line="913"/>
                </scope>
            </method>
            <method name="getNumImages" type="int" line="918">
                <params>
                    <param name="allowSearch" type="boolean"/>
                </params>
                <scope line="919"/>
                <scope line="922"/>
            </method>
            <method name="getWidth" type="int" line="927">
                <params>
                    <param name="imageIndex" type="int"/>
                </params>
                <scope line="928"/>
            </method>
            <method name="getHeight" type="int" line="934">
                <params>
                    <param name="imageIndex" type="int"/>
                </params>
                <scope line="935"/>
            </method>
            <method name="getImageTypes" type="Iterator<ImageTypeSpecifier>" line="941">
                <params>
                    <param name="imageIndex" type="int"/>
                </params>
                <scope line="942"/>
                <declaration name="l" type="ArrayList&lt;ImageTypeSpecifier&gt;" line="946"/>
                <declaration name="rgb" type="ColorSpace" line="947"/>
                <declaration name="gray" type="ColorSpace" line="948"/>
                <declaration name="bandOffsets" type="int[]" line="949"/>
                <declaration name="bitDepth" type="int" line="950"/>
                <declaration name="colorType" type="int" line="951"/>
                <declaration name="dataType" type="int" line="952"/>
                <scope line="953"/>
                <scope line="956"/>
                <scope line="964"/>
                <declaration name="plength" type="int" line="978"/>
                <declaration name="red" type="byte[]" line="979"/>
                <declaration name="green" type="byte[]" line="980"/>
                <declaration name="blue" type="byte[]" line="981"/>
                <scope line="982"/>
                <declaration name="alpha" type="byte[]" line="990"/>
                <scope line="991">
                    <scope line="992"/>
                    <scope line="995"/>
                </scope>
                <scope line="1010"/>
            </method>
            <method name="getRawImageType" type="ImageTypeSpecifier" line="1027">
                <params>
                    <param name="imageIndex" type="int"/>
                </params>
                <declaration name="types" type="Iterator&lt;ImageTypeSpecifier&gt;" line="1028"/>
                <declaration name="raw" type="ImageTypeSpecifier" line="1029"/>
                <scope line="1030"/>
            </method>
            <method name="getDefaultReadParam" type="ImageReadParam" line="1036"/>
            <method name="getStreamMetadata" type="IIOMetadata" line="1039"/>
            <method name="getImageMetadata" type="IIOMetadata" line="1042">
                <params>
                    <param name="imageIndex" type="int"/>
                </params>
                <scope line="1043"/>
            </method>
            <method name="read" type="BufferedImage" line="1049">
                <params>
                    <param name="imageIndex" type="int"/>
                    <param name="param" type="ImageReadParam"/>
                </params>
                <scope line="1050"/>
            </method>
            <method name="reset" type="void" line="1056"/>
            <method name="resetStreamSettings" type="void" line="1060"/>
        </class>
    </source>