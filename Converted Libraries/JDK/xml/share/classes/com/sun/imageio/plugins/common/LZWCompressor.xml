<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.imageio.plugins.common">
        <import package="java.io.IOException"/>
        <import package="java.io.PrintStream"/>
        <import package="javax.imageio.stream.ImageOutputStream"/>
        <class name="LZWCompressor" line="36">
            <comment line="129">
                Indicate to compressor that no more data to go so write out
                 any remaining buffered data.
                
                 @exception IOException if underlying output stream error                
            </comment>
            <declaration name="codeSize" type="int" line="37"/>
            <javadoc line="37">
                base underlying code size of data being compressed 8 for TIFF, 1 to 8 for GIF                
            </javadoc>
            <declaration name="clearCode" type="int" line="40"/>
            <javadoc line="40">
                reserved clear code based on code size                
            </javadoc>
            <declaration name="endOfInfo" type="int" line="43"/>
            <javadoc line="43">
                reserved end of data code based on code size                
            </javadoc>
            <declaration name="numBits" type="int" line="46"/>
            <javadoc line="46">
                current number bits output for each code                
            </javadoc>
            <declaration name="limit" type="int" line="49"/>
            <javadoc line="49">
                limit at which current number of bits code size has to be increased                
            </javadoc>
            <declaration name="prefix" type="short" line="52"/>
            <javadoc line="52">
                the prefix code which represents the predecessor string to current input point                
            </javadoc>
            <declaration name="bf" type="BitFile" line="55"/>
            <javadoc line="55">
                output destination for bit codes                
            </javadoc>
            <declaration name="lzss" type="LZWStringTable" line="58"/>
            <javadoc line="58">
                general purpose LZW string table                
            </javadoc>
            <declaration name="tiffFudge" type="boolean" line="61"/>
            <javadoc line="61">
                modify the limits of the code values in LZW encoding due to TIFF bug / feature                
            </javadoc>
            <javadoc line="64">
                @param out destination for compressed data                
                <param>
                    codeSize the initial code size for the LZW compressor                    
                </param>
                <param>
                    TIFF flag indicating that TIFF lzw fudge needs to be applied                    
                </param>
                <exception>
                    IOException if underlying output stream error                    
                </exception>
            </javadoc>
            <method name="LZWCompressor" type="constructor" line="72">
                <params>
                    <param name="out" type="ImageOutputStream"/>
                    <param name="codeSize" type="int"/>
                    <param name="TIFF" type="boolean"/>
                </params>
                <comment line="74">
                    set flag for GIF as NOT tiff                    
                </comment>
                <scope line="81"/>
            </method>
            <javadoc line="91">
                @param buf data to be compressed to output stream                
                <exception>
                    IOException if underlying output stream error                    
                </exception>
            </javadoc>
            <method name="compress" type="void" line="97">
                <params>
                    <param name="buf" type="byte[]"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                </params>
                <declaration name="idx" type="int" line="98"/>
                <declaration name="c" type="byte" line="99"/>
                <declaration name="index" type="short" line="100"/>
                <declaration name="maxOffset" type="int" line="102"/>
                <scope line="103">
                    <scope line="105"/>
                    <scope line="107">
                        <scope line="109">
                            <scope line="110"/>
                            <scope line="114"/>
                            <scope line="119"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="flush" type="void" line="134">
                <scope line="135"/>
            </method>
            <method name="dump" type="void" line="143">
                <params>
                    <param name="out" type="PrintStream"/>
                </params>
            </method>
        </class>
    </source>