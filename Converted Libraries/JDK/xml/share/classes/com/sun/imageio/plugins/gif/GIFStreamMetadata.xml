<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.imageio.plugins.gif">
        <import package="javax.imageio.ImageTypeSpecifier"/>
        <import package="javax.imageio.metadata.IIOInvalidTreeException"/>
        <import package="javax.imageio.metadata.IIOMetadata"/>
        <import package="javax.imageio.metadata.IIOMetadataNode"/>
        <import package="javax.imageio.metadata.IIOMetadataFormat"/>
        <import package="javax.imageio.metadata.IIOMetadataFormatImpl"/>
        <import package="org.w3c.dom.Node"/>
        <class name="GIFStreamMetadata" line="9">
            <extends class="GIFMetadata"/>
            <declaration name="nativeMetadataFormatName" type="String" line="10"/>
            <declaration name="versionStrings" type="String[]" line="11"/>
            <declaration name="version" type="String" line="12"/>
            <declaration name="logicalScreenWidth" type="int" line="13"/>
            <declaration name="logicalScreenHeight" type="int" line="14"/>
            <declaration name="colorResolution" type="int" line="15"/>
            <declaration name="pixelAspectRatio" type="int" line="16"/>
            <declaration name="backgroundColorIndex" type="int" line="17"/>
            <declaration name="sortFlag" type="boolean" line="18"/>
            <declaration name="colorTableSizes" type="String[]" line="19"/>
            <declaration name="globalColorTable" type="byte[]" line="20"/>
            <method name="GIFStreamMetadata" type="constructor" line="21">
                <params>
                    <param name="standardMetadataFormatSupported" type="boolean"/>
                    <param name="nativeMetadataFormatName" type="String"/>
                    <param name="nativeMetadataFormatClassName" type="String"/>
                    <param name="extraMetadataFormatNames" type="String[]"/>
                    <param name="extraMetadataFormatClassNames" type="String[]"/>
                </params>
            </method>
            <method name="GIFStreamMetadata" type="constructor" line="24"/>
            <method name="isReadOnly" type="boolean" line="27"/>
            <method name="getAsTree" type="Node" line="30">
                <params>
                    <param name="formatName" type="String"/>
                </params>
                <scope line="31"/>
                <scope line="34"/>
                <scope line="37"/>
            </method>
            <method name="getNativeTree" type="Node" line="41">
                <declaration name="node" type="IIOMetadataNode" line="42"/>
                <declaration name="root" type="IIOMetadataNode" line="43"/>
                <scope line="53">
                    <declaration name="numEntries" type="int" line="55"/>
                    <scope line="59">
                        <declaration name="entry" type="IIOMetadataNode" line="60"/>
                        <declaration name="r" type="int" line="62"/>
                        <declaration name="g" type="int" line="63"/>
                        <declaration name="b" type="int" line="64"/>
                    </scope>
                </scope>
            </method>
            <method name="getStandardChromaNode" type="IIOMetadataNode" line="74">
                <declaration name="chroma_node" type="IIOMetadataNode" line="75"/>
                <declaration name="node" type="IIOMetadataNode" line="76"/>
                <scope line="83">
                    <declaration name="numEntries" type="int" line="85"/>
                    <scope line="86">
                        <declaration name="entry" type="IIOMetadataNode" line="87"/>
                    </scope>
                </scope>
            </method>
            <method name="getStandardCompressionNode" type="IIOMetadataNode" line="101">
                <declaration name="compression_node" type="IIOMetadataNode" line="102"/>
                <declaration name="node" type="IIOMetadataNode" line="103"/>
            </method>
            <method name="getStandardDataNode" type="IIOMetadataNode" line="112">
                <declaration name="data_node" type="IIOMetadataNode" line="113"/>
                <declaration name="node" type="IIOMetadataNode" line="114"/>
            </method>
            <method name="getStandardDimensionNode" type="IIOMetadataNode" line="123">
                <declaration name="dimension_node" type="IIOMetadataNode" line="124"/>
                <declaration name="node" type="IIOMetadataNode" line="125"/>
                <declaration name="aspectRatio" type="float" line="127"/>
                <scope line="128"/>
            </method>
            <method name="getStandardDocumentNode" type="IIOMetadataNode" line="144">
                <declaration name="document_node" type="IIOMetadataNode" line="145"/>
                <declaration name="node" type="IIOMetadataNode" line="146"/>
            </method>
            <method name="getStandardTextNode" type="IIOMetadataNode" line="152"/>
            <method name="getStandardTransparencyNode" type="IIOMetadataNode" line="155"/>
            <method name="setFromTree" type="void" line="158">
                <params>
                    <param name="formatName" type="String"/>
                    <param name="root" type="Node"/>
                </params>
            </method>
            <method name="mergeNativeTree" type="void" line="161">
                <params>
                    <param name="root" type="Node"/>
                </params>
            </method>
            <method name="mergeStandardTree" type="void" line="164">
                <params>
                    <param name="root" type="Node"/>
                </params>
            </method>
            <method name="reset" type="void" line="167"/>
        </class>
    </source>