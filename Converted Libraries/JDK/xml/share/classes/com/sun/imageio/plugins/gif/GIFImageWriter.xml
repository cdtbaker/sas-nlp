<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.imageio.plugins.gif">
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.image.ColorModel"/>
        <import package="java.awt.image.ComponentSampleModel"/>
        <import package="java.awt.image.DataBufferByte"/>
        <import package="java.awt.image.IndexColorModel"/>
        <import package="java.awt.image.Raster"/>
        <import package="java.awt.image.RenderedImage"/>
        <import package="java.awt.image.SampleModel"/>
        <import package="java.awt.image.WritableRaster"/>
        <import package="java.io.IOException"/>
        <import package="java.nio.ByteOrder"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.Locale"/>
        <import package="javax.imageio.IIOException"/>
        <import package="javax.imageio.IIOImage"/>
        <import package="javax.imageio.ImageTypeSpecifier"/>
        <import package="javax.imageio.ImageWriteParam"/>
        <import package="javax.imageio.ImageWriter"/>
        <import package="javax.imageio.spi.ImageWriterSpi"/>
        <import package="javax.imageio.metadata.IIOInvalidTreeException"/>
        <import package="javax.imageio.metadata.IIOMetadata"/>
        <import package="javax.imageio.metadata.IIOMetadataFormatImpl"/>
        <import package="javax.imageio.metadata.IIOMetadataNode"/>
        <import package="javax.imageio.stream.ImageOutputStream"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.w3c.dom.NodeList"/>
        <import package="com.sun.imageio.plugins.common.LZWCompressor"/>
        <import package="com.sun.imageio.plugins.common.PaletteBuilder"/>
        <import package="sun.awt.image.ByteComponentRaster"/>
        <class name="GIFImageWriter" line="33">
            <extends class="ImageWriter"/>
            <declaration name="DEBUG" type="boolean" line="34"/>
            <declaration name="STANDARD_METADATA_NAME" type="String" line="35"/>
            <declaration name="STREAM_METADATA_NAME" type="String" line="36"/>
            <declaration name="IMAGE_METADATA_NAME" type="String" line="37"/>
            <declaration name="stream" type="ImageOutputStream" line="38"/>
            <javadoc line="38">
                The &lt;code&gt;output&lt;/code&gt; case to an &lt;code&gt;ImageOutputStream&lt;/code&gt;.                
            </javadoc>
            <declaration name="isWritingSequence" type="boolean" line="42"/>
            <javadoc line="42">
                Whether a sequence is being written.                
            </javadoc>
            <declaration name="wroteSequenceHeader" type="boolean" line="46"/>
            <javadoc line="46">
                Whether the header has been written.                
            </javadoc>
            <declaration name="theStreamMetadata" type="GIFWritableStreamMetadata" line="50"/>
            <javadoc line="50">
                The stream metadata of a sequence.                
            </javadoc>
            <declaration name="imageIndex" type="int" line="54"/>
            <javadoc line="54">
                The index of the image being written.                
            </javadoc>
            <javadoc line="58">
                The number of bits represented by the value which should be a
                  legal length for a color table.                
            </javadoc>
            <method name="getNumBits" type="int" line="62">
                <params>
                    <param name="value" type="int"/>
                </params>
                <declaration name="numBits" type="int" line="63"/>
            </method>
            <javadoc line="94">
                Compute the source region and destination dimensions taking any
                  parameter settings into account.                
            </javadoc>
            <method name="computeRegions" type="void" line="98">
                <params>
                    <param name="sourceBounds" type="Rectangle"/>
                    <param name="destSize" type="Dimension"/>
                    <param name="p" type="ImageWriteParam"/>
                </params>
                <declaration name="param" type="ImageWriteParam" line="99"/>
                <declaration name="periodX" type="int" line="100"/>
                <declaration name="periodY" type="int" line="101"/>
                <scope line="102">
                    <declaration name="sourceBands" type="int[]" line="103"/>
                    <scope line="104"/>
                    <declaration name="sourceRegion" type="Rectangle" line="107"/>
                    <scope line="108"/>
                    <declaration name="gridX" type="int" line="112"/>
                    <declaration name="gridY" type="int" line="113"/>
                </scope>
                <scope line="122"/>
            </method>
            <javadoc line="126">
                Create a color table from the image ColorModel and SampleModel.                
            </javadoc>
            <method name="createColorTable" type="byte[]" line="129">
                <params>
                    <param name="colorModel" type="ColorModel"/>
                    <param name="sampleModel" type="SampleModel"/>
                </params>
                <declaration name="colorTable" type="byte[]" line="130"/>
                <scope line="131">
                    <declaration name="icm" type="IndexColorModel" line="132"/>
                    <declaration name="mapSize" type="int" line="133"/>
                    <declaration name="ctSize" type="int" line="134"/>
                    <declaration name="reds" type="byte[]" line="135"/>
                    <declaration name="greens" type="byte[]" line="136"/>
                    <declaration name="blues" type="byte[]" line="137"/>
                    <scope line="141"/>
                    <declaration name="idx" type="int" line="147"/>
                    <scope line="148"/>
                </scope>
                <scope line="154">
                    <declaration name="numBits" type="int" line="155"/>
                    <scope line="156"/>
                    <declaration name="colorTableLength" type="int" line="159"/>
                    <scope line="161"/>
                </scope>
                <scope line="165"/>
            </method>
            <javadoc line="170">
                According do GIF specification size of clor table (palette here)
                  must be in range from 2 to 256 and must be power of 2.                
            </javadoc>
            <method name="getGifPaletteSize" type="int" line="174">
                <params>
                    <param name="x" type="int"/>
                </params>
                <scope line="175"/>
            </method>
            <method name="GIFImageWriter" type="constructor" line="186">
                <params>
                    <param name="originatingProvider" type="GIFImageWriterSpi"/>
                </params>
                <scope line="188"/>
            </method>
            <method name="canWriteSequence" type="boolean" line="192"/>
            <javadoc line="195">
                Merges &lt;code&gt;inData&lt;/code&gt; into &lt;code&gt;outData&lt;/code&gt;. The supplied
                  metadata format name is attempted first and failing that the standard
                  metadata format name is attempted.                
            </javadoc>
            <method name="convertMetadata" type="void" line="200">
                <params>
                    <param name="metadataFormatName" type="String"/>
                    <param name="inData" type="IIOMetadata"/>
                    <param name="outData" type="IIOMetadata"/>
                </params>
                <declaration name="formatName" type="String" line="201"/>
                <declaration name="nativeFormatName" type="String" line="202"/>
                <scope line="203"/>
                <scope line="206">
                    <declaration name="extraFormatNames" type="String[]" line="207"/>
                    <scope line="208">
                        <scope line="209">
                            <scope line="210"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="217"/>
                <scope line="220">
                    <scope line="221">
                        <declaration name="root" type="Node" line="222"/>
                    </scope>
                    <scope line="225"/>
                </scope>
            </method>
            <javadoc line="229">
                Creates a default stream metadata object and merges in the
                  supplied metadata.                
            </javadoc>
            <method name="convertStreamMetadata" type="IIOMetadata" line="233">
                <params>
                    <param name="inData" type="IIOMetadata"/>
                    <param name="param" type="ImageWriteParam"/>
                </params>
                <scope line="234"/>
                <declaration name="sm" type="IIOMetadata" line="237"/>
            </method>
            <javadoc line="241">
                Creates a default image metadata object and merges in the
                  supplied metadata.                
            </javadoc>
            <method name="convertImageMetadata" type="IIOMetadata" line="245">
                <params>
                    <param name="inData" type="IIOMetadata"/>
                    <param name="imageType" type="ImageTypeSpecifier"/>
                    <param name="param" type="ImageWriteParam"/>
                </params>
                <scope line="246"/>
                <scope line="249"/>
                <declaration name="im" type="GIFWritableImageMetadata" line="252"/>
                <declaration name="isProgressive" type="boolean" line="253"/>
                <scope line="255"/>
            </method>
            <method name="endWriteSequence" type="void" line="260">
                <scope line="261"/>
                <scope line="264"/>
            </method>
            <method name="getDefaultImageMetadata" type="IIOMetadata" line="270">
                <params>
                    <param name="imageType" type="ImageTypeSpecifier"/>
                    <param name="param" type="ImageWriteParam"/>
                </params>
                <declaration name="imageMetadata" type="GIFWritableImageMetadata" line="271"/>
                <declaration name="sampleModel" type="SampleModel" line="272"/>
                <declaration name="sourceBounds" type="Rectangle" line="273"/>
                <declaration name="destSize" type="Dimension" line="274"/>
                <scope line="278"/>
                <scope line="281"/>
                <declaration name="colorModel" type="ColorModel" line="284"/>
                <scope line="286">
                    <declaration name="transparentIndex" type="int" line="287"/>
                    <scope line="288"/>
                </scope>
            </method>
            <method name="getDefaultStreamMetadata" type="IIOMetadata" line="295">
                <params>
                    <param name="param" type="ImageWriteParam"/>
                </params>
                <declaration name="streamMetadata" type="GIFWritableStreamMetadata" line="296"/>
            </method>
            <method name="getDefaultWriteParam" type="ImageWriteParam" line="300"/>
            <method name="prepareWriteSequence" type="void" line="303">
                <params>
                    <param name="streamMetadata" type="IIOMetadata"/>
                </params>
                <scope line="304"/>
                <scope line="308"/>
                <scope line="311"/>
            </method>
            <method name="reset" type="void" line="317"/>
            <javadoc line="321">
                Resets locally defined instance variables.                
            </javadoc>
            <method name="resetLocal" type="void" line="324"/>
            <method name="setOutput" type="void" line="330">
                <params>
                    <param name="output" type="Object"/>
                </params>
                <scope line="332">
                    <scope line="333"/>
                </scope>
                <scope line="339"/>
            </method>
            <method name="write" type="void" line="343">
                <params>
                    <param name="sm" type="IIOMetadata"/>
                    <param name="iioimage" type="IIOImage"/>
                    <param name="p" type="ImageWriteParam"/>
                </params>
                <scope line="344"/>
                <scope line="347"/>
                <scope line="350"/>
                <declaration name="streamMetadata" type="GIFWritableStreamMetadata" line="354"/>
                <scope line="355"/>
                <scope line="358"/>
            </method>
            <method name="writeToSequence" type="void" line="363">
                <params>
                    <param name="image" type="IIOImage"/>
                    <param name="param" type="ImageWriteParam"/>
                </params>
                <scope line="364"/>
                <scope line="367"/>
                <scope line="370"/>
                <scope line="373"/>
                <scope line="377"/>
            </method>
            <method name="needToCreateIndex" type="boolean" line="382">
                <params>
                    <param name="image" type="RenderedImage"/>
                </params>
                <declaration name="sampleModel" type="SampleModel" line="383"/>
                <declaration name="colorModel" type="ColorModel" line="384"/>
            </method>
            <javadoc line="387">
                Writes any extension blocks, the Image Descriptor, the image data,
                  and optionally the header (Signature and Logical Screen Descriptor)
                  and trailer (Block Terminator).                
                <param>
                    writeHeader Whether to write the header.                    
                </param>
                <param>
                    writeTrailer Whether to write the trailer.                    
                </param>
                <param>
                    sm The stream metadata or <code>null</code> if
                      <code>writeHeader</code> is <code>false</code>.                    
                </param>
                <param>
                    iioimage The image and image metadata.                    
                </param>
                <param>
                    p The write parameters.                    
                </param>
                <throws>
                    IllegalArgumentException if the number of bands is not 1.                    
                </throws>
                <throws>
                    IllegalArgumentException if the number of bits per sample is
                      greater than 8.                    
                </throws>
                <throws>
                    IllegalArgumentException if the color component size is
                      greater than 8.                    
                </throws>
                <throws>
                    IllegalArgumentException if <code>writeHeader</code> is
                      <code>true</code> and <code>sm</code> is <code>null</code>.                    
                </throws>
                <throws>
                    IllegalArgumentException if <code>writeHeader</code> is
                      <code>false</code> and a sequence is not being written.                    
                </throws>
            </javadoc>
            <method name="write" type="void" line="407">
                <params>
                    <param name="writeHeader" type="boolean"/>
                    <param name="writeTrailer" type="boolean"/>
                    <param name="sm" type="IIOMetadata"/>
                    <param name="iioimage" type="IIOImage"/>
                    <param name="p" type="ImageWriteParam"/>
                </params>
                <declaration name="image" type="RenderedImage" line="409"/>
                <scope line="410"/>
                <declaration name="colorModel" type="ColorModel" line="414"/>
                <declaration name="sampleModel" type="SampleModel" line="415"/>
                <declaration name="sourceBounds" type="Rectangle" line="416"/>
                <declaration name="destSize" type="Dimension" line="417"/>
                <declaration name="imageMetadata" type="GIFWritableImageMetadata" line="419"/>
                <scope line="420">
                    <scope line="423">
                        <scope line="425">
                            <declaration name="icm" type="IndexColorModel" line="426"/>
                            <declaration name="index" type="int" line="427"/>
                            <scope line="429"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="globalColorTable" type="byte[]" line="435"/>
                <scope line="436">
                    <scope line="437"/>
                    <declaration name="streamMetadata" type="GIFWritableStreamMetadata" line="440"/>
                    <scope line="441"/>
                    <scope line="444"/>
                    <scope line="447"/>
                    <scope line="450"/>
                    <scope line="453">
                        <scope line="454"/>
                        <scope line="457"/>
                    </scope>
                    <declaration name="bitsPerPixel" type="int" line="462"/>
                    <scope line="463"/>
                    <scope line="466"/>
                    <scope line="469"/>
                </scope>
                <scope line="474"/>
                <scope line="477"/>
                <scope line="481"/>
            </method>
            <javadoc line="485">
                Writes any extension blocks, the Image Descriptor, and the image data                
                <param>
                    iioimage The image and image metadata.                    
                </param>
                <param>
                    param The write parameters.                    
                </param>
                <param>
                    globalColorTable The Global Color Table.                    
                </param>
                <param>
                    sourceBounds The source region.                    
                </param>
                <param>
                    destSize The destination dimensions.                    
                </param>
            </javadoc>
            <method name="writeImage" type="void" line="493">
                <params>
                    <param name="image" type="RenderedImage"/>
                    <param name="imageMetadata" type="GIFWritableImageMetadata"/>
                    <param name="param" type="ImageWriteParam"/>
                    <param name="globalColorTable" type="byte[]"/>
                    <param name="sourceBounds" type="Rectangle"/>
                    <param name="destSize" type="Dimension"/>
                </params>
                <declaration name="colorModel" type="ColorModel" line="494"/>
                <declaration name="sampleModel" type="SampleModel" line="495"/>
                <declaration name="writeGraphicsControlExtension" type="boolean" line="496"/>
                <scope line="497"/>
                <scope line="501">
                    <declaration name="list" type="NodeList" line="502"/>
                    <scope line="503">
                        <declaration name="root" type="IIOMetadataNode" line="504"/>
                    </scope>
                    <scope line="507"/>
                    <scope line="510">
                        <scope line="511"/>
                        <scope line="514"/>
                    </scope>
                </scope>
                <scope line="519"/>
                <scope line="524"/>
                <declaration name="bitsPerPixel" type="int" line="530"/>
            </method>
            <method name="writeRows" type="void" line="534">
                <params>
                    <param name="image" type="RenderedImage"/>
                    <param name="compressor" type="LZWCompressor"/>
                    <param name="sx" type="int"/>
                    <param name="sdx" type="int"/>
                    <param name="sy" type="int"/>
                    <param name="sdy" type="int"/>
                    <param name="sw" type="int"/>
                    <param name="dy" type="int"/>
                    <param name="ddy" type="int"/>
                    <param name="dw" type="int"/>
                    <param name="dh" type="int"/>
                    <param name="numRowsWritten" type="int"/>
                    <param name="progressReportRowPeriod" type="int"/>
                </params>
                <declaration name="sbuf" type="int[]" line="536"/>
                <declaration name="dbuf" type="byte[]" line="537"/>
                <declaration name="raster" type="Raster" line="538"/>
                <scope line="539">
                    <scope line="540">
                        <scope line="541"/>
                    </scope>
                    <scope line="548"/>
                </scope>
            </method>
            <method name="writeRowsOpt" type="void" line="556">
                <params>
                    <param name="data" type="byte[]"/>
                    <param name="offset" type="int"/>
                    <param name="lineStride" type="int"/>
                    <param name="compressor" type="LZWCompressor"/>
                    <param name="dy" type="int"/>
                    <param name="ddy" type="int"/>
                    <param name="dw" type="int"/>
                    <param name="dh" type="int"/>
                    <param name="numRowsWritten" type="int"/>
                    <param name="progressReportRowPeriod" type="int"/>
                </params>
                <scope line="560">
                    <scope line="561">
                        <scope line="562"/>
                    </scope>
                </scope>
            </method>
            <method name="writeRasterData" type="void" line="573">
                <params>
                    <param name="image" type="RenderedImage"/>
                    <param name="sourceBounds" type="Rectangle"/>
                    <param name="destSize" type="Dimension"/>
                    <param name="param" type="ImageWriteParam"/>
                    <param name="interlaceFlag" type="boolean"/>
                </params>
                <declaration name="sourceXOffset" type="int" line="574"/>
                <declaration name="sourceYOffset" type="int" line="575"/>
                <declaration name="sourceWidth" type="int" line="576"/>
                <declaration name="sourceHeight" type="int" line="577"/>
                <declaration name="destWidth" type="int" line="578"/>
                <declaration name="destHeight" type="int" line="579"/>
                <declaration name="periodX" type="int" line="580"/>
                <declaration name="periodY" type="int" line="581"/>
                <scope line="582"/>
                <scope line="586"/>
                <declaration name="sampleModel" type="SampleModel" line="590"/>
                <declaration name="bitsPerPixel" type="int" line="591"/>
                <declaration name="initCodeSize" type="int" line="592"/>
                <scope line="593"/>
                <declaration name="compressor" type="LZWCompressor" line="597"/>
                <declaration name="isOptimizedCase" type="boolean" line="598"/>
                <declaration name="numRowsWritten" type="int" line="599"/>
                <declaration name="progressReportRowPeriod" type="int" line="600"/>
                <scope line="602">
                    <scope line="604">
                        <declaration name="tile" type="ByteComponentRaster" line="605"/>
                        <declaration name="data" type="byte[]" line="606"/>
                        <declaration name="csm" type="ComponentSampleModel" line="607"/>
                        <declaration name="offset" type="int" line="608"/>
                        <declaration name="lineStride" type="int" line="610"/>
                        <scope line="612"/>
                        <scope line="617"/>
                        <scope line="622"/>
                    </scope>
                    <scope line="628">
                        <scope line="630"/>
                        <scope line="635"/>
                        <scope line="640"/>
                    </scope>
                </scope>
                <scope line="647">
                    <scope line="649">
                        <declaration name="tile" type="Raster" line="650"/>
                        <declaration name="data" type="byte[]" line="651"/>
                        <declaration name="csm" type="ComponentSampleModel" line="652"/>
                        <declaration name="offset" type="int" line="653"/>
                        <declaration name="lineStride" type="int" line="654"/>
                    </scope>
                    <scope line="657"/>
                </scope>
                <scope line="661"/>
            </method>
            <method name="writeHeader" type="void" line="669">
                <params>
                    <param name="version" type="String"/>
                    <param name="logicalScreenWidth" type="int"/>
                    <param name="logicalScreenHeight" type="int"/>
                    <param name="colorResolution" type="int"/>
                    <param name="pixelAspectRatio" type="int"/>
                    <param name="backgroundColorIndex" type="int"/>
                    <param name="sortFlag" type="boolean"/>
                    <param name="bitsPerPixel" type="int"/>
                    <param name="globalColorTable" type="byte[]"/>
                </params>
                <scope line="670">
                    <declaration name="packedFields" type="int" line="674"/>
                    <scope line="676"/>
                    <scope line="683"/>
                </scope>
                <scope line="687"/>
            </method>
            <method name="writeHeader" type="void" line="691">
                <params>
                    <param name="streamMetadata" type="IIOMetadata"/>
                    <param name="bitsPerPixel" type="int"/>
                </params>
                <declaration name="sm" type="GIFWritableStreamMetadata" line="692"/>
                <scope line="693"/>
                <scope line="696">
                    <declaration name="root" type="Node" line="698"/>
                </scope>
            </method>
            <method name="writeGraphicControlExtension" type="void" line="703">
                <params>
                    <param name="disposalMethod" type="int"/>
                    <param name="userInputFlag" type="boolean"/>
                    <param name="transparentColorFlag" type="boolean"/>
                    <param name="delayTime" type="int"/>
                    <param name="transparentColorIndex" type="int"/>
                </params>
                <scope line="704">
                    <declaration name="packedFields" type="int" line="708"/>
                    <scope line="709"/>
                    <scope line="712"/>
                </scope>
                <scope line="720"/>
            </method>
            <method name="writeGraphicControlExtension" type="void" line="724">
                <params>
                    <param name="im" type="GIFWritableImageMetadata"/>
                </params>
            </method>
            <method name="writeBlocks" type="void" line="727">
                <params>
                    <param name="data" type="byte[]"/>
                </params>
                <scope line="728">
                    <declaration name="offset" type="int" line="729"/>
                    <scope line="730">
                        <declaration name="len" type="int" line="731"/>
                    </scope>
                </scope>
            </method>
            <method name="writePlainTextExtension" type="void" line="738">
                <params>
                    <param name="im" type="GIFWritableImageMetadata"/>
                </params>
                <scope line="739">
                    <scope line="740"/>
                    <scope line="755"/>
                </scope>
            </method>
            <method name="writeApplicationExtension" type="void" line="760">
                <params>
                    <param name="im" type="GIFWritableImageMetadata"/>
                </params>
                <scope line="761">
                    <declaration name="iterIDs" type="Iterator" line="762"/>
                    <declaration name="iterCodes" type="Iterator" line="763"/>
                    <declaration name="iterData" type="Iterator" line="764"/>
                    <scope line="765">
                        <scope line="766"/>
                        <scope line="775"/>
                    </scope>
                </scope>
            </method>
            <method name="writeCommentExtension" type="void" line="781">
                <params>
                    <param name="im" type="GIFWritableImageMetadata"/>
                </params>
                <scope line="782">
                    <scope line="783">
                        <declaration name="iter" type="Iterator" line="784"/>
                        <scope line="785"/>
                    </scope>
                    <scope line="792"/>
                </scope>
            </method>
            <method name="writeImageDescriptor" type="void" line="797">
                <params>
                    <param name="imageLeftPosition" type="int"/>
                    <param name="imageTopPosition" type="int"/>
                    <param name="imageWidth" type="int"/>
                    <param name="imageHeight" type="int"/>
                    <param name="interlaceFlag" type="boolean"/>
                    <param name="sortFlag" type="boolean"/>
                    <param name="bitsPerPixel" type="int"/>
                    <param name="localColorTable" type="byte[]"/>
                </params>
                <scope line="798">
                    <declaration name="packedFields" type="int" line="804"/>
                    <scope line="805"/>
                    <scope line="808"/>
                    <scope line="813"/>
                </scope>
                <scope line="817"/>
            </method>
            <method name="writeImageDescriptor" type="void" line="821">
                <params>
                    <param name="imageMetadata" type="GIFWritableImageMetadata"/>
                    <param name="bitsPerPixel" type="int"/>
                </params>
            </method>
            <method name="writeTrailer" type="void" line="824"/>
        </class>
        <class name="GIFImageWriteParam" line="828">
            <extends class="ImageWriteParam"/>
            <method name="GIFImageWriteParam" type="constructor" line="829">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
            </method>
            <method name="setCompressionMode" type="void" line="836">
                <params>
                    <param name="mode" type="int"/>
                </params>
                <scope line="837"/>
            </method>
        </class>
    </source>