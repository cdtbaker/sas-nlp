<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.imageio.plugins.gif">
        <import package="javax.imageio.metadata.IIOInvalidTreeException"/>
        <import package="javax.imageio.metadata.IIOMetadata"/>
        <import package="javax.imageio.metadata.IIOMetadataFormatImpl"/>
        <import package="org.w3c.dom.Node"/>
        <class name="GIFMetadata" line="33">
            <extends class="IIOMetadata"/>
            <comment line="45">
                Note: These attribute methods were shamelessly lifted from
                 com.sun.imageio.plugins.png.PNGMetadata and modified.                
            </comment>
            <comment line="50">
                Shorthand for throwing an IIOInvalidTreeException                
            </comment>
            <comment line="56">
                Get an integer-valued attribute                
            </comment>
            <comment line="97">
                Get an integer-valued attribute                
            </comment>
            <comment line="123">
                Get a float-valued attribute                
            </comment>
            <comment line="135">
                Get a required integer-valued attribute                
            </comment>
            <comment line="142">
                Get a required float-valued attribute                
            </comment>
            <comment line="148">
                Get a boolean-valued attribute                
            </comment>
            <comment line="173">
                Get a required boolean-valued attribute                
            </comment>
            <comment line="179">
                Get an enumerated attribute as an index into a String array                
            </comment>
            <comment line="205">
                Get a required enumerated attribute as an index into a String array                
            </comment>
            <comment line="213">
                Get a String-valued attribute                
            </comment>
            <comment line="228">
                Get a required String-valued attribute                
            </comment>
            <javadoc line="33">
                Class which adds utility DOM element attribute access methods to
                  &lt;code&gt;IIOMetadata&lt;/code&gt; for subclass use.                
            </javadoc>
            <declaration name="UNDEFINED_INTEGER_VALUE" type="int" line="39"/>
            <javadoc line="39">
                Represents an undefined value of integer attributes.                
            </javadoc>
            <method name="fatal" type="void" line="51">
                <params>
                    <param name="node" type="Node"/>
                    <param name="reason" type="String"/>
                </params>
            </method>
            <method name="getStringAttribute" type="String" line="60">
                <params>
                    <param name="node" type="Node"/>
                    <param name="name" type="String"/>
                    <param name="defaultValue" type="String"/>
                    <param name="required" type="boolean"/>
                    <param name="range" type="String[]"/>
                </params>
                <declaration name="attr" type="Node" line="61"/>
                <scope line="62">
                    <scope line="63"/>
                    <scope line="65"/>
                </scope>
                <declaration name="value" type="String" line="69"/>
                <scope line="71">
                    <scope line="72"/>
                    <declaration name="validValue" type="boolean" line="77"/>
                    <declaration name="len" type="int" line="78"/>
                    <scope line="79">
                        <scope line="80"/>
                    </scope>
                    <scope line="85"/>
                </scope>
            </method>
            <method name="getIntAttribute" type="int" line="100">
                <params>
                    <param name="node" type="Node"/>
                    <param name="name" type="String"/>
                    <param name="defaultValue" type="int"/>
                    <param name="required" type="boolean"/>
                    <param name="bounded" type="boolean"/>
                    <param name="min" type="int"/>
                    <param name="max" type="int"/>
                </params>
                <declaration name="value" type="String" line="101"/>
                <scope line="102"/>
                <declaration name="intValue" type="int" line="106"/>
                <scope line="107"/>
                <scope line="109"/>
                <scope line="114"/>
            </method>
            <method name="getFloatAttribute" type="float" line="126">
                <params>
                    <param name="node" type="Node"/>
                    <param name="name" type="String"/>
                    <param name="defaultValue" type="float"/>
                    <param name="required" type="boolean"/>
                </params>
                <declaration name="value" type="String" line="127"/>
                <scope line="128"/>
            </method>
            <method name="getIntAttribute" type="int" line="137">
                <params>
                    <param name="node" type="Node"/>
                    <param name="name" type="String"/>
                    <param name="bounded" type="boolean"/>
                    <param name="min" type="int"/>
                    <param name="max" type="int"/>
                </params>
            </method>
            <method name="getFloatAttribute" type="float" line="143">
                <params>
                    <param name="node" type="Node"/>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="getBooleanAttribute" type="boolean" line="151">
                <params>
                    <param name="node" type="Node"/>
                    <param name="name" type="String"/>
                    <param name="defaultValue" type="boolean"/>
                    <param name="required" type="boolean"/>
                </params>
                <comment line="162">
                    Allow lower case booleans for backward compatibility, #5082756                    
                </comment>
                <declaration name="attr" type="Node" line="152"/>
                <scope line="153">
                    <scope line="154"/>
                    <scope line="156"/>
                </scope>
                <declaration name="value" type="String" line="160"/>
                <scope line="162"/>
                <scope line="164"/>
                <scope line="166"/>
            </method>
            <method name="getBooleanAttribute" type="boolean" line="174">
                <params>
                    <param name="node" type="Node"/>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="getEnumeratedAttribute" type="int" line="184">
                <params>
                    <param name="node" type="Node"/>
                    <param name="name" type="String"/>
                    <param name="legalNames" type="String[]"/>
                    <param name="defaultValue" type="int"/>
                    <param name="required" type="boolean"/>
                </params>
                <declaration name="attr" type="Node" line="185"/>
                <scope line="186">
                    <scope line="187"/>
                    <scope line="189"/>
                </scope>
                <declaration name="value" type="String" line="193"/>
                <scope line="194">
                    <scope line="195"/>
                </scope>
            </method>
            <method name="getEnumeratedAttribute" type="int" line="208">
                <params>
                    <param name="node" type="Node"/>
                    <param name="name" type="String"/>
                    <param name="legalNames" type="String[]"/>
                </params>
            </method>
            <method name="getAttribute" type="String" line="215">
                <params>
                    <param name="node" type="Node"/>
                    <param name="name" type="String"/>
                    <param name="defaultValue" type="String"/>
                    <param name="required" type="boolean"/>
                </params>
                <declaration name="attr" type="Node" line="216"/>
                <scope line="217">
                    <scope line="218"/>
                    <scope line="220"/>
                </scope>
            </method>
            <method name="getAttribute" type="String" line="229">
                <params>
                    <param name="node" type="Node"/>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="GIFMetadata" type="constructor" line="237">
                <params>
                    <param name="standardMetadataFormatSupported" type="boolean"/>
                    <param name="nativeMetadataFormatName" type="String"/>
                    <param name="nativeMetadataFormatClassName" type="String"/>
                    <param name="extraMetadataFormatNames" type="String[]"/>
                    <param name="extraMetadataFormatClassNames" type="String[]"/>
                </params>
            </method>
            <method name="mergeTree" type="void" line="246">
                <params>
                    <param name="formatName" type="String"/>
                    <param name="root" type="Node"/>
                </params>
                <scope line="247">
                    <scope line="248"/>
                </scope>
                <scope line="253">
                    <scope line="254"/>
                </scope>
                <scope line="258"/>
            </method>
            <method name="getColorTable" type="byte[]" line="267">
                <params>
                    <param name="colorTableNode" type="Node"/>
                    <param name="entryNodeName" type="String"/>
                    <param name="lengthExpected" type="boolean"/>
                    <param name="expectedLength" type="int"/>
                </params>
                <declaration name="red" type="byte[]" line="268"/>
                <declaration name="green" type="byte[]" line="269"/>
                <declaration name="blue" type="byte[]" line="270"/>
                <declaration name="maxIndex" type="int" line="271"/>
                <declaration name="entry" type="Node" line="273"/>
                <scope line="274"/>
                <scope line="278">
                    <scope line="279"/>
                    <declaration name="index" type="int" line="285"/>
                    <scope line="286"/>
                </scope>
                <declaration name="numEntries" type="int" line="296"/>
                <scope line="298"/>
                <declaration name="colorTable" type="byte[]" line="302"/>
                <scope line="303"/>
            </method>
            <method name="mergeNativeTree" type="void" line="312"/>
            <method name="mergeStandardTree" type="void" line="315"/>
        </class>
    </source>