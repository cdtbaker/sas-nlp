<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.imageio.plugins.wbmp">
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.awt.image.DataBufferByte"/>
        <import package="java.awt.image.MultiPixelPackedSampleModel"/>
        <import package="java.awt.image.Raster"/>
        <import package="java.awt.image.WritableRaster"/>
        <import package="javax.imageio.IIOException"/>
        <import package="javax.imageio.ImageReader"/>
        <import package="javax.imageio.ImageReadParam"/>
        <import package="javax.imageio.ImageTypeSpecifier"/>
        <import package="javax.imageio.metadata.IIOMetadata"/>
        <import package="javax.imageio.spi.ImageReaderSpi"/>
        <import package="javax.imageio.stream.ImageInputStream"/>
        <import package="java.io"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Iterator"/>
        <import package="com.sun.imageio.plugins.common.I18N"/>
        <import package="com.sun.imageio.plugins.common.ReaderUtil"/>
        <class name="WBMPImageReader" line="50">
            <extends class="ImageReader"/>
            <comment line="316">
                This method verifies that given byte is valid wbmp type marker.
                 At the moment only 0x0 marker is described by wbmp spec.                
            </comment>
            <javadoc line="50">
                This class is the Java Image IO plugin reader for WBMP images.
                  It may subsample the image, clip the image,
                  and shift the decoded image origin if the proper decoding parameter
                  are set in the provided &lt;code&gt;WBMPImageReadParam&lt;/code&gt;.                
            </javadoc>
            <declaration name="iis" type="ImageInputStream" line="56"/>
            <javadoc line="56">
                The input stream where reads from                
            </javadoc>
            <declaration name="gotHeader" type="boolean" line="59"/>
            <javadoc line="59">
                Indicates whether the header is read.                
            </javadoc>
            <declaration name="width" type="int" line="62"/>
            <javadoc line="62">
                The original image width.                
            </javadoc>
            <declaration name="height" type="int" line="65"/>
            <javadoc line="65">
                The original image height.                
            </javadoc>
            <declaration name="wbmpType" type="int" line="68"/>
            <declaration name="metadata" type="WBMPMetadata" line="70"/>
            <javadoc line="72">
                Constructs &lt;code&gt;WBMPImageReader&lt;/code&gt; from the provided
                  &lt;code&gt;ImageReaderSpi&lt;/code&gt;.                
            </javadoc>
            <method name="WBMPImageReader" type="constructor" line="75">
                <params>
                    <param name="originator" type="ImageReaderSpi"/>
                </params>
            </method>
            <javadoc line="79">
                Overrides the method defined in the superclass.                
            </javadoc>
            <method name="setInput" type="void" line="82">
                <params>
                    <param name="input" type="Object"/>
                    <param name="seekForwardOnly" type="boolean"/>
                    <param name="ignoreMetadata" type="boolean"/>
                </params>
                <comment line="84">
                    Always works                    
                </comment>
            </method>
            <javadoc line="88">
                Overrides the method defined in the superclass.                
            </javadoc>
            <method name="getNumImages" type="int" line="89">
                <params>
                    <param name="allowSearch" type="boolean"/>
                </params>
                <scope line="90"/>
                <scope line="93"/>
            </method>
            <method name="getWidth" type="int" line="99">
                <params>
                    <param name="imageIndex" type="int"/>
                </params>
            </method>
            <method name="getHeight" type="int" line="105">
                <params>
                    <param name="imageIndex" type="int"/>
                </params>
            </method>
            <method name="isRandomAccessEasy" type="boolean" line="111">
                <params>
                    <param name="imageIndex" type="int"/>
                </params>
            </method>
            <method name="checkIndex" type="void" line="116">
                <params>
                    <param name="imageIndex" type="int"/>
                </params>
                <scope line="117"/>
            </method>
            <method name="readHeader" type="void" line="122">
                <comment line="132">
                    TypeField                    
                </comment>
                <comment line="135">
                    check for valid wbmp image                    
                </comment>
                <comment line="144">
                    Read image width                    
                </comment>
                <comment line="148">
                    Read image height                    
                </comment>
                <scope line="126"/>
                <declaration name="fixHeaderField" type="byte" line="133"/>
                <scope line="138"/>
            </method>
            <method name="getImageTypes" type="Iterator" line="156">
                <params>
                    <param name="imageIndex" type="int"/>
                </params>
                <declaration name="bi" type="BufferedImage" line="160"/>
                <declaration name="list" type="ArrayList" line="162"/>
            </method>
            <method name="getDefaultReadParam" type="ImageReadParam" line="167"/>
            <method name="getImageMetadata" type="IIOMetadata" line="172">
                <params>
                    <param name="imageIndex" type="int"/>
                </params>
                <scope line="174"/>
            </method>
            <method name="getStreamMetadata" type="IIOMetadata" line="180"/>
            <method name="read" type="BufferedImage" line="185">
                <params>
                    <param name="imageIndex" type="int"/>
                    <param name="param" type="ImageReadParam"/>
                </params>
                <comment line="197">
                    read header                    
                </comment>
                <comment line="213">
                    If the destination is provided, then use it.  Otherwise, create new one                    
                </comment>
                <comment line="225">
                    Get the image data.                    
                </comment>
                <comment line="228">
                    Get the SampleModel.                    
                </comment>
                <comment line="238">
                    If noTransform is necessary, read the data.                    
                </comment>
                <comment line="254">
                    cache the values to avoid duplicated computation                    
                </comment>
                <comment line="277">
                    get the bit and assign to the data buffer of the raster                    
                </comment>
                <scope line="187"/>
                <declaration name="sourceRegion" type="Rectangle" line="200"/>
                <declaration name="destinationRegion" type="Rectangle" line="201"/>
                <declaration name="scaleX" type="int" line="208"/>
                <declaration name="scaleY" type="int" line="209"/>
                <declaration name="xOffset" type="int" line="210"/>
                <declaration name="yOffset" type="int" line="211"/>
                <declaration name="bi" type="BufferedImage" line="214"/>
                <declaration name="noTransform" type="boolean" line="221"/>
                <declaration name="tile" type="WritableRaster" line="226"/>
                <declaration name="sm" type="MultiPixelPackedSampleModel" line="229"/>
                <scope line="232">
                    <scope line="233"/>
                </scope>
                <scope line="246">
                    <declaration name="len" type="int" line="247"/>
                    <declaration name="buf" type="byte[]" line="248"/>
                    <declaration name="data" type="byte[]" line="249"/>
                    <declaration name="lineStride" type="int" line="250"/>
                    <declaration name="skipLength" type="int" line="252"/>
                    <declaration name="srcOff" type="int[]" line="255"/>
                    <declaration name="destOff" type="int[]" line="256"/>
                    <declaration name="srcPos" type="int[]" line="257"/>
                    <declaration name="destPos" type="int[]" line="258"/>
                    <scope line="262"/>
                    <scope line="271">
                        <scope line="276">
                            <declaration name="v" type="int" line="278"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="canReadRaster" type="boolean" line="299"/>
            <method name="readRaster" type="Raster" line="304">
                <params>
                    <param name="imageIndex" type="int"/>
                    <param name="param" type="ImageReadParam"/>
                </params>
                <declaration name="bi" type="BufferedImage" line="305"/>
            </method>
            <method name="reset" type="void" line="309"/>
            <method name="isValidWbmpType" type="boolean" line="319">
                <params>
                    <param name="type" type="int"/>
                </params>
            </method>
        </class>
    </source>