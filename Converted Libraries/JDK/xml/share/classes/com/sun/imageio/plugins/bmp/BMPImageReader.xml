<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.imageio.plugins.bmp">
        <import package="java.awt.Point"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.Transparency"/>
        <import package="java.awt.color.ColorSpace"/>
        <import package="java.awt.color.ICC_ColorSpace"/>
        <import package="java.awt.color.ICC_Profile"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.awt.image.ColorModel"/>
        <import package="java.awt.image.ComponentColorModel"/>
        <import package="java.awt.image.ComponentSampleModel"/>
        <import package="java.awt.image.DataBuffer"/>
        <import package="java.awt.image.DataBufferByte"/>
        <import package="java.awt.image.DataBufferInt"/>
        <import package="java.awt.image.DataBufferUShort"/>
        <import package="java.awt.image.DirectColorModel"/>
        <import package="java.awt.image.IndexColorModel"/>
        <import package="java.awt.image.MultiPixelPackedSampleModel"/>
        <import package="java.awt.image.PixelInterleavedSampleModel"/>
        <import package="java.awt.image.Raster"/>
        <import package="java.awt.image.SampleModel"/>
        <import package="java.awt.image.SinglePixelPackedSampleModel"/>
        <import package="java.awt.image.WritableRaster"/>
        <import package="javax.imageio.IIOException"/>
        <import package="javax.imageio.ImageIO"/>
        <import package="javax.imageio.ImageReader"/>
        <import package="javax.imageio.ImageReadParam"/>
        <import package="javax.imageio.ImageTypeSpecifier"/>
        <import package="javax.imageio.metadata.IIOMetadata"/>
        <import package="javax.imageio.spi.ImageReaderSpi"/>
        <import package="javax.imageio.stream.ImageInputStream"/>
        <import package="javax.imageio.event.IIOReadProgressListener"/>
        <import package="javax.imageio.event.IIOReadUpdateListener"/>
        <import package="javax.imageio.event.IIOReadWarningListener"/>
        <import package="java.io"/>
        <import package="java.nio"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.StringTokenizer"/>
        <import package="com.sun.imageio.plugins.common.ImageUtil"/>
        <import package="com.sun.imageio.plugins.common.I18N"/>
        <class name="BMPImageReader" line="44">
            <extends class="ImageReader"/>
            <implements interface="BMPConstants"/>
            <javadoc line="44">
                This class is the Java Image IO plugin reader for BMP images.
                  It may subsample the image, clip the image, select sub-bands,
                  and shift the decoded image origin if the proper decoding parameter
                  are set in the provided &lt;code&gt;ImageReadParam&lt;/code&gt;.
                  This class supports Microsoft Windows Bitmap Version 3-5,
                  as well as OS/2 Bitmap Version 2.x (for single-image BMP file).                
            </javadoc>
            <declaration name="VERSION_2_1_BIT" type="int" line="53"/>
            <declaration name="VERSION_2_4_BIT" type="int" line="54"/>
            <declaration name="VERSION_2_8_BIT" type="int" line="55"/>
            <declaration name="VERSION_2_24_BIT" type="int" line="56"/>
            <declaration name="VERSION_3_1_BIT" type="int" line="57"/>
            <declaration name="VERSION_3_4_BIT" type="int" line="58"/>
            <declaration name="VERSION_3_8_BIT" type="int" line="59"/>
            <declaration name="VERSION_3_24_BIT" type="int" line="60"/>
            <declaration name="VERSION_3_NT_16_BIT" type="int" line="61"/>
            <declaration name="VERSION_3_NT_32_BIT" type="int" line="62"/>
            <declaration name="VERSION_4_1_BIT" type="int" line="63"/>
            <declaration name="VERSION_4_4_BIT" type="int" line="64"/>
            <declaration name="VERSION_4_8_BIT" type="int" line="65"/>
            <declaration name="VERSION_4_16_BIT" type="int" line="66"/>
            <declaration name="VERSION_4_24_BIT" type="int" line="67"/>
            <declaration name="VERSION_4_32_BIT" type="int" line="68"/>
            <declaration name="VERSION_3_XP_EMBEDDED" type="int" line="69"/>
            <declaration name="VERSION_4_XP_EMBEDDED" type="int" line="70"/>
            <declaration name="VERSION_5_XP_EMBEDDED" type="int" line="71"/>
            <declaration name="bitmapFileSize" type="long" line="72"/>
            <declaration name="bitmapOffset" type="long" line="73"/>
            <declaration name="compression" type="long" line="74"/>
            <declaration name="imageSize" type="long" line="75"/>
            <declaration name="palette" type="byte" line="76"/>
            <declaration name="imageType" type="int" line="77"/>
            <declaration name="numBands" type="int" line="78"/>
            <declaration name="isBottomUp" type="boolean" line="79"/>
            <declaration name="bitsPerPixel" type="int" line="80"/>
            <declaration name="redMask" type="int" line="81"/>
            <declaration name="sampleModel" type="SampleModel" line="82"/>
            <declaration name="colorModel" type="ColorModel" line="83"/>
            <declaration name="iis" type="ImageInputStream" line="84"/>
            <javadoc line="84">
                The input stream where reads from                
            </javadoc>
            <declaration name="gotHeader" type="boolean" line="88"/>
            <javadoc line="88">
                Indicates whether the header is read.                
            </javadoc>
            <declaration name="width" type="int" line="92"/>
            <javadoc line="92">
                The original image width.                
            </javadoc>
            <declaration name="height" type="int" line="96"/>
            <javadoc line="96">
                The original image height.                
            </javadoc>
            <declaration name="destinationRegion" type="Rectangle" line="100"/>
            <javadoc line="100">
                The destination region.                
            </javadoc>
            <declaration name="sourceRegion" type="Rectangle" line="104"/>
            <javadoc line="104">
                The source region.                
            </javadoc>
            <declaration name="metadata" type="BMPMetadata" line="108"/>
            <javadoc line="108">
                The metadata from the stream.                
            </javadoc>
            <declaration name="bi" type="BufferedImage" line="112"/>
            <javadoc line="112">
                The destination image.                
            </javadoc>
            <declaration name="noTransform" type="boolean" line="116"/>
            <javadoc line="116">
                Indicates whether subsampled, subregion is required, and offset is
                  defined                
            </javadoc>
            <declaration name="seleBand" type="boolean" line="121"/>
            <javadoc line="121">
                Indicates whether subband is selected.                
            </javadoc>
            <declaration name="scaleX" type="int" line="125"/>
            <javadoc line="125">
                The scaling factors.                
            </javadoc>
            <declaration name="sourceBands" type="int[]" line="129"/>
            <javadoc line="129">
                source and destination bands.                
            </javadoc>
            <javadoc line="133">
                Constructs &lt;code&gt;BMPImageReader&lt;/code&gt; from the provided
                  &lt;code&gt;ImageReaderSpi&lt;/code&gt;.                
            </javadoc>
            <method name="BMPImageReader" type="constructor" line="137">
                <params>
                    <param name="originator" type="ImageReaderSpi"/>
                </params>
            </method>
            <javadoc line="140">
                Overrides the method defined in the superclass.                
            </javadoc>
            <method name="setInput" type="void" line="143">
                <params>
                    <param name="input" type="Object"/>
                    <param name="seekForwardOnly" type="boolean"/>
                    <param name="ignoreMetadata" type="boolean"/>
                </params>
            </method>
            <javadoc line="149">
                Overrides the method defined in the superclass.                
            </javadoc>
            <method name="getNumImages" type="int" line="152">
                <params>
                    <param name="allowSearch" type="boolean"/>
                </params>
                <scope line="153"/>
                <scope line="156"/>
            </method>
            <method name="getWidth" type="int" line="161">
                <params>
                    <param name="imageIndex" type="int"/>
                </params>
            </method>
            <method name="getHeight" type="int" line="166">
                <params>
                    <param name="imageIndex" type="int"/>
                </params>
            </method>
            <method name="checkIndex" type="void" line="171">
                <params>
                    <param name="imageIndex" type="int"/>
                </params>
                <scope line="172"/>
            </method>
            <method name="readHeader" type="void" line="176">
                <scope line="178"/>
                <declaration name="profileData" type="int" line="181"/>
                <declaration name="marker" type="byte[]" line="184"/>
                <declaration name="size" type="long" line="190"/>
                <scope line="191"/>
                <scope line="195"/>
                <declaration name="planes" type="int" line="201"/>
                <scope line="205">
                    <scope line="207"/>
                    <scope line="210"/>
                    <scope line="213"/>
                    <scope line="216"/>
                    <declaration name="numberOfEntries" type="int" line="219"/>
                    <declaration name="sizeOfPalette" type="int" line="220"/>
                </scope>
                <scope line="226">
                    <declaration name="xPelsPerMeter" type="long" line="229"/>
                    <declaration name="yPelsPerMeter" type="long" line="230"/>
                    <declaration name="colorsUsed" type="long" line="231"/>
                    <declaration name="colorsImportant" type="long" line="232"/>
                    <scope line="238">
                        <declaration name="numberOfEntries" type="int" line="248"/>
                        <declaration name="sizeOfPalette" type="int" line="249"/>
                        <scope line="254"/>
                        <scope line="257"/>
                        <scope line="260"/>
                        <scope line="263"/>
                        <scope line="266"/>
                        <scope line="275"/>
                        <scope line="287"/>
                        <scope line="290"/>
                        <scope line="299"/>
                    </scope>
                    <scope line="312">
                        <declaration name="csType" type="long" line="319"/>
                        <declaration name="redX" type="int" line="320"/>
                        <declaration name="redY" type="int" line="321"/>
                        <declaration name="redZ" type="int" line="322"/>
                        <declaration name="greenX" type="int" line="323"/>
                        <declaration name="greenY" type="int" line="324"/>
                        <declaration name="greenZ" type="int" line="325"/>
                        <declaration name="blueX" type="int" line="326"/>
                        <declaration name="blueY" type="int" line="327"/>
                        <declaration name="blueZ" type="int" line="328"/>
                        <declaration name="gammaRed" type="long" line="329"/>
                        <declaration name="gammaGreen" type="long" line="330"/>
                        <declaration name="gammaBlue" type="long" line="331"/>
                        <scope line="332"/>
                        <scope line="339"/>
                        <declaration name="numberOfEntries" type="int" line="353"/>
                        <declaration name="sizeOfPalette" type="int" line="354"/>
                        <scope line="362"/>
                        <scope line="365"/>
                        <scope line="370"/>
                        <scope line="373"/>
                        <scope line="376"/>
                        <scope line="379">
                            <scope line="381"/>
                        </scope>
                        <scope line="387"/>
                        <scope line="390">
                            <scope line="392"/>
                        </scope>
                    </scope>
                    <scope line="404"/>
                </scope>
                <scope line="408"/>
                <scope line="411"/>
                <declaration name="colorSpace" type="ColorSpace" line="415"/>
                <scope line="416">
                    <declaration name="profile" type="byte[]" line="419"/>
                    <scope line="422">
                        <scope line="423">
                            <declaration name="path" type="String" line="424"/>
                        </scope>
                        <scope line="427"/>
                    </scope>
                    <scope line="431"/>
                </scope>
                <scope line="435"/>
                <scope line="439">
                    <scope line="441">
                        <declaration name="bandOffsets" type="int[]" line="442"/>
                        <scope line="443"/>
                    </scope>
                    <scope line="448"/>
                    <declaration name="r" type="byte" line="451"/>
                    <scope line="452">
                        <scope line="454"/>
                        <declaration name="off" type="int" line="457"/>
                        <scope line="461"/>
                    </scope>
                    <scope line="468">
                        <scope line="470"/>
                        <declaration name="off" type="int" line="473"/>
                        <scope line="477"/>
                    </scope>
                </scope>
                <scope line="487"/>
                <scope line="492">
                    <declaration name="bitMasks" type="int[]" line="494"/>
                </scope>
                <scope line="498">
                    <declaration name="bandOffsets" type="int[]" line="500"/>
                    <scope line="501"/>
                </scope>
            </method>
            <method name="getImageTypes" type="Iterator" line="513">
                <params>
                    <param name="imageIndex" type="int"/>
                </params>
                <declaration name="list" type="ArrayList" line="516"/>
            </method>
            <method name="getDefaultReadParam" type="ImageReadParam" line="520"/>
            <method name="getImageMetadata" type="IIOMetadata" line="523">
                <params>
                    <param name="imageIndex" type="int"/>
                </params>
                <scope line="525"/>
            </method>
            <method name="getStreamMetadata" type="IIOMetadata" line="530"/>
            <method name="isRandomAccessEasy" type="boolean" line="533">
                <params>
                    <param name="imageIndex" type="int"/>
                </params>
            </method>
            <method name="read" type="BufferedImage" line="538">
                <params>
                    <param name="imageIndex" type="int"/>
                    <param name="param" type="ImageReadParam"/>
                </params>
                <scope line="539"/>
                <scope line="556"/>
                <declaration name="raster" type="WritableRaster" line="562"/>
                <scope line="563">
                    <scope line="564"/>
                </scope>
                <scope line="571"/>
                <declaration name="bdata" type="byte" line="577"/>
                <declaration name="sdata" type="short" line="578"/>
                <declaration name="idata" type="int" line="579"/>
                <scope line="580"/>
            </method>
            <method name="canReadRaster" type="boolean" line="679"/>
            <method name="readRaster" type="Raster" line="682">
                <params>
                    <param name="imageIndex" type="int"/>
                    <param name="param" type="ImageReadParam"/>
                </params>
                <declaration name="bi" type="BufferedImage" line="683"/>
            </method>
            <method name="resetHeaderInfo" type="void" line="686"/>
            <method name="reset" type="void" line="692"/>
            <method name="read1Bit" type="void" line="697">
                <params>
                    <param name="bdata" type="byte[]"/>
                </params>
                <declaration name="bytesPerScanline" type="int" line="698"/>
                <declaration name="padding" type="int" line="699"/>
                <scope line="700"/>
                <declaration name="lineLength" type="int" line="703"/>
                <scope line="704">
                    <declaration name="j" type="int" line="705"/>
                    <scope line="706">
                        <scope line="707"/>
                    </scope>
                </scope>
                <scope line="717">
                    <declaration name="buf" type="byte[]" line="718"/>
                    <declaration name="lineStride" type="int" line="719"/>
                    <scope line="720">
                        <declaration name="lastLine" type="int" line="721"/>
                    </scope>
                    <declaration name="skipLength" type="int" line="725"/>
                    <declaration name="srcOff" type="int[]" line="726"/>
                    <declaration name="destOff" type="int[]" line="727"/>
                    <declaration name="srcPos" type="int[]" line="728"/>
                    <declaration name="destPos" type="int[]" line="729"/>
                    <scope line="730"/>
                    <declaration name="k" type="int" line="736"/>
                    <scope line="738">
                        <scope line="741">
                            <declaration name="v" type="int" line="742"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="read4Bit" type="void" line="752">
                <params>
                    <param name="bdata" type="byte[]"/>
                </params>
                <declaration name="bytesPerScanline" type="int" line="753"/>
                <declaration name="padding" type="int" line="754"/>
                <declaration name="lineLength" type="int" line="756"/>
                <scope line="757">
                    <declaration name="j" type="int" line="758"/>
                    <scope line="759">
                        <scope line="760"/>
                    </scope>
                </scope>
                <scope line="770">
                    <declaration name="buf" type="byte[]" line="771"/>
                    <declaration name="lineStride" type="int" line="772"/>
                    <scope line="773">
                        <declaration name="lastLine" type="int" line="774"/>
                    </scope>
                    <declaration name="skipLength" type="int" line="778"/>
                    <declaration name="srcOff" type="int[]" line="779"/>
                    <declaration name="destOff" type="int[]" line="780"/>
                    <declaration name="srcPos" type="int[]" line="781"/>
                    <declaration name="destPos" type="int[]" line="782"/>
                    <scope line="783"/>
                    <declaration name="k" type="int" line="789"/>
                    <scope line="791">
                        <scope line="794">
                            <declaration name="v" type="int" line="795"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="read8Bit" type="void" line="805">
                <params>
                    <param name="bdata" type="byte[]"/>
                </params>
                <declaration name="padding" type="int" line="806"/>
                <scope line="807"/>
                <declaration name="lineLength" type="int" line="810"/>
                <scope line="811">
                    <declaration name="j" type="int" line="812"/>
                    <scope line="813">
                        <scope line="814"/>
                    </scope>
                </scope>
                <scope line="824">
                    <declaration name="buf" type="byte[]" line="825"/>
                    <declaration name="lineStride" type="int" line="826"/>
                    <scope line="827">
                        <declaration name="lastLine" type="int" line="828"/>
                    </scope>
                    <declaration name="skipLength" type="int" line="832"/>
                    <declaration name="k" type="int" line="833"/>
                    <scope line="836">
                        <scope line="839"/>
                    </scope>
                </scope>
            </method>
            <method name="read24Bit" type="void" line="849">
                <params>
                    <param name="bdata" type="byte[]"/>
                </params>
                <declaration name="padding" type="int" line="850"/>
                <declaration name="lineStride" type="int" line="852"/>
                <declaration name="lineLength" type="int" line="853"/>
                <scope line="854">
                    <declaration name="j" type="int" line="855"/>
                    <scope line="856">
                        <scope line="857"/>
                    </scope>
                </scope>
                <scope line="867">
                    <declaration name="buf" type="byte[]" line="868"/>
                    <scope line="870">
                        <declaration name="lastLine" type="int" line="871"/>
                    </scope>
                    <declaration name="skipLength" type="int" line="875"/>
                    <declaration name="k" type="int" line="876"/>
                    <scope line="879">
                        <scope line="882">
                            <declaration name="n" type="int" line="883"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="read16Bit" type="void" line="893">
                <params>
                    <param name="sdata" type="short"/>
                </params>
                <declaration name="padding" type="int" line="894"/>
                <declaration name="lineLength" type="int" line="896"/>
                <scope line="897">
                    <declaration name="j" type="int" line="898"/>
                    <scope line="899">
                        <scope line="900"/>
                    </scope>
                </scope>
                <scope line="910">
                    <declaration name="buf" type="short[]" line="911"/>
                    <declaration name="lineStride" type="int" line="912"/>
                    <scope line="913">
                        <declaration name="lastLine" type="int" line="914"/>
                    </scope>
                    <declaration name="skipLength" type="int" line="918"/>
                    <declaration name="k" type="int" line="919"/>
                    <scope line="922">
                        <scope line="925"/>
                    </scope>
                </scope>
            </method>
            <method name="read32Bit" type="void" line="935">
                <params>
                    <param name="idata" type="int"/>
                </params>
                <scope line="936">
                    <declaration name="j" type="int" line="937"/>
                    <scope line="938">
                        <scope line="939"/>
                    </scope>
                </scope>
                <scope line="948">
                    <declaration name="buf" type="int[]" line="949"/>
                    <declaration name="lineStride" type="int" line="950"/>
                    <scope line="951">
                        <declaration name="lastLine" type="int" line="952"/>
                    </scope>
                    <declaration name="skipLength" type="int" line="956"/>
                    <declaration name="k" type="int" line="957"/>
                    <scope line="960">
                        <scope line="963"/>
                    </scope>
                </scope>
            </method>
            <method name="readRLE8" type="void" line="973">
                <params>
                    <param name="bdata" type="byte"/>
                </params>
                <declaration name="imSize" type="int" line="974"/>
                <scope line="975"/>
                <declaration name="padding" type="int" line="978"/>
                <declaration name="remainder" type="int" line="979"/>
                <scope line="980"/>
                <declaration name="values" type="byte" line="983"/>
                <declaration name="bytesRead" type="int" line="984"/>
            </method>
            <method name="decodeRLE8" type="void" line="988">
                <params>
                    <param name="imSize" type="int"/>
                    <param name="padding" type="int"/>
                    <param name="values" type="byte[]"/>
                    <param name="bdata" type="byte[]"/>
                </params>
                <declaration name="val" type="byte" line="989"/>
                <declaration name="count" type="int" line="990"/>
                <declaration name="value" type="int" line="991"/>
                <declaration name="flag" type="boolean" line="992"/>
                <declaration name="lineNo" type="int" line="993"/>
                <declaration name="lineStride" type="int" line="994"/>
                <declaration name="finished" type="int" line="995"/>
                <scope line="996">
                    <scope line="998">
                        <scope line="1001">
                            <scope line="1002">
                                <declaration name="pos" type="int" line="1003"/>
                            </scope>
                            <scope line="1008">
                                <declaration name="currentLine" type="int" line="1009"/>
                                <declaration name="pos" type="int" line="1010"/>
                            </scope>
                        </scope>
                        <scope line="1020"/>
                        <declaration name="xoff" type="int" line="1028"/>
                        <declaration name="yoff" type="int" line="1029"/>
                        <declaration name="end" type="int" line="1033"/>
                        <scope line="1034"/>
                        <scope line="1037"/>
                    </scope>
                    <scope line="1042">
                        <scope line="1043"/>
                    </scope>
                    <scope line="1048"/>
                </scope>
            </method>
            <method name="readRLE4" type="void" line="1053">
                <params>
                    <param name="bdata" type="byte[]"/>
                </params>
                <declaration name="imSize" type="int" line="1054"/>
                <scope line="1055"/>
                <declaration name="padding" type="int" line="1058"/>
                <declaration name="remainder" type="int" line="1059"/>
                <scope line="1060"/>
                <declaration name="values" type="byte[]" line="1063"/>
            </method>
            <method name="decodeRLE4" type="void" line="1067">
                <params>
                    <param name="imSize" type="int"/>
                    <param name="padding" type="int"/>
                    <param name="values" type="byte[]"/>
                    <param name="bdata" type="byte[]"/>
                </params>
                <declaration name="val" type="byte[]" line="1068"/>
                <declaration name="count" type="int" line="1069"/>
                <declaration name="value" type="int" line="1070"/>
                <declaration name="flag" type="boolean" line="1071"/>
                <declaration name="lineNo" type="int" line="1072"/>
                <declaration name="lineStride" type="int" line="1073"/>
                <declaration name="finished" type="int" line="1074"/>
                <scope line="1075">
                    <scope line="1077">
                        <scope line="1080">
                            <scope line="1081">
                                <declaration name="pos" type="int" line="1082"/>
                            </scope>
                            <scope line="1088">
                                <declaration name="currentLine" type="int" line="1089"/>
                                <declaration name="pos" type="int" line="1090"/>
                                <declaration name="shift" type="int" line="1092"/>
                                <scope line="1093">
                                    <scope line="1096"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="1108"/>
                        <declaration name="xoff" type="int" line="1116"/>
                        <declaration name="yoff" type="int" line="1117"/>
                        <declaration name="end" type="int" line="1121"/>
                        <scope line="1122"/>
                        <scope line="1125"/>
                        <scope line="1128"/>
                    </scope>
                    <scope line="1134">
                        <declaration name="alternate" type="int" line="1135"/>
                        <scope line="1136"/>
                    </scope>
                    <scope line="1141"/>
                </scope>
            </method>
            <javadoc line="1146">
                Decodes the jpeg/png image embedded in the bitmap using any jpeg
                  ImageIO-style plugin.                
                <param>
                    bi The destination &lt;code&gt;BufferedImage&lt;/code&gt;.                    
                </param>
                <param>
                    bmpParam The &lt;code&gt;ImageReadParam&lt;/code&gt; for decoding this
                      BMP image.  The parameters for subregion, band selection and
                      subsampling are used in decoding the jpeg image.                    
                </param>
            </javadoc>
            <method name="readEmbedded" type="BufferedImage" line="1154">
                <params>
                    <param name="type" type="int"/>
                    <param name="bi" type="BufferedImage"/>
                    <param name="bmpParam" type="ImageReadParam"/>
                </params>
                <declaration name="format" type="String" line="1155"/>
                <declaration name="reader" type="ImageReader" line="1166"/>
                <scope line="1167"/>
                <declaration name="buff" type="byte[]" line="1170"/>
                <scope line="1173">
                    <declaration name="embType" type="ImageTypeSpecifier" line="1174"/>
                </scope>
                <anonymous_class line="1177">
                    <method name="imageProgress" type="void" line="1178">
                        <params>
                            <param name="source" type="ImageReader"/>
                            <param name="percentageDone" type="float"/>
                        </params>
                    </method>
                </anonymous_class>
                <anonymous_class line="1183">
                    <method name="imageUpdate" type="void" line="1184">
                        <params>
                            <param name="source" type="ImageReader"/>
                            <param name="theImage" type="BufferedImage"/>
                            <param name="minX" type="int"/>
                            <param name="minY" type="int"/>
                            <param name="width" type="int"/>
                            <param name="height" type="int"/>
                            <param name="periodX" type="int"/>
                            <param name="periodY" type="int"/>
                            <param name="bands" type="int[]"/>
                        </params>
                    </method>
                    <method name="passComplete" type="void" line="1187">
                        <params>
                            <param name="source" type="ImageReader"/>
                            <param name="theImage" type="BufferedImage"/>
                        </params>
                    </method>
                    <method name="passStarted" type="void" line="1190">
                        <params>
                            <param name="source" type="ImageReader"/>
                            <param name="theImage" type="BufferedImage"/>
                            <param name="pass" type="int"/>
                            <param name="minPass" type="int"/>
                            <param name="maxPass" type="int"/>
                            <param name="minX" type="int"/>
                            <param name="minY" type="int"/>
                            <param name="periodX" type="int"/>
                            <param name="periodY" type="int"/>
                            <param name="bands" type="int[]"/>
                        </params>
                    </method>
                    <method name="thumbnailPassComplete" type="void" line="1193">
                        <params>
                            <param name="source" type="ImageReader"/>
                            <param name="thumb" type="BufferedImage"/>
                        </params>
                    </method>
                    <method name="thumbnailPassStarted" type="void" line="1195">
                        <params>
                            <param name="source" type="ImageReader"/>
                            <param name="thumb" type="BufferedImage"/>
                            <param name="pass" type="int"/>
                            <param name="minPass" type="int"/>
                            <param name="maxPass" type="int"/>
                            <param name="minX" type="int"/>
                            <param name="minY" type="int"/>
                            <param name="periodX" type="int"/>
                            <param name="periodY" type="int"/>
                            <param name="bands" type="int[]"/>
                        </params>
                    </method>
                    <method name="thumbnailUpdate" type="void" line="1197">
                        <params>
                            <param name="source" type="ImageReader"/>
                            <param name="theThumbnail" type="BufferedImage"/>
                            <param name="minX" type="int"/>
                            <param name="minY" type="int"/>
                            <param name="width" type="int"/>
                            <param name="height" type="int"/>
                            <param name="periodX" type="int"/>
                            <param name="periodY" type="int"/>
                            <param name="bands" type="int[]"/>
                        </params>
                    </method>
                </anonymous_class>
                <anonymous_class line="1201">
                    <method name="warningOccurred" type="void" line="1202">
                        <params>
                            <param name="source" type="ImageReader"/>
                            <param name="warning" type="String"/>
                        </params>
                    </method>
                </anonymous_class>
                <declaration name="param" type="ImageReadParam" line="1207"/>
            </method>
            <class name="EmbeddedProgressAdapter" line="1217">
                <implements interface="IIOReadProgressListener"/>
                <method name="imageComplete" type="void" line="1218">
                    <params>
                        <param name="src" type="ImageReader"/>
                    </params>
                </method>
                <method name="imageProgress" type="void" line="1220">
                    <params>
                        <param name="src" type="ImageReader"/>
                        <param name="percentageDone" type="float"/>
                    </params>
                </method>
                <method name="imageStarted" type="void" line="1222">
                    <params>
                        <param name="src" type="ImageReader"/>
                        <param name="imageIndex" type="int"/>
                    </params>
                </method>
                <method name="thumbnailComplete" type="void" line="1224">
                    <params>
                        <param name="src" type="ImageReader"/>
                    </params>
                </method>
                <method name="thumbnailProgress" type="void" line="1226">
                    <params>
                        <param name="src" type="ImageReader"/>
                        <param name="percentageDone" type="float"/>
                    </params>
                </method>
                <method name="thumbnailStarted" type="void" line="1228">
                    <params>
                        <param name="src" type="ImageReader"/>
                        <param name="iIdx" type="int"/>
                        <param name="tIdx" type="int"/>
                    </params>
                </method>
                <method name="sequenceComplete" type="void" line="1230">
                    <params>
                        <param name="src" type="ImageReader"/>
                    </params>
                </method>
                <method name="sequenceStarted" type="void" line="1232">
                    <params>
                        <param name="src" type="ImageReader"/>
                        <param name="minIndex" type="int"/>
                    </params>
                </method>
                <method name="readAborted" type="void" line="1234">
                    <params>
                        <param name="src" type="ImageReader"/>
                    </params>
                </method>
            </class>
            <declaration name="isLinkedProfileDisabled" type="Boolean" line="1237"/>
            <method name="isLinkedProfileAllowed" type="boolean" line="1238">
                <scope line="1239">
                    <anonymous_class line="1240">
                        <method name="run" type="Boolean" line="1241"/>
                    </anonymous_class>
                    <declaration name="a" type="PrivilegedAction&amp;lt;Boolean&amp;gt;" line="1240"/>
                </scope>
            </method>
            <declaration name="isWindowsPlatform" type="Boolean" line="1250"/>
            <javadoc line="1251">
                Verifies whether the byte array contans a unc path.
                  Non-UNC path examples:
                  c:\path\to\file  - simple notation
                  \\?\c:\path\to\file - long notation
                  UNC path examples:
                  \\server\share - a UNC path in simple notation
                  \\?\UNC\server\share - a UNC path in long notation
                  \\.\some\device - a path to device.                
            </javadoc>
            <method name="isUncOrDevicePath" type="boolean" line="1261">
                <params>
                    <param name="p" type="byte[]"/>
                </params>
                <scope line="1262">
                    <anonymous_class line="1263">
                        <method name="run" type="Boolean" line="1264">
                            <declaration name="osname" type="String" line="1265"/>
                        </method>
                    </anonymous_class>
                    <declaration name="a" type="PrivilegedAction&amp;lt;Boolean&amp;gt;" line="1263"/>
                </scope>
                <scope line="1272"/>
                <scope line="1278">
                    <scope line="1279"/>
                    <scope line="1282"/>
                </scope>
                <scope line="1286"/>
            </method>
        </class>
    </source>