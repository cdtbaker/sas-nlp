<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.imageio.plugins.jpeg">
        <import package="javax.imageio.metadata.IIOMetadataNode"/>
        <import package="javax.imageio.stream.ImageOutputStream"/>
        <import package="javax.imageio.metadata.IIOInvalidTreeException"/>
        <import package="java.io.IOException"/>
        <import package="java.io.UnsupportedEncodingException"/>
        <import package="org.w3c.dom.Node"/>
        <class name="COMMarkerSegment" line="37">
            <extends class="MarkerSegment"/>
            <javadoc line="37">
                A Comment marker segment.  Retains an array of bytes representing the
                  comment data as it is read from the stream.  If the marker segment is
                  constructed from a String, then local default encoding is assumed
                  when creating the byte array.  If the marker segment is created from
                  an &lt;code&gt;IIOMetadataNode&lt;/code&gt;, the user object, if present is
                  assumed to be a byte array containing the comment data.  If there is
                  no user object then the comment attribute is used to create the
                  byte array, again assuming the default local encoding.                
            </javadoc>
            <declaration name="ENCODING" type="String" line="48"/>
            <javadoc line="50">
                Constructs a marker segment from the given buffer, which contains
                  data from an &lt;code&gt;ImageInputStream&lt;/code&gt;.  This is used when
                  reading metadata from a stream.                
            </javadoc>
            <method name="COMMarkerSegment" type="constructor" line="55">
                <params>
                    <param name="buffer" type="JPEGBuffer"/>
                </params>
            </method>
            <javadoc line="60">
                Constructs a marker segment from a String.  This is used when
                  modifying metadata from a non-native tree and when transcoding.
                  The default encoding is used to construct the byte array.                
            </javadoc>
            <method name="COMMarkerSegment" type="constructor" line="65">
                <params>
                    <param name="comment" type="String"/>
                </params>
                <comment line="67">
                    Default encoding                    
                </comment>
            </method>
            <javadoc line="70">
                Constructs a marker segment from a native tree node.  If the node
                  is an &lt;code&gt;IIOMetadataNode&lt;/code&gt; and contains a user object,
                  that object is used rather than the string attribute.  If the
                  string attribute is used, the default encoding is used.                
            </javadoc>
            <method name="COMMarkerSegment" type="constructor" line="76">
                <params>
                    <param name="node" type="Node"/>
                </params>
                <comment line="86">
                    Default encoding                    
                </comment>
                <scope line="78">
                    <declaration name="ourNode" type="IIOMetadataNode" line="79"/>
                </scope>
                <scope line="82">
                    <declaration name="comment" type="String" line="83"/>
                    <scope line="85"/>
                    <scope line="87"/>
                </scope>
            </method>
            <javadoc line="93">
                Returns the array encoded as a String, using ISO-Latin-1 encoding.
                  If an application needs another encoding, the data array must be
                  consulted directly.                
            </javadoc>
            <method name="getComment" type="String" line="98">
                <comment line="101">
                    Won&apos;t happen                    
                </comment>
                <scope line="99"/>
                <scope line="101"/>
            </method>
            <javadoc line="105">
                Returns an &lt;code&gt;IIOMetadataNode&lt;/code&gt; containing the data array
                  as a user object and a string encoded using ISO-8895-1, as an
                  attribute.                
            </javadoc>
            <method name="getNativeNode" type="IIOMetadataNode" line="110">
                <declaration name="node" type="IIOMetadataNode" line="111"/>
                <scope line="113"/>
            </method>
            <javadoc line="119">
                Writes the data for this segment to the stream in
                  valid JPEG format, directly from the data array.                
            </javadoc>
            <method name="write" type="void" line="123">
                <params>
                    <param name="ios" type="ImageOutputStream"/>
                </params>
            </method>
            <method name="print" type="void" line="129"/>
        </class>
    </source>