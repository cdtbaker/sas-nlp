<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.imageio.plugins.wbmp">
        <import package="java.awt.Point"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.image.ColorModel"/>
        <import package="java.awt.image.DataBuffer"/>
        <import package="java.awt.image.DataBufferByte"/>
        <import package="java.awt.image.IndexColorModel"/>
        <import package="java.awt.image.MultiPixelPackedSampleModel"/>
        <import package="java.awt.image.Raster"/>
        <import package="java.awt.image.RenderedImage"/>
        <import package="java.awt.image.SampleModel"/>
        <import package="java.awt.image.WritableRaster"/>
        <import package="java.io.IOException"/>
        <import package="javax.imageio.IIOImage"/>
        <import package="javax.imageio.IIOException"/>
        <import package="javax.imageio.ImageTypeSpecifier"/>
        <import package="javax.imageio.ImageWriteParam"/>
        <import package="javax.imageio.ImageWriter"/>
        <import package="javax.imageio.metadata.IIOMetadata"/>
        <import package="javax.imageio.metadata.IIOMetadataFormatImpl"/>
        <import package="javax.imageio.metadata.IIOInvalidTreeException"/>
        <import package="javax.imageio.spi.ImageWriterSpi"/>
        <import package="javax.imageio.stream.ImageOutputStream"/>
        <import package="com.sun.imageio.plugins.common.I18N"/>
        <class name="WBMPImageWriter" line="25">
            <extends class="ImageWriter"/>
            <javadoc line="25">
                The Java Image IO plugin writer for encoding a binary RenderedImage into
                  a WBMP format.
                  The encoding process may clip, subsample using the parameters
                  specified in the &lt;code&gt;ImageWriteParam&lt;/code&gt;.                
                <see>
                    com.sun.media.imageio.plugins.WBMPImageWriteParam                    
                </see>
            </javadoc>
            <declaration name="stream" type="ImageOutputStream" line="33"/>
            <javadoc line="33">
                The output stream to write into                
            </javadoc>
            <method name="getNumBits" type="int" line="37">
                <params>
                    <param name="intValue" type="int"/>
                </params>
                <declaration name="numBits" type="int" line="38"/>
                <declaration name="mask" type="int" line="39"/>
                <scope line="40"/>
            </method>
            <method name="intToMultiByte" type="byte[]" line="46">
                <params>
                    <param name="intValue" type="int"/>
                </params>
                <declaration name="numBitsLeft" type="int" line="47"/>
                <declaration name="multiBytes" type="byte[]" line="48"/>
                <declaration name="maxIndex" type="int" line="49"/>
                <scope line="50">
                    <scope line="52"/>
                </scope>
            </method>
            <javadoc line="58">
                Constructs &lt;code&gt;WBMPImageWriter&lt;/code&gt; based on the provided
                  &lt;code&gt;ImageWriterSpi&lt;/code&gt;.                
            </javadoc>
            <method name="WBMPImageWriter" type="constructor" line="62">
                <params>
                    <param name="originator" type="ImageWriterSpi"/>
                </params>
            </method>
            <method name="setOutput" type="void" line="65">
                <params>
                    <param name="output" type="Object"/>
                </params>
                <scope line="67"/>
            </method>
            <method name="getDefaultStreamMetadata" type="IIOMetadata" line="73">
                <params>
                    <param name="param" type="ImageWriteParam"/>
                </params>
            </method>
            <method name="getDefaultImageMetadata" type="IIOMetadata" line="76">
                <params>
                    <param name="imageType" type="ImageTypeSpecifier"/>
                    <param name="param" type="ImageWriteParam"/>
                </params>
                <declaration name="meta" type="WBMPMetadata" line="77"/>
            </method>
            <method name="convertStreamMetadata" type="IIOMetadata" line="81">
                <params>
                    <param name="inData" type="IIOMetadata"/>
                    <param name="param" type="ImageWriteParam"/>
                </params>
            </method>
            <method name="convertImageMetadata" type="IIOMetadata" line="84">
                <params>
                    <param name="metadata" type="IIOMetadata"/>
                    <param name="type" type="ImageTypeSpecifier"/>
                    <param name="param" type="ImageWriteParam"/>
                </params>
            </method>
            <method name="canWriteRasters" type="boolean" line="87"/>
            <method name="write" type="void" line="90">
                <params>
                    <param name="streamMetadata" type="IIOMetadata"/>
                    <param name="image" type="IIOImage"/>
                    <param name="param" type="ImageWriteParam"/>
                </params>
                <scope line="91"/>
                <scope line="94"/>
                <declaration name="input" type="RenderedImage" line="100"/>
                <declaration name="inputRaster" type="Raster" line="101"/>
                <declaration name="writeRaster" type="boolean" line="102"/>
                <declaration name="sourceRegion" type="Rectangle" line="103"/>
                <declaration name="sampleModel" type="SampleModel" line="104"/>
                <scope line="105"/>
                <scope line="109"/>
                <declaration name="scaleX" type="int" line="118"/>
                <declaration name="scaleY" type="int" line="119"/>
                <declaration name="xOffset" type="int" line="120"/>
                <declaration name="yOffset" type="int" line="121"/>
                <declaration name="minX" type="int" line="125"/>
                <declaration name="minY" type="int" line="126"/>
                <declaration name="w" type="int" line="127"/>
                <declaration name="h" type="int" line="128"/>
                <declaration name="destinationRegion" type="Rectangle" line="129"/>
                <declaration name="destSM" type="SampleModel" line="131"/>
                <scope line="132"/>
                <scope line="135">
                    <scope line="137">
                        <declaration name="ras" type="WritableRaster" line="138"/>
                        <declaration name="data" type="byte[]" line="139"/>
                        <scope line="140">
                            <scope line="141">
                                <declaration name="v" type="int" line="142"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="150">
                    <declaration name="raster" type="WritableRaster" line="151"/>
                </scope>
                <declaration name="isWhiteZero" type="boolean" line="155"/>
                <scope line="156">
                    <declaration name="icm" type="IndexColorModel" line="157"/>
                </scope>
                <declaration name="lineStride" type="int" line="160"/>
                <declaration name="bytesPerRow" type="int" line="161"/>
                <declaration name="bdata" type="byte[]" line="162"/>
                <scope line="167"/>
                <scope line="171">
                    <declaration name="offset" type="int" line="172"/>
                    <scope line="173">
                        <scope line="174"/>
                    </scope>
                    <scope line="181">
                        <declaration name="inverted" type="byte[]" line="182"/>
                        <scope line="183">
                            <scope line="185"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="195"/>
            </method>
            <method name="reset" type="void" line="200"/>
            <method name="checkSampleModel" type="void" line="204">
                <params>
                    <param name="sm" type="SampleModel"/>
                </params>
                <declaration name="type" type="int" line="205"/>
            </method>
        </class>
    </source>