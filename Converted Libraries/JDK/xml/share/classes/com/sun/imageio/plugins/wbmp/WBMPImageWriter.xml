<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.imageio.plugins.wbmp">
        <import package="java.awt.Point"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.image.ColorModel"/>
        <import package="java.awt.image.DataBuffer"/>
        <import package="java.awt.image.DataBufferByte"/>
        <import package="java.awt.image.IndexColorModel"/>
        <import package="java.awt.image.MultiPixelPackedSampleModel"/>
        <import package="java.awt.image.Raster"/>
        <import package="java.awt.image.RenderedImage"/>
        <import package="java.awt.image.SampleModel"/>
        <import package="java.awt.image.WritableRaster"/>
        <import package="java.io.IOException"/>
        <import package="javax.imageio.IIOImage"/>
        <import package="javax.imageio.IIOException"/>
        <import package="javax.imageio.ImageTypeSpecifier"/>
        <import package="javax.imageio.ImageWriteParam"/>
        <import package="javax.imageio.ImageWriter"/>
        <import package="javax.imageio.metadata.IIOMetadata"/>
        <import package="javax.imageio.metadata.IIOMetadataFormatImpl"/>
        <import package="javax.imageio.metadata.IIOInvalidTreeException"/>
        <import package="javax.imageio.spi.ImageWriterSpi"/>
        <import package="javax.imageio.stream.ImageOutputStream"/>
        <import package="com.sun.imageio.plugins.common.I18N"/>
        <class name="WBMPImageWriter" line="55">
            <extends class="ImageWriter"/>
            <comment line="69">
                Get the number of bits required to represent an int.                
            </comment>
            <comment line="80">
                Convert an int value to WBMP multi-byte format.                
            </comment>
            <javadoc line="55">
                The Java Image IO plugin writer for encoding a binary RenderedImage into
                  a WBMP format.
                  The encoding process may clip, subsample using the parameters
                  specified in the &lt;code&gt;ImageWriteParam&lt;/code&gt;.                
                <see>
                    com.sun.media.imageio.plugins.WBMPImageWriteParam                    
                </see>
            </javadoc>
            <declaration name="stream" type="ImageOutputStream" line="65"/>
            <javadoc line="65">
                The output stream to write into                
            </javadoc>
            <method name="getNumBits" type="int" line="69">
                <params>
                    <param name="intValue" type="int"/>
                </params>
                <declaration name="numBits" type="int" line="70"/>
                <declaration name="mask" type="int" line="71"/>
                <scope line="72"/>
            </method>
            <method name="intToMultiByte" type="byte[]" line="80">
                <params>
                    <param name="intValue" type="int"/>
                </params>
                <declaration name="numBitsLeft" type="int" line="81"/>
                <declaration name="multiBytes" type="byte[]" line="82"/>
                <declaration name="maxIndex" type="int" line="84"/>
                <scope line="85">
                    <scope line="87"/>
                </scope>
            </method>
            <javadoc line="95">
                Constructs &lt;code&gt;WBMPImageWriter&lt;/code&gt; based on the provided
                  &lt;code&gt;ImageWriterSpi&lt;/code&gt;.                
            </javadoc>
            <method name="WBMPImageWriter" type="constructor" line="98">
                <params>
                    <param name="originator" type="ImageWriterSpi"/>
                </params>
            </method>
            <method name="setOutput" type="void" line="102">
                <params>
                    <param name="output" type="Object"/>
                </params>
                <comment line="103">
                    validates output                    
                </comment>
                <scope line="104"/>
            </method>
            <method name="getDefaultStreamMetadata" type="IIOMetadata" line="112">
                <params>
                    <param name="param" type="ImageWriteParam"/>
                </params>
            </method>
            <method name="getDefaultImageMetadata" type="IIOMetadata" line="117">
                <params>
                    <param name="imageType" type="ImageTypeSpecifier"/>
                    <param name="param" type="ImageWriteParam"/>
                </params>
                <comment line="119">
                    default wbmp level                    
                </comment>
                <declaration name="meta" type="WBMPMetadata" line="118"/>
            </method>
            <method name="convertStreamMetadata" type="IIOMetadata" line="124">
                <params>
                    <param name="inData" type="IIOMetadata"/>
                    <param name="param" type="ImageWriteParam"/>
                </params>
            </method>
            <method name="convertImageMetadata" type="IIOMetadata" line="130">
                <params>
                    <param name="metadata" type="IIOMetadata"/>
                    <param name="type" type="ImageTypeSpecifier"/>
                    <param name="param" type="ImageWriteParam"/>
                </params>
            </method>
            <method name="canWriteRasters" type="boolean" line="134"/>
            <method name="write" type="void" line="140">
                <params>
                    <param name="streamMetadata" type="IIOMetadata"/>
                    <param name="image" type="IIOImage"/>
                    <param name="param" type="ImageWriteParam"/>
                </params>
                <comment line="199">
                    If the data are not formatted nominally then reformat.                    
                </comment>
                <comment line="234">
                    If the data are not formatted nominally then reformat.                    
                </comment>
                <comment line="244">
                    Check whether the image is white-is-zero.                    
                </comment>
                <comment line="251">
                    Get the line stride, bytes per row, and data array.                    
                </comment>
                <comment line="257">
                    Write WBMP header.                    
                </comment>
                <comment line="258">
                    TypeField                    
                </comment>
                <comment line="259">
                    FixHeaderField                    
                </comment>
                <comment line="260">
                    width                    
                </comment>
                <comment line="261">
                    height                    
                </comment>
                <comment line="263">
                    Write the data.                    
                </comment>
                <comment line="265">
                    Write the entire image.                    
                </comment>
                <comment line="269">
                    Write the image row-by-row.                    
                </comment>
                <comment line="272">
                    Black-is-zero                    
                </comment>
                <comment line="281">
                    White-is-zero: need to invert data.                    
                </comment>
                <scope line="142"/>
                <scope line="146"/>
                <declaration name="input" type="RenderedImage" line="155"/>
                <declaration name="inputRaster" type="Raster" line="156"/>
                <declaration name="writeRaster" type="boolean" line="157"/>
                <declaration name="sourceRegion" type="Rectangle" line="158"/>
                <declaration name="sampleModel" type="SampleModel" line="159"/>
                <scope line="161"/>
                <scope line="164"/>
                <declaration name="scaleX" type="int" line="180"/>
                <declaration name="scaleY" type="int" line="181"/>
                <declaration name="xOffset" type="int" line="182"/>
                <declaration name="yOffset" type="int" line="183"/>
                <declaration name="minX" type="int" line="189"/>
                <declaration name="minY" type="int" line="190"/>
                <declaration name="w" type="int" line="191"/>
                <declaration name="h" type="int" line="192"/>
                <declaration name="destinationRegion" type="Rectangle" line="194"/>
                <declaration name="destSM" type="SampleModel" line="197"/>
                <scope line="202"/>
                <scope line="209">
                    <scope line="214">
                        <declaration name="ras" type="WritableRaster" line="215"/>
                        <declaration name="data" type="byte[]" line="218"/>
                        <scope line="221">
                            <scope line="224">
                                <declaration name="v" type="int" line="225"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="235">
                    <declaration name="raster" type="WritableRaster" line="236"/>
                </scope>
                <declaration name="isWhiteZero" type="boolean" line="245"/>
                <scope line="246">
                    <declaration name="icm" type="IndexColorModel" line="247"/>
                </scope>
                <declaration name="lineStride" type="int" line="252"/>
                <declaration name="bytesPerRow" type="int" line="254"/>
                <declaration name="bdata" type="byte[]" line="255"/>
                <scope line="264"/>
                <scope line="268">
                    <declaration name="offset" type="int" line="270"/>
                    <scope line="271">
                        <scope line="273"/>
                    </scope>
                    <scope line="280">
                        <declaration name="inverted" type="byte[]" line="282"/>
                        <scope line="283">
                            <scope line="286"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="298"/>
            </method>
            <method name="reset" type="void" line="304"/>
            <method name="checkSampleModel" type="void" line="309">
                <params>
                    <param name="sm" type="SampleModel"/>
                </params>
                <declaration name="type" type="int" line="310"/>
            </method>
        </class>
    </source>