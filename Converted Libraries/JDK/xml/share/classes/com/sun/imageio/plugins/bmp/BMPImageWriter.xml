<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.imageio.plugins.bmp">
        <import package="java.awt.Point"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.image.ColorModel"/>
        <import package="java.awt.image.ComponentSampleModel"/>
        <import package="java.awt.image.DataBuffer"/>
        <import package="java.awt.image.DataBufferByte"/>
        <import package="java.awt.image.DataBufferInt"/>
        <import package="java.awt.image.DataBufferShort"/>
        <import package="java.awt.image.DataBufferUShort"/>
        <import package="java.awt.image.DirectColorModel"/>
        <import package="java.awt.image.IndexColorModel"/>
        <import package="java.awt.image.MultiPixelPackedSampleModel"/>
        <import package="java.awt.image.BandedSampleModel"/>
        <import package="java.awt.image.Raster"/>
        <import package="java.awt.image.RenderedImage"/>
        <import package="java.awt.image.SampleModel"/>
        <import package="java.awt.image.SinglePixelPackedSampleModel"/>
        <import package="java.awt.image.WritableRaster"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.io.IOException"/>
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.nio.ByteOrder"/>
        <import package="java.util.Iterator"/>
        <import package="javax.imageio.IIOImage"/>
        <import package="javax.imageio.IIOException"/>
        <import package="javax.imageio.ImageIO"/>
        <import package="javax.imageio.ImageTypeSpecifier"/>
        <import package="javax.imageio.ImageWriteParam"/>
        <import package="javax.imageio.ImageWriter"/>
        <import package="javax.imageio.metadata.IIOMetadata"/>
        <import package="javax.imageio.metadata.IIOMetadataNode"/>
        <import package="javax.imageio.metadata.IIOMetadataFormatImpl"/>
        <import package="javax.imageio.metadata.IIOInvalidTreeException"/>
        <import package="javax.imageio.spi.ImageWriterSpi"/>
        <import package="javax.imageio.stream.ImageOutputStream"/>
        <import package="javax.imageio.event.IIOWriteProgressListener"/>
        <import package="javax.imageio.event.IIOWriteWarningListener"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.w3c.dom.NodeList"/>
        <import package="javax.imageio.plugins.bmp.BMPImageWriteParam"/>
        <import package="com.sun.imageio.plugins.common.ImageUtil"/>
        <import package="com.sun.imageio.plugins.common.I18N"/>
        <class name="BMPImageWriter" line="44">
            <extends class="ImageWriter"/>
            <implements interface="BMPConstants"/>
            <javadoc line="44">
                The Java Image IO plugin writer for encoding a binary RenderedImage into
                  a BMP format.
                  The encoding process may clip, subsample using the parameters
                  specified in the &lt;code&gt;ImageWriteParam&lt;/code&gt;.                
                <see>
                    javax.imageio.plugins.bmp.BMPImageWriteParam                    
                </see>
            </javadoc>
            <declaration name="stream" type="ImageOutputStream" line="52"/>
            <javadoc line="52">
                The output stream to write into                
            </javadoc>
            <declaration name="embedded_stream" type="ByteArrayOutputStream" line="56"/>
            <declaration name="version" type="int" line="57"/>
            <declaration name="compressionType" type="int" line="58"/>
            <declaration name="isTopDown" type="boolean" line="59"/>
            <declaration name="w" type="int" line="60"/>
            <declaration name="compImageSize" type="int" line="61"/>
            <declaration name="bitMasks" type="int[]" line="62"/>
            <declaration name="bitPos" type="int[]" line="63"/>
            <declaration name="bpixels" type="byte[]" line="64"/>
            <declaration name="spixels" type="short[]" line="65"/>
            <declaration name="ipixels" type="int[]" line="66"/>
            <javadoc line="67">
                Constructs &lt;code&gt;BMPImageWriter&lt;/code&gt; based on the provided
                  &lt;code&gt;ImageWriterSpi&lt;/code&gt;.                
            </javadoc>
            <method name="BMPImageWriter" type="constructor" line="71">
                <params>
                    <param name="originator" type="ImageWriterSpi"/>
                </params>
            </method>
            <method name="setOutput" type="void" line="74">
                <params>
                    <param name="output" type="Object"/>
                </params>
                <scope line="76"/>
            </method>
            <method name="getDefaultWriteParam" type="ImageWriteParam" line="83"/>
            <method name="getDefaultStreamMetadata" type="IIOMetadata" line="86">
                <params>
                    <param name="param" type="ImageWriteParam"/>
                </params>
            </method>
            <method name="getDefaultImageMetadata" type="IIOMetadata" line="89">
                <params>
                    <param name="imageType" type="ImageTypeSpecifier"/>
                    <param name="param" type="ImageWriteParam"/>
                </params>
                <declaration name="meta" type="BMPMetadata" line="90"/>
                <scope line="93"/>
            </method>
            <method name="convertStreamMetadata" type="IIOMetadata" line="99">
                <params>
                    <param name="inData" type="IIOMetadata"/>
                    <param name="param" type="ImageWriteParam"/>
                </params>
            </method>
            <method name="convertImageMetadata" type="IIOMetadata" line="102">
                <params>
                    <param name="metadata" type="IIOMetadata"/>
                    <param name="type" type="ImageTypeSpecifier"/>
                    <param name="param" type="ImageWriteParam"/>
                </params>
            </method>
            <method name="canWriteRasters" type="boolean" line="105"/>
            <method name="write" type="void" line="108">
                <params>
                    <param name="streamMetadata" type="IIOMetadata"/>
                    <param name="image" type="IIOImage"/>
                    <param name="param" type="ImageWriteParam"/>
                </params>
                <scope line="109"/>
                <scope line="112"/>
                <declaration name="bmpParam" type="BMPImageWriteParam" line="118"/>
                <declaration name="bitsPerPixel" type="int" line="119"/>
                <declaration name="isPalette" type="boolean" line="120"/>
                <declaration name="paletteEntries" type="int" line="121"/>
                <declaration name="icm" type="IndexColorModel" line="122"/>
                <declaration name="input" type="RenderedImage" line="123"/>
                <declaration name="inputRaster" type="Raster" line="124"/>
                <declaration name="writeRaster" type="boolean" line="125"/>
                <declaration name="sourceRegion" type="Rectangle" line="126"/>
                <declaration name="sampleModel" type="SampleModel" line="127"/>
                <declaration name="colorModel" type="ColorModel" line="128"/>
                <scope line="130"/>
                <scope line="137">
                    <declaration name="rect" type="Rectangle" line="141"/>
                </scope>
                <declaration name="imageMetadata" type="IIOMetadata" line="145"/>
                <declaration name="bmpImageMetadata" type="BMPMetadata" line="146"/>
                <scope line="147"/>
                <scope line="150">
                    <declaration name="imageType" type="ImageTypeSpecifier" line="151"/>
                </scope>
                <declaration name="scaleX" type="int" line="155"/>
                <declaration name="scaleY" type="int" line="156"/>
                <declaration name="xOffset" type="int" line="157"/>
                <declaration name="yOffset" type="int" line="158"/>
                <declaration name="dataType" type="int" line="159"/>
                <declaration name="minX" type="int" line="163"/>
                <declaration name="minY" type="int" line="164"/>
                <declaration name="destinationRegion" type="Rectangle" line="169"/>
                <declaration name="noTransform" type="boolean" line="170"/>
                <declaration name="sourceBands" type="int[]" line="171"/>
                <declaration name="noSubband" type="boolean" line="172"/>
                <declaration name="numBands" type="int" line="173"/>
                <scope line="174"/>
                <scope line="180"/>
                <declaration name="bandOffsets" type="int[]" line="184"/>
                <declaration name="bgrOrder" type="boolean" line="185"/>
                <scope line="186">
                    <scope line="188"/>
                    <scope line="191">
                        <scope line="192"/>
                    </scope>
                </scope>
                <scope line="197">
                    <scope line="198">
                        <declaration name="bitOffsets" type="int[]" line="199"/>
                        <scope line="200"/>
                    </scope>
                </scope>
                <scope line="205"/>
                <declaration name="sampleSize" type="int" line="210"/>
                <declaration name="destScanlineBytes" type="int" line="211"/>
                <scope line="225"/>
                <declaration name="r" type="byte" line="228"/>
                <scope line="229">
                    <scope line="231"/>
                    <declaration name="rmask" type="int" line="242"/>
                    <declaration name="gmask" type="int" line="243"/>
                    <declaration name="bmask" type="int" line="244"/>
                    <scope line="245">
                        <scope line="246">
                            <declaration name="dcm" type="DirectColorModel" line="247"/>
                        </scope>
                        <scope line="252"/>
                    </scope>
                    <scope line="259"/>
                    <scope line="269"/>
                </scope>
                <scope line="273">
                    <scope line="274">
                        <scope line="278"/>
                        <scope line="282"/>
                        <scope line="286"/>
                        <scope line="289"/>
                        <scope line="295"/>
                    </scope>
                    <scope line="306">
                        <scope line="307">
                            <scope line="316"/>
                        </scope>
                        <scope line="323">
                            <scope line="324">
                                <declaration name="sample_sizes" type="int[]" line="325"/>
                                <scope line="327"/>
                                <scope line="331"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <declaration name="fileSize" type="int" line="339"/>
                <declaration name="offset" type="int" line="340"/>
                <declaration name="headerSize" type="int" line="341"/>
                <declaration name="imageSize" type="int" line="342"/>
                <declaration name="xPelsPerMeter" type="int" line="343"/>
                <declaration name="yPelsPerMeter" type="int" line="344"/>
                <declaration name="colorsUsed" type="int" line="345"/>
                <declaration name="colorsImportant" type="int" line="346"/>
                <declaration name="padding" type="int" line="347"/>
                <scope line="348"/>
                <declaration name="headPos" type="long" line="355"/>
                <scope line="357"/>
                <scope line="360"/>
                <scope line="370">
                    <scope line="371">
                        <scope line="372">
                            <declaration name="mask" type="int" line="373"/>
                        </scope>
                    </scope>
                    <scope line="377">
                        <scope line="378"/>
                    </scope>
                </scope>
                <declaration name="scanlineBytes" type="int" line="386"/>
                <declaration name="pixels" type="int[]" line="387"/>
                <declaration name="l" type="int" line="389"/>
                <scope line="390">
                    <declaration name="endPos" type="long" line="395"/>
                    <scope line="404"/>
                    <scope line="407"/>
                </scope>
                <declaration name="maxBandOffset" type="int" line="413"/>
                <declaration name="pixel" type="int[]" line="415"/>
                <declaration name="destScanlineLength" type="int" line="416"/>
                <scope line="417"/>
                <scope line="420">
                    <scope line="421"/>
                    <declaration name="row" type="int" line="424"/>
                    <declaration name="src" type="Raster" line="426"/>
                    <declaration name="srcRect" type="Rectangle" line="427"/>
                    <scope line="429">
                        <declaration name="sm" type="SampleModel" line="430"/>
                        <declaration name="pos" type="int" line="431"/>
                        <declaration name="startX" type="int" line="432"/>
                        <declaration name="startY" type="int" line="433"/>
                        <scope line="434">
                            <declaration name="csm" type="ComponentSampleModel" line="435"/>
                            <scope line="437">
                                <scope line="438"/>
                            </scope>
                        </scope>
                        <scope line="443">
                            <declaration name="mppsm" type="MultiPixelPackedSampleModel" line="444"/>
                        </scope>
                        <scope line="447">
                            <declaration name="sppsm" type="SinglePixelPackedSampleModel" line="448"/>
                        </scope>
                        <scope line="451">
                            <declaration name="bdata" type="byte[]" line="454"/>
                            <declaration name="sdata" type="short[]" line="458"/>
                            <declaration name="usdata" type="short[]" line="462"/>
                            <declaration name="idata" type="int[]" line="466"/>
                            <scope line="470"/>
                        </scope>
                        <scope line="474">
                            <scope line="477"/>
                        </scope>
                        <scope line="482">
                            <scope line="485"/>
                        </scope>
                    </scope>
                    <scope line="491">
                        <scope line="493">
                            <scope line="494">
                                <scope line="496"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="505">
                    <declaration name="endPos" type="long" line="511"/>
                </scope>
                <scope line="518"/>
                <scope line="521"/>
            </method>
            <method name="writePixels" type="void" line="526">
                <params>
                    <param name="l" type="int"/>
                    <param name="scanlineBytes" type="int"/>
                    <param name="bitsPerPixel" type="int"/>
                    <param name="pixels" type="int"/>
                    <param name="padding" type="int"/>
                    <param name="numBands" type="int"/>
                    <param name="icm" type="IndexColorModel"/>
                </params>
                <declaration name="pixel" type="int" line="527"/>
                <declaration name="k" type="int" line="528"/>
                <scope line="531"/>
                <scope line="534">
                    <scope line="536"/>
                </scope>
                <scope line="544">
                    <declaration name="bipixels" type="byte[]" line="545"/>
                    <scope line="546"/>
                </scope>
                <scope line="551">
                    <scope line="552"/>
                    <scope line="556"/>
                </scope>
                <scope line="564">
                    <scope line="565"/>
                </scope>
                <scope line="570">
                    <scope line="571"/>
                </scope>
                <scope line="579">
                    <scope line="581"/>
                    <scope line="585">
                        <scope line="586"/>
                    </scope>
                </scope>
                <scope line="594">
                    <scope line="595"/>
                </scope>
                <scope line="603">
                    <declaration name="entries" type="int" line="604"/>
                    <declaration name="r" type="byte" line="605"/>
                    <declaration name="g" type="byte" line="606"/>
                    <declaration name="b" type="byte" line="607"/>
                    <declaration name="index" type="int" line="611"/>
                    <scope line="612"/>
                </scope>
                <scope line="624">
                    <scope line="625">
                        <scope line="627"/>
                        <scope line="631">
                            <scope line="632"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="638">
                    <scope line="639">
                        <scope line="640"/>
                        <scope line="643"/>
                    </scope>
                </scope>
                <scope line="651">
                    <scope line="652"/>
                </scope>
            </method>
            <method name="encodeRLE8" type="void" line="657">
                <params>
                    <param name="bpixels" type="byte[]"/>
                    <param name="scanlineBytes" type="int"/>
                </params>
                <declaration name="runCount" type="int" line="658"/>
                <declaration name="runVal" type="byte" line="659"/>
                <declaration name="absBuf" type="byte[]" line="661"/>
                <scope line="662">
                    <scope line="664">
                        <scope line="665">
                            <scope line="669"/>
                            <scope line="673"/>
                        </scope>
                        <scope line="678">
                            <scope line="679"/>
                        </scope>
                        <scope line="687"/>
                    </scope>
                    <scope line="694">
                        <scope line="695"/>
                        <scope line="700"/>
                        <scope line="704"/>
                        <scope line="707">
                            <scope line="711"/>
                        </scope>
                    </scope>
                    <scope line="722">
                        <scope line="723"/>
                        <scope line="729">
                            <scope line="730">
                                <scope line="734"/>
                                <scope line="738"/>
                            </scope>
                            <scope line="743">
                                <scope line="744"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="encodeRLE4" type="void" line="757">
                <params>
                    <param name="bipixels" type="byte[]"/>
                    <param name="scanlineBytes" type="int"/>
                </params>
                <declaration name="runCount" type="int" line="758"/>
                <declaration name="runVal1" type="byte" line="759"/>
                <declaration name="absBuf" type="byte[]" line="760"/>
                <scope line="763">
                    <scope line="766">
                        <scope line="767">
                            <scope line="771"/>
                            <scope line="776"/>
                            <scope line="781"/>
                        </scope>
                        <scope line="786"/>
                        <scope line="793">
                            <scope line="795">
                                <scope line="801"/>
                                <scope line="805">
                                    <declaration name="r" type="int" line="807"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="814">
                            <scope line="822"/>
                            <scope line="825">
                                <declaration name="r" type="int" line="827"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="834">
                        <scope line="835"/>
                        <scope line="841"/>
                        <scope line="847"/>
                        <scope line="851">
                            <scope line="855"/>
                        </scope>
                    </scope>
                    <scope line="868">
                        <scope line="869">
                            <scope line="870">
                                <scope line="871"/>
                                <scope line="878">
                                    <declaration name="n" type="int" line="885"/>
                                </scope>
                            </scope>
                            <scope line="889"/>
                        </scope>
                        <scope line="896">
                            <scope line="897"/>
                            <scope line="900">
                                <scope line="904"/>
                                <scope line="909"/>
                                <scope line="914"/>
                            </scope>
                            <scope line="919">
                                <declaration name="n" type="int" line="923"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="incCompImageSize" type="void" line="942">
                <params>
                    <param name="value" type="int"/>
                </params>
            </method>
            <method name="isEven" type="boolean" line="945">
                <params>
                    <param name="number" type="int"/>
                </params>
            </method>
            <method name="writeFileHeader" type="void" line="948">
                <params>
                    <param name="fileSize" type="int"/>
                    <param name="offset" type="int"/>
                </params>
            </method>
            <method name="writeInfoHeader" type="void" line="955">
                <params>
                    <param name="headerSize" type="int"/>
                    <param name="bitsPerPixel" type="int"/>
                </params>
            </method>
            <method name="writeSize" type="void" line="962">
                <params>
                    <param name="dword" type="int"/>
                    <param name="offset" type="int"/>
                </params>
            </method>
            <method name="reset" type="void" line="966"/>
            <method name="getCompressionType" type="int" line="970">
                <params>
                    <param name="typeString" type="String"/>
                </params>
            </method>
            <method name="writeEmbedded" type="void" line="974">
                <params>
                    <param name="image" type="IIOImage"/>
                    <param name="bmpParam" type="ImageWriteParam"/>
                </params>
                <declaration name="format" type="String" line="975"/>
                <declaration name="iterator" type="Iterator" line="976"/>
                <declaration name="writer" type="ImageWriter" line="977"/>
                <scope line="979">
                    <scope line="980"/>
                    <anonymous_class line="983">
                        <method name="imageProgress" type="void" line="984">
                            <params>
                                <param name="source" type="ImageWriter"/>
                                <param name="percentageDone" type="float"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <anonymous_class line="989">
                        <method name="warningOccurred" type="void" line="990">
                            <params>
                                <param name="source" type="ImageWriter"/>
                                <param name="imageIndex" type="int"/>
                                <param name="warning" type="String"/>
                            </params>
                        </method>
                    </anonymous_class>
                    <declaration name="param" type="ImageWriteParam" line="996"/>
                </scope>
            </method>
            <method name="firstLowBit" type="int" line="1005">
                <params>
                    <param name="num" type="int"/>
                </params>
                <declaration name="count" type="int" line="1006"/>
                <scope line="1007"/>
            </method>
            <class name="IIOWriteProgressAdapter" line="1013">
                <implements interface="IIOWriteProgressListener"/>
                <method name="imageComplete" type="void" line="1014">
                    <params>
                        <param name="source" type="ImageWriter"/>
                    </params>
                </method>
                <method name="imageProgress" type="void" line="1016">
                    <params>
                        <param name="source" type="ImageWriter"/>
                        <param name="percentageDone" type="float"/>
                    </params>
                </method>
                <method name="imageStarted" type="void" line="1018">
                    <params>
                        <param name="source" type="ImageWriter"/>
                        <param name="imageIndex" type="int"/>
                    </params>
                </method>
                <method name="thumbnailComplete" type="void" line="1020">
                    <params>
                        <param name="source" type="ImageWriter"/>
                    </params>
                </method>
                <method name="thumbnailProgress" type="void" line="1022">
                    <params>
                        <param name="source" type="ImageWriter"/>
                        <param name="percentageDone" type="float"/>
                    </params>
                </method>
                <method name="thumbnailStarted" type="void" line="1024">
                    <params>
                        <param name="source" type="ImageWriter"/>
                        <param name="imageIndex" type="int"/>
                        <param name="thumbnailIndex" type="int"/>
                    </params>
                </method>
                <method name="writeAborted" type="void" line="1026">
                    <params>
                        <param name="source" type="ImageWriter"/>
                    </params>
                </method>
            </class>
            <method name="getPreferredCompressionType" type="int" line="1029">
                <params>
                    <param name="cm" type="ColorModel"/>
                    <param name="sm" type="SampleModel"/>
                </params>
                <declaration name="imageType" type="ImageTypeSpecifier" line="1030"/>
            </method>
            <method name="getPreferredCompressionType" type="int" line="1033">
                <params>
                    <param name="imageType" type="ImageTypeSpecifier"/>
                </params>
                <scope line="1034"/>
            </method>
            <method name="canEncodeImage" type="boolean" line="1039">
                <params>
                    <param name="compression" type="int"/>
                    <param name="cm" type="ColorModel"/>
                    <param name="sm" type="SampleModel"/>
                </params>
                <declaration name="imgType" type="ImageTypeSpecifier" line="1040"/>
            </method>
            <method name="canEncodeImage" type="boolean" line="1043">
                <params>
                    <param name="compression" type="int"/>
                    <param name="imgType" type="ImageTypeSpecifier"/>
                </params>
                <declaration name="spi" type="ImageWriterSpi" line="1044"/>
                <scope line="1045"/>
                <declaration name="biType" type="int" line="1048"/>
                <declaration name="bpp" type="int" line="1049"/>
                <scope line="1050"/>
                <scope line="1053"/>
                <scope line="1056">
                    <declaration name="canUseRGB" type="boolean" line="1057"/>
                    <declaration name="canUseBITFIELDS" type="boolean" line="1058"/>
                    <declaration name="sm" type="SampleModel" line="1059"/>
                    <scope line="1060">
                        <declaration name="sizes" type="int[]" line="1061"/>
                        <scope line="1064"/>
                    </scope>
                </scope>
            </method>
            <method name="writeMaskToPalette" type="void" line="1073">
                <params>
                    <param name="mask" type="int"/>
                    <param name="i" type="int"/>
                    <param name="r" type="byte[]"/>
                    <param name="g" type="byte[]"/>
                    <param name="b" type="byte[]"/>
                    <param name="a" type="byte[]"/>
                </params>
            </method>
            <method name="roundBpp" type="int" line="1079">
                <params>
                    <param name="x" type="int"/>
                </params>
                <scope line="1080"/>
                <scope line="1083"/>
                <scope line="1086"/>
                <scope line="1089"/>
            </method>
        </class>
    </source>