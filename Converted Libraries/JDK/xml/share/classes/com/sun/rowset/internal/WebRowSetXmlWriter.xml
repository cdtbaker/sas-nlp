<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.rowset.internal">
        <import package="com.sun.rowset.JdbcRowSetResourceBundle"/>
        <import package="java.sql"/>
        <import package="javax.sql"/>
        <import package="java.io"/>
        <import package="java.text.MessageFormat"/>
        <import package="java.util"/>
        <import package="javax.sql.rowset"/>
        <import package="javax.sql.rowset.spi"/>
        <class name="WebRowSetXmlWriter" line="38">
            <comment line="458">
                This begins a new tag with a indent                
            </comment>
            <comment line="472">
                This closes a tag started by beginTag with a indent                
            </comment>
            <implements interface="XmlWriter"/>
            <implements interface="Serializable"/>
            <javadoc line="38">
                An implementation of the &lt;code&gt;XmlWriter&lt;/code&gt; interface, which writes a
                  &lt;code&gt;WebRowSet&lt;/code&gt; object to an output stream as an XML document.                
            </javadoc>
            <declaration name="writer" type="java.io.Writer" line="45"/>
            <javadoc line="45">
                The &lt;code&gt;java.io.Writer&lt;/code&gt; object to which this &lt;code&gt;WebRowSetXmlWriter&lt;/code&gt;
                  object will write when its &lt;code&gt;writeXML&lt;/code&gt; method is called. The value
                  for this field is set with the &lt;code&gt;java.io.Writer&lt;/code&gt; object given
                  as the second argument to the &lt;code&gt;writeXML&lt;/code&gt; method.                
            </javadoc>
            <declaration name="stack" type="java.util.Stack" line="53"/>
            <javadoc line="53">
                The &lt;code&gt;java.util.Stack&lt;/code&gt; object that this &lt;code&gt;WebRowSetXmlWriter&lt;/code&gt;
                  object will use for storing the tags to be used for writing the calling
                  &lt;code&gt;WebRowSet&lt;/code&gt; object as an XML document.                
            </javadoc>
            <declaration name="resBundle" type="JdbcRowSetResourceBundle" line="60"/>
            <method name="WebRowSetXmlWriter" type="constructor" line="62">
                <scope line="64"/>
                <scope line="66"/>
            </method>
            <javadoc line="71">
                Writes the given &lt;code&gt;WebRowSet&lt;/code&gt; object as an XML document
                  using the given &lt;code&gt;java.io.Writer&lt;/code&gt; object. The XML document
                  will include the &lt;code&gt;WebRowSet&lt;/code&gt; object&apos;s data, metadata, and
                  properties.  If a data value has been updated, that information is also
                  included.
                  &lt;P&gt;
                  This method is called by the &lt;code&gt;XmlWriter&lt;/code&gt; object that is
                  referenced in the calling &lt;code&gt;WebRowSet&lt;/code&gt; object&apos;s
                  &lt;code&gt;xmlWriter&lt;/code&gt; field.  The &lt;code&gt;XmlWriter.writeXML&lt;/code&gt;
                  method passes to this method the arguments that were supplied to it.                
                <param>
                    caller the <code>WebRowSet</code> object to be written; must
                      be a rowset for which this <code>WebRowSetXmlWriter</code> object
                      is the writer                    
                </param>
                <param>
                    wrt the <code>java.io.Writer</code> object to which
                      <code>caller</code> will be written                    
                </param>
                <exception>
                    SQLException if a database access error occurs or
                      this <code>WebRowSetXmlWriter</code> object is not the writer
                      for the given rowset                    
                </exception>
                <see>
                    XmlWriter#writeXML                    
                </see>
            </javadoc>
            <method name="writeXML" type="void" line="94">
                <params>
                    <param name="caller" type="WebRowSet"/>
                    <param name="wrt" type="java.io.Writer"/>
                </params>
                <comment line="97">
                    create a new stack for tag checking.                    
                </comment>
            </method>
            <javadoc line="102">
                Writes the given &lt;code&gt;WebRowSet&lt;/code&gt; object as an XML document
                  using the given &lt;code&gt;java.io.OutputStream&lt;/code&gt; object. The XML document
                  will include the &lt;code&gt;WebRowSet&lt;/code&gt; object&apos;s data, metadata, and
                  properties.  If a data value has been updated, that information is also
                  included.
                  &lt;P&gt;
                  Using stream is a faster way than using &lt;code&gt;java.io.Writer&lt;code/&gt;
                  This method is called by the &lt;code&gt;XmlWriter&lt;/code&gt; object that is
                  referenced in the calling &lt;code&gt;WebRowSet&lt;/code&gt; object&apos;s
                  &lt;code&gt;xmlWriter&lt;/code&gt; field.  The &lt;code&gt;XmlWriter.writeXML&lt;/code&gt;
                  method passes to this method the arguments that were supplied to it.                
                <param>
                    caller the <code>WebRowSet</code> object to be written; must
                      be a rowset for which this <code>WebRowSetXmlWriter</code> object
                      is the writer                    
                </param>
                <param>
                    oStream the <code>java.io.OutputStream</code> object to which
                      <code>caller</code> will be written                    
                </param>
                <throws>
                    SQLException if a database access error occurs or
                      this <code>WebRowSetXmlWriter</code> object is not the writer
                      for the given rowset                    
                </throws>
                <see>
                    XmlWriter#writeXML                    
                </see>
            </javadoc>
            <method name="writeXML" type="void" line="127">
                <params>
                    <param name="caller" type="WebRowSet"/>
                    <param name="oStream" type="java.io.OutputStream"/>
                </params>
                <comment line="130">
                    create a new stack for tag checking.                    
                </comment>
            </method>
            <javadoc line="135">
                @exception SQLException if a database access error occurs                
            </javadoc>
            <method name="writeRowSet" type="void" line="140">
                <params>
                    <param name="caller" type="WebRowSet"/>
                </params>
                <scope line="142"/>
                <scope line="152"/>
            </method>
            <method name="startHeader" type="void" line="157"/>
            <method name="endHeader" type="void" line="165"/>
            <javadoc line="169">
                @exception SQLException if a database access error occurs                
            </javadoc>
            <method name="writeProperties" type="void" line="174">
                <params>
                    <param name="caller" type="WebRowSet"/>
                </params>
                <comment line="189">
                    it may be the case that fetch direction has not been set
                     fetchDir  == 0
                     in that case it will throw a SQLException.
                     To avoid that catch it here                    
                </comment>
                <comment line="207">
                    Changed to beginSection and endSection for maps for proper indentation                    
                </comment>
                <comment line="246">
                    Remove the string after &quot;@xxxx&quot;
                     before writing it to the xml file.                    
                </comment>
                <scope line="178">
                    <scope line="185"/>
                    <scope line="187"/>
                    <declaration name="kc" type="int[]" line="200"/>
                    <declaration name="typeMap" type="java.util.Map" line="208"/>
                    <scope line="209">
                        <declaration name="i" type="Iterator" line="210"/>
                        <declaration name="c" type="Class" line="211"/>
                        <declaration name="type" type="String" line="212"/>
                        <scope line="213"/>
                    </scope>
                    <declaration name="itype" type="int" line="227"/>
                    <declaration name="strType" type="String" line="228"/>
                    <scope line="230"/>
                    <scope line="232"/>
                    <scope line="234"/>
                    <declaration name="strProviderInstance" type="String" line="247"/>
                    <declaration name="strProvider" type="String" line="248"/>
                </scope>
                <scope line="258"/>
            </method>
            <javadoc line="265">
                @exception SQLException if a database access error occurs                
            </javadoc>
            <method name="writeMetaData" type="void" line="270">
                <params>
                    <param name="caller" type="WebRowSet"/>
                </params>
                <declaration name="columnCount" type="int" line="271"/>
                <scope line="275">
                    <declaration name="rsmd" type="ResultSetMetaData" line="277"/>
                    <scope line="281"/>
                </scope>
                <scope line="304"/>
            </method>
            <javadoc line="311">
                @exception SQLException if a database access error occurs                
            </javadoc>
            <method name="writeData" type="void" line="316">
                <params>
                    <param name="caller" type="WebRowSet"/>
                </params>
                <comment line="357">
                    this is unchecked                    
                </comment>
                <declaration name="rs" type="ResultSet" line="317"/>
                <scope line="319">
                    <declaration name="rsmd" type="ResultSetMetaData" line="320"/>
                    <declaration name="columnCount" type="int" line="321"/>
                    <declaration name="i" type="int" line="322"/>
                    <scope line="328">
                        <scope line="329"/>
                        <scope line="331"/>
                        <scope line="333"/>
                        <scope line="335"/>
                        <scope line="339">
                            <scope line="340"/>
                            <scope line="349"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="359"/>
            </method>
            <method name="writeValue" type="void" line="364">
                <params>
                    <param name="idx" type="int"/>
                    <param name="caller" type="RowSet"/>
                </params>
                <comment line="451">
                    Need to take care of BLOB, CLOB, Array, Ref here                    
                </comment>
                <scope line="365">
                    <declaration name="type" type="int" line="366"/>
                    <declaration name="b" type="boolean" line="371"/>
                    <declaration name="s" type="short" line="379"/>
                    <declaration name="i" type="int" line="386"/>
                    <declaration name="l" type="long" line="393"/>
                    <declaration name="f" type="float" line="401"/>
                    <declaration name="d" type="double" line="408"/>
                    <declaration name="date" type="java.sql.Date" line="423"/>
                    <declaration name="time" type="java.sql.Time" line="430"/>
                    <declaration name="ts" type="java.sql.Timestamp" line="437"/>
                </scope>
                <scope line="452"/>
            </method>
            <method name="beginSection" type="void" line="461">
                <params>
                    <param name="tag" type="String"/>
                </params>
                <comment line="463">
                    store the current tag                    
                </comment>
                <comment line="468">
                    write it out                    
                </comment>
            </method>
            <method name="endSection" type="void" line="475">
                <params>
                    <param name="tag" type="String"/>
                </params>
                <comment line="486">
                    get the current tag and write it out                    
                </comment>
                <declaration name="beginTag" type="String" line="478"/>
                <scope line="480"/>
                <scope line="484"/>
                <scope line="487"/>
            </method>
            <method name="endSection" type="void" line="493">
                <comment line="497">
                    get the current tag and write it out                    
                </comment>
                <declaration name="beginTag" type="String" line="497"/>
            </method>
            <method name="beginTag" type="void" line="503">
                <params>
                    <param name="tag" type="String"/>
                </params>
                <comment line="505">
                    store the current tag                    
                </comment>
                <comment line="510">
                    write tag out                    
                </comment>
            </method>
            <method name="endTag" type="void" line="513">
                <params>
                    <param name="tag" type="String"/>
                </params>
                <comment line="517">
                    get the current tag and write it out                    
                </comment>
                <declaration name="beginTag" type="String" line="514"/>
                <scope line="515"/>
                <scope line="518"/>
            </method>
            <method name="emptyTag" type="void" line="524">
                <params>
                    <param name="tag" type="String"/>
                </params>
                <comment line="526">
                    write an emptyTag                    
                </comment>
            </method>
            <method name="setTag" type="void" line="529">
                <params>
                    <param name="tag" type="String"/>
                </params>
                <comment line="531">
                    add the tag to stack                    
                </comment>
            </method>
            <method name="getTag" type="String" line="534"/>
            <method name="writeNull" type="void" line="538"/>
            <method name="writeStringData" type="void" line="542">
                <params>
                    <param name="s" type="String"/>
                </params>
                <scope line="543"/>
                <scope line="545"/>
                <scope line="547"/>
            </method>
            <method name="writeString" type="void" line="555">
                <params>
                    <param name="s" type="String"/>
                </params>
                <scope line="556"/>
                <scope line="558"/>
            </method>
            <method name="writeShort" type="void" line="564">
                <params>
                    <param name="s" type="short"/>
                </params>
            </method>
            <method name="writeLong" type="void" line="568">
                <params>
                    <param name="l" type="long"/>
                </params>
            </method>
            <method name="writeInteger" type="void" line="572">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="writeBoolean" type="void" line="576">
                <params>
                    <param name="b" type="boolean"/>
                </params>
            </method>
            <method name="writeFloat" type="void" line="580">
                <params>
                    <param name="f" type="float"/>
                </params>
            </method>
            <method name="writeDouble" type="void" line="584">
                <params>
                    <param name="d" type="double"/>
                </params>
            </method>
            <method name="writeBigDecimal" type="void" line="588">
                <params>
                    <param name="bd" type="java.math.BigDecimal"/>
                </params>
            </method>
            <method name="writeIndent" type="void" line="595">
                <params>
                    <param name="tabs" type="int"/>
                </params>
                <comment line="597">
                    indent...                    
                </comment>
                <scope line="597"/>
            </method>
            <method name="propString" type="void" line="602">
                <params>
                    <param name="tag" type="String"/>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="propInteger" type="void" line="608">
                <params>
                    <param name="tag" type="String"/>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="propBoolean" type="void" line="614">
                <params>
                    <param name="tag" type="String"/>
                    <param name="b" type="boolean"/>
                </params>
            </method>
            <method name="writeEmptyString" type="void" line="620"/>
            <javadoc line="623">
                Purely for code coverage purposes..                
            </javadoc>
            <method name="writeData" type="boolean" line="626">
                <params>
                    <param name="caller" type="RowSetInternal"/>
                </params>
            </method>
            <javadoc line="631">
                This function has been added for the processing of special characters
                  lik &lt;,&gt;,&apos;,&quot; and &amp; in the data to be serialized. These have to be taken
                  of specifically or else there will be parsing error while trying to read
                  the contents of the XML file.                
            </javadoc>
            <method name="processSpecialCharacters" type="String" line="638">
                <params>
                    <param name="s" type="String"/>
                </params>
                <scope line="640"/>
                <declaration name="charStr" type="char[]" line="643"/>
                <declaration name="specialStr" type="String" line="644"/>
                <scope line="646">
                    <scope line="647"/>
                    <scope line="649"/>
                    <scope line="651"/>
                    <scope line="653"/>
                    <scope line="655"/>
                    <scope line="657"/>
                </scope>
            </method>
            <javadoc line="667">
                This method re populates the resBundle
                  during the deserialization process                
            </javadoc>
            <method name="readObject" type="void" line="672">
                <params>
                    <param name="ois" type="ObjectInputStream"/>
                </params>
                <comment line="674">
                    Default state initialization happens here                    
                </comment>
                <comment line="676">
                    Initialization of transient Res Bundle happens here .                    
                </comment>
                <scope line="676"/>
                <scope line="678"/>
            </method>
            <declaration name="serialVersionUID" type="long" line="684"/>
        </class>
    </source>