<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.rowset">
        <import package="java.io"/>
        <import package="java.util"/>
        <import package="java.sql"/>
        <import package="javax.sql"/>
        <import package="java.math"/>
        <import package="javax.sql.rowset"/>
        <import package="javax.sql.rowset.spi"/>
        <import package="javax.sql.rowset.serial"/>
        <import package="com.sun.rowset.providers"/>
        <import package="com.sun.rowset.internal"/>
        <class name="FilteredRowSetImpl" line="12">
            <extends class="WebRowSetImpl"/>
            <implements interface="Serializable"/>
            <implements interface="Cloneable"/>
            <implements interface="FilteredRowSet"/>
            <javadoc line="12">
                The standard implementation of the &lt;code&gt;FilteredRowSet&lt;/code&gt; interface. See the interface
                  defintion for full behaviour and implementation requirements.                
                <see>
                    javax.sql.rowset.Predicate                    
                </see>
                <author>
                    Jonathan Bruce, Amit Handa                    
                </author>
            </javadoc>
            <declaration name="p" type="Predicate" line="19"/>
            <declaration name="onInsertRow" type="boolean" line="20"/>
            <javadoc line="21">
                Construct a &lt;code&gt;FilteredRowSet&lt;/code&gt;                
            </javadoc>
            <method name="FilteredRowSetImpl" type="constructor" line="24"/>
            <javadoc line="27">
                Construct a &lt;code&gt;FilteredRowSet&lt;/code&gt; with a specified synchronization
                  provider.                
                <param>
                    env a Hashtable containing a desired synchconizatation provider
                      name-value pair.                    
                </param>
            </javadoc>
            <method name="FilteredRowSetImpl" type="constructor" line="33">
                <params>
                    <param name="env" type="Hashtable"/>
                </params>
            </method>
            <javadoc line="36">
                Apply the predicate for this filter                
                <param>
                    p an implementation of the predicate interface                    
                </param>
            </javadoc>
            <method name="setFilter" type="void" line="40">
                <params>
                    <param name="p" type="Predicate"/>
                </params>
            </method>
            <javadoc line="43">
                Retrieve the filter active for this &lt;code&gt;FilteredRowSet&lt;/code&gt;                
                <return>
                    a <code>Predicate</code> object instance                    
                </return>
            </javadoc>
            <method name="getFilter" type="Predicate" line="47"/>
            <javadoc line="50">
                Over-riding &lt;code&gt;internalNext()&lt;/code&gt; implementation. This method
                  applies the filter on the &lt;code&gt;RowSet&lt;/code&gt; each time the cursor is advanced or
                  manipulated. It moves the cursor to the next row according to the set
                  predicate and returns &lt;code&gt;true&lt;/code&gt; if the cursor is still within the rowset or
                  &lt;code&gt;false&lt;/code&gt; if the cursor position is over the last row                
                <return>
                    true if over the valid row in the rowset; false if over the last
                      row                    
                </return>
            </javadoc>
            <method name="internalNext" type="boolean" line="59">
                <declaration name="bool" type="boolean" line="60"/>
                <scope line="61">
                    <scope line="63"/>
                    <scope line="66"/>
                </scope>
            </method>
            <javadoc line="72">
                Over-riding &lt;code&gt;internalPrevious()&lt;/code&gt; implementation. This method
                  applies the filter on the &lt;code&gt;RowSet&lt;/code&gt; each time the cursor is moved backward or
                  manipulated. It moves the cursor to the previous row according to the set
                  predicate and returns &lt;code&gt;true&lt;/code&gt; if the cursor is still within the rowset or
                  &lt;code&gt;false&lt;/code&gt; if the cursor position is over the last row                
                <return>
                    true if over the valid row in the rowset; false if over the last
                      row                    
                </return>
            </javadoc>
            <method name="internalPrevious" type="boolean" line="81">
                <declaration name="bool" type="boolean" line="82"/>
                <scope line="83">
                    <scope line="85"/>
                    <scope line="88"/>
                </scope>
            </method>
            <javadoc line="94">
                Over-riding &lt;code&gt;internalFirst()&lt;/code&gt; implementation. This method
                  applies the filter on the &lt;code&gt;RowSet&lt;/code&gt; each time the cursor is moved to first
                  row. It moves the cursor to the first row according to the set
                  predicate and returns &lt;code&gt;true&lt;/code&gt; if the cursor is still within the rowset or
                  &lt;code&gt;false&lt;/code&gt; if the cursor position is over the last row                
                <return>
                    true if over the valid row in the rowset; false if over the last
                      row                    
                </return>
            </javadoc>
            <method name="internalFirst" type="boolean" line="103">
                <declaration name="bool" type="boolean" line="104"/>
                <scope line="105"/>
                <scope line="108">
                    <scope line="109"/>
                </scope>
            </method>
            <javadoc line="116">
                Over-riding &lt;code&gt;internalLast()&lt;/code&gt; implementation. This method
                  applies the filter on the &lt;code&gt;RowSet&lt;/code&gt; each time the cursor is moved to
                  last row. It moves the cursor to the last row according to the set
                  predicate and returns &lt;code&gt;true&lt;/code&gt; if the cursor is still within the rowset or
                  &lt;code&gt;false&lt;/code&gt; if the cursor position is over the last row                
                <return>
                    true if over the valid row in the rowset; false if over the last
                      row                    
                </return>
            </javadoc>
            <method name="internalLast" type="boolean" line="125">
                <declaration name="bool" type="boolean" line="126"/>
                <scope line="127"/>
                <scope line="130">
                    <scope line="131"/>
                </scope>
            </method>
            <javadoc line="138">
                Moves the cursor the specified number of rows from the current
                  position, with a positive number moving it forward and a
                  negative number moving it backward.
                  &lt;P&gt;
                  If the number is positive, the cursor moves the specified number of
                  rows toward the end of the rowset, starting at the current row.
                  For example, the following command, in which
                  &lt;code&gt;crs&lt;/code&gt; is a &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with 100 rows,
                  moves the cursor forward four rows from the current row.  If the
                  current row is 50, the cursor would move to row 54.
                  &lt;PRE&gt;&lt;code&gt;
                  crs.relative(4);
                  &lt;/code&gt; &lt;/PRE&gt;
                  &lt;P&gt;
                  If the number is negative, the cursor moves back toward the beginning
                  the specified number of rows, starting at the current row.
                  For example, calling the method
                  &lt;code&gt;absolute(-1)&lt;/code&gt; positions the cursor on the last row,
                  &lt;code&gt;absolute(-2)&lt;/code&gt; moves it on the next-to-last row, and so on.
                  If the &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object &lt;code&gt;crs&lt;/code&gt; has five rows,
                  the following command moves the cursor to the fourth-to-last row, which
                  in the case of a  rowset with five rows, is also the second row
                  from the beginning.
                  &lt;PRE&gt;&lt;code&gt;
                  crs.absolute(-4);
                  &lt;/code&gt; &lt;/PRE&gt;
                  If the number specified is larger than the number of rows, the cursor
                  will move to the position after the last row. If the number specified
                  would move the cursor one or more rows before the first row, the cursor
                  moves to the position before the first row. In both cases, this method
                  throws an &lt;code&gt;SQLException&lt;/code&gt;.
                  &lt;P&gt;
                  Note: Calling &lt;code&gt;absolute(1)&lt;/code&gt; is the same as calling the
                  method &lt;code&gt;first()&lt;/code&gt;.  Calling &lt;code&gt;absolute(-1)&lt;/code&gt; is the
                  same as calling &lt;code&gt;last()&lt;/code&gt;.  Calling &lt;code&gt;relative(0)&lt;/code&gt;
                  is valid, but it does not change the cursor position.                
                <param>
                    rows an <code>int</code> indicating the number of rows to move
                      the cursor, starting at the current row; a positive number
                      moves the cursor forward; a negative number moves the cursor
                      backward; must not move the cursor past the valid
                      rows                    
                </param>
                <return>
                    <code>true</code> if the cursor is on a row in this
                      <code>CachedRowSetImpl</code> object; <code>false</code>
                      otherwise                    
                </return>
                <throws>
                    SQLException if the rowset is type <code>ResultSet.TYPE_FORWARD_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="relative" type="boolean" line="185">
                <params>
                    <param name="rows" type="int"/>
                </params>
                <declaration name="retval" type="boolean" line="186"/>
                <declaration name="bool" type="boolean" line="187"/>
                <declaration name="boolval" type="boolean" line="188"/>
                <scope line="189"/>
                <scope line="192">
                    <declaration name="i" type="int" line="193"/>
                    <scope line="194">
                        <scope line="195"/>
                    </scope>
                </scope>
                <scope line="203">
                    <declaration name="j" type="int" line="204"/>
                    <scope line="205">
                        <scope line="206"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="217">
                Moves this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object&apos;s cursor to the row number
                  specified.
                  &lt;p&gt;If the number is positive, the cursor moves to an absolute row with
                  respect to the beginning of the rowset.  The first row is row 1, the second
                  is row 2, and so on.  For example, the following command, in which
                  &lt;code&gt;crs&lt;/code&gt; is a &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object, moves the cursor
                  to the fourth row, starting from the beginning of the rowset.
                  &lt;PRE&gt;&lt;code&gt;
                  crs.absolute(4);
                  &lt;/code&gt; &lt;/PRE&gt;
                  &lt;P&gt;
                  If the number is negative, the cursor moves to an absolute row position
                  with respect to the end of the rowset.  For example, calling
                  &lt;code&gt;absolute(-1)&lt;/code&gt; positions the cursor on the last row,
                  &lt;code&gt;absolute(-2)&lt;/code&gt; moves it on the next-to-last row, and so on.
                  If the &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object &lt;code&gt;crs&lt;/code&gt; has five rows,
                  the following command moves the cursor to the fourth-to-last row, which
                  in the case of a  rowset with five rows, is also the second row, counting
                  from the beginning.
                  &lt;PRE&gt;&lt;code&gt;
                  crs.absolute(-4);
                  &lt;/code&gt; &lt;/PRE&gt;
                  If the number specified is larger than the number of rows, the cursor
                  will move to the position after the last row. If the number specified
                  would move the cursor one or more rows before the first row, the cursor
                  moves to the position before the first row.
                  &lt;P&gt;
                  Note: Calling &lt;code&gt;absolute(1)&lt;/code&gt; is the same as calling the
                  method &lt;code&gt;first()&lt;/code&gt;.  Calling &lt;code&gt;absolute(-1)&lt;/code&gt; is the
                  same as calling &lt;code&gt;last()&lt;/code&gt;.                
                <param>
                    rows a positive number to indicate the row, starting row numbering from
                      the first row, which is <code>1</code>; a negative number to indicate
                      the row, starting row numbering from the last row, which is
                      <code>-1</code>; it must not be <code>0</code>                    
                </param>
                <return>
                    <code>true</code> if the cursor is on the rowset; <code>false</code>
                      otherwise                    
                </return>
                <throws>
                    SQLException if the given cursor position is <code>0</code> or the
                      type of this rowset is <code>ResultSet.TYPE_FORWARD_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="absolute" type="boolean" line="257">
                <params>
                    <param name="rows" type="int"/>
                </params>
                <declaration name="retval" type="boolean" line="258"/>
                <declaration name="bool" type="boolean" line="259"/>
                <scope line="260"/>
                <scope line="263">
                    <declaration name="i" type="int" line="265"/>
                    <scope line="266">
                        <scope line="267"/>
                    </scope>
                </scope>
                <scope line="275">
                    <declaration name="j" type="int" line="277"/>
                    <scope line="278">
                        <scope line="279"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="290">
                Moves the cursor for this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object
                  to the insert row.  The current row in the rowset is remembered
                  while the cursor is on the insert row.
                  &lt;P&gt;
                  The insert row is a special row associated with an updatable
                  rowset.  It is essentially a buffer where a new row may
                  be constructed by calling the appropriate &lt;code&gt;updateXXX&lt;/code&gt;
                  methods to assign a value to each column in the row.  A complete
                  row must be constructed; that is, every column that is not nullable
                  must be assigned a value.  In order for the new row to become part
                  of this rowset, the method &lt;code&gt;insertRow&lt;/code&gt; must be called
                  before the cursor is moved back to the rowset.
                  &lt;P&gt;
                  Only certain methods may be invoked while the cursor is on the insert
                  row; many methods throw an exception if they are called while the
                  cursor is there.  In addition to the &lt;code&gt;updateXXX&lt;/code&gt;
                  and &lt;code&gt;insertRow&lt;/code&gt; methods, only the &lt;code&gt;getXXX&lt;/code&gt; methods
                  may be called when the cursor is on the insert row.  A &lt;code&gt;getXXX&lt;/code&gt;
                  method should be called on a column only after an &lt;code&gt;updateXXX&lt;/code&gt;
                  method has been called on that column; otherwise, the value returned is
                  undetermined.                
                <throws>
                    SQLException if this <code>CachedRowSetImpl</code> object is
                      <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="moveToInsertRow" type="void" line="315"/>
            <javadoc line="319">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;int&lt;/code&gt; value.
                  &lt;P&gt;
                  This method updates a column value in the current row or the insert
                  row of this rowset, but it does not update the database.
                  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnIndex the first column is <code>1</code>, the second
                      is <code>2</code>, and so on; must be <code>1</code> or larger
                      and equal to or less than the number of columns in this rowset                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column index is out of bounds,
                      (2) the cursor is not on one of this rowset's rows or its
                      insert row, or (3) this rowset is
                      <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateInt" type="void" line="340">
                <params>
                    <param name="columnIndex" type="int"/>
                    <param name="x" type="int"/>
                </params>
                <declaration name="bool" type="boolean" line="341"/>
                <scope line="342">
                    <scope line="343">
                        <scope line="345"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="352">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;int&lt;/code&gt; value.
                  &lt;P&gt;
                  This method updates a column value in the current row or the insert
                  row of this rowset, but it does not update the database.
                  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnName a <code>String</code> object that must match the
                      SQL name of a column in this rowset, ignoring case                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column name does not match the
                      name of a column in this rowset, (2) the cursor is not on
                      one of this rowset's rows or its insert row, or (3) this
                      rowset is <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateInt" type="void" line="372">
                <params>
                    <param name="columnName" type="String"/>
                    <param name="x" type="int"/>
                </params>
            </method>
            <javadoc line="375">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;boolean&lt;/code&gt; value.
                  &lt;P&gt;
                  This method updates a column value in the current row or the insert
                  row of this rowset, but it does not update the database.
                  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnIndex the first column is <code>1</code>, the second
                      is <code>2</code>, and so on; must be <code>1</code> or larger
                      and equal to or less than the number of columns in this rowset                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column index is out of bounds,
                      (2) the cursor is not on one of this rowset's rows or its
                      insert row, or (3) this rowset is
                      <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateBoolean" type="void" line="396">
                <params>
                    <param name="columnIndex" type="int"/>
                    <param name="x" type="boolean"/>
                </params>
                <declaration name="bool" type="boolean" line="397"/>
                <scope line="398">
                    <scope line="399">
                        <scope line="401"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="408">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;boolean&lt;/code&gt; value.
                  &lt;P&gt;
                  This method updates a column value in the current row or the insert
                  row of this rowset, but it does not update the database.
                  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnName a <code>String</code> object that must match the
                      SQL name of a column in this rowset, ignoring case                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column name does not match the
                      name of a column in this rowset, (2) the cursor is not on
                      one of this rowset's rows or its insert row, or (3) this
                      rowset is <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateBoolean" type="void" line="428">
                <params>
                    <param name="columnName" type="String"/>
                    <param name="x" type="boolean"/>
                </params>
            </method>
            <javadoc line="431">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;byte&lt;/code&gt; value.
                  &lt;P&gt;
                  This method updates a column value in the current row or the insert
                  row of this rowset, but it does not update the database.
                  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnIndex the first column is <code>1</code>, the second
                      is <code>2</code>, and so on; must be <code>1</code> or larger
                      and equal to or less than the number of columns in this rowset                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column index is out of bounds,
                      (2) the cursor is not on one of this rowset's rows or its
                      insert row, or (3) this rowset is
                      <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateByte" type="void" line="452">
                <params>
                    <param name="columnIndex" type="int"/>
                    <param name="x" type="byte"/>
                </params>
                <declaration name="bool" type="boolean" line="453"/>
                <scope line="454">
                    <scope line="455">
                        <scope line="457"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="464">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;byte&lt;/code&gt; value.
                  &lt;P&gt;
                  This method updates a column value in the current row or the insert
                  row of this rowset, but it does not update the database.
                  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnName a <code>String</code> object that must match the
                      SQL name of a column in this rowset, ignoring case                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column name does not match the
                      name of a column in this rowset, (2) the cursor is not on
                      one of this rowset's rows or its insert row, or (3) this
                      rowset is <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateByte" type="void" line="484">
                <params>
                    <param name="columnName" type="String"/>
                    <param name="x" type="byte"/>
                </params>
            </method>
            <javadoc line="487">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;short&lt;/code&gt; value.
                  &lt;P&gt;
                  This method updates a column value in the current row or the insert
                  row of this rowset, but it does not update the database.
                  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnIndex the first column is <code>1</code>, the second
                      is <code>2</code>, and so on; must be <code>1</code> or larger
                      and equal to or less than the number of columns in this rowset                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column index is out of bounds,
                      (2) the cursor is not on one of this rowset's rows or its
                      insert row, or (3) this rowset is
                      <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateShort" type="void" line="508">
                <params>
                    <param name="columnIndex" type="int"/>
                    <param name="x" type="short"/>
                </params>
                <declaration name="bool" type="boolean" line="509"/>
                <scope line="510">
                    <scope line="511">
                        <scope line="513"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="520">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;short&lt;/code&gt; value.
                  &lt;P&gt;
                  This method updates a column value in the current row or the insert
                  row of this rowset, but it does not update the database.
                  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnName a <code>String</code> object that must match the
                      SQL name of a column in this rowset, ignoring case                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column name does not match the
                      name of a column in this rowset, (2) the cursor is not on
                      one of this rowset's rows or its insert row, or (3) this
                      rowset is <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateShort" type="void" line="540">
                <params>
                    <param name="columnName" type="String"/>
                    <param name="x" type="short"/>
                </params>
            </method>
            <javadoc line="543">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;long&lt;/code&gt; value.
                  &lt;P&gt;
                  This method updates a column value in the current row or the insert
                  row of this rowset, but it does not update the database.
                  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnIndex the first column is <code>1</code>, the second
                      is <code>2</code>, and so on; must be <code>1</code> or larger
                      and equal to or less than the number of columns in this rowset                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column index is out of bounds,
                      (2) the cursor is not on one of this rowset's rows or its
                      insert row, or (3) this rowset is
                      <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateLong" type="void" line="564">
                <params>
                    <param name="columnIndex" type="int"/>
                    <param name="x" type="long"/>
                </params>
                <declaration name="bool" type="boolean" line="565"/>
                <scope line="566">
                    <scope line="567">
                        <scope line="569"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="576">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;long&lt;/code&gt; value.
                  &lt;P&gt;
                  This method updates a column value in the current row or the insert
                  row of this rowset, but it does not update the database.
                  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnName a <code>String</code> object that must match the
                      SQL name of a column in this rowset, ignoring case                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column name does not match the
                      name of a column in this rowset, (2) the cursor is not on
                      one of this rowset's rows or its insert row, or (3) this
                      rowset is <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateLong" type="void" line="596">
                <params>
                    <param name="columnName" type="String"/>
                    <param name="x" type="long"/>
                </params>
            </method>
            <javadoc line="599">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;float&lt;/code&gt; value.
                  &lt;P&gt;
                  This method updates a column value in the current row or the insert
                  row of this rowset, but it does not update the database.
                  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnIndex the first column is <code>1</code>, the second
                      is <code>2</code>, and so on; must be <code>1</code> or larger
                      and equal to or less than the number of columns in this rowset                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column index is out of bounds,
                      (2) the cursor is not on one of this rowset's rows or its
                      insert row, or (3) this rowset is
                      <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateFloat" type="void" line="620">
                <params>
                    <param name="columnIndex" type="int"/>
                    <param name="x" type="float"/>
                </params>
                <declaration name="bool" type="boolean" line="621"/>
                <scope line="622">
                    <scope line="623">
                        <scope line="625"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="632">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;float&lt;/code&gt; value.
                  &lt;P&gt;
                  This method updates a column value in the current row or the insert
                  row of this rowset, but it does not update the database.
                  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnName a <code>String</code> object that must match the
                      SQL name of a column in this rowset, ignoring case                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column name does not match the
                      name of a column in this rowset, (2) the cursor is not on
                      one of this rowset's rows or its insert row, or (3) this
                      rowset is <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateFloat" type="void" line="652">
                <params>
                    <param name="columnName" type="String"/>
                    <param name="x" type="float"/>
                </params>
            </method>
            <javadoc line="655">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;double&lt;/code&gt; value.
                  This method updates a column value in either the current row or
                  the insert row of this rowset, but it does not update the
                  database.  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnIndex the first column is <code>1</code>, the second
                      is <code>2</code>, and so on; must be <code>1</code> or larger
                      and equal to or less than the number of columns in this rowset                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column index is out of bounds,
                      (2) the cursor is not on one of this rowset's rows or its
                      insert row, or (3) this rowset is
                      <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateDouble" type="void" line="675">
                <params>
                    <param name="columnIndex" type="int"/>
                    <param name="x" type="double"/>
                </params>
                <declaration name="bool" type="boolean" line="676"/>
                <scope line="677">
                    <scope line="678">
                        <scope line="680"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="687">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;double&lt;/code&gt; value.
                  This method updates a column value in either the current row or
                  the insert row of this rowset, but it does not update the
                  database.  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnName a <code>String</code> object that must match the
                      SQL name of a column in this rowset, ignoring case                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column name does not match the
                      name of a column in this rowset, (2) the cursor is not on
                      one of this rowset's rows or its insert row, or (3) this
                      rowset is <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateDouble" type="void" line="706">
                <params>
                    <param name="columnName" type="String"/>
                    <param name="x" type="double"/>
                </params>
            </method>
            <javadoc line="709">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;java.math.BigDecimal&lt;/code&gt; object.
                  &lt;P&gt;
                  This method updates a column value in the current row or the insert
                  row of this rowset, but it does not update the database.
                  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnIndex the first column is <code>1</code>, the second
                      is <code>2</code>, and so on; must be <code>1</code> or larger
                      and equal to or less than the number of columns in this rowset                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column index is out of bounds,
                      (2) the cursor is not on one of this rowset's rows or its
                      insert row, or (3) this rowset is
                      <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateBigDecimal" type="void" line="730">
                <params>
                    <param name="columnIndex" type="int"/>
                    <param name="x" type="BigDecimal"/>
                </params>
                <declaration name="bool" type="boolean" line="731"/>
                <scope line="732">
                    <scope line="733">
                        <scope line="735"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="742">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;java.math.BigDecimal&lt;/code&gt; object.
                  &lt;P&gt;
                  This method updates a column value in the current row or the insert
                  row of this rowset, but it does not update the database.
                  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnName a <code>String</code> object that must match the
                      SQL name of a column in this rowset, ignoring case                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column name does not match the
                      name of a column in this rowset, (2) the cursor is not on
                      one of this rowset's rows or its insert row, or (3) this
                      rowset is <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateBigDecimal" type="void" line="762">
                <params>
                    <param name="columnName" type="String"/>
                    <param name="x" type="BigDecimal"/>
                </params>
            </method>
            <javadoc line="765">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;String&lt;/code&gt; object.
                  &lt;P&gt;
                  This method updates a column value in either the current row or
                  the insert row of this rowset, but it does not update the
                  database.  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to mark the row as updated.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called to insert the new row into this rowset and mark it
                  as inserted. Both of these methods must be called before the
                  cursor moves to another row.
                  &lt;P&gt;
                  The method &lt;code&gt;acceptChanges&lt;/code&gt; must be called if the
                  updated values are to be written back to the underlying database.                
                <param>
                    columnIndex the first column is <code>1</code>, the second
                      is <code>2</code>, and so on; must be <code>1</code> or larger
                      and equal to or less than the number of columns in this rowset                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column index is out of bounds,
                      (2) the cursor is not on one of this rowset's rows or its
                      insert row, or (3) this rowset is
                      <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateString" type="void" line="789">
                <params>
                    <param name="columnIndex" type="int"/>
                    <param name="x" type="String"/>
                </params>
                <declaration name="bool" type="boolean" line="790"/>
                <scope line="791">
                    <scope line="792">
                        <scope line="794"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="801">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;String&lt;/code&gt; object.
                  This method updates a column value in either the current row or
                  the insert row of this rowset, but it does not update the
                  database.  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnName a <code>String</code> object that must match the
                      SQL name of a column in this rowset, ignoring case                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column name does not match the
                      name of a column in this rowset, (2) the cursor is not on
                      one of this rowset's rows or its insert row, or (3) this
                      rowset is <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateString" type="void" line="820">
                <params>
                    <param name="columnName" type="String"/>
                    <param name="x" type="String"/>
                </params>
            </method>
            <javadoc line="823">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;byte&lt;/code&gt; array.
                  This method updates a column value in either the current row or
                  the insert row of this rowset, but it does not update the
                  database.  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnIndex the first column is <code>1</code>, the second
                      is <code>2</code>, and so on; must be <code>1</code> or larger
                      and equal to or less than the number of columns in this rowset                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column index is out of bounds,
                      (2) the cursor is not on one of this rowset's rows or its
                      insert row, or (3) this rowset is
                      <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateBytes" type="void" line="843">
                <params>
                    <param name="columnIndex" type="int"/>
                    <param name="x" type="byte[]"/>
                </params>
                <declaration name="bool" type="boolean" line="844"/>
                <declaration name="val" type="String" line="845"/>
                <declaration name="obj_arr" type="Byte[]" line="846"/>
                <scope line="847"/>
                <scope line="851">
                    <scope line="852">
                        <scope line="854"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="861">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;byte&lt;/code&gt; array.
                  This method updates a column value in either the current row or
                  the insert row of this rowset, but it does not update the
                  database.  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnName a <code>String</code> object that must match the
                      SQL name of a column in this rowset, ignoring case                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column name does not match the
                      name of a column in this rowset, (2) the cursor is not on
                      one of this rowset's rows or its insert row, or (3) this
                      rowset is <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateBytes" type="void" line="880">
                <params>
                    <param name="columnName" type="String"/>
                    <param name="x" type="byte[]"/>
                </params>
            </method>
            <javadoc line="883">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;Date&lt;/code&gt; object.
                  This method updates a column value in either the current row or
                  the insert row of this rowset, but it does not update the
                  database.  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnIndex the first column is <code>1</code>, the second
                      is <code>2</code>, and so on; must be <code>1</code> or larger
                      and equal to or less than the number of columns in this rowset                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column index is out of bounds,
                      (2) the cursor is not on one of this rowset's rows or its
                      insert row, (3) the type of the designated column is not
                      an SQL <code>DATE</code> or <code>TIMESTAMP</code>, or
                      (4) this rowset is <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateDate" type="void" line="904">
                <params>
                    <param name="columnIndex" type="int"/>
                    <param name="x" type="java.sql.Date"/>
                </params>
                <declaration name="bool" type="boolean" line="905"/>
                <scope line="906">
                    <scope line="907">
                        <scope line="909"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="916">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;Date&lt;/code&gt; object.
                  This method updates a column value in either the current row or
                  the insert row of this rowset, but it does not update the
                  database.  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnName a <code>String</code> object that must match the
                      SQL name of a column in this rowset, ignoring case                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column name does not match the
                      name of a column in this rowset, (2) the cursor is not on
                      one of this rowset's rows or its insert row, (3) the type
                      of the designated column is not an SQL <code>DATE</code> or
                      <code>TIMESTAMP</code>, or (4) this rowset is
                      <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateDate" type="void" line="937">
                <params>
                    <param name="columnName" type="String"/>
                    <param name="x" type="java.sql.Date"/>
                </params>
            </method>
            <javadoc line="940">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;Time&lt;/code&gt; object.
                  This method updates a column value in either the current row or
                  the insert row of this rowset, but it does not update the
                  database.  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnIndex the first column is <code>1</code>, the second
                      is <code>2</code>, and so on; must be <code>1</code> or larger
                      and equal to or less than the number of columns in this rowset                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column index is out of bounds,
                      (2) the cursor is not on one of this rowset's rows or its
                      insert row, (3) the type of the designated column is not
                      an SQL <code>TIME</code> or <code>TIMESTAMP</code>, or
                      (4) this rowset is <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateTime" type="void" line="961">
                <params>
                    <param name="columnIndex" type="int"/>
                    <param name="x" type="Time"/>
                </params>
                <declaration name="bool" type="boolean" line="962"/>
                <scope line="963">
                    <scope line="964">
                        <scope line="966"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="973">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;Time&lt;/code&gt; object.
                  This method updates a column value in either the current row or
                  the insert row of this rowset, but it does not update the
                  database.  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnName a <code>String</code> object that must match the
                      SQL name of a column in this rowset, ignoring case                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column name does not match the
                      name of a column in this rowset, (2) the cursor is not on
                      one of this rowset's rows or its insert row, (3) the type
                      of the designated column is not an SQL <code>TIME</code> or
                      <code>TIMESTAMP</code>, or (4) this rowset is
                      <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateTime" type="void" line="994">
                <params>
                    <param name="columnName" type="String"/>
                    <param name="x" type="Time"/>
                </params>
            </method>
            <javadoc line="997">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;Timestamp&lt;/code&gt; object.
                  This method updates a column value in either the current row or
                  the insert row of this rowset, but it does not update the
                  database.  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnIndex the first column is <code>1</code>, the second
                      is <code>2</code>, and so on; must be <code>1</code> or larger
                      and equal to or less than the number of columns in this rowset                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column index is out of bounds,
                      (2) the cursor is not on one of this rowset's rows or its
                      insert row, (3) the type of the designated column is not
                      an SQL <code>DATE</code>, <code>TIME</code>, or
                      <code>TIMESTAMP</code>, or (4) this rowset is
                      <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateTimestamp" type="void" line="1019">
                <params>
                    <param name="columnIndex" type="int"/>
                    <param name="x" type="Timestamp"/>
                </params>
                <declaration name="bool" type="boolean" line="1020"/>
                <scope line="1021">
                    <scope line="1022">
                        <scope line="1024"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="1031">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;Timestamp&lt;/code&gt; object.
                  This method updates a column value in either the current row or
                  the insert row of this rowset, but it does not update the
                  database.  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnName a <code>String</code> object that must match the
                      SQL name of a column in this rowset, ignoring case                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if the given column index is out of bounds or
                      the cursor is not on one of this rowset's rows or its
                      insert row                    
                </throws>
                <throws>
                    SQLException if (1) the given column name does not match the
                      name of a column in this rowset, (2) the cursor is not on
                      one of this rowset's rows or its insert row, (3) the type
                      of the designated column is not an SQL <code>DATE</code>,
                      <code>TIME</code>, or <code>TIMESTAMP</code>, or (4) this
                      rowset is <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateTimestamp" type="void" line="1055">
                <params>
                    <param name="columnName" type="String"/>
                    <param name="x" type="Timestamp"/>
                </params>
            </method>
            <javadoc line="1058">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  ASCII stream value.
                  &lt;P&gt;
                  This method updates a column value in either the current row or
                  the insert row of this rowset, but it does not update the
                  database.  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnIndex the first column is <code>1</code>, the second
                      is <code>2</code>, and so on; must be <code>1</code> or larger
                      and equal to or less than the number of columns in this rowset                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <param>
                    length the number of one-byte ASCII characters in the stream                    
                </param>
                <throws>
                    SQLException if this method is invoked                    
                </throws>
            </javadoc>
            <method name="updateAsciiStream" type="void" line="1077">
                <params>
                    <param name="columnIndex" type="int"/>
                    <param name="x" type="java.io.InputStream"/>
                    <param name="length" type="int"/>
                </params>
                <declaration name="bool" type="boolean" line="1078"/>
                <scope line="1079">
                    <scope line="1080">
                        <scope line="1082"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="1089">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  ASCII stream value.
                  &lt;P&gt;
                  This method updates a column value in either the current row or
                  the insert row of this rowset, but it does not update the
                  database.  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnName a <code>String</code> object that must match the
                      SQL name of a column in this rowset, ignoring case                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <param>
                    length the number of one-byte ASCII characters in the stream                    
                </param>
            </javadoc>
            <method name="updateAsciiStream" type="void" line="1106">
                <params>
                    <param name="columnName" type="String"/>
                    <param name="x" type="java.io.InputStream"/>
                    <param name="length" type="int"/>
                </params>
            </method>
            <javadoc line="1109">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;java.io.Reader&lt;/code&gt; object.
                  &lt;P&gt;
                  This method updates a column value in either the current row or
                  the insert row of this rowset, but it does not update the
                  database.  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnIndex the first column is <code>1</code>, the second
                      is <code>2</code>, and so on; must be <code>1</code> or larger
                      and equal to or less than the number of columns in this rowset                    
                </param>
                <param>
                    x the new column value; must be a <code>java.io.Reader</code>
                      containing <code>BINARY</code>, <code>VARBINARY</code>,
                      <code>LONGVARBINARY</code>, <code>CHAR</code>, <code>VARCHAR</code>,
                      or <code>LONGVARCHAR</code> data                    
                </param>
                <param>
                    length the length of the stream in characters                    
                </param>
                <throws>
                    SQLException if (1) the given column index is out of bounds,
                      (2) the cursor is not on one of this rowset's rows or its
                      insert row, (3) the data in the stream is not a binary or
                      character type, or (4) this rowset is
                      <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateCharacterStream" type="void" line="1135">
                <params>
                    <param name="columnIndex" type="int"/>
                    <param name="x" type="java.io.Reader"/>
                    <param name="length" type="int"/>
                </params>
                <declaration name="bool" type="boolean" line="1136"/>
                <scope line="1137">
                    <scope line="1138">
                        <scope line="1140"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="1147">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;java.io.Reader&lt;/code&gt; object.
                  &lt;P&gt;
                  This method updates a column value in either the current row or
                  the insert row of this rowset, but it does not update the
                  database.  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnName a <code>String</code> object that must match the
                      SQL name of a column in this rowset, ignoring case                    
                </param>
                <param>
                    reader the new column value; must be a
                      <code>java.io.Reader</code> containing <code>BINARY</code>,
                      <code>VARBINARY</code>, <code>LONGVARBINARY</code>, <code>CHAR</code>,
                      <code>VARCHAR</code>, or <code>LONGVARCHAR</code> data                    
                </param>
                <param>
                    length the length of the stream in characters                    
                </param>
                <throws>
                    SQLException if (1) the given column name does not match the
                      name of a column in this rowset, (2) the cursor is not on
                      one of this rowset's rows or its insert row, (3) the data
                      in the stream is not a binary or character type, or (4) this
                      rowset is <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateCharacterStream" type="void" line="1172">
                <params>
                    <param name="columnName" type="String"/>
                    <param name="reader" type="java.io.Reader"/>
                    <param name="length" type="int"/>
                </params>
            </method>
            <javadoc line="1175">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;java.io.InputStream&lt;/code&gt; object.
                  &lt;P&gt;
                  This method updates a column value in either the current row or
                  the insert row of this rowset, but it does not update the
                  database.  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnIndex the first column is <code>1</code>, the second
                      is <code>2</code>, and so on; must be <code>1</code> or larger
                      and equal to or less than the number of columns in this rowset                    
                </param>
                <param>
                    x the new column value; must be a <code>java.io.InputStream</code>
                      containing <code>BINARY</code>, <code>VARBINARY</code>, or
                      <code>LONGVARBINARY</code> data                    
                </param>
                <param>
                    length the length of the stream in bytes                    
                </param>
                <throws>
                    SQLException if (1) the given column index is out of bounds,
                      (2) the cursor is not on one of this rowset's rows or its
                      insert row, (3) the data in the stream is not binary, or
                      (4) this rowset is <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateBinaryStream" type="void" line="1199">
                <params>
                    <param name="columnIndex" type="int"/>
                    <param name="x" type="java.io.InputStream"/>
                    <param name="length" type="int"/>
                </params>
                <declaration name="bool" type="boolean" line="1200"/>
                <scope line="1201">
                    <scope line="1202">
                        <scope line="1204"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="1211">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;java.io.InputStream&lt;/code&gt; object.
                  &lt;P&gt;
                  This method updates a column value in either the current row or
                  the insert row of this rowset, but it does not update the
                  database.  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnName a <code>String</code> object that must match the
                      SQL name of a column in this rowset, ignoring case                    
                </param>
                <param>
                    x the new column value; must be a <code>java.io.InputStream</code>
                      containing <code>BINARY</code>, <code>VARBINARY</code>, or
                      <code>LONGVARBINARY</code> data                    
                </param>
                <param>
                    length the length of the stream in bytes                    
                </param>
                <throws>
                    SQLException if (1) the given column name does not match the
                      name of a column in this rowset, (2) the cursor is not on
                      one of this rowset's rows or its insert row, (3) the data
                      in the stream is not binary, or (4) this rowset is
                      <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateBinaryStream" type="void" line="1235">
                <params>
                    <param name="columnName" type="String"/>
                    <param name="x" type="java.io.InputStream"/>
                    <param name="length" type="int"/>
                </params>
            </method>
            <javadoc line="1238">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;Object&lt;/code&gt; value.
                  &lt;P&gt;
                  This method updates a column value in either the current row or
                  the insert row of this rowset, but it does not update the
                  database.  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnIndex the first column is <code>1</code>, the second
                      is <code>2</code>, and so on; must be <code>1</code> or larger
                      and equal to or less than the number of columns in this rowset                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column index is out of bounds,
                      (2) the cursor is not on one of this rowset's rows or its
                      insert row, or (3) this rowset is
                      <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateObject" type="void" line="1259">
                <params>
                    <param name="columnIndex" type="int"/>
                    <param name="x" type="Object"/>
                </params>
                <declaration name="bool" type="boolean" line="1260"/>
                <scope line="1261">
                    <scope line="1262">
                        <scope line="1264"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="1271">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;Object&lt;/code&gt; value.
                  &lt;P&gt;
                  This method updates a column value in either the current row or
                  the insert row of this rowset, but it does not update the
                  database.  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnName a <code>String</code> object that must match the
                      SQL name of a column in this rowset, ignoring case                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <throws>
                    SQLException if (1) the given column name does not match the
                      name of a column in this rowset, (2) the cursor is not on
                      one of this rowset's rows or its insert row, or (3) this
                      rowset is <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateObject" type="void" line="1291">
                <params>
                    <param name="columnName" type="String"/>
                    <param name="x" type="Object"/>
                </params>
            </method>
            <javadoc line="1294">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;Object&lt;/code&gt; value.  The &lt;code&gt;scale&lt;/code&gt; parameter indicates
                  the number of digits to the right of the decimal point and is ignored
                  if the new column value is not a type that will be mapped to an SQL
                  &lt;code&gt;DECIMAL&lt;/code&gt; or &lt;code&gt;NUMERIC&lt;/code&gt; value.
                  &lt;P&gt;
                  This method updates a column value in either the current row or
                  the insert row of this rowset, but it does not update the
                  database.  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnIndex the first column is <code>1</code>, the second
                      is <code>2</code>, and so on; must be <code>1</code> or larger
                      and equal to or less than the number of columns in this rowset                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <param>
                    scale the number of digits to the right of the decimal point (for
                      <code>DECIMAL</code> and <code>NUMERIC</code> types only)                    
                </param>
                <throws>
                    SQLException if (1) the given column index is out of bounds,
                      (2) the cursor is not on one of this rowset's rows or its
                      insert row, or (3) this rowset is
                      <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateObject" type="void" line="1320">
                <params>
                    <param name="columnIndex" type="int"/>
                    <param name="x" type="Object"/>
                    <param name="scale" type="int"/>
                </params>
                <declaration name="bool" type="boolean" line="1321"/>
                <scope line="1322">
                    <scope line="1323">
                        <scope line="1325"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="1332">
                Sets the designated column in either the current row or the insert
                  row of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object with the given
                  &lt;code&gt;Object&lt;/code&gt; value.  The &lt;code&gt;scale&lt;/code&gt; parameter
                  indicates the number of digits to the right of the decimal point
                  and is ignored if the new column value is not a type that will be
                  mapped to an SQL &lt;code&gt;DECIMAL&lt;/code&gt; or &lt;code&gt;NUMERIC&lt;/code&gt; value.
                  &lt;P&gt;
                  This method updates a column value in either the current row or
                  the insert row of this rowset, but it does not update the
                  database.  If the cursor is on a row in the rowset, the
                  method {@link #updateRow} must be called to update the database.
                  If the cursor is on the insert row, the method {@link #insertRow}must be called, which will insert the new row into both this rowset
                  and the database. Both of these methods must be called before the
                  cursor moves to another row.                
                <param>
                    columnName a <code>String</code> object that must match the
                      SQL name of a column in this rowset, ignoring case                    
                </param>
                <param>
                    x the new column value                    
                </param>
                <param>
                    scale the number of digits to the right of the decimal point (for
                      <code>DECIMAL</code> and <code>NUMERIC</code> types only)                    
                </param>
                <throws>
                    SQLException if (1) the given column name does not match the
                      name of a column in this rowset, (2) the cursor is not on
                      one of this rowset's rows or its insert row, or (3) this
                      rowset is <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="updateObject" type="void" line="1357">
                <params>
                    <param name="columnName" type="String"/>
                    <param name="x" type="Object"/>
                    <param name="scale" type="int"/>
                </params>
            </method>
            <javadoc line="1360">
                Inserts the contents of this &lt;code&gt;CachedRowSetImpl&lt;/code&gt; object&apos;s insert
                  row into this rowset immediately following the current row.
                  If the current row is the
                  position after the last row or before the first row, the new row will
                  be inserted at the end of the rowset.  This method also notifies
                  listeners registered with this rowset that the row has changed.
                  &lt;P&gt;
                  The cursor must be on the insert row when this method is called.                
                <throws>
                    SQLException if (1) the cursor is not on the insert row,
                      (2) one or more of the non-nullable columns in the insert
                      row has not been given a value, or (3) this rowset is
                      <code>ResultSet.CONCUR_READ_ONLY</code>                    
                </throws>
            </javadoc>
            <method name="insertRow" type="void" line="1374"/>
            <javadoc line="1378">
                This method re populates the resBundle
                  during the deserialization process                
            </javadoc>
            <method name="readObject" type="void" line="1382">
                <params>
                    <param name="ois" type="ObjectInputStream"/>
                </params>
                <scope line="1384"/>
                <scope line="1387"/>
            </method>
            <declaration name="serialVersionUID" type="long" line="1391"/>
        </class>
    </source>