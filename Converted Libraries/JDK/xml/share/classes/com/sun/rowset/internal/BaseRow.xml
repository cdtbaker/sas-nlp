<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.rowset.internal">
        <import package="java.sql"/>
        <import package="java.io"/>
        <class name="BaseRow" line="31">
            <implements interface="Serializable"/>
            <implements interface="Cloneable"/>
            <javadoc line="31">
                The abstract base class from which the classes &lt;code&gt;Row&lt;/code&gt;
                  The class &lt;code&gt;BaseRow&lt;/code&gt; stores
                  a row&apos;s original values as an array of &lt;code&gt;Object&lt;/code&gt;
                  values, which can be retrieved with the method &lt;code&gt;getOrigRow&lt;/code&gt;.
                  This class also provides methods for getting and setting individual
                  values in the row.
                  &lt;P&gt;
                  A row&apos;s original values are the values it contained before it was last
                  modified.  For example, when the &lt;code&gt;CachedRowSet&lt;/code&gt;method
                  &lt;code&gt;acceptChanges&lt;/code&gt; is called, it will reset a row&apos;s original
                  values to be the row&apos;s current values.  Then, when the row is modified,
                  the values that were previously the current values will become the row&apos;s
                  original values (the values the row had immediately before it was modified).
                  If a row has not been modified, its original values are its initial values.
                  &lt;P&gt;
                  Subclasses of this class contain more specific details, such as
                  the conditions under which an exception is thrown or the bounds for
                  index parameters.                
            </javadoc>
            <declaration name="origVals" type="Object[]" line="53"/>
            <javadoc line="53">
                The array containing the original values for this &lt;code&gt;BaseRow&lt;/code&gt;
                  object.                
                <serial>
                                        
                </serial>
            </javadoc>
            <javadoc line="60">
                Retrieves the values that this row contained immediately
                  prior to its last modification.                
                <return>
                    an array of <code>Object</code> values containing this row's
                      original values                    
                </return>
            </javadoc>
            <method name="getOrigRow" type="Object[]" line="67"/>
            <method name="getColumnObject" type="Object" line="71"/>
            <javadoc line="71">
                Retrieves the array element at the given index, which is
                  the original value of column number &lt;i&gt;idx&lt;/i&gt; in this row.                
                <param>
                    idx the index of the element to return                    
                </param>
                <return>
                    the <code>Object</code> value at the given index into this
                      row's array of original values                    
                </return>
                <throws>
                    <code>SQLException</code> if there is an error                    
                </throws>
            </javadoc>
            <method name="setColumnObject" type="void" line="82"/>
            <javadoc line="82">
                Sets the element at the given index into this row&apos;s array of
                  original values to the given value.  Implementations of the classes
                  &lt;code&gt;Row&lt;/code&gt; and determine what happens
                  when the cursor is on the insert row and when it is on any other row.                
                <param>
                    idx the index of the element to be set                    
                </param>
                <param>
                    obj the <code>Object</code> to which the element at index
                      <code>idx</code> to be set                    
                </param>
                <throws>
                    <code>SQLException</code> if there is an error                    
                </throws>
            </javadoc>
        </class>
    </source>