<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jdi">
        <import package="java.util.List"/>
        <interface name="ThreadGroupReference">
            <implements interface="ObjectReference"/>
            <javadoc line="30">
                A thread group object from the target VM.
                  A ThreadGroupReference is an {@link ObjectReference} with additional
                  access to threadgroup-specific information from the target VM.                
                <author>
                    Robert Field                    
                </author>
                <author>
                    Gordon Hirsch                    
                </author>
                <author>
                    James McIlree                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="name" type="String" line="42"/>
            <javadoc line="42">
                Returns the name of this thread group.                
                <return>
                    the string containing the thread group name.                    
                </return>
            </javadoc>
            <method name="parent" type="ThreadGroupReference" line="49"/>
            <javadoc line="49">
                Returns the parent of this thread group.                
                <return>
                    a {@link ThreadGroupReference} mirroring the parent of this
                      thread group in the target VM, or null if this is a top-level
                      thread group.                    
                </return>
            </javadoc>
            <method name="suspend" type="void" line="58"/>
            <javadoc line="58">
                Suspends all threads in this thread group. Each thread
                  in this group and in all of its subgroups will be
                  suspended as described in {@link ThreadReference#suspend}.
                  This is not guaranteed to be an atomic
                  operation; if the target VM is not interrupted at the time
                  this method is
                  called, it is possible that new threads will be created
                  between the time that threads are enumerated and all of them
                  have been suspended.                
                <throws>
                    VMCannotBeModifiedException if the VirtualMachine is read-only - see {@link VirtualMachine#canBeModified()}.                    
                </throws>
            </javadoc>
            <method name="resume" type="void" line="72"/>
            <javadoc line="72">
                Resumes all threads in this thread group. Each thread
                  in this group and in all of its subgroups will be
                  resumed as described in {@link ThreadReference#resume}.                
                <throws>
                    VMCannotBeModifiedException if the VirtualMachine is read-only - see {@link VirtualMachine#canBeModified()}.                    
                </throws>
            </javadoc>
            <method name="threads" type="List<ThreadReference>" line="80"/>
            <javadoc line="80">
                Returns a List containing a {@link ThreadReference} for each live thread
                  in this thread group. Only the live threads in this immediate thread group
                  (and not its subgroups) are returned.  A thread is alive if it
                  has been started and has not yet been stopped.                
                <return>
                    a List of {@link ThreadReference} objects mirroring the
                      live threads from this thread group in the target VM.                    
                </return>
            </javadoc>
            <method name="threadGroups" type="List<ThreadGroupReference>" line="91"/>
            <javadoc line="91">
                Returns a List containing each active {@link ThreadGroupReference} in this
                  thread group. Only the active thread groups in this immediate thread group
                  (and not its subgroups) are returned.
                  See &lt;a href=&quot;{@docRoot}/../../../../api/java/lang/ThreadGroup.html&quot;&gt;java.lang.ThreadGroup&lt;/a&gt;
                  for information about &apos;active&apos; ThreadGroups.                
                <return>
                    a List of {@link ThreadGroupReference} objects mirroring the
                      active thread groups from this thread group in the target VM.                    
                </return>
            </javadoc>
        </interface>
    </source>