<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jdi.event">
        <import package="com.sun.jdi"/>
        <import package="com.sun.jdi.request.EventRequest"/>
        <interface name="Event">
            <implements interface="Mirror"/>
            <javadoc line="4">
                An occurrence in a target VM that is of interest to a debugger. Event is
                  the common superinterface for all events (examples include{@link BreakpointEvent}, {@link ExceptionEvent},{@link ClassPrepareEvent}).
                  When an event occurs, an instance of Event as a component of
                  an {@link EventSet} is enqueued in the{@link VirtualMachine}&apos;s {@link EventQueue}.                
                <see>
                    EventSet                    
                </see>
                <see>
                    EventQueue                    
                </see>
                <author>
                    Robert Field                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="request" type="EventRequest" line="15"/>
            <javadoc line="15">
                @return The {@link EventRequest} that requested this event.
                  Some events (eg. {@link VMDeathEvent}) may not have
                  a cooresponding request and thus will return null.                
            </javadoc>
        </interface>
    </source>