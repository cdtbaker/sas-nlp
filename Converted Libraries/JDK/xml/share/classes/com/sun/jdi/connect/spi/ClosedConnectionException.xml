<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jdi.connect.spi">
        <class name="ClosedConnectionException" line="2">
            <extends class="java.io.IOException"/>
            <javadoc line="2">
                This exception may be thrown as a result of an asynchronous
                  close of a {@link Connection} while an I/O operation is
                  in progress.
                  &lt;p&gt; When a thread is blocked in {@link Connection#readPacketreadPacket} waiting for packet from a target VM the{@link Connection} may be closed asynchronous by another
                  thread invokving the {@link Connection#close close} method.
                  When this arises the thread in readPacket will throw this
                  exception. Similiarly when a thread is blocked in{@link Connection#writePacket} the Connection may be closed.
                  When this occurs the thread in writePacket will throw
                  this exception.                
                <see>
                    Connection#readPacket                    
                </see>
                <see>
                    Connection#writePacket                    
                </see>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <javadoc line="17">
                Constructs a &lt;tt&gt;ClosedConnectionException&lt;/tt&gt; with no detail
                  message.                
            </javadoc>
            <method name="ClosedConnectionException" type="constructor" line="21"/>
            <javadoc line="23">
                Constructs a &lt;tt&gt;ClosedConnectionException&lt;/tt&gt; with the
                  specified detail message.                
                <param>
                    message the detail message pertaining to this exception.                    
                </param>
            </javadoc>
            <method name="ClosedConnectionException" type="constructor" line="28">
                <params>
                    <param name="message" type="String"/>
                </params>
            </method>
        </class>
    </source>