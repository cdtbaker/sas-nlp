<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jdi.request">
        <import package="com.sun.jdi"/>
        <interface name="ClassPrepareRequest">
            <implements interface="EventRequest"/>
            <javadoc line="30">
                Request for notification when a class is prepared in the target VM.
                  When an enabled ClassPrepareRequest is satisfied, an{@link com.sun.jdi.event.EventSet event set} containing a{@link com.sun.jdi.event.ClassPrepareEvent ClassPrepareEvent}will be placed on the{@link com.sun.jdi.event.EventQueue EventQueue}.
                  The collection of existing ClassPrepareRequests is
                  managed by the {@link EventRequestManager}&lt;p&gt;
                  Class preparation is defined in the Java Virtual Machine
                  Specification.                
                <see>
                    com.sun.jdi.event.ClassPrepareEvent                    
                </see>
                <see>
                    com.sun.jdi.event.EventQueue                    
                </see>
                <see>
                    EventRequestManager                    
                </see>
                <author>
                    Robert Field                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="addClassFilter" type="void" line="52"/>
            <javadoc line="52">
                Restricts the events generated by this request to be the
                  preparation of the given reference type and any subtypes.
                  An event will be generated for any prepared reference type that can
                  be safely cast to the given reference type.                
                <param>
                    refType the reference type to filter on.                    
                </param>
                <throws>
                    InvalidRequestStateException if this request is currently
                      enabled or has been deleted.
                      Filters may be added only to disabled requests.                    
                </throws>
            </javadoc>
            <method name="addClassFilter" type="void" line="65"/>
            <javadoc line="65">
                Restricts the events generated by this request to the
                  preparation of reference types whose name matches this restricted
                  regular expression. Regular expressions are limited
                  to exact matches and patterns that begin with &apos;&apos; or end with &apos;&apos;;
                  for example, &quot;.Foo&quot; or &quot;java.&quot;.                
                <param>
                    classPattern the pattern String to filter for.                    
                </param>
                <throws>
                    InvalidRequestStateException if this request is currently
                      enabled or has been deleted.
                      Filters may be added only to disabled requests.                    
                </throws>
            </javadoc>
            <method name="addClassExclusionFilter" type="void" line="79"/>
            <javadoc line="79">
                Restricts the events generated by this request to the
                  preparation of reference types whose name does &lt;b&gt;not&lt;/b&gt; match
                  this restricted regular expression. Regular expressions are limited
                  to exact matches and patterns that begin with &apos;&apos; or end with &apos;&apos;;
                  for example, &quot;.Foo&quot; or &quot;java.&quot;.                
                <param>
                    classPattern the pattern String to filter against.                    
                </param>
                <throws>
                    InvalidRequestStateException if this request is currently
                      enabled or has been deleted.
                      Filters may be added only to disabled requests.                    
                </throws>
            </javadoc>
            <method name="addSourceNameFilter" type="void" line="93"/>
            <javadoc line="93">
                Restricts the events generated by this request to the
                  preparation of reference types for which the restricted regular
                  expression &apos;sourceNamePattern&apos; matches one of the &apos;sourceNames&apos; for
                  the reference type being prepared.
                  That is, if refType is the ReferenceType being prepared,
                  then there exists at least one stratum, call it &apos;someStratum&apos;
                  on the list returned by
                  refType.availableStrata();
                  such that a name on the list returned by
                  refType.sourceNames(someStratam)
                  matches &apos;sourceNamePattern&apos;.
                  Regular expressions are limited
                  to exact matches and patterns that begin with &apos;&apos; or end with &apos;&apos;;
                  for example, &quot;.Foo&quot; or &quot;java.&quot;.
                  &lt;P&gt;
                  Not all targets support this operation.
                  Use {@link VirtualMachine#canUseSourceNameFilters()}to determine if the operation is supported.                
                <since>
                    1.6                    
                </since>
                <param>
                    sourceNamePattern the pattern string to filter for.                    
                </param>
                <throws>
                    java.lang.UnsupportedOperationException if
                      the target virtual machine does not support this
                      operation.                    
                </throws>
                <throws>
                    InvalidRequestStateException if this request is currently
                      enabled or has been deleted.
                      Filters may be added only to disabled requests.                    
                </throws>
            </javadoc>
        </interface>
    </source>