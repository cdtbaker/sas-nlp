<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jdi.request">
        <import package="com.sun.jdi"/>
        <interface name="StepRequest">
            <implements interface="EventRequest"/>
            <javadoc line="30">
                Request for notification when a step occurs in the target VM.
                  When an enabled StepRequest is satisfied, an{@link com.sun.jdi.event.EventSet event set} containing a{@link com.sun.jdi.event.StepEvent StepEvent} will be placed on the{@link com.sun.jdi.event.EventQueue EventQueue}.
                  The collection of existing StepRequests is
                  managed by the {@link EventRequestManager}                
                <see>
                    com.sun.jdi.event.StepEvent                    
                </see>
                <see>
                    com.sun.jdi.event.EventQueue                    
                </see>
                <see>
                    EventRequestManager                    
                </see>
                <author>
                    Robert Field                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <declaration name="STEP_INTO" type="int" line="48"/>
            <javadoc line="48">
                Step into any newly pushed frames                
            </javadoc>
            <declaration name="STEP_OVER" type="int" line="50"/>
            <javadoc line="50">
                Step over any newly pushed frames                
            </javadoc>
            <declaration name="STEP_OUT" type="int" line="52"/>
            <javadoc line="52">
                Step out of the current frame                
            </javadoc>
            <declaration name="STEP_MIN" type="int" line="55"/>
            <javadoc line="55">
                Step to the next available location                
            </javadoc>
            <declaration name="STEP_LINE" type="int" line="57"/>
            <javadoc line="57">
                Step to the next location on a different line                
            </javadoc>
            <method name="thread" type="ThreadReference" line="60"/>
            <javadoc line="60">
                @return the thread on which the step event is being requested.                
            </javadoc>
            <method name="size" type="int" line="65"/>
            <javadoc line="65">
                @return the step size                
            </javadoc>
            <method name="depth" type="int" line="70"/>
            <javadoc line="70">
                @return the step depth                
            </javadoc>
            <method name="addClassFilter" type="void" line="75"/>
            <javadoc line="75">
                Restricts the events generated by this request to those whose
                  location is in the given reference type or any of its subtypes.
                  An event will be generated for any location in a reference type
                  that can be safely cast to the given reference type.                
                <param>
                    refType the reference type to filter on.                    
                </param>
                <throws>
                    InvalidRequestStateException if this request is currently
                      enabled or has been deleted.
                      Filters may be added only to disabled requests.                    
                </throws>
            </javadoc>
            <method name="addClassFilter" type="void" line="88"/>
            <javadoc line="88">
                Restricts the events generated by this request to those
                  whose location is in a class whose name matches a restricted
                  regular expression. Regular expressions are limited
                  to exact matches and patterns that begin with &apos;&apos; or end with &apos;&apos;;
                  for example, &quot;.Foo&quot; or &quot;java.&quot;.                
                <param>
                    classPattern the pattern String to filter for.                    
                </param>
                <throws>
                    InvalidRequestStateException if this request is currently
                      enabled or has been deleted.
                      Filters may be added only to disabled requests.                    
                </throws>
            </javadoc>
            <method name="addClassExclusionFilter" type="void" line="102"/>
            <javadoc line="102">
                Restricts the events generated by this request to those
                  whose location is in a class whose name does &lt;b&gt;not&lt;/b&gt; match a
                  restricted regular expression. Regular expressions are limited
                  to exact matches and patterns that begin with &apos;&apos; or end with &apos;&apos;;
                  for example, &quot;.Foo&quot; or &quot;java.&quot;.                
                <param>
                    classPattern the pattern String to filter against.                    
                </param>
                <throws>
                    InvalidRequestStateException if this request is currently
                      enabled or has been deleted.
                      Filters may be added only to disabled requests.                    
                </throws>
            </javadoc>
            <method name="addInstanceFilter" type="void" line="116"/>
            <javadoc line="116">
                Restricts the events generated by this request to those in
                  which the currently executing instance (&quot;this&quot;) is the object
                  specified.
                  &lt;P&gt;
                  Not all targets support this operation.
                  Use {@link VirtualMachine#canUseInstanceFilters()}to determine if the operation is supported.                
                <since>
                    1.4                    
                </since>
                <param>
                    instance the object which must be the current instance
                      in order to pass this filter.                    
                </param>
                <throws>
                    java.lang.UnsupportedOperationException if
                      the target virtual machine does not support this
                      operation.                    
                </throws>
                <throws>
                    InvalidRequestStateException if this request is currently
                      enabled or has been deleted.
                      Filters may be added only to disabled requests.                    
                </throws>
            </javadoc>
        </interface>
    </source>