<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jdi.request">
        <import package="com.sun.jdi"/>
        <interface name="ExceptionRequest">
            <implements interface="EventRequest"/>
            <javadoc line="30">
                Request for notification when an exception occurs in the target VM.
                  When an enabled ExceptionRequest is satisfied, an{@link com.sun.jdi.event.EventSet event set} containing an{@link com.sun.jdi.event.ExceptionEvent ExceptionEvent} will be placed
                  on the {@link com.sun.jdi.event.EventQueue EventQueue}.
                  The collection of existing ExceptionRequests is
                  managed by the {@link EventRequestManager}                
                <see>
                    com.sun.jdi.event.ExceptionEvent                    
                </see>
                <see>
                    com.sun.jdi.event.EventQueue                    
                </see>
                <see>
                    EventRequestManager                    
                </see>
                <author>
                    Robert Field                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="exception" type="ReferenceType" line="48"/>
            <javadoc line="48">
                Returns exception type for which exception events are requested.                
                <return>
                    The exception (and its subclasses) requested
                      with {@link EventRequestManager#createExceptionRequest}, or
                      null if, as by default, all exceptions are requested.                    
                </return>
            </javadoc>
            <method name="notifyCaught" type="boolean" line="57"/>
            <javadoc line="57">
                Returns whether caught exceptions of the requested type
                  will generate events when they are thrown.
                  &lt;p&gt;
                  Note that at the time an exception is thrown, it is not always
                  possible to determine whether it is truly caught. See{@link com.sun.jdi.event.ExceptionEvent#catchLocation} for
                  details.                
                <return>
                    boolean true if caught exceptions will be reported, false
                      otherwise.                    
                </return>
            </javadoc>
            <method name="notifyUncaught" type="boolean" line="71"/>
            <javadoc line="71">
                Returns whether uncaught exceptions of the requested type
                  will generate events when they are thrown.
                  &lt;p&gt;
                  Note that at the time an exception is thrown, it is not always
                  possible to determine whether it is truly uncaught. See{@link com.sun.jdi.event.ExceptionEvent#catchLocation} for
                  details.                
                <return>
                    boolean true if caught exceptions will be reported, false
                      otherwise.                    
                </return>
            </javadoc>
            <method name="addThreadFilter" type="void" line="85"/>
            <javadoc line="85">
                Restricts the events generated by this request to those in
                  the given thread.                
                <param>
                    thread the thread to filter on.                    
                </param>
                <throws>
                    InvalidRequestStateException if this request is currently
                      enabled or has been deleted.
                      Filters may be added only to disabled requests.                    
                </throws>
            </javadoc>
            <method name="addClassFilter" type="void" line="95"/>
            <javadoc line="95">
                Restricts the events generated by this request to those whose
                  location is in the given reference type or any of its subtypes.
                  An event will be generated for any location in a reference type
                  that can be safely cast to the given reference type.                
                <param>
                    refType the reference type to filter on.                    
                </param>
                <throws>
                    InvalidRequestStateException if this request is currently
                      enabled or has been deleted.
                      Filters may be added only to disabled requests.                    
                </throws>
            </javadoc>
            <method name="addClassFilter" type="void" line="108"/>
            <javadoc line="108">
                Restricts the events generated by this request to those
                  whose location is in a class whose name matches a restricted
                  regular expression. Regular expressions are limited
                  to exact matches and patterns that begin with &apos;&apos; or end with &apos;&apos;;
                  for example, &quot;.Foo&quot; or &quot;java.&quot;.                
                <param>
                    classPattern the pattern String to filter for.                    
                </param>
                <throws>
                    InvalidRequestStateException if this request is currently
                      enabled or has been deleted.
                      Filters may be added only to disabled requests.                    
                </throws>
            </javadoc>
            <method name="addClassExclusionFilter" type="void" line="122"/>
            <javadoc line="122">
                Restricts the events generated by this request to those
                  whose location is in a class whose name does &lt;b&gt;not&lt;/b&gt; match a
                  restricted regular expression. Regular expressions are limited
                  to exact matches and patterns that begin with &apos;&apos; or end with &apos;&apos;;
                  for example, &quot;.Foo&quot; or &quot;java.&quot;.                
                <param>
                    classPattern the pattern String to filter against.                    
                </param>
                <throws>
                    InvalidRequestStateException if this request is currently
                      enabled or has been deleted.
                      Filters may be added only to disabled requests.                    
                </throws>
            </javadoc>
            <method name="addInstanceFilter" type="void" line="136"/>
            <javadoc line="136">
                Restricts the events generated by this request to those in
                  which the currently executing instance (&quot;this&quot;) is the object
                  specified.
                  &lt;P&gt;
                  Not all targets support this operation.
                  Use {@link VirtualMachine#canUseInstanceFilters()}to determine if the operation is supported.                
                <since>
                    1.4                    
                </since>
                <param>
                    instance the object which must be the current instance
                      in order to pass this filter.                    
                </param>
                <throws>
                    java.lang.UnsupportedOperationException if
                      the target virtual machine does not support this
                      operation.                    
                </throws>
                <throws>
                    InvalidRequestStateException if this request is currently
                      enabled or has been deleted.
                      Filters may be added only to disabled requests.                    
                </throws>
            </javadoc>
        </interface>
    </source>