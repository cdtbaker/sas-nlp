<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jdi.request">
        <import package="com.sun.jdi"/>
        <interface name="MonitorWaitedRequest">
            <implements interface="EventRequest"/>
            <javadoc line="30">
                Request for notification when a thread in the target VM has finished waiting on
                  a monitor object. That is, a thread is leaving Object.wait(). &quot;
                  When an enabled MonitorWaitedRequest is satisfied, an{@link com.sun.jdi.event.EventSet event set} containing a{@link com.sun.jdi.event.MonitorWaitedEvent MonitorWaitedEvent}will be placed on the{@link com.sun.jdi.event.EventQueue EventQueue}.
                  The collection of existing MonitorWaitedEvents is
                  managed by the {@link EventRequestManager}                
                <see>
                    com.sun.jdi.event.MonitorWaitedEvent                    
                </see>
                <see>
                    com.sun.jdi.event.EventQueue                    
                </see>
                <see>
                    EventRequestManager                    
                </see>
                <author>
                    Swamy Venkataramanappa                    
                </author>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="addThreadFilter" type="void" line="50"/>
            <javadoc line="50">
                Restricts the events generated by this request to those in
                  the given thread.                
                <param>
                    thread the thread to filter on.                    
                </param>
                <throws>
                    InvalidRequestStateException if this request is currently
                      enabled or has been deleted.
                      Filters may be added only to disabled requests.                    
                </throws>
            </javadoc>
            <method name="addClassFilter" type="void" line="60"/>
            <javadoc line="60">
                Restricts the events generated by this request to those whose
                  monitor object is of the given reference type or any of
                  its subtypes.                
                <param>
                    refType the reference type to filter on.                    
                </param>
                <throws>
                    InvalidRequestStateException if this request is currently
                      enabled or has been deleted.
                      Filters may be added only to disabled requests.                    
                </throws>
            </javadoc>
            <method name="addClassFilter" type="void" line="72"/>
            <javadoc line="72">
                Restricts the events generated by this request to those
                  in which the name of the class of the monitor object matches this restricted
                  regular expression. Regular expressions are limited
                  to exact matches and patterns that begin with &apos;&apos; or end with &apos;&apos;;
                  for example, &quot;.Foo&quot; or &quot;java.&quot;.                
                <param>
                    classPattern the pattern String to filter for.                    
                </param>
                <throws>
                    InvalidRequestStateException if this request is currently
                      enabled or has been deleted.
                      Filters may be added only to disabled requests.                    
                </throws>
            </javadoc>
            <method name="addClassExclusionFilter" type="void" line="86"/>
            <javadoc line="86">
                Restricts the events generated by this request to those
                  in which the name of the class of the monitor object does &lt;b&gt;not&lt;/b&gt;match this restricted
                  regular expression, e.g.  &quot;java.&quot; or &quot;.Foo&quot;.                
                <param>
                    classPattern the pattern String to filter against.                    
                </param>
                <throws>
                    InvalidRequestStateException if this request is currently
                      enabled or has been deleted.
                      Filters may be added only to disabled requests.                    
                </throws>
            </javadoc>
            <method name="addInstanceFilter" type="void" line="97"/>
            <javadoc line="97">
                Restricts the events generated by this request to those in
                  which the currently executing instance (&quot;this&quot;) is the object
                  specified.
                  &lt;P&gt;
                  Not all targets support this operation.
                  Use {@link VirtualMachine#canUseInstanceFilters()}to determine if the operation is supported.                
                <param>
                    instance the object which must be the current instance
                      in order to pass this filter.                    
                </param>
                <throws>
                    java.lang.UnsupportedOperationException if
                      the target virtual machine does not support this
                      operation.                    
                </throws>
                <throws>
                    InvalidRequestStateException if this request is currently
                      enabled or has been deleted.
                      Filters may be added only to disabled requests.                    
                </throws>
            </javadoc>
        </interface>
    </source>