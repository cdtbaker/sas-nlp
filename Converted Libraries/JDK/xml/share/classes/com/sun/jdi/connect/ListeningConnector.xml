<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jdi.connect">
        <import package="java.util.Map"/>
        <import package="java.io.IOException"/>
        <import package="com.sun.jdi.VirtualMachine"/>
        <interface name="ListeningConnector">
            <implements interface="Connector"/>
            <javadoc line="32">
                A connector which listens for a connection initiated by a target VM.                
                <author>
                    Gordon Hirsch                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="supportsMultipleConnections" type="boolean" line="39"/>
            <javadoc line="39">
                Indicates whether this listening connector supports multiple
                  connections for a single argument map. If so, a call to{@link #startListening} may allow
                  multiple target VM to become connected.                
                <return>
                    &lt;code&gt;true&lt;/code&gt; if multiple connections are supported;
                      &lt;code&gt;false&lt;/code&gt; otherwise.                    
                </return>
            </javadoc>
            <method name="startListening" type="String" line="50"/>
            <javadoc line="50">
                Listens for one or more connections initiated by target VMs.
                  The connector uses the given argument map
                  in determining the address at which to listen or else it generates
                  an appropriate listen address. In either case, an address string
                  is returned from this method which can be used in starting target VMs
                  to identify this connector. The format of the address string
                  is connector, transport, and, possibly, platform dependent.
                  &lt;p&gt;
                  The argument map associates argument name strings to instances
                  of {@link Connector.Argument}. The default argument map for a
                  connector can be obtained through {@link Connector#defaultArguments}.
                  Argument map values can be changed, but map entries should not be
                  added or deleted.
                  &lt;p&gt;
                  This method does not return a {@link VirtualMachine}, and, normally,
                  returns before any target VM initiates
                  a connection. The connected target is obtained through{@link #accept} (using the same argument map as is passed to this
                  method).
                  &lt;p&gt;
                  If &lt;code&gt;arguments&lt;/code&gt; contains addressing information. and
                  only one conection will be accepted, the {@link #accept accept} method
                  can be called immediately without calling this method.                
                <return>
                    the address at which the connector is listening
                      for a connection.                    
                </return>
                <throws>
                    java.io.IOException when unable to start listening.
                      Specific exceptions are dependent on the Connector implementation
                      in use.                    
                </throws>
                <throws>
                    IllegalConnectorArgumentsException when one of the
                      connector arguments is invalid.                    
                </throws>
            </javadoc>
            <method name="stopListening" type="void" line="86"/>
            <javadoc line="86">
                Cancels listening for connections. The given argument map should match
                  the argument map given for a previous {@link #startListening} invocation.                
                <throws>
                    java.io.IOException when unable to stop listening.
                      Specific exceptions are dependent on the Connector implementation
                      in use.                    
                </throws>
                <throws>
                    IllegalConnectorArgumentsException when one of the
                      connector arguments is invalid.                    
                </throws>
            </javadoc>
            <method name="accept" type="VirtualMachine" line="100"/>
            <javadoc line="100">
                Waits for a target VM to attach to this connector.                
                <throws>
                    TransportTimeoutException when the Connector encapsulates
                      a transport that supports a timeout when accepting, a{@link Connector.Argument} representing a timeout has been set
                      in the argument map, and a timeout occurs whilst waiting for
                      the target VM to connect.                    
                </throws>
                <throws>
                    java.io.IOException when unable to accept.
                      Specific exceptions are dependent on the Connector implementation
                      in use.                    
                </throws>
                <throws>
                    IllegalConnectorArgumentsException when one of the
                      connector arguments is invalid.                    
                </throws>
            </javadoc>
        </interface>
    </source>