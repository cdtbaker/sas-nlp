<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jdi">
        <interface name="Mirror">
            <javadoc line="28">
                A proxy used by a debugger to examine or manipulate some entity
                  in another virtual machine. Mirror is the root of the
                  interface hierarchy for this package. Mirrors can be proxies for objects
                  in the target VM ({@link ObjectReference}), primitive values
                  (for example, {@link IntegerValue}), types (for example,{@link ReferenceType}), dynamic application state (for example,{@link StackFrame}), and even debugger-specific constructs (for example,{@link com.sun.jdi.request.BreakpointRequest}).
                  The {@link VirtualMachine} itself is also
                  considered a mirror, representing the composite state of the
                  target VM.
                  &lt;P&gt;
                  There is no guarantee that a particular entity in the target VM will map
                  to a single instance of Mirror. Implementors are free to decide
                  whether a single mirror will be used for some or all mirrors. Clients
                  of this interface should always use &lt;code&gt;equals&lt;/code&gt; to compare
                  two mirrors for equality.
                  &lt;p&gt;
                  Any method on a {@link com.sun.jdi.Mirror} that takes a &lt;code&gt;Mirror&lt;/code&gt; as an
                  parameter directly or indirectly (e.g., as a element in a &lt;code&gt;List&lt;/code&gt;) will
                  throw {@link com.sun.jdi.VMMismatchException} if the mirrors are from different
                  virtual machines.                
                <see>
                    VirtualMachine                    
                </see>
                <author>
                    Robert Field                    
                </author>
                <author>
                    Gordon Hirsch                    
                </author>
                <author>
                    James McIlree                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="virtualMachine" type="VirtualMachine" line="61"/>
            <javadoc line="61">
                Gets the VirtualMachine to which this
                  Mirror belongs. A Mirror must be associated
                  with a VirtualMachine to have any meaning.                
                <return>
                    the {@link VirtualMachine} for which this mirror is a proxy.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="70"/>
            <javadoc line="70">
                Returns a String describing this mirror                
                <return>
                    a string describing this mirror.                    
                </return>
            </javadoc>
        </interface>
    </source>