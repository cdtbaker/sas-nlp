<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jdi">
        <interface name="PrimitiveValue">
            <implements interface="Value"/>
            <javadoc line="28">
                The value assigned to a field or variable of primitive type in a
                  target VM. Each primitive values is accessed through a subinterface
                  of this interface.                
                <author>
                    Robert Field                    
                </author>
                <author>
                    Gordon Hirsch                    
                </author>
                <author>
                    James McIlree                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="booleanValue" type="boolean" line="40"/>
            <javadoc line="40">
                Converts this value to a BooleanValue and returns the result
                  as a boolean.                
                <return>
                    <code>true</code> if this value is non-zero (or
                      <code>true</code> if already a BooleanValue); false otherwise.                    
                </return>
            </javadoc>
            <method name="byteValue" type="byte" line="49"/>
            <javadoc line="49">
                Converts this value to a ByteValue and returns the result
                  as a byte. The value will be narrowed as
                  necessary, and magnitude or precision information
                  may be lost (as if the primitive had been cast to a byte).                
                <return>
                    the value, converted to byte                    
                </return>
            </javadoc>
            <method name="charValue" type="char" line="59"/>
            <javadoc line="59">
                Converts this value to a CharValue and returns the result
                  as a char. The value will be narrowed or widened as
                  necessary, and magnitude or precision information
                  may be lost (as if the primitive had been cast to a char,
                  in the narrowing case).                
                <return>
                    the value, converted to char                    
                </return>
            </javadoc>
            <method name="shortValue" type="short" line="70"/>
            <javadoc line="70">
                Converts this value to a ShortValue and returns the result
                  as a short. The value will be narrowed or widened as
                  necessary, and magnitude or precision information
                  may be lost (as if the primitive had been cast to a short,
                  in the narrowing case).                
                <return>
                    the value, converted to short                    
                </return>
            </javadoc>
            <method name="intValue" type="int" line="81"/>
            <javadoc line="81">
                Converts this value to an IntegerValue and returns the result
                  as an int. The value will be narrowed or widened as
                  necessary, and magnitude or precision information
                  may be lost (as if the primitive had been cast to an int,
                  in the narrowing case).                
                <return>
                    the value, converted to int                    
                </return>
            </javadoc>
            <method name="longValue" type="long" line="92"/>
            <javadoc line="92">
                Converts this value to a LongValue and returns the result
                  as a long. The value will be narrowed or widened as
                  necessary, and magnitude or precision information
                  may be lost (as if the primitive had been cast to a long,
                  in the narrowing case).                
                <return>
                    the value, converted to long                    
                </return>
            </javadoc>
            <method name="floatValue" type="float" line="103"/>
            <javadoc line="103">
                Converts this value to a FloatValue and returns the result
                  as a float. The value will be narrowed or widened as
                  necessary, and magnitude or precision information
                  may be lost (as if the primitive had been cast to a float,
                  in the narrowing case).                
                <return>
                    the value, converted to float                    
                </return>
            </javadoc>
            <method name="doubleValue" type="double" line="114"/>
            <javadoc line="114">
                Converts this value to a DoubleValue and returns the result
                  as a double. The value will be widened as
                  necessary, and precision information
                  may be lost.                
                <return>
                    the value, converted to double                    
                </return>
            </javadoc>
        </interface>
    </source>