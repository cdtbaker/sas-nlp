<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jdi">
        <class name="JDIPermission" line="28">
            <extends class="java.security.BasicPermission"/>
            <javadoc line="28">
                The &lt;code&gt;JDIPermission&lt;/code&gt; class represents access rights to
                  the &lt;code&gt;VirtualMachineManager&lt;/code&gt;.  This is the permission
                  which the SecurityManager will check when code that is running with
                  a SecurityManager requests access to the VirtualMachineManager, as
                  defined in the Java Debug Interface (JDI) for the Java platform.
                  &lt;P&gt;
                  A &lt;code&gt;JDIPermission&lt;/code&gt; object contains a name (also referred
                  to as a &quot;target name&quot;) but no actions list; you either have the
                  named permission or you don&apos;t.
                  &lt;P&gt;
                  The following table provides a summary description of what the
                  permission allows, and discusses the risks of granting code the
                  permission.
                  &lt;P&gt;
                  &lt;table border=1 cellpadding=5 summary=&quot;Table shows permission
                  target name, what the permission allows, and associated risks&quot;&gt;
                  &lt;tr&gt;
                  &lt;th&gt;Permission Target Name&lt;/th&gt;
                  &lt;th&gt;What the Permission Allows&lt;/th&gt;
                  &lt;th&gt;Risks of Allowing this Permission&lt;/th&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                  &lt;td&gt;virtualMachineManager&lt;/td&gt;
                  &lt;td&gt;Ability to inspect and modify the JDI objects in the
                  &lt;code&gt;VirtualMachineManager&lt;/code&gt;
                  &lt;/td&gt;
                  &lt;td&gt;This allows an attacker to control the
                  &lt;code&gt;VirtualMachineManager&lt;/code&gt; and cause the system to
                  misbehave.
                  &lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;/table&gt;
                  &lt;p&gt;
                  Programmers do not normally create JDIPermission objects directly.
                  Instead they are created by the security policy code based on reading
                  the security policy file.                
                <author>
                    Tim Bell                    
                </author>
                <since>
                    1.5                    
                </since>
                <see>
                    com.sun.jdi.Bootstrap                    
                </see>
                <see>
                    java.security.BasicPermission                    
                </see>
                <see>
                    java.security.Permission                    
                </see>
                <see>
                    java.security.Permissions                    
                </see>
                <see>
                    java.security.PermissionCollection                    
                </see>
                <see>
                    java.lang.SecurityManager                    
                </see>
            </javadoc>
            <javadoc line="83">
                The &lt;code&gt;JDIPermission&lt;/code&gt; class represents access rights to the
                  &lt;code&gt;VirtualMachineManager&lt;/code&gt;                
                <param>
                    name Permission name. Must be &quot;virtualMachineManager&quot;.                    
                </param>
                <throws>
                    IllegalArgumentException if the name argument is invalid.                    
                </throws>
            </javadoc>
            <method name="JDIPermission" type="constructor" line="89">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="91"/>
            </method>
            <javadoc line="96">
                Constructs a new JDIPermission object.                
                <param>
                    name Permission name. Must be &quot;virtualMachineManager&quot;.                    
                </param>
                <param>
                    actions Must be either null or the empty string.                    
                </param>
                <throws>
                    IllegalArgumentException if arguments are invalid.                    
                </throws>
            </javadoc>
            <method name="JDIPermission" type="constructor" line="104">
                <params>
                    <param name="name" type="String"/>
                    <param name="actions" type="String"/>
                </params>
                <scope line="106"/>
                <scope line="109"/>
            </method>
        </class>
    </source>