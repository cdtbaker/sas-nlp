<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.jdi.connect">
        <import package="java.util.Map"/>
        <import package="java.util.List"/>
        <import package="java.io.Serializable"/>
        <interface name="Connector">
            <javadoc line="5">
                A method of connection between a debugger and a target VM.
                  A connector encapsulates exactly one {@link Transport}. used
                  to establish the connection. Each connector has a set of arguments
                  which controls its operation. The arguments are stored as a
                  map, keyed by a string. Each implementation defines the string
                  argument keys it accepts.                
                <see>
                    LaunchingConnector                    
                </see>
                <see>
                    AttachingConnector                    
                </see>
                <see>
                    ListeningConnector                    
                </see>
                <see>
                    Connector.Argument                    
                </see>
                <author>
                    Gordon Hirsch                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <method name="name" type="String" line="20"/>
            <javadoc line="20">
                Returns a short identifier for the connector. Connector implementors
                  should follow similar naming conventions as are used with packages
                  to avoid name collisions. For example, the Sun connector
                  implementations have names prefixed with &quot;com.sun.jdi.&quot;.
                  Not intended for exposure to end-user.                
                <return>
                    the name of this connector.                    
                </return>
            </javadoc>
            <method name="description" type="String" line="29"/>
            <javadoc line="29">
                Returns a human-readable description of this connector
                  and its purpose.                
                <return>
                    the description of this connector                    
                </return>
            </javadoc>
            <method name="transport" type="Transport" line="35"/>
            <javadoc line="35">
                Returns the transport mechanism used by this connector to establish
                  connections with a target VM.                
                <return>
                    the {@link Transport} used by this connector.                    
                </return>
            </javadoc>
            <method name="defaultArguments" type="Map<String,Connector.Argument>" line="41"/>
            <javadoc line="41">
                Returns the arguments accepted by this Connector and their
                  default values. The keys of the returned map are string argument
                  names. The values are {@link Connector.Argument} containing
                  information about the argument and its default value.                
                <return>
                    the map associating argument names with argument
                      information and default value.                    
                </return>
            </javadoc>
            <interface name="Argument">
                <implements interface="Serializable"/>
                <javadoc line="50">
                    Specification for and value of a Connector argument.
                      Will always implement a subinterface of Argument:{@link Connector.StringArgument}, {@link Connector.BooleanArgument},{@link Connector.IntegerArgument},
                      or {@link Connector.SelectedArgument}.                    
                </javadoc>
                <method name="name" type="String" line="56"/>
                <javadoc line="56">
                    Returns a short, unique identifier for the argument.
                      Not intended for exposure to end-user.                    
                    <return>
                        the name of this argument.                        
                    </return>
                </javadoc>
                <method name="label" type="String" line="62"/>
                <javadoc line="62">
                    Returns a short human-readable label for this argument.                    
                    <return>
                        a label for this argument                        
                    </return>
                </javadoc>
                <method name="description" type="String" line="67"/>
                <javadoc line="67">
                    Returns a human-readable description of this argument
                      and its purpose.                    
                    <return>
                        the description of this argument                        
                    </return>
                </javadoc>
                <method name="value" type="String" line="73"/>
                <javadoc line="73">
                    Returns the current value of the argument. Initially, the
                      default value is returned. If the value is currently unspecified,
                      null is returned.                    
                    <return>
                        the current value of the argument.                        
                    </return>
                </javadoc>
                <method name="setValue" type="void" line="80"/>
                <javadoc line="80">
                    Sets the value of the argument.
                      The value should be checked with {@link #isValid(String)}before setting it; invalid values will throw an exception
                      when the connection is established - for example,
                      on {@link LaunchingConnector#launch}                    
                </javadoc>
                <method name="isValid" type="boolean" line="87"/>
                <javadoc line="87">
                    Performs basic sanity check of argument.                    
                    <return>
                        <code>true</code> if the value is valid to be
                          used in {@link #setValue(String)}                        
                    </return>
                </javadoc>
                <method name="mustSpecify" type="boolean" line="93"/>
                <javadoc line="93">
                    Indicates whether the argument must be specified. If true,{@link #setValue} must be used to set a non-null value before
                      using this argument in establishing a connection.                    
                    <return>
                        <code>true</code> if the argument must be specified;
                          <code>false</code> otherwise.                        
                    </return>
                </javadoc>
            </interface>
            <interface name="BooleanArgument">
                <implements interface="Argument"/>
                <javadoc line="101">
                    Specification for and value of a Connector argument,
                      whose value is Boolean.  Boolean values are represented
                      by the localized versions of the strings &quot;true&quot; and &quot;false&quot;.                    
                </javadoc>
                <method name="setValue" type="void" line="107"/>
                <javadoc line="107">
                    Sets the value of the argument.                    
                </javadoc>
                <method name="isValid" type="boolean" line="111"/>
                <javadoc line="111">
                    Performs basic sanity check of argument.                    
                    <return>
                        <code>true</code> if value is a string
                          representation of a boolean value.                        
                    </return>
                    <see>
                        #stringValueOf(boolean)                        
                    </see>
                </javadoc>
                <method name="stringValueOf" type="String" line="118"/>
                <javadoc line="118">
                    Return the string representation of the &lt;code&gt;value&lt;/code&gt;
                      parameter.
                      Does not set or examine the current value of &lt;code&gt;this&lt;/code&gt;
                      instance.                    
                    <return>
                        the localized String representation of the
                          boolean value.                        
                    </return>
                </javadoc>
                <method name="booleanValue" type="boolean" line="127"/>
                <javadoc line="127">
                    Return the value of the argument as a boolean.  Since
                      the argument may not have been set or may have an invalid
                      value {@link #isValid(String)} should be called on{@link #value()} to check its validity.  If it is invalid
                      the boolean returned by this method is undefined.                    
                    <return>
                        the value of the argument as a boolean.                        
                    </return>
                </javadoc>
            </interface>
            <interface name="IntegerArgument">
                <implements interface="Argument"/>
                <javadoc line="136">
                    Specification for and value of a Connector argument,
                      whose value is an integer.  Integer values are represented
                      by their corresponding strings.                    
                </javadoc>
                <method name="setValue" type="void" line="142"/>
                <javadoc line="142">
                    Sets the value of the argument.
                      The value should be checked with {@link #isValid(int)}before setting it; invalid values will throw an exception
                      when the connection is established - for example,
                      on {@link LaunchingConnector#launch}                    
                </javadoc>
                <method name="isValid" type="boolean" line="149"/>
                <javadoc line="149">
                    Performs basic sanity check of argument.                    
                    <return>
                        <code>true</code> if value represents an int that is
                          <code>{@link #min()} &lt;= value &lt;= {@link #max()}</code>                        
                    </return>
                </javadoc>
                <method name="isValid" type="boolean" line="155"/>
                <javadoc line="155">
                    Performs basic sanity check of argument.                    
                    <return>
                        <code>true</code> if
                          <code>{@link #min()} &lt;= value  &lt;= {@link #max()}</code>                        
                    </return>
                </javadoc>
                <method name="stringValueOf" type="String" line="161"/>
                <javadoc line="161">
                    Return the string representation of the &lt;code&gt;value&lt;/code&gt;
                      parameter.
                      Does not set or examine the current value of &lt;code&gt;this&lt;/code&gt;
                      instance.                    
                    <return>
                        the String representation of the
                          int value.                        
                    </return>
                </javadoc>
                <method name="intValue" type="int" line="170"/>
                <javadoc line="170">
                    Return the value of the argument as a int.  Since
                      the argument may not have been set or may have an invalid
                      value {@link #isValid(String)} should be called on{@link #value()} to check its validity.  If it is invalid
                      the int returned by this method is undefined.                    
                    <return>
                        the value of the argument as a int.                        
                    </return>
                </javadoc>
                <method name="max" type="int" line="178"/>
                <javadoc line="178">
                    The upper bound for the value.                    
                    <return>
                        the maximum allowed value for this argument.                        
                    </return>
                </javadoc>
                <method name="min" type="int" line="183"/>
                <javadoc line="183">
                    The lower bound for the value.                    
                    <return>
                        the minimum allowed value for this argument.                        
                    </return>
                </javadoc>
            </interface>
            <interface name="StringArgument">
                <implements interface="Argument"/>
                <javadoc line="189">
                    Specification for and value of a Connector argument,
                      whose value is a String.                    
                </javadoc>
                <method name="isValid" type="boolean" line="194"/>
                <javadoc line="194">
                    Performs basic sanity check of argument.                    
                    <return>
                        <code>true</code> always                        
                    </return>
                </javadoc>
            </interface>
            <interface name="SelectedArgument">
                <implements interface="Argument"/>
                <javadoc line="200">
                    Specification for and value of a Connector argument,
                      whose value is a String selected from a list of choices.                    
                </javadoc>
                <method name="choices" type="List<String>" line="205"/>
                <javadoc line="205">
                    Return the possible values for the argument                    
                    <return>
                        {@link List} of {@link String}                        
                    </return>
                </javadoc>
                <method name="isValid" type="boolean" line="210"/>
                <javadoc line="210">
                    Performs basic sanity check of argument.                    
                    <return>
                        <code>true</code> if value is one of {@link #choices()}.                        
                    </return>
                </javadoc>
            </interface>
        </interface>
    </source>