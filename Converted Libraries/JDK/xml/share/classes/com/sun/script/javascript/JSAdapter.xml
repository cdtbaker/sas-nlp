<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.script.javascript">
        <import package="sun.org.mozilla.javascript.internal"/>
        <import package="java.util"/>
        <class name="JSAdapter" line="4">
            <implements interface="Scriptable"/>
            <implements interface="Function"/>
            <javadoc line="4">
                JSAdapter is java.lang.reflect.Proxy equivalent for JavaScript. JSAdapter
                  calls specially named JavaScript methods on an adaptee object when property
                  access is attempted on it.
                  Example:
                  var y = {
                  __get__    : function (name) { ... }
                  __has__    : function (name) { ... }
                  __put__    : function (name, value) {...}
                  __delete__ : function (name) { ... }
                  __getIds__ : function () { ... }
                  };
                  var x = new JSAdapter(y);
                  x.i;                        // calls y.__get__
                  i in x;                     // calls y.__has__
                  x.p = 10;                   // calls y.__put__
                  delete x.p;                 // calls y.__delete__
                  for (i in x) { print(i); }  // calls y.__getIds__
                  If a special JavaScript method is not found in the adaptee, then JSAdapter
                  forwards the property access to the adaptee itself.
                  JavaScript caller of adapter object is isolated from the fact that
                  the property access/mutation/deletion are really calls to
                  JavaScript methods on adaptee.  Use cases include &apos;smart&apos;
                  properties, property access tracing/debugging, encaptulation with
                  easy client access - in short JavaScript becomes more &quot;Self&quot; like.
                  Note that Rhino already supports special properties like __proto__
                  (to set, get prototype), __parent__ (to set, get parent scope). We
                  follow the same double underscore nameing convention here. Similarly
                  the name JSAdapter is derived from JavaAdapter -- which is a facility
                  to extend, implement Java classes/interfaces by JavaScript.                
                <author>
                    A. Sundararajan                    
                </author>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="JSAdapter" type="constructor" line="38">
                <params>
                    <param name="obj" type="Scriptable"/>
                </params>
            </method>
            <method name="init" type="void" line="41">
                <params>
                    <param name="cx" type="Context"/>
                    <param name="scope" type="Scriptable"/>
                    <param name="sealed" type="boolean"/>
                </params>
                <declaration name="obj" type="JSAdapter" line="42"/>
            </method>
            <method name="getClassName" type="String" line="48"/>
            <method name="get" type="Object" line="51">
                <params>
                    <param name="name" type="String"/>
                    <param name="start" type="Scriptable"/>
                </params>
                <declaration name="func" type="Function" line="52"/>
                <scope line="53"/>
                <scope line="56"/>
            </method>
            <method name="get" type="Object" line="61">
                <params>
                    <param name="index" type="int"/>
                    <param name="start" type="Scriptable"/>
                </params>
                <declaration name="func" type="Function" line="62"/>
                <scope line="63"/>
                <scope line="66"/>
            </method>
            <method name="has" type="boolean" line="71">
                <params>
                    <param name="name" type="String"/>
                    <param name="start" type="Scriptable"/>
                </params>
                <declaration name="func" type="Function" line="72"/>
                <scope line="73">
                    <declaration name="res" type="Object" line="74"/>
                </scope>
                <scope line="77"/>
            </method>
            <method name="has" type="boolean" line="82">
                <params>
                    <param name="index" type="int"/>
                    <param name="start" type="Scriptable"/>
                </params>
                <declaration name="func" type="Function" line="83"/>
                <scope line="84">
                    <declaration name="res" type="Object" line="85"/>
                </scope>
                <scope line="88"/>
            </method>
            <method name="put" type="void" line="93">
                <params>
                    <param name="name" type="String"/>
                    <param name="start" type="Scriptable"/>
                    <param name="value" type="Object"/>
                </params>
                <scope line="94">
                    <declaration name="func" type="Function" line="95"/>
                    <scope line="96"/>
                    <scope line="99"/>
                </scope>
                <scope line="104"/>
            </method>
            <method name="put" type="void" line="108">
                <params>
                    <param name="index" type="int"/>
                    <param name="start" type="Scriptable"/>
                    <param name="value" type="Object"/>
                </params>
                <scope line="109">
                    <declaration name="func" type="Function" line="110"/>
                    <scope line="111"/>
                    <scope line="114"/>
                </scope>
                <scope line="119"/>
            </method>
            <method name="delete" type="void" line="123">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="func" type="Function" line="124"/>
                <scope line="125"/>
                <scope line="128"/>
            </method>
            <method name="delete" type="void" line="132">
                <params>
                    <param name="index" type="int"/>
                </params>
                <declaration name="func" type="Function" line="133"/>
                <scope line="134"/>
                <scope line="137"/>
            </method>
            <method name="getPrototype" type="Scriptable" line="141"/>
            <method name="setPrototype" type="void" line="144">
                <params>
                    <param name="prototype" type="Scriptable"/>
                </params>
            </method>
            <method name="getParentScope" type="Scriptable" line="147"/>
            <method name="setParentScope" type="void" line="150">
                <params>
                    <param name="parent" type="Scriptable"/>
                </params>
            </method>
            <method name="getIds" type="Object[]" line="153">
                <declaration name="func" type="Function" line="154"/>
                <scope line="155">
                    <declaration name="val" type="Object" line="156"/>
                    <scope line="157">
                        <declaration name="array" type="NativeArray" line="158"/>
                        <declaration name="res" type="Object[]" line="159"/>
                        <scope line="160"/>
                    </scope>
                    <scope line="165">
                        <declaration name="tmp" type="Object" line="166"/>
                        <declaration name="res" type="Object[]" line="167"/>
                        <scope line="168">
                            <declaration name="array" type="Object[]" line="169"/>
                            <scope line="171"/>
                        </scope>
                        <scope line="175"/>
                    </scope>
                    <scope line="180"/>
                </scope>
                <scope line="184"/>
            </method>
            <method name="hasInstance" type="boolean" line="188">
                <params>
                    <param name="scriptable" type="Scriptable"/>
                </params>
                <scope line="189"/>
                <scope line="192">
                    <declaration name="proto" type="Scriptable" line="193"/>
                    <scope line="194"/>
                </scope>
            </method>
            <method name="getDefaultValue" type="Object" line="201">
                <params>
                    <param name="hint" type="Class"/>
                </params>
            </method>
            <method name="call" type="Object" line="204">
                <params>
                    <param name="cx" type="Context"/>
                    <param name="scope" type="Scriptable"/>
                    <param name="thisObj" type="Scriptable"/>
                    <param name="args" type="Object[]"/>
                </params>
                <scope line="205"/>
                <scope line="208">
                    <declaration name="tmp" type="Scriptable" line="209"/>
                    <scope line="210"/>
                    <scope line="213"/>
                </scope>
            </method>
            <method name="construct" type="Scriptable" line="218">
                <params>
                    <param name="cx" type="Context"/>
                    <param name="scope" type="Scriptable"/>
                    <param name="args" type="Object[]"/>
                </params>
                <scope line="219">
                    <declaration name="topLevel" type="Scriptable" line="220"/>
                    <declaration name="newObj" type="JSAdapter" line="221"/>
                    <scope line="222"/>
                    <scope line="225"/>
                </scope>
                <scope line="230">
                    <declaration name="tmp" type="Scriptable" line="231"/>
                    <scope line="232"/>
                    <scope line="235"/>
                </scope>
            </method>
            <method name="getAdaptee" type="Scriptable" line="240"/>
            <method name="setAdaptee" type="void" line="243">
                <params>
                    <param name="adaptee" type="Scriptable"/>
                </params>
                <scope line="244"/>
            </method>
            <method name="mapToId" type="Object" line="249">
                <params>
                    <param name="tmp" type="Object"/>
                </params>
                <scope line="250"/>
                <scope line="253"/>
            </method>
            <method name="getFunctionPrototype" type="Scriptable" line="257">
                <params>
                    <param name="scope" type="Scriptable"/>
                </params>
            </method>
            <method name="getAdapteeFunction" type="Function" line="260">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="o" type="Object" line="261"/>
            </method>
            <method name="call" type="Object" line="264">
                <params>
                    <param name="func" type="Function"/>
                    <param name="args" type="Object[]"/>
                </params>
                <declaration name="cx" type="Context" line="265"/>
                <declaration name="thisObj" type="Scriptable" line="266"/>
                <declaration name="scope" type="Scriptable" line="267"/>
                <scope line="268"/>
                <scope line="271"/>
            </method>
            <declaration name="prototype" type="Scriptable" line="275"/>
            <declaration name="parent" type="Scriptable" line="276"/>
            <declaration name="adaptee" type="Scriptable" line="277"/>
            <declaration name="isPrototype" type="boolean" line="278"/>
            <declaration name="GET_PROP" type="String" line="279"/>
            <declaration name="HAS_PROP" type="String" line="280"/>
            <declaration name="PUT_PROP" type="String" line="281"/>
            <declaration name="DEL_PROP" type="String" line="282"/>
            <declaration name="GET_PROPIDS" type="String" line="283"/>
        </class>
    </source>