<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.script.util">
        <import package="javax.script"/>
        <import package="java.lang.reflect"/>
        <import package="java.security"/>
        <class name="InterfaceImplementor" line="39">
            <comment line="99">
                called to convert method result after invoke                
            </comment>
            <comment line="106">
                called to convert method arguments before invoke                
            </comment>
            <declaration name="engine" type="Invocable" line="41"/>
            <javadoc line="43">
                Creates a new instance of Invocable                
            </javadoc>
            <method name="InterfaceImplementor" type="constructor" line="44">
                <params>
                    <param name="engine" type="Invocable"/>
                </params>
            </method>
            <class name="InterfaceImplementorInvocationHandler" line="48">
                <implements interface="InvocationHandler"/>
                <declaration name="thiz" type="Object" line="50"/>
                <declaration name="accCtxt" type="AccessControlContext" line="51"/>
                <method name="InterfaceImplementorInvocationHandler" type="constructor" line="54">
                    <params>
                        <param name="thiz" type="Object"/>
                        <param name="accCtxt" type="AccessControlContext"/>
                    </params>
                </method>
                <method name="invoke" type="Object" line="60">
                    <params>
                        <param name="proxy" type="Object"/>
                        <param name="method" type="Method"/>
                        <param name="args" type="Object[]"/>
                    </params>
                    <comment line="62">
                        give chance to convert input args                        
                    </comment>
                    <comment line="76">
                        give chance to convert the method result                        
                    </comment>
                    <declaration name="result" type="Object" line="63"/>
                    <declaration name="m" type="Method" line="64"/>
                    <declaration name="a" type="Object[]" line="65"/>
                    <anonymous_class line="66">
                        <method name="run" type="Object" line="67">
                            <scope line="68"/>
                            <scope line="70"/>
                        </method>
                    </anonymous_class>
                </method>
            </class>
            <method name="getInterface" type="T" line="81">
                <params>
                    <param name="thiz" type="Object"/>
                    <param name="iface" type="Class<T>"/>
                </params>
                <scope line="82"/>
                <scope line="85"/>
                <declaration name="accCtxt" type="AccessControlContext" line="88"/>
            </method>
            <method name="isImplemented" type="boolean" line="94">
                <params>
                    <param name="thiz" type="Object"/>
                    <param name="iface" type="Class<?>"/>
                </params>
            </method>
            <method name="convertResult" type="Object" line="100">
                <params>
                    <param name="method" type="Method"/>
                    <param name="res" type="Object"/>
                </params>
                <comment line="102">
                    default is identity conversion                    
                </comment>
            </method>
            <method name="convertArguments" type="Object[]" line="107">
                <params>
                    <param name="method" type="Method"/>
                    <param name="args" type="Object[]"/>
                </params>
                <comment line="109">
                    default is identity conversion                    
                </comment>
            </method>
        </class>
    </source>