<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.script.javascript">
        <import package="com.sun.script.util"/>
        <import package="javax.script"/>
        <import package="sun.org.mozilla.javascript.internal"/>
        <import package="java.lang.reflect.Method"/>
        <import package="java.io"/>
        <import package="java.util"/>
        <class name="RhinoScriptEngine" line="35">
            <extends class="AbstractScriptEngine"/>
            <comment line="49">
                Scope where standard JavaScript objects and our
                 extensions to it are stored. Note that these are not
                 user defined engine level global variables. These are
                 variables have to be there on all compliant ECMAScript
                 scopes. We put these standard objects in this top level.                
            </comment>
            <comment line="57">
                map used to store indexed properties in engine scope
                 refer to comment on &apos;indexedProps&apos; in ExternalScriptable.java.                
            </comment>
            <comment line="207">
                Invocable methods                
            </comment>
            <comment line="324">
                Compilable methods                
            </comment>
            <comment line="352">
                package-private helpers                
            </comment>
            <comment line="383">
                public static void main(String[] args) throws Exception {
                if (args.length == 0) {
                System.out.println(&quot;No file specified&quot;);
                return;
                }
                
                InputStreamReader r = new InputStreamReader(new FileInputStream(args[0]));
                ScriptEngine engine = new RhinoScriptEngine();
                
                engine.put(&quot;x&quot;, &quot;y&quot;);
                engine.put(ScriptEngine.FILENAME, args[0]);
                engine.eval(r);
                System.out.println(engine.get(&quot;x&quot;));
                }                
            </comment>
            <implements interface="Invocable"/>
            <implements interface="Compilable"/>
            <javadoc line="35">
                Implementation of &lt;code&gt;ScriptEngine&lt;/code&gt; using the Mozilla Rhino
                  interpreter.                
                <author>
                    Mike Grogan                    
                </author>
                <author>
                    A. Sundararajan                    
                </author>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="DEBUG" type="boolean" line="46"/>
            <declaration name="topLevel" type="RhinoTopLevel" line="54"/>
            <declaration name="indexedProps" type="Map&lt;Object,Object&gt;" line="59"/>
            <declaration name="factory" type="ScriptEngineFactory" line="61"/>
            <declaration name="implementor" type="InterfaceImplementor" line="62"/>
            <declaration name="languageVersion" type="int" line="64"/>
            <declaration name="optimizationLevel" type="int" line="65"/>
            <scope line="66">
                <anonymous_class line="67">
                    <method name="makeContext" type="Context" line="68">
                        <declaration name="cx" type="Context" line="69"/>
                    </method>
                </anonymous_class>
            </scope>
            <declaration name="RHINO_JS_VERSION" type="String" line="79"/>
            <method name="getLanguageVersion" type="int" line="80">
                <declaration name="version" type="int" line="81"/>
                <declaration name="tmp" type="String" line="82"/>
                <scope line="84"/>
                <scope line="86"/>
            </method>
            <declaration name="RHINO_OPT_LEVEL" type="String" line="92"/>
            <method name="getOptimizationLevel" type="int" line="93">
                <comment line="95">
                    disable optimizer under security manager, for now.                    
                </comment>
                <declaration name="optLevel" type="int" line="94"/>
                <scope line="96"/>
            </method>
            <javadoc line="102">
                Creates a new instance of RhinoScriptEngine                
            </javadoc>
            <method name="RhinoScriptEngine" type="constructor" line="105">
                <comment line="116">
                    construct object used to implement getInterface                    
                </comment>
                <comment line="128">
                    ignore methods of java.lang.Object class                    
                </comment>
                <declaration name="cx" type="Context" line="107"/>
                <scope line="108"/>
                <scope line="110"/>
                <anonymous_class line="117">
                    <method name="isImplemented" type="boolean" line="118">
                        <params>
                            <param name="thiz" type="Object"/>
                            <param name="iface" type="Class<?>"/>
                        </params>
                        <comment line="128">
                            ignore methods of java.lang.Object class                            
                        </comment>
                        <declaration name="cx" type="Context" line="119"/>
                        <scope line="120">
                            <scope line="121"/>
                            <declaration name="engineScope" type="Scriptable" line="124"/>
                            <declaration name="localScope" type="Scriptable" line="125"/>
                            <scope line="127">
                                <scope line="129"/>
                                <declaration name="obj" type="Object" line="132"/>
                                <scope line="133"/>
                            </scope>
                        </scope>
                        <scope line="138"/>
                    </method>
                    <method name="convertResult" type="Object" line="144">
                        <params>
                            <param name="method" type="Method"/>
                            <param name="res" type="Object"/>
                        </params>
                        <declaration name="desiredType" type="Class" line="145"/>
                        <scope line="146"/>
                        <scope line="148"/>
                    </method>
                </anonymous_class>
            </method>
            <method name="eval" type="Object" line="156">
                <params>
                    <param name="reader" type="Reader"/>
                    <param name="ctxt" type="ScriptContext"/>
                </params>
                <declaration name="ret" type="Object" line="157"/>
                <declaration name="cx" type="Context" line="159"/>
                <scope line="160">
                    <declaration name="scope" type="Scriptable" line="161"/>
                    <declaration name="filename" type="String" line="162"/>
                </scope>
                <scope line="166">
                    <declaration name="line" type="int" line="168"/>
                    <declaration name="msg" type="String" line="169"/>
                    <scope line="170"/>
                    <scope line="172"/>
                    <declaration name="se" type="ScriptException" line="175"/>
                </scope>
                <scope line="178"/>
                <scope line="180"/>
            </method>
            <method name="eval" type="Object" line="187">
                <params>
                    <param name="script" type="String"/>
                    <param name="ctxt" type="ScriptContext"/>
                </params>
                <scope line="188"/>
            </method>
            <method name="getFactory" type="ScriptEngineFactory" line="194">
                <scope line="195"/>
                <scope line="197"/>
            </method>
            <method name="createBindings" type="Bindings" line="202"/>
            <method name="invokeFunction" type="Object" line="208">
                <params>
                    <param name="name" type="String"/>
                    <param name="args" type="Object"/>
                </params>
            </method>
            <method name="invokeMethod" type="Object" line="213">
                <params>
                    <param name="thiz" type="Object"/>
                    <param name="name" type="String"/>
                    <param name="args" type="Object"/>
                </params>
                <scope line="214"/>
            </method>
            <method name="invoke" type="Object" line="221">
                <params>
                    <param name="thiz" type="Object"/>
                    <param name="name" type="String"/>
                    <param name="args" type="Object"/>
                </params>
                <declaration name="cx" type="Context" line="222"/>
                <scope line="223">
                    <scope line="224"/>
                    <scope line="228"/>
                    <declaration name="engineScope" type="Scriptable" line="232"/>
                    <declaration name="localScope" type="Scriptable" line="233"/>
                    <declaration name="obj" type="Object" line="235"/>
                    <scope line="236"/>
                    <declaration name="func" type="Function" line="240"/>
                    <declaration name="scope" type="Scriptable" line="241"/>
                    <scope line="242"/>
                    <declaration name="result" type="Object" line="245"/>
                </scope>
                <scope line="248">
                    <declaration name="line" type="int" line="250"/>
                    <declaration name="se" type="ScriptException" line="251"/>
                </scope>
                <scope line="254"/>
            </method>
            <method name="getInterface" type="T" line="259">
                <params>
                    <param name="clasz" type="Class<T>"/>
                </params>
                <scope line="260"/>
                <scope line="262"/>
            </method>
            <method name="getInterface" type="T" line="267">
                <params>
                    <param name="thiz" type="Object"/>
                    <param name="clasz" type="Class<T>"/>
                </params>
                <scope line="268"/>
                <scope line="272"/>
                <scope line="274"/>
            </method>
            <declaration name="printSource" type="String" line="279"/>
            <method name="getRuntimeScope" type="Scriptable" line="297">
                <params>
                    <param name="ctxt" type="ScriptContext"/>
                </params>
                <comment line="302">
                    we create a scope for the given ScriptContext                    
                </comment>
                <comment line="305">
                    Set the prototype of newScope to be &apos;topLevel&apos; so that                    
                </comment>
                <comment line="306">
                    JavaScript standard objects are visible from the scope.                    
                </comment>
                <comment line="309">
                    define &quot;context&quot; variable in the new scope                    
                </comment>
                <comment line="312">
                    define &quot;print&quot;, &quot;println&quot; functions in the new scope                    
                </comment>
                <scope line="298"/>
                <declaration name="newScope" type="Scriptable" line="303"/>
                <declaration name="cx" type="Context" line="313"/>
                <scope line="314"/>
                <scope line="316"/>
            </method>
            <method name="compile" type="CompiledScript" line="324">
                <params>
                    <param name="script" type="String"/>
                </params>
            </method>
            <method name="compile" type="CompiledScript" line="328">
                <params>
                    <param name="script" type="java.io.Reader"/>
                </params>
                <declaration name="ret" type="CompiledScript" line="329"/>
                <declaration name="cx" type="Context" line="330"/>
                <scope line="332">
                    <declaration name="fileName" type="String" line="333"/>
                    <scope line="334"/>
                    <declaration name="scope" type="Scriptable" line="338"/>
                    <declaration name="scr" type="Script" line="339"/>
                </scope>
                <scope line="341"/>
                <scope line="344"/>
            </method>
            <method name="enterContext" type="Context" line="353">
                <comment line="354">
                    call this always so that initializer of this class runs                    
                </comment>
                <comment line="355">
                    and initializes custom wrap factory and class shutter.                    
                </comment>
            </method>
            <method name="setEngineFactory" type="void" line="359">
                <params>
                    <param name="fac" type="ScriptEngineFactory"/>
                </params>
            </method>
            <method name="wrapArguments" type="Object[]" line="363">
                <params>
                    <param name="args" type="Object[]"/>
                </params>
                <scope line="364"/>
                <declaration name="res" type="Object[]" line="367"/>
                <scope line="368"/>
            </method>
            <method name="unwrapReturnValue" type="Object" line="374">
                <params>
                    <param name="result" type="Object"/>
                </params>
                <scope line="375"/>
            </method>
        </class>
    </source>