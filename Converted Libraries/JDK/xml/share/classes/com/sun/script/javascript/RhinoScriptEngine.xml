<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.script.javascript">
        <import package="com.sun.script.util"/>
        <import package="javax.script"/>
        <import package="sun.org.mozilla.javascript.internal"/>
        <import package="java.lang.reflect.Method"/>
        <import package="java.io"/>
        <import package="java.util"/>
        <class name="RhinoScriptEngine" line="8">
            <extends class="AbstractScriptEngine"/>
            <implements interface="Invocable"/>
            <implements interface="Compilable"/>
            <javadoc line="8">
                Implementation of &lt;code&gt;ScriptEngine&lt;/code&gt; using the Mozilla Rhino
                  interpreter.                
                <author>
                    Mike Grogan                    
                </author>
                <author>
                    A. Sundararajan                    
                </author>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <declaration name="DEBUG" type="boolean" line="16"/>
            <declaration name="topLevel" type="RhinoTopLevel" line="17"/>
            <declaration name="indexedProps" type="Map&lt;Object,Object&gt;" line="18"/>
            <declaration name="factory" type="ScriptEngineFactory" line="19"/>
            <declaration name="implementor" type="InterfaceImplementor" line="20"/>
            <declaration name="languageVersion" type="int" line="21"/>
            <declaration name="optimizationLevel" type="int" line="22"/>
            <scope line="23">
                <anonymous_class line="24">
                    <method name="makeContext" type="Context" line="25">
                        <declaration name="cx" type="Context" line="26"/>
                    </method>
                </anonymous_class>
            </scope>
            <declaration name="RHINO_JS_VERSION" type="String" line="36"/>
            <method name="getLanguageVersion" type="int" line="37">
                <declaration name="version" type="int" line="38"/>
                <declaration name="tmp" type="String" line="39"/>
                <scope line="40"/>
                <scope line="43"/>
            </method>
            <declaration name="RHINO_OPT_LEVEL" type="String" line="48"/>
            <method name="getOptimizationLevel" type="int" line="49">
                <declaration name="optLevel" type="int" line="50"/>
                <scope line="51"/>
            </method>
            <javadoc line="56">
                Creates a new instance of RhinoScriptEngine                
            </javadoc>
            <method name="RhinoScriptEngine" type="constructor" line="59">
                <declaration name="cx" type="Context" line="60"/>
                <scope line="61"/>
                <scope line="64"/>
                <anonymous_class line="68">
                    <method name="isImplemented" type="boolean" line="69">
                        <params>
                            <param name="thiz" type="Object"/>
                            <param name="iface" type="Class<?>"/>
                        </params>
                        <declaration name="cx" type="Context" line="70"/>
                        <scope line="71">
                            <scope line="72"/>
                            <declaration name="engineScope" type="Scriptable" line="75"/>
                            <declaration name="localScope" type="Scriptable" line="76"/>
                            <scope line="77">
                                <scope line="78"/>
                                <declaration name="obj" type="Object" line="81"/>
                                <scope line="82"/>
                            </scope>
                        </scope>
                        <scope line="88"/>
                    </method>
                    <method name="convertResult" type="Object" line="92">
                        <params>
                            <param name="method" type="Method"/>
                            <param name="res" type="Object"/>
                        </params>
                        <declaration name="desiredType" type="Class" line="93"/>
                        <scope line="94"/>
                        <scope line="97"/>
                    </method>
                </anonymous_class>
            </method>
            <method name="eval" type="Object" line="104">
                <params>
                    <param name="reader" type="Reader"/>
                    <param name="ctxt" type="ScriptContext"/>
                </params>
                <declaration name="ret" type="Object" line="105"/>
                <declaration name="cx" type="Context" line="106"/>
                <scope line="107">
                    <declaration name="scope" type="Scriptable" line="108"/>
                    <declaration name="filename" type="String" line="109"/>
                </scope>
                <scope line="113">
                    <declaration name="line" type="int" line="115"/>
                    <declaration name="msg" type="String" line="116"/>
                    <scope line="117"/>
                    <scope line="120"/>
                    <declaration name="se" type="ScriptException" line="123"/>
                </scope>
                <scope line="127"/>
                <scope line="130"/>
            </method>
            <method name="eval" type="Object" line="135">
                <params>
                    <param name="script" type="String"/>
                    <param name="ctxt" type="ScriptContext"/>
                </params>
                <scope line="136"/>
            </method>
            <method name="getFactory" type="ScriptEngineFactory" line="141">
                <scope line="142"/>
                <scope line="145"/>
            </method>
            <method name="createBindings" type="Bindings" line="149"/>
            <method name="invokeFunction" type="Object" line="152">
                <params>
                    <param name="name" type="String"/>
                    <param name="args" type="Object"/>
                </params>
            </method>
            <method name="invokeMethod" type="Object" line="155">
                <params>
                    <param name="thiz" type="Object"/>
                    <param name="name" type="String"/>
                    <param name="args" type="Object"/>
                </params>
                <scope line="156"/>
            </method>
            <method name="invoke" type="Object" line="161">
                <params>
                    <param name="thiz" type="Object"/>
                    <param name="name" type="String"/>
                    <param name="args" type="Object"/>
                </params>
                <declaration name="cx" type="Context" line="162"/>
                <scope line="163">
                    <scope line="164"/>
                    <scope line="167"/>
                    <declaration name="engineScope" type="Scriptable" line="170"/>
                    <declaration name="localScope" type="Scriptable" line="171"/>
                    <declaration name="obj" type="Object" line="172"/>
                    <scope line="173"/>
                    <declaration name="func" type="Function" line="176"/>
                    <declaration name="scope" type="Scriptable" line="177"/>
                    <scope line="178"/>
                    <declaration name="result" type="Object" line="181"/>
                </scope>
                <scope line="184">
                    <declaration name="line" type="int" line="186"/>
                    <declaration name="se" type="ScriptException" line="187"/>
                </scope>
                <scope line="191"/>
            </method>
            <method name="getInterface" type="T" line="195">
                <params>
                    <param name="clasz" type="Class<T>"/>
                </params>
                <scope line="196"/>
                <scope line="199"/>
            </method>
            <method name="getInterface" type="T" line="203">
                <params>
                    <param name="thiz" type="Object"/>
                    <param name="clasz" type="Class<T>"/>
                </params>
                <scope line="204"/>
                <scope line="207"/>
                <scope line="210"/>
            </method>
            <declaration name="printSource" type="String" line="214"/>
            <method name="getRuntimeScope" type="Scriptable" line="215">
                <params>
                    <param name="ctxt" type="ScriptContext"/>
                </params>
                <scope line="216"/>
                <declaration name="newScope" type="Scriptable" line="219"/>
                <declaration name="cx" type="Context" line="222"/>
                <scope line="223"/>
                <scope line="226"/>
            </method>
            <method name="compile" type="CompiledScript" line="231">
                <params>
                    <param name="script" type="String"/>
                </params>
            </method>
            <method name="compile" type="CompiledScript" line="234">
                <params>
                    <param name="script" type="java.io.Reader"/>
                </params>
                <declaration name="ret" type="CompiledScript" line="235"/>
                <declaration name="cx" type="Context" line="236"/>
                <scope line="237">
                    <declaration name="fileName" type="String" line="238"/>
                    <scope line="239"/>
                    <declaration name="scope" type="Scriptable" line="242"/>
                    <declaration name="scr" type="Script" line="243"/>
                </scope>
                <scope line="246"/>
                <scope line="250"/>
            </method>
            <method name="enterContext" type="Context" line="255"/>
            <method name="setEngineFactory" type="void" line="258">
                <params>
                    <param name="fac" type="ScriptEngineFactory"/>
                </params>
            </method>
            <method name="wrapArguments" type="Object[]" line="261">
                <params>
                    <param name="args" type="Object[]"/>
                </params>
                <scope line="262"/>
                <declaration name="res" type="Object[]" line="265"/>
                <scope line="266"/>
            </method>
            <method name="unwrapReturnValue" type="Object" line="271">
                <params>
                    <param name="result" type="Object"/>
                </params>
                <scope line="272"/>
            </method>
        </class>
    </source>