<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.script.javascript">
        <import package="java.lang.reflect"/>
        <import package="sun.security.util.SecurityConstants"/>
        <import package="sun.org.mozilla.javascript.internal"/>
        <class name="RhinoWrapFactory" line="5">
            <extends class="WrapFactory"/>
            <javadoc line="5">
                This wrap factory is used for security reasons. JSR 223 script
                  engine interface and JavaScript engine classes are run as bootstrap
                  classes. For example, java.lang.Class.forName method (when called without
                  class loader) uses caller&apos;s class loader. This may be exploited by script
                  authors to access classes otherwise not accessible. For example,
                  classes in sun. namespace are normally not accessible to untrusted
                  code and hence should not be accessible to JavaScript run from
                  untrusted code.                
                <author>
                    A. Sundararajan                    
                </author>
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="RhinoWrapFactory" type="constructor" line="18"/>
            <declaration name="theInstance" type="RhinoWrapFactory" line="20"/>
            <method name="getInstance" type="WrapFactory" line="21">
                <scope line="22"/>
            </method>
            <class name="RhinoJavaObject" line="27">
                <extends class="NativeJavaObject"/>
                <method name="RhinoJavaObject" type="constructor" line="28">
                    <params>
                        <param name="scope" type="Scriptable"/>
                        <param name="obj" type="Object"/>
                        <param name="type" type="Class"/>
                    </params>
                </method>
            </class>
            <method name="wrapAsJavaObject" type="Scriptable" line="33">
                <params>
                    <param name="cx" type="Context"/>
                    <param name="scope" type="Scriptable"/>
                    <param name="javaObject" type="Object"/>
                    <param name="staticType" type="Class"/>
                </params>
            </method>
        </class>
    </source>