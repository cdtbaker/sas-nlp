<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.servicetag">
        <import package="java.lang.reflect.Field"/>
        <import package="java.lang.reflect.Method"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.io.IOException"/>
        <import package="java.net.URI"/>
        <class name="BrowserSupport" line="7">
            <javadoc line="7">
                BrowserSupport class.
                  The implementation of the com.sun.servicetag API needs to be
                  compiled with JDK 5 as well since the consumer of this API
                  may require to support JDK 5 (e.g. NetBeans).
                  The Desktop.browse() method can be backported in this class
                  if needed.  The current implementation only supports JDK 6.                
            </javadoc>
            <declaration name="isBrowseSupported" type="boolean" line="16"/>
            <declaration name="browseMethod" type="Method" line="17"/>
            <declaration name="desktop" type="Object" line="18"/>
            <declaration name="result" type="Boolean" line="19"/>
            <method name="initX" type="void" line="20">
                <scope line="21"/>
                <declaration name="supported" type="boolean" line="24"/>
                <declaration name="browseM" type="Method" line="25"/>
                <declaration name="desktopObj" type="Object" line="26"/>
                <scope line="27">
                    <declaration name="desktopCls" type="Class&lt;?&gt;" line="28"/>
                    <declaration name="getDesktopM" type="Method" line="29"/>
                    <declaration name="actionCls" type="Class&lt;?&gt;" line="31"/>
                    <declaration name="isDesktopSupportedMethod" type="Method" line="32"/>
                    <declaration name="isSupportedMethod" type="Method" line="33"/>
                    <declaration name="browseField" type="Field" line="34"/>
                    <anonymous_class line="35">
                        <method name="run" type="void" line="36">
                            <scope line="37"/>
                            <scope line="40">
                                <declaration name="x" type="InternalError" line="41"/>
                            </scope>
                            <scope line="44">
                                <scope line="45"/>
                            </scope>
                        </method>
                    </anonymous_class>
                    <declaration name="xthread" type="Thread" line="35"/>
                    <scope line="54"/>
                    <scope line="57"/>
                    <scope line="59"/>
                </scope>
                <scope line="65">
                    <scope line="66"/>
                </scope>
                <scope line="70">
                    <scope line="71"/>
                </scope>
                <scope line="75">
                    <scope line="76"/>
                </scope>
                <scope line="80">
                    <declaration name="x" type="InternalError" line="81"/>
                </scope>
                <scope line="85">
                    <scope line="86"/>
                </scope>
            </method>
            <method name="isSupported" type="boolean" line="94"/>
            <javadoc line="98">
                Launches the default browser to display a {@code URI}.
                  If the default browser is not able to handle the specified{@code URI}, the application registered for handling{@code URIs} of the specified type is invoked. The application
                  is determined from the protocol and path of the {@code URI}, as
                  defined by the {@code URI} class.
                  &lt;p&gt;
                  This method calls the Desktop.getDesktop().browse() method.
                  &lt;p&gt;                
                <param>
                    uri the URI to be displayed in the user default browser                    
                </param>
                <throws>
                    NullPointerException if {@code uri} is {@code null}                    
                </throws>
                <throws>
                    UnsupportedOperationException if the current platform
                      does not support the {@link Desktop.Action#BROWSE} action                    
                </throws>
                <throws>
                    IOException if the user default browser is not found,
                      or it fails to be launched, or the default handler application
                      failed to be launched                    
                </throws>
                <throws>
                    IllegalArgumentException if the necessary permissions
                      are not available and the URI can not be converted to a {@code URL}                    
                </throws>
            </javadoc>
            <method name="browse" type="void" line="116">
                <params>
                    <param name="uri" type="URI"/>
                </params>
                <scope line="117"/>
                <scope line="120"/>
                <scope line="123">
                    <scope line="124"/>
                </scope>
                <scope line="129">
                    <declaration name="x" type="InternalError" line="130"/>
                </scope>
                <scope line="134">
                    <declaration name="x" type="Throwable" line="135"/>
                    <scope line="136">
                        <scope line="137"/>
                        <scope line="140"/>
                        <scope line="143"/>
                        <scope line="146"/>
                        <scope line="149"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>