<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.servicetag">
        <import package="java.io"/>
        <class name="LinuxSystemEnvironment" line="43">
            <extends class="SystemEnvironment"/>
            <comment line="135">
                reads from dmidecode with the given type and target                
            </comment>
            <comment line="136">
                returns an empty string if nothing was found or an error occurred                
            </comment>
            <comment line="137">
                                
            </comment>
            <comment line="138">
                Sample output segment:                
            </comment>
            <comment line="139">
                Handle 0x0001                
            </comment>
            <comment line="140">
                DMI type 1, 25 bytes.                
            </comment>
            <comment line="141">
                System Information                
            </comment>
            <comment line="142">
                Manufacturer: System manufacturer                
            </comment>
            <comment line="143">
                Product Name: System Product Name                
            </comment>
            <comment line="144">
                Version: System Version                
            </comment>
            <comment line="145">
                Serial Number: System Serial Number                
            </comment>
            <comment line="146">
                UUID: 3091D719-B25B-D911-959D-6D1B12C7686E                
            </comment>
            <comment line="147">
                Wake-up Type: Power Switch                
            </comment>
            <javadoc line="43">
                Linux implementation of the SystemEnvironment class.                
            </javadoc>
            <method name="LinuxSystemEnvironment" type="constructor" line="47"/>
            <declaration name="dmiInfo" type="String" line="54"/>
            <declaration name="SN" type="int" line="56"/>
            <declaration name="SYS" type="int" line="57"/>
            <declaration name="CPU" type="int" line="58"/>
            <method name="getLinuxHostId" type="String" line="60">
                <comment line="62">
                    trim off the leading 0x                    
                </comment>
                <declaration name="output" type="String" line="61"/>
                <scope line="63"/>
            </method>
            <javadoc line="69">
                Tries to obtain and return the cpu manufacturer.                
                <return>
                    The cpu manufacturer (an empty string if not found or an error occurred)                    
                </return>
            </javadoc>
            <method name="getLinuxCpuManufacturer" type="String" line="73">
                <comment line="89">
                    returns an empty string if it can&apos;t be found or an error happened                    
                </comment>
                <declaration name="tmp" type="String" line="74"/>
                <scope line="75"/>
                <declaration name="contents" type="String" line="79"/>
                <scope line="80">
                    <scope line="81">
                        <declaration name="ss" type="String[]" line="82"/>
                        <scope line="83"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="94">
                Tries to obtain and return the system manufacturer.                
                <return>
                    The system manufacturer (an empty string if not found or an error occurred)                    
                </return>
            </javadoc>
            <method name="getLinuxSystemManufacturer" type="String" line="98">
                <comment line="104">
                    returns an empty string if it can&apos;t be found or an error happened                    
                </comment>
                <declaration name="tmp" type="String" line="99"/>
                <scope line="100"/>
            </method>
            <javadoc line="108">
                Tries to obtain and return the serial number of the system.                
                <return>
                    The serial number (an empty string if not found or an error occurred)                    
                </return>
            </javadoc>
            <method name="getLinuxSN" type="String" line="112">
                <comment line="118">
                    returns an empty string if it can&apos;t be found or an error happened                    
                </comment>
                <declaration name="tmp" type="String" line="113"/>
                <scope line="114"/>
            </method>
            <method name="getLinuxPSNInfo" type="String" line="122">
                <params>
                    <param name="target" type="int"/>
                </params>
                <comment line="123">
                    try to read from the psn file if it exists                    
                </comment>
                <comment line="130">
                    default case is to return &quot;&quot;                    
                </comment>
                <declaration name="contents" type="String" line="124"/>
                <declaration name="ss" type="String[]" line="125"/>
                <scope line="126"/>
            </method>
            <method name="getLinuxDMIInfo" type="String" line="148">
                <params>
                    <param name="dmiType" type="String"/>
                    <param name="target" type="String"/>
                </params>
                <comment line="149">
                    only try to get dmidecode information once, after that, we can                    
                </comment>
                <comment line="150">
                    reuse the output                    
                </comment>
                <scope line="151">
                    <anonymous_class line="152">
                        <method name="run" type="void" line="153"/>
                    </anonymous_class>
                    <declaration name="dmidecodeThread" type="Thread" line="152"/>
                    <scope line="159">
                        <scope line="161"/>
                    </scope>
                    <scope line="165"/>
                </scope>
                <scope line="170"/>
                <declaration name="dmiFlag" type="boolean" line="173"/>
                <scope line="174">
                    <declaration name="line" type="String" line="175"/>
                    <scope line="176">
                        <scope line="177">
                            <declaration name="key" type="String" line="178"/>
                            <declaration name="indx" type="int" line="179"/>
                            <scope line="180"/>
                            <declaration name="ss" type="String[]" line="183"/>
                        </scope>
                    </scope>
                    <scope line="186"/>
                </scope>
            </method>
        </class>
    </source>