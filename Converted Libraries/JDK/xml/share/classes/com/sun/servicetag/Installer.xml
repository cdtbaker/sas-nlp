<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.servicetag">
        <import package="java.io"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Locale"/>
        <import package="java.util.Properties"/>
        <import package="java.util.Set"/>
        <import package="java.util.List"/>
        <import package="java.util.ArrayList"/>
        <import package="com.sun.servicetag.Util"/>
        <class name="Installer" line="10">
            <javadoc line="10">
                Service Tag Installer for Java SE.                
            </javadoc>
            <declaration name="SVCTAG_DIR_PATH" type="String" line="14"/>
            <declaration name="SVCTAG_ENABLE_REGISTRATION" type="String" line="15"/>
            <declaration name="ORACLE" type="String" line="16"/>
            <declaration name="SUN" type="String" line="17"/>
            <declaration name="REGISTRATION_XML" type="String" line="18"/>
            <declaration name="SERVICE_TAG_FILE" type="String" line="19"/>
            <declaration name="REGISTRATION_HTML_NAME" type="String" line="20"/>
            <declaration name="knownSupportedLocales" type="Locale[]" line="21"/>
            <declaration name="javaHome" type="String" line="22"/>
            <declaration name="svcTagDir" type="File" line="23"/>
            <declaration name="serviceTagFile" type="File" line="24"/>
            <declaration name="regXmlFile" type="File" line="25"/>
            <declaration name="registration" type="RegistrationData" line="26"/>
            <declaration name="supportRegistration" type="boolean" line="27"/>
            <declaration name="registerHtmlParent" type="String" line="28"/>
            <declaration name="supportedLocales" type="Set&amp;lt;Locale&amp;gt;" line="29"/>
            <declaration name="swordfishProps" type="Properties" line="30"/>
            <declaration name="jreArchs" type="String[]" line="31"/>
            <scope line="32">
                <declaration name="dir" type="String" line="33"/>
                <scope line="34"/>
                <scope line="37"/>
                <scope line="42"/>
                <scope line="45"/>
            </scope>
            <method name="Installer" type="constructor" line="49"/>
            <method name="getJavaServiceTag" type="ServiceTag" line="51">
                <params>
                    <param name="source" type="String"/>
                </params>
                <declaration name="vendor" type="String" line="52"/>
                <scope line="53"/>
                <declaration name="cleanup" type="boolean" line="56"/>
                <scope line="57">
                    <scope line="58"/>
                    <declaration name="st" type="ServiceTag" line="61"/>
                    <scope line="62">
                        <scope line="63"/>
                    </scope>
                </scope>
                <scope line="73">
                    <scope line="74">
                        <scope line="75"/>
                        <scope line="78"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="84">
                Returns the Java SE registration data located in
                  the &lt;JRE&gt;/lib/servicetag/registration.xml by default.                
                <throws>
                    IllegalArgumentException if the registration data
                      is of invalid format.                    
                </throws>
            </javadoc>
            <method name="getRegistrationData" type="RegistrationData" line="90">
                <scope line="91"/>
                <scope line="94">
                    <declaration name="in" type="BufferedInputStream" line="95"/>
                    <scope line="96"/>
                    <scope line="100"/>
                    <scope line="104">
                        <scope line="105"/>
                    </scope>
                </scope>
                <scope line="110"/>
            </method>
            <javadoc line="115">
                Write the registration data to the registration.xml file.
                  The offline registration page has to be regenerated with
                  the new registration data.                
                <throws>
                    java.io.IOException                    
                </throws>
            </javadoc>
            <method name="writeRegistrationXml" type="void" line="121">
                <scope line="122">
                    <scope line="123"/>
                </scope>
                <declaration name="out" type="BufferedOutputStream" line="129"/>
                <scope line="130"/>
                <scope line="134"/>
                <scope line="138">
                    <scope line="139"/>
                </scope>
            </method>
            <javadoc line="144">
                Returns the instance urn(s) stored in the servicetag file
                  or empty set if file not exists.                
            </javadoc>
            <method name="getInstalledURNs" type="Set&lt;String&gt;" line="148">
                <declaration name="urnSet" type="Set&amp;lt;String&amp;gt;" line="149"/>
                <scope line="150">
                    <declaration name="in" type="BufferedReader" line="151"/>
                    <scope line="152">
                        <declaration name="urn" type="String" line="154"/>
                        <scope line="155">
                            <scope line="157"/>
                        </scope>
                    </scope>
                    <scope line="162">
                        <scope line="163"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="170">
                Return the Java SE service tag(s) if it exists.
                  Typically only one Java SE service tag but it could have two for
                  Solaris 32-bit and 64-bit on the same install directory.                
                <return>
                    the service tag(s) for Java SE                    
                </return>
            </javadoc>
            <method name="getJavaServiceTagArray" type="ServiceTag[]" line="176">
                <declaration name="regData" type="RegistrationData" line="177"/>
                <declaration name="svcTags" type="Set&amp;lt;ServiceTag&amp;gt;" line="178"/>
                <declaration name="result" type="Set&amp;lt;ServiceTag&amp;gt;" line="179"/>
                <declaration name="props" type="Properties" line="180"/>
                <declaration name="jdkUrn" type="String" line="181"/>
                <declaration name="jreUrn" type="String" line="182"/>
                <scope line="183">
                    <scope line="184"/>
                </scope>
            </method>
            <javadoc line="190">
                Returns the Java SE service tag for this running platform;
                  or null if not exist.
                  This method will return the 64-bit service tag if the JDK
                  supports both 32-bit and 64-bit if already created.                
            </javadoc>
            <method name="getJavaServiceTag" type="ServiceTag" line="196">
                <declaration name="definedId" type="String" line="197"/>
                <scope line="198">
                    <scope line="199"/>
                </scope>
            </method>
            <javadoc line="205">
                Create a service tag for Java SE and install in the system
                  service tag registry if supported.
                  A registration data &lt;JRE&gt;/lib/servicetag/registration.xml
                  will be created to storeToXML the XML entry for Java SE service tag.
                  If the system supports service tags, this method will install
                  the Java SE service tag in the system service tag registry and
                  its &lt;tt&gt;instance_urn&lt;/tt&gt; will be stored to &lt;JRE&gt;/lib/servicetag/servicetag.
                  If &lt;JRE&gt;/lib/servicetag/registration.xml exists but is not installed
                  in the system service tag registry (i.e. servicetag doesn&apos;t exist),
                  this method will install it as described above.
                  If the system supports service tag, stclient will be used
                  to create the Java SE service tag.
                  A Solaris 32-bit and 64-bit JDK will be installed in the same
                  directory but the registration.xml will have 2 service tags.
                  The servicetag file will also contain 2 instance_urns for that case.                
            </javadoc>
            <method name="createServiceTag" type="ServiceTag" line="222">
                <params>
                    <param name="svcTagSource" type="String"/>
                </params>
                <declaration name="newSvcTag" type="ServiceTag" line="223"/>
                <scope line="224"/>
                <scope line="227">
                    <declaration name="regData" type="RegistrationData" line="228"/>
                    <declaration name="osTag" type="ServiceTag" line="230"/>
                    <scope line="231"/>
                </scope>
                <scope line="236"/>
            </method>
            <method name="installSystemServiceTag" type="void" line="241">
                <scope line="242"/>
                <declaration name="urns" type="Set&amp;lt;String&amp;gt;" line="245"/>
                <declaration name="javaSvcTags" type="ServiceTag[]" line="246"/>
                <scope line="247">
                    <scope line="248">
                        <declaration name="instanceURN" type="String" line="249"/>
                        <scope line="250"/>
                    </scope>
                </scope>
            </method>
            <method name="newServiceTag" type="ServiceTag" line="257">
                <params>
                    <param name="svcTagSource" type="String"/>
                </params>
                <declaration name="props" type="Properties" line="258"/>
                <declaration name="productURN" type="String" line="259"/>
                <declaration name="productName" type="String" line="260"/>
                <scope line="261"/>
                <scope line="265"/>
            </method>
            <javadoc line="271">
                Delete the registration data, the offline registration pages and
                  the service tags in the system service tag registry if installed.
                  The registration.xml and servicetag file will be removed.                
            </javadoc>
            <method name="deleteRegistrationData" type="void" line="276">
                <scope line="277">
                    <declaration name="urns" type="Set&amp;lt;String&amp;gt;" line="279"/>
                    <scope line="280">
                        <scope line="281"/>
                    </scope>
                </scope>
                <scope line="287">
                    <scope line="288">
                        <scope line="289"/>
                    </scope>
                    <scope line="293">
                        <scope line="294"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="300">
                Updates the registration data to contain one single service tag
                  for the running Java runtime.                
            </javadoc>
            <method name="updateRegistrationData" type="void" line="304">
                <params>
                    <param name="svcTagSource" type="String"/>
                </params>
                <declaration name="regData" type="RegistrationData" line="305"/>
                <declaration name="curSvcTag" type="ServiceTag" line="306"/>
                <declaration name="javaSvcTags" type="ServiceTag[]" line="307"/>
                <declaration name="urns" type="Set&amp;lt;String&amp;gt;" line="308"/>
                <scope line="309">
                    <scope line="310">
                        <declaration name="instanceURN" type="String" line="311"/>
                        <scope line="313"/>
                    </scope>
                </scope>
            </method>
            <method name="writeInstalledUrns" type="void" line="321">
                <scope line="322"/>
                <declaration name="out" type="PrintWriter" line="326"/>
                <scope line="327">
                    <declaration name="javaSvcTags" type="ServiceTag[]" line="329"/>
                    <scope line="330">
                        <declaration name="instanceURN" type="String" line="331"/>
                    </scope>
                </scope>
                <scope line="335">
                    <scope line="336"/>
                </scope>
            </method>
            <javadoc line="341">
                Load the values associated with the swoRDFish metadata entries
                  for Java SE. The swoRDFish metadata entries are different for
                  different release.                
                <param>
                    version Version of Java SE                    
                </param>
            </javadoc>
            <method name="loadSwordfishEntries" type="Properties" line="347">
                <scope line="348"/>
                <declaration name="version" type="int" line="351"/>
                <declaration name="filename" type="String" line="352"/>
                <declaration name="in" type="InputStream" line="353"/>
                <scope line="354"/>
                <scope line="358"/>
                <scope line="361"/>
            </method>
            <javadoc line="366">
                Returns the product defined instance ID for Java SE.
                  It is a list of comma-separated name/value pairs:
                  &quot;id=&lt;full-version&gt;  &lt;arch&gt; [&lt;arch&gt;]&quot;
                  &quot;dir=&lt;java.home system property value&gt;&quot;
                  where &lt;full-version&gt; is the full version string of the JRE,
                  &lt;arch&gt; is the architecture that the runtime supports
                  (i.e. &quot;sparc&quot;, &quot;sparcv9&quot;, &quot;i386&quot;, &quot;amd64&quot; (ISA list))
                  For Solaris, it can be dual mode that can support both
                  32-bit and 64-bit. the &quot;id&quot; will be set to
                  &quot;1.6.0_03-b02 sparc sparcv9&quot;
                  The &quot;dir&quot; property is included in the service tag to enable
                  the Service Tag software to determine if a service tag for
                  Java SE is invalid and perform appropriate service tag
                  cleanup if necessary.  See RFE# 6574781 Service Tags Enhancement.                
            </javadoc>
            <method name="getProductDefinedId" type="String" line="382">
                <declaration name="definedId" type="StringBuilder" line="383"/>
                <declaration name="archs" type="String[]" line="386"/>
                <scope line="387"/>
                <declaration name="location" type="String" line="390"/>
                <scope line="391"/>
                <scope line="395">
                    <scope line="396"/>
                </scope>
            </method>
            <javadoc line="402">
                Returns the architectures that the runtime supports
                  (i.e. &quot;sparc&quot;, &quot;sparcv9&quot;, &quot;i386&quot;, &quot;amd64&quot; (ISA list))
                  The directory name where libjava.so is located.
                  On Windows, returns the &quot;os.arch&quot; system property value.                
            </javadoc>
            <method name="getJreArchs" type="String[]" line="408">
                <scope line="409"/>
                <declaration name="archs" type="Set&amp;lt;String&amp;gt;" line="412"/>
                <declaration name="os" type="String" line="413"/>
                <scope line="414">
                    <declaration name="dir" type="File" line="415"/>
                    <scope line="416">
                        <declaration name="children" type="String[]" line="417"/>
                        <scope line="418">
                            <declaration name="f" type="File" line="419"/>
                            <scope line="420"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="426"/>
            </method>
            <javadoc line="432">
                Return the zonename if zone is supported; otherwise, return
                  &quot;global&quot;.                
            </javadoc>
            <method name="getZoneName" type="String" line="436">
                <declaration name="zonename" type="String" line="437"/>
                <declaration name="command" type="String" line="438"/>
                <declaration name="f" type="File" line="439"/>
                <scope line="440">
                    <declaration name="pb" type="ProcessBuilder" line="441"/>
                    <declaration name="p" type="Process" line="442"/>
                    <declaration name="output" type="String" line="443"/>
                    <scope line="444"/>
                </scope>
            </method>
            <method name="getRegisterHtmlParent" type="String" line="450">
                <scope line="451">
                    <declaration name="htmlDir" type="File" line="452"/>
                    <scope line="453"/>
                    <scope line="456"/>
                    <declaration name="path" type="String" line="460"/>
                    <scope line="461"/>
                    <scope line="464">
                        <declaration name="f" type="File" line="465"/>
                        <scope line="467"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="474">
                Returns the File object of the offline registration page localized
                  for the default locale in the JDK directory.                
            </javadoc>
            <method name="getRegistrationHtmlPage" type="File" line="478">
                <scope line="479"/>
                <declaration name="parent" type="String" line="482"/>
                <declaration name="f" type="File" line="483"/>
                <scope line="484"/>
                <declaration name="name" type="String" line="487"/>
                <declaration name="locale" type="Locale" line="488"/>
                <scope line="489"/>
                <declaration name="htmlFile" type="File" line="492"/>
                <scope line="493"/>
                <scope line="497"/>
                <scope line="500"/>
            </method>
            <method name="getDefaultLocale" type="Locale" line="504">
                <declaration name="candidateLocales" type="List&amp;lt;Locale&amp;gt;" line="505"/>
                <scope line="506">
                    <scope line="507"/>
                </scope>
            </method>
            <method name="getCandidateLocales" type="List&lt;Locale&gt;" line="513">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
                <declaration name="language" type="String" line="514"/>
                <declaration name="country" type="String" line="515"/>
                <declaration name="variant" type="String" line="516"/>
                <declaration name="locales" type="List&amp;lt;Locale&amp;gt;" line="517"/>
                <scope line="518"/>
                <scope line="521"/>
                <scope line="524"/>
            </method>
            <method name="deleteRegistrationHtmlPage" type="void" line="529">
                <declaration name="parent" type="String" line="530"/>
                <scope line="531"/>
                <scope line="534">
                    <declaration name="name" type="String" line="535"/>
                    <scope line="536"/>
                    <declaration name="f" type="File" line="539"/>
                    <scope line="540">
                        <scope line="541"/>
                    </scope>
                </scope>
            </method>
            <method name="initSupportedLocales" type="void" line="547">
                <params>
                    <param name="jdkDir" type="File"/>
                </params>
                <scope line="548">
                    <scope line="549"/>
                </scope>
                <anonymous_class line="553">
                    <method name="accept" type="boolean" line="554">
                        <params>
                            <param name="dir" type="File"/>
                            <param name="name" type="String"/>
                        </params>
                        <declaration name="fname" type="String" line="555"/>
                        <scope line="556"/>
                    </method>
                </anonymous_class>
                <declaration name="ff" type="FilenameFilter" line="553"/>
                <declaration name="readmes" type="String[]" line="563"/>
                <scope line="564">
                    <declaration name="basename" type="String" line="565"/>
                    <declaration name="ss" type="String[]" line="566"/>
                </scope>
                <scope line="580">
                    <scope line="582"/>
                </scope>
            </method>
            <declaration name="JDK_HEADER_PNG_KEY" type="String" line="587"/>
            <declaration name="JDK_VERSION_KEY" type="String" line="588"/>
            <declaration name="REGISTRATION_URL_KEY" type="String" line="589"/>
            <declaration name="REGISTRATION_PAYLOAD_KEY" type="String" line="590"/>
            <method name="generateRegisterHtml" type="void" line="591">
                <params>
                    <param name="parent" type="String"/>
                </params>
                <declaration name="version" type="int" line="592"/>
                <declaration name="update" type="int" line="593"/>
                <declaration name="jdkVersion" type="String" line="594"/>
                <scope line="595"/>
                <declaration name="regData" type="RegistrationData" line="598"/>
                <declaration name="img" type="File" line="599"/>
                <declaration name="headerImageSrc" type="String" line="600"/>
                <declaration name="payload" type="StringBuilder" line="601"/>
                <declaration name="xml" type="String" line="602"/>
                <declaration name="reader" type="BufferedReader" line="603"/>
                <scope line="604">
                    <declaration name="line" type="String" line="605"/>
                    <scope line="606"/>
                </scope>
                <scope line="610"/>
                <declaration name="resourceFilename" type="String" line="613"/>
                <scope line="614">
                    <declaration name="name" type="String" line="615"/>
                    <declaration name="resource" type="String" line="616"/>
                    <scope line="617"/>
                    <declaration name="f" type="File" line="621"/>
                    <declaration name="in" type="InputStream" line="622"/>
                    <declaration name="br" type="BufferedReader" line="623"/>
                    <declaration name="pw" type="PrintWriter" line="624"/>
                    <declaration name="registerURL" type="String" line="625"/>
                    <scope line="626">
                        <scope line="628">
                            <scope line="629"/>
                        </scope>
                        <scope line="634"/>
                        <scope line="637">
                            <declaration name="line" type="String" line="640"/>
                            <scope line="641">
                                <declaration name="output" type="String" line="642"/>
                                <scope line="643"/>
                                <scope line="646"/>
                                <scope line="649"/>
                                <scope line="652"/>
                            </scope>
                        </scope>
                        <scope line="660">
                            <scope line="661"/>
                            <scope line="664"/>
                        </scope>
                    </scope>
                    <scope line="669">
                        <scope line="670"/>
                    </scope>
                </scope>
            </method>
            <declaration name="MAX_SOURCE_LEN" type="int" line="676"/>
            <javadoc line="677">
                A utility class to create a service tag for Java SE.
                  &lt;p&gt;
                  &lt;b&gt;Usage:&lt;/b&gt;&lt;br&gt;
                  &lt;blockquote&gt;&lt;tt&gt;
                  &amp;lt;JAVA_HOME&amp;gt;/bin/java com.sun.servicetag.Installer
                  &lt;/tt&gt;&lt;/blockquote&gt;
                  &lt;p&gt;                
            </javadoc>
            <method name="main" type="void" line="686">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <declaration name="source" type="String" line="687"/>
                <declaration name="runtimeName" type="String" line="688"/>
                <scope line="689"/>
                <scope line="693"/>
                <declaration name="delete" type="boolean" line="696"/>
                <declaration name="update" type="boolean" line="697"/>
                <declaration name="register" type="boolean" line="698"/>
                <declaration name="count" type="int" line="699"/>
                <scope line="700">
                    <declaration name="arg" type="String" line="701"/>
                    <scope line="702"/>
                    <scope line="706"/>
                    <scope line="709"/>
                    <scope line="712"/>
                    <scope line="715"/>
                </scope>
                <scope line="721">
                    <scope line="722"/>
                    <scope line="725">
                        <declaration name="javaSvcTags" type="ServiceTag[]" line="726"/>
                        <declaration name="archs" type="String[]" line="727"/>
                        <scope line="728"/>
                        <scope line="731"/>
                    </scope>
                    <scope line="735">
                        <declaration name="regData" type="RegistrationData" line="736"/>
                        <scope line="737"/>
                    </scope>
                </scope>
                <scope line="743">
                    <scope line="745"/>
                </scope>
                <scope line="749">
                    <scope line="750"/>
                </scope>
                <scope line="754">
                    <scope line="756"/>
                </scope>
            </method>
            <method name="usage" type="void" line="762"/>
        </class>
    </source>