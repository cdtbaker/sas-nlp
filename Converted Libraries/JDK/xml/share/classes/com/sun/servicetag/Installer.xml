<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.servicetag">
        <import package="java.io"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Locale"/>
        <import package="java.util.Properties"/>
        <import package="java.util.Set"/>
        <import package="java.util.List"/>
        <import package="java.util.ArrayList"/>
        <import package="com.sun.servicetag.Util"/>
        <class name="Installer" line="37">
            <comment line="42">
                System properties for testing                
            </comment>
            <comment line="87">
                Implementation of ServiceTag.getJavaServiceTag(String) method                
            </comment>
            <comment line="700">
                Remove the offline registration pages                
            </comment>
            <javadoc line="37">
                Service Tag Installer for Java SE.                
            </javadoc>
            <declaration name="SVCTAG_DIR_PATH" type="String" line="42"/>
            <declaration name="SVCTAG_ENABLE_REGISTRATION" type="String" line="44"/>
            <declaration name="ORACLE" type="String" line="46"/>
            <declaration name="SUN" type="String" line="47"/>
            <declaration name="REGISTRATION_XML" type="String" line="48"/>
            <declaration name="SERVICE_TAG_FILE" type="String" line="49"/>
            <declaration name="REGISTRATION_HTML_NAME" type="String" line="50"/>
            <declaration name="knownSupportedLocales" type="Locale[]" line="52"/>
            <declaration name="javaHome" type="String" line="57"/>
            <declaration name="svcTagDir" type="File" line="58"/>
            <declaration name="serviceTagFile" type="File" line="59"/>
            <declaration name="regXmlFile" type="File" line="60"/>
            <declaration name="registration" type="RegistrationData" line="61"/>
            <declaration name="supportRegistration" type="boolean" line="62"/>
            <declaration name="registerHtmlParent" type="String" line="63"/>
            <declaration name="supportedLocales" type="Set&lt;Locale&gt;" line="64"/>
            <declaration name="swordfishProps" type="Properties" line="65"/>
            <declaration name="jreArchs" type="String[]" line="66"/>
            <scope line="67">
                <declaration name="dir" type="String" line="68"/>
                <scope line="69"/>
                <scope line="71"/>
                <scope line="76"/>
                <scope line="78"/>
            </scope>
            <method name="Installer" type="constructor" line="83"/>
            <method name="getJavaServiceTag" type="ServiceTag" line="87">
                <params>
                    <param name="source" type="String"/>
                </params>
                <comment line="90">
                    Products bundling this implementation may run on                    
                </comment>
                <comment line="91">
                    Mac OS which is not a Sun/Oracle JDK                    
                </comment>
                <comment line="96">
                    Check if we have the swordfish entries for this JRE version                    
                </comment>
                <comment line="102">
                    Check if the service tag created by this bundle owner                    
                </comment>
                <comment line="104">
                    Install the system service tag if supported                    
                </comment>
                <comment line="105">
                    stclient may be installed after the service tag creation                    
                </comment>
                <comment line="112">
                    in case any exception thrown during the cleanup                    
                </comment>
                <comment line="115">
                    re-create a new one for this bundle owner                    
                </comment>
                <comment line="116">
                    first delete the registration data                    
                </comment>
                <comment line="120">
                    create service tag and generate new register.html pages                    
                </comment>
                <declaration name="vendor" type="String" line="88"/>
                <scope line="89"/>
                <declaration name="cleanup" type="boolean" line="94"/>
                <scope line="95">
                    <scope line="97"/>
                    <declaration name="st" type="ServiceTag" line="101"/>
                    <scope line="103">
                        <scope line="106"/>
                    </scope>
                </scope>
                <scope line="122">
                    <scope line="123">
                        <scope line="124"/>
                        <scope line="127"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="134">
                Returns the Java SE registration data located in
                  the &lt;JRE&gt;/lib/servicetag/registration.xml by default.                
                <throws>
                    IllegalArgumentException if the registration data
                      is of invalid format.                    
                </throws>
            </javadoc>
            <method name="getRegistrationData" type="RegistrationData" line="142">
                <scope line="143"/>
                <scope line="146">
                    <declaration name="in" type="BufferedInputStream" line="147"/>
                    <scope line="148"/>
                    <scope line="151"/>
                    <scope line="155">
                        <scope line="156"/>
                    </scope>
                </scope>
                <scope line="160"/>
            </method>
            <javadoc line="166">
                Write the registration data to the registration.xml file.
                  The offline registration page has to be regenerated with
                  the new registration data.                
                <throws>
                    java.io.IOException                    
                </throws>
            </javadoc>
            <method name="writeRegistrationXml" type="void" line="175">
                <comment line="177">
                    This check is for NetBeans or other products that                    
                </comment>
                <comment line="178">
                    bundles this com.sun.servicetag implementation for                    
                </comment>
                <comment line="179">
                    pre-6u5 release.                    
                </comment>
                <comment line="185">
                    regenerate the new offline registration page                    
                </comment>
                <scope line="176">
                    <scope line="180"/>
                </scope>
                <declaration name="out" type="BufferedOutputStream" line="189"/>
                <scope line="190"/>
                <scope line="193"/>
                <scope line="197">
                    <scope line="198"/>
                </scope>
            </method>
            <javadoc line="204">
                Returns the instance urn(s) stored in the servicetag file
                  or empty set if file not exists.                
            </javadoc>
            <method name="getInstalledURNs" type="Set<String>" line="208">
                <declaration name="urnSet" type="Set&lt;String&gt;" line="209"/>
                <scope line="210">
                    <declaration name="in" type="BufferedReader" line="211"/>
                    <scope line="212">
                        <declaration name="urn" type="String" line="214"/>
                        <scope line="215">
                            <scope line="217"/>
                        </scope>
                    </scope>
                    <scope line="221">
                        <scope line="222"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="230">
                Return the Java SE service tag(s) if it exists.
                  Typically only one Java SE service tag but it could have two for
                  Solaris 32-bit and 64-bit on the same install directory.                
                <return>
                    the service tag(s) for Java SE                    
                </return>
            </javadoc>
            <method name="getJavaServiceTagArray" type="ServiceTag[]" line="237">
                <declaration name="regData" type="RegistrationData" line="238"/>
                <declaration name="svcTags" type="Set&lt;ServiceTag&gt;" line="239"/>
                <declaration name="result" type="Set&lt;ServiceTag&gt;" line="240"/>
                <declaration name="props" type="Properties" line="242"/>
                <declaration name="jdkUrn" type="String" line="243"/>
                <declaration name="jreUrn" type="String" line="244"/>
                <scope line="245">
                    <scope line="247"/>
                </scope>
            </method>
            <javadoc line="254">
                Returns the Java SE service tag for this running platform;
                  or null if not exist.
                  This method will return the 64-bit service tag if the JDK
                  supports both 32-bit and 64-bit if already created.                
            </javadoc>
            <method name="getJavaServiceTag" type="ServiceTag" line="260">
                <declaration name="definedId" type="String" line="261"/>
                <scope line="262">
                    <scope line="263"/>
                </scope>
            </method>
            <javadoc line="270">
                Create a service tag for Java SE and install in the system
                  service tag registry if supported.
                  A registration data &lt;JRE&gt;/lib/servicetag/registration.xml
                  will be created to storeToXML the XML entry for Java SE service tag.
                  If the system supports service tags, this method will install
                  the Java SE service tag in the system service tag registry and
                  its &lt;tt&gt;instance_urn&lt;/tt&gt; will be stored to &lt;JRE&gt;/lib/servicetag/servicetag.
                  If &lt;JRE&gt;/lib/servicetag/registration.xml exists but is not installed
                  in the system service tag registry (i.e. servicetag doesn&apos;t exist),
                  this method will install it as described above.
                  If the system supports service tag, stclient will be used
                  to create the Java SE service tag.
                  A Solaris 32-bit and 64-bit JDK will be installed in the same
                  directory but the registration.xml will have 2 service tags.
                  The servicetag file will also contain 2 instance_urns for that case.                
            </javadoc>
            <method name="createServiceTag" type="ServiceTag" line="292">
                <params>
                    <param name="svcTagSource" type="String"/>
                </params>
                <comment line="293">
                    determine if a new service tag is needed to be created                    
                </comment>
                <comment line="299">
                    Add the new service tag in the registration data                    
                </comment>
                <comment line="303">
                    Add the service tag to the registration data in JDK/JRE                    
                </comment>
                <comment line="306">
                    add if there is a service tag for the OS                    
                </comment>
                <comment line="311">
                    write to the registration.xml                    
                </comment>
                <comment line="315">
                    Install the system service tag if supported                    
                </comment>
                <declaration name="newSvcTag" type="ServiceTag" line="294"/>
                <scope line="295"/>
                <scope line="300">
                    <declaration name="regData" type="RegistrationData" line="301"/>
                    <declaration name="osTag" type="ServiceTag" line="307"/>
                    <scope line="308"/>
                </scope>
                <scope line="316"/>
            </method>
            <method name="installSystemServiceTag" type="void" line="322">
                <comment line="323">
                    only install the service tag in the registry if                    
                </comment>
                <comment line="324">
                    it has permission to write the servicetag file.                    
                </comment>
                <comment line="334">
                    Add the service tag in the system service tag registry                    
                </comment>
                <comment line="335">
                    if not installed                    
                </comment>
                <scope line="326"/>
                <declaration name="urns" type="Set&lt;String&gt;" line="330"/>
                <declaration name="javaSvcTags" type="ServiceTag[]" line="331"/>
                <scope line="332">
                    <scope line="333">
                        <declaration name="instanceURN" type="String" line="336"/>
                        <scope line="337"/>
                    </scope>
                </scope>
            </method>
            <method name="newServiceTag" type="ServiceTag" line="345">
                <params>
                    <param name="svcTagSource" type="String"/>
                </params>
                <comment line="346">
                    Load the swoRDFish information for the service tag creation                    
                </comment>
                <comment line="349">
                    Determine the product URN and name                    
                </comment>
                <comment line="354">
                    &lt;HOME&gt;/jre exists which implies it&apos;s a JDK                    
                </comment>
                <comment line="358">
                    Otherwise, it&apos;s a JRE                    
                </comment>
                <declaration name="props" type="Properties" line="347"/>
                <declaration name="productURN" type="String" line="350"/>
                <declaration name="productName" type="String" line="351"/>
                <scope line="353"/>
                <scope line="357"/>
            </method>
            <javadoc line="376">
                Delete the registration data, the offline registration pages and
                  the service tags in the system service tag registry if installed.
                  The registration.xml and servicetag file will be removed.                
            </javadoc>
            <method name="deleteRegistrationData" type="void" line="383">
                <comment line="385">
                    delete the offline registration page                    
                </comment>
                <comment line="388">
                    Remove the service tag from the system ST registry if exists                    
                </comment>
                <comment line="397">
                    Delete the registration.xml and servicetag files if exists                    
                </comment>
                <scope line="384">
                    <declaration name="urns" type="Set&lt;String&gt;" line="389"/>
                    <scope line="390">
                        <scope line="391"/>
                    </scope>
                </scope>
                <scope line="396">
                    <scope line="398">
                        <scope line="399"/>
                    </scope>
                    <scope line="403">
                        <scope line="404"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="411">
                Updates the registration data to contain one single service tag
                  for the running Java runtime.                
            </javadoc>
            <method name="updateRegistrationData" type="void" line="416">
                <params>
                    <param name="svcTagSource" type="String"/>
                </params>
                <comment line="427">
                    remove it from the system service tag registry if exists                    
                </comment>
                <declaration name="regData" type="RegistrationData" line="417"/>
                <declaration name="curSvcTag" type="ServiceTag" line="418"/>
                <declaration name="javaSvcTags" type="ServiceTag[]" line="420"/>
                <declaration name="urns" type="Set&lt;String&gt;" line="421"/>
                <scope line="422">
                    <scope line="423">
                        <declaration name="instanceURN" type="String" line="424"/>
                        <scope line="428"/>
                    </scope>
                </scope>
            </method>
            <method name="writeInstalledUrns" type="void" line="437">
                <comment line="438">
                    if the Registry is not supported,                    
                </comment>
                <comment line="439">
                    remove the servicetag file                    
                </comment>
                <comment line="451">
                    Write the instance_run to the servicetag file                    
                </comment>
                <scope line="440"/>
                <declaration name="out" type="PrintWriter" line="445"/>
                <scope line="446">
                    <declaration name="javaSvcTags" type="ServiceTag[]" line="449"/>
                    <scope line="450">
                        <declaration name="instanceURN" type="String" line="452"/>
                    </scope>
                </scope>
                <scope line="455">
                    <scope line="456"/>
                </scope>
            </method>
            <javadoc line="462">
                Load the values associated with the swoRDFish metadata entries
                  for Java SE. The swoRDFish metadata entries are different for
                  different release.                
                <param>
                    version Version of Java SE                    
                </param>
            </javadoc>
            <method name="loadSwordfishEntries" type="Properties" line="469">
                <comment line="474">
                    The version string for Java SE 6 is 1.6.0                    
                </comment>
                <comment line="475">
                    We just need the minor number in the version string                    
                </comment>
                <scope line="470"/>
                <declaration name="version" type="int" line="476"/>
                <declaration name="filename" type="String" line="478"/>
                <declaration name="in" type="InputStream" line="480"/>
                <scope line="481"/>
                <scope line="485"/>
                <scope line="487"/>
            </method>
            <javadoc line="493">
                Returns the product defined instance ID for Java SE.
                  It is a list of comma-separated name/value pairs:
                  &quot;id=&lt;full-version&gt;  &lt;arch&gt; [&lt;arch&gt;]&quot;
                  &quot;dir=&lt;java.home system property value&gt;&quot;
                  where &lt;full-version&gt; is the full version string of the JRE,
                  &lt;arch&gt; is the architecture that the runtime supports
                  (i.e. &quot;sparc&quot;, &quot;sparcv9&quot;, &quot;i386&quot;, &quot;amd64&quot; (ISA list))
                  For Solaris, it can be dual mode that can support both
                  32-bit and 64-bit. the &quot;id&quot; will be set to
                  &quot;1.6.0_03-b02 sparc sparcv9&quot;
                  The &quot;dir&quot; property is included in the service tag to enable
                  the Service Tag software to determine if a service tag for
                  Java SE is invalid and perform appropriate service tag
                  cleanup if necessary.  See RFE# 6574781 Service Tags Enhancement.                
            </javadoc>
            <method name="getProductDefinedId" type="String" line="513">
                <comment line="528">
                    if it exceeds the limit, we will not include the location                    
                </comment>
                <declaration name="definedId" type="StringBuilder" line="514"/>
                <declaration name="archs" type="String[]" line="518"/>
                <scope line="519"/>
                <declaration name="location" type="String" line="523"/>
                <scope line="524"/>
                <scope line="527">
                    <scope line="529"/>
                </scope>
            </method>
            <javadoc line="537">
                Returns the architectures that the runtime supports
                  (i.e. &quot;sparc&quot;, &quot;sparcv9&quot;, &quot;i386&quot;, &quot;amd64&quot; (ISA list))
                  The directory name where libjava.so is located.
                  On Windows, returns the &quot;os.arch&quot; system property value.                
            </javadoc>
            <method name="getJreArchs" type="String[]" line="544">
                <comment line="553">
                    Traverse the directories under &lt;JRE&gt;/lib.                    
                </comment>
                <comment line="554">
                    If &lt;JRE&gt;/lib/&lt;arch&gt;/libjava.so exists, add &lt;arch&gt;                    
                </comment>
                <comment line="555">
                    to the product defined ID                    
                </comment>
                <comment line="567">
                    Windows - append the os.arch                    
                </comment>
                <scope line="545"/>
                <declaration name="archs" type="Set&lt;String&gt;" line="549"/>
                <declaration name="os" type="String" line="551"/>
                <scope line="552">
                    <declaration name="dir" type="File" line="556"/>
                    <scope line="557">
                        <declaration name="children" type="String[]" line="558"/>
                        <scope line="559">
                            <declaration name="f" type="File" line="560"/>
                            <scope line="561"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="566"/>
            </method>
            <javadoc line="574">
                Return the zonename if zone is supported; otherwise, return
                  &quot;global&quot;.                
            </javadoc>
            <method name="getZoneName" type="String" line="578">
                <comment line="583">
                    com.sun.servicetag package has to be compiled with JDK 5 as well                    
                </comment>
                <comment line="584">
                    JDK 5 doesn&apos;t support the File.canExecute() method.                    
                </comment>
                <comment line="585">
                    Risk not checking isExecute() for the zonename command is very low.                    
                </comment>
                <declaration name="zonename" type="String" line="579"/>
                <declaration name="command" type="String" line="581"/>
                <declaration name="f" type="File" line="582"/>
                <scope line="586">
                    <declaration name="pb" type="ProcessBuilder" line="587"/>
                    <declaration name="p" type="Process" line="588"/>
                    <declaration name="output" type="String" line="589"/>
                    <scope line="590"/>
                </scope>
            </method>
            <method name="getRegisterHtmlParent" type="String" line="598">
                <comment line="600">
                    register.html is put under the JDK directory                    
                </comment>
                <comment line="604">
                    j2se non-image build                    
                </comment>
                <comment line="608">
                    initialize the supported locales                    
                </comment>
                <comment line="611">
                    Determine the location of the offline registration page                    
                </comment>
                <comment line="614">
                    Default is &lt;JDK&gt;/register.html                    
                </comment>
                <scope line="599">
                    <declaration name="htmlDir" type="File" line="600"/>
                    <scope line="601"/>
                    <scope line="603"/>
                    <declaration name="path" type="String" line="612"/>
                    <scope line="613"/>
                    <scope line="616">
                        <declaration name="f" type="File" line="617"/>
                        <scope line="619"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="628">
                Returns the File object of the offline registration page localized
                  for the default locale in the JDK directory.                
            </javadoc>
            <method name="getRegistrationHtmlPage" type="File" line="632">
                <comment line="634">
                    No register.html page generated if JRE                    
                </comment>
                <comment line="640">
                    check if the offline registration page is already generated                    
                </comment>
                <comment line="643">
                    Generate the localized version of the offline registration Page                    
                </comment>
                <comment line="650">
                    if the locale is not English and is supported by JDK                    
                </comment>
                <comment line="651">
                    set to the appropriate offline registration page;                    
                </comment>
                <comment line="652">
                    otherwise,set to register.html.                    
                </comment>
                <scope line="633"/>
                <declaration name="parent" type="String" line="638"/>
                <declaration name="f" type="File" line="641"/>
                <scope line="642"/>
                <declaration name="name" type="String" line="647"/>
                <declaration name="locale" type="Locale" line="648"/>
                <scope line="649"/>
                <declaration name="htmlFile" type="File" line="655"/>
                <scope line="656"/>
                <scope line="661"/>
                <scope line="663"/>
            </method>
            <method name="getDefaultLocale" type="Locale" line="669">
                <declaration name="candidateLocales" type="List&lt;Locale&gt;" line="670"/>
                <scope line="671">
                    <scope line="672"/>
                </scope>
            </method>
            <method name="getCandidateLocales" type="List<Locale>" line="679">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
                <declaration name="language" type="String" line="680"/>
                <declaration name="country" type="String" line="681"/>
                <declaration name="variant" type="String" line="682"/>
                <declaration name="locales" type="List&lt;Locale&gt;" line="684"/>
                <scope line="685"/>
                <scope line="688"/>
                <scope line="692"/>
            </method>
            <method name="deleteRegistrationHtmlPage" type="void" line="700">
                <declaration name="parent" type="String" line="701"/>
                <scope line="702"/>
                <scope line="706">
                    <declaration name="name" type="String" line="707"/>
                    <scope line="708"/>
                    <declaration name="f" type="File" line="711"/>
                    <scope line="712">
                        <scope line="713"/>
                    </scope>
                </scope>
            </method>
            <method name="initSupportedLocales" type="void" line="720">
                <params>
                    <param name="jdkDir" type="File"/>
                </params>
                <comment line="722">
                    initialize with the known supported locales                    
                </comment>
                <comment line="728">
                    Determine unknown supported locales if any                    
                </comment>
                <comment line="729">
                    by finding the localized version of README.html                    
                </comment>
                <comment line="730">
                    This prepares if a new locale in JDK is supported in                    
                </comment>
                <comment line="731">
                    e.g. in the OpenSource world                    
                </comment>
                <comment line="748">
                    English version                    
                </comment>
                <comment line="757">
                    ignore                    
                </comment>
                <scope line="721">
                    <scope line="723"/>
                </scope>
                <anonymous_class line="732">
                    <method name="accept" type="boolean" line="733">
                        <params>
                            <param name="dir" type="File"/>
                            <param name="name" type="String"/>
                        </params>
                        <declaration name="fname" type="String" line="734"/>
                        <scope line="735"/>
                    </method>
                </anonymous_class>
                <declaration name="ff" type="FilenameFilter" line="732"/>
                <declaration name="readmes" type="String[]" line="742"/>
                <scope line="743">
                    <declaration name="basename" type="String" line="744"/>
                    <declaration name="ss" type="String[]" line="745"/>
                </scope>
                <scope line="761">
                    <scope line="763"/>
                </scope>
            </method>
            <declaration name="JDK_HEADER_PNG_KEY" type="String" line="769"/>
            <declaration name="JDK_VERSION_KEY" type="String" line="770"/>
            <declaration name="REGISTRATION_URL_KEY" type="String" line="771"/>
            <declaration name="REGISTRATION_PAYLOAD_KEY" type="String" line="772"/>
            <method name="generateRegisterHtml" type="void" line="775">
                <params>
                    <param name="parent" type="String"/>
                </params>
                <comment line="780">
                    product name is not translated                    
                </comment>
                <comment line="784">
                    Make sure it uses the canonical path before getting the URI.                    
                </comment>
                <comment line="788">
                    Format the registration data in one single line                    
                </comment>
                <comment line="820">
                    if the resource file is missing                    
                </comment>
                <comment line="850">
                    It&apos;s safe for this finally block to have two close statements                    
                </comment>
                <comment line="851">
                    consecutively as PrintWriter.close doesn&apos;t throw IOException.                    
                </comment>
                <declaration name="version" type="int" line="776"/>
                <declaration name="update" type="int" line="777"/>
                <declaration name="jdkVersion" type="String" line="778"/>
                <scope line="779"/>
                <declaration name="regData" type="RegistrationData" line="783"/>
                <declaration name="img" type="File" line="785"/>
                <declaration name="headerImageSrc" type="String" line="786"/>
                <declaration name="payload" type="StringBuilder" line="789"/>
                <declaration name="xml" type="String" line="790"/>
                <declaration name="reader" type="BufferedReader" line="791"/>
                <scope line="792">
                    <declaration name="line" type="String" line="793"/>
                    <scope line="794"/>
                </scope>
                <scope line="797"/>
                <declaration name="resourceFilename" type="String" line="801"/>
                <scope line="802">
                    <declaration name="name" type="String" line="803"/>
                    <declaration name="resource" type="String" line="804"/>
                    <scope line="805"/>
                    <declaration name="f" type="File" line="809"/>
                    <declaration name="in" type="InputStream" line="810"/>
                    <declaration name="br" type="BufferedReader" line="811"/>
                    <declaration name="pw" type="PrintWriter" line="812"/>
                    <declaration name="registerURL" type="String" line="813"/>
                    <scope line="817">
                        <scope line="819">
                            <scope line="821"/>
                        </scope>
                        <scope line="826"/>
                        <scope line="830">
                            <declaration name="line" type="String" line="833"/>
                            <scope line="834">
                                <declaration name="output" type="String" line="835"/>
                                <scope line="836"/>
                                <scope line="838"/>
                                <scope line="840"/>
                                <scope line="842"/>
                            </scope>
                        </scope>
                        <scope line="849">
                            <scope line="852"/>
                            <scope line="855"/>
                        </scope>
                    </scope>
                    <scope line="859">
                        <scope line="860"/>
                    </scope>
                </scope>
            </method>
            <declaration name="MAX_SOURCE_LEN" type="int" line="867"/>
            <javadoc line="869">
                A utility class to create a service tag for Java SE.
                  &lt;p&gt;
                  &lt;b&gt;Usage:&lt;/b&gt;&lt;br&gt;
                  &lt;blockquote&gt;&lt;tt&gt;
                  &amp;lt;JAVA_HOME&amp;gt;/bin/java com.sun.servicetag.Installer
                  &lt;/tt&gt;&lt;/blockquote&gt;
                  &lt;p&gt;                
            </javadoc>
            <method name="main" type="void" line="878">
                <params>
                    <param name="args" type="String[]"/>
                </params>
                <comment line="889">
                    Parse the options (arguments starting with &quot;-&quot; )                    
                </comment>
                <comment line="897">
                    skip empty arguments                    
                </comment>
                <comment line="921">
                    64-bit has been uninstalled                    
                </comment>
                <comment line="922">
                    so remove the service tag                    
                </comment>
                <comment line="925">
                    create the service tag                    
                </comment>
                <comment line="931">
                    Registration is only supported by JDK                    
                </comment>
                <comment line="932">
                    For testing purpose, override with a &quot;servicetag.enable.registration&quot; property                    
                </comment>
                <declaration name="source" type="String" line="879"/>
                <declaration name="runtimeName" type="String" line="880"/>
                <scope line="881"/>
                <scope line="885"/>
                <declaration name="delete" type="boolean" line="890"/>
                <declaration name="update" type="boolean" line="891"/>
                <declaration name="register" type="boolean" line="892"/>
                <declaration name="count" type="int" line="893"/>
                <scope line="894">
                    <declaration name="arg" type="String" line="895"/>
                    <scope line="896"/>
                    <scope line="902"/>
                    <scope line="904"/>
                    <scope line="906"/>
                    <scope line="908"/>
                </scope>
                <scope line="914">
                    <scope line="915"/>
                    <scope line="917">
                        <declaration name="javaSvcTags" type="ServiceTag[]" line="918"/>
                        <declaration name="archs" type="String[]" line="919"/>
                        <scope line="920"/>
                        <scope line="924"/>
                    </scope>
                    <scope line="930">
                        <declaration name="regData" type="RegistrationData" line="934"/>
                        <scope line="935"/>
                    </scope>
                </scope>
                <scope line="942">
                    <scope line="944"/>
                </scope>
                <scope line="947">
                    <scope line="948"/>
                </scope>
                <scope line="951">
                    <scope line="953"/>
                </scope>
            </method>
            <method name="usage" type="void" line="960"/>
        </class>
    </source>