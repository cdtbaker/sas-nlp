<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.servicetag">
        <import package="java.io"/>
        <import package="java.net.URL"/>
        <import package="java.util.Collection"/>
        <import package="java.util.Map"/>
        <import package="java.util.Set"/>
        <import package="org.w3c.dom.Document"/>
        <import package="org.w3c.dom.Element"/>
        <import package="org.w3c.dom.Node"/>
        <import package="org.w3c.dom.NodeList"/>
        <import package="org.xml.sax.SAXException"/>
        <import package="org.xml.sax.InputSource"/>
        <import package="javax.xml.XMLConstants"/>
        <import package="javax.xml.parsers.DocumentBuilder"/>
        <import package="javax.xml.parsers.DocumentBuilderFactory"/>
        <import package="javax.xml.parsers.ParserConfigurationException"/>
        <import package="javax.xml.validation.Schema"/>
        <import package="javax.xml.validation.SchemaFactory"/>
        <import package="javax.xml.validation.Validator"/>
        <import package="javax.xml.transform.OutputKeys"/>
        <import package="javax.xml.transform.Transformer"/>
        <import package="javax.xml.transform.TransformerException"/>
        <import package="javax.xml.transform.TransformerFactory"/>
        <import package="javax.xml.transform.TransformerConfigurationException"/>
        <import package="javax.xml.transform.dom.DOMSource"/>
        <import package="javax.xml.transform.stream.StreamResult"/>
        <class name="RegistrationDocument" line="59">
            <comment line="133">
                initialize a document from an input stream                
            </comment>
            <comment line="160">
                initialize a new document for the registration data                
            </comment>
            <comment line="182">
                Transform the current DOM tree with the given output stream.                
            </comment>
            <comment line="275">
                Constructs service tags from the document                
            </comment>
            <comment line="287">
                build environment map from the document                
            </comment>
            <comment line="301">
                add the nodes representing the environment map in the document                
            </comment>
            <comment line="338">
                Constructs one ServiceTag instance from a service tag element root                
            </comment>
            <javadoc line="59">
                XML Support Class for Product Registration.                
            </javadoc>
            <declaration name="REGISTRATION_DATA_SCHEMA" type="String" line="64"/>
            <declaration name="REGISTRATION_DATA_VERSION" type="String" line="66"/>
            <declaration name="SERVICE_TAG_VERSION" type="String" line="67"/>
            <declaration name="ST_NODE_REGISTRATION_DATA" type="String" line="68"/>
            <declaration name="ST_ATTR_REGISTRATION_VERSION" type="String" line="69"/>
            <declaration name="ST_NODE_ENVIRONMENT" type="String" line="70"/>
            <declaration name="ST_NODE_HOSTNAME" type="String" line="71"/>
            <declaration name="ST_NODE_HOST_ID" type="String" line="72"/>
            <declaration name="ST_NODE_OS_NAME" type="String" line="73"/>
            <declaration name="ST_NODE_OS_VERSION" type="String" line="74"/>
            <declaration name="ST_NODE_OS_ARCH" type="String" line="75"/>
            <declaration name="ST_NODE_SYSTEM_MODEL" type="String" line="76"/>
            <declaration name="ST_NODE_SYSTEM_MANUFACTURER" type="String" line="77"/>
            <declaration name="ST_NODE_CPU_MANUFACTURER" type="String" line="78"/>
            <declaration name="ST_NODE_SERIAL_NUMBER" type="String" line="79"/>
            <declaration name="ST_NODE_REGISTRY" type="String" line="80"/>
            <declaration name="ST_ATTR_REGISTRY_URN" type="String" line="81"/>
            <declaration name="ST_ATTR_REGISTRY_VERSION" type="String" line="82"/>
            <declaration name="ST_NODE_SERVICE_TAG" type="String" line="83"/>
            <declaration name="ST_NODE_INSTANCE_URN" type="String" line="84"/>
            <declaration name="ST_NODE_PRODUCT_NAME" type="String" line="85"/>
            <declaration name="ST_NODE_PRODUCT_VERSION" type="String" line="86"/>
            <declaration name="ST_NODE_PRODUCT_URN" type="String" line="87"/>
            <declaration name="ST_NODE_PRODUCT_PARENT_URN" type="String" line="88"/>
            <declaration name="ST_NODE_PRODUCT_PARENT" type="String" line="89"/>
            <declaration name="ST_NODE_PRODUCT_DEFINED_INST_ID" type="String" line="90"/>
            <declaration name="ST_NODE_PRODUCT_VENDOR" type="String" line="91"/>
            <declaration name="ST_NODE_PLATFORM_ARCH" type="String" line="92"/>
            <declaration name="ST_NODE_TIMESTAMP" type="String" line="93"/>
            <declaration name="ST_NODE_CONTAINER" type="String" line="94"/>
            <declaration name="ST_NODE_SOURCE" type="String" line="95"/>
            <declaration name="ST_NODE_INSTALLER_UID" type="String" line="96"/>
            <method name="load" type="RegistrationData" line="98">
                <params>
                    <param name="in" type="InputStream"/>
                </params>
                <comment line="101">
                    Gets the registration URN                    
                </comment>
                <comment line="107">
                    Construct a new RegistrationData object from the DOM tree                    
                </comment>
                <comment line="108">
                    Initialize the environment map and service tags                    
                </comment>
                <declaration name="document" type="Document" line="99"/>
                <declaration name="root" type="Element" line="102"/>
                <declaration name="registryRoot" type="Element" line="103"/>
                <declaration name="urn" type="String" line="105"/>
                <declaration name="regData" type="RegistrationData" line="109"/>
                <declaration name="envRoot" type="Element" line="112"/>
            </method>
            <method name="store" type="void" line="118">
                <params>
                    <param name="os" type="OutputStream"/>
                    <param name="registration" type="RegistrationData"/>
                </params>
                <comment line="119">
                    create a new document with the root node                    
                </comment>
                <comment line="122">
                    create the nodes for the environment map and the service tags                    
                </comment>
                <comment line="123">
                    in the registration data                    
                </comment>
                <declaration name="document" type="Document" line="120"/>
            </method>
            <method name="initializeDocument" type="Document" line="133">
                <params>
                    <param name="in" type="InputStream"/>
                </params>
                <comment line="136">
                    XML schema for validation                    
                </comment>
                <comment line="151">
                    Parser with specific options can&apos;t be built                    
                </comment>
                <comment line="152">
                    should not reach here                    
                </comment>
                <declaration name="factory" type="DocumentBuilderFactory" line="134"/>
                <scope line="135">
                    <declaration name="sf" type="SchemaFactory" line="137"/>
                    <declaration name="xsdUrl" type="URL" line="138"/>
                    <declaration name="schema" type="Schema" line="139"/>
                    <declaration name="validator" type="Validator" line="140"/>
                    <declaration name="builder" type="DocumentBuilder" line="142"/>
                    <declaration name="doc" type="Document" line="143"/>
                </scope>
                <scope line="146">
                    <declaration name="e" type="IllegalArgumentException" line="147"/>
                </scope>
                <scope line="150">
                    <declaration name="x" type="InternalError" line="153"/>
                </scope>
            </method>
            <method name="initializeDocument" type="Document" line="160">
                <comment line="166">
                    initialize the document with the registration_data root                    
                </comment>
                <comment line="173">
                    Parser with specified options can&apos;t be built                    
                </comment>
                <comment line="174">
                    should not reach here                    
                </comment>
                <declaration name="factory" type="DocumentBuilderFactory" line="161"/>
                <scope line="162">
                    <declaration name="builder" type="DocumentBuilder" line="163"/>
                    <declaration name="doc" type="Document" line="164"/>
                    <declaration name="root" type="Element" line="167"/>
                </scope>
                <scope line="172">
                    <declaration name="x" type="InternalError" line="175"/>
                </scope>
            </method>
            <method name="transform" type="void" line="182">
                <params>
                    <param name="document" type="Document"/>
                    <param name="os" type="OutputStream"/>
                </params>
                <comment line="184">
                    Use a Transformer for output                    
                </comment>
                <comment line="197">
                    Should not reach here                    
                </comment>
                <comment line="202">
                    Error generated by the parser                    
                </comment>
                <comment line="203">
                    Should not reach here                    
                </comment>
                <comment line="208">
                    Error generated by the transformer                    
                </comment>
                <scope line="183">
                    <declaration name="tFactory" type="TransformerFactory" line="185"/>
                    <declaration name="transformer" type="Transformer" line="188"/>
                </scope>
                <scope line="196">
                    <declaration name="x" type="InternalError" line="198"/>
                </scope>
                <scope line="201">
                    <declaration name="x" type="InternalError" line="204"/>
                </scope>
                <scope line="207">
                    <declaration name="x" type="InternalError" line="209"/>
                </scope>
            </method>
            <method name="addServiceTagRegistry" type="void" line="217">
                <params>
                    <param name="document" type="Document"/>
                    <param name="registryURN" type="String"/>
                    <param name="svcTags" type="Set<ServiceTag>"/>
                </params>
                <comment line="218">
                    add service tag registry node and its attributes                    
                </comment>
                <comment line="226">
                    adds the elements for the service tags                    
                </comment>
                <declaration name="reg" type="Element" line="219"/>
                <declaration name="root" type="Element" line="223"/>
                <scope line="227"/>
            </method>
            <method name="addServiceTagElement" type="void" line="234">
                <params>
                    <param name="document" type="Document"/>
                    <param name="registryRoot" type="Element"/>
                    <param name="st" type="ServiceTag"/>
                </params>
                <declaration name="svcTag" type="Element" line="235"/>
            </method>
            <method name="addChildElement" type="void" line="268">
                <params>
                    <param name="document" type="Document"/>
                    <param name="root" type="Element"/>
                    <param name="element" type="String"/>
                    <param name="text" type="String"/>
                </params>
                <declaration name="node" type="Element" line="269"/>
            </method>
            <method name="addServiceTags" type="void" line="276">
                <params>
                    <param name="registryRoot" type="Element"/>
                    <param name="registration" type="RegistrationData"/>
                </params>
                <declaration name="children" type="NodeList" line="277"/>
                <declaration name="length" type="int" line="278"/>
                <scope line="279">
                    <declaration name="svcTagElement" type="Element" line="280"/>
                    <declaration name="st" type="ServiceTag" line="281"/>
                </scope>
            </method>
            <method name="buildEnvironmentMap" type="void" line="288">
                <params>
                    <param name="envRoot" type="Element"/>
                    <param name="registration" type="RegistrationData"/>
                </params>
            </method>
            <method name="addEnvironmentNodes" type="void" line="302">
                <params>
                    <param name="document" type="Document"/>
                    <param name="envMap" type="Map<String,String>"/>
                </params>
                <declaration name="root" type="Element" line="303"/>
                <declaration name="env" type="Element" line="304"/>
                <declaration name="keys" type="Set&lt;Map.Entry&lt;String,String&gt;&gt;" line="306"/>
                <scope line="307"/>
            </method>
            <method name="getRegistrationDataRoot" type="Element" line="312">
                <params>
                    <param name="doc" type="Document"/>
                </params>
                <declaration name="root" type="Element" line="313"/>
                <scope line="314"/>
            </method>
            <method name="getSingletonElementFromRoot" type="Element" line="322">
                <params>
                    <param name="root" type="Element"/>
                    <param name="name" type="String"/>
                </params>
                <declaration name="children" type="NodeList" line="323"/>
                <declaration name="length" type="int" line="324"/>
                <scope line="325"/>
                <declaration name="e" type="Element" line="329"/>
                <scope line="330"/>
            </method>
            <method name="getServiceTag" type="ServiceTag" line="338">
                <params>
                    <param name="svcTagElement" type="Element"/>
                </params>
            </method>
            <method name="getTextValue" type="String" line="356">
                <params>
                    <param name="e" type="Element"/>
                    <param name="tagName" type="String"/>
                </params>
                <declaration name="value" type="String" line="357"/>
                <declaration name="nl" type="NodeList" line="358"/>
                <scope line="359">
                    <declaration name="el" type="Element" line="360"/>
                    <declaration name="node" type="Node" line="361"/>
                    <scope line="362"/>
                </scope>
            </method>
        </class>
    </source>