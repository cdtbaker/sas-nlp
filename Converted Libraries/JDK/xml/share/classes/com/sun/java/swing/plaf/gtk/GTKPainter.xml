<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.swing.plaf.gtk">
        <import package="sun.awt.UNIXToolkit"/>
        <import package="javax.swing.plaf.synth"/>
        <import package="java.awt"/>
        <import package="javax.swing"/>
        <import package="javax.swing.border"/>
        <import package="javax.swing.plaf"/>
        <import package="com.sun.java.swing.plaf.gtk.GTKConstants.ArrowType"/>
        <import package="com.sun.java.swing.plaf.gtk.GTKConstants.ExpanderStyle"/>
        <import package="com.sun.java.swing.plaf.gtk.GTKConstants.Orientation"/>
        <import package="com.sun.java.swing.plaf.gtk.GTKConstants.PositionType"/>
        <import package="com.sun.java.swing.plaf.gtk.GTKConstants.ShadowType"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.lang.reflect.Method"/>
        <class name="GTKPainter" line="42">
            <extends class="SynthPainter"/>
            <comment line="47">
                Need to support:
                 default_outside_border: Insets when default.
                 interior_focus: Indicates if focus should appear inside border, or
                                       outside border.
                 focus-line-width: Integer giving size of focus border
                 focus-padding: Integer giving padding between border and focus
                        indicator.
                 focus-line-pattern:                
            </comment>
            <comment line="88">
                FORMATTED_TEXT_FIELD                
            </comment>
            <comment line="95">
                TOOL_BAR_DRAG_WINDOW                
            </comment>
            <comment line="105">
                TOOL_BAR                
            </comment>
            <comment line="142">
                PASSWORD_FIELD                
            </comment>
            <comment line="151">
                TEXT_FIELD                
            </comment>
            <comment line="163">
                RADIO_BUTTON
                
                 NOTE: this is called for JCheckBox too                
            </comment>
            <comment line="186">
                RADIO_BUTTON_MENU_ITEM
                
                 NOTE: this is called for JCheckBoxMenuItem too                
            </comment>
            <comment line="210">
                LABEL                
            </comment>
            <comment line="239">
                INTERNAL_FRAME                
            </comment>
            <comment line="248">
                DESKTOP_PANE                
            </comment>
            <comment line="258">
                DESKTOP_ICON                
            </comment>
            <comment line="380">
                ARROW_BUTTON                
            </comment>
            <comment line="507">
                LIST                
            </comment>
            <comment line="536">
                MENU                
            </comment>
            <comment line="545">
                This is called for both MENU and MENU_ITEM                
            </comment>
            <comment line="794">
                SPINNER                
            </comment>
            <comment line="803">
                SPLIT_PANE_DIVIDER                
            </comment>
            <comment line="896">
                TEXT_PANE                
            </comment>
            <comment line="904">
                EDITOR_PANE                
            </comment>
            <comment line="912">
                TEXT_AREA                
            </comment>
            <comment line="921">
                TEXT_FIELD
                
                 NOTE: Combobox and Label, Password and FormattedTextField calls this
                 too.                
            </comment>
            <comment line="993">
                ROOT_PANE                
            </comment>
            <comment line="1002">
                TOGGLE_BUTTON                
            </comment>
            <comment line="1020">
                SCROLL_BAR                
            </comment>
            <comment line="1065">
                SCROLL_BAR_THUMB                
            </comment>
            <comment line="1123">
                TOOL_TIP                
            </comment>
            <comment line="1141">
                TREE_CELL                
            </comment>
            <comment line="1169">
                TREE                
            </comment>
            <comment line="1179">
                VIEWPORT                
            </comment>
            <comment line="1267">
                All icon painting methods are called from under GTK_LOCK                
            </comment>
            <comment line="1374">
                Fill an area with color determined from this context&apos;s Style using the
                 specified GTKColorType                
            </comment>
            <comment line="1391">
                Refer to GTKLookAndFeel for details on this.                
            </comment>
            <comment line="1459">
                TitledBorder implementation for GTK L&amp;F                
            </comment>
            <javadoc line="42">
                @author Joshua Outwater                
                <author>
                    Scott Violet                    
                </author>
            </javadoc>
            <declaration name="POSITIONS" type="PositionType[]" line="56"/>
            <declaration name="SHADOWS" type="ShadowType" line="61"/>
            <declaration name="ENGINE" type="GTKEngine" line="66"/>
            <declaration name="INSTANCE" type="GTKPainter" line="67"/>
            <method name="GTKPainter" type="constructor" line="69"/>
            <method name="getName" type="String" line="72">
                <params>
                    <param name="context" type="SynthContext"/>
                </params>
            </method>
            <method name="paintCheckBoxBackground" type="void" line="78">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="paintCheckBoxMenuItemBackground" type="void" line="83">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="paintFormattedTextFieldBackground" type="void" line="90">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="paintToolBarDragWindowBackground" type="void" line="99">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="paintToolBarBackground" type="void" line="109">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="id" type="Region" line="110"/>
                <declaration name="state" type="int" line="111"/>
                <declaration name="gtkState" type="int" line="112"/>
                <declaration name="orientation" type="int" line="113"/>
                <scope line="114">
                    <scope line="117"/>
                </scope>
            </method>
            <method name="paintToolBarContentBackground" type="void" line="128">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="id" type="Region" line="129"/>
                <declaration name="orientation" type="int" line="130"/>
                <scope line="131">
                    <scope line="132"/>
                </scope>
            </method>
            <method name="paintPasswordFieldBackground" type="void" line="146">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="paintTextFieldBackground" type="void" line="154">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <scope line="155"/>
                <scope line="157"/>
            </method>
            <method name="paintRadioButtonBackground" type="void" line="168">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="id" type="Region" line="169"/>
                <declaration name="gtkState" type="int" line="170"/>
                <scope line="172">
                    <scope line="173">
                        <scope line="174"/>
                    </scope>
                </scope>
            </method>
            <method name="paintRadioButtonMenuItemBackground" type="void" line="191">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="id" type="Region" line="192"/>
                <declaration name="gtkState" type="int" line="193"/>
                <scope line="195">
                    <scope line="196">
                        <scope line="197">
                            <declaration name="shadow" type="ShadowType" line="198"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="paintLabelBackground" type="void" line="214">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="227">
                    If the label is a ListCellRenderer and it&apos;s in a container
                     (CellRendererPane) which is in a JComboBox then we paint the label
                     as a TextField like a gtk_entry for a combobox.                    
                </comment>
                <declaration name="name" type="String" line="215"/>
                <declaration name="c" type="JComponent" line="216"/>
                <declaration name="container" type="Container" line="217"/>
                <scope line="221"/>
                <scope line="233"/>
            </method>
            <method name="paintInternalFrameBorder" type="void" line="243">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="paintDesktopPaneBackground" type="void" line="252">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="254">
                    Does not call into ENGINE for better performance                    
                </comment>
            </method>
            <method name="paintDesktopIconBorder" type="void" line="262">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="paintButtonBackground" type="void" line="267">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="name" type="String" line="268"/>
                <scope line="269"/>
                <scope line="272">
                    <declaration name="button" type="AbstractButton" line="273"/>
                    <declaration name="paintBG" type="boolean" line="274"/>
                    <declaration name="paintFocus" type="boolean" line="276"/>
                    <declaration name="defaultCapable" type="boolean" line="277"/>
                    <declaration name="toolButton" type="boolean" line="279"/>
                </scope>
            </method>
            <method name="paintButtonBackgroundImpl" type="void" line="288">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="id" type="Region"/>
                    <param name="detail" type="String"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="paintBackground" type="boolean"/>
                    <param name="paintFocus" type="boolean"/>
                    <param name="defaultCapable" type="boolean"/>
                    <param name="toolButton" type="boolean"/>
                </params>
                <comment line="299">
                    Paint the default indicator                    
                </comment>
                <comment line="327">
                    Render the box.                    
                </comment>
                <comment line="339">
                    Toolbar buttons should only have their background painted
                     in the PRESSED, SELECTED, or MOUSE_OVER states.                    
                </comment>
                <comment line="345">
                    Otherwise, always paint the button&apos;s background, unless
                     the user has overridden it and we&apos;re in the ENABLED state.                    
                </comment>
                <comment line="361">
                    focus                    
                </comment>
                <declaration name="state" type="int" line="289"/>
                <scope line="290">
                    <scope line="292"/>
                    <declaration name="style" type="GTKStyle" line="299"/>
                    <scope line="300">
                        <declaration name="defaultInsets" type="Insets" line="301"/>
                        <scope line="305"/>
                    </scope>
                    <declaration name="interiorFocus" type="boolean" line="315"/>
                    <declaration name="focusSize" type="int" line="317"/>
                    <declaration name="focusPad" type="int" line="319"/>
                    <declaration name="totalFocusSize" type="int" line="322"/>
                    <declaration name="xThickness" type="int" line="323"/>
                    <declaration name="yThickness" type="int" line="324"/>
                    <scope line="328"/>
                    <declaration name="gtkState" type="int" line="335"/>
                    <declaration name="paintBg" type="boolean" line="336"/>
                    <scope line="337"/>
                    <scope line="343"/>
                    <scope line="350">
                        <declaration name="shadowType" type="ShadowType" line="351"/>
                        <scope line="353"/>
                    </scope>
                    <scope line="361">
                        <scope line="362"/>
                        <scope line="367"/>
                    </scope>
                </scope>
            </method>
            <method name="paintArrowButtonForeground" type="void" line="384">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="direction" type="int"/>
                </params>
                <declaration name="id" type="Region" line="385"/>
                <declaration name="c" type="Component" line="386"/>
                <declaration name="name" type="String" line="387"/>
                <declaration name="arrowType" type="ArrowType" line="389"/>
                <declaration name="detail" type="String" line="401"/>
                <scope line="402">
                    <scope line="403"/>
                    <scope line="405"/>
                </scope>
                <scope line="409"/>
                <scope line="411"/>
                <declaration name="gtkState" type="int" line="415"/>
                <declaration name="shadowType" type="ShadowType" line="417"/>
                <scope line="419">
                    <scope line="421"/>
                </scope>
            </method>
            <method name="paintArrowButtonBackground" type="void" line="432">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="475">
                    The ubuntulooks engine (and presumably others) expect us to
                     first draw the full &quot;spinbutton&quot; background, and then draw
                     the individual &quot;spinbutton_updown&quot; buttons on top of that.
                     Note that it is the state of the JSpinner (not its arrow
                     button) that determines how we draw this background.                    
                </comment>
                <declaration name="id" type="Region" line="433"/>
                <declaration name="button" type="AbstractButton" line="434"/>
                <declaration name="name" type="String" line="436"/>
                <declaration name="detail" type="String" line="437"/>
                <declaration name="direction" type="int" line="438"/>
                <scope line="439">
                    <declaration name="prop" type="Integer" line="440"/>
                </scope>
                <scope line="455"/>
                <scope line="457"/>
                <scope line="459"/>
                <declaration name="state" type="int" line="463"/>
                <scope line="464">
                    <scope line="467"/>
                    <scope line="473">
                        <declaration name="spinState" type="int" line="481"/>
                        <declaration name="mody" type="int" line="483"/>
                        <declaration name="modh" type="int" line="484"/>
                    </scope>
                    <declaration name="gtkState" type="int" line="490"/>
                    <declaration name="shadowType" type="ShadowType" line="491"/>
                    <scope line="494"/>
                </scope>
            </method>
            <method name="paintListBackground" type="void" line="510">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="512">
                    Does not call into ENGINE for better performance                    
                </comment>
            </method>
            <method name="paintMenuBarBackground" type="void" line="516">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="id" type="Region" line="517"/>
                <scope line="518">
                    <scope line="519"/>
                    <declaration name="style" type="GTKStyle" line="522"/>
                    <declaration name="shadow" type="int" line="523"/>
                    <declaration name="shadowType" type="ShadowType" line="525"/>
                    <declaration name="gtkState" type="int" line="526"/>
                </scope>
            </method>
            <method name="paintMenuBackground" type="void" line="540">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="paintMenuItemBackground" type="void" line="547">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="gtkState" type="int" line="548"/>
                <scope line="550">
                    <declaration name="id" type="Region" line="551"/>
                    <scope line="552">
                        <scope line="553">
                            <declaration name="shadow" type="ShadowType" line="554"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="paintPopupMenuBackground" type="void" line="566">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="id" type="Region" line="567"/>
                <declaration name="gtkState" type="int" line="568"/>
                <scope line="570">
                    <scope line="571"/>
                    <declaration name="style" type="GTKStyle" line="578"/>
                    <declaration name="xThickness" type="int" line="579"/>
                    <declaration name="yThickness" type="int" line="580"/>
                </scope>
            </method>
            <method name="paintProgressBarBackground" type="void" line="591">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="id" type="Region" line="592"/>
                <scope line="593">
                    <scope line="594"/>
                </scope>
            </method>
            <method name="paintProgressBarForeground" type="void" line="605">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="orientation" type="int"/>
                </params>
                <comment line="609">
                    Note that we don&apos;t call paintCachedImage() here.  Since the
                     progress bar foreground is painted differently for each value
                     it would be wasteful to try to cache an image for each state,
                     so instead we simply avoid caching in this case.                    
                </comment>
                <comment line="619">
                    don&apos;t bother caching the image                    
                </comment>
                <declaration name="id" type="Region" line="606"/>
                <scope line="607">
                    <scope line="612"/>
                </scope>
            </method>
            <method name="paintViewportBorder" type="void" line="623">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="id" type="Region" line="624"/>
                <scope line="625">
                    <scope line="626"/>
                </scope>
            </method>
            <method name="paintSeparatorBackground" type="void" line="638">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="orientation" type="int"/>
                </params>
                <comment line="644">
                    Note: In theory, the style&apos;s xy thickness values would determine
                     the width of the separator content.  In practice, however, some
                     engines will render a line that is wider than the corresponding
                     thickness value.  For example, ubuntulooks reports xy thickness
                     values of 1 for separators, but always renders a 2-pixel wide line.
                     As a result of all this, we need to be careful not to restrict
                     the wh values below too much, so that the full thickness of the
                     rendered line will be captured by our image caching code.                    
                </comment>
                <comment line="656">
                    GTK renders toolbar separators differently in that an
                     artificial padding is added to each end of the separator.
                     The value of 0.2f below is derived from the source code of
                     gtktoolbar.c in the current version of GTK+ (2.8.20 at the
                     time of this writing).  Specifically, the relevant values are:
                         SPACE_LINE_DIVISION 10.0
                         SPACE_LINE_START     2.0
                         SPACE_LINE_END       8.0
                     These are used to determine the distance from the top (or left)
                     edge of the toolbar to the other edge.  So for example, the
                     startingtop point of a vertical separator is 210 of the
                     height of a horizontal toolbar away from the top edge, which
                     is how we arrive at 0.2f below.  Likewise, the endingbottom
                     point is 810 of the height away from the top edge, or in other
                     words, it is 210 away from the bottom edge, which is again
                     how we arrive at the 0.2f value below.
                    
                     The separator is also centered horizontally or vertically,
                     depending on its orientation.  This was determined empirically
                     and by examining the code referenced above.                    
                </comment>
                <comment line="693">
                    For regular/menu separators, we simply subtract out the insets.                    
                </comment>
                <declaration name="id" type="Region" line="639"/>
                <declaration name="state" type="int" line="640"/>
                <declaration name="c" type="JComponent" line="641"/>
                <declaration name="detail" type="String" line="653"/>
                <scope line="654">
                    <declaration name="pct" type="float" line="678"/>
                    <declaration name="sep" type="JToolBar.Separator" line="679"/>
                    <declaration name="size" type="Dimension" line="680"/>
                    <declaration name="style" type="GTKStyle" line="681"/>
                    <scope line="682"/>
                    <scope line="686"/>
                </scope>
                <scope line="691">
                    <declaration name="insets" type="Insets" line="694"/>
                    <scope line="697"/>
                    <scope line="699"/>
                </scope>
                <scope line="704">
                    <scope line="706">
                        <scope line="709"/>
                        <scope line="712"/>
                    </scope>
                </scope>
            </method>
            <method name="paintSliderTrackBackground" type="void" line="723">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="728">
                    For focused sliders, we paint focus rect outside the bounds passed.
                     Need to adjust for that.                    
                </comment>
                <comment line="744">
                    The ubuntulooks engine paints slider troughs differently depending
                     on the current slider value and its component orientation.                    
                </comment>
                <comment line="750">
                    not used for sliders; any value will work                    
                </comment>
                <comment line="753">
                    Note that we don&apos;t call paintCachedImage() here.  Since some
                     engines (e.g. ubuntulooks) paint the slider background
                     differently for any given slider value, it would be wasteful
                     to try to cache an image for each state, so instead we simply
                     avoid caching in this case.                    
                </comment>
                <comment line="771">
                    don&apos;t bother caching the image                    
                </comment>
                <declaration name="id" type="Region" line="724"/>
                <declaration name="state" type="int" line="725"/>
                <declaration name="focused" type="boolean" line="729"/>
                <declaration name="focusSize" type="int" line="730"/>
                <scope line="731">
                    <declaration name="style" type="GTKStyle" line="732"/>
                </scope>
                <declaration name="slider" type="JSlider" line="745"/>
                <declaration name="value" type="double" line="746"/>
                <declaration name="min" type="double" line="747"/>
                <declaration name="max" type="double" line="748"/>
                <declaration name="visible" type="double" line="749"/>
                <scope line="751">
                    <scope line="757"/>
                    <declaration name="gtkState" type="int" line="761"/>
                    <scope line="766"/>
                </scope>
            </method>
            <method name="paintSliderThumbBackground" type="void" line="775">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="dir" type="int"/>
                </params>
                <declaration name="id" type="Region" line="776"/>
                <declaration name="gtkState" type="int" line="777"/>
                <scope line="779">
                    <scope line="780">
                        <declaration name="orientation" type="Orientation" line="781"/>
                        <declaration name="detail" type="String" line="783"/>
                    </scope>
                </scope>
            </method>
            <method name="paintSpinnerBackground" type="void" line="798">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="800">
                    This is handled in paintTextFieldBackground                    
                </comment>
            </method>
            <method name="paintSplitPaneDividerBackground" type="void" line="807">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="id" type="Region" line="808"/>
                <declaration name="gtkState" type="int" line="809"/>
                <declaration name="splitPane" type="JSplitPane" line="811"/>
                <declaration name="orientation" type="Orientation" line="812"/>
                <scope line="815">
                    <scope line="817"/>
                </scope>
            </method>
            <method name="paintSplitPaneDragDivider" type="void" line="828">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="orientation" type="int"/>
                </params>
            </method>
            <method name="paintTabbedPaneContentBackground" type="void" line="833">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="pane" type="JTabbedPane" line="834"/>
                <declaration name="selectedIndex" type="int" line="835"/>
                <declaration name="placement" type="PositionType" line="836"/>
                <declaration name="gapStart" type="int" line="839"/>
                <declaration name="gapSize" type="int" line="840"/>
                <scope line="841">
                    <declaration name="tabBounds" type="Rectangle" line="842"/>
                    <scope line="845"/>
                    <scope line="850"/>
                </scope>
                <declaration name="id" type="Region" line="856"/>
                <declaration name="gtkState" type="int" line="857"/>
                <scope line="859">
                    <scope line="861"/>
                </scope>
            </method>
            <method name="paintTabbedPaneTabBackground" type="void" line="874">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="tabIndex" type="int"/>
                </params>
                <declaration name="id" type="Region" line="875"/>
                <declaration name="state" type="int" line="876"/>
                <declaration name="gtkState" type="int" line="877"/>
                <declaration name="pane" type="JTabbedPane" line="879"/>
                <declaration name="placement" type="int" line="880"/>
                <scope line="882">
                    <scope line="884">
                        <declaration name="side" type="PositionType" line="885"/>
                    </scope>
                </scope>
            </method>
            <method name="paintTextPaneBackground" type="void" line="899">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="paintEditorPaneBackground" type="void" line="907">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="paintTextAreaBackground" type="void" line="915">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="917">
                    Does not call into ENGINE for better performance                    
                </comment>
            </method>
            <method name="paintTextBackground" type="void" line="926">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="928">
                    Text is odd in that it uses the TEXT_BACKGROUND vs BACKGROUND.                    
                </comment>
                <declaration name="c" type="JComponent" line="928"/>
                <declaration name="style" type="GTKStyle" line="929"/>
                <declaration name="id" type="Region" line="930"/>
                <declaration name="state" type="int" line="931"/>
                <scope line="932">
                    <scope line="933"/>
                    <declaration name="gtkState" type="int" line="937"/>
                    <declaration name="focusSize" type="int" line="938"/>
                    <declaration name="interiorFocus" type="boolean" line="939"/>
                    <scope line="941"/>
                    <declaration name="xThickness" type="int" line="950"/>
                    <declaration name="yThickness" type="int" line="951"/>
                    <scope line="964"/>
                </scope>
            </method>
            <method name="paintTreeCellEditorBackground" type="void" line="977">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="id" type="Region" line="978"/>
                <declaration name="gtkState" type="int" line="979"/>
                <scope line="981">
                    <scope line="982"/>
                </scope>
            </method>
            <method name="paintRootPaneBackground" type="void" line="996">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="998">
                    Does not call into ENGINE for better performance                    
                </comment>
            </method>
            <method name="paintToggleButtonBackground" type="void" line="1006">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="id" type="Region" line="1007"/>
                <declaration name="toggleButton" type="JToggleButton" line="1008"/>
                <declaration name="paintBG" type="boolean" line="1009"/>
                <declaration name="paintFocus" type="boolean" line="1011"/>
                <declaration name="toolButton" type="boolean" line="1012"/>
            </method>
            <method name="paintScrollBarBackground" type="void" line="1024">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="1035">
                    Note: the scrollbar insets already include the &quot;trough-border&quot;,
                     which is needed to position the scrollbar buttons properly.
                     But when we render, we need to take the trough border out
                     of the equation so that we paint the entire area covered by
                     the trough border and the scrollbar content itself.                    
                </comment>
                <declaration name="id" type="Region" line="1025"/>
                <declaration name="focused" type="boolean" line="1026"/>
                <scope line="1028">
                    <scope line="1029"/>
                    <declaration name="insets" type="Insets" line="1039"/>
                    <declaration name="style" type="GTKStyle" line="1040"/>
                    <declaration name="troughBorder" type="int" line="1041"/>
                    <scope line="1055"/>
                </scope>
            </method>
            <method name="paintScrollBarThumbBackground" type="void" line="1068">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="dir" type="int"/>
                </params>
                <comment line="1074">
                    The clearlooks engine paints scrollbar thumbs differently
                     depending on the current scroll value (specifically, it will avoid
                     rendering a certain line when the thumb is at the starting or
                     ending position).  Therefore, we normalize the current value to
                     the range [0,100] here and then pass it down to setRangeValue()
                     so that the native widget is configured appropriately.  Note that
                     there are really only four values that matter (min, middle, max,
                     or fill) so we restrict to one of those four values to avoid
                     blowing out the image cache.                    
                </comment>
                <comment line="1092">
                    In this case, the thumb fills the entire track, so it is
                     touching both ends at the same time                    
                </comment>
                <comment line="1097">
                    At minimum                    
                </comment>
                <comment line="1100">
                    At maximum                    
                </comment>
                <comment line="1103">
                    Somewhere in between                    
                </comment>
                <declaration name="id" type="Region" line="1069"/>
                <declaration name="gtkState" type="int" line="1070"/>
                <declaration name="sb" type="JScrollBar" line="1082"/>
                <declaration name="rtl" type="boolean" line="1083"/>
                <declaration name="min" type="double" line="1086"/>
                <declaration name="max" type="double" line="1087"/>
                <declaration name="visible" type="double" line="1088"/>
                <declaration name="value" type="double" line="1089"/>
                <scope line="1090"/>
                <scope line="1095"/>
                <scope line="1098"/>
                <scope line="1101"/>
                <scope line="1106">
                    <scope line="1109">
                        <declaration name="orientation" type="Orientation" line="1112"/>
                    </scope>
                </scope>
            </method>
            <method name="paintToolTipBackground" type="void" line="1126">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="id" type="Region" line="1127"/>
                <scope line="1128">
                    <scope line="1129"/>
                </scope>
            </method>
            <method name="paintTreeCellBackground" type="void" line="1144">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="1152">
                    the string arg should alternate based on row being painted,
                     but we currently don&apos;t pass that in.                    
                </comment>
                <declaration name="id" type="Region" line="1145"/>
                <declaration name="state" type="int" line="1146"/>
                <declaration name="gtkState" type="int" line="1147"/>
                <scope line="1148">
                    <scope line="1149"/>
                </scope>
            </method>
            <method name="paintTreeCellFocus" type="void" line="1161">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="id" type="Region" line="1162"/>
                <declaration name="state" type="int" line="1163"/>
            </method>
            <method name="paintTreeBackground" type="void" line="1172">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="1174">
                    As far as I can tell, these don&apos;t call into the ENGINE.                    
                </comment>
            </method>
            <method name="paintViewportBackground" type="void" line="1182">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="1184">
                    As far as I can tell, these don&apos;t call into the ENGINE.
                     Also note that you don&apos;t want this to call into the ENGINE
                     as if it where to paint a background JViewport wouldn&apos;t scroll
                     correctly.                    
                </comment>
            </method>
            <method name="paintFocus" type="void" line="1191">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="id" type="Region"/>
                    <param name="state" type="int"/>
                    <param name="detail" type="String"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="gtkState" type="int" line="1192"/>
                <scope line="1193">
                    <scope line="1194"/>
                </scope>
            </method>
            <method name="paintMetacityElement" type="void" line="1204">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="gtkState" type="int"/>
                    <param name="detail" type="String"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="shadow" type="ShadowType"/>
                    <param name="direction" type="ArrowType"/>
                </params>
                <scope line="1205">
                    <scope line="1207">
                        <scope line="1210"/>
                        <scope line="1214"/>
                        <scope line="1218"/>
                    </scope>
                </scope>
            </method>
            <method name="paintIcon" type="void" line="1228">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="paintMethod" type="Method"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="state" type="int" line="1229"/>
                <scope line="1230">
                    <scope line="1231">
                        <scope line="1233"/>
                        <scope line="1235"/>
                        <scope line="1237"/>
                    </scope>
                </scope>
            </method>
            <method name="paintIcon" type="void" line="1246">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="paintMethod" type="Method"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="direction" type="Object"/>
                </params>
                <declaration name="state" type="int" line="1247"/>
                <scope line="1248">
                    <scope line="1250">
                        <scope line="1253"/>
                        <scope line="1256"/>
                        <scope line="1258"/>
                    </scope>
                </scope>
            </method>
            <method name="paintTreeExpandedIcon" type="void" line="1269">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="state" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="paintTreeCollapsedIcon" type="void" line="1276">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="state" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="paintCheckBoxIcon" type="void" line="1283">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="state" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="style" type="GTKStyle" line="1284"/>
                <declaration name="size" type="int" line="1285"/>
                <declaration name="offset" type="int" line="1287"/>
            </method>
            <method name="paintRadioButtonIcon" type="void" line="1295">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="state" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="style" type="GTKStyle" line="1296"/>
                <declaration name="size" type="int" line="1297"/>
                <declaration name="offset" type="int" line="1299"/>
            </method>
            <method name="paintMenuArrowIcon" type="void" line="1307">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="state" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="dir" type="ArrowType"/>
                </params>
                <declaration name="gtkState" type="int" line="1308"/>
                <declaration name="shadow" type="ShadowType" line="1310"/>
                <scope line="1311"/>
            </method>
            <method name="paintCheckBoxMenuItemCheckIcon" type="void" line="1319">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="state" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="style" type="GTKStyle" line="1321"/>
                <declaration name="size" type="int" line="1322"/>
            </method>
            <method name="paintRadioButtonMenuItemCheckIcon" type="void" line="1332">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="state" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="style" type="GTKStyle" line="1334"/>
                <declaration name="size" type="int" line="1335"/>
            </method>
            <method name="paintToolBarHandleIcon" type="void" line="1345">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="state" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="orientation" type="Orientation"/>
                </params>
                <comment line="1350">
                    The orientation parameter passed down by Synth refers to the
                     orientation of the toolbar, but the one we pass to GTK refers
                     to the orientation of the handle.  Therefore, we need to swap
                     the value here: horizontal toolbars have vertical handles, and
                     vice versa.                    
                </comment>
                <declaration name="gtkState" type="int" line="1346"/>
            </method>
            <method name="paintAscendingSortIcon" type="void" line="1362">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="state" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="paintDescendingSortIcon" type="void" line="1368">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="state" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="fillArea" type="void" line="1378">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="colorType" type="ColorType"/>
                </params>
                <scope line="1379">
                    <declaration name="id" type="Region" line="1380"/>
                    <declaration name="gtkState" type="int" line="1381"/>
                    <declaration name="style" type="GTKStyle" line="1383"/>
                </scope>
            </method>
            <class name="ListTableFocusBorder" line="1391">
                <extends class="AbstractBorder"/>
                <implements interface="UIResource"/>
                <declaration name="selectedCell" type="boolean" line="1394"/>
                <declaration name="focusedCell" type="boolean" line="1395"/>
                <method name="getSelectedCellBorder" type="ListTableFocusBorder" line="1397"/>
                <method name="getUnselectedCellBorder" type="ListTableFocusBorder" line="1401"/>
                <method name="getNoFocusCellBorder" type="ListTableFocusBorder" line="1405"/>
                <method name="ListTableFocusBorder" type="constructor" line="1409">
                    <params>
                        <param name="selectedCell" type="boolean"/>
                        <param name="focusedCell" type="boolean"/>
                    </params>
                </method>
                <method name="getContext" type="SynthContext" line="1414">
                    <params>
                        <param name="c" type="Component"/>
                    </params>
                    <declaration name="context" type="SynthContext" line="1415"/>
                    <declaration name="ui" type="ComponentUI" line="1417"/>
                    <scope line="1418"/>
                    <scope line="1422"/>
                </method>
                <method name="paintBorder" type="void" line="1430">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="w" type="int"/>
                        <param name="h" type="int"/>
                    </params>
                    <scope line="1431">
                        <declaration name="context" type="SynthContext" line="1432"/>
                        <declaration name="state" type="int" line="1433"/>
                        <scope line="1436"/>
                    </scope>
                </method>
                <method name="getBorderInsets" type="Insets" line="1443">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="i" type="Insets"/>
                    </params>
                    <declaration name="context" type="SynthContext" line="1444"/>
                    <scope line="1446"/>
                </method>
                <method name="isBorderOpaque" type="boolean" line="1453"/>
            </class>
            <class name="TitledBorder" line="1459">
                <extends class="AbstractBorder"/>
                <implements interface="UIResource"/>
                <method name="paintBorder" type="void" line="1462">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="w" type="int"/>
                        <param name="h" type="int"/>
                    </params>
                    <declaration name="context" type="SynthContext" line="1463"/>
                    <declaration name="id" type="Region" line="1464"/>
                    <declaration name="state" type="int" line="1465"/>
                    <declaration name="gtkState" type="int" line="1466"/>
                    <scope line="1468">
                        <scope line="1469"/>
                    </scope>
                </method>
                <method name="getBorderInsets" type="Insets" line="1478">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="i" type="Insets"/>
                    </params>
                    <declaration name="context" type="SynthContext" line="1479"/>
                </method>
                <method name="isBorderOpaque" type="boolean" line="1483"/>
                <method name="getStyle" type="SynthStyle" line="1487">
                    <params>
                        <param name="c" type="JComponent"/>
                    </params>
                </method>
                <method name="getContext" type="SynthContext" line="1491">
                    <params>
                        <param name="c" type="JComponent"/>
                    </params>
                    <declaration name="state" type="int" line="1492"/>
                </method>
            </class>
        </class>
    </source>