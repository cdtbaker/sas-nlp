<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.swing.plaf.motif">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="javax.swing"/>
        <import package="javax.swing.event"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.border"/>
        <import package="javax.swing.plaf.basic"/>
        <import package="javax.swing.plaf.basic.BasicMenuUI"/>
        <class name="MotifMenuUI" line="38">
            <extends class="BasicMenuUI"/>
            <comment line="53">
                These should not be necessary because BasicMenuUI does this,
                 and this class overrides createChangeListener.
                    protected void installListeners() {
                      super.installListeners();
                        changeListener = createChangeListener(menuItem);
                        menuItem.addChangeListener(changeListener);
                    }
                
                    protected void uninstallListeners() {
                      super.uninstallListeners();
                      menuItem.removeChangeListener(changeListener);
                    }                
            </comment>
            <javadoc line="38">
                A Motif L&amp;F implementation of MenuUI.
                  &lt;p&gt;                
                <author>
                    Georges Saab                    
                </author>
                <author>
                    Rich Schiavi                    
                </author>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="48">
                <params>
                    <param name="x" type="JComponent"/>
                </params>
            </method>
            <method name="createChangeListener" type="ChangeListener" line="65">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="popupIsOpen" type="boolean" line="69">
                <params>
                    <param name="m" type="JMenu"/>
                    <param name="me" type="MenuElement"/>
                </params>
                <declaration name="i" type="int" line="70"/>
                <declaration name="pm" type="JPopupMenu" line="71"/>
                <scope line="73"/>
            </method>
            <method name="createMouseInputListener" type="MouseInputListener" line="80">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <class name="MotifChangeHandler" line="84">
                <extends class="ChangeHandler"/>
                <method name="MotifChangeHandler" type="constructor" line="85">
                    <params>
                        <param name="m" type="JMenu"/>
                        <param name="ui" type="MotifMenuUI"/>
                    </params>
                </method>
                <method name="stateChanged" type="void" line="90">
                    <params>
                        <param name="e" type="ChangeEvent"/>
                    </params>
                    <comment line="95">
                        c.repaint();                        
                    </comment>
                    <declaration name="c" type="JMenuItem" line="91"/>
                    <scope line="92"/>
                    <scope line="95"/>
                </method>
            </class>
            <class name="MouseInputHandler" line="103">
                <implements interface="MouseInputListener"/>
                <method name="mouseClicked" type="void" line="104">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mousePressed" type="void" line="105">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <declaration name="manager" type="MenuSelectionManager" line="106"/>
                    <declaration name="menu" type="JMenu" line="107"/>
                    <scope line="108">
                        <scope line="109">
                            <scope line="110"/>
                            <scope line="112">
                                <declaration name="cnt" type="Container" line="113"/>
                                <scope line="114">
                                    <declaration name="me" type="MenuElement" line="115"/>
                                </scope>
                            </scope>
                        </scope>
                        <declaration name="path" type="MenuElement" line="123"/>
                        <scope line="124">
                            <declaration name="newPath" type="MenuElement" line="125"/>
                        </scope>
                    </scope>
                </method>
                <method name="mouseReleased" type="void" line="133">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                    <declaration name="manager" type="MenuSelectionManager" line="134"/>
                    <declaration name="menuItem" type="JMenuItem" line="136"/>
                    <declaration name="p" type="Point" line="137"/>
                    <scope line="139"/>
                </method>
                <method name="mouseEntered" type="void" line="143">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseExited" type="void" line="144">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseDragged" type="void" line="145">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseMoved" type="void" line="148">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
            </class>
        </class>
    </source>