<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.util.jar.pack">
        <import package="com.sun.java.util.jar.pack.Attribute.Layout"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.io.BufferedInputStream"/>
        <import package="java.io.ByteArrayInputStream"/>
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.File"/>
        <import package="java.io.FileInputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collections"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.List"/>
        <import package="java.util.ListIterator"/>
        <import package="java.util.Map"/>
        <import package="java.util.SortedMap"/>
        <import package="java.util.TimeZone"/>
        <import package="java.util.jar.JarEntry"/>
        <import package="java.util.jar.JarFile"/>
        <import package="java.util.jar.JarInputStream"/>
        <import package="java.util.jar.Pack200"/>
        <class name="PackerImpl" line="60">
            <extends class="TLGlobals"/>
            <comment line="78">
                Driver routines                
            </comment>
            <comment line="159">
                All the worker bees.....                
            </comment>
            <comment line="160">
                The packer worker.                
            </comment>
            <implements interface="Pack200.Packer"/>
            <javadoc line="62">
                Constructs a Packer object and sets the initial state of
                  the packer engines.                
            </javadoc>
            <method name="PackerImpl" type="constructor" line="66"/>
            <javadoc line="68">
                Get the set of options for the pack and unpack engines.                
                <return>
                    A sorted association of option key strings to option values.                    
                </return>
            </javadoc>
            <method name="properties" type="SortedMap" line="73"/>
            <javadoc line="79">
                Takes a JarFile and converts into a pack-stream.
                  &lt;p&gt;
                  Closes its input but not its output.  (Pack200 archives are appendable.)                
                <param>
                    in a JarFile                    
                </param>
                <param>
                    out an OutputStream                    
                </param>
                <exception>
                    IOException if an error is encountered.                    
                </exception>
            </javadoc>
            <method name="pack" type="void" line="87">
                <params>
                    <param name="in" type="JarFile"/>
                    <param name="out" type="OutputStream"/>
                </params>
                <declaration name="tz" type="TimeZone" line="89"/>
                <scope line="92">
                    <scope line="96"/>
                    <scope line="98"/>
                </scope>
                <scope line="101"/>
            </method>
            <javadoc line="108">
                Takes a JarInputStream and converts into a pack-stream.
                  &lt;p&gt;
                  Closes its input but not its output.  (Pack200 archives are appendable.)
                  &lt;p&gt;
                  The modification time and deflation hint attributes are not available,
                  for the jar-manifest file and the directory containing the file.                
                <see>
                    #MODIFICATION_TIME                    
                </see>
                <see>
                    #DEFLATION_HINT                    
                </see>
                <param>
                    in a JarInputStream                    
                </param>
                <param>
                    out an OutputStream                    
                </param>
                <exception>
                    IOException if an error is encountered.                    
                </exception>
            </javadoc>
            <method name="pack" type="void" line="122">
                <params>
                    <param name="in" type="JarInputStream"/>
                    <param name="out" type="OutputStream"/>
                </params>
                <declaration name="tz" type="TimeZone" line="124"/>
                <scope line="126">
                    <scope line="129"/>
                    <scope line="131"/>
                </scope>
                <scope line="134"/>
            </method>
            <javadoc line="140">
                Register a listener for changes to options.                
                <param>
                    listener  An object to be invoked when a property is changed.                    
                </param>
            </javadoc>
            <method name="addPropertyChangeListener" type="void" line="144">
                <params>
                    <param name="listener" type="PropertyChangeListener"/>
                </params>
            </method>
            <javadoc line="148">
                Remove a listener for the PropertyChange event.                
                <param>
                    listener  The PropertyChange listener to be removed.                    
                </param>
            </javadoc>
            <method name="removePropertyChangeListener" type="void" line="152">
                <params>
                    <param name="listener" type="PropertyChangeListener"/>
                </params>
            </method>
            <class name="DoPack" line="160">
                <comment line="170">
                    Here&apos;s where the bits are collected before getting packed:                    
                </comment>
                <comment line="256">
                    running counter                    
                </comment>
                <comment line="271">
                    parsed pack.pass.file options                    
                </comment>
                <comment line="310">
                    (Done collecting options from props.)                    
                </comment>
                <comment line="328">
                    Get a new package, based on the old one.                    
                </comment>
                <comment line="403">
                    used only if (verbose &gt; 0)                    
                </comment>
                <comment line="541">
                    Read raw data.                    
                </comment>
                <declaration name="verbose" type="int" line="162"/>
                <scope line="164"/>
                <declaration name="pkg" type="Package" line="170"/>
                <declaration name="unknownAttrCommand" type="String" line="172"/>
                <scope line="173">
                    <declaration name="uaMode" type="String" line="174"/>
                    <scope line="177"/>
                </scope>
                <declaration name="attrDefs" type="Map&lt;Attribute.Layout,Attribute&gt;" line="183"/>
                <declaration name="attrCommands" type="Map&lt;Attribute.Layout,String&gt;" line="184"/>
                <scope line="185">
                    <declaration name="lattrDefs" type="Map&lt;Attribute.Layout,Attribute&gt;" line="186"/>
                    <declaration name="lattrCommands" type="Map&lt;Attribute.Layout,String&gt;" line="187"/>
                    <declaration name="keys" type="String[]" line="188"/>
                    <declaration name="ctypes" type="int[]" line="194"/>
                    <scope line="200">
                        <declaration name="pfx" type="String" line="201"/>
                        <declaration name="map" type="Map&lt;Object,Object&gt;" line="202"/>
                        <scope line="203">
                            <declaration name="key" type="String" line="204"/>
                            <declaration name="name" type="String" line="206"/>
                            <declaration name="layout" type="String" line="207"/>
                            <declaration name="lkey" type="Layout" line="208"/>
                            <scope line="211"/>
                            <scope line="213">
                                <scope line="215"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <declaration name="keepFileOrder" type="boolean" line="226"/>
                <declaration name="keepClassOrder" type="boolean" line="228"/>
                <declaration name="keepModtime" type="boolean" line="231"/>
                <declaration name="latestModtime" type="boolean" line="233"/>
                <declaration name="keepDeflateHint" type="boolean" line="235"/>
                <scope line="237">
                    <scope line="238">
                        <declaration name="modtime" type="int" line="239"/>
                        <scope line="240"/>
                    </scope>
                    <scope line="244">
                        <declaration name="deflate_hint" type="boolean" line="245"/>
                        <scope line="246"/>
                    </scope>
                </scope>
                <declaration name="totalOutputSize" type="long" line="252"/>
                <declaration name="segmentCount" type="int" line="253"/>
                <declaration name="segmentTotalSize" type="long" line="254"/>
                <declaration name="segmentSize" type="long" line="255"/>
                <declaration name="segmentLimit" type="long" line="256"/>
                <scope line="257">
                    <declaration name="limit" type="long" line="258"/>
                </scope>
                <declaration name="passFiles" type="List&lt;String&gt;" line="270"/>
                <scope line="271">
                    <scope line="274">
                        <declaration name="file" type="String" line="275"/>
                        <scope line="276"/>
                    </scope>
                </scope>
                <scope line="285">
                    <declaration name="ver" type="int" line="287"/>
                </scope>
                <scope line="302">
                    <declaration name="opt" type="int" line="304"/>
                </scope>
                <method name="isClassFile" type="boolean" line="311">
                    <params>
                        <param name="name" type="String"/>
                    </params>
                    <scope line="313">
                        <declaration name="chop" type="int" line="315"/>
                    </scope>
                </method>
                <method name="isMetaInfFile" type="boolean" line="322">
                    <params>
                        <param name="name" type="String"/>
                    </params>
                </method>
                <method name="makeNextPackage" type="void" line="328"/>
                <class name="InFile" line="332">
                    <declaration name="name" type="String" line="333"/>
                    <declaration name="jf" type="JarFile" line="334"/>
                    <declaration name="je" type="JarEntry" line="335"/>
                    <declaration name="f" type="File" line="336"/>
                    <declaration name="modtime" type="int" line="337"/>
                    <declaration name="options" type="int" line="338"/>
                    <method name="InFile" type="constructor" line="339">
                        <params>
                            <param name="name" type="String"/>
                        </params>
                        <declaration name="timeSecs" type="int" line="344"/>
                        <scope line="345"/>
                        <scope line="347"/>
                    </method>
                    <method name="InFile" type="constructor" line="351">
                        <params>
                            <param name="jf" type="JarFile"/>
                            <param name="je" type="JarEntry"/>
                        </params>
                        <declaration name="timeSecs" type="int" line="356"/>
                        <scope line="357"/>
                        <scope line="359"/>
                        <scope line="362"/>
                    </method>
                    <method name="InFile" type="constructor" line="366">
                        <params>
                            <param name="je" type="JarEntry"/>
                        </params>
                    </method>
                    <method name="getInputLength" type="long" line="369">
                        <comment line="372">
                            Bump size by pathname length and modtime/def-hint bytes.                            
                        </comment>
                        <declaration name="len" type="long" line="370"/>
                    </method>
                    <method name="getModtime" type="int" line="375">
                        <params>
                            <param name="timeMillis" type="long"/>
                        </params>
                        <comment line="376">
                            Convert milliseconds to seconds.                            
                        </comment>
                        <declaration name="seconds" type="long" line="377"/>
                        <scope line="378"/>
                        <scope line="380"/>
                    </method>
                    <method name="copyTo" type="void" line="385">
                        <params>
                            <param name="file" type="Package.File"/>
                        </params>
                    </method>
                    <method name="getInputStream" type="InputStream" line="390"/>
                    <method name="toString" type="String" line="397"/>
                </class>
                <declaration name="nread" type="int" line="402"/>
                <method name="noteRead" type="void" line="403">
                    <params>
                        <param name="f" type="InFile"/>
                    </params>
                </method>
                <method name="run" type="void" line="411">
                    <params>
                        <param name="in" type="JarInputStream"/>
                        <param name="out" type="OutputStream"/>
                    </params>
                    <comment line="412">
                        First thing we do is get the manifest, as JIS does                        
                    </comment>
                    <comment line="413">
                        not provide the Manifest as an entry.                        
                    </comment>
                    <comment line="426">
                        (5078608) : discount the resource files in META-INF                        
                    </comment>
                    <comment line="427">
                        from segment computation.                        
                    </comment>
                    <comment line="434">
                        don&apos;t know; it&apos;s a stream                        
                    </comment>
                    <scope line="414">
                        <declaration name="tmp" type="ByteArrayOutputStream" line="415"/>
                        <declaration name="tmpIn" type="InputStream" line="417"/>
                    </scope>
                    <scope line="420">
                        <declaration name="inFile" type="InFile" line="421"/>
                        <declaration name="name" type="String" line="423"/>
                        <declaration name="bits" type="Package.File" line="424"/>
                        <declaration name="file" type="Package.File" line="425"/>
                        <declaration name="inflen" type="long" line="428"/>
                        <scope line="432">
                            <declaration name="nextCount" type="int" line="434"/>
                        </scope>
                        <scope line="437"/>
                        <scope line="443"/>
                        <scope line="446"/>
                    </scope>
                </method>
                <method name="run" type="void" line="456">
                    <params>
                        <param name="in" type="JarFile"/>
                        <param name="out" type="OutputStream"/>
                    </params>
                    <comment line="465">
                        (5078608) : discount the resource files completely from segmenting                        
                    </comment>
                    <comment line="471">
                        Estimate number of remaining segments:                        
                    </comment>
                    <comment line="496">
                        tidy up                        
                    </comment>
                    <declaration name="inFiles" type="List&lt;InFile&gt;" line="457"/>
                    <declaration name="numDone" type="int" line="462"/>
                    <scope line="463">
                        <declaration name="name" type="String" line="464"/>
                        <declaration name="inflen" type="long" line="466"/>
                        <scope line="469">
                            <declaration name="filesDone" type="float" line="472"/>
                            <declaration name="segsDone" type="float" line="473"/>
                            <declaration name="filesToDo" type="float" line="474"/>
                            <declaration name="segsToDo" type="float" line="475"/>
                        </scope>
                        <declaration name="strm" type="InputStream" line="480"/>
                        <declaration name="file" type="Package.File" line="483"/>
                        <scope line="484">
                            <scope line="486"/>
                        </scope>
                        <scope line="491"/>
                    </scope>
                </method>
                <method name="readClass" type="Package.File" line="503">
                    <params>
                        <param name="fname" type="String"/>
                        <param name="in" type="InputStream"/>
                    </params>
                    <comment line="516">
                        He passed up the category to us in layout.                        
                    </comment>
                    <comment line="525">
                        %% TODO: Do we invent a new property for this or reuse %%                        
                    </comment>
                    <comment line="533">
                        Otherwise, it must be an error.                        
                    </comment>
                    <declaration name="cls" type="Package.Class" line="504"/>
                    <declaration name="reader" type="ClassReader" line="506"/>
                    <scope line="510"/>
                    <scope line="512">
                        <declaration name="message" type="String" line="513"/>
                        <scope line="514">
                            <declaration name="ee" type="Attribute.FormatException" line="515"/>
                            <scope line="517"/>
                        </scope>
                        <scope line="523">
                            <declaration name="ce" type="ClassReader.ClassFormatException" line="524"/>
                            <scope line="526"/>
                        </scope>
                    </scope>
                </method>
                <method name="readFile" type="Package.File" line="541">
                    <params>
                        <param name="fname" type="String"/>
                        <param name="in" type="InputStream"/>
                    </params>
                    <declaration name="file" type="Package.File" line="543"/>
                </method>
                <method name="flushPartial" type="void" line="550">
                    <params>
                        <param name="out" type="OutputStream"/>
                        <param name="nextCount" type="int"/>
                    </params>
                    <comment line="552">
                        do not flush an empty segment                        
                    </comment>
                    <comment line="556">
                        In case there will be another segment:                        
                    </comment>
                    <scope line="551"/>
                </method>
                <method name="flushAll" type="void" line="563">
                    <params>
                        <param name="out" type="OutputStream"/>
                    </params>
                    <scope line="571"/>
                </method>
                <javadoc line="580">
                    Write all information in the current package segment
                      to the output stream.                    
                </javadoc>
                <method name="flushPackage" type="void" line="583">
                    <params>
                        <param name="out" type="OutputStream"/>
                        <param name="nextCount" type="int"/>
                    </params>
                    <comment line="586">
                        Keeping the order of classes costs about 1%                        
                    </comment>
                    <comment line="587">
                        Keeping the order of all files costs something more.                        
                    </comment>
                    <comment line="592">
                        Package builder must have created a stub for each class.                        
                    </comment>
                    <comment line="594">
                        Order of stubs in file list must agree with classes.                        
                    </comment>
                    <comment line="602">
                        Do some stripping, maybe.                        
                    </comment>
                    <comment line="609">
                        Must choose an archive version; PackageWriter does not.                        
                    </comment>
                    <declaration name="nfiles" type="int" line="584"/>
                    <scope line="585">
                        <declaration name="stripDirectories" type="boolean" line="589"/>
                    </scope>
                    <scope line="591">
                        <declaration name="res" type="List&lt;Package.File&gt;" line="595"/>
                    </scope>
                    <declaration name="pw" type="PackageWriter" line="612"/>
                    <scope line="616">
                        <declaration name="outSize" type="long" line="617"/>
                        <declaration name="inSize" type="long" line="619"/>
                    </scope>
                </method>
                <method name="scanJar" type="List<InFile>" line="627">
                    <params>
                        <param name="jf" type="JarFile"/>
                    </params>
                    <comment line="628">
                        Collect jar entries, preserving order.                        
                    </comment>
                    <declaration name="inFiles" type="List&lt;InFile&gt;" line="629"/>
                    <scope line="630">
                        <scope line="631">
                            <declaration name="inFile" type="InFile" line="632"/>
                        </scope>
                    </scope>
                    <scope line="636"/>
                </method>
            </class>
        </class>
    </source>