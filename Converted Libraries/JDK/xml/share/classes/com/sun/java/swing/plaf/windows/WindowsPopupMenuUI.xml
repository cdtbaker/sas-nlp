<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.swing.plaf.windows">
        <import package="java.awt.Component"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Insets"/>
        <import package="java.awt.KeyEventPostProcessor"/>
        <import package="java.awt.KeyboardFocusManager"/>
        <import package="java.awt.Window"/>
        <import package="java.awt.event.KeyEvent"/>
        <import package="javax.swing"/>
        <import package="javax.swing.event"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.plaf.basic"/>
        <import package="sun.swing.StringUIClientPropertyKey"/>
        <import package="com.sun.java.swing.plaf.windows.TMSchema.Part"/>
        <import package="com.sun.java.swing.plaf.windows.TMSchema.State"/>
        <import package="com.sun.java.swing.plaf.windows.XPStyle.Skin"/>
        <import package="sun.swing.SwingUtilities2.BASICMENUITEMUI_MAX_TEXT_OFFSET"/>
        <class name="WindowsPopupMenuUI" line="18">
            <extends class="BasicPopupMenuUI"/>
            <javadoc line="18">
                Windows rendition of the component.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases.  The current serialization support is appropriate
                  for short term storage or RMI between applications running the same
                  version of Swing.  A future release of Swing will provide support for
                  long term persistence.                
                <author>
                    Igor Kushnirskiy                    
                </author>
            </javadoc>
            <declaration name="mnemonicListener" type="MnemonicListener" line="30"/>
            <declaration name="GUTTER_OFFSET_KEY" type="Object" line="31"/>
            <method name="createUI" type="ComponentUI" line="32">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="installListeners" type="void" line="35">
                <scope line="37"/>
            </method>
            <javadoc line="42">
                Returns the &lt;code&gt;Popup&lt;/code&gt; that will be responsible for
                  displaying the &lt;code&gt;JPopupMenu&lt;/code&gt;.                
                <param>
                    popupMenu JPopupMenu requesting Popup                    
                </param>
                <param>
                    x     Screen x location Popup is to be shown at                    
                </param>
                <param>
                    y     Screen y location Popup is to be shown at.                    
                </param>
                <return>
                    Popup that will show the JPopupMenu                    
                </return>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <method name="getPopup" type="Popup" line="51">
                <params>
                    <param name="popupMenu" type="JPopupMenu"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <declaration name="popupFactory" type="PopupFactory" line="52"/>
            </method>
            <class name="MnemonicListener" line="55">
                <implements interface="ChangeListener"/>
                <declaration name="repaintRoot" type="JRootPane" line="56"/>
                <method name="stateChanged" type="void" line="57">
                    <params>
                        <param name="ev" type="ChangeEvent"/>
                    </params>
                    <declaration name="msm" type="MenuSelectionManager" line="58"/>
                    <declaration name="path" type="MenuElement[]" line="59"/>
                    <scope line="60">
                        <scope line="61">
                            <scope line="63">
                                <declaration name="win" type="Window" line="64"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="69">
                        <declaration name="c" type="Component" line="70"/>
                    </scope>
                </method>
            </class>
            <javadoc line="76">
                Returns offset for the text.
                  BasicMenuItemUI sets max text offset on the JPopupMenuUI.                
                <param>
                    c PopupMenu to return text offset for.                    
                </param>
                <return>
                    text offset for the component                    
                </return>
            </javadoc>
            <method name="getTextOffset" type="int" line="82">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="rv" type="int" line="83"/>
                <declaration name="maxTextOffset" type="Object" line="84"/>
                <scope line="85">
                    <declaration name="menuItemOffset" type="int" line="87"/>
                    <declaration name="component" type="Component" line="88"/>
                    <scope line="89"/>
                </scope>
            </method>
            <javadoc line="96">
                Returns span before gutter.
                  used only on Vista.                
                <return>
                    span before gutter                    
                </return>
            </javadoc>
            <method name="getSpanBeforeGutter" type="int" line="101"/>
            <javadoc line="104">
                Returns span after gutter.
                  used only on Vista.                
                <return>
                    span after gutter                    
                </return>
            </javadoc>
            <method name="getSpanAfterGutter" type="int" line="109"/>
            <javadoc line="112">
                Returns gutter width.
                  used only on Vista.                
                <return>
                    width of the gutter                    
                </return>
            </javadoc>
            <method name="getGutterWidth" type="int" line="117">
                <declaration name="rv" type="int" line="118"/>
                <declaration name="xp" type="XPStyle" line="119"/>
                <scope line="120">
                    <declaration name="skin" type="Skin" line="121"/>
                </scope>
            </method>
            <javadoc line="126">
                Checks if PopupMenu is leftToRight
                  The orientation is derived from the children of the component.
                  It is leftToRight if all the children are leftToRight                
                <param>
                    c component to return orientation for                    
                </param>
                <return>
                    true if all the children are leftToRight                    
                </return>
            </javadoc>
            <method name="isLeftToRight" type="boolean" line="133">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="leftToRight" type="boolean" line="134"/>
                <scope line="135"/>
            </method>
            <method name="paint" type="void" line="140">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <scope line="141">
                    <declaration name="xp" type="XPStyle" line="142"/>
                    <declaration name="skin" type="Skin" line="143"/>
                    <declaration name="textOffset" type="int" line="145"/>
                    <scope line="146">
                        <declaration name="gutterWidth" type="int" line="148"/>
                        <declaration name="gutterOffset" type="int" line="149"/>
                        <declaration name="insets" type="Insets" line="151"/>
                    </scope>
                    <scope line="154">
                        <scope line="155"/>
                    </scope>
                </scope>
                <scope line="160"/>
            </method>
        </class>
    </source>