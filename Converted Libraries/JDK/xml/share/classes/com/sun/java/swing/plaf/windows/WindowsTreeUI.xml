<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.swing.plaf.windows">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.io"/>
        <import package="java.util"/>
        <import package="javax.swing.plaf.basic"/>
        <import package="javax.swing"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.tree"/>
        <import package="com.sun.java.swing.plaf.windows.TMSchema"/>
        <import package="com.sun.java.swing.plaf.windows.XPStyle.Skin"/>
        <class name="WindowsTreeUI" line="44">
            <extends class="BasicTreeUI"/>
            <javadoc line="44">
                A Windows tree.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases.  The current serialization support is appropriate
                  for short term storage or RMI between applications running the same
                  version of Swing.  A future release of Swing will provide support for
                  long term persistence.                
                <author>
                    Scott Violet                    
                </author>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="59">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <javadoc line="64">
                Ensures that the rows identified by beginRow through endRow are
                  visible.                
            </javadoc>
            <method name="ensureRowsAreVisible" type="void" line="68">
                <params>
                    <param name="beginRow" type="int"/>
                    <param name="endRow" type="int"/>
                </params>
                <scope line="69">
                    <declaration name="visRect" type="Rectangle" line="70"/>
                    <scope line="71">
                        <declaration name="scrollBounds" type="Rectangle" line="72"/>
                        <scope line="75"/>
                    </scope>
                    <scope line="81">
                        <declaration name="beginRect" type="Rectangle" line="82"/>
                        <declaration name="testRect" type="Rectangle" line="84"/>
                        <declaration name="beginY" type="int" line="85"/>
                        <declaration name="maxY" type="int" line="86"/>
                        <scope line="88"/>
                    </scope>
                </scope>
            </method>
            <declaration name="HALF_SIZE" type="int" line="101"/>
            <declaration name="SIZE" type="int" line="102"/>
            <javadoc line="104">
                Returns the default cell renderer that is used to do the
                  stamping of each node.                
            </javadoc>
            <method name="createDefaultCellRenderer" type="TreeCellRenderer" line="108"/>
            <class name="ExpandedIcon" line="112">
                <implements interface="Icon"/>
                <implements interface="Serializable"/>
                <javadoc line="112">
                    The minus sign button icon
                      &lt;p&gt;
                      &lt;strong&gt;Warning:&lt;/strong&gt;
                      Serialized objects of this class will not be compatible with
                      future Swing releases.  The current serialization support is appropriate
                      for short term storage or RMI between applications running the same
                      version of Swing.  A future release of Swing will provide support for
                      long term persistence.                    
                </javadoc>
                <method name="createExpandedIcon" type="Icon" line="124"/>
                <method name="getSkin" type="Skin" line="128">
                    <params>
                        <param name="c" type="Component"/>
                    </params>
                    <declaration name="xp" type="XPStyle" line="129"/>
                </method>
                <method name="paintIcon" type="void" line="133">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="skin" type="Skin" line="134"/>
                    <scope line="135"/>
                    <declaration name="backgroundColor" type="Color" line="140"/>
                </method>
                <method name="getIconWidth" type="int" line="153">
                    <declaration name="skin" type="Skin" line="154"/>
                </method>
                <method name="getIconHeight" type="int" line="158">
                    <declaration name="skin" type="Skin" line="159"/>
                </method>
            </class>
            <class name="CollapsedIcon" line="164">
                <extends class="ExpandedIcon"/>
                <javadoc line="164">
                    The plus sign button icon
                      &lt;p&gt;
                      &lt;strong&gt;Warning:&lt;/strong&gt;
                      Serialized objects of this class will not be compatible with
                      future Swing releases.  The current serialization support is appropriate
                      for short term storage or RMI between applications running the same
                      version of Swing.  A future release of Swing will provide support for
                      long term persistence.                    
                </javadoc>
                <method name="createCollapsedIcon" type="Icon" line="175"/>
                <method name="paintIcon" type="void" line="179">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="skin" type="Skin" line="180"/>
                    <scope line="181"/>
                    <scope line="183"/>
                </method>
            </class>
            <class name="WindowsTreeCellRenderer" line="190">
                <extends class="DefaultTreeCellRenderer"/>
                <javadoc line="192">
                    Configures the renderer based on the passed in components.
                      The value is set from messaging the tree with
                      &lt;code&gt;convertValueToText&lt;/code&gt;, which ultimately invokes
                      &lt;code&gt;toString&lt;/code&gt; on &lt;code&gt;value&lt;/code&gt;.
                      The foreground color is set based on the selection and the icon
                      is set based on on leaf and expanded.                    
                </javadoc>
                <method name="getTreeCellRendererComponent" type="Component" line="204">
                    <params>
                        <param name="tree" type="JTree"/>
                        <param name="value" type="Object"/>
                        <param name="sel" type="boolean"/>
                        <param name="expanded" type="boolean"/>
                        <param name="leaf" type="boolean"/>
                        <param name="row" type="int"/>
                        <param name="hasFocus" type="boolean"/>
                    </params>
                    <comment line="209">
                        Windows displays the open icon when the tree item selected.                        
                    </comment>
                    <scope line="209">
                        <scope line="211"/>
                        <scope line="213"/>
                        <scope line="215"/>
                    </scope>
                    <scope line="219">
                        <scope line="221"/>
                        <scope line="223"/>
                        <scope line="225"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>