<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.swing.plaf.windows">
        <import package="sun.swing.SwingUtilities2"/>
        <import package="javax.swing"/>
        <import package="javax.swing.border"/>
        <import package="javax.swing.UIManager"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.plaf.basic.BasicInternalFrameTitlePane"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.beans.PropertyVetoException"/>
        <import package="com.sun.java.swing.plaf.windows.TMSchema"/>
        <import package="com.sun.java.swing.plaf.windows.XPStyle.Skin"/>
        <class name="WindowsInternalFrameTitlePane" line="15">
            <extends class="BasicInternalFrameTitlePane"/>
            <declaration name="selectedTitleGradientColor" type="Color" line="16"/>
            <declaration name="notSelectedTitleGradientColor" type="Color" line="17"/>
            <declaration name="systemPopupMenu" type="JPopupMenu" line="18"/>
            <declaration name="systemLabel" type="JLabel" line="19"/>
            <declaration name="titleFont" type="Font" line="20"/>
            <declaration name="titlePaneHeight" type="int" line="21"/>
            <declaration name="buttonWidth" type="int" line="22"/>
            <declaration name="hotTrackingOn" type="boolean" line="23"/>
            <method name="WindowsInternalFrameTitlePane" type="constructor" line="24">
                <params>
                    <param name="f" type="JInternalFrame"/>
                </params>
            </method>
            <method name="addSubComponents" type="void" line="27"/>
            <method name="installDefaults" type="void" line="33">
                <declaration name="obj" type="Object" line="38"/>
                <scope line="40">
                    <declaration name="d" type="Dimension" line="42"/>
                    <scope line="43"/>
                </scope>
                <scope line="47">
                    <declaration name="activeBorderColor" type="Color" line="51"/>
                </scope>
            </method>
            <method name="uninstallListeners" type="void" line="55"/>
            <method name="createButtons" type="void" line="58">
                <scope line="60"/>
            </method>
            <method name="setButtonIcons" type="void" line="66">
                <scope line="68"/>
            </method>
            <method name="paintComponent" type="void" line="74">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="xp" type="XPStyle" line="75"/>
                <declaration name="title" type="String" line="77"/>
                <scope line="78">
                    <declaration name="isSelected" type="boolean" line="79"/>
                    <declaration name="oldFont" type="Font" line="80"/>
                    <declaration name="newFont" type="Font" line="81"/>
                    <declaration name="fm" type="FontMetrics" line="83"/>
                    <declaration name="baseline" type="int" line="84"/>
                    <declaration name="lastIconBounds" type="Rectangle" line="85"/>
                    <scope line="86"/>
                    <scope line="89"/>
                    <scope line="92"/>
                    <declaration name="titleX" type="int" line="95"/>
                    <declaration name="titleW" type="int" line="96"/>
                    <declaration name="gap" type="int" line="97"/>
                    <scope line="98">
                        <scope line="99"/>
                        <scope line="103"/>
                    </scope>
                    <scope line="108">
                        <scope line="109"/>
                        <declaration name="minTitleX" type="int" line="113"/>
                        <scope line="114"/>
                        <declaration name="availableWidth" type="int" line="117"/>
                        <scope line="118"/>
                        <scope line="121"/>
                    </scope>
                    <scope line="127">
                        <declaration name="shadowType" type="String" line="128"/>
                        <scope line="129"/>
                        <scope line="132">
                            <declaration name="shadowOffset" type="Point" line="133"/>
                            <declaration name="shadowColor" type="Color" line="134"/>
                            <scope line="135"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="getPreferredSize" type="Dimension" line="146"/>
            <method name="getMinimumSize" type="Dimension" line="149">
                <declaration name="d" type="Dimension" line="150"/>
                <declaration name="xp" type="XPStyle" line="152"/>
                <scope line="153">
                    <scope line="154"/>
                    <scope line="157"/>
                </scope>
            </method>
            <method name="paintTitleBackground" type="void" line="163">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <declaration name="xp" type="XPStyle" line="164"/>
                <scope line="165">
                    <declaration name="part" type="Part" line="166"/>
                    <declaration name="state" type="State" line="167"/>
                    <declaration name="skin" type="Skin" line="168"/>
                </scope>
                <scope line="171">
                    <declaration name="gradientsOn" type="Boolean" line="172"/>
                    <scope line="173">
                        <declaration name="g2" type="Graphics2D" line="174"/>
                        <declaration name="savePaint" type="Paint" line="175"/>
                        <declaration name="isSelected" type="boolean" line="176"/>
                        <declaration name="w" type="int" line="177"/>
                        <scope line="178">
                            <declaration name="titleGradient" type="GradientPaint" line="179"/>
                        </scope>
                        <scope line="182">
                            <declaration name="titleGradient" type="GradientPaint" line="183"/>
                        </scope>
                    </scope>
                    <scope line="189"/>
                </scope>
            </method>
            <method name="assembleSystemMenu" type="void" line="194">
                <anonymous_class line="198">
                    <method name="paintComponent" type="void" line="199">
                        <params>
                            <param name="g" type="Graphics"/>
                        </params>
                        <declaration name="x" type="int" line="200"/>
                        <declaration name="y" type="int" line="201"/>
                        <declaration name="w" type="int" line="202"/>
                        <declaration name="h" type="int" line="203"/>
                        <scope line="205"/>
                        <declaration name="icon" type="Icon" line="209"/>
                        <declaration name="iconWidth" type="int" line="210"/>
                        <declaration name="iconHeight" type="int" line="211"/>
                        <scope line="212">
                            <declaration name="drawScale" type="double" line="213"/>
                            <scope line="214"/>
                            <scope line="218"/>
                        </scope>
                    </method>
                </anonymous_class>
                <anonymous_class line="230">
                    <method name="mouseClicked" type="void" line="231">
                        <params>
                            <param name="e" type="MouseEvent"/>
                        </params>
                        <scope line="232"/>
                        <scope line="236"/>
                    </method>
                    <method name="mousePressed" type="void" line="240">
                        <params>
                            <param name="e" type="MouseEvent"/>
                        </params>
                        <scope line="241"/>
                        <scope line="244"/>
                    </method>
                </anonymous_class>
            </method>
            <method name="addSystemMenuItems" type="void" line="251">
                <params>
                    <param name="menu" type="JPopupMenu"/>
                </params>
                <declaration name="mi" type="JMenuItem" line="252"/>
            </method>
            <method name="showSystemMenu" type="void" line="266"/>
            <method name="showSystemPopupMenu" type="void" line="269">
                <params>
                    <param name="invoker" type="Component"/>
                </params>
                <declaration name="dim" type="Dimension" line="270"/>
                <declaration name="border" type="Border" line="271"/>
                <scope line="272"/>
                <scope line="276"/>
                <scope line="279"/>
            </method>
            <method name="createPropertyChangeListener" type="PropertyChangeListener" line="283"/>
            <method name="createLayout" type="LayoutManager" line="286"/>
            <class name="WindowsTitlePaneLayout" line="289">
                <extends class="BasicInternalFrameTitlePane.TitlePaneLayout"/>
                <declaration name="captionMargin" type="Insets" line="290"/>
                <declaration name="contentMargin" type="Insets" line="291"/>
                <declaration name="xp" type="XPStyle" line="292"/>
                <method name="WindowsTitlePaneLayout" type="constructor" line="293">
                    <scope line="294">
                        <declaration name="c" type="Component" line="295"/>
                    </scope>
                    <scope line="299"/>
                    <scope line="302"/>
                </method>
                <method name="layoutButton" type="int" line="306">
                    <params>
                        <param name="button" type="JComponent"/>
                        <param name="part" type="Part"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="w" type="int"/>
                        <param name="h" type="int"/>
                        <param name="gap" type="int"/>
                        <param name="leftToRight" type="boolean"/>
                    </params>
                    <scope line="307"/>
                    <scope line="311"/>
                    <scope line="314"/>
                </method>
                <method name="layoutContainer" type="void" line="319">
                    <params>
                        <param name="c" type="Container"/>
                    </params>
                    <declaration name="leftToRight" type="boolean" line="320"/>
                    <declaration name="x" type="int" line="321"/>
                    <declaration name="w" type="int" line="322"/>
                    <declaration name="h" type="int" line="323"/>
                    <declaration name="iconSize" type="int" line="324"/>
                    <scope line="325"/>
                    <scope line="328"/>
                    <scope line="333">
                        <scope line="336"/>
                        <scope line="339"/>
                    </scope>
                    <scope line="343"/>
                    <scope line="347"/>
                    <scope line="350"/>
                    <scope line="353"/>
                </method>
            </class>
            <class name="WindowsPropertyChangeHandler" line="358">
                <extends class="PropertyChangeHandler"/>
                <method name="propertyChange" type="void" line="359">
                    <params>
                        <param name="evt" type="PropertyChangeEvent"/>
                    </params>
                    <declaration name="prop" type="String" line="360"/>
                    <scope line="361"/>
                </method>
            </class>
            <class name="ScalableIconUIResource" line="367">
                <implements interface="Icon"/>
                <implements interface="UIResource"/>
                <javadoc line="367">
                    A versatile Icon implementation which can take an array of Icon
                      instances (typically &lt;code&gt;ImageIcon&lt;/code&gt;s) and choose one that gives the best
                      quality for a given Graphics2D scale factor when painting.
                      &lt;p&gt;
                      The class is public so it can be instantiated by UIDefaults.ProxyLazyValue.
                      &lt;p&gt;
                      Note: We assume here that icons are square.                    
                </javadoc>
                <declaration name="SIZE" type="int" line="377"/>
                <declaration name="icons" type="Icon[]" line="378"/>
                <javadoc line="379">
                    @params objects an array of Icon or UIDefaults.LazyValue
                      &lt;p&gt;
                      The constructor is public so it can be called by UIDefaults.ProxyLazyValue.                    
                </javadoc>
                <method name="ScalableIconUIResource" type="constructor" line="384">
                    <params>
                        <param name="objects" type="Object[]"/>
                    </params>
                    <scope line="386">
                        <scope line="387"/>
                        <scope line="390"/>
                    </scope>
                </method>
                <javadoc line="395">
                    @return the &lt;code&gt;Icon&lt;/code&gt; closest to the requested size                    
                </javadoc>
                <method name="getBestIcon" type="Icon" line="398">
                    <params>
                        <param name="size" type="int"/>
                    </params>
                    <scope line="399">
                        <declaration name="bestIndex" type="int" line="400"/>
                        <declaration name="minDiff" type="int" line="401"/>
                        <scope line="402">
                            <declaration name="icon" type="Icon" line="403"/>
                            <declaration name="iconSize" type="int" line="404"/>
                            <scope line="405">
                                <declaration name="diff" type="int" line="406"/>
                                <scope line="407"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="415"/>
                </method>
                <method name="paintIcon" type="void" line="419">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="g2d" type="Graphics2D" line="420"/>
                    <declaration name="size" type="int" line="421"/>
                    <declaration name="scale" type="double" line="422"/>
                    <declaration name="icon" type="Icon" line="423"/>
                    <declaration name="iconSize" type="int" line="424"/>
                    <scope line="425">
                        <declaration name="drawScale" type="double" line="426"/>
                    </scope>
                </method>
                <method name="getIconWidth" type="int" line="433"/>
                <method name="getIconHeight" type="int" line="436"/>
            </class>
        </class>
    </source>