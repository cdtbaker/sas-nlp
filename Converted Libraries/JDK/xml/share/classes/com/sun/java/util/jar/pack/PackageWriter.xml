<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.util.jar.pack">
        <import package="com.sun.java.util.jar.pack.ConstantPool.ClassEntry"/>
        <import package="com.sun.java.util.jar.pack.ConstantPool.DescriptorEntry"/>
        <import package="com.sun.java.util.jar.pack.ConstantPool.Entry"/>
        <import package="com.sun.java.util.jar.pack.ConstantPool.Index"/>
        <import package="com.sun.java.util.jar.pack.ConstantPool.IndexGroup"/>
        <import package="com.sun.java.util.jar.pack.ConstantPool.MemberEntry"/>
        <import package="com.sun.java.util.jar.pack.ConstantPool.NumberEntry"/>
        <import package="com.sun.java.util.jar.pack.ConstantPool.SignatureEntry"/>
        <import package="com.sun.java.util.jar.pack.ConstantPool.StringEntry"/>
        <import package="com.sun.java.util.jar.pack.Package.Class"/>
        <import package="com.sun.java.util.jar.pack.Package.File"/>
        <import package="com.sun.java.util.jar.pack.Package.InnerClass"/>
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.io.PrintStream"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.Comparator"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.util.Set"/>
        <import package="com.sun.java.util.jar.pack.Constants"/>
        <class name="PackageWriter" line="26">
            <extends class="BandStructure"/>
            <javadoc line="26">
                Writer for a package file.                
                <author>
                    John Rose                    
                </author>
            </javadoc>
            <declaration name="pkg" type="Package" line="31"/>
            <declaration name="finalOut" type="OutputStream" line="32"/>
            <method name="PackageWriter" type="constructor" line="33">
                <params>
                    <param name="pkg" type="Package"/>
                    <param name="out" type="OutputStream"/>
                </params>
            </method>
            <method name="write" type="void" line="38">
                <declaration name="ok" type="boolean" line="39"/>
                <scope line="40">
                    <scope line="41"/>
                    <scope line="45"/>
                    <scope line="55"/>
                </scope>
                <scope line="63"/>
            </method>
            <declaration name="requiredEntries" type="Set&amp;lt;Entry&amp;gt;" line="71"/>
            <declaration name="backCountTable" type="Map&amp;lt;Attribute.Layout,int[]&amp;gt;" line="72"/>
            <declaration name="attrCounts" type="int[][]" line="73"/>
            <method name="setup" type="void" line="74"/>
            <method name="setArchiveOptions" type="void" line="84">
                <declaration name="minModtime" type="int" line="85"/>
                <declaration name="maxModtime" type="int" line="86"/>
                <declaration name="minOptions" type="int" line="87"/>
                <declaration name="maxOptions" type="int" line="88"/>
                <scope line="90">
                    <declaration name="modtime" type="int" line="91"/>
                    <declaration name="options" type="int" line="92"/>
                    <scope line="93"/>
                    <scope line="96"/>
                </scope>
                <scope line="103"/>
                <scope line="106"/>
                <scope line="109">
                    <scope line="110"/>
                    <scope line="116"/>
                </scope>
                <declaration name="verCounts" type="Map&amp;lt;Integer,int[]&amp;gt;" line="120"/>
                <declaration name="bestCount" type="int" line="121"/>
                <declaration name="bestVersion" type="int" line="122"/>
                <scope line="123">
                    <declaration name="version" type="int" line="124"/>
                    <declaration name="var" type="int[]" line="125"/>
                    <scope line="126"/>
                    <declaration name="count" type="int" line="130"/>
                    <scope line="131"/>
                </scope>
                <declaration name="bestMajver" type="int" line="138"/>
                <declaration name="bestMinver" type="int" line="139"/>
                <declaration name="bestVerStr" type="String" line="142"/>
                <scope line="145">
                    <scope line="146">
                        <declaration name="a" type="Attribute" line="147"/>
                        <scope line="148">
                            <declaration name="clsVer" type="String" line="149"/>
                            <declaration name="pkgVer" type="String" line="150"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="156">
                    <declaration name="len" type="long" line="157"/>
                    <scope line="158"/>
                </scope>
                <declaration name="cost0" type="int" line="164"/>
                <declaration name="cost1" type="int" line="165"/>
                <scope line="166">
                    <scope line="167">
                        <scope line="168">
                            <scope line="169"/>
                            <scope line="172"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="178"/>
            </method>
            <method name="writeFileHeader" type="void" line="183"/>
            <method name="putMagicInt32" type="void" line="188">
                <params>
                    <param name="val" type="int"/>
                </params>
                <declaration name="res" type="int" line="189"/>
                <scope line="190"/>
            </method>
            <method name="writeArchiveMagic" type="void" line="195"/>
            <method name="writeArchiveHeader" type="void" line="198">
                <declaration name="headerDiscountForDebug" type="int" line="199"/>
                <declaration name="haveSpecial" type="boolean" line="200"/>
                <scope line="201"/>
                <declaration name="haveFiles" type="boolean" line="207"/>
                <scope line="208"/>
                <declaration name="haveNumbers" type="boolean" line="214"/>
                <scope line="215"/>
                <declaration name="DUMMY" type="int" line="226"/>
                <scope line="227"/>
                <scope line="234"/>
                <scope line="239"/>
                <scope line="242"/>
                <scope line="246"/>
                <scope line="262">
                    <declaration name="archiveSizeHi" type="int" line="263"/>
                    <declaration name="archiveSizeLo" type="int" line="264"/>
                    <declaration name="zeroLen" type="int" line="267"/>
                </scope>
            </method>
            <method name="writeConstantPoolCounts" type="void" line="274">
                <params>
                    <param name="haveNumbers" type="boolean"/>
                </params>
                <scope line="275">
                    <declaration name="tag" type="byte" line="276"/>
                    <declaration name="count" type="int" line="277"/>
                    <scope line="286"/>
                </scope>
            </method>
            <method name="getCPIndex" type="Index" line="295">
                <params>
                    <param name="tag" type="byte"/>
                </params>
            </method>
            <method name="writeConstantPool" type="void" line="298"/>
            <method name="writeUtf8Bands" type="void" line="383">
                <params>
                    <param name="cpMap" type="Entry[]"/>
                </params>
                <declaration name="SUFFIX_SKIP_1" type="int" line="386"/>
                <declaration name="PREFIX_SKIP_2" type="int" line="387"/>
                <declaration name="chars" type="char[][]" line="388"/>
                <scope line="389"/>
                <declaration name="prefixes" type="int[]" line="392"/>
                <declaration name="prevChars" type="char[]" line="393"/>
                <scope line="394">
                    <declaration name="prefix" type="int" line="395"/>
                    <declaration name="curChars" type="char[]" line="396"/>
                    <declaration name="limit" type="int" line="397"/>
                </scope>
                <scope line="404">
                    <declaration name="str" type="char[]" line="405"/>
                    <declaration name="prefix" type="int" line="406"/>
                    <declaration name="suffix" type="int" line="407"/>
                    <declaration name="isPacked" type="boolean" line="408"/>
                    <scope line="409"/>
                    <scope line="412">
                        <declaration name="numWide" type="int" line="413"/>
                        <scope line="414">
                            <scope line="415"/>
                        </scope>
                        <scope line="419"/>
                    </scope>
                    <scope line="423"/>
                    <scope line="427"/>
                    <scope line="431">
                        <scope line="434">
                            <declaration name="ch" type="int" line="435"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="440">
                    <declaration name="normCharCount" type="int" line="441"/>
                    <declaration name="packCharCount" type="int" line="442"/>
                    <declaration name="charCount" type="int" line="443"/>
                </scope>
            </method>
            <method name="tryAlternateEncoding" type="boolean" line="447">
                <params>
                    <param name="i" type="int"/>
                    <param name="numWide" type="int"/>
                    <param name="str" type="char[]"/>
                    <param name="prefix" type="int"/>
                </params>
                <declaration name="suffix" type="int" line="448"/>
                <declaration name="cvals" type="int[]" line="449"/>
                <scope line="450"/>
                <declaration name="cc" type="CodingChooser" line="453"/>
                <declaration name="bigRegular" type="Coding" line="454"/>
                <declaration name="bandName" type="String" line="455"/>
                <declaration name="sizes" type="int[]" line="456"/>
                <declaration name="BYTE_SIZE" type="int" line="457"/>
                <declaration name="ZIP_SIZE" type="int" line="458"/>
                <scope line="459"/>
                <declaration name="special" type="CodingMethod" line="462"/>
                <declaration name="charRegular" type="Coding" line="463"/>
                <scope line="465">
                    <declaration name="specialZipSize" type="int" line="466"/>
                    <declaration name="normalSizes" type="int[]" line="467"/>
                    <declaration name="normalZipSize" type="int" line="468"/>
                    <declaration name="minWin" type="int" line="469"/>
                    <scope line="471">
                        <declaration name="big" type="IntBand" line="472"/>
                    </scope>
                </scope>
            </method>
            <method name="writeSignatureBands" type="void" line="479">
                <params>
                    <param name="cpMap" type="Entry[]"/>
                </params>
                <scope line="480">
                    <declaration name="e" type="SignatureEntry" line="481"/>
                    <scope line="483"/>
                </scope>
            </method>
            <method name="writeMemberRefs" type="void" line="488">
                <params>
                    <param name="tag" type="byte"/>
                    <param name="cpMap" type="Entry[]"/>
                    <param name="cp_class" type="CPRefBand"/>
                    <param name="cp_desc" type="CPRefBand"/>
                </params>
                <scope line="489">
                    <declaration name="e" type="MemberEntry" line="490"/>
                </scope>
            </method>
            <method name="writeFiles" type="void" line="495">
                <declaration name="numFiles" type="int" line="496"/>
                <declaration name="options" type="int" line="498"/>
                <declaration name="haveSizeHi" type="boolean" line="499"/>
                <declaration name="haveModtime" type="boolean" line="500"/>
                <declaration name="haveOptions" type="boolean" line="501"/>
                <scope line="502">
                    <scope line="503">
                        <scope line="504"/>
                    </scope>
                </scope>
                <scope line="512"/>
                <scope line="516">
                    <declaration name="len" type="long" line="518"/>
                </scope>
            </method>
            <method name="collectAttributeLayouts" type="void" line="528">
                <scope line="531"/>
                <scope line="534">
                    <scope line="536"/>
                    <scope line="539">
                        <scope line="541"/>
                    </scope>
                </scope>
                <scope line="546">
                    <declaration name="nl" type="int" line="547"/>
                    <declaration name="haveLongFlags" type="boolean" line="548"/>
                    <declaration name="TOO_MANY_ATTRS" type="int" line="549"/>
                    <scope line="550">
                        <declaration name="mask" type="int" line="551"/>
                    </scope>
                    <scope line="556"/>
                </scope>
                <scope line="563"/>
                <scope line="568">
                    <declaration name="avHiBits" type="long" line="569"/>
                    <declaration name="nextLoBit" type="int" line="573"/>
                    <declaration name="defMap" type="Map&amp;lt;Attribute.Layout,int[]&amp;gt;" line="574"/>
                    <declaration name="layoutsAndCounts" type="Map.Entry[]" line="575"/>
                    <anonymous_class line="577">
                        <method name="compare" type="int" line="578">
                            <params>
                                <param name="o0" type="Object"/>
                                <param name="o1" type="Object"/>
                            </params>
                            <declaration name="e0" type="Map.Entry" line="579"/>
                            <declaration name="e1" type="Map.Entry" line="580"/>
                            <declaration name="r" type="int" line="581"/>
                        </method>
                    </anonymous_class>
                    <scope line="588">
                        <declaration name="e" type="Map.Entry" line="589"/>
                        <declaration name="def" type="Attribute.Layout" line="590"/>
                        <declaration name="count" type="int" line="591"/>
                        <declaration name="index" type="int" line="592"/>
                        <declaration name="predefIndex" type="Integer" line="593"/>
                        <scope line="594"/>
                        <scope line="597">
                            <scope line="598"/>
                        </scope>
                        <scope line="605"/>
                        <declaration name="cbles" type="Attribute.Layout.Element[]" line="609"/>
                        <declaration name="bc" type="int[]" line="610"/>
                        <scope line="611">
                            <scope line="613"/>
                        </scope>
                        <scope line="618">
                            <declaration name="ne" type="Entry" line="619"/>
                            <declaration name="layout" type="String" line="620"/>
                            <declaration name="le" type="Entry" line="621"/>
                            <scope line="624"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <declaration name="maxFlags" type="int[]" line="634"/>
            <declaration name="allLayouts" type="List&amp;lt;Map&amp;lt;Attribute.Layout,int[]&amp;gt;&amp;gt;" line="635"/>
            <method name="visitAttributeLayoutsIn" type="void" line="636">
                <params>
                    <param name="ctype" type="int"/>
                    <param name="h" type="Attribute.Holder"/>
                </params>
                <scope line="638">
                    <declaration name="def" type="Attribute.Layout" line="639"/>
                    <declaration name="defMap" type="Map&amp;lt;Attribute.Layout,int[]&amp;gt;" line="640"/>
                    <declaration name="count" type="int[]" line="641"/>
                    <scope line="642"/>
                    <scope line="645"/>
                </scope>
            </method>
            <declaration name="attrDefsWritten" type="Attribute.Layout[]" line="650"/>
            <method name="writeAttrDefs" type="void" line="651"/>
            <method name="writeAttrCounts" type="void" line="713">
                <scope line="714">
                    <declaration name="xxx_attr_bands" type="MultiBand" line="715"/>
                    <declaration name="xxx_attr_calls" type="IntBand" line="716"/>
                    <declaration name="defs" type="Attribute.Layout[]" line="717"/>
                    <scope line="719">
                        <scope line="720">
                            <declaration name="def" type="Attribute.Layout" line="721"/>
                            <declaration name="totalCount" type="int" line="724"/>
                            <declaration name="bc" type="int[]" line="726"/>
                            <scope line="727">
                                <scope line="728">
                                    <declaration name="backCount" type="int" line="729"/>
                                </scope>
                                <scope line="734"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="trimClassAttributes" type="void" line="743">
                <scope line="744"/>
            </method>
            <method name="collectInnerClasses" type="void" line="748">
                <declaration name="allICMap" type="Map&amp;lt;ClassEntry,InnerClass&amp;gt;" line="749"/>
                <scope line="750">
                    <scope line="752">
                        <declaration name="pic" type="InnerClass" line="753"/>
                        <scope line="754"/>
                    </scope>
                </scope>
                <declaration name="allICs" type="InnerClass[]" line="759"/>
                <scope line="764"/>
            </method>
            <method name="writeInnerClasses" type="void" line="768">
                <scope line="769">
                    <declaration name="flags" type="int" line="770"/>
                    <scope line="772"/>
                    <scope line="777"/>
                </scope>
            </method>
            <javadoc line="783">
                If there are any extra InnerClasses entries to write which are
                  not already implied by the global table, put them into a
                  local attribute.  This is expected to be rare.                
            </javadoc>
            <method name="writeLocalInnerClasses" type="void" line="788">
                <params>
                    <param name="cls" type="Class"/>
                </params>
                <declaration name="localICs" type="List&amp;lt;InnerClass&amp;gt;" line="789"/>
                <scope line="791">
                    <scope line="793"/>
                    <scope line="796">
                        <declaration name="flags" type="int" line="797"/>
                    </scope>
                </scope>
            </method>
            <method name="writeClassesAndByteCodes" type="void" line="805">
                <declaration name="classes" type="Class[]" line="806"/>
                <declaration name="nwritten" type="int" line="809"/>
                <scope line="810">
                    <declaration name="cls" type="Class" line="811"/>
                    <declaration name="thisClass" type="ClassEntry" line="813"/>
                    <declaration name="superClass" type="ClassEntry" line="814"/>
                    <declaration name="interfaces" type="ClassEntry[]" line="815"/>
                    <scope line="821"/>
                </scope>
            </method>
            <method name="writeMembers" type="void" line="830">
                <params>
                    <param name="cls" type="Class"/>
                </params>
                <declaration name="fields" type="List&amp;lt;Class.Field&amp;gt;" line="831"/>
                <scope line="833"/>
                <declaration name="methods" type="List&amp;lt;Class.Method&amp;gt;" line="837"/>
                <scope line="839">
                    <scope line="843"/>
                </scope>
            </method>
            <method name="writeCodeHeader" type="void" line="849">
                <params>
                    <param name="c" type="Code"/>
                </params>
                <declaration name="attrsOK" type="boolean" line="850"/>
                <declaration name="na" type="int" line="851"/>
                <declaration name="sc" type="int" line="852"/>
                <scope line="854">
                    <declaration name="siglen" type="int" line="855"/>
                </scope>
                <scope line="859"/>
                <scope line="864"/>
            </method>
            <method name="writeCodeHandlers" type="void" line="871">
                <params>
                    <param name="c" type="Code"/>
                </params>
                <declaration name="sum" type="int" line="872"/>
                <scope line="873"/>
            </method>
            <method name="writeAttrs" type="void" line="884">
                <params>
                    <param name="ctype" type="int"/>
                    <param name="h" type="Attribute.Holder"/>
                    <param name="cls" type="Class"/>
                </params>
            </method>
            <declaration name="curCode" type="Code" line="962"/>
            <declaration name="curClass" type="Class" line="963"/>
            <declaration name="curCPMap" type="Entry[]" line="964"/>
            <method name="beginCode" type="void" line="965">
                <params>
                    <param name="c" type="Code"/>
                </params>
            </method>
            <method name="endCode" type="void" line="971"/>
            <method name="initOpVariant" type="int" line="976">
                <params>
                    <param name="i" type="Instruction"/>
                    <param name="newClass" type="Entry"/>
                </params>
                <declaration name="ref" type="MemberEntry" line="978"/>
                <declaration name="refClass" type="ClassEntry" line="980"/>
            </method>
            <method name="selfOpVariant" type="int" line="986">
                <params>
                    <param name="i" type="Instruction"/>
                </params>
                <declaration name="bc" type="int" line="987"/>
                <declaration name="ref" type="MemberEntry" line="989"/>
                <declaration name="refClass" type="ClassEntry" line="990"/>
                <declaration name="self_bc" type="int" line="991"/>
            </method>
            <method name="writeByteCodes" type="void" line="996">
                <params>
                    <param name="code" type="Code"/>
                </params>
                <declaration name="cp" type="IndexGroup" line="998"/>
                <declaration name="prevAload" type="boolean" line="999"/>
                <declaration name="newClass" type="Entry" line="1000"/>
                <scope line="1001">
                    <scope line="1003">
                        <declaration name="complaint" type="String" line="1004"/>
                    </scope>
                    <scope line="1008">
                        <scope line="1009"/>
                    </scope>
                    <declaration name="bc" type="int" line="1016"/>
                    <scope line="1017">
                        <declaration name="ni" type="Instruction" line="1018"/>
                        <scope line="1019"/>
                    </scope>
                    <declaration name="init_bc" type="int" line="1024"/>
                    <scope line="1025">
                        <scope line="1026"/>
                        <declaration name="ref" type="MemberEntry" line="1033"/>
                        <declaration name="coding" type="int" line="1034"/>
                    </scope>
                    <declaration name="self_bc" type="int" line="1038"/>
                    <scope line="1039">
                        <declaration name="isField" type="boolean" line="1040"/>
                        <declaration name="isSuper" type="boolean" line="1041"/>
                        <declaration name="isAload" type="boolean" line="1042"/>
                        <declaration name="ref" type="MemberEntry" line="1047"/>
                        <declaration name="bc_which" type="CPRefBand" line="1048"/>
                        <declaration name="which_ix" type="Index" line="1049"/>
                    </scope>
                    <declaration name="isw" type="Instruction.Switch" line="1059"/>
                    <declaration name="apc" type="int" line="1060"/>
                    <declaration name="npc" type="int" line="1061"/>
                    <declaration name="caseCount" type="int" line="1062"/>
                    <scope line="1065"/>
                    <scope line="1068"/>
                    <scope line="1071">
                        <scope line="1072"/>
                    </scope>
                    <scope line="1080">
                        <declaration name="refx" type="int" line="1082"/>
                        <declaration name="ref" type="Entry" line="1083"/>
                    </scope>
                    <declaration name="branch" type="int" line="1093"/>
                    <scope line="1094"/>
                    <declaration name="ref" type="Entry" line="1099"/>
                    <scope line="1100">
                        <declaration name="bc_which" type="CPRefBand" line="1103"/>
                        <declaration name="vbc" type="int" line="1104"/>
                        <scope line="1194"/>
                        <scope line="1198"/>
                        <scope line="1202"/>
                    </scope>
                    <declaration name="slot" type="int" line="1207"/>
                    <scope line="1208">
                        <declaration name="con" type="int" line="1211"/>
                        <scope line="1212">
                            <scope line="1213"/>
                            <scope line="1216"/>
                        </scope>
                        <scope line="1220"/>
                    </scope>
                    <declaration name="pc" type="int" line="1226"/>
                    <declaration name="npc" type="int" line="1227"/>
                    <scope line="1228"/>
                </scope>
            </method>
            <declaration name="codeHist" type="int[]" line="1249"/>
            <declaration name="ldcHist" type="int[]" line="1250"/>
            <method name="printCodeHist" type="void" line="1251">
                <declaration name="hist" type="String[]" line="1253"/>
                <declaration name="totalBytes" type="int" line="1254"/>
                <scope line="1255"/>
                <scope line="1258">
                    <scope line="1259"/>
                    <declaration name="iname" type="String" line="1263"/>
                    <declaration name="count" type="String" line="1264"/>
                    <declaration name="pct" type="String" line="1266"/>
                    <scope line="1267"/>
                </scope>
                <scope line="1275"/>
                <scope line="1279">
                    <declaration name="count" type="int" line="1280"/>
                </scope>
            </method>
        </class>
    </source>