<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.swing.plaf.gtk">
        <import package="java.awt.Font"/>
        <import package="java.util"/>
        <import package="javax.swing"/>
        <import package="javax.swing.plaf.synth"/>
        <import package="com.sun.java.swing.plaf.gtk.GTKEngine.WidgetType"/>
        <class name="GTKStyleFactory" line="7">
            <extends class="SynthStyleFactory"/>
            <javadoc line="7">
                @author Scott Violet                
            </javadoc>
            <declaration name="stylesCache" type="Map&amp;lt;Object,GTKStyle&amp;gt;" line="11"/>
            <javadoc line="11">
                Saves all styles that have been accessed.  In most common cases,
                  the hash key is simply the WidgetType, but in more complex cases
                  it will be a ComplexKey object that contains arguments to help
                  differentiate similar styles.                
            </javadoc>
            <declaration name="defaultFont" type="Font" line="18"/>
            <method name="GTKStyleFactory" type="constructor" line="19"/>
            <javadoc line="22">
                Returns the &lt;code&gt;GTKStyle&lt;/code&gt; to use based on the
                  &lt;code&gt;Region&lt;/code&gt; id                
                <param>
                    c this parameter isn&apos;t used, may be null.                    
                </param>
                <param>
                    id of the region to get the style.                    
                </param>
            </javadoc>
            <method name="getStyle" type="SynthStyle" line="28">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="id" type="Region"/>
                </params>
                <declaration name="wt" type="WidgetType" line="29"/>
                <declaration name="key" type="Object" line="30"/>
                <scope line="31">
                    <scope line="32">
                        <declaration name="sb" type="JScrollBar" line="33"/>
                        <declaration name="sp" type="boolean" line="34"/>
                        <declaration name="horiz" type="boolean" line="35"/>
                        <declaration name="ltr" type="boolean" line="36"/>
                        <declaration name="focusable" type="boolean" line="37"/>
                    </scope>
                </scope>
                <scope line="41">
                    <scope line="42">
                        <declaration name="ltr" type="boolean" line="43"/>
                    </scope>
                </scope>
                <scope line="47">
                    <scope line="48">
                        <declaration name="btn" type="JButton" line="49"/>
                        <declaration name="toolButton" type="boolean" line="50"/>
                        <declaration name="defaultCapable" type="boolean" line="51"/>
                    </scope>
                </scope>
                <scope line="55"/>
                <declaration name="result" type="GTKStyle" line="58"/>
                <scope line="59"/>
            </method>
            <method name="initStyles" type="void" line="65">
                <params>
                    <param name="defaultFont" type="Font"/>
                </params>
            </method>
            <class name="ComplexKey" line="69">
                <javadoc line="69">
                    Represents a hash key used for fetching GTKStyle objects from the
                      cache.  In most cases only the WidgetType is used for lookup, but
                      in some complex cases, other Object arguments can be specified
                      via a ComplexKey to differentiate the various styles.                    
                </javadoc>
                <declaration name="wt" type="WidgetType" line="76"/>
                <declaration name="args" type="Object[]" line="77"/>
                <method name="ComplexKey" type="constructor" line="78">
                    <params>
                        <param name="wt" type="WidgetType"/>
                        <param name="args" type="Object"/>
                    </params>
                </method>
                <method name="hashCode" type="int" line="82">
                    <declaration name="hash" type="int" line="83"/>
                    <scope line="84">
                        <scope line="85"/>
                    </scope>
                </method>
                <method name="equals" type="boolean" line="91">
                    <params>
                        <param name="o" type="Object"/>
                    </params>
                    <scope line="92"/>
                    <declaration name="that" type="ComplexKey" line="95"/>
                    <scope line="96">
                        <scope line="97"/>
                        <scope line="100">
                            <scope line="101">
                                <declaration name="a1" type="Object" line="102"/>
                                <declaration name="a2" type="Object" line="103"/>
                                <scope line="104"/>
                            </scope>
                        </scope>
                    </scope>
                </method>
                <method name="toString" type="String" line="113">
                    <declaration name="str" type="String" line="114"/>
                    <scope line="115">
                        <scope line="117"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>