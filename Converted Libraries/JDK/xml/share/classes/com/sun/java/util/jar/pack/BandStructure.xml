<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.util.jar.pack">
        <import package="com.sun.java.util.jar.pack.ConstantPool.Entry"/>
        <import package="com.sun.java.util.jar.pack.ConstantPool.Index"/>
        <import package="com.sun.java.util.jar.pack.Package.Class.Field"/>
        <import package="java.io.BufferedOutputStream"/>
        <import package="java.io.ByteArrayInputStream"/>
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.EOFException"/>
        <import package="java.io.File"/>
        <import package="java.io.FileOutputStream"/>
        <import package="java.io.FilterInputStream"/>
        <import package="java.io.FilterOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.io.PrintStream"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.Collections"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.util.jar.Pack200"/>
        <import package="com.sun.java.util.jar.pack.Constants"/>
        <class name="BandStructure" line="25">
            <javadoc line="25">
                Define the structure and ordering of &quot;bands&quot; in a packed file.                
                <author>
                    John Rose                    
                </author>
            </javadoc>
            <declaration name="MAX_EFFORT" type="int" line="30"/>
            <declaration name="MIN_EFFORT" type="int" line="31"/>
            <declaration name="DEFAULT_EFFORT" type="int" line="32"/>
            <declaration name="p200" type="PropMap" line="33"/>
            <declaration name="verbose" type="int" line="34"/>
            <declaration name="effort" type="int" line="35"/>
            <scope line="36"/>
            <declaration name="optDumpBands" type="boolean" line="39"/>
            <declaration name="optDebugBands" type="boolean" line="40"/>
            <declaration name="optVaryCodings" type="boolean" line="41"/>
            <declaration name="optBigStrings" type="boolean" line="42"/>
            <method name="getCPIndex" type="Index" line="43"/>
            <declaration name="packageMajver" type="int" line="44"/>
            <javadoc line="45">
                Call this exactly once, early, to specify the archive major version.                
            </javadoc>
            <method name="initPackageMajver" type="void" line="48">
                <params>
                    <param name="packageMajver" type="int"/>
                </params>
                <scope line="50"/>
            </method>
            <method name="getPackageMajver" type="int" line="56">
                <scope line="57"/>
            </method>
            <declaration name="isReader" type="boolean" line="62"/>
            <method name="BandStructure" type="constructor" line="63"/>
            <declaration name="BYTE1" type="Coding" line="65"/>
            <declaration name="CHAR3" type="Coding" line="66"/>
            <declaration name="BCI5" type="Coding" line="67"/>
            <declaration name="BRANCH5" type="Coding" line="68"/>
            <declaration name="UNSIGNED5" type="Coding" line="69"/>
            <declaration name="UDELTA5" type="Coding" line="70"/>
            <declaration name="SIGNED5" type="Coding" line="71"/>
            <declaration name="DELTA5" type="Coding" line="72"/>
            <declaration name="MDELTA5" type="Coding" line="73"/>
            <declaration name="basicCodings" type="Coding[]" line="74"/>
            <declaration name="basicCodingIndexes" type="Map&lt;Coding,Integer&gt;" line="75"/>
            <scope line="76">
                <declaration name="map" type="Map&lt;Coding,Integer&gt;" line="80"/>
                <scope line="81">
                    <declaration name="c" type="Coding" line="82"/>
                </scope>
            </scope>
            <method name="codingForIndex" type="Coding" line="90">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="indexOf" type="int" line="93">
                <params>
                    <param name="c" type="Coding"/>
                </params>
                <declaration name="i" type="Integer" line="94"/>
            </method>
            <method name="getBasicCodings" type="Coding[]" line="98"/>
            <declaration name="bandHeaderBytes" type="byte[]" line="101"/>
            <declaration name="bandHeaderBytePos" type="int" line="102"/>
            <declaration name="bandHeaderBytePos0" type="int" line="103"/>
            <method name="getBandHeader" type="CodingMethod" line="104">
                <params>
                    <param name="XB" type="int"/>
                    <param name="regularCoding" type="Coding"/>
                </params>
                <declaration name="res" type="CodingMethod[]" line="105"/>
            </method>
            <method name="parseMetaCoding" type="int" line="111">
                <params>
                    <param name="bytes" type="byte[]"/>
                    <param name="pos" type="int"/>
                    <param name="dflt" type="Coding"/>
                    <param name="res" type="CodingMethod[]"/>
                </params>
                <scope line="112"/>
                <declaration name="pos2" type="int" line="116"/>
            </method>
            <declaration name="SHORT_BAND_HEURISTIC" type="int" line="125"/>
            <declaration name="NO_PHASE" type="int" line="126"/>
            <declaration name="COLLECT_PHASE" type="int" line="127"/>
            <declaration name="FROZEN_PHASE" type="int" line="128"/>
            <declaration name="WRITE_PHASE" type="int" line="129"/>
            <declaration name="EXPECT_PHASE" type="int" line="130"/>
            <declaration name="READ_PHASE" type="int" line="131"/>
            <declaration name="DISBURSE_PHASE" type="int" line="132"/>
            <declaration name="DONE_PHASE" type="int" line="133"/>
            <method name="phaseIsRead" type="boolean" line="134">
                <params>
                    <param name="p" type="int"/>
                </params>
            </method>
            <method name="phaseCmp" type="int" line="137">
                <params>
                    <param name="p0" type="int"/>
                    <param name="p1" type="int"/>
                </params>
            </method>
            <class name="Band" line="141">
                <javadoc line="141">
                    The packed file is divided up into a number of segments.
                      Most segments are typed as ValueBand, strongly-typed sequences
                      of integer values, all interpreted in a single way.
                      A few segments are ByteBands, which hetergeneous sequences
                      of bytes.
                      The two phases for writing a packed file are COLLECT and WRITE.
                      1. When writing a packed file, each band collects
                      data in an ad-hoc order.
                      2. At the end, each band is assigned a coding scheme,
                      and then all the bands are written in their global order.
                      The three phases for reading a packed file are EXPECT, READ,
                      and DISBURSE.
                      1. For each band, the expected number of integers  is determined.
                      2. The data is actually read from the file into the band.
                      3. The band pays out its values as requested, in an ad hoc order.
                      When the last phase of a band is done, it is marked so (DONE).
                      Clearly, these phases must be properly ordered WRT each other.                    
                </javadoc>
                <declaration name="phase" type="int" line="161"/>
                <declaration name="name" type="String" line="162"/>
                <declaration name="valuesExpected" type="int" line="163"/>
                <declaration name="outputSize" type="long" line="164"/>
                <declaration name="regularCoding" type="Coding" line="165"/>
                <declaration name="seqForDebug" type="int" line="166"/>
                <declaration name="elementCountForDebug" type="int" line="167"/>
                <method name="Band" type="constructor" line="168">
                    <params>
                        <param name="name" type="String"/>
                        <param name="regularCoding" type="Coding"/>
                    </params>
                </method>
                <method name="init" type="Band" line="174"/>
                <method name="isReader" type="boolean" line="179"/>
                <method name="phase" type="int" line="182"/>
                <method name="name" type="String" line="185"/>
                <method name="capacity" type="int" line="188"/>
                <javadoc line="188">
                    Return -1 if data buffer not allocated, else max length.                    
                </javadoc>
                <method name="setCapacity" type="void" line="192"/>
                <javadoc line="192">
                    Allocate data buffer to specified length.                    
                </javadoc>
                <method name="length" type="int" line="196"/>
                <javadoc line="196">
                    Return current number of values in buffer, which must exist.                    
                </javadoc>
                <method name="valuesRemainingForDebug" type="int" line="200"/>
                <method name="valuesExpected" type="int" line="201"/>
                <javadoc line="204">
                    Write out bytes, encoding the values.                    
                </javadoc>
                <method name="writeTo" type="void" line="207">
                    <params>
                        <param name="out" type="OutputStream"/>
                    </params>
                </method>
                <method name="chooseBandCodings" type="void" line="213"/>
                <method name="outputSize" type="long" line="214">
                    <scope line="215">
                        <declaration name="size" type="long" line="216"/>
                    </scope>
                </method>
                <method name="computeOutputSize" type="long" line="222"/>
                <method name="writeDataTo" type="void" line="223"/>
                <javadoc line="224">
                    Expect a certain number of values.                    
                </javadoc>
                <method name="expectLength" type="void" line="227">
                    <params>
                        <param name="l" type="int"/>
                    </params>
                </method>
                <javadoc line="233">
                    Expect more values.  (Multiple calls accumulate.)                    
                </javadoc>
                <method name="expectMoreLength" type="void" line="236">
                    <params>
                        <param name="l" type="int"/>
                    </params>
                </method>
                <method name="readyToCollect" type="void" line="240"/>
                <method name="doneWriting" type="void" line="244"/>
                <method name="readyToExpect" type="void" line="248"/>
                <javadoc line="251">
                    Read in bytes, decoding the values.                    
                </javadoc>
                <method name="readFrom" type="void" line="254">
                    <params>
                        <param name="in" type="InputStream"/>
                    </params>
                </method>
                <method name="readDataFrom" type="void" line="261"/>
                <method name="readyToDisburse" type="void" line="262"/>
                <method name="doneDisbursing" type="void" line="266"/>
                <method name="doneWithUnusedBand" type="void" line="270">
                    <scope line="271"/>
                    <scope line="278"/>
                </method>
                <method name="setPhase" type="void" line="282">
                    <params>
                        <param name="newPhase" type="int"/>
                    </params>
                </method>
                <declaration name="lengthForDebug" type="int" line="286"/>
                <method name="toString" type="String" line="287">
                    <declaration name="length" type="int" line="288"/>
                    <declaration name="str" type="String" line="289"/>
                </method>
            </class>
            <class name="ValueBand" line="295">
                <extends class="Band"/>
                <declaration name="values" type="int[]" line="296"/>
                <declaration name="length" type="int" line="297"/>
                <declaration name="valuesDisbursed" type="int" line="298"/>
                <declaration name="bandCoding" type="CodingMethod" line="299"/>
                <declaration name="metaCoding" type="byte[]" line="300"/>
                <method name="ValueBand" type="constructor" line="301">
                    <params>
                        <param name="name" type="String"/>
                        <param name="regularCoding" type="Coding"/>
                    </params>
                </method>
                <method name="capacity" type="int" line="304"/>
                <javadoc line="307">
                    Declare predicted or needed capacity.                    
                </javadoc>
                <method name="setCapacity" type="void" line="310">
                    <params>
                        <param name="cap" type="int"/>
                    </params>
                    <scope line="312"/>
                </method>
                <method name="length" type="int" line="318"/>
                <method name="valuesRemainingForDebug" type="int" line="321"/>
                <method name="valueAtForDebug" type="int" line="324">
                    <params>
                        <param name="i" type="int"/>
                    </params>
                </method>
                <method name="patchValue" type="void" line="327">
                    <params>
                        <param name="i" type="int"/>
                        <param name="value" type="int"/>
                    </params>
                </method>
                <method name="initializeValues" type="void" line="334">
                    <params>
                        <param name="values" type="int[]"/>
                    </params>
                </method>
                <javadoc line="340">
                    Collect one value, or store one decoded value.                    
                </javadoc>
                <method name="addValue" type="void" line="343">
                    <params>
                        <param name="x" type="int"/>
                    </params>
                </method>
                <method name="canVaryCoding" type="boolean" line="348"/>
                <method name="shouldVaryCoding" type="boolean" line="356"/>
                <method name="chooseBandCodings" type="void" line="361"/>
                <method name="computeOutputSize" type="long" line="408"/>
                <method name="computeEscapeSize" type="int" line="414">
                    <declaration name="XB" type="int" line="416"/>
                    <declaration name="X" type="int" line="417"/>
                </method>
                <method name="writeDataTo" type="void" line="420">
                    <params>
                        <param name="out" type="OutputStream"/>
                    </params>
                </method>
                <method name="readDataFrom" type="void" line="437">
                    <params>
                        <param name="in" type="InputStream"/>
                    </params>
                    <scope line="441"/>
                    <scope line="445">
                        <declaration name="X" type="int" line="448"/>
                        <declaration name="XB" type="int" line="449"/>
                        <scope line="450"/>
                        <scope line="456"/>
                        <scope line="460">
                            <declaration name="p0" type="int" line="463"/>
                            <declaration name="p1" type="int" line="464"/>
                        </scope>
                    </scope>
                    <scope line="469"/>
                </method>
                <method name="doneDisbursing" type="void" line="475"/>
                <method name="dumpBand" type="void" line="479"/>
                <javadoc line="498">
                    Disburse one value.                    
                </javadoc>
                <method name="getValue" type="int" line="501"/>
                <javadoc line="506">
                    Reset for another pass over the same value set.                    
                </javadoc>
                <method name="resetForSecondPass" type="void" line="509"/>
            </class>
            <class name="ByteBand" line="515">
                <extends class="Band"/>
                <declaration name="bytes" type="ByteArrayOutputStream" line="516"/>
                <declaration name="bytesForDump" type="ByteArrayOutputStream" line="517"/>
                <declaration name="in" type="InputStream" line="518"/>
                <method name="ByteBand" type="constructor" line="519">
                    <params>
                        <param name="name" type="String"/>
                    </params>
                </method>
                <method name="capacity" type="int" line="522"/>
                <method name="setCapacity" type="void" line="525">
                    <params>
                        <param name="cap" type="int"/>
                    </params>
                </method>
                <method name="destroy" type="void" line="529"/>
                <method name="length" type="int" line="533"/>
                <method name="reset" type="void" line="536"/>
                <method name="valuesRemainingForDebug" type="int" line="539"/>
                <method name="chooseBandCodings" type="void" line="542"/>
                <method name="computeOutputSize" type="long" line="546"/>
                <method name="writeDataTo" type="void" line="549">
                    <params>
                        <param name="out" type="OutputStream"/>
                    </params>
                </method>
                <method name="dumpBand" type="void" line="555"/>
                <method name="readDataFrom" type="void" line="562">
                    <params>
                        <param name="in" type="InputStream"/>
                    </params>
                    <declaration name="vex" type="int" line="563"/>
                    <scope line="565"/>
                    <declaration name="buf" type="byte[]" line="570"/>
                    <scope line="571">
                        <declaration name="nr" type="int" line="572"/>
                    </scope>
                </method>
                <method name="readyToDisburse" type="void" line="579"/>
                <method name="doneDisbursing" type="void" line="583">
                    <scope line="585">
                        <scope line="586"/>
                        <scope line="589"/>
                    </scope>
                </method>
                <method name="setInputStreamFrom" type="void" line="597">
                    <params>
                        <param name="in" type="InputStream"/>
                    </params>
                    <scope line="602">
                        <anonymous_class line="604">
                            <method name="read" type="int" line="605">
                                <declaration name="ch" type="int" line="606"/>
                            </method>
                            <method name="read" type="int" line="610">
                                <params>
                                    <param name="b" type="byte"/>
                                    <param name="off" type="int"/>
                                    <param name="len" type="int"/>
                                </params>
                                <declaration name="nr" type="int" line="611"/>
                            </method>
                        </anonymous_class>
                    </scope>
                </method>
                <method name="collectorStream" type="OutputStream" line="620"/>
                <method name="getInputStream" type="InputStream" line="625"/>
                <method name="getByte" type="int" line="630">
                    <declaration name="b" type="int" line="631"/>
                </method>
                <method name="putByte" type="void" line="635">
                    <params>
                        <param name="b" type="int"/>
                    </params>
                </method>
                <method name="toString" type="String" line="639"/>
            </class>
            <class name="IntBand" line="643">
                <extends class="ValueBand"/>
                <method name="IntBand" type="constructor" line="644">
                    <params>
                        <param name="name" type="String"/>
                        <param name="regularCoding" type="Coding"/>
                    </params>
                </method>
                <method name="putInt" type="void" line="647">
                    <params>
                        <param name="x" type="int"/>
                    </params>
                </method>
                <method name="getInt" type="int" line="651"/>
                <javadoc line="654">
                    Return the sum of all values in this band.                    
                </javadoc>
                <method name="getIntTotal" type="int" line="657">
                    <declaration name="total" type="int" line="660"/>
                    <scope line="661"/>
                </method>
                <javadoc line="667">
                    Return the occurrence count of a specific value in this band.                    
                </javadoc>
                <method name="getIntCount" type="int" line="670">
                    <params>
                        <param name="value" type="int"/>
                    </params>
                    <declaration name="total" type="int" line="673"/>
                    <scope line="674">
                        <scope line="675"/>
                    </scope>
                </method>
            </class>
            <method name="getIntTotal" type="int" line="683">
                <params>
                    <param name="values" type="int[]"/>
                </params>
                <declaration name="total" type="int" line="684"/>
                <scope line="685"/>
            </method>
            <class name="CPRefBand" line="690">
                <extends class="ValueBand"/>
                <declaration name="index" type="Index" line="691"/>
                <declaration name="nullOK" type="boolean" line="692"/>
                <method name="CPRefBand" type="constructor" line="693">
                    <params>
                        <param name="name" type="String"/>
                        <param name="regularCoding" type="Coding"/>
                        <param name="cpTag" type="byte"/>
                        <param name="nullOK" type="boolean"/>
                    </params>
                </method>
                <method name="CPRefBand" type="constructor" line="698">
                    <params>
                        <param name="name" type="String"/>
                        <param name="regularCoding" type="Coding"/>
                        <param name="cpTag" type="byte"/>
                    </params>
                </method>
                <method name="CPRefBand" type="constructor" line="701">
                    <params>
                        <param name="name" type="String"/>
                        <param name="regularCoding" type="Coding"/>
                        <param name="undef" type="Object"/>
                    </params>
                </method>
                <method name="setIndex" type="void" line="704">
                    <params>
                        <param name="index" type="Index"/>
                    </params>
                </method>
                <method name="readDataFrom" type="void" line="707">
                    <params>
                        <param name="in" type="InputStream"/>
                    </params>
                </method>
                <javadoc line="711">
                    Write a constant pool reference.                    
                </javadoc>
                <method name="putRef" type="void" line="714">
                    <params>
                        <param name="e" type="Entry"/>
                    </params>
                </method>
                <method name="putRef" type="void" line="718">
                    <params>
                        <param name="e" type="Entry"/>
                        <param name="index" type="Index"/>
                    </params>
                </method>
                <method name="putRef" type="void" line="722">
                    <params>
                        <param name="e" type="Entry"/>
                        <param name="cptag" type="byte"/>
                    </params>
                </method>
                <method name="getRef" type="Entry" line="725"/>
                <method name="getRef" type="Entry" line="730">
                    <params>
                        <param name="index" type="Index"/>
                    </params>
                </method>
                <method name="getRef" type="Entry" line="734">
                    <params>
                        <param name="cptag" type="byte"/>
                    </params>
                </method>
                <method name="encodeRefOrNull" type="int" line="737">
                    <params>
                        <param name="e" type="Entry"/>
                        <param name="index" type="Index"/>
                    </params>
                    <declaration name="nonNullCode" type="int" line="738"/>
                    <scope line="739"/>
                    <scope line="742"/>
                </method>
                <method name="decodeRefOrNull" type="Entry" line="747">
                    <params>
                        <param name="code" type="int"/>
                        <param name="index" type="Index"/>
                    </params>
                    <declaration name="nonNullCode" type="int" line="748"/>
                    <scope line="749"/>
                    <scope line="752"/>
                </method>
            </class>
            <declaration name="allKQBands" type="List&lt;CPRefBand&gt;" line="757"/>
            <declaration name="needPredefIndex" type="List&lt;Object[]&gt;" line="758"/>
            <method name="encodeRef" type="int" line="759">
                <params>
                    <param name="e" type="Entry"/>
                    <param name="ix" type="Index"/>
                </params>
                <declaration name="coding" type="int" line="760"/>
            </method>
            <method name="decodeRef" type="Entry" line="764">
                <params>
                    <param name="n" type="int"/>
                    <param name="ix" type="Index"/>
                </params>
                <declaration name="e" type="Entry" line="766"/>
            </method>
            <declaration name="codingChooser" type="CodingChooser" line="770"/>
            <method name="getCodingChooser" type="CodingChooser" line="771">
                <scope line="772">
                    <scope line="774">
                        <declaration name="classes" type="List&lt;Package.Class&gt;" line="775"/>
                        <scope line="776">
                            <declaration name="cls" type="Package.Class" line="777"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="chooseCoding" type="CodingMethod" line="784">
                <params>
                    <param name="values" type="int[]"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                    <param name="regular" type="Coding"/>
                    <param name="bandName" type="String"/>
                    <param name="sizes" type="int[]"/>
                </params>
                <scope line="786"/>
                <declaration name="cc" type="CodingChooser" line="789"/>
                <scope line="790"/>
            </method>
            <declaration name="defaultMetaCoding" type="byte[]" line="795"/>
            <declaration name="noMetaCoding" type="byte[]" line="796"/>
            <method name="decodeEscapeValue" type="int" line="797">
                <params>
                    <param name="X" type="int"/>
                    <param name="regularCoding" type="Coding"/>
                </params>
                <scope line="799">
                    <scope line="800">
                        <declaration name="XB" type="int" line="801"/>
                    </scope>
                </scope>
                <scope line="806">
                    <declaration name="L" type="int" line="807"/>
                    <scope line="808">
                        <declaration name="XB" type="int" line="809"/>
                    </scope>
                </scope>
            </method>
            <method name="encodeEscapeValue" type="int" line="816">
                <params>
                    <param name="XB" type="int"/>
                    <param name="regularCoding" type="Coding"/>
                </params>
            </method>
            <scope line="832">
                <declaration name="checkXB" type="boolean" line="833"/>
                <scope line="835">
                    <scope line="836">
                        <declaration name="D" type="Coding" line="837"/>
                        <scope line="841"/>
                    </scope>
                </scope>
            </scope>
            <class name="MultiBand" line="847">
                <extends class="Band"/>
                <method name="MultiBand" type="constructor" line="848">
                    <params>
                        <param name="name" type="String"/>
                        <param name="regularCoding" type="Coding"/>
                    </params>
                </method>
                <method name="init" type="Band" line="851">
                    <scope line="854"/>
                </method>
                <declaration name="bands" type="Band[]" line="860"/>
                <declaration name="bandCount" type="int" line="861"/>
                <method name="size" type="int" line="862"/>
                <method name="get" type="Band" line="865">
                    <params>
                        <param name="i" type="int"/>
                    </params>
                </method>
                <method name="toArray" type="Band[]" line="869"/>
                <method name="add" type="void" line="872">
                    <params>
                        <param name="b" type="Band"/>
                    </params>
                    <scope line="874"/>
                </method>
                <method name="newByteBand" type="ByteBand" line="879">
                    <params>
                        <param name="name" type="String"/>
                    </params>
                    <declaration name="b" type="ByteBand" line="880"/>
                </method>
                <method name="newIntBand" type="IntBand" line="885">
                    <params>
                        <param name="name" type="String"/>
                    </params>
                    <declaration name="b" type="IntBand" line="886"/>
                </method>
                <method name="newIntBand" type="IntBand" line="891">
                    <params>
                        <param name="name" type="String"/>
                        <param name="regularCoding" type="Coding"/>
                    </params>
                    <declaration name="b" type="IntBand" line="892"/>
                </method>
                <method name="newMultiBand" type="MultiBand" line="897">
                    <params>
                        <param name="name" type="String"/>
                        <param name="regularCoding" type="Coding"/>
                    </params>
                    <declaration name="b" type="MultiBand" line="898"/>
                </method>
                <method name="newCPRefBand" type="CPRefBand" line="903">
                    <params>
                        <param name="name" type="String"/>
                        <param name="cpTag" type="byte"/>
                    </params>
                    <declaration name="b" type="CPRefBand" line="904"/>
                </method>
                <method name="newCPRefBand" type="CPRefBand" line="909">
                    <params>
                        <param name="name" type="String"/>
                        <param name="regularCoding" type="Coding"/>
                        <param name="cpTag" type="byte"/>
                    </params>
                    <declaration name="b" type="CPRefBand" line="910"/>
                </method>
                <method name="newCPRefBand" type="CPRefBand" line="915">
                    <params>
                        <param name="name" type="String"/>
                        <param name="regularCoding" type="Coding"/>
                        <param name="cpTag" type="byte"/>
                        <param name="nullOK" type="boolean"/>
                    </params>
                    <declaration name="b" type="CPRefBand" line="916"/>
                </method>
                <method name="bandCount" type="int" line="921"/>
                <declaration name="cap" type="int" line="924"/>
                <method name="capacity" type="int" line="925"/>
                <method name="setCapacity" type="void" line="928">
                    <params>
                        <param name="cap" type="int"/>
                    </params>
                </method>
                <method name="length" type="int" line="931"/>
                <method name="valuesRemainingForDebug" type="int" line="934"/>
                <method name="chooseBandCodings" type="void" line="937">
                    <scope line="938">
                        <declaration name="b" type="Band" line="939"/>
                    </scope>
                </method>
                <method name="computeOutputSize" type="long" line="943"/>
                <method name="writeDataTo" type="void" line="953">
                    <params>
                        <param name="out" type="OutputStream"/>
                    </params>
                    <declaration name="preCount" type="long" line="954"/>
                    <scope line="956">
                        <declaration name="b" type="Band" line="957"/>
                        <scope line="959">
                            <declaration name="postCount" type="long" line="960"/>
                            <declaration name="len" type="long" line="961"/>
                            <scope line="963"/>
                        </scope>
                    </scope>
                </method>
                <method name="readDataFrom" type="void" line="969">
                    <params>
                        <param name="in" type="InputStream"/>
                    </params>
                    <scope line="971">
                        <declaration name="b" type="Band" line="972"/>
                        <scope line="974"/>
                    </scope>
                </method>
                <method name="toString" type="String" line="979"/>
            </class>
            <class name="ByteCounter" line="983">
                <extends class="FilterOutputStream"/>
                <javadoc line="983">
                    An output stream which counts the number of bytes written.                    
                </javadoc>
                <declaration name="count" type="long" line="987"/>
                <method name="ByteCounter" type="constructor" line="988">
                    <params>
                        <param name="out" type="OutputStream"/>
                    </params>
                </method>
                <method name="getCount" type="long" line="991"/>
                <method name="setCount" type="void" line="994">
                    <params>
                        <param name="c" type="long"/>
                    </params>
                </method>
                <method name="write" type="void" line="997">
                    <params>
                        <param name="b" type="int"/>
                    </params>
                </method>
                <method name="write" type="void" line="1001">
                    <params>
                        <param name="b" type="byte"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                </method>
                <method name="toString" type="String" line="1005"/>
            </class>
            <declaration name="outputCounter" type="ByteCounter" line="1009"/>
            <method name="writeAllBandsTo" type="void" line="1010">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
                <scope line="1014">
                    <declaration name="nbytes" type="long" line="1015"/>
                </scope>
            </method>
            <declaration name="archiveOptions" type="int" line="1021"/>
            <declaration name="archiveSize0" type="long" line="1022"/>
            <declaration name="archiveSize1" type="long" line="1023"/>
            <declaration name="archiveNextCount" type="int" line="1024"/>
            <declaration name="AH_LENGTH_0" type="int" line="1025"/>
            <declaration name="AH_ARCHIVE_SIZE_HI" type="int" line="1026"/>
            <declaration name="AH_ARCHIVE_SIZE_LO" type="int" line="1027"/>
            <declaration name="AH_LENGTH_S" type="int" line="1028"/>
            <declaration name="AH_LENGTH" type="int" line="1029"/>
            <declaration name="AH_FILE_HEADER_LEN" type="int" line="1030"/>
            <declaration name="AH_SPECIAL_FORMAT_LEN" type="int" line="1031"/>
            <declaration name="AH_CP_NUMBER_LEN" type="int" line="1032"/>
            <declaration name="AH_LENGTH_MIN" type="int" line="1033"/>
            <declaration name="AB_FLAGS_HI" type="int" line="1034"/>
            <declaration name="AB_FLAGS_LO" type="int" line="1035"/>
            <declaration name="AB_ATTR_COUNT" type="int" line="1036"/>
            <declaration name="AB_ATTR_INDEXES" type="int" line="1037"/>
            <declaration name="AB_ATTR_CALLS" type="int" line="1038"/>
            <method name="getAttrBand" type="IntBand" line="1039">
                <params>
                    <param name="xxx_attr_bands" type="MultiBand"/>
                    <param name="which" type="int"/>
                </params>
                <declaration name="b" type="IntBand" line="1040"/>
            </method>
            <declaration name="NULL_IS_OK" type="boolean" line="1063"/>
            <declaration name="all_bands" type="MultiBand" line="1064"/>
            <declaration name="archive_magic" type="ByteBand" line="1065"/>
            <declaration name="archive_header_0" type="IntBand" line="1066"/>
            <declaration name="archive_header_S" type="IntBand" line="1067"/>
            <declaration name="archive_header_1" type="IntBand" line="1068"/>
            <declaration name="band_headers" type="ByteBand" line="1069"/>
            <declaration name="cp_bands" type="MultiBand" line="1070"/>
            <declaration name="cp_Utf8_prefix" type="IntBand" line="1071"/>
            <declaration name="cp_Utf8_suffix" type="IntBand" line="1072"/>
            <declaration name="cp_Utf8_chars" type="IntBand" line="1073"/>
            <declaration name="cp_Utf8_big_suffix" type="IntBand" line="1074"/>
            <declaration name="cp_Utf8_big_chars" type="MultiBand" line="1075"/>
            <declaration name="cp_Int" type="IntBand" line="1076"/>
            <declaration name="cp_Float" type="IntBand" line="1077"/>
            <declaration name="cp_Long_hi" type="IntBand" line="1078"/>
            <declaration name="cp_Long_lo" type="IntBand" line="1079"/>
            <declaration name="cp_Double_hi" type="IntBand" line="1080"/>
            <declaration name="cp_Double_lo" type="IntBand" line="1081"/>
            <declaration name="cp_String" type="CPRefBand" line="1082"/>
            <declaration name="cp_Class" type="CPRefBand" line="1083"/>
            <declaration name="cp_Signature_form" type="CPRefBand" line="1084"/>
            <declaration name="cp_Signature_classes" type="CPRefBand" line="1085"/>
            <declaration name="cp_Descr_name" type="CPRefBand" line="1086"/>
            <declaration name="cp_Descr_type" type="CPRefBand" line="1087"/>
            <declaration name="cp_Field_class" type="CPRefBand" line="1088"/>
            <declaration name="cp_Field_desc" type="CPRefBand" line="1089"/>
            <declaration name="cp_Method_class" type="CPRefBand" line="1090"/>
            <declaration name="cp_Method_desc" type="CPRefBand" line="1091"/>
            <declaration name="cp_Imethod_class" type="CPRefBand" line="1092"/>
            <declaration name="cp_Imethod_desc" type="CPRefBand" line="1093"/>
            <declaration name="attr_definition_bands" type="MultiBand" line="1094"/>
            <declaration name="attr_definition_headers" type="ByteBand" line="1095"/>
            <declaration name="attr_definition_name" type="CPRefBand" line="1096"/>
            <declaration name="attr_definition_layout" type="CPRefBand" line="1097"/>
            <declaration name="ic_bands" type="MultiBand" line="1098"/>
            <declaration name="ic_this_class" type="CPRefBand" line="1099"/>
            <declaration name="ic_flags" type="IntBand" line="1100"/>
            <declaration name="ic_outer_class" type="CPRefBand" line="1101"/>
            <declaration name="ic_name" type="CPRefBand" line="1102"/>
            <declaration name="class_bands" type="MultiBand" line="1103"/>
            <declaration name="class_this" type="CPRefBand" line="1104"/>
            <declaration name="class_super" type="CPRefBand" line="1105"/>
            <declaration name="class_interface_count" type="IntBand" line="1106"/>
            <declaration name="class_interface" type="CPRefBand" line="1107"/>
            <declaration name="class_field_count" type="IntBand" line="1108"/>
            <declaration name="class_method_count" type="IntBand" line="1109"/>
            <declaration name="field_descr" type="CPRefBand" line="1110"/>
            <declaration name="field_attr_bands" type="MultiBand" line="1111"/>
            <declaration name="field_flags_hi" type="IntBand" line="1112"/>
            <declaration name="field_flags_lo" type="IntBand" line="1113"/>
            <declaration name="field_attr_count" type="IntBand" line="1114"/>
            <declaration name="field_attr_indexes" type="IntBand" line="1115"/>
            <declaration name="field_attr_calls" type="IntBand" line="1116"/>
            <declaration name="field_ConstantValue_KQ" type="CPRefBand" line="1117"/>
            <declaration name="field_Signature_RS" type="CPRefBand" line="1118"/>
            <declaration name="field_metadata_bands" type="MultiBand" line="1119"/>
            <declaration name="method_descr" type="CPRefBand" line="1120"/>
            <declaration name="method_attr_bands" type="MultiBand" line="1121"/>
            <declaration name="method_flags_hi" type="IntBand" line="1122"/>
            <declaration name="method_flags_lo" type="IntBand" line="1123"/>
            <declaration name="method_attr_count" type="IntBand" line="1124"/>
            <declaration name="method_attr_indexes" type="IntBand" line="1125"/>
            <declaration name="method_attr_calls" type="IntBand" line="1126"/>
            <declaration name="method_Exceptions_N" type="IntBand" line="1127"/>
            <declaration name="method_Exceptions_RC" type="CPRefBand" line="1128"/>
            <declaration name="method_Signature_RS" type="CPRefBand" line="1129"/>
            <declaration name="method_metadata_bands" type="MultiBand" line="1130"/>
            <declaration name="class_attr_bands" type="MultiBand" line="1131"/>
            <declaration name="class_flags_hi" type="IntBand" line="1132"/>
            <declaration name="class_flags_lo" type="IntBand" line="1133"/>
            <declaration name="class_attr_count" type="IntBand" line="1134"/>
            <declaration name="class_attr_indexes" type="IntBand" line="1135"/>
            <declaration name="class_attr_calls" type="IntBand" line="1136"/>
            <declaration name="class_SourceFile_RUN" type="CPRefBand" line="1137"/>
            <declaration name="class_EnclosingMethod_RC" type="CPRefBand" line="1138"/>
            <declaration name="class_EnclosingMethod_RDN" type="CPRefBand" line="1139"/>
            <declaration name="class_Signature_RS" type="CPRefBand" line="1140"/>
            <declaration name="class_metadata_bands" type="MultiBand" line="1141"/>
            <declaration name="class_InnerClasses_N" type="IntBand" line="1142"/>
            <declaration name="class_InnerClasses_RC" type="CPRefBand" line="1143"/>
            <declaration name="class_InnerClasses_F" type="IntBand" line="1144"/>
            <declaration name="class_InnerClasses_outer_RCN" type="CPRefBand" line="1145"/>
            <declaration name="class_InnerClasses_name_RUN" type="CPRefBand" line="1146"/>
            <declaration name="class_ClassFile_version_minor_H" type="IntBand" line="1147"/>
            <declaration name="class_ClassFile_version_major_H" type="IntBand" line="1148"/>
            <declaration name="code_bands" type="MultiBand" line="1149"/>
            <declaration name="code_headers" type="ByteBand" line="1150"/>
            <declaration name="code_max_stack" type="IntBand" line="1151"/>
            <declaration name="code_max_na_locals" type="IntBand" line="1152"/>
            <declaration name="code_handler_count" type="IntBand" line="1153"/>
            <declaration name="code_handler_start_P" type="IntBand" line="1154"/>
            <declaration name="code_handler_end_PO" type="IntBand" line="1155"/>
            <declaration name="code_handler_catch_PO" type="IntBand" line="1156"/>
            <declaration name="code_handler_class_RCN" type="CPRefBand" line="1157"/>
            <declaration name="code_attr_bands" type="MultiBand" line="1158"/>
            <declaration name="code_flags_hi" type="IntBand" line="1159"/>
            <declaration name="code_flags_lo" type="IntBand" line="1160"/>
            <declaration name="code_attr_count" type="IntBand" line="1161"/>
            <declaration name="code_attr_indexes" type="IntBand" line="1162"/>
            <declaration name="code_attr_calls" type="IntBand" line="1163"/>
            <declaration name="stackmap_bands" type="MultiBand" line="1164"/>
            <declaration name="code_StackMapTable_N" type="IntBand" line="1165"/>
            <declaration name="code_StackMapTable_frame_T" type="IntBand" line="1166"/>
            <declaration name="code_StackMapTable_local_N" type="IntBand" line="1167"/>
            <declaration name="code_StackMapTable_stack_N" type="IntBand" line="1168"/>
            <declaration name="code_StackMapTable_offset" type="IntBand" line="1169"/>
            <declaration name="code_StackMapTable_T" type="IntBand" line="1170"/>
            <declaration name="code_StackMapTable_RC" type="CPRefBand" line="1171"/>
            <declaration name="code_StackMapTable_P" type="IntBand" line="1172"/>
            <declaration name="code_LineNumberTable_N" type="IntBand" line="1173"/>
            <declaration name="code_LineNumberTable_bci_P" type="IntBand" line="1174"/>
            <declaration name="code_LineNumberTable_line" type="IntBand" line="1175"/>
            <declaration name="code_LocalVariableTable_N" type="IntBand" line="1176"/>
            <declaration name="code_LocalVariableTable_bci_P" type="IntBand" line="1177"/>
            <declaration name="code_LocalVariableTable_span_O" type="IntBand" line="1178"/>
            <declaration name="code_LocalVariableTable_name_RU" type="CPRefBand" line="1179"/>
            <declaration name="code_LocalVariableTable_type_RS" type="CPRefBand" line="1180"/>
            <declaration name="code_LocalVariableTable_slot" type="IntBand" line="1181"/>
            <declaration name="code_LocalVariableTypeTable_N" type="IntBand" line="1182"/>
            <declaration name="code_LocalVariableTypeTable_bci_P" type="IntBand" line="1183"/>
            <declaration name="code_LocalVariableTypeTable_span_O" type="IntBand" line="1184"/>
            <declaration name="code_LocalVariableTypeTable_name_RU" type="CPRefBand" line="1185"/>
            <declaration name="code_LocalVariableTypeTable_type_RS" type="CPRefBand" line="1186"/>
            <declaration name="code_LocalVariableTypeTable_slot" type="IntBand" line="1187"/>
            <declaration name="bc_bands" type="MultiBand" line="1188"/>
            <declaration name="bc_codes" type="ByteBand" line="1189"/>
            <declaration name="bc_case_count" type="IntBand" line="1190"/>
            <declaration name="bc_case_value" type="IntBand" line="1191"/>
            <declaration name="bc_byte" type="ByteBand" line="1192"/>
            <declaration name="bc_short" type="IntBand" line="1193"/>
            <declaration name="bc_local" type="IntBand" line="1194"/>
            <declaration name="bc_label" type="IntBand" line="1195"/>
            <declaration name="bc_intref" type="CPRefBand" line="1196"/>
            <declaration name="bc_floatref" type="CPRefBand" line="1197"/>
            <declaration name="bc_longref" type="CPRefBand" line="1198"/>
            <declaration name="bc_doubleref" type="CPRefBand" line="1199"/>
            <declaration name="bc_stringref" type="CPRefBand" line="1200"/>
            <declaration name="bc_classref" type="CPRefBand" line="1201"/>
            <declaration name="bc_fieldref" type="CPRefBand" line="1202"/>
            <declaration name="bc_methodref" type="CPRefBand" line="1203"/>
            <declaration name="bc_imethodref" type="CPRefBand" line="1204"/>
            <declaration name="bc_thisfield" type="CPRefBand" line="1205"/>
            <declaration name="bc_superfield" type="CPRefBand" line="1206"/>
            <declaration name="bc_thismethod" type="CPRefBand" line="1207"/>
            <declaration name="bc_supermethod" type="CPRefBand" line="1208"/>
            <declaration name="bc_initref" type="IntBand" line="1209"/>
            <declaration name="bc_escref" type="CPRefBand" line="1210"/>
            <declaration name="bc_escrefsize" type="IntBand" line="1211"/>
            <declaration name="bc_escsize" type="IntBand" line="1212"/>
            <declaration name="bc_escbyte" type="ByteBand" line="1213"/>
            <declaration name="file_bands" type="MultiBand" line="1214"/>
            <declaration name="file_name" type="CPRefBand" line="1215"/>
            <declaration name="file_size_hi" type="IntBand" line="1216"/>
            <declaration name="file_size_lo" type="IntBand" line="1217"/>
            <declaration name="file_modtime" type="IntBand" line="1218"/>
            <declaration name="file_options" type="IntBand" line="1219"/>
            <declaration name="file_bits" type="ByteBand" line="1220"/>
            <javadoc line="1221">
                Given CP indexes, distribute tag-specific indexes to bands.                
            </javadoc>
            <method name="setBandIndexes" type="void" line="1224">
                <scope line="1225">
                    <declaration name="b" type="CPRefBand" line="1226"/>
                    <declaration name="which" type="Byte" line="1227"/>
                </scope>
                <scope line="1231"/>
            </method>
            <method name="setBandIndex" type="void" line="1235">
                <params>
                    <param name="b" type="CPRefBand"/>
                    <param name="which" type="byte"/>
                </params>
                <declaration name="need" type="Object[]" line="1236"/>
                <scope line="1237"/>
                <scope line="1240"/>
                <scope line="1243"/>
            </method>
            <method name="setConstantValueIndex" type="void" line="1247">
                <params>
                    <param name="f" type="Field"/>
                </params>
                <declaration name="ix" type="Index" line="1248"/>
                <scope line="1249">
                    <declaration name="tag" type="byte" line="1250"/>
                </scope>
                <scope line="1255"/>
            </method>
            <declaration name="metadataBands" type="MultiBand[]" line="1259"/>
            <scope line="1260"/>
            <declaration name="ADH_CONTEXT_MASK" type="int" line="1265"/>
            <declaration name="ADH_BIT_SHIFT" type="int" line="1266"/>
            <declaration name="ADH_BIT_IS_LSB" type="int" line="1267"/>
            <declaration name="ATTR_INDEX_OVERFLOW" type="int" line="1268"/>
            <declaration name="attrIndexLimit" type="int[]" line="1269"/>
            <declaration name="attrFlagMask" type="long[]" line="1270"/>
            <declaration name="attrDefSeen" type="long[]" line="1271"/>
            <declaration name="attrOverflowMask" type="int[]" line="1272"/>
            <declaration name="attrClassFileVersionMask" type="int" line="1273"/>
            <declaration name="attrBandTable" type="Map&lt;Attribute.Layout,Band[]&gt;" line="1274"/>
            <declaration name="attrCodeEmpty" type="Attribute.Layout" line="1275"/>
            <declaration name="attrInnerClassesEmpty" type="Attribute.Layout" line="1276"/>
            <declaration name="attrClassFileVersion" type="Attribute.Layout" line="1277"/>
            <declaration name="attrConstantValue" type="Attribute.Layout" line="1278"/>
            <declaration name="attrIndexTable" type="Map&lt;Attribute.Layout,Integer&gt;" line="1279"/>
            <declaration name="attrDefs" type="List&lt;List&lt;Attribute.Layout&gt;&gt;" line="1280"/>
            <scope line="1281">
                <scope line="1282"/>
                <scope line="1305">
                    <declaration name="xxx_metadata_bands" type="MultiBand" line="1306"/>
                </scope>
                <declaration name="stackMapDef" type="Attribute.Layout" line="1315"/>
                <scope line="1321"/>
                <scope line="1324"/>
            </scope>
            <method name="adjustToMajver" type="void" line="1330">
                <scope line="1331"/>
            </method>
            <method name="initAttrIndexLimit" type="void" line="1336">
                <scope line="1337">
                    <declaration name="defList" type="List&lt;Attribute.Layout&gt;" line="1340"/>
                    <declaration name="addMore" type="int" line="1342"/>
                </scope>
            </method>
            <method name="haveFlagsHi" type="boolean" line="1346">
                <params>
                    <param name="ctype" type="int"/>
                </params>
                <declaration name="mask" type="int" line="1347"/>
            </method>
            <method name="getPredefinedAttrs" type="List" line="1366">
                <params>
                    <param name="ctype" type="int"/>
                </params>
                <declaration name="res" type="List&lt;Attribute.Layout&gt;" line="1368"/>
                <scope line="1369">
                    <declaration name="def" type="Attribute.Layout" line="1371"/>
                </scope>
            </method>
            <method name="isPredefinedAttr" type="boolean" line="1378">
                <params>
                    <param name="ctype" type="int"/>
                    <param name="ai" type="int"/>
                </params>
            </method>
            <method name="adjustSpecialAttrMasks" type="void" line="1384">
                <scope line="1386"/>
            </method>
            <method name="makeClassFileVersionAttr" type="Attribute" line="1390">
                <params>
                    <param name="minver" type="int"/>
                    <param name="majver" type="int"/>
                </params>
                <declaration name="bytes" type="byte[]" line="1391"/>
            </method>
            <method name="parseClassFileVersionAttr" type="short[]" line="1394">
                <params>
                    <param name="attr" type="Attribute"/>
                </params>
                <declaration name="bytes" type="byte[]" line="1397"/>
                <declaration name="minver" type="int" line="1398"/>
                <declaration name="majver" type="int" line="1399"/>
            </method>
            <method name="assertBandOKForElems" type="boolean" line="1402">
                <params>
                    <param name="ab" type="Band[]"/>
                    <param name="elems" type="Attribute.Layout.Element[]"/>
                </params>
                <scope line="1403"/>
            </method>
            <method name="assertBandOKForElem" type="boolean" line="1408">
                <params>
                    <param name="ab" type="Band[]"/>
                    <param name="e" type="Attribute.Layout.Element"/>
                </params>
            </method>
            <method name="predefineAttribute" type="Attribute.Layout" line="1472">
                <params>
                    <param name="index" type="int"/>
                    <param name="ctype" type="int"/>
                    <param name="ab" type="Band[]"/>
                    <param name="name" type="String"/>
                    <param name="layout" type="String"/>
                </params>
            </method>
            <method name="predefineAttribute" type="Attribute.Layout" line="1486">
                <params>
                    <param name="index" type="int"/>
                    <param name="bandPrefix" type="String"/>
                    <param name="addHere" type="MultiBand"/>
                    <param name="attr" type="Attribute"/>
                </params>
                <declaration name="def" type="Attribute.Layout" line="1487"/>
                <declaration name="ctype" type="int" line="1488"/>
            </method>
            <method name="undefineAttribute" type="void" line="1491">
                <params>
                    <param name="index" type="int"/>
                    <param name="ctype" type="int"/>
                </params>
                <scope line="1492"/>
                <declaration name="defList" type="List&lt;Attribute.Layout&gt;" line="1495"/>
                <declaration name="def" type="Attribute.Layout" line="1496"/>
                <declaration name="ab" type="Band[]" line="1503"/>
                <scope line="1504"/>
            </method>
            <declaration name="attrBands" type="MultiBand[]" line="1508"/>
            <scope line="1509"/>
            <method name="makeNewAttributeBands" type="void" line="1515">
                <scope line="1517">
                    <declaration name="cname" type="String" line="1518"/>
                    <declaration name="xxx_attr_bands" type="MultiBand" line="1519"/>
                    <declaration name="defSeen" type="long" line="1520"/>
                    <scope line="1522">
                        <declaration name="def" type="Attribute.Layout" line="1523"/>
                        <scope line="1526"/>
                        <declaration name="base" type="int" line="1530"/>
                        <declaration name="pfx" type="String" line="1531"/>
                        <declaration name="newAB" type="Band[]" line="1533"/>
                        <declaration name="prevAB" type="Band[]" line="1535"/>
                        <scope line="1536">
                            <scope line="1537"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="makeNewAttributeBands" type="Band[]" line="1544">
                <params>
                    <param name="pfx" type="String"/>
                    <param name="def" type="Attribute.Layout"/>
                    <param name="addHere" type="MultiBand"/>
                </params>
                <declaration name="base" type="int" line="1545"/>
                <declaration name="nb" type="int" line="1547"/>
                <declaration name="newAB" type="Band[]" line="1548"/>
                <scope line="1549"/>
            </method>
            <method name="makeNewAttributeBands" type="void" line="1554">
                <params>
                    <param name="pfx" type="String"/>
                    <param name="elems" type="Attribute.Layout.Element[]"/>
                    <param name="ab" type="MultiBand"/>
                </params>
                <scope line="1555">
                    <declaration name="e" type="Attribute.Layout.Element" line="1556"/>
                    <declaration name="name" type="String" line="1557"/>
                    <scope line="1558">
                        <declaration name="tem" type="int" line="1559"/>
                    </scope>
                    <declaration name="nb" type="Band" line="1564"/>
                    <scope line="1570"/>
                    <scope line="1573"/>
                    <scope line="1594"/>
                    <declaration name="refKind" type="byte" line="1599"/>
                    <declaration name="nullOK" type="boolean" line="1600"/>
                    <scope line="1612"/>
                </scope>
            </method>
            <method name="newElemBand" type="Band" line="1617">
                <params>
                    <param name="e" type="Attribute.Layout.Element"/>
                    <param name="name" type="String"/>
                    <param name="ab" type="MultiBand"/>
                </params>
                <scope line="1618"/>
                <scope line="1621"/>
                <scope line="1624"/>
            </method>
            <method name="setAttributeLayoutIndex" type="int" line="1628">
                <params>
                    <param name="def" type="Attribute.Layout"/>
                    <param name="index" type="int"/>
                </params>
                <declaration name="ctype" type="int" line="1629"/>
                <declaration name="defList" type="List&lt;Attribute.Layout&gt;" line="1631"/>
                <scope line="1632"/>
                <scope line="1639"/>
            </method>
            <declaration name="shortCodeLimits" type="int[][]" line="1651"/>
            <declaration name="shortCodeHeader_h_limit" type="int" line="1652"/>
            <method name="shortCodeHeader" type="int" line="1653">
                <params>
                    <param name="code" type="Code"/>
                </params>
                <declaration name="s" type="int" line="1654"/>
                <declaration name="l0" type="int" line="1655"/>
                <declaration name="h" type="int" line="1656"/>
                <declaration name="siglen" type="int" line="1658"/>
                <declaration name="l1" type="int" line="1661"/>
                <declaration name="lims" type="int" line="1662"/>
                <declaration name="liml" type="int" line="1663"/>
                <declaration name="sc" type="int" line="1665"/>
            </method>
            <declaration name="LONG_CODE_HEADER" type="int" line="1673"/>
            <method name="shortCodeHeader_handler_count" type="int" line="1674">
                <params>
                    <param name="sc" type="int"/>
                </params>
                <scope line="1676"/>
            </method>
            <method name="shortCodeHeader_max_stack" type="int" line="1680">
                <params>
                    <param name="sc" type="int"/>
                </params>
                <declaration name="h" type="int" line="1681"/>
                <declaration name="lims" type="int" line="1682"/>
            </method>
            <method name="shortCodeHeader_max_na_locals" type="int" line="1685">
                <params>
                    <param name="sc" type="int"/>
                </params>
                <declaration name="h" type="int" line="1686"/>
                <declaration name="lims" type="int" line="1687"/>
            </method>
            <method name="shortCodeHeader_h_base" type="int" line="1690">
                <params>
                    <param name="h" type="int"/>
                </params>
                <declaration name="sc" type="int" line="1692"/>
                <scope line="1693">
                    <declaration name="lims" type="int" line="1694"/>
                    <declaration name="liml" type="int" line="1695"/>
                </scope>
            </method>
            <method name="putLabel" type="void" line="1700">
                <params>
                    <param name="bc_label" type="IntBand"/>
                    <param name="c" type="Code"/>
                    <param name="pc" type="int"/>
                    <param name="targetPC" type="int"/>
                </params>
            </method>
            <method name="getLabel" type="int" line="1703">
                <params>
                    <param name="bc_label" type="IntBand"/>
                    <param name="c" type="Code"/>
                    <param name="pc" type="int"/>
                </params>
            </method>
            <method name="getCPRefOpBand" type="CPRefBand" line="1706">
                <params>
                    <param name="bc" type="int"/>
                </params>
            </method>
            <method name="selfOpRefBand" type="CPRefBand" line="1740">
                <params>
                    <param name="self_bc" type="int"/>
                </params>
                <declaration name="idx" type="int" line="1742"/>
                <declaration name="isSuper" type="boolean" line="1743"/>
                <declaration name="isAload" type="boolean" line="1745"/>
                <declaration name="origBC" type="int" line="1747"/>
                <declaration name="isField" type="boolean" line="1748"/>
            </method>
            <declaration name="nextSeqForDebug" type="int" line="1752"/>
            <declaration name="dumpDir" type="File" line="1753"/>
            <method name="getDumpStream" type="OutputStream" line="1754">
                <params>
                    <param name="b" type="Band"/>
                    <param name="ext" type="String"/>
                </params>
            </method>
            <method name="getDumpStream" type="OutputStream" line="1757">
                <params>
                    <param name="ix" type="Index"/>
                    <param name="ext" type="String"/>
                </params>
                <declaration name="seq" type="int" line="1759"/>
            </method>
            <method name="getDumpStream" type="OutputStream" line="1762">
                <params>
                    <param name="name" type="String"/>
                    <param name="seq" type="int"/>
                    <param name="ext" type="String"/>
                    <param name="b" type="Object"/>
                </params>
                <scope line="1763"/>
                <declaration name="dumpFile" type="File" line="1773"/>
            </method>
            <method name="assertCanChangeLength" type="boolean" line="1777">
                <params>
                    <param name="b" type="Band"/>
                </params>
            </method>
            <method name="assertPhase" type="boolean" line="1785">
                <params>
                    <param name="b" type="Band"/>
                    <param name="phaseExpected" type="int"/>
                </params>
                <scope line="1786"/>
            </method>
            <method name="verbose" type="int" line="1792"/>
            <method name="assertPhaseChangeOK" type="boolean" line="1795">
                <params>
                    <param name="b" type="Band"/>
                    <param name="p0" type="int"/>
                    <param name="p1" type="int"/>
                </params>
            </method>
            <method name="assertDoneDisbursing" type="boolean" line="1830">
                <params>
                    <param name="b" type="Band"/>
                </params>
                <scope line="1831"/>
                <declaration name="left" type="int" line="1835"/>
                <scope line="1836"/>
                <scope line="1840">
                    <declaration name="mb" type="MultiBand" line="1841"/>
                    <scope line="1842">
                        <declaration name="sub" type="Band" line="1843"/>
                        <scope line="1844"/>
                    </scope>
                </scope>
            </method>
            <method name="printCDecl" type="void" line="1852">
                <params>
                    <param name="b" type="Band"/>
                </params>
                <scope line="1853">
                    <declaration name="mb" type="MultiBand" line="1854"/>
                    <scope line="1855"/>
                </scope>
                <declaration name="ixS" type="String" line="1860"/>
                <scope line="1861">
                    <declaration name="ix" type="Index" line="1862"/>
                </scope>
                <declaration name="knownc" type="Coding[]" line="1865"/>
                <declaration name="knowns" type="String[]" line="1866"/>
                <declaration name="rc" type="Coding" line="1867"/>
                <declaration name="rci" type="int" line="1868"/>
                <declaration name="cstr" type="String" line="1869"/>
            </method>
            <declaration name="prevForAssertMap" type="Map&lt;Band,Band&gt;" line="1874"/>
            <method name="notePrevForAssert" type="boolean" line="1875">
                <params>
                    <param name="b" type="Band"/>
                    <param name="p" type="Band"/>
                </params>
            </method>
            <method name="assertReadyToReadFrom" type="boolean" line="1880">
                <params>
                    <param name="b" type="Band"/>
                    <param name="in" type="InputStream"/>
                </params>
                <declaration name="p" type="Band" line="1881"/>
                <scope line="1882"/>
                <declaration name="name" type="String" line="1889"/>
                <scope line="1890">
                    <declaration name="buf" type="StringBuilder" line="1891"/>
                    <declaration name="ch" type="int" line="1892"/>
                    <declaration name="inName" type="String" line="1894"/>
                    <scope line="1895">
                        <declaration name="sb" type="StringBuilder" line="1896"/>
                        <scope line="1899"/>
                        <scope line="1902"/>
                    </scope>
                </scope>
            </method>
            <method name="assertValidCPRefs" type="boolean" line="1911">
                <params>
                    <param name="b" type="CPRefBand"/>
                </params>
                <declaration name="limit" type="int" line="1913"/>
                <scope line="1914">
                    <declaration name="v" type="int" line="1915"/>
                    <scope line="1916"/>
                </scope>
            </method>
            <method name="assertReadyToWriteTo" type="boolean" line="1923">
                <params>
                    <param name="b" type="Band"/>
                    <param name="out" type="OutputStream"/>
                </params>
                <declaration name="p" type="Band" line="1924"/>
                <scope line="1925"/>
                <declaration name="name" type="String" line="1932"/>
                <scope line="1933">
                    <scope line="1934"/>
                </scope>
            </method>
            <method name="testBit" type="boolean" line="1941">
                <params>
                    <param name="flags" type="int"/>
                    <param name="bitMask" type="int"/>
                </params>
            </method>
            <method name="setBit" type="int" line="1944">
                <params>
                    <param name="flags" type="int"/>
                    <param name="bitMask" type="int"/>
                    <param name="z" type="boolean"/>
                </params>
            </method>
            <method name="testBit" type="boolean" line="1947">
                <params>
                    <param name="flags" type="long"/>
                    <param name="bitMask" type="long"/>
                </params>
            </method>
            <method name="setBit" type="long" line="1950">
                <params>
                    <param name="flags" type="long"/>
                    <param name="bitMask" type="long"/>
                    <param name="z" type="boolean"/>
                </params>
            </method>
            <method name="printArrayTo" type="void" line="1953">
                <params>
                    <param name="ps" type="PrintStream"/>
                    <param name="values" type="int[]"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <declaration name="len" type="int" line="1954"/>
                <scope line="1955"/>
            </method>
            <method name="printArrayTo" type="void" line="1962">
                <params>
                    <param name="ps" type="PrintStream"/>
                    <param name="cpMap" type="Entry[]"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <declaration name="buf" type="StringBuffer" line="1963"/>
                <declaration name="len" type="int" line="1964"/>
                <scope line="1965">
                    <declaration name="s" type="String" line="1966"/>
                    <scope line="1968">
                        <declaration name="ch" type="char" line="1969"/>
                        <scope line="1970"/>
                        <scope line="1973"/>
                        <scope line="1976"/>
                        <scope line="1979"/>
                        <scope line="1982"/>
                    </scope>
                </scope>
            </method>
            <method name="realloc" type="Object[]" line="1989">
                <params>
                    <param name="a" type="Object[]"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="elt" type="java.lang.Class" line="1990"/>
                <declaration name="na" type="Object[]" line="1991"/>
            </method>
            <method name="realloc" type="Object[]" line="1995">
                <params>
                    <param name="a" type="Object[]"/>
                </params>
            </method>
            <method name="realloc" type="int[]" line="1998">
                <params>
                    <param name="a" type="int[]"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="na" type="int[]" line="2001"/>
            </method>
            <method name="realloc" type="int[]" line="2005">
                <params>
                    <param name="a" type="int[]"/>
                </params>
            </method>
            <method name="realloc" type="byte[]" line="2008">
                <params>
                    <param name="a" type="byte[]"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="na" type="byte[]" line="2011"/>
            </method>
            <method name="realloc" type="byte[]" line="2015">
                <params>
                    <param name="a" type="byte[]"/>
                </params>
            </method>
        </class>
    </source>