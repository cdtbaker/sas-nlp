<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.util.jar.pack">
        <import package="com.sun.java.util.jar.pack.ConstantPool.ClassEntry"/>
        <import package="com.sun.java.util.jar.pack.ConstantPool.DescriptorEntry"/>
        <import package="com.sun.java.util.jar.pack.ConstantPool.Entry"/>
        <import package="com.sun.java.util.jar.pack.ConstantPool.SignatureEntry"/>
        <import package="com.sun.java.util.jar.pack.ConstantPool.Utf8Entry"/>
        <import package="com.sun.java.util.jar.pack.Package.Class"/>
        <import package="com.sun.java.util.jar.pack.Package.InnerClass"/>
        <import package="java.io.DataInputStream"/>
        <import package="java.io.FilterInputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Map"/>
        <import package="com.sun.java.util.jar.pack.Constants"/>
        <class name="ClassReader" line="16">
            <javadoc line="16">
                Reader for a class file that is being incorporated into a package.                
                <author>
                    John Rose                    
                </author>
            </javadoc>
            <declaration name="verbose" type="int" line="21"/>
            <declaration name="pkg" type="Package" line="22"/>
            <declaration name="cls" type="Class" line="23"/>
            <declaration name="inPos" type="long" line="24"/>
            <declaration name="in" type="DataInputStream" line="25"/>
            <declaration name="attrDefs" type="Map&lt;Attribute.Layout,Attribute&gt;" line="26"/>
            <declaration name="attrCommands" type="Map" line="27"/>
            <declaration name="unknownAttrCommand" type="String" line="28"/>
            <method name="ClassReader" type="constructor" line="29">
                <params>
                    <param name="cls" type="Class"/>
                    <param name="in" type="InputStream"/>
                </params>
                <anonymous_class line="33">
                    <method name="read" type="int" line="34">
                        <params>
                            <param name="b" type="byte"/>
                            <param name="off" type="int"/>
                            <param name="len" type="int"/>
                        </params>
                        <declaration name="nr" type="int" line="35"/>
                    </method>
                    <method name="read" type="int" line="39">
                        <declaration name="ch" type="int" line="40"/>
                    </method>
                    <method name="skip" type="long" line="44">
                        <params>
                            <param name="n" type="long"/>
                        </params>
                        <declaration name="ns" type="long" line="45"/>
                    </method>
                </anonymous_class>
            </method>
            <method name="setAttrDefs" type="void" line="52">
                <params>
                    <param name="attrDefs" type="Map<Attribute.Layout,Attribute>"/>
                </params>
            </method>
            <method name="setAttrCommands" type="void" line="55">
                <params>
                    <param name="attrCommands" type="Map"/>
                </params>
            </method>
            <method name="skip" type="void" line="58">
                <params>
                    <param name="n" type="int"/>
                    <param name="what" type="String"/>
                </params>
                <declaration name="skipped" type="long" line="60"/>
                <scope line="61">
                    <declaration name="j" type="long" line="62"/>
                </scope>
            </method>
            <method name="readUnsignedShort" type="int" line="68"/>
            <method name="readInt" type="int" line="71"/>
            <javadoc line="74">
                Read a 2-byte int, and return the &lt;em&gt;global&lt;/em&gt; CP entry for it.                
            </javadoc>
            <method name="readRef" type="Entry" line="77">
                <declaration name="i" type="int" line="78"/>
            </method>
            <method name="readRef" type="Entry" line="81">
                <params>
                    <param name="tag" type="byte"/>
                </params>
                <declaration name="e" type="Entry" line="82"/>
            </method>
            <method name="readRefOrNull" type="Entry" line="87">
                <params>
                    <param name="tag" type="byte"/>
                </params>
                <declaration name="e" type="Entry" line="88"/>
            </method>
            <method name="readUtf8Ref" type="Utf8Entry" line="92"/>
            <method name="readClassRef" type="ClassEntry" line="95"/>
            <method name="readClassRefOrNull" type="ClassEntry" line="98"/>
            <method name="readSignatureRef" type="SignatureEntry" line="101">
                <declaration name="e" type="Entry" line="102"/>
            </method>
            <method name="read" type="void" line="105">
                <declaration name="ok" type="boolean" line="106"/>
                <scope line="107"/>
                <scope line="118">
                    <scope line="119"/>
                </scope>
            </method>
            <method name="readMagicNumbers" type="void" line="124">
                <declaration name="bad" type="String" line="129"/>
                <scope line="130"/>
            </method>
            <method name="checkVersion" type="String" line="134">
                <params>
                    <param name="majver" type="int"/>
                    <param name="minver" type="int"/>
                </params>
                <scope line="135"/>
                <scope line="138"/>
            </method>
            <method name="readConstantPool" type="void" line="143">
                <declaration name="length" type="int" line="144"/>
                <declaration name="fixups" type="int[]" line="145"/>
                <declaration name="fptr" type="int" line="146"/>
                <declaration name="cpMap" type="Entry[]" line="147"/>
                <scope line="149">
                    <declaration name="tag" type="int" line="150"/>
                    <scope line="156"/>
                    <scope line="161"/>
                    <scope line="166"/>
                    <scope line="172"/>
                </scope>
                <scope line="197">
                    <declaration name="flimit" type="int" line="199"/>
                    <scope line="201">
                        <declaration name="cpi" type="int" line="202"/>
                        <declaration name="tag" type="int" line="203"/>
                        <declaration name="ref" type="int" line="204"/>
                        <declaration name="ref2" type="int" line="205"/>
                        <scope line="207"/>
                        <declaration name="mclass" type="ClassEntry" line="224"/>
                        <declaration name="mdescr" type="DescriptorEntry" line="225"/>
                        <declaration name="mname" type="Utf8Entry" line="229"/>
                        <declaration name="mtype" type="Utf8Entry" line="230"/>
                    </scope>
                </scope>
            </method>
            <method name="readHeader" type="void" line="241">
                <declaration name="ni" type="int" line="245"/>
                <scope line="247"/>
            </method>
            <method name="readMembers" type="void" line="251">
                <params>
                    <param name="doMethods" type="boolean"/>
                </params>
                <declaration name="nm" type="int" line="252"/>
                <scope line="253"/>
            </method>
            <method name="readMember" type="void" line="257">
                <params>
                    <param name="doMethod" type="boolean"/>
                </params>
                <declaration name="mflags" type="int" line="258"/>
                <declaration name="mname" type="Utf8Entry" line="259"/>
                <declaration name="mtype" type="SignatureEntry" line="260"/>
                <declaration name="descr" type="DescriptorEntry" line="261"/>
                <declaration name="m" type="Class.Member" line="262"/>
            </method>
            <method name="readAttributes" type="void" line="267">
                <params>
                    <param name="ctype" type="int"/>
                    <param name="h" type="Attribute.Holder"/>
                </params>
                <declaration name="na" type="int" line="268"/>
                <scope line="271">
                    <declaration name="name" type="String" line="272"/>
                    <declaration name="length" type="int" line="273"/>
                    <scope line="274">
                        <declaration name="lkey" type="Object" line="275"/>
                        <declaration name="cmd" type="String" line="276"/>
                        <scope line="277">
                            <declaration name="message1" type="String" line="280"/>
                            <declaration name="message2" type="String" line="283"/>
                        </scope>
                    </scope>
                    <declaration name="a" type="Attribute" line="291"/>
                    <scope line="293"/>
                    <scope line="297"/>
                    <scope line="301"/>
                    <declaration name="isStackMap" type="boolean" line="304"/>
                    <scope line="305">
                        <declaration name="code" type="Code" line="306"/>
                        <declaration name="TOO_BIG" type="int" line="307"/>
                        <scope line="308"/>
                    </scope>
                    <scope line="312">
                        <scope line="313">
                            <declaration name="message" type="String" line="314"/>
                        </scope>
                        <scope line="317"/>
                        <scope line="321">
                            <declaration name="message" type="String" line="322"/>
                        </scope>
                    </scope>
                    <scope line="326">
                        <declaration name="pos0" type="long" line="327"/>
                        <scope line="328">
                            <declaration name="m" type="Class.Method" line="329"/>
                            <scope line="331"/>
                            <scope line="334">
                                <declaration name="message" type="String" line="335"/>
                            </scope>
                        </scope>
                        <scope line="339"/>
                    </scope>
                    <scope line="345">
                        <declaration name="bytes" type="byte[]" line="346"/>
                    </scope>
                    <scope line="350"/>
                </scope>
            </method>
            <method name="readCode" type="void" line="357">
                <params>
                    <param name="code" type="Code"/>
                </params>
                <declaration name="nh" type="int" line="363"/>
                <scope line="365"/>
            </method>
            <method name="readInnerClasses" type="void" line="373">
                <params>
                    <param name="cls" type="Class"/>
                </params>
                <declaration name="nc" type="int" line="374"/>
                <declaration name="ics" type="ArrayList&lt;InnerClass&gt;" line="375"/>
                <scope line="376">
                    <declaration name="ic" type="InnerClass" line="377"/>
                </scope>
            </method>
            <class name="ClassFormatException" line="382">
                <extends class="IOException"/>
                <method name="ClassFormatException" type="constructor" line="383">
                    <params>
                        <param name="message" type="String"/>
                    </params>
                </method>
                <method name="ClassFormatException" type="constructor" line="386">
                    <params>
                        <param name="message" type="String"/>
                        <param name="cause" type="Throwable"/>
                    </params>
                </method>
            </class>
        </class>
    </source>