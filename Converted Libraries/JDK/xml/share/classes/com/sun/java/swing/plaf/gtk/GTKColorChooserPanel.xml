<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.swing.plaf.gtk">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.awt.image"/>
        <import package="javax.swing"/>
        <import package="javax.swing.colorchooser"/>
        <import package="javax.swing.event"/>
        <import package="javax.swing.plaf"/>
        <class name="GTKColorChooserPanel" line="35">
            <extends class="AbstractColorChooserPanel"/>
            <comment line="62">
                The colors are mirrored to avoid creep in adjusting an individual                
            </comment>
            <comment line="63">
                value.                
            </comment>
            <implements interface="ChangeListener"/>
            <javadoc line="35">
                A color chooser panel mimicking that of GTK&apos;s: a color wheel showing
                  hue and a triangle that varies saturation and brightness.                
                <author>
                    Scott Violet                    
                </author>
            </javadoc>
            <declaration name="PI_3" type="float" line="43"/>
            <declaration name="triangle" type="ColorTriangle" line="45"/>
            <declaration name="lastLabel" type="JLabel" line="46"/>
            <declaration name="label" type="JLabel" line="47"/>
            <declaration name="hueSpinner" type="JSpinner" line="49"/>
            <declaration name="saturationSpinner" type="JSpinner" line="50"/>
            <declaration name="valueSpinner" type="JSpinner" line="51"/>
            <declaration name="redSpinner" type="JSpinner" line="53"/>
            <declaration name="greenSpinner" type="JSpinner" line="54"/>
            <declaration name="blueSpinner" type="JSpinner" line="55"/>
            <declaration name="colorNameTF" type="JTextField" line="57"/>
            <declaration name="settingColor" type="boolean" line="59"/>
            <declaration name="hue" type="float" line="63"/>
            <declaration name="saturation" type="float" line="64"/>
            <declaration name="brightness" type="float" line="65"/>
            <javadoc line="69">
                Convenience method to transfer focus to the next child of component.                
            </javadoc>
            <method name="compositeRequestFocus" type="void" line="73">
                <params>
                    <param name="component" type="Component"/>
                    <param name="direction" type="boolean"/>
                </params>
                <comment line="72">
                    PENDING: remove this when a variant of this is added to awt.                    
                </comment>
                <scope line="74">
                    <declaration name="container" type="Container" line="75"/>
                    <scope line="76">
                        <declaration name="policy" type="FocusTraversalPolicy" line="77"/>
                        <declaration name="comp" type="Component" line="79"/>
                        <scope line="80"/>
                    </scope>
                    <declaration name="rootAncestor" type="Container" line="85"/>
                    <scope line="86">
                        <declaration name="policy" type="FocusTraversalPolicy" line="87"/>
                        <declaration name="comp" type="Component" line="89"/>
                        <scope line="91"/>
                        <scope line="94"/>
                        <scope line="97"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="107">
                Returns a user presentable description of this GTKColorChooserPane.                
            </javadoc>
            <method name="getDisplayName" type="String" line="110"/>
            <javadoc line="114">
                Returns the mnemonic to use with &lt;code&gt;getDisplayName&lt;/code&gt;.                
            </javadoc>
            <method name="getMnemonic" type="int" line="117">
                <declaration name="m" type="String" line="118"/>
                <scope line="120">
                    <scope line="121">
                        <declaration name="value" type="int" line="122"/>
                    </scope>
                    <scope line="125"/>
                </scope>
            </method>
            <javadoc line="130">
                Character to underline that represents the mnemonic.                
            </javadoc>
            <method name="getDisplayedMnemonicIndex" type="int" line="133">
                <declaration name="m" type="String" line="134"/>
                <scope line="137">
                    <scope line="138">
                        <declaration name="value" type="int" line="139"/>
                    </scope>
                    <scope line="142"/>
                </scope>
            </method>
            <method name="getSmallDisplayIcon" type="Icon" line="147"/>
            <method name="getLargeDisplayIcon" type="Icon" line="151"/>
            <method name="uninstallChooserPanel" type="void" line="155">
                <params>
                    <param name="enclosingChooser" type="JColorChooser"/>
                </params>
            </method>
            <javadoc line="160">
                Builds and configures the widgets for the GTKColorChooserPanel.                
            </javadoc>
            <method name="buildChooser" type="void" line="163">
                <comment line="167">
                    PENDING: when we straighten out user setting opacity, this should                    
                </comment>
                <comment line="168">
                    be changed.                    
                </comment>
                <comment line="176">
                    PENDING: when we straighten out user setting opacity, this should                    
                </comment>
                <comment line="177">
                    be changed.                    
                </comment>
                <declaration name="hBox" type="Box" line="221"/>
            </method>
            <javadoc line="234">
                Configures the spinner.                
            </javadoc>
            <method name="configureSpinner" type="void" line="237">
                <params>
                    <param name="spinner" type="JSpinner"/>
                    <param name="name" type="String"/>
                </params>
                <declaration name="editor" type="JComponent" line="240"/>
                <scope line="241">
                    <declaration name="ftf" type="JFormattedTextField" line="242"/>
                </scope>
            </method>
            <javadoc line="249">
                Adds the widget creating a JLabel with the specified name.                
            </javadoc>
            <method name="add" type="void" line="253">
                <params>
                    <param name="parent" type="Container"/>
                    <param name="key" type="String"/>
                    <param name="widget" type="JComponent"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <declaration name="label" type="JLabel" line="254"/>
                <declaration name="mnemonic" type="String" line="256"/>
                <scope line="258">
                    <scope line="259"/>
                    <scope line="261"/>
                    <declaration name="mnemonicIndex" type="String" line="263"/>
                    <scope line="266">
                        <scope line="267"/>
                        <scope line="270"/>
                    </scope>
                </scope>
                <scope line="275"/>
                <scope line="278"/>
                <declaration name="con" type="GridBagConstraints" line="281"/>
                <scope line="284"/>
            </method>
            <javadoc line="292">
                Refreshes the display from the model.                
            </javadoc>
            <method name="updateChooser" type="void" line="295">
                <scope line="296"/>
            </method>
            <javadoc line="302">
                Resets the red component of the selected color.                
            </javadoc>
            <method name="setRed" type="void" line="305">
                <params>
                    <param name="red" type="int"/>
                </params>
            </method>
            <javadoc line="309">
                Resets the green component of the selected color.                
            </javadoc>
            <method name="setGreen" type="void" line="312">
                <params>
                    <param name="green" type="int"/>
                </params>
            </method>
            <javadoc line="316">
                Resets the blue component of the selected color.                
            </javadoc>
            <method name="setBlue" type="void" line="319">
                <params>
                    <param name="blue" type="int"/>
                </params>
            </method>
            <javadoc line="323">
                Sets the hue of the selected color and updates the display if
                  necessary.                
            </javadoc>
            <method name="setHue" type="void" line="327">
                <params>
                    <param name="hue" type="float"/>
                    <param name="update" type="boolean"/>
                </params>
                <scope line="329"/>
            </method>
            <javadoc line="336">
                Returns the current amount of hue.                
            </javadoc>
            <method name="getHue" type="float" line="339"/>
            <javadoc line="343">
                Resets the saturation.                
            </javadoc>
            <method name="setSaturation" type="void" line="346">
                <params>
                    <param name="saturation" type="float"/>
                </params>
            </method>
            <javadoc line="350">
                Returns the saturation.                
            </javadoc>
            <method name="getSaturation" type="float" line="353"/>
            <javadoc line="357">
                Sets the brightness.                
            </javadoc>
            <method name="setBrightness" type="void" line="360">
                <params>
                    <param name="brightness" type="float"/>
                </params>
            </method>
            <javadoc line="364">
                Returns the brightness.                
            </javadoc>
            <method name="getBrightness" type="float" line="367"/>
            <javadoc line="371">
                Sets the saturation and brightness and updates the display if
                  necessary.                
            </javadoc>
            <method name="setSaturationAndBrightness" type="void" line="375">
                <params>
                    <param name="s" type="float"/>
                    <param name="b" type="float"/>
                    <param name="update" type="boolean"/>
                </params>
                <scope line="377"/>
            </method>
            <javadoc line="385">
                Resets the rgb values.                
            </javadoc>
            <method name="setRGB" type="void" line="388">
                <params>
                    <param name="rgb" type="int"/>
                </params>
                <declaration name="color" type="Color" line="389"/>
            </method>
            <javadoc line="400">
                Resets the hsb values.                
            </javadoc>
            <method name="setHSB" type="void" line="403">
                <params>
                    <param name="h" type="float"/>
                    <param name="s" type="float"/>
                    <param name="b" type="float"/>
                </params>
                <declaration name="color" type="Color" line="404"/>
            </method>
            <javadoc line="419">
                Rests the color.                
                <param>
                    color new Color                    
                </param>
                <param>
                    updateSpinners whether or not to update the spinners.                    
                </param>
                <param>
                    updateHSB if true, the hsb fields are updated based on the
                      new color                    
                </param>
                <param>
                    updateModel if true, the model is set.                    
                </param>
            </javadoc>
            <method name="setColor" type="void" line="429">
                <params>
                    <param name="color" type="Color"/>
                    <param name="updateSpinners" type="boolean"/>
                    <param name="updateHSB" type="boolean"/>
                    <param name="updateModel" type="boolean"/>
                </params>
                <comment line="453">
                    Force Integer to pad the string with 0&apos;s by adding 0x1000000 and                    
                </comment>
                <comment line="454">
                    then removing the first character.                    
                </comment>
                <scope line="430"/>
                <scope line="436">
                    <declaration name="hsb" type="float[]" line="437"/>
                </scope>
                <scope line="444">
                    <declaration name="model" type="ColorSelectionModel" line="445"/>
                    <scope line="446"/>
                </scope>
                <declaration name="hexString" type="String" line="455"/>
                <scope line="459"/>
            </method>
            <method name="getColor" type="Color" line="471"/>
            <javadoc line="475">
                ChangeListener method, updates the necessary display widgets.                
            </javadoc>
            <method name="stateChanged" type="void" line="478">
                <params>
                    <param name="e" type="ChangeEvent"/>
                </params>
                <scope line="479"/>
                <declaration name="color" type="Color" line="482"/>
                <scope line="484"/>
                <scope line="487"/>
                <scope line="491"/>
                <scope line="495"/>
                <scope line="498"/>
                <scope line="501"/>
            </method>
            <declaration name="FLAGS_CHANGED_ANGLE" type="int" line="508"/>
            <javadoc line="508">
                Flag indicating the angle, or hue, has changed and the triangle
                  needs to be recreated.                
            </javadoc>
            <declaration name="FLAGS_DRAGGING" type="int" line="513"/>
            <javadoc line="513">
                Indicates the wheel is being dragged.                
            </javadoc>
            <declaration name="FLAGS_DRAGGING_TRIANGLE" type="int" line="517"/>
            <javadoc line="517">
                Indicates the triangle is being dragged.                
            </javadoc>
            <declaration name="FLAGS_SETTING_COLOR" type="int" line="521"/>
            <javadoc line="521">
                Indicates a color is being set and we should ignore setColor                
            </javadoc>
            <declaration name="FLAGS_FOCUSED_WHEEL" type="int" line="525"/>
            <javadoc line="525">
                Indicates the wheel has focus.                
            </javadoc>
            <declaration name="FLAGS_FOCUSED_TRIANGLE" type="int" line="529"/>
            <javadoc line="529">
                Indicates the triangle has focus.                
            </javadoc>
            <class name="ColorTriangle" line="535">
                <extends class="JPanel"/>
                <comment line="73">
                    PENDING: remove this when a variant of this is added to awt.                    
                </comment>
                <javadoc line="535">
                    Class responsible for rendering a color wheel and color triangle.                    
                </javadoc>
                <declaration name="wheelImage" type="Image" line="539"/>
                <javadoc line="539">
                    Cached image of the wheel.                    
                </javadoc>
                <declaration name="triangleImage" type="Image" line="544"/>
                <javadoc line="544">
                    Cached image of the triangle.                    
                </javadoc>
                <declaration name="angle" type="double" line="549"/>
                <javadoc line="549">
                    Angle triangle is rotated by.                    
                </javadoc>
                <declaration name="flags" type="int" line="554"/>
                <javadoc line="554">
                    Boolean bitmask.                    
                </javadoc>
                <declaration name="circleX" type="int" line="559"/>
                <javadoc line="559">
                    X location of selected color indicator.                    
                </javadoc>
                <declaration name="circleY" type="int" line="563"/>
                <javadoc line="563">
                    Y location of selected color indicator.                    
                </javadoc>
                <method name="ColorTriangle" type="constructor" line="569">
                    <comment line="579">
                        We want to handle tab ourself.                        
                    </comment>
                    <comment line="582">
                        PENDING: this should come from the style.                        
                    </comment>
                    <declaration name="map" type="ActionMap" line="596"/>
                    <scope line="599"/>
                </method>
                <javadoc line="613">
                    Returns the GTKColorChooserPanel.                    
                </javadoc>
                <method name="getGTKColorChooserPanel" type="GTKColorChooserPanel" line="616"/>
                <javadoc line="620">
                    Gives focus to the wheel.                    
                </javadoc>
                <method name="focusWheel" type="void" line="623"/>
                <javadoc line="627">
                    Gives focus to the triangle.                    
                </javadoc>
                <method name="focusTriangle" type="void" line="630"/>
                <javadoc line="634">
                    Returns true if the wheel currently has focus.                    
                </javadoc>
                <method name="isWheelFocused" type="boolean" line="637"/>
                <javadoc line="641">
                    Resets the selected color.                    
                </javadoc>
                <method name="setColor" type="void" line="644">
                    <params>
                        <param name="h" type="float"/>
                        <param name="s" type="float"/>
                        <param name="b" type="float"/>
                    </params>
                    <scope line="645"/>
                </method>
                <javadoc line="653">
                    Returns the selected color.                    
                </javadoc>
                <method name="getColor" type="Color" line="656"/>
                <javadoc line="660">
                    Returns the x location of the selected color indicator.                    
                </javadoc>
                <method name="getColorX" type="int" line="663"/>
                <javadoc line="667">
                    Returns the y location of the selected color indicator.                    
                </javadoc>
                <method name="getColorY" type="int" line="670"/>
                <method name="processEvent" type="void" line="674">
                    <params>
                        <param name="e" type="AWTEvent"/>
                    </params>
                    <comment line="678">
                        Assign focus to either the wheel or triangle and attempt                        
                    </comment>
                    <comment line="679">
                        to drag either the wheel or triangle.                        
                    </comment>
                    <comment line="702">
                        Stopped dragging                        
                    </comment>
                    <comment line="707">
                        Reset the flags to indicate no one has focus                        
                    </comment>
                    <comment line="711">
                        Gained focus, reassign focus to the wheel if no one                        
                    </comment>
                    <comment line="712">
                        currently has focus.                        
                    </comment>
                    <scope line="677">
                        <declaration name="size" type="int" line="680"/>
                        <declaration name="x" type="int" line="681"/>
                        <declaration name="y" type="int" line="682"/>
                        <scope line="684"/>
                        <scope line="688"/>
                        <scope line="693"/>
                        <scope line="697"/>
                    </scope>
                    <scope line="701"/>
                    <scope line="706"/>
                    <scope line="710">
                        <scope line="714"/>
                    </scope>
                </method>
                <method name="paintComponent" type="void" line="723">
                    <params>
                        <param name="g" type="Graphics"/>
                    </params>
                    <comment line="726">
                        Draw the wheel and triangle                        
                    </comment>
                    <comment line="733">
                        Draw the focus indicator for the wheel                        
                    </comment>
                    <comment line="743">
                        Draw a line on the wheel indicating the selected hue.                        
                    </comment>
                    <comment line="758">
                        Draw the focus indicator on the triangle                        
                    </comment>
                    <comment line="772">
                        Draw the selected color indicator.                        
                    </comment>
                    <declaration name="size" type="int" line="727"/>
                    <declaration name="width" type="int" line="728"/>
                    <declaration name="image" type="Image" line="729"/>
                    <scope line="734"/>
                    <scope line="745"/>
                    <scope line="748"/>
                    <declaration name="lineX0" type="int" line="751"/>
                    <declaration name="lineY0" type="int" line="752"/>
                    <declaration name="lineX1" type="int" line="753"/>
                    <declaration name="lineY1" type="int" line="754"/>
                    <scope line="759">
                        <declaration name="g2" type="Graphics" line="760"/>
                        <declaration name="innerR" type="int" line="761"/>
                        <declaration name="a" type="int" line="762"/>
                    </scope>
                </method>
                <javadoc line="781">
                    Returns an image representing the triangle and wheel.                    
                </javadoc>
                <method name="getImage" type="Image" line="784">
                    <params>
                        <param name="size" type="int"/>
                    </params>
                    <scope line="786"/>
                    <scope line="789"/>
                    <declaration name="innerR" type="int" line="792"/>
                    <declaration name="triangleSize" type="int" line="793"/>
                    <declaration name="a" type="int" line="794"/>
                    <scope line="795"/>
                    <declaration name="g" type="Graphics" line="799"/>
                    <declaration name="rotate" type="double" line="813"/>
                </method>
                <method name="paintTriangle" type="void" line="826">
                    <params>
                        <param name="g" type="Graphics"/>
                        <param name="size" type="int"/>
                        <param name="color" type="Color"/>
                    </params>
                    <declaration name="colors" type="float[]" line="827"/>
                    <declaration name="hue" type="float" line="830"/>
                    <declaration name="dSize" type="double" line="831"/>
                    <scope line="832">
                        <declaration name="maxX" type="int" line="833"/>
                        <declaration name="factor" type="float" line="834"/>
                        <scope line="835">
                            <declaration name="value" type="float" line="836"/>
                            <scope line="837">
                                <declaration name="saturation" type="float" line="838"/>
                            </scope>
                        </scope>
                        <scope line="843"/>
                    </scope>
                </method>
                <javadoc line="850">
                    Returns a color wheel image for the specified size.                    
                    <param>
                        size Integer giving size of color wheel.                        
                    </param>
                    <return>
                        Color wheel image                        
                    </return>
                </javadoc>
                <method name="getWheelImage" type="Image" line="856">
                    <params>
                        <param name="size" type="int"/>
                    </params>
                    <declaration name="minSize" type="int" line="857"/>
                    <declaration name="doubleSize" type="int" line="858"/>
                    <declaration name="image" type="BufferedImage" line="859"/>
                    <scope line="862">
                        <declaration name="ySquared" type="int" line="863"/>
                        <scope line="864">
                            <declaration name="rad" type="double" line="865"/>
                            <scope line="867">
                                <declaration name="rgb" type="int" line="868"/>
                            </scope>
                        </scope>
                    </scope>
                </method>
                <javadoc line="878">
                    Adjusts the saturation and brightness. &lt;code&gt;x&lt;/code&gt; and
                      &lt;code&gt;y&lt;/code&gt; give the location to adjust to and are relative
                      to the origin of the wheel/triangle.                    
                    <param>
                        x X coordinate on the triangle to adjust to                        
                    </param>
                    <param>
                        y Y coordinate on the triangle to adjust to                        
                    </param>
                    <param>
                        checkLoc if true the location is checked to make sure
                          it is contained in the triangle, if false the location is
                          constrained to fit in the triangle.                        
                    </param>
                    <return>
                        true if the location is valid                        
                    </return>
                </javadoc>
                <method name="adjustSB" type="boolean" line="890">
                    <params>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="checkLoc" type="boolean"/>
                    </params>
                    <comment line="893">
                        Invert the axis.                        
                    </comment>
                    <comment line="899">
                        Rotate to origin and and verify x is valid.                        
                    </comment>
                    <comment line="917">
                        Verify y location is valid.                        
                    </comment>
                    <comment line="934">
                        Rotate again to determine value and scale                        
                    </comment>
                    <declaration name="innerR" type="int" line="891"/>
                    <declaration name="resetXY" type="boolean" line="892"/>
                    <scope line="896"/>
                    <declaration name="triangleSize" type="int" line="900"/>
                    <declaration name="x1" type="double" line="901"/>
                    <declaration name="y1" type="double" line="902"/>
                    <scope line="903">
                        <scope line="904"/>
                    </scope>
                    <scope line="910">
                        <scope line="911"/>
                    </scope>
                    <declaration name="maxY" type="int" line="918"/>
                    <scope line="920">
                        <scope line="921"/>
                    </scope>
                    <scope line="927">
                        <scope line="928"/>
                    </scope>
                    <declaration name="x2" type="double" line="935"/>
                    <declaration name="y2" type="double" line="937"/>
                    <declaration name="value" type="float" line="939"/>
                    <declaration name="maxX" type="float" line="941"/>
                    <declaration name="saturation" type="float" line="942"/>
                    <scope line="945"/>
                    <scope line="948"/>
                </method>
                <javadoc line="958">
                    Sets the saturation and brightness.                    
                </javadoc>
                <method name="setSaturationAndBrightness" type="void" line="961">
                    <params>
                        <param name="s" type="float"/>
                        <param name="b" type="float"/>
                    </params>
                    <declaration name="innerR" type="int" line="962"/>
                    <declaration name="triangleSize" type="int" line="963"/>
                    <declaration name="x" type="double" line="964"/>
                    <declaration name="maxY" type="double" line="965"/>
                    <declaration name="y" type="double" line="966"/>
                    <declaration name="x1" type="double" line="968"/>
                    <declaration name="y1" type="double" line="970"/>
                    <declaration name="newCircleX" type="int" line="972"/>
                    <declaration name="newCircleY" type="int" line="973"/>
                </method>
                <javadoc line="979">
                    Sets the saturation and brightness.                    
                </javadoc>
                <method name="setSaturationAndBrightness" type="void" line="983">
                    <params>
                        <param name="s" type="float"/>
                        <param name="b" type="float"/>
                        <param name="newCircleX" type="int"/>
                        <param name="newCircleY" type="int"/>
                    </params>
                    <declaration name="minX" type="int" line="987"/>
                    <declaration name="minY" type="int" line="988"/>
                </method>
                <javadoc line="997">
                    Adjusts the hue based on the passed in location.                    
                    <param>
                        x X location to adjust to, relative to the origin of the
                          wheel                        
                    </param>
                    <param>
                        y Y location to adjust to, relative to the origin of the
                          wheel                        
                    </param>
                    <param>
                        check if true the location is checked to make sure
                          it is contained in the wheel, if false the location is
                          constrained to fit in the wheel                        
                    </param>
                    <return>
                        true if the location is valid.                        
                    </return>
                </javadoc>
                <method name="adjustHue" type="boolean" line="1009">
                    <params>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="check" type="boolean"/>
                    </params>
                    <comment line="1014">
                        Map the location to an angle and reset hue                        
                    </comment>
                    <declaration name="rad" type="double" line="1010"/>
                    <declaration name="size" type="int" line="1011"/>
                    <scope line="1013">
                        <declaration name="angle" type="double" line="1015"/>
                        <scope line="1016">
                            <scope line="1017"/>
                            <scope line="1020"/>
                        </scope>
                        <scope line="1024">
                            <scope line="1026"/>
                            <scope line="1029"/>
                        </scope>
                    </scope>
                </method>
                <javadoc line="1043">
                    Rotates the triangle to accomodate the passed in hue.                    
                </javadoc>
                <method name="setAngleFromHue" type="void" line="1046">
                    <params>
                        <param name="hue" type="float"/>
                    </params>
                </method>
                <javadoc line="1050">
                    Sets the angle representing the hue.                    
                </javadoc>
                <method name="setHueAngle" type="void" line="1053">
                    <params>
                        <param name="angle" type="double"/>
                    </params>
                    <declaration name="oldAngle" type="double" line="1054"/>
                    <scope line="1057"/>
                </method>
                <javadoc line="1063">
                    Returns the size of the color indicator.                    
                </javadoc>
                <method name="getIndicatorSize" type="int" line="1066"/>
                <javadoc line="1070">
                    Returns the circumscribed radius of the triangle.                    
                </javadoc>
                <method name="getTriangleCircumscribedRadius" type="int" line="1073"/>
                <javadoc line="1077">
                    Returns the x origin of the wheel and triangle.                    
                </javadoc>
                <method name="getWheelXOrigin" type="int" line="1080"/>
                <javadoc line="1084">
                    Returns y origin of the wheel and triangle.                    
                </javadoc>
                <method name="getWheelYOrigin" type="int" line="1087"/>
                <javadoc line="1091">
                    Returns the width of the wheel.                    
                </javadoc>
                <method name="getWheelWidth" type="int" line="1094"/>
                <javadoc line="1098">
                    Sets the focus to one of: 0 no one, 1 the wheel or 2 the triangle.                    
                </javadoc>
                <method name="setFocusType" type="void" line="1101">
                    <params>
                        <param name="type" type="int"/>
                    </params>
                    <scope line="1102"/>
                    <scope line="1107">
                        <declaration name="toSet" type="int" line="1108"/>
                        <declaration name="toUnset" type="int" line="1109"/>
                        <scope line="1111"/>
                        <scope line="1115"/>
                    </scope>
                </method>
                <javadoc line="1123">
                    Returns the radius of the wheel.                    
                </javadoc>
                <method name="getWheelRadius" type="int" line="1126">
                    <comment line="1127">
                        As far as I can tell, GTK doesn&apos;t allow stretching this                        
                    </comment>
                    <comment line="1128">
                        widget                        
                    </comment>
                </method>
                <javadoc line="1132">
                    Updates the flags bitmask.                    
                </javadoc>
                <method name="setFlag" type="void" line="1135">
                    <params>
                        <param name="flag" type="int"/>
                        <param name="value" type="boolean"/>
                    </params>
                    <scope line="1136"/>
                    <scope line="1139"/>
                </method>
                <javadoc line="1144">
                    Returns true if a particular flag has been set.                    
                </javadoc>
                <method name="isSet" type="boolean" line="1147">
                    <params>
                        <param name="flag" type="int"/>
                    </params>
                </method>
                <javadoc line="1151">
                    Returns the RGB color to use for the specified location. The
                      passed in point must be on the color wheel and be relative to the
                      origin of the color wheel.                    
                    <param>
                        x X location to get color for                        
                    </param>
                    <param>
                        y Y location to get color for                        
                    </param>
                    <param>
                        rad Radius from center of color wheel                        
                    </param>
                    <return>
                        integer with red, green and blue components                        
                    </return>
                </javadoc>
                <method name="colorWheelLocationToRGB" type="int" line="1161">
                    <params>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="rad" type="double"/>
                    </params>
                    <comment line="1167">
                        FFFF00 - FF0000                        
                    </comment>
                    <comment line="1172">
                        FF0000 - FF00FF                        
                    </comment>
                    <comment line="1180">
                        00FF00 - FFFF00                        
                    </comment>
                    <comment line="1185">
                        FF00FF - 0000FF                        
                    </comment>
                    <comment line="1193">
                        00FFFF - 00FF00                        
                    </comment>
                    <comment line="1198">
                        0000FF - 00FFFF                        
                    </comment>
                    <declaration name="angle" type="double" line="1162"/>
                    <declaration name="rgb" type="int" line="1163"/>
                    <scope line="1165">
                        <scope line="1166"/>
                        <scope line="1171"/>
                    </scope>
                    <scope line="1177">
                        <scope line="1179"/>
                        <scope line="1184"/>
                    </scope>
                    <scope line="1190">
                        <scope line="1192"/>
                        <scope line="1197"/>
                    </scope>
                </method>
                <javadoc line="1206">
                    Increments the hue.                    
                </javadoc>
                <method name="incrementHue" type="void" line="1209">
                    <params>
                        <param name="positive" type="boolean"/>
                    </params>
                    <declaration name="hue" type="float" line="1210"/>
                    <scope line="1212"/>
                    <scope line="1215"/>
                    <scope line="1218"/>
                    <scope line="1221"/>
                </method>
            </class>
            <class name="ColorAction" line="1229">
                <extends class="AbstractAction"/>
                <comment line="73">
                    PENDING: remove this when a variant of this is added to awt.                    
                </comment>
                <javadoc line="1229">
                    Action class used for colors.                    
                </javadoc>
                <declaration name="type" type="int" line="1233"/>
                <method name="ColorAction" type="constructor" line="1235">
                    <params>
                        <param name="name" type="String"/>
                        <param name="type" type="int"/>
                    </params>
                </method>
                <method name="actionPerformed" type="void" line="1240">
                    <params>
                        <param name="e" type="ActionEvent"/>
                    </params>
                    <comment line="1269">
                        up                        
                    </comment>
                    <comment line="1273">
                        down                        
                    </comment>
                    <comment line="1277">
                        left                        
                    </comment>
                    <comment line="1281">
                        right                        
                    </comment>
                    <declaration name="triangle" type="ColorTriangle" line="1241"/>
                    <scope line="1243">
                        <declaration name="hue" type="float" line="1244"/>
                    </scope>
                    <scope line="1263">
                        <declaration name="xDelta" type="int" line="1264"/>
                        <declaration name="yDelta" type="int" line="1265"/>
                    </scope>
                </method>
            </class>
            <class name="OpaqueLabel" line="1298">
                <extends class="JLabel"/>
                <comment line="73">
                    PENDING: remove this when a variant of this is added to awt.                    
                </comment>
                <method name="isOpaque" type="boolean" line="1299"/>
            </class>
        </class>
    </source>