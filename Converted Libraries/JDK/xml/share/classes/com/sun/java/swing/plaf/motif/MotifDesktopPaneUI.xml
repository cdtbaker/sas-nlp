<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.swing.plaf.motif">
        <import package="javax.swing"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Insets"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Point"/>
        <import package="javax.swing.plaf"/>
        <import package="java.io.Serializable"/>
        <class name="MotifDesktopPaneUI" line="39">
            <extends class="javax.swing.plaf.basic.BasicDesktopPaneUI"/>
            <comment line="54">
                / DesktopPaneUI methods                
            </comment>
            <comment line="73">
                //////////////////////////////////////////////////////////////////////////////////                
            </comment>
            <comment line="74">
                /  DragPane class                
            </comment>
            <comment line="75">
                //////////////////////////////////////////////////////////////////////////////////                
            </comment>
            <comment line="83">
                //////////////////////////////////////////////////////////////////////////////////                
            </comment>
            <comment line="84">
                /  MotifDesktopManager class                
            </comment>
            <comment line="85">
                //////////////////////////////////////////////////////////////////////////////////                
            </comment>
            <comment line="267">
                / END of MotifDesktopManager                
            </comment>
            <javadoc line="39">
                &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases.  The current serialization support is appropriate
                  for short term storage or RMI between applications running the same
                  version of Swing.  A future release of Swing will provide support for
                  long term persistence.                
                <author>
                    David Kloba                    
                </author>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="54">
                <params>
                    <param name="d" type="JComponent"/>
                </params>
            </method>
            <method name="MotifDesktopPaneUI" type="constructor" line="58"/>
            <method name="installDesktopManager" type="void" line="61">
                <scope line="63"/>
            </method>
            <method name="getInsets" type="Insets" line="70">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <class name="DragPane" line="75">
                <extends class="JComponent"/>
                <comment line="92">
                    PENDING(klobad) this should be optimized                    
                </comment>
                <method name="paint" type="void" line="76">
                    <params>
                        <param name="g" type="Graphics"/>
                    </params>
                </method>
            </class>
            <class name="MotifDesktopManager" line="85">
                <extends class="DefaultDesktopManager"/>
                <comment line="92">
                    PENDING(klobad) this should be optimized                    
                </comment>
                <implements interface="Serializable"/>
                <implements interface="UIResource"/>
                <declaration name="dragPane" type="JComponent" line="86"/>
                <declaration name="usingDragPane" type="boolean" line="87"/>
                <declaration name="layeredPaneForDragPane" type="JLayeredPane" line="88"/>
                <declaration name="iconWidth" type="int" line="89"/>
                <method name="setBoundsForFrame" type="void" line="93">
                    <params>
                        <param name="f" type="JComponent"/>
                        <param name="newX" type="int"/>
                        <param name="newY" type="int"/>
                        <param name="newWidth" type="int"/>
                        <param name="newHeight" type="int"/>
                    </params>
                    <scope line="94">
                        <declaration name="didResize" type="boolean" line="95"/>
                        <declaration name="r" type="Rectangle" line="97"/>
                        <scope line="101"/>
                    </scope>
                    <scope line="104">
                        <declaration name="r" type="Rectangle" line="105"/>
                    </scope>
                </method>
                <method name="beginDraggingFrame" type="void" line="112">
                    <params>
                        <param name="f" type="JComponent"/>
                    </params>
                    <scope line="114"/>
                </method>
                <method name="dragFrame" type="void" line="125">
                    <params>
                        <param name="f" type="JComponent"/>
                        <param name="newX" type="int"/>
                        <param name="newY" type="int"/>
                    </params>
                </method>
                <method name="endDraggingFrame" type="void" line="129">
                    <params>
                        <param name="f" type="JComponent"/>
                    </params>
                    <scope line="130">
                        <scope line="133"/>
                        <scope line="136"/>
                    </scope>
                </method>
                <method name="beginResizingFrame" type="void" line="143">
                    <params>
                        <param name="f" type="JComponent"/>
                        <param name="direction" type="int"/>
                    </params>
                    <scope line="145">
                        <declaration name="p" type="JLayeredPane" line="148"/>
                    </scope>
                </method>
                <method name="resizeFrame" type="void" line="158">
                    <params>
                        <param name="f" type="JComponent"/>
                        <param name="newX" type="int"/>
                        <param name="newY" type="int"/>
                        <param name="newWidth" type="int"/>
                        <param name="newHeight" type="int"/>
                    </params>
                </method>
                <method name="endResizingFrame" type="void" line="162">
                    <params>
                        <param name="f" type="JComponent"/>
                    </params>
                    <scope line="163">
                        <declaration name="p" type="JLayeredPane" line="164"/>
                    </scope>
                </method>
                <method name="iconifyFrame" type="void" line="172">
                    <params>
                        <param name="f" type="JInternalFrame"/>
                    </params>
                    <declaration name="icon" type="JInternalFrame.JDesktopIcon" line="173"/>
                    <declaration name="p" type="Point" line="174"/>
                </method>
                <javadoc line="179">
                    Change positions of icons in the desktop pane so that
                      they do not overlap                    
                </javadoc>
                <method name="adjustIcons" type="void" line="183">
                    <params>
                        <param name="desktop" type="JDesktopPane"/>
                    </params>
                    <comment line="184">
                        We need to know Motif icon size                        
                    </comment>
                    <declaration name="icon" type="JInternalFrame.JDesktopIcon" line="185"/>
                    <declaration name="iconSize" type="Dimension" line="187"/>
                    <declaration name="frames" type="JInternalFrame[]" line="191"/>
                    <scope line="192">
                        <declaration name="ip" type="Point" line="194"/>
                    </scope>
                </method>
                <javadoc line="199">
                    Change positions of icon so that it doesn&apos;t overlap
                      other icons.                    
                </javadoc>
                <method name="adjustBoundsForIcon" type="void" line="204">
                    <params>
                        <param name="icon" type="JInternalFrame.JDesktopIcon"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <comment line="214">
                        Fix for disappearing icons. If the y value is maxy then this
                         algorithm would place the icon in a non-displayed cell.  Never                        
                    </comment>
                    <comment line="219">
                                                
                    </comment>
                    <comment line="224">
                                                
                    </comment>
                    <comment line="228">
                                                
                    </comment>
                    <comment line="236">
                                                
                    </comment>
                    <declaration name="c" type="JDesktopPane" line="205"/>
                    <declaration name="maxy" type="int" line="207"/>
                    <declaration name="w" type="int" line="208"/>
                    <declaration name="h" type="int" line="209"/>
                    <declaration name="lx" type="int" line="220"/>
                    <declaration name="ygap" type="int" line="221"/>
                    <declaration name="ly" type="int" line="222"/>
                    <declaration name="dx" type="int" line="225"/>
                    <declaration name="dy" type="int" line="226"/>
                    <scope line="232"/>
                    <scope line="237"/>
                    <scope line="240"/>
                    <scope line="242"/>
                </method>
                <method name="getIconAt" type="JInternalFrame.JDesktopIcon" line="248">
                    <params>
                        <param name="desktop" type="JDesktopPane"/>
                        <param name="icon" type="JInternalFrame.JDesktopIcon"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <declaration name="currentIcon" type="JInternalFrame.JDesktopIcon" line="250"/>
                    <declaration name="components" type="Component[]" line="251"/>
                    <scope line="253">
                        <declaration name="comp" type="Component" line="254"/>
                        <scope line="256">
                            <declaration name="p" type="Point" line="258"/>
                            <scope line="259"/>
                        </scope>
                    </scope>
                </method>
            </class>
        </class>
    </source>