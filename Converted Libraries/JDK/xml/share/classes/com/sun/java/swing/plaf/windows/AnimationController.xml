<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.swing.plaf.windows">
        <import package="java.security.AccessController"/>
        <import package="sun.security.action.GetBooleanAction"/>
        <import package="java.util"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="javax.swing"/>
        <import package="sun.swing.UIClientPropertyKey"/>
        <import package="com.sun.java.swing.plaf.windows.TMSchema.State"/>
        <import package="com.sun.java.swing.plaf.windows.TMSchema.State"/>
        <import package="com.sun.java.swing.plaf.windows.TMSchema.Part"/>
        <import package="com.sun.java.swing.plaf.windows.TMSchema.Prop"/>
        <import package="com.sun.java.swing.plaf.windows.XPStyle.Skin"/>
        <import package="sun.awt.AppContext"/>
        <class name="AnimationController" line="17">
            <implements interface="ActionListener"/>
            <implements interface="PropertyChangeListener"/>
            <javadoc line="17">
                A class to help mimic Vista theme animations.  The only kind of
                  animation it handles for now is &apos;transition&apos; animation (this seems
                  to be the only animation which Vista theme can do). This is when
                  one picture fadein over another one in some period of time.
                  According to
                  https://connect.microsoft.com/feedback/ViewFeedback.aspx?FeedbackID=86852&amp;SiteID=4
                  The animations are all linear.
                  This class has a number of responsibilities.
                  &lt;ul&gt;
                  &lt;li&gt; It trigger rapaint for the UI components involved in the animation
                  &lt;li&gt; It tracks the animation state for every UI component involved in the
                  animation and paints {@code Skin} in new {@code State} over the{@code Skin} in last {@code State} using{@code AlphaComposite.SrcOver.derive(alpha)} where {code alpha}
                  depends on the state of animation
                  &lt;/ul&gt;                
                <author>
                    Igor Kushnirskiy                    
                </author>
            </javadoc>
            <declaration name="VISTA_ANIMATION_DISABLED" type="boolean" line="35"/>
            <declaration name="ANIMATION_CONTROLLER_KEY" type="Object" line="36"/>
            <declaration name="animationStateMap" type="Map&lt;JComponent,Map&lt;Part,AnimationState&gt;&gt;" line="37"/>
            <declaration name="timer" type="javax.swing.Timer" line="38"/>
            <method name="getAnimationController" type="AnimationController" line="39">
                <declaration name="appContext" type="AppContext" line="40"/>
                <declaration name="obj" type="Object" line="41"/>
                <scope line="42"/>
            </method>
            <method name="AnimationController" type="constructor" line="48"/>
            <method name="triggerAnimation" type="void" line="53">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="part" type="Part"/>
                    <param name="newState" type="State"/>
                </params>
                <scope line="54"/>
                <declaration name="controller" type="AnimationController" line="57"/>
                <declaration name="oldState" type="State" line="58"/>
                <scope line="59">
                    <scope line="61"/>
                    <scope line="64">
                        <declaration name="duration" type="long" line="65"/>
                        <scope line="66"/>
                        <scope line="69"/>
                    </scope>
                </scope>
            </method>
            <method name="normalizeState" type="State" line="76">
                <params>
                    <param name="state" type="State"/>
                </params>
                <declaration name="rv" type="State" line="77"/>
            </method>
            <method name="getState" type="State" line="105">
                <params>
                    <param name="component" type="JComponent"/>
                    <param name="part" type="Part"/>
                </params>
                <declaration name="rv" type="State" line="106"/>
                <declaration name="tmpObject" type="Object" line="107"/>
                <scope line="108"/>
            </method>
            <method name="putState" type="void" line="113">
                <params>
                    <param name="component" type="JComponent"/>
                    <param name="part" type="Part"/>
                    <param name="state" type="State"/>
                </params>
            </method>
            <method name="startAnimation" type="void" line="116">
                <params>
                    <param name="component" type="JComponent"/>
                    <param name="part" type="Part"/>
                    <param name="startState" type="State"/>
                    <param name="endState" type="State"/>
                    <param name="millis" type="long"/>
                </params>
                <declaration name="isForwardAndReverse" type="boolean" line="117"/>
                <scope line="118"/>
                <declaration name="map" type="Map&lt;Part,AnimationState&gt;" line="121"/>
                <scope line="122">
                    <scope line="123">
                        <scope line="125"/>
                    </scope>
                </scope>
                <scope line="131"/>
                <scope line="136"/>
            </method>
            <method name="paintSkin" type="void" line="140">
                <params>
                    <param name="component" type="JComponent"/>
                    <param name="skin" type="Skin"/>
                    <param name="g" type="Graphics"/>
                    <param name="dx" type="int"/>
                    <param name="dy" type="int"/>
                    <param name="dw" type="int"/>
                    <param name="dh" type="int"/>
                    <param name="state" type="State"/>
                </params>
                <scope line="141"/>
                <declaration name="controller" type="AnimationController" line="146"/>
                <scope line="147">
                    <declaration name="animationState" type="AnimationState" line="148"/>
                    <declaration name="map" type="Map&lt;Part,AnimationState&gt;" line="149"/>
                    <scope line="150"/>
                    <scope line="153"/>
                    <scope line="156"/>
                </scope>
            </method>
            <method name="propertyChange" type="void" line="161">
                <params>
                    <param name="e" type="PropertyChangeEvent"/>
                </params>
                <scope line="162"/>
            </method>
            <method name="actionPerformed" type="void" line="166">
                <params>
                    <param name="e" type="ActionEvent"/>
                </params>
                <declaration name="componentsToRemove" type="java.util.List&lt;JComponent&gt;" line="167"/>
                <declaration name="partsToRemove" type="java.util.List&lt;Part&gt;" line="168"/>
                <scope line="169">
                    <scope line="171"/>
                    <declaration name="map" type="Map&lt;Part,AnimationState&gt;" line="174"/>
                    <scope line="175">
                        <scope line="176"/>
                    </scope>
                    <scope line="182">
                        <scope line="183">
                            <scope line="184"/>
                        </scope>
                    </scope>
                    <scope line="190">
                        <scope line="191">
                            <scope line="192"/>
                        </scope>
                        <scope line="197">
                            <scope line="198"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="204">
                    <scope line="205"/>
                </scope>
                <scope line="209"/>
            </method>
            <method name="dispose" type="void" line="213">
                <scope line="216"/>
            </method>
            <class name="AnimationState" line="220">
                <declaration name="startState" type="State" line="221"/>
                <declaration name="duration" type="long" line="222"/>
                <declaration name="startTime" type="long" line="223"/>
                <declaration name="isForward" type="boolean" line="224"/>
                <declaration name="isForwardAndReverse" type="boolean" line="225"/>
                <declaration name="progress" type="float" line="226"/>
                <method name="AnimationState" type="constructor" line="227">
                    <params>
                        <param name="startState" type="State"/>
                        <param name="milliseconds" type="long"/>
                        <param name="isForwardAndReverse" type="boolean"/>
                    </params>
                </method>
                <method name="updateProgress" type="void" line="236"/>
                <method name="paintSkin" type="void" line="253">
                    <params>
                        <param name="skin" type="Skin"/>
                        <param name="_g" type="Graphics"/>
                        <param name="dx" type="int"/>
                        <param name="dy" type="int"/>
                        <param name="dw" type="int"/>
                        <param name="dh" type="int"/>
                        <param name="state" type="State"/>
                    </params>
                </method>
                <method name="isDone" type="boolean" line="274"/>
            </class>
            <class name="PartUIClientPropertyKey" line="279">
                <implements interface="UIClientPropertyKey"/>
                <declaration name="map" type="Map&lt;Part,PartUIClientPropertyKey&gt;" line="280"/>
                <method name="getKey" type="PartUIClientPropertyKey" line="281">
                    <params>
                        <param name="part" type="Part"/>
                    </params>
                    <declaration name="rv" type="PartUIClientPropertyKey" line="282"/>
                    <scope line="283"/>
                </method>
                <declaration name="part" type="Part" line="289"/>
                <method name="PartUIClientPropertyKey" type="constructor" line="290">
                    <params>
                        <param name="part" type="Part"/>
                    </params>
                </method>
                <method name="toString" type="String" line="293"/>
            </class>
        </class>
    </source>