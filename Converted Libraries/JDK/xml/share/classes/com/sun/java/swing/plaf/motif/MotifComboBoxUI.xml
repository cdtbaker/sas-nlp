<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.swing.plaf.motif">
        <import package="java.awt"/>
        <import package="javax.swing"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.border"/>
        <import package="javax.swing.plaf.basic"/>
        <import package="java.io.Serializable"/>
        <import package="java.awt.event"/>
        <import package="java.beans"/>
        <class name="MotifComboBoxUI" line="10">
            <extends class="BasicComboBoxUI"/>
            <implements interface="Serializable"/>
            <javadoc line="10">
                ComboBox motif look and feel
                  &lt;p&gt;  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases.  The current serialization support is appropriate
                  for short term storage or RMI between applications running the same
                  version of Swing.  A future release of Swing will provide support for
                  long term persistence.                
                <author>
                    Arnaud Weber                    
                </author>
            </javadoc>
            <declaration name="arrowIcon" type="Icon" line="21"/>
            <declaration name="HORIZ_MARGIN" type="int" line="22"/>
            <method name="createUI" type="ComponentUI" line="23">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="installUI" type="void" line="26">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <anonymous_class line="29">
                    <method name="run" type="void" line="30">
                        <scope line="31"/>
                    </method>
                </anonymous_class>
                <declaration name="initCode" type="Runnable" line="29"/>
            </method>
            <method name="getMinimumSize" type="Dimension" line="39">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <scope line="40"/>
                <declaration name="size" type="Dimension" line="43"/>
                <declaration name="insets" type="Insets" line="44"/>
                <declaration name="buttonSize" type="int" line="47"/>
            </method>
            <method name="createPopup" type="ComboPopup" line="53"/>
            <class name="MotifComboPopup" line="56">
                <extends class="BasicComboPopup"/>
                <javadoc line="56">
                    Overriden to empty the MouseMotionListener.                    
                </javadoc>
                <method name="MotifComboPopup" type="constructor" line="60">
                    <params>
                        <param name="comboBox" type="JComboBox"/>
                    </params>
                </method>
                <javadoc line="63">
                    Motif combo popup should not track the mouse in the list.                    
                </javadoc>
                <method name="createListMouseMotionListener" type="MouseMotionListener" line="66">
                    <anonymous_class line="67"/>
                </method>
                <method name="createKeyListener" type="KeyListener" line="71"/>
                <class name="InvocationKeyHandler" line="74">
                    <extends class="BasicComboPopup.InvocationKeyHandler"/>
                    <method name="InvocationKeyHandler" type="constructor" line="75"/>
                </class>
            </class>
            <method name="installComponents" type="void" line="80">
                <scope line="81"/>
            </method>
            <method name="uninstallComponents" type="void" line="86"/>
            <method name="paint" type="void" line="90">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="hasFocus" type="boolean" line="91"/>
                <declaration name="r" type="Rectangle" line="92"/>
                <scope line="93"/>
                <scope line="96"/>
                <scope line="100"/>
                <scope line="106">
                    <declaration name="border" type="Border" line="107"/>
                    <declaration name="in" type="Insets" line="108"/>
                    <scope line="109"/>
                    <scope line="112"/>
                    <scope line="115"/>
                    <scope line="118"/>
                </scope>
            </method>
            <method name="paintCurrentValue" type="void" line="131">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="bounds" type="Rectangle"/>
                    <param name="hasFocus" type="boolean"/>
                </params>
                <declaration name="renderer" type="ListCellRenderer" line="132"/>
                <declaration name="c" type="Component" line="133"/>
                <declaration name="d" type="Dimension" line="134"/>
                <scope line="137"/>
                <scope line="141"/>
            </method>
            <method name="rectangleForArrowIcon" type="Rectangle" line="148">
                <declaration name="b" type="Rectangle" line="149"/>
                <declaration name="border" type="Border" line="150"/>
                <declaration name="in" type="Insets" line="151"/>
                <scope line="152"/>
                <scope line="155"/>
                <scope line="162"/>
                <scope line="165"/>
            </method>
            <method name="rectangleForCurrentValue" type="Rectangle" line="173">
                <declaration name="width" type="int" line="174"/>
                <declaration name="height" type="int" line="175"/>
                <declaration name="insets" type="Insets" line="176"/>
                <scope line="177"/>
                <scope line="180"/>
            </method>
            <method name="iconAreaWidth" type="int" line="184"/>
            <method name="configureEditor" type="void" line="188"/>
            <method name="createLayoutManager" type="LayoutManager" line="192"/>
            <method name="motifGetEditor" type="Component" line="195"/>
            <class name="ComboBoxLayoutManager" line="198">
                <extends class="BasicComboBoxUI.ComboBoxLayoutManager"/>
                <javadoc line="198">
                    This inner class is marked &amp;quot;public&amp;quot; due to a compiler bug.
                      This class should be treated as a &amp;quot;protected&amp;quot; inner class.
                      Instantiate it only within subclasses of &lt;FooUI&gt;.                    
                </javadoc>
                <method name="ComboBoxLayoutManager" type="constructor" line="204"/>
                <method name="layoutContainer" type="void" line="207">
                    <params>
                        <param name="parent" type="Container"/>
                    </params>
                    <scope line="208">
                        <declaration name="cvb" type="Rectangle" line="209"/>
                    </scope>
                </method>
            </class>
            <class name="MotifComboBoxArrowIcon" line="218">
                <implements interface="Icon"/>
                <implements interface="Serializable"/>
                <declaration name="lightShadow" type="Color" line="219"/>
                <declaration name="darkShadow" type="Color" line="220"/>
                <declaration name="fill" type="Color" line="221"/>
                <method name="MotifComboBoxArrowIcon" type="constructor" line="222">
                    <params>
                        <param name="lightShadow" type="Color"/>
                        <param name="darkShadow" type="Color"/>
                        <param name="fill" type="Color"/>
                    </params>
                </method>
                <method name="paintIcon" type="void" line="227">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="xo" type="int"/>
                        <param name="yo" type="int"/>
                    </params>
                    <declaration name="w" type="int" line="228"/>
                    <declaration name="h" type="int" line="229"/>
                    <scope line="235">
                        <scope line="239"/>
                    </scope>
                </method>
                <method name="getIconWidth" type="int" line="253"/>
                <method name="getIconHeight" type="int" line="256"/>
            </class>
            <javadoc line="260">
                {@inheritDoc}                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="createPropertyChangeListener" type="PropertyChangeListener" line="264"/>
            <class name="MotifPropertyChangeListener" line="267">
                <extends class="BasicComboBoxUI.PropertyChangeHandler"/>
                <javadoc line="267">
                    This class should be made &amp;quot;protected&amp;quot; in future releases.                    
                </javadoc>
                <method name="propertyChange" type="void" line="271">
                    <params>
                        <param name="e" type="PropertyChangeEvent"/>
                    </params>
                    <declaration name="propertyName" type="String" line="273"/>
                    <scope line="274">
                        <scope line="275">
                            <declaration name="editor" type="Component" line="276"/>
                            <scope line="277"/>
                        </scope>
                    </scope>
                </method>
            </class>
        </class>
    </source>