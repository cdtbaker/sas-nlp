<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.util.jar.pack">
        <import package="com.sun.java.util.jar.pack.ConstantPool.Entry"/>
        <import package="java.util.AbstractCollection"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collection"/>
        <import package="java.util.Iterator"/>
        <class name="Fixups" line="7">
            <extends class="AbstractCollection"/>
            <javadoc line="7">
                Collection of relocatable constant pool references.
                  It operates with respect to a particular byte array,
                  and stores some of its state in the bytes themselves.
                  &lt;p&gt;
                  As a Collection, it can be iterated over, but it is not a List,
                  since it does not natively support indexed access.
                  &lt;p&gt;                
                <author>
                    John Rose                    
                </author>
            </javadoc>
            <declaration name="bytes" type="byte[]" line="18"/>
            <declaration name="head" type="int" line="19"/>
            <declaration name="tail" type="int" line="20"/>
            <declaration name="size" type="int" line="21"/>
            <declaration name="entries" type="Entry[]" line="22"/>
            <declaration name="bigDescs" type="int[]" line="23"/>
            <method name="Fixups" type="constructor" line="24">
                <params>
                    <param name="bytes" type="byte[]"/>
                </params>
            </method>
            <method name="Fixups" type="constructor" line="29"/>
            <method name="Fixups" type="constructor" line="32">
                <params>
                    <param name="bytes" type="byte[]"/>
                    <param name="fixups" type="Collection"/>
                </params>
            </method>
            <method name="Fixups" type="constructor" line="36">
                <params>
                    <param name="fixups" type="Collection"/>
                </params>
            </method>
            <declaration name="MINBIGSIZE" type="int" line="40"/>
            <declaration name="noBigDescs" type="int[]" line="41"/>
            <method name="size" type="int" line="42"/>
            <method name="trimToSize" type="void" line="45">
                <scope line="46">
                    <declaration name="oldEntries" type="Entry[]" line="47"/>
                </scope>
                <declaration name="bigSize" type="int" line="51"/>
                <scope line="52"/>
                <scope line="55">
                    <declaration name="oldBigDescs" type="int[]" line="56"/>
                </scope>
            </method>
            <method name="visitRefs" type="void" line="61">
                <params>
                    <param name="refs" type="Collection<Entry>"/>
                </params>
                <scope line="62"/>
            </method>
            <method name="clear" type="void" line="66">
                <scope line="67">
                    <scope line="68">
                        <declaration name="fx" type="Fixup" line="69"/>
                    </scope>
                </scope>
            </method>
            <method name="getBytes" type="byte[]" line="76"/>
            <method name="setBytes" type="void" line="79">
                <params>
                    <param name="newBytes" type="byte[]"/>
                </params>
                <declaration name="old" type="ArrayList" line="81"/>
                <scope line="83">
                    <declaration name="save" type="ArrayList" line="84"/>
                </scope>
                <scope line="89"/>
            </method>
            <declaration name="LOC_SHIFT" type="int" line="94"/>
            <declaration name="FMT_MASK" type="int" line="95"/>
            <declaration name="UNUSED_BYTE" type="byte" line="96"/>
            <declaration name="OVERFLOW_BYTE" type="byte" line="97"/>
            <declaration name="BIGSIZE" type="int" line="98"/>
            <declaration name="U2_FORMAT" type="int" line="99"/>
            <declaration name="U1_FORMAT" type="int" line="100"/>
            <declaration name="SPECIAL_LOC" type="int" line="101"/>
            <declaration name="SPECIAL_FMT" type="int" line="102"/>
            <method name="fmtLen" type="int" line="103">
                <params>
                    <param name="fmt" type="int"/>
                </params>
            </method>
            <method name="descLoc" type="int" line="106">
                <params>
                    <param name="desc" type="int"/>
                </params>
            </method>
            <method name="descFmt" type="int" line="109">
                <params>
                    <param name="desc" type="int"/>
                </params>
            </method>
            <method name="descEnd" type="int" line="112">
                <params>
                    <param name="desc" type="int"/>
                </params>
            </method>
            <method name="makeDesc" type="int" line="115">
                <params>
                    <param name="loc" type="int"/>
                    <param name="fmt" type="int"/>
                </params>
                <declaration name="desc" type="int" line="116"/>
            </method>
            <method name="fetchDesc" type="int" line="121">
                <params>
                    <param name="loc" type="int"/>
                    <param name="fmt" type="int"/>
                </params>
                <declaration name="b1" type="byte" line="122"/>
                <declaration name="value" type="int" line="124"/>
                <scope line="125">
                    <declaration name="b2" type="byte" line="126"/>
                </scope>
                <scope line="129"/>
            </method>
            <method name="storeDesc" type="boolean" line="134">
                <params>
                    <param name="loc" type="int"/>
                    <param name="fmt" type="int"/>
                    <param name="desc" type="int"/>
                </params>
                <declaration name="value" type="int" line="136"/>
                <declaration name="b1" type="byte" line="137"/>
                <scope line="144"/>
                <scope line="154"/>
            </method>
            <method name="storeIndex" type="void" line="167">
                <params>
                    <param name="loc" type="int"/>
                    <param name="fmt" type="int"/>
                    <param name="value" type="int"/>
                </params>
            </method>
            <method name="storeIndex" type="void" line="170">
                <params>
                    <param name="bytes" type="byte[]"/>
                    <param name="loc" type="int"/>
                    <param name="fmt" type="int"/>
                    <param name="value" type="int"/>
                </params>
            </method>
            <class name="Fixup" line="185">
                <implements interface="Comparable"/>
                <javadoc line="185">
                    Simple and necessary tuple to present each fixup.                    
                </javadoc>
                <declaration name="desc" type="int" line="189"/>
                <declaration name="entry" type="Entry" line="190"/>
                <method name="Fixup" type="constructor" line="191">
                    <params>
                        <param name="desc" type="int"/>
                        <param name="entry" type="Entry"/>
                    </params>
                </method>
                <method name="Fixup" type="constructor" line="195">
                    <params>
                        <param name="loc" type="int"/>
                        <param name="fmt" type="int"/>
                        <param name="entry" type="Entry"/>
                    </params>
                </method>
                <method name="location" type="int" line="199"/>
                <method name="format" type="int" line="202"/>
                <method name="entry" type="Entry" line="205"/>
                <method name="compareTo" type="int" line="208">
                    <params>
                        <param name="that" type="Fixup"/>
                    </params>
                </method>
                <method name="compareTo" type="int" line="211">
                    <params>
                        <param name="that" type="Object"/>
                    </params>
                </method>
                <method name="equals" type="boolean" line="214">
                    <params>
                        <param name="x" type="Object"/>
                    </params>
                    <declaration name="that" type="Fixup" line="216"/>
                </method>
                <method name="toString" type="String" line="219"/>
            </class>
            <class name="Itr" line="223">
                <implements interface="Iterator"/>
                <declaration name="index" type="int" line="224"/>
                <declaration name="bigIndex" type="int" line="225"/>
                <declaration name="next" type="int" line="226"/>
                <method name="hasNext" type="boolean" line="227"/>
                <method name="remove" type="void" line="230"/>
                <method name="next" type="Object" line="233">
                    <declaration name="thisIndex" type="int" line="234"/>
                </method>
                <method name="nextDesc" type="int" line="237">
                    <declaration name="thisDesc" type="int" line="239"/>
                    <scope line="240">
                        <declaration name="loc" type="int" line="241"/>
                        <declaration name="fmt" type="int" line="242"/>
                        <scope line="243"/>
                        <scope line="246"/>
                    </scope>
                </method>
            </class>
            <method name="iterator" type="Iterator" line="254"/>
            <method name="add" type="void" line="257">
                <params>
                    <param name="location" type="int"/>
                    <param name="format" type="int"/>
                    <param name="entry" type="Entry"/>
                </params>
            </method>
            <method name="add" type="boolean" line="260">
                <params>
                    <param name="f" type="Fixup"/>
                </params>
            </method>
            <method name="add" type="boolean" line="264">
                <params>
                    <param name="fixup" type="Object"/>
                </params>
            </method>
            <method name="addAll" type="boolean" line="267">
                <params>
                    <param name="c" type="Collection"/>
                </params>
                <scope line="268">
                    <declaration name="that" type="Fixups" line="269"/>
                    <declaration name="thatEntries" type="Entry[]" line="272"/>
                    <scope line="273">
                        <declaration name="ni" type="int" line="274"/>
                    </scope>
                </scope>
                <scope line="279"/>
            </method>
            <method name="addDesc" type="void" line="283">
                <params>
                    <param name="thisDesc" type="int"/>
                    <param name="entry" type="Entry"/>
                </params>
                <scope line="286"/>
                <scope line="289">
                    <declaration name="prevDesc" type="int" line="290"/>
                    <declaration name="prevLoc" type="int" line="291"/>
                    <declaration name="prevFmt" type="int" line="292"/>
                    <declaration name="prevLen" type="int" line="293"/>
                    <declaration name="thisLoc" type="int" line="294"/>
                    <scope line="297">
                        <declaration name="bigSize" type="int" line="298"/>
                    </scope>
                </scope>
            </method>
            <method name="badOverlap" type="void" line="306">
                <params>
                    <param name="thisLoc" type="int"/>
                </params>
            </method>
            <method name="growEntries" type="void" line="309">
                <params>
                    <param name="newSize" type="int"/>
                </params>
                <declaration name="oldEntries" type="Entry[]" line="310"/>
            </method>
            <method name="growBigDescs" type="void" line="314">
                <declaration name="oldBigDescs" type="int[]" line="315"/>
            </method>
            <method name="add" type="Object" line="319">
                <params>
                    <param name="prevFixups" type="Object"/>
                    <param name="bytes" type="byte[]"/>
                    <param name="loc" type="int"/>
                    <param name="fmt" type="int"/>
                    <param name="e" type="Entry"/>
                </params>
                <declaration name="f" type="Fixups" line="320"/>
                <scope line="321">
                    <scope line="322"/>
                </scope>
                <scope line="327">
                    <declaration name="firstEntry" type="Entry" line="328"/>
                </scope>
                <scope line="332"/>
            </method>
            <method name="setBytes" type="void" line="339">
                <params>
                    <param name="fixups" type="Object"/>
                    <param name="bytes" type="byte[]"/>
                </params>
                <scope line="340">
                    <declaration name="f" type="Fixups" line="341"/>
                </scope>
            </method>
            <method name="trimToSize" type="Object" line="345">
                <params>
                    <param name="fixups" type="Object"/>
                </params>
                <scope line="346">
                    <declaration name="f" type="Fixups" line="347"/>
                </scope>
            </method>
            <method name="visitRefs" type="void" line="353">
                <params>
                    <param name="fixups" type="Object"/>
                    <param name="refs" type="Collection<Entry>"/>
                </params>
                <scope line="354"/>
                <scope line="356"/>
                <scope line="359">
                    <declaration name="f" type="Fixups" line="360"/>
                </scope>
            </method>
            <method name="finishRefs" type="void" line="364">
                <params>
                    <param name="fixups" type="Object"/>
                    <param name="bytes" type="byte[]"/>
                    <param name="ix" type="ConstantPool.Index"/>
                </params>
                <scope line="366">
                    <declaration name="index" type="int" line="367"/>
                </scope>
                <declaration name="f" type="Fixups" line="371"/>
            </method>
            <method name="finishRefs" type="void" line="375">
                <params>
                    <param name="ix" type="ConstantPool.Index"/>
                </params>
                <scope line="377">
                    <declaration name="fx" type="Fixup" line="378"/>
                    <declaration name="index" type="int" line="379"/>
                </scope>
            </method>
        </class>
    </source>