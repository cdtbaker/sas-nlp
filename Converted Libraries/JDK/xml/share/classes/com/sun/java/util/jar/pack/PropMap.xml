<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.util.jar.pack">
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="java.io.BufferedInputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.PrintStream"/>
        <import package="java.io.PrintWriter"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collection"/>
        <import package="java.util.Comparator"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.util.Properties"/>
        <import package="java.util.Set"/>
        <import package="java.util.SortedMap"/>
        <import package="java.util.TreeMap"/>
        <import package="java.util.jar.Pack200"/>
        <class name="PropMap" line="46">
            <comment line="71">
                Override:                
            </comment>
            <comment line="86">
                All this other stuff is private to the current package.
                 Outide clients of Pack200 do not need to use it; they can
                 get by with generic SortedMap functionality.                
            </comment>
            <comment line="152">
                Return a view of this map which includes only properties
                 that begin with the given prefix.  This is easy because
                 the map is sorted, and has a subMap accessor.                
            </comment>
            <comment line="178">
                Get sequence of props for &quot;prefix&quot;, and &quot;prefix.*&quot;.                
            </comment>
            <implements interface="SortedMap">
                <type_params>
                    <type_param name="Object"/>
                    <type_param name="Object"/>
                </type_params>
            </implements>
            <javadoc line="46">
                Control block for publishing Pack200 options to the other classes.                
            </javadoc>
            <declaration name="theMap" type="TreeMap&lt;Object,Object&gt;" line="51"/>
            <declaration name="listenerList" type="List&lt;PropertyChangeListener&gt;" line="52"/>
            <method name="addListener" type="void" line="54">
                <params>
                    <param name="listener" type="PropertyChangeListener"/>
                </params>
            </method>
            <method name="removeListener" type="void" line="58">
                <params>
                    <param name="listener" type="PropertyChangeListener"/>
                </params>
            </method>
            <method name="addListeners" type="void" line="62">
                <params>
                    <param name="listeners" type="ArrayList<PropertyChangeListener>"/>
                </params>
            </method>
            <method name="removeListeners" type="void" line="66">
                <params>
                    <param name="listeners" type="ArrayList<PropertyChangeListener>"/>
                </params>
            </method>
            <method name="put" type="Object" line="71">
                <params>
                    <param name="key" type="Object"/>
                    <param name="value" type="Object"/>
                </params>
                <comment line="75">
                    Post the property change event.                    
                </comment>
                <declaration name="oldValue" type="Object" line="72"/>
                <scope line="73">
                    <declaration name="event" type="PropertyChangeEvent" line="75"/>
                    <scope line="78"/>
                </scope>
            </method>
            <declaration name="defaultProps" type="Map&lt;Object,Object&gt;" line="88"/>
            <scope line="89">
                <declaration name="props" type="Properties" line="90"/>
                <declaration name="propFile" type="String" line="125"/>
                <scope line="127">
                    <scope line="128"/>
                </scope>
                <scope line="132"/>
                <scope line="136">
                    <declaration name="key" type="String" line="137"/>
                    <declaration name="val" type="String" line="138"/>
                    <scope line="139"/>
                </scope>
            </scope>
            <method name="PropMap" type="constructor" line="147"/>
            <method name="prefixMap" type="SortedMap<Object,Object>" line="154">
                <params>
                    <param name="prefix" type="String"/>
                </params>
                <comment line="161">
                    System.out.println(prefix+&quot; =&gt; &quot;+subMap(prefix, limit));                    
                </comment>
                <declaration name="len" type="int" line="155"/>
                <declaration name="nextch" type="char" line="158"/>
                <declaration name="limit" type="String" line="159"/>
            </method>
            <method name="getProperty" type="String" line="164">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="getProperty" type="String" line="167">
                <params>
                    <param name="s" type="String"/>
                    <param name="defaultVal" type="String"/>
                </params>
                <declaration name="val" type="String" line="168"/>
            </method>
            <method name="setProperty" type="String" line="173">
                <params>
                    <param name="s" type="String"/>
                    <param name="val" type="String"/>
                </params>
            </method>
            <method name="getProperties" type="List" line="178">
                <params>
                    <param name="prefix" type="String"/>
                </params>
                <declaration name="values" type="Collection&lt;Object&gt;" line="179"/>
                <declaration name="res" type="List&lt;Object&gt;" line="180"/>
            </method>
            <method name="toBoolean" type="boolean" line="186">
                <params>
                    <param name="val" type="String"/>
                </params>
            </method>
            <method name="getBoolean" type="boolean" line="189">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="setBoolean" type="boolean" line="192">
                <params>
                    <param name="s" type="String"/>
                    <param name="val" type="boolean"/>
                </params>
            </method>
            <method name="toInteger" type="int" line="196">
                <params>
                    <param name="val" type="String"/>
                </params>
            </method>
            <method name="getInteger" type="int" line="202">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="setInteger" type="int" line="205">
                <params>
                    <param name="s" type="String"/>
                    <param name="val" type="int"/>
                </params>
            </method>
            <method name="toLong" type="long" line="209">
                <params>
                    <param name="val" type="String"/>
                </params>
                <scope line="210"/>
                <scope line="212"/>
            </method>
            <method name="getLong" type="long" line="216">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="setLong" type="long" line="219">
                <params>
                    <param name="s" type="String"/>
                    <param name="val" type="long"/>
                </params>
            </method>
            <method name="getTime" type="int" line="223">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="sval" type="String" line="224"/>
                <scope line="225"/>
                <declaration name="lval" type="long" line="228"/>
                <declaration name="recentSecondCount" type="long" line="229"/>
            </method>
            <method name="list" type="void" line="237">
                <params>
                    <param name="out" type="PrintStream"/>
                </params>
                <declaration name="outw" type="PrintWriter" line="238"/>
            </method>
            <method name="list" type="void" line="242">
                <params>
                    <param name="out" type="PrintWriter"/>
                </params>
                <declaration name="defaults" type="Set" line="244"/>
                <scope line="245"/>
            </method>
            <method name="size" type="int" line="253"/>
            <method name="isEmpty" type="boolean" line="258"/>
            <method name="containsKey" type="boolean" line="263">
                <params>
                    <param name="key" type="Object"/>
                </params>
            </method>
            <method name="containsValue" type="boolean" line="268">
                <params>
                    <param name="value" type="Object"/>
                </params>
            </method>
            <method name="get" type="Object" line="273">
                <params>
                    <param name="key" type="Object"/>
                </params>
            </method>
            <method name="remove" type="Object" line="278">
                <params>
                    <param name="key" type="Object"/>
                </params>
            </method>
            <method name="putAll" type="void" line="284">
                <params>
                    <param name="m" type="Map"/>
                </params>
            </method>
            <method name="clear" type="void" line="289"/>
            <method name="keySet" type="Set<Object>" line="294"/>
            <method name="values" type="Collection<Object>" line="299"/>
            <method name="entrySet" type="Set<Map.Entry<Object,Object>>" line="304"/>
            <method name="comparator" type="Comparator<Object>" line="310"/>
            <method name="subMap" type="SortedMap<Object,Object>" line="315">
                <params>
                    <param name="fromKey" type="Object"/>
                    <param name="toKey" type="Object"/>
                </params>
            </method>
            <method name="headMap" type="SortedMap<Object,Object>" line="320">
                <params>
                    <param name="toKey" type="Object"/>
                </params>
            </method>
            <method name="tailMap" type="SortedMap<Object,Object>" line="325">
                <params>
                    <param name="fromKey" type="Object"/>
                </params>
            </method>
            <method name="firstKey" type="Object" line="330"/>
            <method name="lastKey" type="Object" line="335"/>
        </class>
    </source>