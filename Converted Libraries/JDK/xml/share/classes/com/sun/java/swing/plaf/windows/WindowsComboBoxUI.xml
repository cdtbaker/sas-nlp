<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.swing.plaf.windows">
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.beans.PropertyChangeEvent"/>
        <import package="javax.swing.plaf.basic"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.border"/>
        <import package="javax.swing"/>
        <import package="java.awt.event"/>
        <import package="java.awt"/>
        <import package="com.sun.java.swing.plaf.windows.TMSchema.Part"/>
        <import package="com.sun.java.swing.plaf.windows.TMSchema.State"/>
        <import package="com.sun.java.swing.plaf.windows.XPStyle.Skin"/>
        <import package="sun.swing.DefaultLookup"/>
        <import package="sun.swing.StringUIClientPropertyKey"/>
        <class name="WindowsComboBoxUI" line="15">
            <extends class="BasicComboBoxUI"/>
            <javadoc line="15">
                Windows combo box.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases.  The current serialization support is appropriate
                  for short term storage or RMI between applications running the same
                  version of Swing.  A future release of Swing will provide support for
                  long term persistence.                
                <author>
                    Tom Santos                    
                </author>
                <author>
                    Igor Kushnirskiy                    
                </author>
            </javadoc>
            <declaration name="rolloverListener" type="MouseListener" line="28"/>
            <anonymous_class line="28">
                <method name="handleRollover" type="void" line="29">
                    <params>
                        <param name="e" type="MouseEvent"/>
                        <param name="isRollover" type="boolean"/>
                    </params>
                    <declaration name="comboBox" type="JComboBox" line="30"/>
                    <declaration name="comboBoxUI" type="WindowsComboBoxUI" line="31"/>
                    <scope line="32"/>
                    <scope line="35">
                        <declaration name="m" type="ButtonModel" line="36"/>
                        <scope line="37"/>
                        <scope line="40"/>
                    </scope>
                </method>
                <method name="mouseEntered" type="void" line="47">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="mouseExited" type="void" line="50">
                    <params>
                        <param name="e" type="MouseEvent"/>
                    </params>
                </method>
                <method name="getComboBox" type="JComboBox" line="53">
                    <params>
                        <param name="event" type="MouseEvent"/>
                    </params>
                    <declaration name="source" type="Object" line="54"/>
                    <declaration name="rv" type="JComboBox" line="55"/>
                    <scope line="56"/>
                    <scope line="59"/>
                </method>
                <method name="getWindowsComboBoxUI" type="WindowsComboBoxUI" line="64">
                    <params>
                        <param name="event" type="MouseEvent"/>
                    </params>
                    <declaration name="comboBox" type="JComboBox" line="65"/>
                    <declaration name="rv" type="WindowsComboBoxUI" line="66"/>
                    <scope line="67"/>
                </method>
            </anonymous_class>
            <declaration name="isRollover" type="boolean" line="74"/>
            <declaration name="componentOrientationListener" type="PropertyChangeListener" line="75"/>
            <anonymous_class line="75">
                <method name="propertyChange" type="void" line="76">
                    <params>
                        <param name="e" type="PropertyChangeEvent"/>
                    </params>
                    <declaration name="propertyName" type="String" line="77"/>
                    <declaration name="source" type="Object" line="78"/>
                    <scope line="79">
                        <declaration name="comboBox" type="JComboBox" line="80"/>
                        <declaration name="comboBoxUI" type="WindowsComboBoxUI" line="81"/>
                        <scope line="82"/>
                    </scope>
                </method>
            </anonymous_class>
            <method name="createUI" type="ComponentUI" line="89">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="installUI" type="void" line="92">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <scope line="96"/>
            </method>
            <method name="uninstallUI" type="void" line="101">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <scope line="103"/>
            </method>
            <javadoc line="108">
                {@inheritDoc}                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="installListeners" type="void" line="112">
                <declaration name="xp" type="XPStyle" line="114"/>
                <scope line="115"/>
            </method>
            <javadoc line="119">
                {@inheritDoc}                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="uninstallListeners" type="void" line="123"/>
            <javadoc line="127">
                {@inheritDoc}                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="configureEditor" type="void" line="131">
                <scope line="133"/>
            </method>
            <javadoc line="137">
                {@inheritDoc}                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="unconfigureEditor" type="void" line="141"/>
            <javadoc line="145">
                {@inheritDoc}                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="paint" type="void" line="149">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <scope line="150"/>
            </method>
            <method name="getXPComboBoxState" type="State" line="155">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="state" type="State" line="156"/>
                <scope line="157"/>
                <scope line="160"/>
                <scope line="163"/>
            </method>
            <method name="paintXPComboBoxBackground" type="void" line="168">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="xp" type="XPStyle" line="169"/>
                <declaration name="state" type="State" line="170"/>
                <declaration name="skin" type="Skin" line="171"/>
                <scope line="172"/>
                <scope line="175"/>
            </method>
            <javadoc line="180">
                If necessary paints the currently selected item.                
                <param>
                    g Graphics to paint to                    
                </param>
                <param>
                    bounds Region to paint current value to                    
                </param>
                <param>
                    hasFocus whether or not the JComboBox has focus                    
                </param>
                <throws>
                    NullPointerException if any of the arguments are null.                    
                </throws>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <method name="paintCurrentValue" type="void" line="188">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="bounds" type="Rectangle"/>
                    <param name="hasFocus" type="boolean"/>
                </params>
                <declaration name="xp" type="XPStyle" line="189"/>
                <scope line="190"/>
                <scope line="196"/>
                <scope line="202">
                    <declaration name="renderer" type="ListCellRenderer" line="203"/>
                    <declaration name="c" type="Component" line="204"/>
                    <scope line="205"/>
                    <scope line="208"/>
                    <scope line="212"/>
                    <scope line="216"/>
                    <declaration name="shouldValidate" type="boolean" line="220"/>
                    <scope line="221"/>
                </scope>
                <scope line="226"/>
            </method>
            <javadoc line="230">
                {@inheritDoc}                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="paintCurrentValueBackground" type="void" line="234">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="bounds" type="Rectangle"/>
                    <param name="hasFocus" type="boolean"/>
                </params>
                <scope line="235"/>
            </method>
            <method name="getMinimumSize" type="Dimension" line="239">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="d" type="Dimension" line="240"/>
                <scope line="241"/>
                <scope line="244"/>
            </method>
            <javadoc line="250">
                Creates a layout manager for managing the components which make up the
                  combo box.                
                <return>
                    an instance of a layout manager                    
                </return>
            </javadoc>
            <method name="createLayoutManager" type="LayoutManager" line="255">
                <anonymous_class line="256">
                    <method name="layoutContainer" type="void" line="257">
                        <params>
                            <param name="parent" type="Container"/>
                        </params>
                        <scope line="259">
                            <declaration name="d" type="Dimension" line="260"/>
                            <declaration name="insets" type="Insets" line="261"/>
                            <declaration name="buttonWidth" type="int" line="262"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <method name="installKeyboardActions" type="void" line="269"/>
            <method name="createPopup" type="ComboPopup" line="272"/>
            <javadoc line="275">
                Creates the default editor that will be used in editable combo boxes.
                  A default editor will be used only if an editor has not been
                  explicitly set with &lt;code&gt;setEditor&lt;/code&gt;.                
                <return>
                    a &lt;code&gt;ComboBoxEditor&lt;/code&gt; used for the combo box                    
                </return>
                <see>
                    javax.swing.JComboBox#setEditor                    
                </see>
            </javadoc>
            <method name="createEditor" type="ComboBoxEditor" line="282"/>
            <javadoc line="285">
                {@inheritDoc}                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="createRenderer" type="ListCellRenderer" line="289">
                <declaration name="xp" type="XPStyle" line="290"/>
                <scope line="291"/>
                <scope line="294"/>
            </method>
            <javadoc line="298">
                Creates an button which will be used as the control to show or hide
                  the popup portion of the combo box.                
                <return>
                    a button which represents the popup control                    
                </return>
            </javadoc>
            <method name="createArrowButton" type="JButton" line="303">
                <scope line="304"/>
                <scope line="307"/>
            </method>
            <class name="XPComboBoxButton" line="311">
                <extends class="XPStyle.GlyphButton"/>
                <method name="XPComboBoxButton" type="constructor" line="312"/>
                <method name="getState" type="State" line="316">
                    <declaration name="rv" type="State" line="317"/>
                    <scope line="319"/>
                </method>
                <method name="getPreferredSize" type="Dimension" line="324"/>
                <method name="setPart" type="void" line="327">
                    <params>
                        <param name="part" type="Part"/>
                    </params>
                </method>
                <method name="getWindowsComboBoxUI" type="WindowsComboBoxUI" line="330"/>
            </class>
            <class name="WindowsComboPopup" line="334">
                <extends class="BasicComboPopup"/>
                <javadoc line="334">
                    Subclassed to add Windows specific Key Bindings.
                      This class is now obsolete and doesn&apos;t do anything.
                      Only included for backwards API compatibility.
                      Do not call or override.                    
                    <deprecated>
                        As of Java 2 platform v1.4.                        
                    </deprecated>
                </javadoc>
                <method name="WindowsComboPopup" type="constructor" line="342">
                    <params>
                        <param name="cBox" type="JComboBox"/>
                    </params>
                </method>
                <method name="createKeyListener" type="KeyListener" line="345"/>
                <class name="InvocationKeyHandler" line="348">
                    <extends class="BasicComboPopup.InvocationKeyHandler"/>
                    <method name="InvocationKeyHandler" type="constructor" line="349"/>
                </class>
            </class>
            <class name="WindowsComboBoxEditor" line="354">
                <extends class="BasicComboBoxEditor.UIResource"/>
                <javadoc line="354">
                    Subclassed to highlight selected item in an editable combo box.                    
                </javadoc>
                <javadoc line="358">
                    {@inheritDoc}                    
                    <since>
                        1.6                        
                    </since>
                </javadoc>
                <method name="createEditorComponent" type="JTextField" line="362">
                    <declaration name="editor" type="JTextField" line="363"/>
                    <declaration name="border" type="Border" line="364"/>
                    <scope line="365"/>
                </method>
                <method name="setItem" type="void" line="371">
                    <params>
                        <param name="item" type="Object"/>
                    </params>
                    <scope line="373"/>
                </method>
            </class>
            <class name="WindowsComboBoxRenderer" line="378">
                <extends class="BasicComboBoxRenderer.UIResource"/>
                <javadoc line="378">
                    Subclassed to set opacity {@code false} on the renderer
                      and to show border for focused cells.                    
                </javadoc>
                <declaration name="BORDER_KEY" type="Object" line="383"/>
                <declaration name="NULL_BORDER" type="Border" line="384"/>
                <javadoc line="385">
                    {@inheritDoc}                    
                </javadoc>
                <method name="getListCellRendererComponent" type="Component" line="388">
                    <params>
                        <param name="list" type="JList"/>
                        <param name="value" type="Object"/>
                        <param name="index" type="int"/>
                        <param name="isSelected" type="boolean"/>
                        <param name="cellHasFocus" type="boolean"/>
                    </params>
                    <declaration name="rv" type="Component" line="389"/>
                    <scope line="390">
                        <declaration name="component" type="JComponent" line="391"/>
                        <scope line="392">
                            <declaration name="border" type="Border" line="393"/>
                            <declaration name="dashedBorder" type="Border" line="394"/>
                            <scope line="396"/>
                        </scope>
                        <scope line="400">
                            <scope line="401">
                                <declaration name="storedBorder" type="Object" line="402"/>
                                <scope line="403"/>
                            </scope>
                        </scope>
                        <scope line="409"/>
                        <scope line="413"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>