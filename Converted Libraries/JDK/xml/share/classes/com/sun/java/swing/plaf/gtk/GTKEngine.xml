<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.swing.plaf.gtk">
        <import package="java.awt"/>
        <import package="java.awt.image"/>
        <import package="java.util.HashMap"/>
        <import package="javax.swing"/>
        <import package="javax.swing.plaf.synth"/>
        <import package="com.sun.java.swing.plaf.gtk.GTKConstants.ArrowType"/>
        <import package="com.sun.java.swing.plaf.gtk.GTKConstants.ExpanderStyle"/>
        <import package="com.sun.java.swing.plaf.gtk.GTKConstants.Orientation"/>
        <import package="com.sun.java.swing.plaf.gtk.GTKConstants.PositionType"/>
        <import package="com.sun.java.swing.plaf.gtk.GTKConstants.ShadowType"/>
        <import package="com.sun.java.swing.plaf.gtk.GTKConstants.TextDirection"/>
        <import package="sun.awt.image.SunWritableRaster"/>
        <import package="sun.swing.ImageCache"/>
        <class name="GTKEngine" line="44">
            <comment line="100">
                Custom regions are needed for representing regions that don&apos;t exist
                 in the original Region class.                
            </comment>
            <comment line="562">
                Allocate a native offscreen buffer of the specified size.                
            </comment>
            <comment line="620">
                                
            </comment>
            <javadoc line="44">
                GTKEngine delegates all painting job to native GTK libraries.
                  Painting with GTKEngine looks like this:
                  First, startPainting() is called. It prepares an offscreen buffer of the
                  required size.
                  Then, any number of paintXXX() methods can be called. They effectively ignore
                  the Graphics parameter and draw to the offscreen buffer.
                  Finally, finishPainting() should be called. It fills the data buffer passed
                  in with the image data.                
                <author>
                    Josh Outwater                    
                </author>
            </javadoc>
            <declaration name="INSTANCE" type="GTKEngine" line="59"/>
            <declaration name="CACHE_SIZE" type="int" line="61"/>
            <javadoc line="61">
                Size of the image cache                
            </javadoc>
            <javadoc line="64">
                This enum mirrors that in gtk2_interface.h                
            </javadoc>
            <javadoc line="89">
                Representation of GtkSettings properties.
                  When we need more settings we can add them here and
                  to all implementations of getGTKSetting().                
            </javadoc>
            <class name="CustomRegion" line="102">
                <extends class="Region"/>
                <comment line="104">
                    TITLED_BORDER Region is mapped to GtkFrame class which can draw
                     titled borders around components.                    
                </comment>
                <declaration name="TITLED_BORDER" type="Region" line="107"/>
                <method name="CustomRegion" type="constructor" line="109">
                    <params>
                        <param name="name" type="String"/>
                    </params>
                </method>
            </class>
            <declaration name="regionToWidgetTypeMap" type="HashMap&lt;Region,Object&gt;" line="115"/>
            <declaration name="cache" type="ImageCache" line="116"/>
            <declaration name="x0" type="int" line="117"/>
            <declaration name="graphics" type="Graphics" line="118"/>
            <declaration name="cacheArgs" type="Object[]" line="119"/>
            <method name="native_paint_arrow" type="void" line="121"/>
            <method name="native_paint_box" type="void" line="124"/>
            <method name="native_paint_box_gap" type="void" line="127"/>
            <method name="native_paint_check" type="void" line="131"/>
            <method name="native_paint_expander" type="void" line="134"/>
            <method name="native_paint_extension" type="void" line="137"/>
            <method name="native_paint_flat_box" type="void" line="140"/>
            <method name="native_paint_focus" type="void" line="143"/>
            <method name="native_paint_handle" type="void" line="146"/>
            <method name="native_paint_hline" type="void" line="149"/>
            <method name="native_paint_option" type="void" line="152"/>
            <method name="native_paint_shadow" type="void" line="155"/>
            <method name="native_paint_slider" type="void" line="158"/>
            <method name="native_paint_vline" type="void" line="161"/>
            <method name="native_paint_background" type="void" line="164"/>
            <method name="native_get_gtk_setting" type="Object" line="166"/>
            <method name="nativeSetRangeValue" type="void" line="167"/>
            <method name="nativeStartPainting" type="void" line="171"/>
            <method name="nativeFinishPainting" type="int" line="172"/>
            <method name="native_switch_theme" type="void" line="173"/>
            <scope line="175"/>
            <javadoc line="273">
                Translate Region and JComponent into WidgetType ordinals                
            </javadoc>
            <method name="getWidgetType" type="WidgetType" line="274">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="id" type="Region"/>
                </params>
                <comment line="293">
                    We should return correrct WidgetType if the seperator is inserted
                     in MenuPopupMenuToolBar. BugID: 6465603                    
                </comment>
                <comment line="314">
                    For all ListCellRenderers we will use COMBO_BOX_TEXT_FIELD widget
                     type because we can get correct insets. List items however won&apos;t be
                     drawn as a text entry (see GTKPainter.paintLabelBackground).                    
                </comment>
                <declaration name="value" type="Object" line="275"/>
                <scope line="277"/>
                <declaration name="widgets" type="WidgetType[]" line="281"/>
                <scope line="282"/>
                <scope line="286"/>
                <scope line="289">
                    <declaration name="separator" type="JSeparator" line="290"/>
                    <scope line="295"/>
                    <scope line="297"/>
                </scope>
                <scope line="303"/>
                <scope line="306"/>
                <scope line="309"/>
                <scope line="312">
                    <scope line="318"/>
                    <scope line="320"/>
                </scope>
                <scope line="323">
                    <declaration name="name" type="String" line="324"/>
                    <scope line="325"/>
                    <scope line="327"/>
                </scope>
                <scope line="330">
                    <declaration name="name" type="String" line="331"/>
                    <scope line="332"/>
                    <scope line="334"/>
                </scope>
                <scope line="337">
                    <scope line="338">
                        <declaration name="prop" type="Integer" line="339"/>
                        <declaration name="dir" type="int" line="341"/>
                    </scope>
                    <scope line="355"/>
                    <scope line="357"/>
                </scope>
            </method>
            <method name="getTextDirection" type="int" line="365">
                <params>
                    <param name="context" type="SynthContext"/>
                </params>
                <declaration name="dir" type="TextDirection" line="366"/>
                <declaration name="comp" type="JComponent" line="367"/>
                <scope line="368">
                    <declaration name="co" type="ComponentOrientation" line="369"/>
                    <scope line="370"/>
                </scope>
            </method>
            <method name="paintArrow" type="void" line="380">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="context" type="SynthContext"/>
                    <param name="id" type="Region"/>
                    <param name="state" type="int"/>
                    <param name="shadowType" type="ShadowType"/>
                    <param name="direction" type="ArrowType"/>
                    <param name="detail" type="String"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="widget" type="int" line="383"/>
            </method>
            <method name="paintBox" type="void" line="390">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="context" type="SynthContext"/>
                    <param name="id" type="Region"/>
                    <param name="state" type="int"/>
                    <param name="shadowType" type="ShadowType"/>
                    <param name="detail" type="String"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="gtkState" type="int" line="392"/>
                <declaration name="synthState" type="int" line="394"/>
                <declaration name="dir" type="int" line="395"/>
                <declaration name="widget" type="int" line="396"/>
            </method>
            <method name="paintBoxGap" type="void" line="404">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="context" type="SynthContext"/>
                    <param name="id" type="Region"/>
                    <param name="state" type="int"/>
                    <param name="shadowType" type="ShadowType"/>
                    <param name="detail" type="String"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="boxGapType" type="PositionType"/>
                    <param name="tabBegin" type="int"/>
                    <param name="size" type="int"/>
                </params>
                <declaration name="widget" type="int" line="407"/>
            </method>
            <method name="paintCheck" type="void" line="413">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="context" type="SynthContext"/>
                    <param name="id" type="Region"/>
                    <param name="detail" type="String"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="synthState" type="int" line="415"/>
                <declaration name="widget" type="int" line="416"/>
            </method>
            <method name="paintExpander" type="void" line="422">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="context" type="SynthContext"/>
                    <param name="id" type="Region"/>
                    <param name="state" type="int"/>
                    <param name="expanderStyle" type="ExpanderStyle"/>
                    <param name="detail" type="String"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="widget" type="int" line="425"/>
            </method>
            <method name="paintExtension" type="void" line="432">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="context" type="SynthContext"/>
                    <param name="id" type="Region"/>
                    <param name="state" type="int"/>
                    <param name="shadowType" type="ShadowType"/>
                    <param name="detail" type="String"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="placement" type="PositionType"/>
                    <param name="tabIndex" type="int"/>
                </params>
                <declaration name="widget" type="int" line="435"/>
            </method>
            <method name="paintFlatBox" type="void" line="442">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="context" type="SynthContext"/>
                    <param name="id" type="Region"/>
                    <param name="state" type="int"/>
                    <param name="shadowType" type="ShadowType"/>
                    <param name="detail" type="String"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="colorType" type="ColorType"/>
                </params>
                <declaration name="widget" type="int" line="445"/>
            </method>
            <method name="paintFocus" type="void" line="452">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="context" type="SynthContext"/>
                    <param name="id" type="Region"/>
                    <param name="state" type="int"/>
                    <param name="detail" type="String"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="widget" type="int" line="455"/>
            </method>
            <method name="paintHandle" type="void" line="461">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="context" type="SynthContext"/>
                    <param name="id" type="Region"/>
                    <param name="state" type="int"/>
                    <param name="shadowType" type="ShadowType"/>
                    <param name="detail" type="String"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="orientation" type="Orientation"/>
                </params>
                <declaration name="widget" type="int" line="464"/>
            </method>
            <method name="paintHline" type="void" line="470">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="context" type="SynthContext"/>
                    <param name="id" type="Region"/>
                    <param name="state" type="int"/>
                    <param name="detail" type="String"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="widget" type="int" line="473"/>
            </method>
            <method name="paintOption" type="void" line="478">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="context" type="SynthContext"/>
                    <param name="id" type="Region"/>
                    <param name="detail" type="String"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="synthState" type="int" line="480"/>
                <declaration name="widget" type="int" line="481"/>
            </method>
            <method name="paintShadow" type="void" line="487">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="context" type="SynthContext"/>
                    <param name="id" type="Region"/>
                    <param name="state" type="int"/>
                    <param name="shadowType" type="ShadowType"/>
                    <param name="detail" type="String"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="gtkState" type="int" line="489"/>
                <declaration name="synthState" type="int" line="491"/>
                <declaration name="dir" type="int" line="492"/>
                <declaration name="widget" type="int" line="493"/>
            </method>
            <method name="paintSlider" type="void" line="500">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="context" type="SynthContext"/>
                    <param name="id" type="Region"/>
                    <param name="state" type="int"/>
                    <param name="shadowType" type="ShadowType"/>
                    <param name="detail" type="String"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="orientation" type="Orientation"/>
                </params>
                <declaration name="widget" type="int" line="503"/>
            </method>
            <method name="paintVline" type="void" line="509">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="context" type="SynthContext"/>
                    <param name="id" type="Region"/>
                    <param name="state" type="int"/>
                    <param name="detail" type="String"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="widget" type="int" line="512"/>
            </method>
            <method name="paintBackground" type="void" line="517">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="context" type="SynthContext"/>
                    <param name="id" type="Region"/>
                    <param name="state" type="int"/>
                    <param name="color" type="Color"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="widget" type="int" line="520"/>
            </method>
            <declaration name="COLOR_MODELS" type="ColorModel[]" line="524"/>
            <declaration name="BAND_OFFSETS" type="int[][]" line="533"/>
            <javadoc line="540">
                Paint a cached image identified by its size and a set of additional
                  arguments, if there&apos;s one.                
                <return>
                    true if a cached image has been painted, false otherwise                    
                </return>
            </javadoc>
            <method name="paintCachedImage" type="boolean" line="547">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="args" type="Object"/>
                </params>
                <comment line="553">
                    look for cached image                    
                </comment>
                <scope line="548"/>
                <declaration name="img" type="Image" line="553"/>
                <scope line="554"/>
            </method>
            <method name="startPainting" type="void" line="565">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="args" type="Object"/>
                </params>
            </method>
            <javadoc line="575">
                Convenience method that delegates to finishPainting() with
                  caching enabled.                
            </javadoc>
            <method name="finishPainting" type="void" line="579"/>
            <javadoc line="583">
                Called to indicate that painting is finished. We create a new
                  BufferedImage from the offscreen buffer, (optionally) cache it,
                  and paint it.                
            </javadoc>
            <method name="finishPainting" type="void" line="588">
                <params>
                    <param name="useCache" type="boolean"/>
                </params>
                <comment line="591">
                    Note that stealData() requires a markDirty() afterwards
                     since we modify the data in it.                    
                </comment>
                <declaration name="dataBuffer" type="DataBufferInt" line="589"/>
                <declaration name="transparency" type="int" line="592"/>
                <declaration name="bands" type="int[]" line="597"/>
                <declaration name="raster" type="WritableRaster" line="598"/>
                <declaration name="cm" type="ColorModel" line="601"/>
                <declaration name="img" type="Image" line="602"/>
                <scope line="603"/>
            </method>
            <javadoc line="609">
                Notify native layer of theme change, and flush cache                
            </javadoc>
            <method name="themeChanged" type="void" line="612">
                <scope line="613"/>
            </method>
            <method name="getSetting" type="Object" line="620">
                <params>
                    <param name="property" type="Settings"/>
                </params>
                <scope line="621"/>
            </method>
            <javadoc line="626">
                Sets up the GtkAdjustment values for the native GtkRange widget
                  associated with the given region (e.g. SLIDER, SCROLL_BAR).                
            </javadoc>
            <method name="setRangeValue" type="void" line="631">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="id" type="Region"/>
                    <param name="value" type="double"/>
                    <param name="min" type="double"/>
                    <param name="max" type="double"/>
                    <param name="visible" type="double"/>
                </params>
                <declaration name="widget" type="int" line="632"/>
            </method>
        </class>
    </source>