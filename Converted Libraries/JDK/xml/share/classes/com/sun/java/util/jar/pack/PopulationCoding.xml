<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.util.jar.pack">
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Set"/>
        <import package="com.sun.java.util.jar.pack.Constants"/>
        <class name="PopulationCoding" line="10">
            <implements interface="CodingMethod"/>
            <javadoc line="10">
                Population-based coding.
                  See the section &quot;Encodings of Uncorrelated Values&quot; in the Pack200 spec.                
                <author>
                    John Rose                    
                </author>
            </javadoc>
            <declaration name="vHist" type="Histogram" line="16"/>
            <declaration name="fValues" type="int[]" line="17"/>
            <declaration name="fVlen" type="int" line="18"/>
            <declaration name="symtab" type="long[]" line="19"/>
            <declaration name="favoredCoding" type="CodingMethod" line="20"/>
            <declaration name="tokenCoding" type="CodingMethod" line="21"/>
            <declaration name="unfavoredCoding" type="CodingMethod" line="22"/>
            <declaration name="L" type="int" line="23"/>
            <method name="setFavoredValues" type="void" line="24">
                <params>
                    <param name="fValues" type="int[]"/>
                    <param name="fVlen" type="int"/>
                </params>
                <scope line="29"/>
            </method>
            <method name="setFavoredValues" type="void" line="33">
                <params>
                    <param name="fValues" type="int[]"/>
                </params>
                <declaration name="lfVlen" type="int" line="34"/>
            </method>
            <method name="setHistogram" type="void" line="37">
                <params>
                    <param name="vHist" type="Histogram"/>
                </params>
            </method>
            <method name="setL" type="void" line="40">
                <params>
                    <param name="L" type="int"/>
                </params>
                <scope line="42"/>
            </method>
            <method name="fitTokenCoding" type="Coding" line="47">
                <params>
                    <param name="fVlen" type="int"/>
                    <param name="L" type="int"/>
                </params>
                <declaration name="longest" type="Coding" line="49"/>
                <declaration name="tc" type="Coding" line="51"/>
                <scope line="52"/>
            </method>
            <method name="setFavoredCoding" type="void" line="59">
                <params>
                    <param name="favoredCoding" type="CodingMethod"/>
                </params>
            </method>
            <method name="setTokenCoding" type="void" line="62">
                <params>
                    <param name="tokenCoding" type="CodingMethod"/>
                </params>
                <scope line="65">
                    <declaration name="tc" type="Coding" line="66"/>
                </scope>
            </method>
            <method name="setUnfavoredCoding" type="void" line="70">
                <params>
                    <param name="unfavoredCoding" type="CodingMethod"/>
                </params>
            </method>
            <method name="favoredValueMaxLength" type="int" line="73"/>
            <method name="resortFavoredValues" type="void" line="77"/>
            <method name="getToken" type="int" line="123">
                <params>
                    <param name="value" type="int"/>
                </params>
                <declaration name="pos" type="int" line="125"/>
            </method>
            <method name="encodeValues" type="int[][]" line="130">
                <params>
                    <param name="values" type="int[]"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <declaration name="tokens" type="int[]" line="131"/>
                <declaration name="nuv" type="int" line="132"/>
                <scope line="133">
                    <declaration name="val" type="int" line="134"/>
                    <declaration name="tok" type="int" line="135"/>
                </scope>
                <declaration name="unfavoredValues" type="int[]" line="139"/>
                <scope line="141">
                    <declaration name="val" type="int" line="143"/>
                </scope>
            </method>
            <method name="makeSymtab" type="long[]" line="149">
                <declaration name="lsymtab" type="long[]" line="150"/>
                <scope line="151"/>
            </method>
            <method name="getTailCoding" type="Coding" line="157">
                <params>
                    <param name="c" type="CodingMethod"/>
                </params>
            </method>
            <method name="writeArrayTo" type="void" line="161">
                <params>
                    <param name="out" type="OutputStream"/>
                    <param name="a" type="int[]"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <declaration name="vals" type="int[][]" line="162"/>
            </method>
            <method name="writeSequencesTo" type="void" line="165">
                <params>
                    <param name="out" type="OutputStream"/>
                    <param name="tokens" type="int[]"/>
                    <param name="uValues" type="int[]"/>
                </params>
            </method>
            <method name="computeSentinelValue" type="int" line="171">
                <declaration name="fc" type="Coding" line="172"/>
                <scope line="173"/>
                <scope line="176">
                    <declaration name="min" type="int" line="177"/>
                    <declaration name="last" type="int" line="178"/>
                    <scope line="179"/>
                    <declaration name="endVal" type="int" line="183"/>
                </scope>
            </method>
            <method name="readArrayFrom" type="void" line="188">
                <params>
                    <param name="in" type="InputStream"/>
                    <param name="a" type="int[]"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <declaration name="headp" type="int" line="191"/>
                <declaration name="uVlen" type="int" line="192"/>
                <scope line="193">
                    <declaration name="tok" type="int" line="194"/>
                    <scope line="195">
                        <scope line="196"/>
                        <scope line="199"/>
                    </scope>
                    <scope line="205"/>
                </scope>
                <declaration name="uValues" type="int[]" line="209"/>
                <scope line="211">
                    <declaration name="nextp" type="int" line="212"/>
                </scope>
            </method>
            <method name="readFavoredValuesFrom" type="int[]" line="217">
                <params>
                    <param name="in" type="InputStream"/>
                    <param name="maxForDebug" type="int"/>
                </params>
                <declaration name="lfValues" type="int[]" line="218"/>
                <declaration name="uniqueValuesForDebug" type="Set&amp;lt;Integer&amp;gt;" line="219"/>
                <declaration name="fillp" type="int" line="221"/>
                <declaration name="min" type="int" line="223"/>
                <declaration name="last" type="int" line="224"/>
                <declaration name="fcm" type="CodingMethod" line="225"/>
                <scope line="226">
                    <declaration name="ac" type="AdaptiveCoding" line="227"/>
                    <declaration name="len" type="int" line="228"/>
                    <scope line="229"/>
                    <declaration name="newFillp" type="int" line="232"/>
                    <scope line="234">
                        <declaration name="val" type="int" line="235"/>
                    </scope>
                </scope>
                <declaration name="fc" type="Coding" line="243"/>
                <scope line="244">
                    <scope line="245">
                        <declaration name="val" type="int" line="247"/>
                    </scope>
                </scope>
                <scope line="260">
                    <scope line="261">
                        <declaration name="val" type="int" line="262"/>
                    </scope>
                </scope>
            </method>
            <method name="moreCentral" type="int" line="274">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <declaration name="kx" type="int" line="275"/>
                <declaration name="ky" type="int" line="276"/>
                <declaration name="xy" type="int" line="279"/>
            </method>
            <method name="moreCentralSlow" type="int" line="283">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <declaration name="ax" type="int" line="284"/>
                <declaration name="ay" type="int" line="287"/>
            </method>
            <declaration name="LValuesCoded" type="int[]" line="294"/>
            <method name="getMetaCoding" type="byte[]" line="295">
                <params>
                    <param name="dflt" type="Coding"/>
                </params>
                <declaration name="K" type="int" line="296"/>
                <declaration name="LCoded" type="int" line="297"/>
                <scope line="298">
                    <declaration name="tc" type="Coding" line="299"/>
                    <scope line="300"/>
                    <scope line="303">
                        <scope line="305">
                            <scope line="306"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="tokenDflt" type="CodingMethod" line="313"/>
                <scope line="314"/>
                <declaration name="FDef" type="int" line="317"/>
                <declaration name="UDef" type="int" line="318"/>
                <declaration name="TDef" type="int" line="319"/>
                <declaration name="TDefL" type="int" line="320"/>
                <declaration name="bytes" type="ByteArrayOutputStream" line="322"/>
                <scope line="324"/>
                <scope line="329"/>
            </method>
            <method name="parseMetaCoding" type="int" line="334">
                <params>
                    <param name="bytes" type="byte[]"/>
                    <param name="pos" type="int"/>
                    <param name="dflt" type="Coding"/>
                    <param name="res" type="CodingMethod"/>
                </params>
                <declaration name="op" type="int" line="335"/>
                <declaration name="FDef" type="int" line="338"/>
                <declaration name="UDef" type="int" line="339"/>
                <declaration name="TDefL" type="int" line="340"/>
                <declaration name="TDef" type="int" line="341"/>
                <declaration name="L" type="int" line="342"/>
                <declaration name="FCode" type="CodingMethod[]" line="343"/>
                <declaration name="pop" type="PopulationCoding" line="347"/>
            </method>
            <method name="keyString" type="String" line="355">
                <params>
                    <param name="m" type="CodingMethod"/>
                </params>
            </method>
            <method name="toString" type="String" line="360">
                <declaration name="p200" type="PropMap" line="361"/>
                <declaration name="verbose" type="boolean" line="362"/>
                <declaration name="res" type="StringBuilder" line="363"/>
                <scope line="365">
                    <scope line="367"/>
                </scope>
            </method>
        </class>
    </source>