<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.swing.plaf.motif">
        <import package="sun.awt.AppContext"/>
        <import package="javax.swing"/>
        <import package="javax.swing.border"/>
        <import package="javax.swing.plaf.basic"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="javax.swing.plaf"/>
        <class name="MotifButtonUI" line="37">
            <extends class="BasicButtonUI"/>
            <comment line="58">
                ********************************
                          Create PLAF
                 ********************************                
            </comment>
            <comment line="72">
                ********************************
                         Create Listeners
                 ********************************                
            </comment>
            <comment line="79">
                ********************************
                          Install Defaults
                 ********************************                
            </comment>
            <comment line="96">
                ********************************
                          Default Accessors
                 ********************************                
            </comment>
            <comment line="104">
                ********************************
                          Paint Methods
                 ********************************                
            </comment>
            <comment line="112">
                Overridden to ensure we don&apos;t paint icon over button borders.                
            </comment>
            <javadoc line="37">
                MotifButton implementation
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases.  The current serialization support is appropriate
                  for short term storage or RMI between applications running the same
                  version of Swing.  A future release of Swing will provide support for
                  long term persistence.                
                <author>
                    Rich Schiavi                    
                </author>
            </javadoc>
            <declaration name="selectColor" type="Color" line="51"/>
            <declaration name="defaults_initialized" type="boolean" line="53"/>
            <declaration name="MOTIF_BUTTON_UI_KEY" type="Object" line="55"/>
            <method name="createUI" type="ComponentUI" line="60">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
                <declaration name="appContext" type="AppContext" line="61"/>
                <declaration name="motifButtonUI" type="MotifButtonUI" line="62"/>
                <scope line="64"/>
            </method>
            <method name="createButtonListener" type="BasicButtonListener" line="74">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
            </method>
            <method name="installDefaults" type="void" line="81">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
                <scope line="83"/>
            </method>
            <method name="uninstallDefaults" type="void" line="90">
                <params>
                    <param name="b" type="AbstractButton"/>
                </params>
            </method>
            <method name="getSelectColor" type="Color" line="99"/>
            <method name="paint" type="void" line="106">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="paintIcon" type="void" line="112">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                    <param name="iconRect" type="Rectangle"/>
                </params>
                <declaration name="oldClip" type="Shape" line="113"/>
                <declaration name="newClip" type="Rectangle" line="114"/>
                <declaration name="r" type="Rectangle" line="118"/>
            </method>
            <method name="paintFocus" type="void" line="127">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="b" type="AbstractButton"/>
                    <param name="viewRect" type="Rectangle"/>
                    <param name="textRect" type="Rectangle"/>
                    <param name="iconRect" type="Rectangle"/>
                </params>
                <comment line="129">
                    focus painting is handled by the border                    
                </comment>
            </method>
            <method name="paintButtonPressed" type="void" line="131">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="b" type="AbstractButton"/>
                </params>
            </method>
            <method name="fillContentArea" type="void" line="137">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="b" type="AbstractButton"/>
                    <param name="fillColor" type="Color"/>
                </params>
                <scope line="139">
                    <declaration name="margin" type="Insets" line="140"/>
                    <declaration name="insets" type="Insets" line="141"/>
                    <declaration name="size" type="Dimension" line="142"/>
                </scope>
            </method>
        </class>
    </source>