<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.swing.plaf.gtk">
        <import package="java.awt"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="javax.swing.plaf.FontUIResource"/>
        <import package="java.util.StringTokenizer"/>
        <import package="sun.font.FontConfigManager"/>
        <import package="sun.font.FontUtilities"/>
        <class name="PangoFonts" line="8">
            <javadoc line="8">
                @author Shannon Hickey                
                <author>
                    Leif Samuelsson                    
                </author>
            </javadoc>
            <declaration name="CHARS_DIGITS" type="String" line="13"/>
            <declaration name="fontScale" type="double" line="14"/>
            <javadoc line="14">
                Calculate a default scale factor for fonts in this L&amp;F to match
                  the reported resolution of the screen.
                  Java 2D specified a default user-space scale of 72dpi.
                  This is unlikely to correspond to that of the real screen.
                  The Xserver reports a value which may be used to adjust for this.
                  and Java 2D exposes it via a normalizing transform.
                  However many Xservers report a hard-coded 90dpi whilst others report a
                  calculated value based on possibly incorrect data.
                  That is something that must be solved at the X11 level
                  Note that in an X11 multi-screen environment, the default screen
                  is the one used by the JRE so it is safe to use it here.                
            </javadoc>
            <scope line="28">
                <declaration name="ge" type="GraphicsEnvironment" line="30"/>
                <scope line="31">
                    <declaration name="gc" type="GraphicsConfiguration" line="32"/>
                    <declaration name="at" type="AffineTransform" line="33"/>
                </scope>
            </scope>
            <javadoc line="37">
                Parses a String containing a pango font description and returns
                  a Font object.                
                <param>
                    pangoName a String describing a pango font
                      e.g. &quot;Sans Italic 10&quot;                    
                </param>
                <return>
                    a Font object as a FontUIResource
                      or null if no suitable font could be created.                    
                </return>
            </javadoc>
            <method name="lookupFont" type="Font" line="45">
                <params>
                    <param name="pangoName" type="String"/>
                </params>
                <declaration name="family" type="String" line="46"/>
                <declaration name="style" type="int" line="47"/>
                <declaration name="size" type="int" line="48"/>
                <declaration name="tok" type="StringTokenizer" line="49"/>
                <scope line="50">
                    <declaration name="word" type="String" line="51"/>
                    <scope line="52"/>
                    <scope line="55"/>
                    <scope line="58">
                        <scope line="59"/>
                        <scope line="62"/>
                    </scope>
                    <scope line="65">
                        <scope line="66"/>
                    </scope>
                </scope>
                <declaration name="dsize" type="double" line="72"/>
                <declaration name="dpi" type="int" line="73"/>
                <declaration name="value" type="Object" line="74"/>
                <scope line="75">
                    <scope line="77"/>
                    <scope line="80"/>
                </scope>
                <scope line="85"/>
                <scope line="89"/>
                <declaration name="fcFamilyLC" type="String" line="92"/>
                <scope line="93">
                    <declaration name="font" type="Font" line="94"/>
                </scope>
                <scope line="98">
                    <declaration name="font" type="Font" line="99"/>
                    <declaration name="fuir" type="FontUIResource" line="101"/>
                </scope>
            </method>
            <javadoc line="105">
                Parses a String containing a pango font description and returns
                  the (unscaled) font size as an integer.                
                <param>
                    pangoName a String describing a pango font                    
                </param>
                <return>
                    the size of the font described by pangoName (e.g. if
                      pangoName is &quot;Sans Italic 10&quot;, then this method returns 10)                    
                </return>
            </javadoc>
            <method name="getFontSize" type="int" line="112">
                <params>
                    <param name="pangoName" type="String"/>
                </params>
                <declaration name="size" type="int" line="113"/>
                <declaration name="tok" type="StringTokenizer" line="114"/>
                <scope line="115">
                    <declaration name="word" type="String" line="116"/>
                    <scope line="117">
                        <scope line="118"/>
                        <scope line="121"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>