<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.swing.plaf.gtk">
        <import package="javax.swing"/>
        <import package="javax.swing.plaf.synth"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Rectangle"/>
        <class name="GTKGraphicsUtils" line="7">
            <extends class="SynthGraphicsUtils"/>
            <javadoc line="7">
                @author Joshua Outwater                
            </javadoc>
            <method name="paintText" type="void" line="11">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="text" type="String"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="mnemonicIndex" type="int"/>
                </params>
                <scope line="12"/>
                <scope line="15"/>
                <declaration name="componentState" type="int" line="18"/>
                <scope line="19">
                    <declaration name="orgColor" type="Color" line="20"/>
                </scope>
                <scope line="30">
                    <declaration name="themeName" type="String" line="31"/>
                    <scope line="32"/>
                </scope>
            </method>
            <javadoc line="40">
                Paints text at the specified location. This will not attempt to
                  render the text as html nor will it offset by the insets of the
                  component.                
                <param>
                    ss SynthContext                    
                </param>
                <param>
                    g Graphics used to render string in.                    
                </param>
                <param>
                    text Text to render                    
                </param>
                <param>
                    bounds Bounds of the text to be drawn.                    
                </param>
                <param>
                    mnemonicIndex Index to draw string at.                    
                </param>
            </javadoc>
            <method name="paintText" type="void" line="50">
                <params>
                    <param name="context" type="SynthContext"/>
                    <param name="g" type="Graphics"/>
                    <param name="text" type="String"/>
                    <param name="bounds" type="Rectangle"/>
                    <param name="mnemonicIndex" type="int"/>
                </params>
                <scope line="51"/>
                <declaration name="id" type="Region" line="54"/>
                <scope line="55">
                    <declaration name="source" type="JComponent" line="56"/>
                    <scope line="57">
                        <declaration name="synthState" type="int" line="58"/>
                        <declaration name="style" type="GTKStyle" line="59"/>
                        <declaration name="focusSize" type="int" line="60"/>
                        <declaration name="focusPad" type="int" line="61"/>
                        <declaration name="totalFocus" type="int" line="62"/>
                        <declaration name="x" type="int" line="63"/>
                        <declaration name="y" type="int" line="64"/>
                        <declaration name="w" type="int" line="65"/>
                        <declaration name="h" type="int" line="66"/>
                        <declaration name="color" type="Color" line="67"/>
                    </scope>
                </scope>
            </method>
            <method name="shouldShadowText" type="boolean" line="74">
                <params>
                    <param name="id" type="Region"/>
                    <param name="state" type="int"/>
                </params>
                <declaration name="gtkState" type="int" line="75"/>
            </method>
        </class>
    </source>