<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.util.jar.pack">
        <import package="com.sun.java.util.jar.pack.ConstantPool.ClassEntry"/>
        <import package="com.sun.java.util.jar.pack.ConstantPool.DescriptorEntry"/>
        <import package="com.sun.java.util.jar.pack.ConstantPool.Entry"/>
        <import package="com.sun.java.util.jar.pack.ConstantPool.Index"/>
        <import package="com.sun.java.util.jar.pack.ConstantPool.MemberEntry"/>
        <import package="com.sun.java.util.jar.pack.ConstantPool.SignatureEntry"/>
        <import package="com.sun.java.util.jar.pack.ConstantPool.Utf8Entry"/>
        <import package="com.sun.java.util.jar.pack.Package.Class"/>
        <import package="com.sun.java.util.jar.pack.Package.File"/>
        <import package="com.sun.java.util.jar.pack.Package.InnerClass"/>
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.EOFException"/>
        <import package="java.io.PrintStream"/>
        <import package="java.io.FilterInputStream"/>
        <import package="java.io.BufferedInputStream"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Map"/>
        <import package="java.util.Arrays"/>
        <import package="java.util.Collection"/>
        <import package="java.util.Comparator"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="java.util.ListIterator"/>
        <import package="java.util.Set"/>
        <import package="com.sun.java.util.jar.pack.Constants"/>
        <class name="PackageReader" line="31">
            <extends class="BandStructure"/>
            <javadoc line="31">
                Reader for a package file.                
                <see>
                    PackageWriter                    
                </see>
                <author>
                    John Rose                    
                </author>
            </javadoc>
            <declaration name="pkg" type="Package" line="37"/>
            <declaration name="bytes" type="byte[]" line="38"/>
            <declaration name="in" type="LimitedBuffer" line="39"/>
            <method name="PackageReader" type="constructor" line="40">
                <params>
                    <param name="pkg" type="Package"/>
                    <param name="in" type="InputStream"/>
                </params>
            </method>
            <class name="LimitedBuffer" line="44">
                <extends class="BufferedInputStream"/>
                <javadoc line="44">
                    A buffered input stream which is careful not to
                      read its underlying stream ahead of a given mark,
                      called the &apos;readLimit&apos;.  This property declares
                      the maximum number of characters that future reads
                      can consume from the underlying stream.                    
                </javadoc>
                <declaration name="served" type="long" line="52"/>
                <declaration name="servedPos" type="int" line="53"/>
                <declaration name="limit" type="long" line="54"/>
                <declaration name="buffered" type="long" line="55"/>
                <method name="atLimit" type="boolean" line="56">
                    <declaration name="z" type="boolean" line="57"/>
                </method>
                <method name="getBytesServed" type="long" line="61"/>
                <method name="setReadLimit" type="void" line="64">
                    <params>
                        <param name="newLimit" type="long"/>
                    </params>
                </method>
                <method name="getReadLimit" type="long" line="68"/>
                <method name="read" type="int" line="72">
                    <scope line="73"/>
                    <declaration name="ch" type="int" line="77"/>
                </method>
                <method name="read" type="int" line="83">
                    <params>
                        <param name="b" type="byte"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                    <declaration name="nr" type="int" line="85"/>
                </method>
                <method name="skip" type="long" line="91">
                    <params>
                        <param name="n" type="long"/>
                    </params>
                </method>
                <method name="LimitedBuffer" type="constructor" line="94">
                    <params>
                        <param name="originalIn" type="InputStream"/>
                    </params>
                    <anonymous_class line="97">
                        <method name="read" type="int" line="98"/>
                        <method name="read" type="int" line="103">
                            <params>
                                <param name="b" type="byte"/>
                                <param name="off" type="int"/>
                                <param name="len" type="int"/>
                            </params>
                            <scope line="105">
                                <declaration name="remaining" type="long" line="106"/>
                            </scope>
                            <declaration name="nr" type="int" line="109"/>
                        </method>
                    </anonymous_class>
                </method>
            </class>
            <method name="read" type="void" line="117">
                <declaration name="ok" type="boolean" line="118"/>
                <scope line="119">
                    <declaration name="classes" type="Class[]" line="125"/>
                    <scope line="131"/>
                </scope>
                <scope line="136"/>
            </method>
            <declaration name="tagCount" type="int[]" line="144"/>
            <declaration name="numFiles" type="int" line="145"/>
            <declaration name="numAttrDefs" type="int" line="146"/>
            <declaration name="numInnerClasses" type="int" line="147"/>
            <declaration name="numClasses" type="int" line="148"/>
            <method name="readFileHeader" type="void" line="149"/>
            <method name="getMagicInt32" type="int" line="153">
                <declaration name="res" type="int" line="154"/>
                <scope line="155"/>
            </method>
            <declaration name="MAGIC_BYTES" type="int" line="161"/>
            <method name="readArchiveMagic" type="void" line="162"/>
            <method name="readArchiveHeader" type="void" line="169">
                <declaration name="haveSpecial" type="boolean" line="179"/>
                <declaration name="haveFiles" type="boolean" line="180"/>
                <declaration name="haveNumbers" type="boolean" line="181"/>
                <scope line="185">
                    <declaration name="sizeHi" type="long" line="186"/>
                    <declaration name="sizeLo" type="long" line="187"/>
                </scope>
                <scope line="191"/>
                <declaration name="remainingHeaders" type="int" line="197"/>
                <scope line="204"/>
                <scope line="209"/>
                <scope line="213"/>
                <scope line="217"/>
                <scope line="227"/>
            </method>
            <method name="readBandHeaders" type="void" line="231">
                <scope line="235"/>
            </method>
            <method name="readConstantPoolCounts" type="void" line="240">
                <params>
                    <param name="haveNumbers" type="boolean"/>
                </params>
                <scope line="241">
                    <declaration name="tag" type="byte" line="242"/>
                    <scope line="243"/>
                </scope>
            </method>
            <method name="getCPIndex" type="Index" line="255">
                <params>
                    <param name="tag" type="byte"/>
                </params>
            </method>
            <method name="initCPIndex" type="Index" line="258">
                <params>
                    <param name="tag" type="byte"/>
                    <param name="cpMap" type="Entry[]"/>
                </params>
                <scope line="259">
                    <scope line="260"/>
                </scope>
                <declaration name="index" type="Index" line="264"/>
            </method>
            <method name="readConstantPool" type="void" line="269"/>
            <method name="readUtf8Bands" type="void" line="386">
                <params>
                    <param name="cpMap" type="Entry[]"/>
                </params>
                <declaration name="len" type="int" line="387"/>
                <declaration name="SUFFIX_SKIP_1" type="int" line="389"/>
                <declaration name="PREFIX_SKIP_2" type="int" line="390"/>
                <declaration name="suffixChars" type="char[][]" line="395"/>
                <declaration name="bigSuffixCount" type="int" line="396"/>
                <scope line="399">
                    <declaration name="suffix" type="int" line="400"/>
                    <scope line="401"/>
                    <scope line="406">
                        <declaration name="ch" type="int" line="407"/>
                    </scope>
                </scope>
                <declaration name="maxChars" type="int" line="413"/>
                <scope line="417">
                    <declaration name="suffix" type="int" line="418"/>
                    <declaration name="prefix" type="int" line="419"/>
                    <scope line="420"/>
                    <scope line="424"/>
                </scope>
                <declaration name="buf" type="char[]" line="429"/>
                <scope line="432">
                    <declaration name="suffix" type="int" line="434"/>
                    <scope line="438"/>
                    <declaration name="packed" type="IntBand" line="441"/>
                    <scope line="444">
                        <declaration name="ch" type="int" line="445"/>
                    </scope>
                </scope>
                <scope line="455">
                    <declaration name="prefix" type="int" line="456"/>
                    <declaration name="suffix" type="int" line="457"/>
                </scope>
            </method>
            <declaration name="utf8Signatures" type="Map&lt;Utf8Entry,SignatureEntry&gt;" line="466"/>
            <method name="readSignatureBands" type="void" line="467">
                <params>
                    <param name="cpMap" type="Entry[]"/>
                </params>
                <declaration name="numSigClasses" type="int[]" line="471"/>
                <scope line="472">
                    <declaration name="formRef" type="Utf8Entry" line="473"/>
                </scope>
                <scope line="481">
                    <declaration name="formRef" type="Utf8Entry" line="482"/>
                    <declaration name="classRefs" type="ClassEntry[]" line="483"/>
                    <scope line="484"/>
                    <declaration name="se" type="SignatureEntry" line="487"/>
                </scope>
            </method>
            <method name="readMemberRefs" type="void" line="494">
                <params>
                    <param name="tag" type="byte"/>
                    <param name="cpMap" type="Entry[]"/>
                    <param name="cp_class" type="CPRefBand"/>
                    <param name="cp_desc" type="CPRefBand"/>
                </params>
                <scope line="501">
                    <declaration name="mclass" type="ClassEntry" line="502"/>
                    <declaration name="mdescr" type="DescriptorEntry" line="503"/>
                </scope>
            </method>
            <method name="readFiles" type="void" line="509">
                <declaration name="options" type="int" line="513"/>
                <declaration name="haveSizeHi" type="boolean" line="514"/>
                <declaration name="haveModtime" type="boolean" line="515"/>
                <declaration name="haveOptions" type="boolean" line="516"/>
                <declaration name="nextClass" type="Iterator" line="526"/>
                <declaration name="totalFileLength" type="long" line="527"/>
                <declaration name="fileLengths" type="long[]" line="528"/>
                <scope line="529">
                    <declaration name="size" type="long" line="530"/>
                </scope>
                <declaration name="buf" type="byte[]" line="536"/>
                <scope line="537">
                    <declaration name="name" type="Utf8Entry" line="538"/>
                    <declaration name="size" type="long" line="539"/>
                    <declaration name="file" type="File" line="540"/>
                    <declaration name="toRead" type="long" line="546"/>
                    <scope line="547">
                        <declaration name="nr" type="int" line="548"/>
                    </scope>
                    <scope line="556">
                        <declaration name="cls" type="Class" line="558"/>
                    </scope>
                </scope>
                <scope line="562">
                    <declaration name="cls" type="Class" line="563"/>
                </scope>
                <scope line="574"/>
            </method>
            <method name="readAttrDefs" type="void" line="578"/>
            <method name="readInnerClasses" type="void" line="607">
                <declaration name="longICCount" type="int" line="612"/>
                <scope line="613">
                    <declaration name="flags" type="int" line="614"/>
                    <declaration name="longForm" type="boolean" line="615"/>
                    <scope line="616"/>
                </scope>
                <declaration name="icList" type="List&lt;InnerClass&gt;" line="625"/>
                <scope line="626">
                    <declaration name="flags" type="int" line="627"/>
                    <declaration name="longForm" type="boolean" line="628"/>
                    <declaration name="thisClass" type="ClassEntry" line="630"/>
                    <declaration name="outerClass" type="ClassEntry" line="631"/>
                    <declaration name="thisName" type="Utf8Entry" line="632"/>
                    <scope line="633"/>
                    <scope line="637">
                        <declaration name="n" type="String" line="638"/>
                        <declaration name="parse" type="String[]" line="639"/>
                        <declaration name="pkgOuter" type="String" line="641"/>
                        <declaration name="name" type="String" line="642"/>
                    </scope>
                    <declaration name="ic" type="InnerClass" line="648"/>
                </scope>
            </method>
            <method name="readLocalInnerClasses" type="void" line="659">
                <params>
                    <param name="cls" type="Class"/>
                </params>
                <declaration name="nc" type="int" line="660"/>
                <declaration name="localICs" type="List&lt;InnerClass&gt;" line="661"/>
                <scope line="662">
                    <declaration name="thisClass" type="ClassEntry" line="663"/>
                    <declaration name="flags" type="int" line="664"/>
                    <scope line="665">
                        <declaration name="ic" type="InnerClass" line="666"/>
                    </scope>
                    <scope line="670">
                        <declaration name="outer" type="ClassEntry" line="672"/>
                        <declaration name="name" type="Utf8Entry" line="673"/>
                    </scope>
                </scope>
            </method>
            <declaration name="NO_FLAGS_YET" type="int" line="679"/>
            <method name="readClasses" type="Class[]" line="680">
                <declaration name="classes" type="Class[]" line="681"/>
                <scope line="691">
                    <declaration name="thisClass" type="ClassEntry" line="692"/>
                    <declaration name="superClass" type="ClassEntry" line="693"/>
                    <declaration name="interfaces" type="ClassEntry[]" line="694"/>
                    <scope line="695"/>
                    <declaration name="cls" type="Class" line="699"/>
                </scope>
            </method>
            <method name="getOutputIndex" type="int" line="712">
                <params>
                    <param name="e" type="Entry"/>
                </params>
                <declaration name="k" type="int" line="714"/>
                <scope line="716">
                    <declaration name="se" type="Entry" line="717"/>
                </scope>
            </method>
            <declaration name="entryOutputOrder" type="Comparator&lt;Entry&gt;" line="722"/>
            <anonymous_class line="722">
                <method name="compare" type="int" line="723">
                    <params>
                        <param name="e0" type="Entry"/>
                        <param name="e1" type="Entry"/>
                    </params>
                    <declaration name="k0" type="int" line="724"/>
                    <declaration name="k1" type="int" line="725"/>
                </method>
            </anonymous_class>
            <method name="reconstructClass" type="void" line="732">
                <params>
                    <param name="cls" type="Class"/>
                </params>
                <declaration name="retroVersion" type="Attribute" line="734"/>
                <scope line="735">
                    <declaration name="minmajver" type="short[]" line="737"/>
                </scope>
                <scope line="741"/>
            </method>
            <method name="reconstructLocalCPMap" type="Entry[]" line="748">
                <params>
                    <param name="cls" type="Class"/>
                </params>
            </method>
            <method name="readMembers" type="void" line="806">
                <params>
                    <param name="classes" type="Class[]"/>
                </params>
                <declaration name="totalNF" type="int" line="812"/>
                <declaration name="totalNM" type="int" line="813"/>
                <declaration name="fields" type="List&lt;Class.Field&gt;" line="817"/>
                <scope line="819">
                    <declaration name="c" type="Class" line="820"/>
                    <declaration name="nf" type="int" line="821"/>
                    <scope line="822">
                        <declaration name="f" type="Class.Field" line="823"/>
                    </scope>
                </scope>
                <declaration name="methods" type="List&lt;Class.Method&gt;" line="831"/>
                <scope line="833">
                    <declaration name="c" type="Class" line="834"/>
                    <declaration name="nm" type="int" line="835"/>
                    <scope line="836">
                        <declaration name="m" type="Class.Method" line="837"/>
                    </scope>
                </scope>
            </method>
            <declaration name="allCodes" type="Code[]" line="846"/>
            <declaration name="codesWithFlags" type="List&lt;Code&gt;" line="847"/>
            <declaration name="ldcRefMap" type="Map&lt;Class,Set&lt;Entry&gt;&gt;" line="848"/>
            <method name="buildCodeAttrs" type="Code[]" line="849">
                <params>
                    <param name="methods" type="List<Class.Method>"/>
                </params>
                <declaration name="codes" type="List&lt;Code&gt;" line="850"/>
                <scope line="851">
                    <scope line="852"/>
                </scope>
                <declaration name="a" type="Code[]" line="857"/>
            </method>
            <method name="readCodeHeaders" type="void" line="861">
                <declaration name="attrsOK" type="boolean" line="862"/>
                <declaration name="longCodes" type="List&lt;Code&gt;" line="865"/>
                <scope line="866">
                    <declaration name="c" type="Code" line="867"/>
                    <declaration name="sc" type="int" line="868"/>
                    <scope line="871"/>
                </scope>
                <scope line="887"/>
                <scope line="896"/>
                <scope line="899"/>
            </method>
            <method name="readCodeHandlers" type="void" line="904">
                <declaration name="nh" type="int" line="905"/>
                <scope line="906">
                    <declaration name="c" type="Code" line="907"/>
                </scope>
                <declaration name="code_handler_bands" type="ValueBand[]" line="910"/>
                <scope line="911"/>
                <scope line="915">
                    <declaration name="c" type="Code" line="916"/>
                    <scope line="917"/>
                </scope>
                <scope line="924"/>
            </method>
            <method name="fixupCodeHandlers" type="void" line="928">
                <scope line="929">
                    <declaration name="c" type="Code" line="930"/>
                    <scope line="931">
                        <declaration name="sum" type="int" line="932"/>
                    </scope>
                </scope>
            </method>
            <method name="countAndReadAttrs" type="void" line="941">
                <params>
                    <param name="ctype" type="int"/>
                    <param name="holders" type="Collection"/>
                </params>
            </method>
            <method name="countAttrs" type="void" line="945">
                <params>
                    <param name="ctype" type="int"/>
                    <param name="holders" type="Collection"/>
                </params>
                <declaration name="xxx_attr_bands" type="MultiBand" line="946"/>
                <declaration name="flagMask" type="long" line="947"/>
                <scope line="948"/>
                <declaration name="defList" type="List&lt;Attribute.Layout&gt;" line="951"/>
                <declaration name="defs" type="Attribute.Layout[]" line="952"/>
                <declaration name="xxx_flags_hi" type="IntBand" line="954"/>
                <declaration name="xxx_flags_lo" type="IntBand" line="955"/>
                <declaration name="xxx_attr_count" type="IntBand" line="956"/>
                <declaration name="xxx_attr_indexes" type="IntBand" line="957"/>
                <declaration name="xxx_attr_calls" type="IntBand" line="958"/>
                <declaration name="overflowMask" type="int" line="959"/>
                <declaration name="overflowHolderCount" type="int" line="960"/>
                <declaration name="haveLongFlags" type="boolean" line="961"/>
                <scope line="967">
                    <declaration name="h" type="Attribute.Holder" line="968"/>
                    <declaration name="flags" type="int" line="969"/>
                </scope>
                <declaration name="totalCounts" type="int[]" line="977"/>
                <scope line="978">
                    <declaration name="h" type="Attribute.Holder" line="979"/>
                    <declaration name="attrBits" type="long" line="981"/>
                    <declaration name="noa" type="int" line="987"/>
                    <declaration name="overflowBit" type="long" line="988"/>
                    <scope line="991"/>
                    <declaration name="nfa" type="int" line="994"/>
                    <declaration name="bits" type="long" line="995"/>
                    <scope line="996"/>
                    <declaration name="ha" type="List&lt;Attribute&gt;" line="1001"/>
                    <scope line="1004">
                        <declaration name="canonical" type="Attribute" line="1009"/>
                    </scope>
                    <scope line="1014">
                        <declaration name="ai" type="int" line="1015"/>
                        <declaration name="canonical" type="Attribute" line="1018"/>
                    </scope>
                </scope>
                <declaration name="callCounts" type="int" line="1026"/>
                <scope line="1027">
                    <scope line="1028">
                        <declaration name="def" type="Attribute.Layout" line="1029"/>
                        <declaration name="totalCount" type="int" line="1032"/>
                        <declaration name="cbles" type="Attribute.Layout.Element[]" line="1034"/>
                        <scope line="1035"/>
                    </scope>
                </scope>
                <scope line="1044">
                    <scope line="1045">
                        <declaration name="def" type="Attribute.Layout" line="1046"/>
                        <declaration name="totalCount" type="int" line="1049"/>
                        <declaration name="ab" type="Band[]" line="1050"/>
                        <scope line="1051">
                            <declaration name="tupleCount" type="int" line="1054"/>
                        </scope>
                        <scope line="1065">
                            <scope line="1066"/>
                        </scope>
                        <scope line="1070">
                            <declaration name="hasCallables" type="boolean" line="1071"/>
                            <scope line="1072"/>
                            <scope line="1075">
                                <declaration name="cbles" type="Attribute.Layout.Element[]" line="1076"/>
                                <declaration name="forwardCounts" type="int[]" line="1077"/>
                                <scope line="1079">
                                    <declaration name="entryCount" type="int" line="1081"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="badAttrIndex" type="void" line="1093">
                <params>
                    <param name="ai" type="int"/>
                    <param name="ctype" type="int"/>
                </params>
            </method>
            <method name="readAttrs" type="void" line="1096">
                <params>
                    <param name="ctype" type="int"/>
                    <param name="holders" type="Collection"/>
                </params>
                <declaration name="sawDefs" type="Set&lt;Attribute.Layout&gt;" line="1097"/>
                <declaration name="buf" type="ByteArrayOutputStream" line="1098"/>
                <scope line="1099">
                    <declaration name="h" type="Attribute.Holder" line="1100"/>
                    <scope line="1102">
                        <declaration name="a" type="Attribute" line="1103"/>
                        <declaration name="def" type="Attribute.Layout" line="1104"/>
                        <scope line="1105">
                            <scope line="1106"/>
                        </scope>
                        <declaration name="isCV" type="boolean" line="1113"/>
                        <declaration name="ab" type="Band[]" line="1116"/>
                        <anonymous_class line="1118">
                            <method name="getInt" type="int" line="1119">
                                <params>
                                    <param name="bandIndex" type="int"/>
                                </params>
                            </method>
                            <method name="getRef" type="Entry" line="1122">
                                <params>
                                    <param name="bandIndex" type="int"/>
                                </params>
                            </method>
                            <method name="decodeBCI" type="int" line="1125">
                                <params>
                                    <param name="bciCode" type="int"/>
                                </params>
                                <declaration name="code" type="Code" line="1126"/>
                            </method>
                        </anonymous_class>
                        <declaration name="fixups" type="Object" line="1118"/>
                    </scope>
                </scope>
                <scope line="1135">
                    <declaration name="ab" type="Band[]" line="1137"/>
                    <scope line="1138"/>
                </scope>
                <scope line="1142"/>
                <declaration name="xxx_attr_bands" type="MultiBand" line="1149"/>
                <scope line="1150">
                    <declaration name="b" type="Band" line="1151"/>
                </scope>
            </method>
            <method name="readAttrBands" type="void" line="1156">
                <params>
                    <param name="elems" type="Attribute.Layout.Element[]"/>
                    <param name="count" type="int"/>
                    <param name="forwardCounts" type="int[]"/>
                    <param name="ab" type="Band[]"/>
                </params>
                <scope line="1157">
                    <declaration name="e" type="Attribute.Layout.Element" line="1158"/>
                    <declaration name="eBand" type="Band" line="1159"/>
                    <scope line="1160"/>
                    <declaration name="repCount" type="int" line="1167"/>
                    <declaration name="remainingCount" type="int" line="1171"/>
                    <scope line="1172">
                        <declaration name="caseCount" type="int" line="1173"/>
                        <scope line="1174"/>
                        <scope line="1177">
                            <scope line="1179"/>
                        </scope>
                    </scope>
                    <scope line="1192"/>
                </scope>
            </method>
            <method name="readByteCodes" type="void" line="1203">
                <declaration name="operand_bands" type="Band[]" line="1208"/>
                <scope line="1209"/>
                <scope line="1216"/>
            </method>
            <method name="readByteCodeOps" type="void" line="1226">
                <declaration name="buf" type="byte[]" line="1227"/>
                <declaration name="allSwitchOps" type="List&lt;Integer&gt;" line="1228"/>
                <scope line="1229">
                    <declaration name="c" type="Code" line="1230"/>
                    <scope line="1231">
                        <declaration name="bc" type="int" line="1232"/>
                        <declaration name="isWide" type="boolean" line="1235"/>
                        <scope line="1236"/>
                        <scope line="1275"/>
                        <scope line="1279">
                            <declaration name="bc_which" type="CPRefBand" line="1280"/>
                        </scope>
                        <scope line="1284"/>
                        <scope line="1288">
                            <declaration name="bc_which" type="CPRefBand" line="1289"/>
                        </scope>
                        <scope line="1294"/>
                        <scope line="1300"/>
                    </scope>
                </scope>
                <scope line="1308">
                    <declaration name="bc" type="int" line="1309"/>
                    <declaration name="caseCount" type="int" line="1310"/>
                </scope>
            </method>
            <method name="expandByteCodeOps" type="void" line="1316">
                <declaration name="buf" type="byte[]" line="1317"/>
                <declaration name="insnMap" type="int[]" line="1318"/>
                <declaration name="labels" type="int[]" line="1319"/>
                <declaration name="fixupBuf" type="Fixups" line="1320"/>
                <scope line="1321">
                    <declaration name="code" type="Code" line="1322"/>
                    <declaration name="codeOps" type="byte[]" line="1323"/>
                    <declaration name="curClass" type="Class" line="1325"/>
                    <declaration name="ldcRefSet" type="Set&lt;Entry&gt;" line="1326"/>
                    <declaration name="thisClass" type="ClassEntry" line="1328"/>
                    <declaration name="superClass" type="ClassEntry" line="1329"/>
                    <declaration name="newClass" type="ClassEntry" line="1330"/>
                    <declaration name="pc" type="int" line="1331"/>
                    <declaration name="numInsns" type="int" line="1332"/>
                    <declaration name="numLabels" type="int" line="1333"/>
                    <declaration name="hasEscs" type="boolean" line="1334"/>
                    <scope line="1336">
                        <declaration name="bc" type="int" line="1337"/>
                        <declaration name="curPC" type="int" line="1338"/>
                        <declaration name="isWide" type="boolean" line="1343"/>
                        <scope line="1344"/>
                        <scope line="1352">
                            <declaration name="caseCount" type="int" line="1353"/>
                            <declaration name="isw" type="Instruction.Switch" line="1357"/>
                            <scope line="1359"/>
                            <scope line="1362">
                                <scope line="1363"/>
                            </scope>
                        </scope>
                        <scope line="1372">
                            <declaration name="local" type="int" line="1374"/>
                            <declaration name="delta" type="int" line="1375"/>
                            <scope line="1376"/>
                            <scope line="1383"/>
                        </scope>
                        <scope line="1391">
                            <declaration name="val" type="int" line="1392"/>
                        </scope>
                        <scope line="1400">
                            <declaration name="val" type="int" line="1401"/>
                        </scope>
                        <scope line="1407">
                            <declaration name="size" type="int" line="1409"/>
                            <declaration name="ref" type="Entry" line="1410"/>
                            <declaration name="fmt" type="int" line="1412"/>
                        </scope>
                        <scope line="1430">
                            <declaration name="size" type="int" line="1432"/>
                            <scope line="1434"/>
                        </scope>
                        <scope line="1440">
                            <declaration name="idx" type="int" line="1441"/>
                            <declaration name="origBC" type="int" line="1442"/>
                            <declaration name="classRef" type="ClassEntry" line="1443"/>
                            <declaration name="coding" type="int" line="1457"/>
                            <declaration name="ref" type="MemberEntry" line="1458"/>
                        </scope>
                        <scope line="1465">
                            <declaration name="idx" type="int" line="1466"/>
                            <declaration name="isSuper" type="boolean" line="1467"/>
                            <declaration name="isAload" type="boolean" line="1469"/>
                            <declaration name="origBC" type="int" line="1471"/>
                            <declaration name="isField" type="boolean" line="1472"/>
                            <declaration name="bc_which" type="CPRefBand" line="1473"/>
                            <declaration name="which_cls" type="ClassEntry" line="1474"/>
                            <declaration name="which_ix" type="Index" line="1475"/>
                            <scope line="1476"/>
                            <scope line="1480"/>
                            <declaration name="ref" type="MemberEntry" line="1485"/>
                            <scope line="1486"/>
                        </scope>
                        <scope line="1498">
                            <declaration name="nextPC" type="int" line="1501"/>
                        </scope>
                        <scope line="1506">
                            <declaration name="bc_which" type="CPRefBand" line="1507"/>
                            <declaration name="ref" type="Entry" line="1508"/>
                            <scope line="1509">
                                <scope line="1510"/>
                                <scope line="1513"/>
                            </scope>
                            <declaration name="origBC" type="int" line="1517"/>
                            <declaration name="size" type="int" line="1518"/>
                            <declaration name="fmt" type="int" line="1543"/>
                            <scope line="1558">
                                <declaration name="val" type="int" line="1559"/>
                            </scope>
                            <scope line="1562">
                                <declaration name="argSize" type="int" line="1563"/>
                            </scope>
                        </scope>
                        <scope line="1570">
                            <declaration name="local" type="int" line="1572"/>
                            <scope line="1573">
                                <scope line="1576">
                                    <declaration name="iVal" type="int" line="1577"/>
                                </scope>
                            </scope>
                            <scope line="1582">
                                <scope line="1585">
                                    <declaration name="iVal" type="int" line="1586"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <declaration name="ibr" type="Instruction" line="1603"/>
                    <scope line="1604">
                        <declaration name="curPC" type="int" line="1605"/>
                        <scope line="1607">
                            <declaration name="isw" type="Instruction.Switch" line="1608"/>
                            <declaration name="caseCount" type="int" line="1610"/>
                            <scope line="1611"/>
                        </scope>
                        <scope line="1615"/>
                    </scope>
                    <scope line="1619"/>
                </scope>
            </method>
        </class>
    </source>