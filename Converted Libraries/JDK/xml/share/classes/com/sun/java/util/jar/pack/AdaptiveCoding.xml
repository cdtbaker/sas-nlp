<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.util.jar.pack">
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="com.sun.java.util.jar.pack.Constants"/>
        <class name="AdaptiveCoding" line="7">
            <implements interface="CodingMethod"/>
            <javadoc line="7">
                Adaptive coding.
                  See the section &quot;Adaptive Encodings&quot; in the Pack200 spec.                
                <author>
                    John Rose                    
                </author>
            </javadoc>
            <declaration name="headCoding" type="CodingMethod" line="13"/>
            <declaration name="headLength" type="int" line="14"/>
            <declaration name="tailCoding" type="CodingMethod" line="15"/>
            <method name="AdaptiveCoding" type="constructor" line="16">
                <params>
                    <param name="headLength" type="int"/>
                    <param name="headCoding" type="CodingMethod"/>
                    <param name="tailCoding" type="CodingMethod"/>
                </params>
            </method>
            <method name="setHeadCoding" type="void" line="22">
                <params>
                    <param name="headCoding" type="CodingMethod"/>
                </params>
            </method>
            <method name="setHeadLength" type="void" line="25">
                <params>
                    <param name="headLength" type="int"/>
                </params>
            </method>
            <method name="setTailCoding" type="void" line="29">
                <params>
                    <param name="tailCoding" type="CodingMethod"/>
                </params>
            </method>
            <method name="isTrivial" type="boolean" line="32"/>
            <method name="writeArrayTo" type="void" line="35">
                <params>
                    <param name="out" type="OutputStream"/>
                    <param name="a" type="int[]"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
            </method>
            <method name="writeArray" type="void" line="38">
                <params>
                    <param name="run" type="AdaptiveCoding"/>
                    <param name="out" type="OutputStream"/>
                    <param name="a" type="int[]"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <scope line="39">
                    <declaration name="mid" type="int" line="40"/>
                    <scope line="44"/>
                </scope>
            </method>
            <method name="readArrayFrom" type="void" line="52">
                <params>
                    <param name="in" type="InputStream"/>
                    <param name="a" type="int[]"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
            </method>
            <method name="readArray" type="void" line="55">
                <params>
                    <param name="run" type="AdaptiveCoding"/>
                    <param name="in" type="InputStream"/>
                    <param name="a" type="int[]"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <scope line="56">
                    <declaration name="mid" type="int" line="57"/>
                    <scope line="61"/>
                </scope>
            </method>
            <declaration name="KX_MIN" type="int" line="69"/>
            <declaration name="KX_MAX" type="int" line="70"/>
            <declaration name="KX_LG2BASE" type="int" line="71"/>
            <declaration name="KX_BASE" type="int" line="72"/>
            <declaration name="KB_MIN" type="int" line="73"/>
            <declaration name="KB_MAX" type="int" line="74"/>
            <declaration name="KB_OFFSET" type="int" line="75"/>
            <declaration name="KB_DEFAULT" type="int" line="76"/>
            <method name="getKXOf" type="int" line="77">
                <params>
                    <param name="K" type="int"/>
                </params>
                <scope line="78"/>
            </method>
            <method name="getKBOf" type="int" line="84">
                <params>
                    <param name="K" type="int"/>
                </params>
                <declaration name="KX" type="int" line="85"/>
            </method>
            <method name="decodeK" type="int" line="90">
                <params>
                    <param name="KX" type="int"/>
                    <param name="KB" type="int"/>
                </params>
            </method>
            <method name="getNextK" type="int" line="95">
                <params>
                    <param name="K" type="int"/>
                </params>
                <declaration name="KX" type="int" line="97"/>
                <declaration name="unit" type="int" line="99"/>
                <declaration name="mask" type="int" line="100"/>
                <declaration name="K1" type="int" line="101"/>
                <scope line="103"/>
                <declaration name="mask2" type="int" line="109"/>
            </method>
            <method name="isCodableLength" type="boolean" line="115">
                <params>
                    <param name="K" type="int"/>
                </params>
                <declaration name="KX" type="int" line="116"/>
                <declaration name="unit" type="int" line="118"/>
                <declaration name="mask" type="int" line="119"/>
            </method>
            <method name="getMetaCoding" type="byte[]" line="122">
                <params>
                    <param name="dflt" type="Coding"/>
                </params>
                <declaration name="bytes" type="ByteArrayOutputStream" line="123"/>
                <scope line="124"/>
                <scope line="127"/>
            </method>
            <method name="makeMetaCoding" type="void" line="132">
                <params>
                    <param name="run" type="AdaptiveCoding"/>
                    <param name="dflt" type="Coding"/>
                    <param name="bytes" type="ByteArrayOutputStream"/>
                </params>
                <scope line="133">
                    <declaration name="headCoding" type="CodingMethod" line="134"/>
                    <declaration name="headLength" type="int" line="135"/>
                    <declaration name="tailCoding" type="CodingMethod" line="136"/>
                    <declaration name="K" type="int" line="137"/>
                    <declaration name="ADef" type="int" line="139"/>
                    <declaration name="BDef" type="int" line="140"/>
                    <declaration name="ABDef" type="int" line="142"/>
                    <declaration name="KX" type="int" line="144"/>
                    <declaration name="KB" type="int" line="145"/>
                    <declaration name="KBFlag" type="int" line="147"/>
                    <scope line="151"/>
                </scope>
            </method>
            <method name="parseMetaCoding" type="int" line="159">
                <params>
                    <param name="bytes" type="byte[]"/>
                    <param name="pos" type="int"/>
                    <param name="dflt" type="Coding"/>
                    <param name="res" type="CodingMethod"/>
                </params>
                <declaration name="op" type="int" line="160"/>
                <declaration name="prevc" type="AdaptiveCoding" line="162"/>
                <scope line="163">
                    <declaration name="KX" type="int" line="167"/>
                    <declaration name="KBFlag" type="int" line="168"/>
                    <declaration name="ABDef" type="int" line="169"/>
                    <declaration name="ADef" type="int" line="171"/>
                    <declaration name="BDef" type="int" line="172"/>
                    <declaration name="ACode" type="CodingMethod[]" line="173"/>
                    <declaration name="KB" type="int" line="174"/>
                    <scope line="176"/>
                    <scope line="179"/>
                    <scope line="183"/>
                    <declaration name="newc" type="AdaptiveCoding" line="186"/>
                    <scope line="187"/>
                    <scope line="190"/>
                </scope>
            </method>
            <method name="keyString" type="String" line="197">
                <params>
                    <param name="m" type="CodingMethod"/>
                </params>
            </method>
            <method name="toString" type="String" line="201">
                <declaration name="res" type="StringBuilder" line="202"/>
                <declaration name="run" type="AdaptiveCoding" line="203"/>
                <scope line="205">
                    <scope line="208"/>
                </scope>
            </method>
        </class>
    </source>