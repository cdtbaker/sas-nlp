<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.util.jar.pack">
        <import package="java.io.ByteArrayOutputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.OutputStream"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collections"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="java.util.Random"/>
        <import package="java.util.Set"/>
        <import package="java.util.zip.Deflater"/>
        <import package="java.util.zip.DeflaterOutputStream"/>
        <import package="com.sun.java.util.jar.pack.Constants"/>
        <class name="CodingChooser" line="15">
            <javadoc line="15">
                Heuristic chooser of basic encodings.
                  Runs &quot;zip&quot; to measure the apparent information content after coding.                
                <author>
                    John Rose                    
                </author>
            </javadoc>
            <declaration name="verbose" type="int" line="21"/>
            <declaration name="effort" type="int" line="22"/>
            <declaration name="optUseHistogram" type="boolean" line="23"/>
            <declaration name="optUsePopulationCoding" type="boolean" line="24"/>
            <declaration name="optUseAdaptiveCoding" type="boolean" line="25"/>
            <declaration name="disablePopCoding" type="boolean" line="26"/>
            <declaration name="disableRunCoding" type="boolean" line="27"/>
            <declaration name="topLevel" type="boolean" line="28"/>
            <declaration name="fuzz" type="double" line="29"/>
            <declaration name="allCodingChoices" type="Coding[]" line="30"/>
            <declaration name="choices" type="Choice[]" line="31"/>
            <declaration name="context" type="ByteArrayOutputStream" line="32"/>
            <declaration name="popHelper" type="CodingChooser" line="33"/>
            <declaration name="runHelper" type="CodingChooser" line="34"/>
            <declaration name="stress" type="Random" line="35"/>
            <class name="Choice" line="36">
                <declaration name="coding" type="Coding" line="37"/>
                <declaration name="index" type="int" line="38"/>
                <declaration name="distance" type="int[]" line="39"/>
                <method name="Choice" type="constructor" line="40">
                    <params>
                        <param name="coding" type="Coding"/>
                        <param name="index" type="int"/>
                        <param name="distance" type="int[]"/>
                    </params>
                </method>
                <declaration name="searchOrder" type="int" line="45"/>
                <declaration name="minDistance" type="int" line="46"/>
                <declaration name="zipSize" type="int" line="47"/>
                <declaration name="byteSize" type="int" line="48"/>
                <declaration name="histSize" type="int" line="49"/>
                <method name="reset" type="void" line="50"/>
                <method name="isExtra" type="boolean" line="55"/>
                <method name="toString" type="String" line="58"/>
                <method name="stringForDebug" type="String" line="61">
                    <declaration name="s" type="String" line="62"/>
                </method>
            </class>
            <method name="CodingChooser" type="constructor" line="71">
                <params>
                    <param name="effort" type="int"/>
                    <param name="allCodingChoices" type="Coding[]"/>
                </params>
                <declaration name="p200" type="PropMap" line="72"/>
                <scope line="73">
                    <declaration name="lstress" type="int" line="78"/>
                </scope>
                <declaration name="nc" type="int" line="84"/>
                <scope line="85"/>
                <scope line="91">
                    <declaration name="distance" type="int[]" line="93"/>
                </scope>
                <scope line="96">
                    <declaration name="ci" type="Coding" line="97"/>
                    <scope line="99">
                        <declaration name="cj" type="Coding" line="100"/>
                        <declaration name="dij" type="int" line="101"/>
                    </scope>
                </scope>
            </method>
            <method name="makeExtraChoice" type="Choice" line="109">
                <params>
                    <param name="coding" type="Coding"/>
                </params>
                <declaration name="distance" type="int[]" line="110"/>
                <scope line="111">
                    <declaration name="ci" type="Coding" line="112"/>
                    <declaration name="dij" type="int" line="113"/>
                </scope>
                <declaration name="c" type="Choice" line="118"/>
            </method>
            <method name="getContext" type="ByteArrayOutputStream" line="122"/>
            <declaration name="values" type="int[]" line="126"/>
            <declaration name="start" type="int" line="127"/>
            <declaration name="deltas" type="int[]" line="128"/>
            <declaration name="min" type="int" line="129"/>
            <declaration name="vHist" type="Histogram" line="130"/>
            <declaration name="dHist" type="Histogram" line="131"/>
            <declaration name="searchOrder" type="int" line="132"/>
            <declaration name="regularChoice" type="Choice" line="133"/>
            <declaration name="bestChoice" type="Choice" line="134"/>
            <declaration name="bestMethod" type="CodingMethod" line="135"/>
            <declaration name="bestByteSize" type="int" line="136"/>
            <declaration name="bestZipSize" type="int" line="137"/>
            <declaration name="targetSize" type="int" line="138"/>
            <method name="reset" type="void" line="139">
                <params>
                    <param name="values" type="int[]"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
            </method>
            <declaration name="MIN_EFFORT" type="int" line="156"/>
            <declaration name="MID_EFFORT" type="int" line="157"/>
            <declaration name="MAX_EFFORT" type="int" line="158"/>
            <declaration name="POP_EFFORT" type="int" line="159"/>
            <declaration name="RUN_EFFORT" type="int" line="160"/>
            <declaration name="BYTE_SIZE" type="int" line="161"/>
            <declaration name="ZIP_SIZE" type="int" line="162"/>
            <method name="choose" type="CodingMethod" line="163">
                <params>
                    <param name="values" type="int[]"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                    <param name="regular" type="Coding"/>
                    <param name="sizes" type="int[]"/>
                </params>
                <scope line="165">
                    <scope line="166">
                        <declaration name="computed" type="int[]" line="167"/>
                    </scope>
                </scope>
                <scope line="173"/>
                <scope line="177">
                    <declaration name="val" type="int" line="178"/>
                </scope>
                <declaration name="numChoices" type="int" line="182"/>
                <scope line="183">
                    <declaration name="rand" type="int" line="184"/>
                    <declaration name="coding" type="CodingMethod" line="185"/>
                    <scope line="186">
                        <declaration name="c" type="Choice" line="187"/>
                        <scope line="188"/>
                    </scope>
                    <scope line="193">
                        <scope line="194"/>
                        <scope line="197"/>
                    </scope>
                    <scope line="201"/>
                    <scope line="204"/>
                </scope>
                <declaration name="searchScale" type="double" line="209"/>
                <scope line="210"/>
                <declaration name="searchOrderLimit" type="int" line="213"/>
                <declaration name="maxd" type="int" line="216"/>
                <declaration name="zipSize1" type="int" line="217"/>
                <declaration name="byteSize1" type="int" line="218"/>
                <scope line="219">
                    <declaration name="X" type="int" line="220"/>
                    <scope line="221">
                        <declaration name="Xlen" type="int" line="222"/>
                    </scope>
                </scope>
                <declaration name="dscale" type="int" line="228"/>
                <scope line="229">
                    <declaration name="nextChoice" type="Choice" line="230"/>
                    <declaration name="dhi" type="int" line="232"/>
                    <declaration name="dlo" type="int" line="233"/>
                    <declaration name="nextMaxd" type="int" line="238"/>
                    <scope line="239"/>
                </scope>
                <declaration name="plainBest" type="Coding" line="244"/>
                <scope line="246"/>
                <scope line="250"/>
                <scope line="253"/>
                <scope line="256"/>
                <scope line="260"/>
                <declaration name="lbestMethod" type="CodingMethod" line="263"/>
            </method>
            <method name="choose" type="CodingMethod" line="267">
                <params>
                    <param name="values" type="int[]"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                    <param name="regular" type="Coding"/>
                </params>
            </method>
            <method name="choose" type="CodingMethod" line="270">
                <params>
                    <param name="values" type="int[]"/>
                    <param name="regular" type="Coding"/>
                    <param name="sizes" type="int[]"/>
                </params>
            </method>
            <method name="choose" type="CodingMethod" line="273">
                <params>
                    <param name="values" type="int[]"/>
                    <param name="regular" type="Coding"/>
                </params>
            </method>
            <method name="markUsableChoices" type="int" line="276">
                <params>
                    <param name="regular" type="Coding"/>
                </params>
                <declaration name="numChoices" type="int" line="277"/>
                <scope line="278">
                    <declaration name="c" type="Choice" line="279"/>
                    <scope line="281">
                        <scope line="283"/>
                    </scope>
                </scope>
                <scope line="291">
                    <scope line="293"/>
                </scope>
                <scope line="297">
                    <scope line="298">
                        <declaration name="c" type="Choice" line="299"/>
                        <scope line="300"/>
                    </scope>
                    <scope line="305"/>
                </scope>
                <scope line="310">
                    <scope line="312">
                        <scope line="313">
                            <declaration name="c" type="Choice" line="314"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="findChoiceNear" type="Choice" line="321">
                <params>
                    <param name="near" type="Choice"/>
                    <param name="dhi" type="int"/>
                    <param name="dlo" type="int"/>
                </params>
                <declaration name="distance" type="int[]" line="323"/>
                <declaration name="found" type="Choice" line="324"/>
                <scope line="325">
                    <declaration name="c" type="Choice" line="326"/>
                    <scope line="328">
                        <scope line="329"/>
                    </scope>
                </scope>
            </method>
            <method name="evaluate" type="void" line="339">
                <params>
                    <param name="c" type="Choice"/>
                </params>
                <declaration name="mustComputeSize" type="boolean" line="342"/>
                <scope line="343"/>
                <scope line="346">
                    <declaration name="hist" type="Histogram" line="347"/>
                </scope>
                <scope line="352"/>
                <scope line="355">
                    <declaration name="sizes" type="int[]" line="356"/>
                </scope>
                <scope line="361"/>
                <scope line="364"/>
            </method>
            <method name="noteSizes" type="boolean" line="368">
                <params>
                    <param name="c" type="CodingMethod"/>
                    <param name="byteSize" type="int"/>
                    <param name="zipSize" type="int"/>
                </params>
                <declaration name="better" type="boolean" line="370"/>
                <scope line="372"/>
                <scope line="379"/>
            </method>
            <method name="updateDistances" type="int" line="383">
                <params>
                    <param name="c" type="Choice"/>
                </params>
                <declaration name="distance" type="int[]" line="384"/>
                <declaration name="maxd" type="int" line="385"/>
                <scope line="386">
                    <declaration name="c2" type="Choice" line="387"/>
                    <declaration name="d" type="int" line="389"/>
                    <declaration name="mind" type="int" line="391"/>
                </scope>
            </method>
            <method name="computeSize" type="void" line="398">
                <params>
                    <param name="c" type="CodingMethod"/>
                    <param name="values" type="int[]"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                    <param name="sizes" type="int[]"/>
                </params>
                <scope line="399"/>
                <scope line="403"/>
                <scope line="409"/>
            </method>
            <method name="computeSize" type="void" line="413">
                <params>
                    <param name="c" type="CodingMethod"/>
                    <param name="values" type="int[]"/>
                    <param name="sizes" type="int[]"/>
                </params>
            </method>
            <method name="computeSize" type="int[]" line="416">
                <params>
                    <param name="c" type="CodingMethod"/>
                    <param name="values" type="int[]"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <declaration name="sizes" type="int[]" line="417"/>
            </method>
            <method name="computeSize" type="int[]" line="421">
                <params>
                    <param name="c" type="CodingMethod"/>
                    <param name="values" type="int[]"/>
                </params>
            </method>
            <method name="computeSizePrivate" type="int[]" line="424">
                <params>
                    <param name="c" type="CodingMethod"/>
                </params>
                <declaration name="sizes" type="int[]" line="425"/>
            </method>
            <method name="computeByteSize" type="int" line="429">
                <params>
                    <param name="cm" type="CodingMethod"/>
                    <param name="values" type="int[]"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
            </method>
            <method name="countBytesToSizer" type="int" line="443">
                <params>
                    <param name="cm" type="CodingMethod"/>
                    <param name="values" type="int[]"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
                <scope line="444"/>
                <scope line="449"/>
            </method>
            <method name="getDeltas" type="int[]" line="453">
                <params>
                    <param name="min" type="int"/>
                    <param name="max" type="int"/>
                </params>
                <scope line="455"/>
            </method>
            <method name="getValueHistogram" type="Histogram" line="460">
                <scope line="461">
                    <scope line="463"/>
                    <scope line="466"/>
                </scope>
            </method>
            <method name="getDeltaHistogram" type="Histogram" line="472">
                <scope line="473">
                    <scope line="475"/>
                    <scope line="478"/>
                </scope>
            </method>
            <method name="getHistogram" type="Histogram" line="484">
                <params>
                    <param name="isDelta" type="boolean"/>
                </params>
            </method>
            <method name="tryPopulationCoding" type="void" line="487">
                <params>
                    <param name="plainCoding" type="Coding"/>
                </params>
                <declaration name="hist" type="Histogram" line="488"/>
                <declaration name="approxL" type="int" line="489"/>
                <declaration name="favoredCoding" type="Coding" line="490"/>
                <declaration name="tokenCoding" type="Coding" line="491"/>
                <declaration name="unfavoredCoding" type="Coding" line="492"/>
                <declaration name="BAND_HEADER" type="int" line="493"/>
                <declaration name="currentFSize" type="int" line="494"/>
                <declaration name="currentTSize" type="int" line="495"/>
                <declaration name="currentUSize" type="int" line="496"/>
                <declaration name="ZERO_LEN" type="int" line="498"/>
                <declaration name="bestPopSize" type="int" line="501"/>
                <declaration name="bestPopFVC" type="int" line="502"/>
                <declaration name="allFavoredValues" type="int[]" line="503"/>
                <declaration name="targetLowFVC" type="int" line="504"/>
                <declaration name="targetHighFVC" type="int" line="505"/>
                <declaration name="matrix" type="int[][]" line="506"/>
                <declaration name="mrow" type="int" line="507"/>
                <declaration name="mcol" type="int" line="508"/>
                <declaration name="mrowFreq" type="int" line="509"/>
                <scope line="510">
                    <scope line="511"/>
                    <declaration name="thisValue" type="int" line="516"/>
                    <declaration name="thisVLen" type="int" line="518"/>
                    <declaration name="thisVCount" type="int" line="520"/>
                    <declaration name="thisToken" type="int" line="521"/>
                    <declaration name="currentSize" type="int" line="524"/>
                    <scope line="525">
                        <scope line="526"/>
                    </scope>
                </scope>
                <scope line="535">
                    <scope line="536"/>
                </scope>
                <declaration name="oldZipSize" type="int" line="542"/>
                <declaration name="LValuesCoded" type="int[]" line="543"/>
                <declaration name="bestFits" type="List&lt;Coding&gt;" line="544"/>
                <declaration name="fullFits" type="List&lt;Coding&gt;" line="545"/>
                <declaration name="longFits" type="List&lt;Coding&gt;" line="546"/>
                <declaration name="PACK_TO_MAX_S" type="int" line="547"/>
                <scope line="548"/>
                <scope line="551">
                    <declaration name="bestB" type="int" line="552"/>
                    <declaration name="doFullAlso" type="boolean" line="553"/>
                    <scope line="555">
                        <declaration name="L" type="int" line="556"/>
                        <declaration name="c0" type="Coding" line="557"/>
                        <declaration name="c1" type="Coding" line="558"/>
                        <declaration name="c3" type="Coding" line="559"/>
                        <scope line="560"/>
                        <scope line="564">
                            <scope line="566">
                                <declaration name="c2" type="Coding" line="569"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="574">
                        <declaration name="c" type="Coding" line="575"/>
                        <scope line="576"/>
                    </scope>
                </scope>
                <declaration name="allFits" type="List&lt;Coding&gt;" line="582"/>
                <scope line="583"/>
                <declaration name="maxFits" type="int" line="591"/>
                <scope line="593"/>
                <scope line="598"/>
                <scope line="603">
                    <declaration name="packToMax" type="boolean" line="604"/>
                    <scope line="605"/>
                    <declaration name="fVlen" type="int" line="609"/>
                    <scope line="610"/>
                    <scope line="615"/>
                    <declaration name="pop" type="PopulationCoding" line="620"/>
                    <declaration name="tcsizes" type="int[]" line="626"/>
                </scope>
                <scope line="629">
                    <scope line="631"/>
                </scope>
            </method>
            <method name="computePopSizePrivate" type="int[]" line="636">
                <params>
                    <param name="pop" type="PopulationCoding"/>
                    <param name="favoredCoding" type="Coding"/>
                    <param name="unfavoredCoding" type="Coding"/>
                </params>
            </method>
            <method name="tryAdaptiveCoding" type="void" line="702">
                <params>
                    <param name="plainCoding" type="Coding"/>
                </params>
                <declaration name="oldZipSize" type="int" line="703"/>
                <declaration name="lstart" type="int" line="704"/>
                <declaration name="lend" type="int" line="705"/>
                <declaration name="lvalues" type="int[]" line="706"/>
                <declaration name="len" type="int" line="707"/>
                <scope line="708"/>
                <declaration name="sizes" type="int[]" line="713"/>
                <declaration name="fillp" type="int" line="714"/>
                <declaration name="totalSize" type="int" line="715"/>
                <scope line="716">
                    <declaration name="val" type="int" line="717"/>
                    <declaration name="size" type="int" line="719"/>
                </scope>
                <declaration name="avgSize" type="double" line="725"/>
                <declaration name="sizeFuzz" type="double" line="726"/>
                <declaration name="sizeFuzz2" type="double" line="727"/>
                <declaration name="sizeFuzz3" type="double" line="728"/>
                <scope line="729"/>
                <scope line="733"/>
                <declaration name="dmeshes" type="double[]" line="740"/>
                <declaration name="logLen" type="double" line="741"/>
                <scope line="742"/>
                <declaration name="meshes" type="int[]" line="745"/>
                <declaration name="mfillp" type="int" line="746"/>
                <scope line="747">
                    <declaration name="m" type="int" line="748"/>
                </scope>
                <declaration name="BAND_HEADER" type="int" line="755"/>
                <declaration name="threshes" type="int[]" line="756"/>
                <declaration name="fuzzes" type="double[]" line="757"/>
                <scope line="758">
                    <declaration name="mesh" type="int" line="759"/>
                    <declaration name="lfuzz" type="double" line="760"/>
                </scope>
                <scope line="767">
                    <scope line="769"/>
                </scope>
                <scope line="774"/>
                <scope line="783">
                    <scope line="786">
                        <declaration name="mesh" type="int" line="787"/>
                        <declaration name="thresh" type="int" line="788"/>
                        <declaration name="size" type="int" line="790"/>
                        <scope line="791">
                            <declaration name="bend" type="int" line="792"/>
                            <declaration name="bsize" type="int" line="793"/>
                            <declaration name="bigSize" type="double" line="794"/>
                            <scope line="795">
                                <declaration name="bend0" type="int" line="796"/>
                                <declaration name="bsize0" type="int" line="797"/>
                                <scope line="802"/>
                            </scope>
                            <declaration name="nexti" type="int" line="808"/>
                            <scope line="809"/>
                            <declaration name="begcm" type="CodingMethod" line="813"/>
                            <scope line="815"/>
                            <scope line="819"/>
                            <scope line="824"/>
                            <scope line="827"/>
                            <scope line="830">
                                <declaration name="chain" type="CodingMethod" line="831"/>
                                <declaration name="hlen" type="int" line="832"/>
                                <scope line="833"/>
                                <scope line="836"/>
                                <scope line="840"/>
                                <declaration name="chainSize" type="int[]" line="844"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="852">
                    <scope line="853"/>
                </scope>
            </method>
            <method name="pct" type="String" line="858">
                <params>
                    <param name="num" type="double"/>
                    <param name="den" type="double"/>
                </params>
            </method>
            <class name="Sizer" line="861">
                <extends class="OutputStream"/>
                <declaration name="out" type="OutputStream" line="862"/>
                <method name="Sizer" type="constructor" line="863">
                    <params>
                        <param name="out" type="OutputStream"/>
                    </params>
                </method>
                <method name="Sizer" type="constructor" line="866"/>
                <declaration name="count" type="int" line="869"/>
                <method name="write" type="void" line="870">
                    <params>
                        <param name="b" type="int"/>
                    </params>
                </method>
                <method name="write" type="void" line="874">
                    <params>
                        <param name="b" type="byte"/>
                        <param name="off" type="int"/>
                        <param name="len" type="int"/>
                    </params>
                </method>
                <method name="reset" type="void" line="878"/>
                <method name="getSize" type="int" line="881"/>
                <method name="toString" type="String" line="884">
                    <declaration name="str" type="String" line="885"/>
                </method>
                <method name="stringForDebug" type="String" line="889"/>
            </class>
            <declaration name="zipSizer" type="Sizer" line="893"/>
            <declaration name="zipDef" type="Deflater" line="894"/>
            <declaration name="zipOut" type="DeflaterOutputStream" line="895"/>
            <declaration name="byteSizer" type="Sizer" line="896"/>
            <declaration name="byteOnlySizer" type="Sizer" line="897"/>
            <method name="resetData" type="void" line="898">
                <scope line="901">
                    <scope line="902"/>
                    <scope line="905"/>
                </scope>
            </method>
            <method name="flushData" type="void" line="912">
                <scope line="913"/>
                <scope line="916"/>
            </method>
            <method name="getByteSize" type="int" line="920"/>
            <method name="getZipSize" type="int" line="923"/>
            <method name="addStressSeed" type="void" line="927">
                <params>
                    <param name="x" type="int"/>
                </params>
            </method>
            <method name="stressPopCoding" type="CodingMethod" line="931">
                <params>
                    <param name="coding" type="CodingMethod"/>
                </params>
                <declaration name="valueCoding" type="Coding" line="934"/>
                <declaration name="hist" type="Histogram" line="935"/>
                <declaration name="fVlen" type="int" line="936"/>
                <declaration name="popvals" type="List&lt;Integer&gt;" line="938"/>
                <scope line="939">
                    <declaration name="popset" type="Set&lt;Integer&gt;" line="940"/>
                    <scope line="941"/>
                </scope>
                <scope line="945">
                    <declaration name="matrix" type="int[][]" line="946"/>
                    <scope line="947">
                        <declaration name="row" type="int[]" line="948"/>
                        <scope line="949"/>
                    </scope>
                </scope>
                <declaration name="reorder" type="int" line="954"/>
                <scope line="955"/>
                <scope line="958"/>
                <scope line="963">
                    <scope line="964"/>
                    <scope line="967"/>
                </scope>
                <declaration name="fvals" type="int[]" line="972"/>
                <scope line="973"/>
                <declaration name="pop" type="PopulationCoding" line="976"/>
                <declaration name="lvals" type="int[]" line="978"/>
                <scope line="979">
                    <declaration name="popl" type="int" line="980"/>
                    <scope line="982"/>
                </scope>
                <scope line="987">
                    <declaration name="lmin" type="int" line="988"/>
                    <scope line="989">
                        <declaration name="val" type="int" line="990"/>
                    </scope>
                </scope>
            </method>
            <method name="stressAdaptiveCoding" type="CodingMethod" line="999">
                <params>
                    <param name="coding" type="CodingMethod"/>
                </params>
                <declaration name="plainCoding" type="Coding" line="1002"/>
                <declaration name="len" type="int" line="1003"/>
                <declaration name="spanlen" type="int" line="1005"/>
                <scope line="1007">
                    <declaration name="allValues" type="int[]" line="1010"/>
                    <declaration name="result" type="CodingMethod" line="1011"/>
                    <declaration name="scan" type="int" line="1012"/>
                    <declaration name="lstart" type="int" line="1013"/>
                    <scope line="1014">
                        <declaration name="thisspan" type="int" line="1015"/>
                        <declaration name="rand" type="int" line="1016"/>
                        <scope line="1017"/>
                        <scope line="1020">
                            <declaration name="KX" type="int" line="1021"/>
                            <declaration name="KB" type="int" line="1022"/>
                            <scope line="1023"/>
                        </scope>
                        <scope line="1032"/>
                        <declaration name="sc" type="CodingMethod" line="1038"/>
                        <scope line="1039"/>
                        <scope line="1042"/>
                    </scope>
                </scope>
                <scope line="1048"/>
            </method>
            <method name="stressCoding" type="Coding" line="1052">
                <params>
                    <param name="min" type="int"/>
                    <param name="max" type="int"/>
                </params>
                <scope line="1054">
                    <declaration name="c" type="Coding" line="1055"/>
                    <scope line="1058">
                        <declaration name="dc" type="Coding" line="1059"/>
                    </scope>
                </scope>
            </method>
            <method name="stressLen" type="int" line="1066">
                <params>
                    <param name="len" type="int"/>
                </params>
                <declaration name="rand" type="int" line="1069"/>
            </method>
        </class>
    </source>