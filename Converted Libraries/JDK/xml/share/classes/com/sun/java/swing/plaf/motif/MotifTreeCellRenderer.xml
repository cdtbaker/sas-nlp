<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.swing.plaf.motif">
        <import package="javax.swing"/>
        <import package="javax.swing.plaf"/>
        <import package="javax.swing.tree"/>
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.beans"/>
        <import package="java.io"/>
        <import package="java.util"/>
        <class name="MotifTreeCellRenderer" line="37">
            <extends class="DefaultTreeCellRenderer"/>
            <javadoc line="37">
                Motif rendered to display a tree cell.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases.  The current serialization support is appropriate
                  for short term storage or RMI between applications running the same
                  version of Swing.  A future release of Swing will provide support for
                  long term persistence.                
                <author>
                    Jeff Dinkins                    
                </author>
            </javadoc>
            <declaration name="LEAF_SIZE" type="int" line="51"/>
            <declaration name="LEAF_ICON" type="Icon" line="52"/>
            <method name="MotifTreeCellRenderer" type="constructor" line="54"/>
            <method name="loadLeafIcon" type="Icon" line="58"/>
            <class name="TreeLeafIcon" line="62">
                <implements interface="Icon"/>
                <implements interface="Serializable"/>
                <javadoc line="62">
                    Icon for a node with no children.
                      &lt;p&gt;
                      &lt;strong&gt;Warning:&lt;/strong&gt;
                      Serialized objects of this class will not be compatible with
                      future Swing releases.  The current serialization support is appropriate
                      for short term storage or RMI between applications running the same
                      version of Swing.  A future release of Swing will provide support for
                      long term persistence.                    
                </javadoc>
                <declaration name="bg" type="Color" line="74"/>
                <declaration name="shadow" type="Color" line="75"/>
                <declaration name="highlight" type="Color" line="76"/>
                <method name="TreeLeafIcon" type="constructor" line="78"/>
                <method name="paintIcon" type="void" line="84">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                </method>
                <method name="getIconWidth" type="int" line="104"/>
                <method name="getIconHeight" type="int" line="108"/>
            </class>
        </class>
    </source>