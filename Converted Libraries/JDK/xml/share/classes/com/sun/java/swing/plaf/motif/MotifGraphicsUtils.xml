<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.swing.plaf.motif">
        <import package="sun.swing.SwingUtilities2"/>
        <import package="javax.swing"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Font"/>
        <import package="java.awt.FontMetrics"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Insets"/>
        <import package="java.awt.event.KeyEvent"/>
        <import package="java.awt.Container"/>
        <import package="javax.swing.plaf.basic"/>
        <import package="javax.swing.text.View"/>
        <class name="MotifGraphicsUtils" line="16">
            <implements interface="SwingConstants"/>
            <declaration name="MAX_ACC_WIDTH" type="String" line="17"/>
            <javadoc line="18">
                Draws the point (&lt;b&gt;x&lt;/b&gt;, &lt;b&gt;y&lt;/b&gt;) in the current color.                
            </javadoc>
            <method name="drawPoint" type="void" line="21">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
            </method>
            <method name="drawGroove" type="void" line="24">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="shadow" type="Color"/>
                    <param name="highlight" type="Color"/>
                </params>
                <declaration name="oldColor" type="Color" line="25"/>
            </method>
            <javadoc line="37">
                Draws &lt;b&gt;aString&lt;/b&gt; in the rectangle defined by
                  (&lt;b&gt;x&lt;/b&gt;, &lt;b&gt;y&lt;/b&gt;, &lt;b&gt;width&lt;/b&gt;, &lt;b&gt;height&lt;/b&gt;).
                  &lt;b&gt;justification&lt;/b&gt; specifies the text&apos;s justification, one of
                  LEFT, CENTER, or RIGHT.
                  &lt;b&gt;drawStringInRect()&lt;/b&gt; does not clip to the rectangle, but instead
                  uses this rectangle and the desired justification to compute the point
                  at which to begin drawing the text.                
                <see>
                    #drawString                    
                </see>
            </javadoc>
            <method name="drawStringInRect" type="void" line="47">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="aString" type="String"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="justification" type="int"/>
                </params>
            </method>
            <method name="drawStringInRect" type="void" line="50">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="g" type="Graphics"/>
                    <param name="aString" type="String"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="justification" type="int"/>
                </params>
                <declaration name="fontMetrics" type="FontMetrics" line="51"/>
                <declaration name="drawWidth" type="int" line="52"/>
                <scope line="53"/>
                <scope line="57"/>
                <scope line="60">
                    <scope line="62"/>
                </scope>
                <scope line="67">
                    <scope line="69"/>
                </scope>
                <scope line="74"/>
                <scope line="78"/>
            </method>
            <javadoc line="84">
                This method is not being used to paint menu item since
                  6.0 This code left for compatibility only. Do not use or
                  override it, this will not cause any visible effect.                
            </javadoc>
            <method name="paintMenuItem" type="void" line="89">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                    <param name="checkIcon" type="Icon"/>
                    <param name="arrowIcon" type="Icon"/>
                    <param name="background" type="Color"/>
                    <param name="foreground" type="Color"/>
                    <param name="defaultTextIconGap" type="int"/>
                </params>
                <declaration name="b" type="JMenuItem" line="90"/>
                <declaration name="model" type="ButtonModel" line="91"/>
                <declaration name="size" type="Dimension" line="92"/>
                <declaration name="i" type="Insets" line="93"/>
                <declaration name="viewRect" type="Rectangle" line="94"/>
                <declaration name="iconRect" type="Rectangle" line="99"/>
                <declaration name="textRect" type="Rectangle" line="100"/>
                <declaration name="acceleratorRect" type="Rectangle" line="101"/>
                <declaration name="checkRect" type="Rectangle" line="102"/>
                <declaration name="arrowRect" type="Rectangle" line="103"/>
                <declaration name="holdf" type="Font" line="104"/>
                <declaration name="f" type="Font" line="105"/>
                <declaration name="fm" type="FontMetrics" line="107"/>
                <declaration name="fmAccel" type="FontMetrics" line="108"/>
                <scope line="109">
                    <scope line="110"/>
                    <scope line="113"/>
                </scope>
                <declaration name="accelerator" type="KeyStroke" line="118"/>
                <declaration name="acceleratorText" type="String" line="119"/>
                <scope line="120">
                    <declaration name="modifiers" type="int" line="121"/>
                    <scope line="122"/>
                </scope>
                <declaration name="text" type="String" line="128"/>
                <declaration name="holdc" type="Color" line="129"/>
                <scope line="130"/>
                <scope line="135">
                    <declaration name="icon" type="Icon" line="136"/>
                    <scope line="137"/>
                    <scope line="140">
                        <scope line="142"/>
                    </scope>
                    <scope line="146"/>
                    <scope line="149"/>
                </scope>
                <scope line="153">
                    <declaration name="v" type="View" line="154"/>
                    <scope line="155"/>
                    <scope line="158">
                        <declaration name="mnemIndex" type="int" line="159"/>
                        <scope line="160"/>
                        <scope line="166">
                            <scope line="167"/>
                            <scope line="170"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="177">
                    <declaration name="accOffset" type="int" line="178"/>
                    <declaration name="parent" type="Container" line="179"/>
                    <scope line="180">
                        <declaration name="p" type="JComponent" line="181"/>
                        <declaration name="maxValueInt" type="Integer" line="182"/>
                        <declaration name="maxValue" type="int" line="183"/>
                    </scope>
                    <scope line="187"/>
                    <scope line="193">
                        <scope line="194"/>
                        <scope line="197"/>
                    </scope>
                </scope>
                <scope line="203"/>
            </method>
            <javadoc line="210">
                Compute and return the location of the icons origin, the
                  location of origin of the text baseline, and a possibly clipped
                  version of the compound labels string.  Locations are computed
                  relative to the viewR rectangle.                
            </javadoc>
            <method name="layoutMenuItem" type="String" line="216">
                <params>
                    <param name="c" type="JComponent"/>
                    <param name="fm" type="FontMetrics"/>
                    <param name="text" type="String"/>
                    <param name="fmAccel" type="FontMetrics"/>
                    <param name="acceleratorText" type="String"/>
                    <param name="icon" type="Icon"/>
                    <param name="checkIcon" type="Icon"/>
                    <param name="arrowIcon" type="Icon"/>
                    <param name="verticalAlignment" type="int"/>
                    <param name="horizontalAlignment" type="int"/>
                    <param name="verticalTextPosition" type="int"/>
                    <param name="horizontalTextPosition" type="int"/>
                    <param name="viewR" type="Rectangle"/>
                    <param name="iconR" type="Rectangle"/>
                    <param name="textR" type="Rectangle"/>
                    <param name="acceleratorR" type="Rectangle"/>
                    <param name="checkIconR" type="Rectangle"/>
                    <param name="arrowIconR" type="Rectangle"/>
                    <param name="textIconGap" type="int"/>
                    <param name="menuItemGap" type="int"/>
                </params>
                <scope line="218"/>
                <scope line="222"/>
                <scope line="226"/>
                <scope line="230"/>
                <scope line="233"/>
                <scope line="237"/>
                <declaration name="labelR" type="Rectangle" line="240"/>
                <scope line="241"/>
                <scope line="248"/>
            </method>
            <method name="drawMenuBezel" type="void" line="260">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="background" type="Color"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
            </method>
            <method name="isLeftToRight" type="boolean" line="270">
                <params>
                    <param name="c" type="Component"/>
                </params>
            </method>
        </class>
    </source>