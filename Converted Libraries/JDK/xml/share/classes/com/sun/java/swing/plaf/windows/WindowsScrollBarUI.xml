<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.swing.plaf.windows">
        <import package="java.awt"/>
        <import package="java.awt.event"/>
        <import package="java.awt.image"/>
        <import package="java.lang.ref"/>
        <import package="java.util"/>
        <import package="javax.swing.plaf.basic"/>
        <import package="javax.swing"/>
        <import package="javax.swing.plaf.ComponentUI"/>
        <import package="com.sun.java.swing.plaf.windows.TMSchema"/>
        <import package="com.sun.java.swing.plaf.windows.XPStyle.Skin"/>
        <class name="WindowsScrollBarUI" line="12">
            <extends class="BasicScrollBarUI"/>
            <javadoc line="12">
                Windows rendition of the component.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases.  The current serialization support is appropriate
                  for short term storage or RMI between applications running the same
                  version of Swing.  A future release of Swing will provide support for
                  long term persistence.                
            </javadoc>
            <declaration name="thumbGrid" type="Grid" line="23"/>
            <declaration name="highlightGrid" type="Grid" line="24"/>
            <javadoc line="25">
                Creates a UI for a JScrollBar.                
                <param>
                    c the text field                    
                </param>
                <return>
                    the UI                    
                </return>
            </javadoc>
            <method name="createUI" type="ComponentUI" line="30">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="installDefaults" type="void" line="33">
                <scope line="35"/>
            </method>
            <method name="uninstallUI" type="void" line="39">
                <params>
                    <param name="c" type="JComponent"/>
                </params>
            </method>
            <method name="configureScrollBarColors" type="void" line="43">
                <declaration name="color" type="Color" line="45"/>
                <scope line="46"/>
                <scope line="50"/>
            </method>
            <method name="createDecreaseButton" type="JButton" line="54">
                <params>
                    <param name="orientation" type="int"/>
                </params>
            </method>
            <method name="createIncreaseButton" type="JButton" line="57">
                <params>
                    <param name="orientation" type="int"/>
                </params>
            </method>
            <javadoc line="60">
                {@inheritDoc}                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="createArrowButtonListener" type="ArrowButtonListener" line="64">
                <scope line="65">
                    <anonymous_class line="66">
                        <method name="mouseEntered" type="void" line="67">
                            <params>
                                <param name="evt" type="MouseEvent"/>
                            </params>
                        </method>
                        <method name="mouseExited" type="void" line="71">
                            <params>
                                <param name="evt" type="MouseEvent"/>
                            </params>
                        </method>
                        <method name="repaint" type="void" line="75"/>
                    </anonymous_class>
                </scope>
                <scope line="81"/>
            </method>
            <method name="paintTrack" type="void" line="85">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                    <param name="trackBounds" type="Rectangle"/>
                </params>
                <declaration name="v" type="boolean" line="86"/>
                <declaration name="xp" type="XPStyle" line="87"/>
                <scope line="88">
                    <declaration name="sb" type="JScrollBar" line="89"/>
                    <declaration name="state" type="State" line="90"/>
                    <scope line="91"/>
                    <declaration name="part" type="Part" line="94"/>
                </scope>
                <scope line="97"/>
                <scope line="100">
                    <scope line="102"/>
                    <scope line="105"/>
                </scope>
            </method>
            <method name="paintThumb" type="void" line="110">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="c" type="JComponent"/>
                    <param name="thumbBounds" type="Rectangle"/>
                </params>
                <declaration name="v" type="boolean" line="111"/>
                <declaration name="xp" type="XPStyle" line="112"/>
                <scope line="113">
                    <declaration name="sb" type="JScrollBar" line="114"/>
                    <declaration name="state" type="State" line="115"/>
                    <scope line="116"/>
                    <scope line="119"/>
                    <scope line="122"/>
                    <scope line="125">
                        <scope line="126"/>
                    </scope>
                    <declaration name="thumbPart" type="Part" line="130"/>
                    <declaration name="gripperPart" type="Part" line="132"/>
                    <declaration name="skin" type="Skin" line="133"/>
                    <declaration name="gripperInsets" type="Insets" line="134"/>
                    <scope line="135"/>
                </scope>
                <scope line="139"/>
            </method>
            <method name="paintDecreaseHighlight" type="void" line="143">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <scope line="144"/>
                <scope line="147">
                    <declaration name="insets" type="Insets" line="148"/>
                    <declaration name="thumbR" type="Rectangle" line="149"/>
                    <declaration name="x" type="int" line="150"/>
                    <scope line="151"/>
                    <scope line="157"/>
                </scope>
            </method>
            <method name="paintIncreaseHighlight" type="void" line="166">
                <params>
                    <param name="g" type="Graphics"/>
                </params>
                <scope line="167"/>
                <scope line="170">
                    <declaration name="insets" type="Insets" line="171"/>
                    <declaration name="thumbR" type="Rectangle" line="172"/>
                    <declaration name="x" type="int" line="173"/>
                    <scope line="174"/>
                    <scope line="180"/>
                </scope>
            </method>
            <javadoc line="189">
                {@inheritDoc}                
                <since>
                    1.6                    
                </since>
            </javadoc>
            <method name="setThumbRollover" type="void" line="193">
                <params>
                    <param name="active" type="boolean"/>
                </params>
                <declaration name="old" type="boolean" line="194"/>
                <scope line="196"/>
            </method>
            <class name="WindowsArrowButton" line="200">
                <extends class="BasicArrowButton"/>
                <javadoc line="200">
                    WindowsArrowButton is used for the buttons to position the
                      document up/down. It differs from BasicArrowButton in that the
                      preferred size is always a square.                    
                </javadoc>
                <method name="WindowsArrowButton" type="constructor" line="206">
                    <params>
                        <param name="direction" type="int"/>
                        <param name="background" type="Color"/>
                        <param name="shadow" type="Color"/>
                        <param name="darkShadow" type="Color"/>
                        <param name="highlight" type="Color"/>
                    </params>
                </method>
                <method name="WindowsArrowButton" type="constructor" line="209">
                    <params>
                        <param name="direction" type="int"/>
                    </params>
                </method>
                <method name="paint" type="void" line="212">
                    <params>
                        <param name="g" type="Graphics"/>
                    </params>
                    <declaration name="xp" type="XPStyle" line="213"/>
                    <scope line="214">
                        <declaration name="model" type="ButtonModel" line="215"/>
                        <declaration name="skin" type="Skin" line="216"/>
                        <declaration name="state" type="State" line="217"/>
                        <declaration name="jointRollover" type="boolean" line="218"/>
                        <scope line="219"/>
                        <scope line="235"/>
                        <scope line="251"/>
                        <scope line="267"/>
                        <scope line="283"/>
                    </scope>
                    <scope line="301"/>
                </method>
                <method name="getPreferredSize" type="Dimension" line="305">
                    <declaration name="size" type="int" line="306"/>
                    <scope line="307"/>
                </method>
            </class>
            <class name="Grid" line="321">
                <javadoc line="321">
                    This should be pulled out into its own class if more classes need to
                      use it.
                      &lt;p&gt;
                      Grid is used to draw the track for windows scrollbars. Grids
                      are cached in a HashMap, with the key being the rgb components
                      of the foreground/background colors. Further the Grid is held through
                      a WeakRef so that it can be freed when no longer needed. As the
                      Grid is rather expensive to draw, it is drawn in a BufferedImage.                    
                </javadoc>
                <declaration name="BUFFER_SIZE" type="int" line="332"/>
                <declaration name="map" type="HashMap&lt;String,WeakReference&lt;Grid&gt;&gt;" line="333"/>
                <declaration name="image" type="BufferedImage" line="334"/>
                <scope line="335"/>
                <method name="getGrid" type="Grid" line="338">
                    <params>
                        <param name="fg" type="Color"/>
                        <param name="bg" type="Color"/>
                    </params>
                    <declaration name="key" type="String" line="339"/>
                    <declaration name="ref" type="WeakReference&lt;Grid&gt;" line="340"/>
                    <declaration name="grid" type="Grid" line="341"/>
                    <scope line="342"/>
                </method>
                <method name="Grid" type="constructor" line="348">
                    <params>
                        <param name="fg" type="Color"/>
                        <param name="bg" type="Color"/>
                    </params>
                    <declaration name="cmap" type="int" line="349"/>
                    <declaration name="icm" type="IndexColorModel" line="350"/>
                    <declaration name="g" type="Graphics" line="352"/>
                    <scope line="353"/>
                    <scope line="357"/>
                </method>
                <javadoc line="361">
                    Paints the grid into the specified Graphics at the specified
                      location.                    
                </javadoc>
                <method name="paint" type="void" line="365">
                    <params>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="w" type="int"/>
                        <param name="h" type="int"/>
                    </params>
                    <declaration name="clipRect" type="Rectangle" line="366"/>
                    <declaration name="minX" type="int" line="367"/>
                    <declaration name="minY" type="int" line="368"/>
                    <declaration name="maxX" type="int" line="369"/>
                    <declaration name="maxY" type="int" line="370"/>
                    <scope line="371"/>
                    <declaration name="xOffset" type="int" line="374"/>
                    <scope line="375">
                        <declaration name="yOffset" type="int" line="376"/>
                        <declaration name="width" type="int" line="377"/>
                        <scope line="378">
                            <declaration name="height" type="int" line="379"/>
                            <scope line="381"/>
                        </scope>
                        <scope line="386"/>
                    </scope>
                </method>
                <javadoc line="392">
                    Actually renders the grid into the Graphics &lt;code&gt;g&lt;/code&gt;.                    
                </javadoc>
                <method name="paintGrid" type="void" line="395">
                    <params>
                        <param name="g" type="Graphics"/>
                        <param name="fg" type="Color"/>
                        <param name="bg" type="Color"/>
                    </params>
                    <declaration name="clipRect" type="Rectangle" line="396"/>
                    <declaration name="width" type="int" line="401"/>
                    <declaration name="height" type="int" line="402"/>
                    <declaration name="xCounter" type="int" line="403"/>
                    <scope line="404"/>
                    <scope line="407"/>
                    <declaration name="yCounter" type="int" line="410"/>
                    <scope line="411"/>
                    <scope line="414"/>
                </method>
            </class>
        </class>
    </source>