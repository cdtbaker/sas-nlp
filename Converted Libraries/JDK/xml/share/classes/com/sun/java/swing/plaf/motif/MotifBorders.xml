<?xml version="1.0" encoding="UTF-8"?>
    <source package="com.sun.java.swing.plaf.motif">
        <import package="sun.swing.SwingUtilities2"/>
        <import package="javax.swing"/>
        <import package="javax.swing.border"/>
        <import package="javax.swing.plaf"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Font"/>
        <import package="java.awt.FontMetrics"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Insets"/>
        <import package="java.awt.Point"/>
        <import package="java.awt.Rectangle"/>
        <class name="MotifBorders" line="15">
            <javadoc line="15">
                Factory object that can vend Icons appropriate for the basic L &amp; F.
                  &lt;p&gt;
                  &lt;strong&gt;Warning:&lt;/strong&gt;
                  Serialized objects of this class will not be compatible with
                  future Swing releases.  The current serialization support is appropriate
                  for short term storage or RMI between applications running the same
                  version of Swing.  A future release of Swing will provide support for
                  long term persistence.                
                <author>
                    Amy Fowler                    
                </author>
            </javadoc>
            <class name="BevelBorder" line="27">
                <extends class="AbstractBorder"/>
                <implements interface="UIResource"/>
                <declaration name="darkShadow" type="Color" line="28"/>
                <declaration name="lightShadow" type="Color" line="29"/>
                <declaration name="isRaised" type="boolean" line="30"/>
                <method name="BevelBorder" type="constructor" line="31">
                    <params>
                        <param name="isRaised" type="boolean"/>
                        <param name="darkShadow" type="Color"/>
                        <param name="lightShadow" type="Color"/>
                    </params>
                </method>
                <method name="paintBorder" type="void" line="36">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="w" type="int"/>
                        <param name="h" type="int"/>
                    </params>
                </method>
                <method name="getBorderInsets" type="Insets" line="44">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="insets" type="Insets"/>
                    </params>
                </method>
                <method name="isOpaque" type="boolean" line="48">
                    <params>
                        <param name="c" type="Component"/>
                    </params>
                </method>
            </class>
            <class name="FocusBorder" line="52">
                <extends class="AbstractBorder"/>
                <implements interface="UIResource"/>
                <declaration name="focus" type="Color" line="53"/>
                <declaration name="control" type="Color" line="54"/>
                <method name="FocusBorder" type="constructor" line="55">
                    <params>
                        <param name="control" type="Color"/>
                        <param name="focus" type="Color"/>
                    </params>
                </method>
                <method name="paintBorder" type="void" line="59">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="w" type="int"/>
                        <param name="h" type="int"/>
                    </params>
                    <scope line="60"/>
                    <scope line="64"/>
                </method>
                <method name="getBorderInsets" type="Insets" line="69">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="insets" type="Insets"/>
                    </params>
                </method>
            </class>
            <class name="ButtonBorder" line="74">
                <extends class="AbstractBorder"/>
                <implements interface="UIResource"/>
                <declaration name="focus" type="Color" line="75"/>
                <declaration name="shadow" type="Color" line="76"/>
                <declaration name="highlight" type="Color" line="77"/>
                <declaration name="darkShadow" type="Color" line="78"/>
                <method name="ButtonBorder" type="constructor" line="79">
                    <params>
                        <param name="shadow" type="Color"/>
                        <param name="highlight" type="Color"/>
                        <param name="darkShadow" type="Color"/>
                        <param name="focus" type="Color"/>
                    </params>
                </method>
                <method name="paintBorder" type="void" line="85">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="w" type="int"/>
                        <param name="h" type="int"/>
                    </params>
                    <declaration name="isPressed" type="boolean" line="86"/>
                    <declaration name="hasFocus" type="boolean" line="87"/>
                    <declaration name="canBeDefault" type="boolean" line="88"/>
                    <declaration name="isDefault" type="boolean" line="89"/>
                    <scope line="90">
                        <declaration name="b" type="AbstractButton" line="91"/>
                        <declaration name="model" type="ButtonModel" line="92"/>
                        <scope line="95"/>
                    </scope>
                    <declaration name="bx1" type="int" line="100"/>
                    <declaration name="by1" type="int" line="101"/>
                    <declaration name="bx2" type="int" line="102"/>
                    <declaration name="by2" type="int" line="103"/>
                    <scope line="104">
                        <scope line="105"/>
                    </scope>
                    <scope line="118">
                        <scope line="120"/>
                        <scope line="123"/>
                    </scope>
                </method>
                <method name="getBorderInsets" type="Insets" line="134">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="insets" type="Insets"/>
                    </params>
                    <declaration name="thickness" type="int" line="135"/>
                </method>
            </class>
            <class name="ToggleButtonBorder" line="140">
                <extends class="ButtonBorder"/>
                <method name="ToggleButtonBorder" type="constructor" line="141">
                    <params>
                        <param name="shadow" type="Color"/>
                        <param name="highlight" type="Color"/>
                        <param name="darkShadow" type="Color"/>
                        <param name="focus" type="Color"/>
                    </params>
                </method>
                <method name="paintBorder" type="void" line="144">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <scope line="145">
                        <declaration name="b" type="AbstractButton" line="146"/>
                        <declaration name="model" type="ButtonModel" line="147"/>
                        <scope line="148"/>
                        <scope line="151"/>
                    </scope>
                    <scope line="155"/>
                </method>
                <method name="getBorderInsets" type="Insets" line="159">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="insets" type="Insets"/>
                    </params>
                </method>
            </class>
            <class name="MenuBarBorder" line="164">
                <extends class="ButtonBorder"/>
                <method name="MenuBarBorder" type="constructor" line="165">
                    <params>
                        <param name="shadow" type="Color"/>
                        <param name="highlight" type="Color"/>
                        <param name="darkShadow" type="Color"/>
                        <param name="focus" type="Color"/>
                    </params>
                </method>
                <method name="paintBorder" type="void" line="168">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <scope line="169"/>
                    <declaration name="menuBar" type="JMenuBar" line="172"/>
                    <scope line="173">
                        <declaration name="size" type="Dimension" line="174"/>
                    </scope>
                </method>
                <method name="getBorderInsets" type="Insets" line="178">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="insets" type="Insets"/>
                    </params>
                </method>
            </class>
            <class name="FrameBorder" line="183">
                <extends class="AbstractBorder"/>
                <implements interface="UIResource"/>
                <declaration name="jcomp" type="JComponent" line="184"/>
                <declaration name="frameHighlight" type="Color" line="185"/>
                <declaration name="frameColor" type="Color" line="186"/>
                <declaration name="frameShadow" type="Color" line="187"/>
                <declaration name="BORDER_SIZE" type="int" line="188"/>
                <javadoc line="189">
                    Constructs an FrameBorder for the JComponent &lt;b&gt;comp&lt;/b&gt;.                    
                </javadoc>
                <method name="FrameBorder" type="constructor" line="192">
                    <params>
                        <param name="comp" type="JComponent"/>
                    </params>
                </method>
                <javadoc line="195">
                    Sets the FrameBorder&apos;s JComponent.                    
                </javadoc>
                <method name="setComponent" type="void" line="198">
                    <params>
                        <param name="comp" type="JComponent"/>
                    </params>
                </method>
                <javadoc line="201">
                    Returns the FrameBorder&apos;s JComponent.                    
                    <see>
                        #setComponent                        
                    </see>
                </javadoc>
                <method name="component" type="JComponent" line="205"/>
                <method name="getFrameHighlight" type="Color" line="208"/>
                <method name="getFrameColor" type="Color" line="211"/>
                <method name="getFrameShadow" type="Color" line="214"/>
                <method name="getBorderInsets" type="Insets" line="217">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="newInsets" type="Insets"/>
                    </params>
                </method>
                <javadoc line="221">
                    Draws the FrameBorder&apos;s top border.                    
                </javadoc>
                <method name="drawTopBorder" type="boolean" line="224">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <declaration name="titleBarRect" type="Rectangle" line="225"/>
                    <scope line="226"/>
                    <declaration name="maxX" type="int" line="229"/>
                    <declaration name="maxY" type="int" line="230"/>
                </method>
                <javadoc line="246">
                    Draws the FrameBorder&apos;s left border.                    
                </javadoc>
                <method name="drawLeftBorder" type="boolean" line="249">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <declaration name="borderRect" type="Rectangle" line="250"/>
                    <scope line="251"/>
                    <declaration name="startY" type="int" line="254"/>
                </method>
                <javadoc line="264">
                    Draws the FrameBorder&apos;s right border.                    
                </javadoc>
                <method name="drawRightBorder" type="boolean" line="267">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <declaration name="borderRect" type="Rectangle" line="268"/>
                    <scope line="269"/>
                    <declaration name="startX" type="int" line="272"/>
                    <declaration name="startY" type="int" line="273"/>
                </method>
                <javadoc line="282">
                    Draws the FrameBorder&apos;s bottom border.                    
                </javadoc>
                <method name="drawBottomBorder" type="boolean" line="285">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <declaration name="borderRect" type="Rectangle" line="286"/>
                    <declaration name="marginHeight" type="int" line="287"/>
                    <scope line="289"/>
                </method>
                <method name="isActiveFrame" type="boolean" line="302"/>
                <javadoc line="305">
                    Draws the FrameBorder in the given Rect.  Calls
                      &lt;b&gt;drawTitleBar&lt;/b&gt;, &lt;b&gt;drawLeftBorder&lt;/b&gt;, &lt;b&gt;drawRightBorder&lt;/b&gt; and
                      &lt;b&gt;drawBottomBorder&lt;/b&gt;.                    
                </javadoc>
                <method name="paintBorder" type="void" line="310">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <scope line="311"/>
                    <scope line="314"/>
                </method>
            </class>
            <class name="InternalFrameBorder" line="325">
                <extends class="FrameBorder"/>
                <declaration name="frame" type="JInternalFrame" line="326"/>
                <declaration name="CORNER_SIZE" type="int" line="327"/>
                <javadoc line="328">
                    Constructs an InternalFrameBorder for the InternalFrame
                      &lt;b&gt;aFrame&lt;/b&gt;.                    
                </javadoc>
                <method name="InternalFrameBorder" type="constructor" line="332">
                    <params>
                        <param name="aFrame" type="JInternalFrame"/>
                    </params>
                </method>
                <javadoc line="336">
                    Sets the InternalFrameBorder&apos;s InternalFrame.                    
                </javadoc>
                <method name="setFrame" type="void" line="339">
                    <params>
                        <param name="aFrame" type="JInternalFrame"/>
                    </params>
                </method>
                <javadoc line="342">
                    Returns the InternalFrameBorder&apos;s InternalFrame.                    
                    <see>
                        #setFrame                        
                    </see>
                </javadoc>
                <method name="frame" type="JInternalFrame" line="346"/>
                <javadoc line="349">
                    Returns the width of the InternalFrameBorder&apos;s resize controls,
                      appearing along the InternalFrameBorder&apos;s bottom border.  Clicking
                      and dragging within these controls lets the user change both the
                      InternalFrame&apos;s width and height, while dragging between the controls
                      constrains resizing to just the vertical dimension.  Override this
                      method if you implement your own bottom border painting and use a
                      resize control with a different size.                    
                </javadoc>
                <method name="resizePartWidth" type="int" line="358">
                    <scope line="359"/>
                </method>
                <javadoc line="364">
                    Draws the InternalFrameBorder&apos;s top border.                    
                </javadoc>
                <method name="drawTopBorder" type="boolean" line="367">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <scope line="368"/>
                </method>
                <javadoc line="379">
                    Draws the InternalFrameBorder&apos;s left border.                    
                </javadoc>
                <method name="drawLeftBorder" type="boolean" line="382">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <scope line="383">
                        <declaration name="topY" type="int" line="385"/>
                        <declaration name="bottomY" type="int" line="387"/>
                    </scope>
                </method>
                <javadoc line="396">
                    Draws the InternalFrameBorder&apos;s right border.                    
                </javadoc>
                <method name="drawRightBorder" type="boolean" line="399">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <scope line="400">
                        <declaration name="startX" type="int" line="401"/>
                        <declaration name="topY" type="int" line="403"/>
                        <declaration name="bottomY" type="int" line="405"/>
                    </scope>
                </method>
                <javadoc line="414">
                    Draws the InternalFrameBorder&apos;s bottom border.                    
                </javadoc>
                <method name="drawBottomBorder" type="boolean" line="417">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <scope line="418">
                        <declaration name="startY" type="int" line="419"/>
                    </scope>
                </method>
                <method name="isActiveFrame" type="boolean" line="430"/>
            </class>
            <method name="drawBezel" type="void" line="434">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="isPressed" type="boolean"/>
                    <param name="hasFocus" type="boolean"/>
                    <param name="shadow" type="Color"/>
                    <param name="highlight" type="Color"/>
                    <param name="darkShadow" type="Color"/>
                    <param name="focus" type="Color"/>
                </params>
                <declaration name="oldColor" type="Color" line="435"/>
                <scope line="437">
                    <scope line="438"/>
                </scope>
                <scope line="448">
                    <scope line="449"/>
                    <scope line="462"/>
                </scope>
            </method>
            <class name="MotifPopupMenuBorder" line="477">
                <extends class="AbstractBorder"/>
                <implements interface="UIResource"/>
                <declaration name="font" type="Font" line="478"/>
                <declaration name="background" type="Color" line="479"/>
                <declaration name="foreground" type="Color" line="480"/>
                <declaration name="shadowColor" type="Color" line="481"/>
                <declaration name="highlightColor" type="Color" line="482"/>
                <declaration name="TEXT_SPACING" type="int" line="483"/>
                <declaration name="GROOVE_HEIGHT" type="int" line="484"/>
                <javadoc line="485">
                    Creates a MotifPopupMenuBorder instance                    
                </javadoc>
                <method name="MotifPopupMenuBorder" type="constructor" line="488">
                    <params>
                        <param name="titleFont" type="Font"/>
                        <param name="bgColor" type="Color"/>
                        <param name="fgColor" type="Color"/>
                        <param name="shadow" type="Color"/>
                        <param name="highlight" type="Color"/>
                    </params>
                </method>
                <javadoc line="495">
                    Paints the border for the specified component with the
                      specified position and size.                    
                    <param>
                        c the component for which this border is being painted                        
                    </param>
                    <param>
                        g the paint graphics                        
                    </param>
                    <param>
                        x the x position of the painted border                        
                    </param>
                    <param>
                        y the y position of the painted border                        
                    </param>
                    <param>
                        width the width of the painted border                        
                    </param>
                    <param>
                        height the height of the painted border                        
                    </param>
                </javadoc>
                <method name="paintBorder" type="void" line="505">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="g" type="Graphics"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                    </params>
                    <scope line="506"/>
                    <declaration name="origFont" type="Font" line="509"/>
                    <declaration name="origColor" type="Color" line="510"/>
                    <declaration name="popup" type="JPopupMenu" line="511"/>
                    <declaration name="title" type="String" line="512"/>
                    <scope line="513"/>
                    <declaration name="fm" type="FontMetrics" line="517"/>
                    <declaration name="fontHeight" type="int" line="518"/>
                    <declaration name="descent" type="int" line="519"/>
                    <declaration name="ascent" type="int" line="520"/>
                    <declaration name="textLoc" type="Point" line="521"/>
                    <declaration name="stringWidth" type="int" line="522"/>
                </method>
                <javadoc line="533">
                    Reinitialize the insets parameter with this Border&apos;s current Insets.                    
                    <param>
                        c the component for which this border insets value applies                        
                    </param>
                    <param>
                        insets the object to be reinitialized                        
                    </param>
                </javadoc>
                <method name="getBorderInsets" type="Insets" line="538">
                    <params>
                        <param name="c" type="Component"/>
                        <param name="insets" type="Insets"/>
                    </params>
                    <scope line="539"/>
                    <declaration name="fm" type="FontMetrics" line="542"/>
                    <declaration name="descent" type="int" line="543"/>
                    <declaration name="ascent" type="int" line="544"/>
                    <declaration name="title" type="String" line="545"/>
                    <scope line="546"/>
                    <scope line="551"/>
                </method>
            </class>
        </class>
    </source>