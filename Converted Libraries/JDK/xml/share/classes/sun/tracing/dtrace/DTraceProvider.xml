<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.tracing.dtrace">
        <import package="java.lang.reflect.Method"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.lang.reflect.Modifier"/>
        <import package="java.lang.reflect.Constructor"/>
        <import package="java.lang.reflect.InvocationHandler"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.lang.annotation.Annotation"/>
        <import package="java.util.HashMap"/>
        <import package="sun.tracing.ProviderSkeleton"/>
        <import package="sun.tracing.ProbeSkeleton"/>
        <import package="com.sun.tracing.Provider"/>
        <import package="com.sun.tracing.ProviderName"/>
        <import package="com.sun.tracing.ProbeName"/>
        <import package="com.sun.tracing.dtrace.Attributes"/>
        <import package="com.sun.tracing.dtrace.ModuleName"/>
        <import package="com.sun.tracing.dtrace.FunctionName"/>
        <import package="com.sun.tracing.dtrace.StabilityLevel"/>
        <import package="com.sun.tracing.dtrace.DependencyClass"/>
        <import package="sun.misc.ProxyGenerator"/>
        <class name="DTraceProvider" line="21">
            <extends class="ProviderSkeleton"/>
            <declaration name="activation" type="Activation" line="22"/>
            <declaration name="proxy" type="Object" line="23"/>
            <declaration name="constructorParams" type="Class[]" line="24"/>
            <declaration name="proxyClassNamePrefix" type="String" line="25"/>
            <declaration name="DEFAULT_MODULE" type="String" line="26"/>
            <declaration name="DEFAULT_FUNCTION" type="String" line="27"/>
            <declaration name="nextUniqueNumber" type="long" line="28"/>
            <method name="getUniqueNumber" type="long" line="29"/>
            <method name="createProbe" type="ProbeSkeleton" line="32">
                <params>
                    <param name="m" type="Method"/>
                </params>
            </method>
            <method name="DTraceProvider" type="constructor" line="35">
                <params>
                    <param name="type" type="Class<? extends Provider>"/>
                </params>
            </method>
            <method name="setProxy" type="void" line="38">
                <params>
                    <param name="p" type="Object"/>
                </params>
            </method>
            <method name="setActivation" type="void" line="41">
                <params>
                    <param name="a" type="Activation"/>
                </params>
            </method>
            <method name="dispose" type="void" line="44">
                <scope line="45"/>
            </method>
            <javadoc line="51">
                Magic routine which creates an implementation of the user&apos;s interface.
                  This method uses the ProxyGenerator directly to bypass the
                  java.lang.reflect.proxy cache so that we get a unique class each
                  time it&apos;s called and can&apos;t accidently reuse a $Proxy class.                
                <return>
                    an implementation of the user's interface                    
                </return>
            </javadoc>
            <method name="newProxyInstance" type="T" line="58">
                <declaration name="num" type="long" line="59"/>
                <declaration name="proxyPkg" type="String" line="60"/>
                <scope line="61">
                    <declaration name="name" type="String" line="62"/>
                    <declaration name="n" type="int" line="63"/>
                </scope>
                <declaration name="proxyName" type="String" line="66"/>
                <declaration name="proxyClass" type="Class&lt;?&gt;" line="67"/>
                <declaration name="proxyClassFile" type="byte[]" line="68"/>
                <scope line="69"/>
                <scope line="72"/>
                <scope line="75">
                    <declaration name="cons" type="Constructor" line="76"/>
                </scope>
                <scope line="79"/>
                <scope line="82"/>
                <scope line="85"/>
                <scope line="88"/>
            </method>
            <method name="invoke" type="Object" line="92">
                <params>
                    <param name="proxy" type="Object"/>
                    <param name="method" type="Method"/>
                    <param name="args" type="Object[]"/>
                </params>
            </method>
            <method name="getProviderName" type="String" line="109"/>
            <method name="getModuleName" type="String" line="112"/>
            <method name="getProbeName" type="String" line="115">
                <params>
                    <param name="method" type="Method"/>
                </params>
            </method>
            <method name="getFunctionName" type="String" line="118">
                <params>
                    <param name="method" type="Method"/>
                </params>
            </method>
            <method name="getProbes" type="DTraceProbe[]" line="121"/>
            <method name="getNameStabilityFor" type="StabilityLevel" line="124">
                <params>
                    <param name="type" type="Class<? extends Annotation>"/>
                </params>
                <declaration name="attrs" type="Attributes" line="125"/>
                <scope line="126"/>
                <scope line="129"/>
            </method>
            <method name="getDataStabilityFor" type="StabilityLevel" line="133">
                <params>
                    <param name="type" type="Class<? extends Annotation>"/>
                </params>
                <declaration name="attrs" type="Attributes" line="134"/>
                <scope line="135"/>
                <scope line="138"/>
            </method>
            <method name="getDependencyClassFor" type="DependencyClass" line="142">
                <params>
                    <param name="type" type="Class<? extends Annotation>"/>
                </params>
                <declaration name="attrs" type="Attributes" line="143"/>
                <scope line="144"/>
                <scope line="147"/>
            </method>
        </class>
    </source>