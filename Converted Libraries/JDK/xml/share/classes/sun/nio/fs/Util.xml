<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.fs">
        <import package="java.util"/>
        <import package="java.nio.file"/>
        <class name="Util" line="31">
            <javadoc line="31">
                Utility methods                
            </javadoc>
            <method name="Util" type="constructor" line="36"/>
            <javadoc line="38">
                Splits a string around the given character. The array returned by this
                  method contains each substring that is terminated by the character. Use
                  for simple string spilting cases when needing to avoid loading regex.                
            </javadoc>
            <method name="split" type="String[]" line="43">
                <params>
                    <param name="s" type="String"/>
                    <param name="c" type="char"/>
                </params>
                <declaration name="count" type="int" line="44"/>
                <scope line="45"/>
                <declaration name="result" type="String[]" line="49"/>
                <declaration name="n" type="int" line="50"/>
                <declaration name="last" type="int" line="51"/>
                <scope line="52">
                    <scope line="53"/>
                </scope>
            </method>
            <javadoc line="62">
                Returns a Set containing the given elements.                
            </javadoc>
            <method name="newSet" type="Set<E>" line="65">
                <params>
                    <param name="elements" type="E"/>
                </params>
                <declaration name="set" type="HashSet&lt;E&gt;" line="66"/>
                <scope line="67"/>
            </method>
            <javadoc line="73">
                Returns a Set containing all the elements of the given Set plus
                  the given elements.                
            </javadoc>
            <method name="newSet" type="Set<E>" line="77">
                <params>
                    <param name="other" type="Set<E>"/>
                    <param name="elements" type="E"/>
                </params>
                <declaration name="set" type="HashSet&lt;E&gt;" line="78"/>
                <scope line="79"/>
            </method>
            <javadoc line="85">
                Returns {@code true} if symbolic links should be followed                
            </javadoc>
            <method name="followLinks" type="boolean" line="88">
                <params>
                    <param name="options" type="LinkOption"/>
                </params>
                <declaration name="followLinks" type="boolean" line="89"/>
                <scope line="90">
                    <scope line="91"/>
                    <scope line="93"/>
                    <scope line="95"/>
                </scope>
            </method>
        </class>
    </source>