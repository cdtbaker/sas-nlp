<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.fs">
        <import package="java.nio.file"/>
        <import package="java.util"/>
        <class name="AbstractWatchKey" line="4">
            <implements interface="WatchKey"/>
            <javadoc line="4">
                Base implementation class for watch keys.                
            </javadoc>
            <declaration name="MAX_EVENT_LIST_SIZE" type="int" line="8"/>
            <javadoc line="8">
                Maximum size of event list (in the future this may be tunable)                
            </javadoc>
            <declaration name="OVERFLOW_EVENT" type="Event&lt;Object&gt;" line="12"/>
            <javadoc line="12">
                Special event to signal overflow                
            </javadoc>
            <declaration name="State" type="enum" line="16"/>
            <javadoc line="16">
                Possible key states                
            </javadoc>
            <scope line="19"/>
            <declaration name="watcher" type="AbstractWatchService" line="20"/>
            <declaration name="dir" type="Path" line="21"/>
            <declaration name="state" type="State" line="22"/>
            <declaration name="events" type="List&lt;WatchEvent&lt;?&gt;&gt;" line="23"/>
            <declaration name="lastModifyEvents" type="Map&lt;Object,WatchEvent&lt;?&gt;&gt;" line="24"/>
            <method name="AbstractWatchKey" type="constructor" line="25">
                <params>
                    <param name="dir" type="Path"/>
                    <param name="watcher" type="AbstractWatchService"/>
                </params>
            </method>
            <method name="watcher" type="AbstractWatchService" line="32"/>
            <javadoc line="35">
                Return the original watchable (Path)                
            </javadoc>
            <method name="watchable" type="Path" line="38"/>
            <javadoc line="41">
                Enqueues this key to the watch service                
            </javadoc>
            <method name="signal" type="void" line="44">
                <scope line="45">
                    <scope line="46"/>
                </scope>
            </method>
            <javadoc line="52">
                Adds the event to this key and signals it.                
            </javadoc>
            <method name="signalEvent" type="void" line="55">
                <params>
                    <param name="kind" type="WatchEvent.Kind<?>"/>
                    <param name="context" type="Object"/>
                </params>
            </method>
            <method name="pollEvents" type="List<WatchEvent<?>>" line="96">
                <scope line="97">
                    <declaration name="result" type="List&lt;WatchEvent&lt;?&gt;&gt;" line="98"/>
                </scope>
            </method>
            <method name="reset" type="boolean" line="104">
                <scope line="105">
                    <scope line="106">
                        <scope line="107"/>
                        <scope line="110"/>
                    </scope>
                </scope>
            </method>
            <class name="Event" line="117">
                <type_params>
                    <type_param name="T"/>
                </type_params>
                <implements interface="WatchEvent">
                    <type_params>
                        <type_param name="T"/>
                    </type_params>
                </implements>
                <javadoc line="117">
                    WatchEvent implementation                    
                </javadoc>
                <declaration name="kind" type="WatchEvent.Kind&lt;T&gt;" line="121"/>
                <declaration name="context" type="T" line="122"/>
                <declaration name="count" type="int" line="123"/>
                <method name="Event" type="constructor" line="124">
                    <params>
                        <param name="type" type="WatchEvent.Kind<T>"/>
                        <param name="context" type="T"/>
                    </params>
                </method>
                <method name="kind" type="WatchEvent.Kind<T>" line="129"/>
                <method name="context" type="T" line="132"/>
                <method name="count" type="int" line="135"/>
                <method name="increment" type="void" line="138"/>
            </class>
        </class>
    </source>