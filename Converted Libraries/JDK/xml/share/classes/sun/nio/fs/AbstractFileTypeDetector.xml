<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.fs">
        <import package="java.nio.file.Path"/>
        <import package="java.nio.file.spi.FileTypeDetector"/>
        <import package="java.util.Locale"/>
        <import package="java.io.IOException"/>
        <class name="AbstractFileTypeDetector" line="33">
            <extends class="FileTypeDetector"/>
            <javadoc line="33">
                Base implementation of FileTypeDetector                
            </javadoc>
            <method name="AbstractFileTypeDetector" type="constructor" line="40"/>
            <javadoc line="44">
                Invokes the appropriate probe method to guess a file&apos;s content type,
                  and checks that the content type&apos;s syntax is valid.                
            </javadoc>
            <method name="probeContentType" type="String" line="49">
                <params>
                    <param name="file" type="Path"/>
                </params>
                <declaration name="result" type="String" line="52"/>
            </method>
            <method name="implProbeContentType" type="String" line="56"/>
            <javadoc line="56">
                Probes the given file to guess its content type.                
            </javadoc>
            <javadoc line="62">
                Parses a candidate content type into its type and subtype, returning
                  null if either token is invalid.                
            </javadoc>
            <method name="parse" type="String" line="66">
                <params>
                    <param name="s" type="String"/>
                </params>
                <comment line="71">
                    no subtype                    
                </comment>
                <comment line="74">
                    invalid type                    
                </comment>
                <comment line="79">
                    invalid subtype                    
                </comment>
                <declaration name="slash" type="int" line="67"/>
                <declaration name="semicolon" type="int" line="68"/>
                <declaration name="type" type="String" line="71"/>
                <declaration name="subtype" type="String" line="74"/>
                <declaration name="sb" type="StringBuilder" line="79"/>
            </method>
            <declaration name="TSPECIALS" type="String" line="86"/>
            <javadoc line="86">
                Special characters                
            </javadoc>
            <javadoc line="91">
                Returns true if the character is a valid token character.                
            </javadoc>
            <method name="isTokenChar" type="boolean" line="94">
                <params>
                    <param name="c" type="char"/>
                </params>
            </method>
            <javadoc line="98">
                Returns true if the given string is a legal type or subtype.                
            </javadoc>
            <method name="isValidToken" type="boolean" line="101">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="len" type="int" line="102"/>
                <scope line="105"/>
            </method>
        </class>
    </source>