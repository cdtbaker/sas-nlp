<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.fs">
        <import package="java.nio.file.Path"/>
        <import package="java.nio.file.spi.FileTypeDetector"/>
        <import package="java.util.Locale"/>
        <import package="java.io.IOException"/>
        <class name="AbstractFileTypeDetector" line="6">
            <extends class="FileTypeDetector"/>
            <javadoc line="6">
                Base implementation of FileTypeDetector                
            </javadoc>
            <method name="AbstractFileTypeDetector" type="constructor" line="10"/>
            <javadoc line="13">
                Invokes the appropriate probe method to guess a file&apos;s content type,
                  and checks that the content type&apos;s syntax is valid.                
            </javadoc>
            <method name="probeContentType" type="String" line="17">
                <params>
                    <param name="file" type="Path"/>
                </params>
                <declaration name="result" type="String" line="19"/>
            </method>
            <method name="implProbeContentType" type="String" line="22"/>
            <javadoc line="22">
                Probes the given file to guess its content type.                
            </javadoc>
            <javadoc line="26">
                Parses a candidate content type into its type and subtype, returning
                  null if either token is invalid.                
            </javadoc>
            <method name="parse" type="String" line="30">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="slash" type="int" line="31"/>
                <declaration name="semicolon" type="int" line="32"/>
                <declaration name="type" type="String" line="34"/>
                <declaration name="subtype" type="String" line="36"/>
                <declaration name="sb" type="StringBuilder" line="39"/>
            </method>
            <declaration name="TSPECIALS" type="String" line="45"/>
            <javadoc line="45">
                Special characters                
            </javadoc>
            <javadoc line="49">
                Returns true if the character is a valid token character.                
            </javadoc>
            <method name="isTokenChar" type="boolean" line="52">
                <params>
                    <param name="c" type="char"/>
                </params>
            </method>
            <javadoc line="55">
                Returns true if the given string is a legal type or subtype.                
            </javadoc>
            <method name="isValidToken" type="boolean" line="58">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="len" type="int" line="59"/>
                <scope line="61"/>
            </method>
        </class>
    </source>