<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.fs">
        <import package="java.nio.file"/>
        <import package="java.util.concurrent"/>
        <import package="java.io.IOException"/>
        <class name="AbstractWatchService" line="32">
            <comment line="39">
                signaled keys waiting to be dequeued                
            </comment>
            <comment line="43">
                special key to indicate that watch service is closed                
            </comment>
            <comment line="56">
                used when closing watch service                
            </comment>
            <comment line="71">
                used by AbstractWatchKey to enqueue key                
            </comment>
            <implements interface="WatchService"/>
            <javadoc line="32">
                Base implementation class for watch services.                
            </javadoc>
            <declaration name="pendingKeys" type="LinkedBlockingDeque&lt;WatchKey&gt;" line="39"/>
            <declaration name="CLOSE_KEY" type="WatchKey" line="43"/>
            <anonymous_class line="44">
                <method name="isValid" type="boolean" line="46"/>
                <method name="cancel" type="void" line="51"/>
            </anonymous_class>
            <declaration name="closed" type="boolean" line="56"/>
            <declaration name="closeLock" type="Object" line="57"/>
            <method name="AbstractWatchService" type="constructor" line="59"/>
            <method name="register" type="WatchKey" line="62"/>
            <javadoc line="62">
                Register the given object with this watch service                
            </javadoc>
            <method name="enqueueKey" type="void" line="71">
                <params>
                    <param name="key" type="WatchKey"/>
                </params>
            </method>
            <javadoc line="75">
                Throws ClosedWatchServiceException if watch service is closed                
            </javadoc>
            <method name="checkOpen" type="void" line="78"/>
            <javadoc line="83">
                Checks the key isn&apos;t the special CLOSE_KEY used to unblock threads when
                  the watch service is closed.                
            </javadoc>
            <method name="checkKey" type="void" line="87">
                <params>
                    <param name="key" type="WatchKey"/>
                </params>
                <comment line="89">
                    re-queue in case there are other threads blocked in take/poll                    
                </comment>
                <scope line="88"/>
            </method>
            <method name="poll" type="WatchKey" line="96">
                <declaration name="key" type="WatchKey" line="98"/>
            </method>
            <method name="poll" type="WatchKey" line="106">
                <params>
                    <param name="timeout" type="long"/>
                    <param name="unit" type="TimeUnit"/>
                </params>
                <declaration name="key" type="WatchKey" line="108"/>
            </method>
            <method name="take" type="WatchKey" line="116">
                <declaration name="key" type="WatchKey" line="118"/>
            </method>
            <javadoc line="123">
                Tells whether or not this watch service is open.                
            </javadoc>
            <method name="isOpen" type="boolean" line="126"/>
            <javadoc line="130">
                Retrieves the object upon which the close method synchronizes.                
            </javadoc>
            <method name="closeLock" type="Object" line="133"/>
            <method name="implClose" type="void" line="137"/>
            <javadoc line="137">
                Closes this watch service. This method is invoked by the close
                  method to perform the actual work of closing the watch service.                
            </javadoc>
            <method name="close" type="void" line="146">
                <comment line="148">
                    nothing to do if already closed                    
                </comment>
                <comment line="155">
                    clear pending keys and queue special key to ensure that any                    
                </comment>
                <comment line="156">
                    threads blocked in take/poll wakeup                    
                </comment>
                <scope line="147"/>
            </method>
        </class>
    </source>