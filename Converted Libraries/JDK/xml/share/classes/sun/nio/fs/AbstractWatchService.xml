<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.fs">
        <import package="java.nio.file"/>
        <import package="java.util.concurrent"/>
        <import package="java.io.IOException"/>
        <class name="AbstractWatchService" line="5">
            <implements interface="WatchService"/>
            <javadoc line="5">
                Base implementation class for watch services.                
            </javadoc>
            <declaration name="pendingKeys" type="LinkedBlockingDeque&lt;WatchKey&gt;" line="9"/>
            <declaration name="CLOSE_KEY" type="WatchKey" line="10"/>
            <anonymous_class line="10">
                <method name="isValid" type="boolean" line="11"/>
                <method name="cancel" type="void" line="14"/>
            </anonymous_class>
            <declaration name="closed" type="boolean" line="18"/>
            <declaration name="closeLock" type="Object" line="19"/>
            <method name="AbstractWatchService" type="constructor" line="20"/>
            <method name="register" type="WatchKey" line="22"/>
            <javadoc line="22">
                Register the given object with this watch service                
            </javadoc>
            <method name="enqueueKey" type="void" line="26">
                <params>
                    <param name="key" type="WatchKey"/>
                </params>
            </method>
            <javadoc line="29">
                Throws ClosedWatchServiceException if watch service is closed                
            </javadoc>
            <method name="checkOpen" type="void" line="32"/>
            <javadoc line="35">
                Checks the key isn&apos;t the special CLOSE_KEY used to unblock threads when
                  the watch service is closed.                
            </javadoc>
            <method name="checkKey" type="void" line="39">
                <params>
                    <param name="key" type="WatchKey"/>
                </params>
                <scope line="40"/>
            </method>
            <method name="poll" type="WatchKey" line="45">
                <declaration name="key" type="WatchKey" line="47"/>
            </method>
            <method name="poll" type="WatchKey" line="51">
                <params>
                    <param name="timeout" type="long"/>
                    <param name="unit" type="TimeUnit"/>
                </params>
                <declaration name="key" type="WatchKey" line="53"/>
            </method>
            <method name="take" type="WatchKey" line="57">
                <declaration name="key" type="WatchKey" line="59"/>
            </method>
            <javadoc line="63">
                Tells whether or not this watch service is open.                
            </javadoc>
            <method name="isOpen" type="boolean" line="66"/>
            <javadoc line="69">
                Retrieves the object upon which the close method synchronizes.                
            </javadoc>
            <method name="closeLock" type="Object" line="72"/>
            <method name="implClose" type="void" line="75"/>
            <javadoc line="75">
                Closes this watch service. This method is invoked by the close
                  method to perform the actual work of closing the watch service.                
            </javadoc>
            <method name="close" type="void" line="80">
                <scope line="81"/>
            </method>
        </class>
    </source>