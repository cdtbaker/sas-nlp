<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.fs">
        <import package="sun.misc.Unsafe"/>
        <class name="NativeBuffers" line="3">
            <javadoc line="3">
                Factory for native buffers.                
            </javadoc>
            <method name="NativeBuffers" type="constructor" line="7"/>
            <declaration name="unsafe" type="Unsafe" line="9"/>
            <declaration name="TEMP_BUF_POOL_SIZE" type="int" line="10"/>
            <declaration name="threadLocal" type="ThreadLocal&amp;lt;NativeBuffer[]&amp;gt;" line="11"/>
            <javadoc line="12">
                Allocates a native buffer, of at least the given size, from the heap.                
            </javadoc>
            <method name="allocNativeBuffer" type="NativeBuffer" line="15">
                <params>
                    <param name="size" type="int"/>
                </params>
            </method>
            <javadoc line="19">
                Returns a native buffer, of at least the given size, from the thread
                  local cache.                
            </javadoc>
            <method name="getNativeBufferFromCache" type="NativeBuffer" line="23">
                <params>
                    <param name="size" type="int"/>
                </params>
                <declaration name="buffers" type="NativeBuffer[]" line="24"/>
                <scope line="25">
                    <scope line="26">
                        <declaration name="buffer" type="NativeBuffer" line="27"/>
                        <scope line="28"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="36">
                Returns a native buffer, of at least the given size. The native buffer
                  is taken from the thread local cache if possible; otherwise it is
                  allocated from the heap.                
            </javadoc>
            <method name="getNativeBuffer" type="NativeBuffer" line="41">
                <params>
                    <param name="size" type="int"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="42"/>
                <scope line="43"/>
                <scope line="47"/>
            </method>
            <javadoc line="51">
                Releases the given buffer. If there is space in the thread local cache
                  then the buffer goes into the cache; otherwise the memory is deallocated.                
            </javadoc>
            <method name="releaseNativeBuffer" type="void" line="55">
                <params>
                    <param name="buffer" type="NativeBuffer"/>
                </params>
                <declaration name="buffers" type="NativeBuffer[]" line="56"/>
                <scope line="57"/>
                <scope line="63">
                    <scope line="64"/>
                </scope>
                <scope line="69">
                    <declaration name="existing" type="NativeBuffer" line="70"/>
                    <scope line="71"/>
                </scope>
            </method>
            <javadoc line="79">
                Copies a byte array and zero terminator into a given native buffer.                
            </javadoc>
            <method name="copyCStringToNativeBuffer" type="void" line="82">
                <params>
                    <param name="cstr" type="byte[]"/>
                    <param name="buffer" type="NativeBuffer"/>
                </params>
            </method>
            <javadoc line="89">
                Copies a byte array and zero terminator into a native buffer, returning
                  the buffer.                
            </javadoc>
            <method name="asNativeBuffer" type="NativeBuffer" line="93">
                <params>
                    <param name="cstr" type="byte[]"/>
                </params>
                <declaration name="buffer" type="NativeBuffer" line="94"/>
            </method>
        </class>
    </source>