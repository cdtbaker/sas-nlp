<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.fs">
        <import package="java.nio.file"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.io.IOException"/>
        <import package="java.util"/>
        <class name="AbstractPoller" line="34">
            <comment line="44">
                list of requests pending to the poller thread                
            </comment>
            <comment line="47">
                set to true when shutdown                
            </comment>
            <implements interface="Runnable"/>
            <javadoc line="34">
                Base implementation of background poller thread used in watch service
                  implementations. A poller thread waits on events from the file system and
                  also services &quot;requests&quot; from clients to register for new events or cancel
                  existing registrations.                
            </javadoc>
            <declaration name="requestList" type="LinkedList&lt;Request&gt;" line="44"/>
            <declaration name="shutdown" type="boolean" line="47"/>
            <method name="AbstractPoller" type="constructor" line="49"/>
            <javadoc line="54">
                Starts the poller thread                
            </javadoc>
            <method name="start" type="void" line="57">
                <declaration name="thisRunnable" type="Runnable" line="58"/>
                <anonymous_class line="59">
                    <method name="run" type="Object" line="61">
                        <declaration name="thr" type="Thread" line="62"/>
                    </method>
                </anonymous_class>
            </method>
            <method name="wakeup" type="void" line="70"/>
            <javadoc line="70">
                Wakeup poller thread so that it can service pending requests                
            </javadoc>
            <method name="implRegister" type="Object" line="75"/>
            <javadoc line="75">
                Executed by poller thread to register directory for changes                
            </javadoc>
            <method name="implCancelKey" type="void" line="82"/>
            <javadoc line="82">
                Executed by poller thread to cancel key                
            </javadoc>
            <method name="implCloseAll" type="void" line="87"/>
            <javadoc line="87">
                Executed by poller thread to shutdown and cancel all keys                
            </javadoc>
            <javadoc line="92">
                Requests, and waits on, poller thread to register given file.                
            </javadoc>
            <method name="register" type="WatchKey" line="99">
                <params>
                    <param name="dir" type="Path"/>
                    <param name="events" type="WatchEvent.Kind<?>[]"/>
                    <param name="modifiers" type="WatchEvent.Modifier"/>
                </params>
                <comment line="100">
                    validate arguments before request to poller                    
                </comment>
                <comment line="107">
                    standard events                    
                </comment>
                <comment line="116">
                    OVERFLOW is ignored                    
                </comment>
                <comment line="123">
                    null/unsupported                    
                </comment>
                <declaration name="eventSet" type="Set&lt;WatchEvent.Kind&lt;?&gt;&gt;" line="105"/>
                <scope line="106">
                    <scope line="111"/>
                    <scope line="117"/>
                </scope>
            </method>
            <javadoc line="131">
                Cancels, and waits on, poller thread to cancel given key.                
            </javadoc>
            <method name="cancel" type="void" line="134">
                <params>
                    <param name="key" type="WatchKey"/>
                </params>
                <comment line="138">
                    should not happen                    
                </comment>
                <scope line="135"/>
                <scope line="137"/>
            </method>
            <javadoc line="143">
                Shutdown poller thread                
            </javadoc>
            <method name="close" type="void" line="146"/>
            <javadoc line="150">
                Types of request that the poller thread must handle                
            </javadoc>
            <class name="Request" line="159">
                <javadoc line="159">
                    Encapsulates a request (command) to the poller thread.                    
                </javadoc>
                <declaration name="type" type="RequestType" line="163"/>
                <declaration name="params" type="Object[]" line="164"/>
                <declaration name="completed" type="boolean" line="166"/>
                <declaration name="result" type="Object" line="167"/>
                <method name="Request" type="constructor" line="169">
                    <params>
                        <param name="type" type="RequestType"/>
                        <param name="params" type="Object"/>
                    </params>
                </method>
                <method name="type" type="RequestType" line="174"/>
                <method name="parameters" type="Object[]" line="178"/>
                <method name="release" type="void" line="182">
                    <params>
                        <param name="result" type="Object"/>
                    </params>
                    <scope line="183"/>
                </method>
                <javadoc line="190">
                    Await completion of the request. The return value is the result of
                      the request.                    
                </javadoc>
                <method name="awaitResult" type="Object" line="194">
                    <comment line="200">
                        ignore                        
                    </comment>
                    <scope line="195">
                        <scope line="196">
                            <scope line="197"/>
                            <scope line="199"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <javadoc line="208">
                Enqueues request to poller thread and waits for result                
            </javadoc>
            <method name="invoke" type="Object" line="211">
                <params>
                    <param name="type" type="RequestType"/>
                    <param name="params" type="Object"/>
                </params>
                <comment line="212">
                    submit request                    
                </comment>
                <comment line="221">
                    wakeup thread                    
                </comment>
                <comment line="224">
                    wait for result                    
                </comment>
                <declaration name="req" type="Request" line="213"/>
                <scope line="214">
                    <scope line="215"/>
                </scope>
                <declaration name="result" type="Object" line="225"/>
            </method>
            <javadoc line="234">
                Invoked by poller thread to process all pending requests                
                <return>
                    true if poller thread should shutdown                    
                </return>
            </javadoc>
            <method name="processRequests" type="boolean" line="240">
                <comment line="244">
                    if in process of shutdown then reject request                    
                </comment>
                <comment line="250">
                    Register directory                    
                </comment>
                <comment line="263">
                    Cancel existing key                    
                </comment>
                <comment line="273">
                    Close watch service                    
                </comment>
                <scope line="241">
                    <declaration name="req" type="Request" line="242"/>
                    <scope line="243">
                        <scope line="245"/>
                        <scope line="253">
                            <declaration name="params" type="Object[]" line="254"/>
                            <declaration name="path" type="Path" line="255"/>
                            <declaration name="events" type="Set&lt;? extends WatchEvent.Kind&lt;?&gt;&gt;" line="256"/>
                            <declaration name="modifiers" type="WatchEvent.Modifier[]" line="258"/>
                        </scope>
                        <scope line="266">
                            <declaration name="params" type="Object[]" line="267"/>
                            <declaration name="key" type="WatchKey" line="268"/>
                        </scope>
                        <scope line="276"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>