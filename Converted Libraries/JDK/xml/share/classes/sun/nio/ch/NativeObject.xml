<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.nio.ByteOrder"/>
        <import package="sun.misc.Unsafe"/>
        <class name="NativeObject" line="4">
            <javadoc line="4">
                Proxies for objects that reside in native memory.                
            </javadoc>
            <declaration name="unsafe" type="Unsafe" line="8"/>
            <declaration name="allocationAddress" type="long" line="9"/>
            <declaration name="address" type="long" line="10"/>
            <javadoc line="11">
                Creates a new native object that is based at the given native address.                
            </javadoc>
            <method name="NativeObject" type="constructor" line="14">
                <params>
                    <param name="address" type="long"/>
                </params>
            </method>
            <javadoc line="18">
                Creates a new native object allocated at the given native address but
                  whose base is at the additional offset.                
            </javadoc>
            <method name="NativeObject" type="constructor" line="22">
                <params>
                    <param name="address" type="long"/>
                    <param name="offset" type="long"/>
                </params>
            </method>
            <method name="NativeObject" type="constructor" line="26">
                <params>
                    <param name="size" type="int"/>
                    <param name="pageAligned" type="boolean"/>
                </params>
                <scope line="27"/>
                <scope line="31">
                    <declaration name="ps" type="int" line="32"/>
                    <declaration name="a" type="long" line="33"/>
                </scope>
            </method>
            <javadoc line="38">
                Returns the native base address of this native object.                
                <return>
                    The native base address                    
                </return>
            </javadoc>
            <method name="address" type="long" line="42"/>
            <method name="allocationAddress" type="long" line="45"/>
            <javadoc line="48">
                Creates a new native object starting at the given offset from the base
                  of this native object.                
                <param>
                    offsetThe offset from the base of this native object that is to be
                      the base of the new native object                    
                </param>
                <return>
                    The newly created native object                    
                </return>
            </javadoc>
            <method name="subObject" type="NativeObject" line="55">
                <params>
                    <param name="offset" type="int"/>
                </params>
            </method>
            <javadoc line="58">
                Reads an address from this native object at the given offset and
                  constructs a native object using that address.                
                <param>
                    offsetThe offset of the address to be read.  Note that the size of an
                      address is implementation-dependent.                    
                </param>
                <return>
                    The native object created using the address read from the
                      given offset                    
                </return>
            </javadoc>
            <method name="getObject" type="NativeObject" line="66">
                <params>
                    <param name="offset" type="int"/>
                </params>
                <declaration name="newAddress" type="long" line="67"/>
            </method>
            <javadoc line="80">
                Writes the base address of the given native object at the given offset
                  of this native object.                
                <param>
                    offsetThe offset at which the address is to be written.  Note that the
                      size of an address is implementation-dependent.                    
                </param>
                <param>
                    obThe native object whose address is to be written                    
                </param>
            </javadoc>
            <method name="putObject" type="void" line="87">
                <params>
                    <param name="offset" type="int"/>
                    <param name="ob" type="NativeObject"/>
                </params>
            </method>
            <javadoc line="99">
                Reads a byte starting at the given offset from base of this native
                  object.                
                <param>
                    offsetThe offset at which to read the byte                    
                </param>
                <return>
                    The byte value read                    
                </return>
            </javadoc>
            <method name="getByte" type="byte" line="105">
                <params>
                    <param name="offset" type="int"/>
                </params>
            </method>
            <javadoc line="108">
                Writes a byte at the specified offset from this native object&apos;s
                  base address.                
                <param>
                    offsetThe offset at which to write the byte                    
                </param>
                <param>
                    valueThe byte value to be written                    
                </param>
            </javadoc>
            <method name="putByte" type="void" line="114">
                <params>
                    <param name="offset" type="int"/>
                    <param name="value" type="byte"/>
                </params>
            </method>
            <javadoc line="117">
                Reads a short starting at the given offset from base of this native
                  object.                
                <param>
                    offsetThe offset at which to read the short                    
                </param>
                <return>
                    The short value read                    
                </return>
            </javadoc>
            <method name="getShort" type="short" line="123">
                <params>
                    <param name="offset" type="int"/>
                </params>
            </method>
            <javadoc line="126">
                Writes a short at the specified offset from this native object&apos;s
                  base address.                
                <param>
                    offsetThe offset at which to write the short                    
                </param>
                <param>
                    valueThe short value to be written                    
                </param>
            </javadoc>
            <method name="putShort" type="void" line="132">
                <params>
                    <param name="offset" type="int"/>
                    <param name="value" type="short"/>
                </params>
            </method>
            <javadoc line="135">
                Reads a char starting at the given offset from base of this native
                  object.                
                <param>
                    offsetThe offset at which to read the char                    
                </param>
                <return>
                    The char value read                    
                </return>
            </javadoc>
            <method name="getChar" type="char" line="141">
                <params>
                    <param name="offset" type="int"/>
                </params>
            </method>
            <javadoc line="144">
                Writes a char at the specified offset from this native object&apos;s
                  base address.                
                <param>
                    offsetThe offset at which to write the char                    
                </param>
                <param>
                    valueThe char value to be written                    
                </param>
            </javadoc>
            <method name="putChar" type="void" line="150">
                <params>
                    <param name="offset" type="int"/>
                    <param name="value" type="char"/>
                </params>
            </method>
            <javadoc line="153">
                Reads an int starting at the given offset from base of this native
                  object.                
                <param>
                    offsetThe offset at which to read the int                    
                </param>
                <return>
                    The int value read                    
                </return>
            </javadoc>
            <method name="getInt" type="int" line="159">
                <params>
                    <param name="offset" type="int"/>
                </params>
            </method>
            <javadoc line="162">
                Writes an int at the specified offset from this native object&apos;s
                  base address.                
                <param>
                    offsetThe offset at which to write the int                    
                </param>
                <param>
                    valueThe int value to be written                    
                </param>
            </javadoc>
            <method name="putInt" type="void" line="168">
                <params>
                    <param name="offset" type="int"/>
                    <param name="value" type="int"/>
                </params>
            </method>
            <javadoc line="171">
                Reads a long starting at the given offset from base of this native
                  object.                
                <param>
                    offsetThe offset at which to read the long                    
                </param>
                <return>
                    The long value read                    
                </return>
            </javadoc>
            <method name="getLong" type="long" line="177">
                <params>
                    <param name="offset" type="int"/>
                </params>
            </method>
            <javadoc line="180">
                Writes a long at the specified offset from this native object&apos;s
                  base address.                
                <param>
                    offsetThe offset at which to write the long                    
                </param>
                <param>
                    valueThe long value to be written                    
                </param>
            </javadoc>
            <method name="putLong" type="void" line="186">
                <params>
                    <param name="offset" type="int"/>
                    <param name="value" type="long"/>
                </params>
            </method>
            <javadoc line="189">
                Reads a float starting at the given offset from base of this native
                  object.                
                <param>
                    offsetThe offset at which to read the float                    
                </param>
                <return>
                    The float value read                    
                </return>
            </javadoc>
            <method name="getFloat" type="float" line="195">
                <params>
                    <param name="offset" type="int"/>
                </params>
            </method>
            <javadoc line="198">
                Writes a float at the specified offset from this native object&apos;s
                  base address.                
                <param>
                    offsetThe offset at which to write the float                    
                </param>
                <param>
                    valueThe float value to be written                    
                </param>
            </javadoc>
            <method name="putFloat" type="void" line="204">
                <params>
                    <param name="offset" type="int"/>
                    <param name="value" type="float"/>
                </params>
            </method>
            <javadoc line="207">
                Reads a double starting at the given offset from base of this native
                  object.                
                <param>
                    offsetThe offset at which to read the double                    
                </param>
                <return>
                    The double value read                    
                </return>
            </javadoc>
            <method name="getDouble" type="double" line="213">
                <params>
                    <param name="offset" type="int"/>
                </params>
            </method>
            <javadoc line="216">
                Writes a double at the specified offset from this native object&apos;s
                  base address.                
                <param>
                    offsetThe offset at which to write the double                    
                </param>
                <param>
                    valueThe double value to be written                    
                </param>
            </javadoc>
            <method name="putDouble" type="void" line="222">
                <params>
                    <param name="offset" type="int"/>
                    <param name="value" type="double"/>
                </params>
            </method>
            <javadoc line="225">
                Returns the native architecture&apos;s address size in bytes.                
                <return>
                    The address size of the native architecture                    
                </return>
            </javadoc>
            <method name="addressSize" type="int" line="229"/>
            <declaration name="byteOrder" type="ByteOrder" line="232"/>
            <javadoc line="233">
                Returns the byte order of the underlying hardware.                
                <return>
                    An instance of {@link java.nio.ByteOrder}                    
                </return>
            </javadoc>
            <method name="byteOrder" type="ByteOrder" line="237"/>
            <declaration name="pageSize" type="int" line="259"/>
            <javadoc line="260">
                Returns the page size of the underlying hardware.                
                <return>
                    The page size, in bytes                    
                </return>
            </javadoc>
            <method name="pageSize" type="int" line="264"/>
        </class>
    </source>