<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.io.FileDescriptor"/>
        <import package="java.io.IOException"/>
        <import package="java.net"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.channels"/>
        <import package="java.nio.channels.spi"/>
        <import package="java.util"/>
        <import package="sun.net.NetHooks"/>
        <class name="SocketChannelImpl" line="10">
            <extends class="SocketChannel"/>
            <implements interface="SelChImpl"/>
            <javadoc line="10">
                An implementation of SocketChannels                
            </javadoc>
            <declaration name="nd" type="NativeDispatcher" line="14"/>
            <declaration name="fd" type="FileDescriptor" line="15"/>
            <declaration name="fdVal" type="int" line="16"/>
            <declaration name="readerThread" type="long" line="17"/>
            <declaration name="writerThread" type="long" line="18"/>
            <declaration name="readLock" type="Object" line="19"/>
            <declaration name="writeLock" type="Object" line="20"/>
            <declaration name="stateLock" type="Object" line="21"/>
            <declaration name="ST_UNINITIALIZED" type="int" line="22"/>
            <declaration name="ST_UNCONNECTED" type="int" line="23"/>
            <declaration name="ST_PENDING" type="int" line="24"/>
            <declaration name="ST_CONNECTED" type="int" line="25"/>
            <declaration name="ST_KILLPENDING" type="int" line="26"/>
            <declaration name="ST_KILLED" type="int" line="27"/>
            <declaration name="state" type="int" line="28"/>
            <declaration name="localAddress" type="SocketAddress" line="29"/>
            <declaration name="remoteAddress" type="SocketAddress" line="30"/>
            <declaration name="isInputOpen" type="boolean" line="31"/>
            <declaration name="isOutputOpen" type="boolean" line="32"/>
            <declaration name="readyToConnect" type="boolean" line="33"/>
            <declaration name="socket" type="Socket" line="34"/>
            <method name="SocketChannelImpl" type="constructor" line="35">
                <params>
                    <param name="sp" type="SelectorProvider"/>
                </params>
            </method>
            <method name="SocketChannelImpl" type="constructor" line="41">
                <params>
                    <param name="sp" type="SelectorProvider"/>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="bound" type="boolean"/>
                </params>
            </method>
            <method name="SocketChannelImpl" type="constructor" line="48">
                <params>
                    <param name="sp" type="SelectorProvider"/>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="remote" type="InetSocketAddress"/>
                </params>
            </method>
            <method name="socket" type="Socket" line="56">
                <scope line="57"/>
            </method>
            <method name="getLocalAddress" type="SocketAddress" line="62">
                <scope line="63"/>
            </method>
            <method name="getRemoteAddress" type="SocketAddress" line="68">
                <scope line="69"/>
            </method>
            <method name="setOption" type="SocketChannel" line="74">
                <params>
                    <param name="name" type="SocketOption&lt;T&gt;"/>
                    <param name="value" type="T"/>
                </params>
                <scope line="77">
                    <scope line="79"/>
                </scope>
            </method>
            <method name="getOption" type="T" line="87">
                <params>
                    <param name="name" type="SocketOption&lt;T&gt;"/>
                </params>
                <scope line="90">
                    <scope line="92"/>
                </scope>
            </method>
            <class name="DefaultOptionsHolder" line="98">
                <declaration name="defaultOptions" type="Set&amp;lt;SocketOption&amp;lt;?&amp;gt;&amp;gt;" line="99"/>
                <method name="defaultOptions" type="Set&lt;SocketOption&lt;?&gt;&gt;" line="100">
                    <declaration name="set" type="HashSet&amp;lt;SocketOption&amp;lt;?&amp;gt;&amp;gt;" line="101"/>
                </method>
            </class>
            <method name="supportedOptions" type="Set&lt;SocketOption&lt;?&gt;&gt;" line="113"/>
            <method name="ensureReadOpen" type="boolean" line="116">
                <scope line="117"/>
            </method>
            <method name="ensureWriteOpen" type="void" line="124">
                <scope line="125"/>
            </method>
            <method name="readerCleanup" type="void" line="131">
                <scope line="132"/>
            </method>
            <method name="writerCleanup" type="void" line="137">
                <scope line="138"/>
            </method>
            <method name="read" type="int" line="143">
                <params>
                    <param name="buf" type="ByteBuffer"/>
                </params>
            </method>
            <method name="read" type="long" line="174">
                <params>
                    <param name="dsts" type="ByteBuffer[]"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                </params>
            </method>
            <method name="write" type="int" line="201">
                <params>
                    <param name="buf" type="ByteBuffer"/>
                </params>
            </method>
            <method name="write" type="long" line="228">
                <params>
                    <param name="srcs" type="ByteBuffer[]"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                </params>
            </method>
            <method name="sendOutOfBandData" type="int" line="255">
                <params>
                    <param name="b" type="byte"/>
                </params>
            </method>
            <method name="implConfigureBlocking" type="void" line="281">
                <params>
                    <param name="block" type="boolean"/>
                </params>
            </method>
            <method name="localAddress" type="SocketAddress" line="284">
                <scope line="285"/>
            </method>
            <method name="remoteAddress" type="SocketAddress" line="289">
                <scope line="290"/>
            </method>
            <method name="bind" type="SocketChannel" line="294">
                <params>
                    <param name="local" type="SocketAddress"/>
                </params>
                <scope line="295">
                    <scope line="296">
                        <scope line="297">
                            <declaration name="isa" type="InetSocketAddress" line="301"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="isConnected" type="boolean" line="310">
                <scope line="311"/>
            </method>
            <method name="isConnectionPending" type="boolean" line="315">
                <scope line="316"/>
            </method>
            <method name="ensureOpenAndUnconnected" type="void" line="320">
                <scope line="321"/>
            </method>
            <method name="connect" type="boolean" line="327">
                <params>
                    <param name="sa" type="SocketAddress"/>
                </params>
            </method>
            <method name="finishConnect" type="boolean" line="386"/>
            <method name="shutdownInput" type="SocketChannel" line="450">
                <scope line="451">
                    <scope line="454"/>
                </scope>
            </method>
            <method name="shutdownOutput" type="SocketChannel" line="462">
                <scope line="463">
                    <scope line="466"/>
                </scope>
            </method>
            <method name="isInputOpen" type="boolean" line="474">
                <scope line="475"/>
            </method>
            <method name="isOutputOpen" type="boolean" line="479">
                <scope line="480"/>
            </method>
            <method name="implCloseSelectableChannel" type="void" line="484">
                <scope line="485"/>
            </method>
            <method name="kill" type="void" line="494"/>
            <javadoc line="511">
                Translates native poll revent ops into a ready operation ops                
            </javadoc>
            <method name="translateReadyOps" type="boolean" line="514">
                <params>
                    <param name="ops" type="int"/>
                    <param name="initialOps" type="int"/>
                    <param name="sk" type="SelectionKeyImpl"/>
                </params>
                <declaration name="intOps" type="int" line="515"/>
                <declaration name="oldOps" type="int" line="516"/>
                <declaration name="newOps" type="int" line="517"/>
                <scope line="518"/>
                <scope line="521"/>
                <scope line="528"/>
            </method>
            <method name="translateAndUpdateReadyOps" type="boolean" line="536">
                <params>
                    <param name="ops" type="int"/>
                    <param name="sk" type="SelectionKeyImpl"/>
                </params>
            </method>
            <method name="translateAndSetReadyOps" type="boolean" line="539">
                <params>
                    <param name="ops" type="int"/>
                    <param name="sk" type="SelectionKeyImpl"/>
                </params>
            </method>
            <javadoc line="542">
                Translates an interest operation set into a native poll event set                
            </javadoc>
            <method name="translateAndSetInterestOps" type="void" line="545">
                <params>
                    <param name="ops" type="int"/>
                    <param name="sk" type="SelectionKeyImpl"/>
                </params>
                <declaration name="newOps" type="int" line="546"/>
            </method>
            <method name="getFD" type="FileDescriptor" line="552"/>
            <method name="getFDVal" type="int" line="555"/>
            <method name="toString" type="String" line="558">
                <declaration name="sb" type="StringBuffer" line="559"/>
                <scope line="563">
                    <scope line="564">
                        <scope line="578"/>
                        <scope line="582"/>
                    </scope>
                </scope>
            </method>
            <method name="checkConnect" type="int" line="591"/>
            <method name="sendOutOfBandData" type="int" line="592"/>
            <scope line="593"/>
        </class>
    </source>