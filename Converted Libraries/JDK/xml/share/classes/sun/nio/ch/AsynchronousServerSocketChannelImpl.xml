<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.nio.channels"/>
        <import package="java.net.SocketAddress"/>
        <import package="java.net.SocketOption"/>
        <import package="java.net.StandardSocketOptions"/>
        <import package="java.net.InetSocketAddress"/>
        <import package="java.io.FileDescriptor"/>
        <import package="java.io.IOException"/>
        <import package="java.util.Set"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Collections"/>
        <import package="java.util.concurrent.Future"/>
        <import package="java.util.concurrent.locks.ReadWriteLock"/>
        <import package="java.util.concurrent.locks.ReentrantReadWriteLock"/>
        <import package="sun.net.NetHooks"/>
        <class name="AsynchronousServerSocketChannelImpl" line="43">
            <extends class="AsynchronousServerSocketChannel"/>
            <comment line="54">
                the local address to which the channel&apos;s socket is bound                
            </comment>
            <comment line="57">
                need this lock to set local address                
            </comment>
            <comment line="60">
                close support                
            </comment>
            <comment line="64">
                set true when accept operation is cancelled                
            </comment>
            <implements interface="Cancellable"/>
            <implements interface="Groupable"/>
            <javadoc line="43">
                Base implementation of AsynchronousServerSocketChannel.                
            </javadoc>
            <declaration name="fd" type="FileDescriptor" line="51"/>
            <declaration name="localAddress" type="SocketAddress" line="54"/>
            <declaration name="stateLock" type="Object" line="57"/>
            <declaration name="closeLock" type="ReadWriteLock" line="60"/>
            <declaration name="open" type="boolean" line="61"/>
            <declaration name="acceptKilled" type="boolean" line="64"/>
            <method name="AsynchronousServerSocketChannelImpl" type="constructor" line="67">
                <params>
                    <param name="group" type="AsynchronousChannelGroupImpl"/>
                </params>
            </method>
            <method name="isOpen" type="boolean" line="73"/>
            <javadoc line="77">
                Marks beginning of access to file descriptor/handle                
            </javadoc>
            <method name="begin" type="void" line="80"/>
            <javadoc line="86">
                Marks end of access to file descriptor/handle                
            </javadoc>
            <method name="end" type="void" line="89"/>
            <method name="implClose" type="void" line="93"/>
            <javadoc line="93">
                Invoked to close file descriptor/handle.                
            </javadoc>
            <method name="close" type="void" line="99">
                <comment line="101">
                    synchronize with any threads using file descriptor/handle                    
                </comment>
                <comment line="105">
                    already closed                    
                </comment>
                <scope line="102"/>
                <scope line="106"/>
            </method>
            <method name="implAccept" type="Future<AsynchronousSocketChannel>" line="112"/>
            <javadoc line="112">
                Invoked by accept to accept connection                
            </javadoc>
            <method name="accept" type="Future<AsynchronousSocketChannel>" line="121"/>
            <method name="accept" type="void" line="129">
                <params>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler<AsynchronousSocketChannel,? super A>"/>
                </params>
            </method>
            <method name="isAcceptKilled" type="boolean" line="135"/>
            <method name="onCancel" type="void" line="140">
                <params>
                    <param name="task" type="PendingFuture<?,?>"/>
                </params>
            </method>
            <method name="bind" type="AsynchronousServerSocketChannel" line="147">
                <params>
                    <param name="local" type="SocketAddress"/>
                    <param name="backlog" type="int"/>
                </params>
                <declaration name="isa" type="InetSocketAddress" line="148"/>
                <declaration name="sm" type="SecurityManager" line="150"/>
                <scope line="154">
                    <scope line="156"/>
                </scope>
                <scope line="164"/>
            </method>
            <method name="getLocalAddress" type="SocketAddress" line="171"/>
            <method name="setOption" type="AsynchronousServerSocketChannel" line="181">
                <params>
                    <param name="name" type="SocketOption<T>"/>
                    <param name="value" type="T"/>
                </params>
                <scope line="187"/>
                <scope line="191"/>
            </method>
            <method name="getOption" type="T" line="198">
                <params>
                    <param name="name" type="SocketOption<T>"/>
                </params>
                <scope line="204"/>
                <scope line="207"/>
            </method>
            <class name="DefaultOptionsHolder" line="212">
                <declaration name="defaultOptions" type="Set&lt;SocketOption&lt;?&gt;&gt;" line="213"/>
                <method name="defaultOptions" type="Set<SocketOption<?>>" line="215">
                    <declaration name="set" type="HashSet&lt;SocketOption&lt;?&gt;&gt;" line="216"/>
                </method>
            </class>
            <method name="supportedOptions" type="Set<SocketOption<?>>" line="224"/>
            <method name="toString" type="String" line="229">
                <declaration name="sb" type="StringBuilder" line="230"/>
                <scope line="235">
                    <scope line="236"/>
                    <scope line="238"/>
                </scope>
            </method>
        </class>
    </source>