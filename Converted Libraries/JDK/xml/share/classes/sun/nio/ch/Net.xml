<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.io"/>
        <import package="java.net"/>
        <import package="java.nio.channels"/>
        <import package="java.util"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <class name="Net" line="36">
            <comment line="37">
                package-private                
            </comment>
            <comment line="41">
                unspecified protocol family                
            </comment>
            <comment line="48">
                -- Miscellaneous utilities --                
            </comment>
            <comment line="226">
                -- Socket options                
            </comment>
            <comment line="308">
                -- Socket operations --                
            </comment>
            <comment line="331">
                Due to oddities SO_REUSEADDR on windows reuse is ignored                
            </comment>
            <comment line="413">
                -- Multicast support --                
            </comment>
            <method name="Net" type="constructor" line="38"/>
            <declaration name="UNSPEC" type="ProtocolFamily" line="41"/>
            <anonymous_class line="41">
                <method name="name" type="String" line="42"/>
            </anonymous_class>
            <declaration name="checkedIPv6" type="boolean" line="49"/>
            <declaration name="isIPv6Available" type="boolean" line="50"/>
            <javadoc line="52">
                Tells whether dual-IPv4/IPv6 sockets should be used.                
            </javadoc>
            <method name="isIPv6Available" type="boolean" line="55">
                <scope line="56"/>
            </method>
            <javadoc line="63">
                Tells whether IPv6 sockets can join IPv4 multicast groups                
            </javadoc>
            <method name="canIPv6SocketJoinIPv4Group" type="boolean" line="66"/>
            <javadoc line="70">
                Tells whether {@link #join6} can be used to join an IPv4
                  multicast group (IPv4 group as IPv4-mapped IPv6 address)                
            </javadoc>
            <method name="canJoin6WithIPv4Group" type="boolean" line="74"/>
            <method name="checkAddress" type="InetSocketAddress" line="78">
                <params>
                    <param name="sa" type="SocketAddress"/>
                </params>
                <comment line="83">
                    ## needs arg                    
                </comment>
                <comment line="86">
                    ## needs arg                    
                </comment>
                <declaration name="isa" type="InetSocketAddress" line="83"/>
                <declaration name="addr" type="InetAddress" line="86"/>
            </method>
            <method name="asInetSocketAddress" type="InetSocketAddress" line="92">
                <params>
                    <param name="sa" type="SocketAddress"/>
                </params>
            </method>
            <method name="translateToSocketException" type="void" line="100">
                <params>
                    <param name="x" type="Exception"/>
                </params>
                <declaration name="nx" type="Exception" line="103"/>
                <scope line="114"/>
            </method>
            <method name="translateException" type="void" line="131">
                <params>
                    <param name="x" type="Exception"/>
                    <param name="unknownHostForUnresolved" type="boolean"/>
                </params>
                <comment line="135">
                    Throw UnknownHostException from here since it cannot
                     be thrown as a SocketException                    
                </comment>
                <scope line="138"/>
            </method>
            <method name="translateException" type="void" line="146">
                <params>
                    <param name="x" type="Exception"/>
                </params>
            </method>
            <javadoc line="150">
                Returns any IPv4 address of the given network interface, or
                  null if the interface does not have any IPv4 addresses.                
            </javadoc>
            <method name="anyInet4Address" type="Inet4Address" line="154">
                <params>
                    <param name="interf" type="NetworkInterface"/>
                </params>
                <anonymous_class line="155">
                    <method name="run" type="Inet4Address" line="156">
                        <declaration name="addrs" type="Enumeration&lt;InetAddress&gt;" line="157"/>
                        <scope line="158">
                            <declaration name="addr" type="InetAddress" line="159"/>
                            <scope line="160"/>
                        </scope>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="169">
                Returns an IPv4 address as an int.                
            </javadoc>
            <method name="inet4AsInt" type="int" line="172">
                <params>
                    <param name="ia" type="InetAddress"/>
                </params>
                <scope line="173">
                    <declaration name="addr" type="byte[]" line="174"/>
                    <declaration name="address" type="int" line="175"/>
                </scope>
            </method>
            <javadoc line="184">
                Returns an InetAddress from the given IPv4 address
                  represented as an int.                
            </javadoc>
            <method name="inet4FromInt" type="InetAddress" line="188">
                <params>
                    <param name="address" type="int"/>
                </params>
                <declaration name="addr" type="byte[]" line="189"/>
                <scope line="194"/>
                <scope line="196"/>
            </method>
            <javadoc line="201">
                Returns an IPv6 address as a byte array                
            </javadoc>
            <method name="inet6AsByteArray" type="byte[]" line="204">
                <params>
                    <param name="ia" type="InetAddress"/>
                </params>
                <comment line="210">
                    need to construct IPv4-mapped address                    
                </comment>
                <scope line="205"/>
                <scope line="210">
                    <declaration name="ip4address" type="byte[]" line="211"/>
                    <declaration name="address" type="byte[]" line="212"/>
                </scope>
            </method>
            <method name="setSocketOption" type="void" line="230">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="family" type="ProtocolFamily"/>
                    <param name="name" type="SocketOption<?>"/>
                    <param name="value" type="Object"/>
                </params>
                <comment line="235">
                    only simple values supported by this method                    
                </comment>
                <comment line="240">
                    special handling                    
                </comment>
                <comment line="266">
                    map option name to platform level/name                    
                </comment>
                <declaration name="type" type="Class&lt;?&gt;" line="235"/>
                <scope line="242">
                    <declaration name="i" type="int" line="243"/>
                </scope>
                <scope line="247">
                    <declaration name="i" type="int" line="248"/>
                </scope>
                <scope line="254">
                    <declaration name="i" type="int" line="255"/>
                </scope>
                <scope line="259">
                    <declaration name="i" type="int" line="260"/>
                </scope>
                <declaration name="key" type="OptionKey" line="266"/>
                <declaration name="arg" type="int" line="270"/>
                <scope line="271"/>
                <scope line="273">
                    <declaration name="b" type="boolean" line="274"/>
                </scope>
                <declaration name="mayNeedConversion" type="boolean" line="278"/>
            </method>
            <method name="getSocketOption" type="Object" line="285">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="family" type="ProtocolFamily"/>
                    <param name="name" type="SocketOption<?>"/>
                </params>
                <comment line="289">
                    only simple values supported by this method                    
                </comment>
                <comment line="293">
                    map option name to platform level/name                    
                </comment>
                <declaration name="type" type="Class&lt;?&gt;" line="286"/>
                <declaration name="key" type="OptionKey" line="293"/>
                <declaration name="mayNeedConversion" type="boolean" line="297"/>
                <declaration name="value" type="int" line="298"/>
                <scope line="300"/>
                <scope line="302"/>
            </method>
            <method name="isIPv6Available0" type="boolean" line="309"/>
            <method name="canIPv6SocketJoinIPv4Group0" type="boolean" line="311"/>
            <method name="canJoin6WithIPv4Group0" type="boolean" line="313"/>
            <method name="socket" type="FileDescriptor" line="315">
                <params>
                    <param name="stream" type="boolean"/>
                </params>
            </method>
            <method name="socket" type="FileDescriptor" line="320">
                <params>
                    <param name="family" type="ProtocolFamily"/>
                    <param name="stream" type="boolean"/>
                </params>
                <declaration name="preferIPv6" type="boolean" line="321"/>
            </method>
            <method name="serverSocket" type="FileDescriptor" line="326">
                <params>
                    <param name="stream" type="boolean"/>
                </params>
            </method>
            <method name="socket0" type="int" line="331"/>
            <method name="bind" type="void" line="335">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="addr" type="InetAddress"/>
                    <param name="port" type="int"/>
                </params>
            </method>
            <method name="bind" type="void" line="341">
                <params>
                    <param name="family" type="ProtocolFamily"/>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="addr" type="InetAddress"/>
                    <param name="port" type="int"/>
                </params>
                <declaration name="preferIPv6" type="boolean" line="342"/>
            </method>
            <method name="bind0" type="void" line="347"/>
            <method name="listen" type="void" line="351"/>
            <method name="connect" type="int" line="355">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="remote" type="InetAddress"/>
                    <param name="remotePort" type="int"/>
                </params>
            </method>
            <method name="connect" type="int" line="361">
                <params>
                    <param name="family" type="ProtocolFamily"/>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="remote" type="InetAddress"/>
                    <param name="remotePort" type="int"/>
                </params>
                <declaration name="preferIPv6" type="boolean" line="362"/>
            </method>
            <method name="connect0" type="int" line="367"/>
            <declaration name="SHUT_RD" type="int" line="374"/>
            <declaration name="SHUT_WR" type="int" line="375"/>
            <declaration name="SHUT_RDWR" type="int" line="376"/>
            <method name="shutdown" type="void" line="378"/>
            <method name="localPort" type="int" line="380"/>
            <method name="localInetAddress" type="InetAddress" line="383"/>
            <method name="localAddress" type="InetSocketAddress" line="388">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                </params>
            </method>
            <method name="remotePort" type="int" line="392"/>
            <method name="remoteInetAddress" type="InetAddress" line="395"/>
            <method name="remoteAddress" type="InetSocketAddress" line="400">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                </params>
            </method>
            <method name="getIntOption0" type="int" line="404"/>
            <method name="setIntOption0" type="void" line="408"/>
            <javadoc line="415">
                Join IPv4 multicast group                
            </javadoc>
            <method name="join4" type="int" line="420">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="group" type="int"/>
                    <param name="interf" type="int"/>
                    <param name="source" type="int"/>
                </params>
            </method>
            <javadoc line="424">
                Drop membership of IPv4 multicast group                
            </javadoc>
            <method name="drop4" type="void" line="429">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="group" type="int"/>
                    <param name="interf" type="int"/>
                    <param name="source" type="int"/>
                </params>
            </method>
            <method name="joinOrDrop4" type="int" line="433"/>
            <javadoc line="436">
                Block IPv4 source                
            </javadoc>
            <method name="block4" type="int" line="441">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="group" type="int"/>
                    <param name="interf" type="int"/>
                    <param name="source" type="int"/>
                </params>
            </method>
            <javadoc line="445">
                Unblock IPv6 source                
            </javadoc>
            <method name="unblock4" type="void" line="450">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="group" type="int"/>
                    <param name="interf" type="int"/>
                    <param name="source" type="int"/>
                </params>
            </method>
            <method name="blockOrUnblock4" type="int" line="454"/>
            <javadoc line="458">
                Join IPv6 multicast group                
            </javadoc>
            <method name="join6" type="int" line="463">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="group" type="byte[]"/>
                    <param name="index" type="int"/>
                    <param name="source" type="byte[]"/>
                </params>
            </method>
            <javadoc line="467">
                Drop membership of IPv6 multicast group                
            </javadoc>
            <method name="drop6" type="void" line="472">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="group" type="byte[]"/>
                    <param name="index" type="int"/>
                    <param name="source" type="byte[]"/>
                </params>
            </method>
            <method name="joinOrDrop6" type="int" line="476"/>
            <javadoc line="479">
                Block IPv6 source                
            </javadoc>
            <method name="block6" type="int" line="484">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="group" type="byte[]"/>
                    <param name="index" type="int"/>
                    <param name="source" type="byte[]"/>
                </params>
            </method>
            <javadoc line="488">
                Unblock IPv6 source                
            </javadoc>
            <method name="unblock6" type="void" line="493">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="group" type="byte[]"/>
                    <param name="index" type="int"/>
                    <param name="source" type="byte[]"/>
                </params>
            </method>
            <method name="blockOrUnblock6" type="int" line="497"/>
            <method name="setInterface4" type="void" line="500"/>
            <method name="getInterface4" type="int" line="502"/>
            <method name="setInterface6" type="void" line="504"/>
            <method name="getInterface6" type="int" line="506"/>
            <method name="initIDs" type="void" line="508"/>
            <scope line="510"/>
        </class>
    </source>