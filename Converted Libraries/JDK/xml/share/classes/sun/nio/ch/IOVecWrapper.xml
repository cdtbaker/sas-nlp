<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.nio.ByteBuffer"/>
        <import package="sun.misc"/>
        <class name="IOVecWrapper" line="4">
            <javadoc line="4">
                Manipulates a native array of iovec structs on Solaris:
                  typedef struct iovec {
                  caddr_t  iov_base;
                  int      iov_len;
                  } iovec_t;                
                <author>
                    Mike McCloskey                    
                </author>
                <since>
                    1.4                    
                </since>
            </javadoc>
            <declaration name="BASE_OFFSET" type="int" line="14"/>
            <declaration name="LEN_OFFSET" type="int" line="15"/>
            <declaration name="SIZE_IOVEC" type="int" line="16"/>
            <declaration name="vecArray" type="AllocatedNativeObject" line="17"/>
            <declaration name="size" type="int" line="18"/>
            <declaration name="buf" type="ByteBuffer[]" line="19"/>
            <declaration name="position" type="int[]" line="20"/>
            <declaration name="remaining" type="int[]" line="21"/>
            <declaration name="shadow" type="ByteBuffer[]" line="22"/>
            <declaration name="address" type="long" line="23"/>
            <declaration name="addressSize" type="int" line="24"/>
            <class name="Deallocator" line="25">
                <implements interface="Runnable"/>
                <declaration name="obj" type="AllocatedNativeObject" line="26"/>
                <method name="Deallocator" type="constructor" line="27">
                    <params>
                        <param name="obj" type="AllocatedNativeObject"/>
                    </params>
                </method>
                <method name="run" type="void" line="30"/>
            </class>
            <declaration name="cached" type="ThreadLocal&lt;IOVecWrapper&gt;" line="34"/>
            <method name="IOVecWrapper" type="constructor" line="35">
                <params>
                    <param name="size" type="int"/>
                </params>
            </method>
            <method name="get" type="IOVecWrapper" line="44">
                <params>
                    <param name="size" type="int"/>
                </params>
                <declaration name="wrapper" type="IOVecWrapper" line="45"/>
                <scope line="46"/>
                <scope line="50"/>
            </method>
            <method name="setBuffer" type="void" line="57">
                <params>
                    <param name="i" type="int"/>
                    <param name="buf" type="ByteBuffer"/>
                    <param name="pos" type="int"/>
                    <param name="rem" type="int"/>
                </params>
            </method>
            <method name="setShadow" type="void" line="62">
                <params>
                    <param name="i" type="int"/>
                    <param name="buf" type="ByteBuffer"/>
                </params>
            </method>
            <method name="getBuffer" type="ByteBuffer" line="65">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="getPosition" type="int" line="68">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="getRemaining" type="int" line="71">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="getShadow" type="ByteBuffer" line="74">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="clearRefs" type="void" line="77">
                <params>
                    <param name="i" type="int"/>
                </params>
            </method>
            <method name="putBase" type="void" line="81">
                <params>
                    <param name="i" type="int"/>
                    <param name="base" type="long"/>
                </params>
                <declaration name="offset" type="int" line="82"/>
            </method>
            <method name="putLen" type="void" line="86">
                <params>
                    <param name="i" type="int"/>
                    <param name="len" type="long"/>
                </params>
                <declaration name="offset" type="int" line="87"/>
            </method>
            <scope line="91"/>
        </class>
    </source>