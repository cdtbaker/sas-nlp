<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.io.FileDescriptor"/>
        <import package="java.io.IOException"/>
        <import package="java.net"/>
        <import package="java.nio.channels"/>
        <import package="java.nio.channels.spi"/>
        <import package="java.util"/>
        <import package="sun.net.NetHooks"/>
        <class name="ServerSocketChannelImpl" line="37">
            <extends class="ServerSocketChannel"/>
            <comment line="47">
                Used to make native close and configure calls                
            </comment>
            <comment line="50">
                Our file descriptor                
            </comment>
            <comment line="53">
                fd value needed for dev/poll. This value will remain valid                
            </comment>
            <comment line="54">
                even after the value in the file descriptor object has been set to -1                
            </comment>
            <comment line="57">
                ID of native thread currently blocked in this channel, for signalling                
            </comment>
            <comment line="60">
                Lock held by thread currently blocked in this channel                
            </comment>
            <comment line="63">
                Lock held by any thread that modifies the state fields declared below                
            </comment>
            <comment line="64">
                DO NOT invoke a blocking I/O operation while holding this lock!                
            </comment>
            <comment line="67">
                -- The following fields are protected by stateLock                
            </comment>
            <comment line="69">
                Channel state, increases monotonically                
            </comment>
            <comment line="75">
                Binding                
            </comment>
            <comment line="76">
                null =&gt; unbound                
            </comment>
            <comment line="78">
                Our socket adaptor, if any                
            </comment>
            <comment line="81">
                -- End of fields protected by stateLock                
            </comment>
            <comment line="367">
                -- Native methods --                
            </comment>
            <comment line="369">
                Accepts a new connection, setting the given file descriptor to refer to                
            </comment>
            <comment line="370">
                the new socket and setting isaa[0] to the socket&apos;s remote address.                
            </comment>
            <comment line="371">
                Returns 1 on success, or IOStatus.UNAVAILABLE (if non-blocking and no                
            </comment>
            <comment line="372">
                connections are pending) or IOStatus.INTERRUPTED.                
            </comment>
            <comment line="373">
                                
            </comment>
            <implements interface="SelChImpl"/>
            <javadoc line="37">
                An implementation of ServerSocketChannels                
            </javadoc>
            <declaration name="nd" type="NativeDispatcher" line="47"/>
            <declaration name="fd" type="FileDescriptor" line="50"/>
            <declaration name="fdVal" type="int" line="54"/>
            <declaration name="thread" type="long" line="57"/>
            <declaration name="lock" type="Object" line="60"/>
            <declaration name="stateLock" type="Object" line="64"/>
            <declaration name="ST_UNINITIALIZED" type="int" line="69"/>
            <declaration name="ST_INUSE" type="int" line="70"/>
            <declaration name="ST_KILLED" type="int" line="71"/>
            <declaration name="state" type="int" line="72"/>
            <declaration name="localAddress" type="SocketAddress" line="75"/>
            <declaration name="socket" type="ServerSocket" line="78"/>
            <method name="ServerSocketChannelImpl" type="constructor" line="83">
                <params>
                    <param name="sp" type="SelectorProvider"/>
                </params>
            </method>
            <method name="ServerSocketChannelImpl" type="constructor" line="94">
                <params>
                    <param name="sp" type="SelectorProvider"/>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="bound" type="boolean"/>
                </params>
            </method>
            <method name="socket" type="ServerSocket" line="103">
                <scope line="104"/>
            </method>
            <method name="getLocalAddress" type="SocketAddress" line="112">
                <scope line="113"/>
            </method>
            <method name="setOption" type="ServerSocketChannel" line="123">
                <params>
                    <param name="name" type="SocketOption<T>"/>
                    <param name="value" type="T"/>
                </params>
                <comment line="133">
                    no options that require special handling                    
                </comment>
                <scope line="129"/>
            </method>
            <method name="getOption" type="T" line="143">
                <params>
                    <param name="name" type="SocketOption<T>"/>
                </params>
                <comment line="153">
                    no options that require special handling                    
                </comment>
                <scope line="149"/>
            </method>
            <class name="DefaultOptionsHolder" line="158">
                <declaration name="defaultOptions" type="Set&lt;SocketOption&lt;?&gt;&gt;" line="159"/>
                <method name="defaultOptions" type="Set<SocketOption<?>>" line="161">
                    <declaration name="set" type="HashSet&lt;SocketOption&lt;?&gt;&gt;" line="162"/>
                </method>
            </class>
            <method name="supportedOptions" type="Set<SocketOption<?>>" line="170"/>
            <method name="isBound" type="boolean" line="174">
                <scope line="175"/>
            </method>
            <method name="localAddress" type="SocketAddress" line="180">
                <scope line="181"/>
            </method>
            <method name="bind" type="ServerSocketChannel" line="187">
                <params>
                    <param name="local" type="SocketAddress"/>
                    <param name="backlog" type="int"/>
                </params>
                <scope line="188">
                    <declaration name="isa" type="InetSocketAddress" line="193"/>
                    <declaration name="sm" type="SecurityManager" line="195"/>
                    <scope line="201"/>
                </scope>
            </method>
            <method name="accept" type="SocketChannel" line="208">
                <scope line="209">
                    <declaration name="sc" type="SocketChannel" line="214"/>
                    <declaration name="n" type="int" line="216"/>
                    <declaration name="newfd" type="FileDescriptor" line="217"/>
                    <declaration name="isaa" type="InetSocketAddress[]" line="218"/>
                    <scope line="220">
                        <scope line="225"/>
                    </scope>
                    <scope line="231"/>
                    <declaration name="isa" type="InetSocketAddress" line="241"/>
                    <declaration name="sm" type="SecurityManager" line="243"/>
                    <scope line="244">
                        <scope line="245"/>
                        <scope line="248"/>
                    </scope>
                </scope>
            </method>
            <method name="implConfigureBlocking" type="void" line="258">
                <params>
                    <param name="block" type="boolean"/>
                </params>
            </method>
            <method name="implCloseSelectableChannel" type="void" line="262">
                <scope line="263">
                    <declaration name="th" type="long" line="265"/>
                </scope>
            </method>
            <method name="kill" type="void" line="273">
                <scope line="274">
                    <scope line="277"/>
                </scope>
            </method>
            <javadoc line="287">
                Translates native poll revent set into a ready operation set                
            </javadoc>
            <method name="translateReadyOps" type="boolean" line="291">
                <params>
                    <param name="ops" type="int"/>
                    <param name="initialOps" type="int"/>
                    <param name="sk" type="SelectionKeyImpl"/>
                </params>
                <comment line="292">
                    Do this just once, it synchronizes                    
                </comment>
                <comment line="297">
                    This should only happen if this channel is pre-closed while a                    
                </comment>
                <comment line="298">
                    selection operation is in progress                    
                </comment>
                <comment line="299">
                    ## Throw an error if this channel has not been pre-closed                    
                </comment>
                <declaration name="intOps" type="int" line="292"/>
                <declaration name="oldOps" type="int" line="293"/>
                <declaration name="newOps" type="int" line="294"/>
                <scope line="296"/>
                <scope line="304"/>
            </method>
            <method name="translateAndUpdateReadyOps" type="boolean" line="318">
                <params>
                    <param name="ops" type="int"/>
                    <param name="sk" type="SelectionKeyImpl"/>
                </params>
            </method>
            <method name="translateAndSetReadyOps" type="boolean" line="322">
                <params>
                    <param name="ops" type="int"/>
                    <param name="sk" type="SelectionKeyImpl"/>
                </params>
            </method>
            <javadoc line="326">
                Translates an interest operation set into a native poll event set                
            </javadoc>
            <method name="translateAndSetInterestOps" type="void" line="329">
                <params>
                    <param name="ops" type="int"/>
                    <param name="sk" type="SelectionKeyImpl"/>
                </params>
                <comment line="332">
                    Translate ops                    
                </comment>
                <comment line="335">
                    Place ops into pollfd array                    
                </comment>
                <declaration name="newOps" type="int" line="330"/>
            </method>
            <method name="getFD" type="FileDescriptor" line="339"/>
            <method name="getFDVal" type="int" line="343"/>
            <method name="toString" type="String" line="347">
                <declaration name="sb" type="StringBuffer" line="348"/>
                <scope line="353">
                    <scope line="354">
                        <scope line="355"/>
                        <scope line="357"/>
                    </scope>
                </scope>
            </method>
            <method name="accept0" type="int" line="373"/>
            <method name="initIDs" type="void" line="377"/>
            <scope line="379"/>
        </class>
    </source>