<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.nio.channels"/>
        <import package="java.net.InetAddress"/>
        <import package="java.net.NetworkInterface"/>
        <import package="java.io.IOException"/>
        <import package="java.util.HashSet"/>
        <class name="MembershipKeyImpl" line="34">
            <extends class="MembershipKey"/>
            <comment line="47">
                true when key is valid                
            </comment>
            <comment line="50">
                lock used when creating or accessing blockedSet                
            </comment>
            <comment line="53">
                set of source addresses that are blocked                
            </comment>
            <comment line="141">
                package-private                
            </comment>
            <javadoc line="34">
                MembershipKey implementation.                
            </javadoc>
            <declaration name="ch" type="MulticastChannel" line="41"/>
            <declaration name="group" type="InetAddress" line="42"/>
            <declaration name="interf" type="NetworkInterface" line="43"/>
            <declaration name="source" type="InetAddress" line="44"/>
            <declaration name="valid" type="boolean" line="47"/>
            <declaration name="stateLock" type="Object" line="50"/>
            <declaration name="blockedSet" type="HashSet&lt;InetAddress&gt;" line="53"/>
            <method name="MembershipKeyImpl" type="constructor" line="59">
                <params>
                    <param name="ch" type="MulticastChannel"/>
                    <param name="group" type="InetAddress"/>
                    <param name="interf" type="NetworkInterface"/>
                    <param name="source" type="InetAddress"/>
                </params>
            </method>
            <class name="Type4" line="66">
                <extends class="MembershipKeyImpl"/>
                <javadoc line="66">
                    MembershipKey will additional context for IPv4 membership                    
                </javadoc>
                <declaration name="groupAddress" type="int" line="70"/>
                <declaration name="interfAddress" type="int" line="71"/>
                <declaration name="sourceAddress" type="int" line="72"/>
                <method name="Type4" type="constructor" line="81">
                    <params>
                        <param name="ch" type="MulticastChannel"/>
                        <param name="group" type="InetAddress"/>
                        <param name="interf" type="NetworkInterface"/>
                        <param name="source" type="InetAddress"/>
                        <param name="groupAddress" type="int"/>
                        <param name="interfAddress" type="int"/>
                        <param name="sourceAddress" type="int"/>
                    </params>
                </method>
                <method name="groupAddress" type="int" line="88"/>
                <method name="interfaceAddress" type="int" line="92"/>
                <method name="source" type="int" line="96"/>
            </class>
            <class name="Type6" line="101">
                <extends class="MembershipKeyImpl"/>
                <javadoc line="101">
                    MembershipKey will additional context for IPv6 membership                    
                </javadoc>
                <declaration name="groupAddress" type="byte[]" line="105"/>
                <declaration name="index" type="int" line="106"/>
                <declaration name="sourceAddress" type="byte[]" line="107"/>
                <method name="Type6" type="constructor" line="116">
                    <params>
                        <param name="ch" type="MulticastChannel"/>
                        <param name="group" type="InetAddress"/>
                        <param name="interf" type="NetworkInterface"/>
                        <param name="source" type="InetAddress"/>
                        <param name="groupAddress" type="byte[]"/>
                        <param name="index" type="int"/>
                        <param name="sourceAddress" type="byte[]"/>
                    </params>
                </method>
                <method name="groupAddress" type="byte[]" line="123"/>
                <method name="index" type="int" line="127"/>
                <method name="source" type="byte[]" line="131"/>
            </class>
            <method name="isValid" type="boolean" line="136"/>
            <method name="invalidate" type="void" line="141"/>
            <method name="drop" type="void" line="145">
                <comment line="146">
                    delegate to channel                    
                </comment>
            </method>
            <method name="channel" type="MulticastChannel" line="151"/>
            <method name="group" type="InetAddress" line="156"/>
            <method name="networkInterface" type="NetworkInterface" line="161"/>
            <method name="sourceAddress" type="InetAddress" line="166"/>
            <method name="block" type="MembershipKey" line="173">
                <params>
                    <param name="toBlock" type="InetAddress"/>
                </params>
                <comment line="179">
                    already blocked, nothing to do                    
                </comment>
                <comment line="185">
                    created blocked set if required and add source address                    
                </comment>
                <scope line="177">
                    <scope line="178"/>
                </scope>
            </method>
            <method name="unblock" type="MembershipKey" line="194">
                <params>
                    <param name="toUnblock" type="InetAddress"/>
                </params>
                <scope line="195"/>
            </method>
            <method name="toString" type="String" line="207">
                <declaration name="sb" type="StringBuilder" line="208"/>
                <scope line="213"/>
            </method>
        </class>
    </source>