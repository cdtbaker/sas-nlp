<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.util.concurrent"/>
        <import package="java.security.AccessController"/>
        <import package="sun.security.action.GetPropertyAction"/>
        <import package="sun.security.action.GetIntegerAction"/>
        <class name="ThreadPool" line="33">
            <comment line="54">
                indicates if thread pool is fixed size                
            </comment>
            <comment line="57">
                indicates the pool size (for a fixed thread pool configuratin this is
                 the maximum pool size; for other thread pools it is the initial size)                
            </comment>
            <comment line="90">
                return the default (system-wide) thread pool                
            </comment>
            <comment line="95">
                create thread using default settings (configured by system properties)                
            </comment>
            <comment line="114">
                create using given parameters                
            </comment>
            <comment line="122">
                wrap a user-supplied executor                
            </comment>
            <javadoc line="33">
                Encapsulates a thread pool associated with a channel group.                
            </javadoc>
            <declaration name="DEFAULT_THREAD_POOL_THREAD_FACTORY" type="String" line="38"/>
            <declaration name="DEFAULT_THREAD_POOL_INITIAL_SIZE" type="String" line="40"/>
            <declaration name="defaultThreadFactory" type="ThreadFactory" line="42"/>
            <anonymous_class line="42">
                <method name="newThread" type="Thread" line="44">
                    <params>
                        <param name="r" type="Runnable"/>
                    </params>
                    <declaration name="t" type="Thread" line="45"/>
                </method>
            </anonymous_class>
            <declaration name="executor" type="ExecutorService" line="51"/>
            <declaration name="isFixed" type="boolean" line="54"/>
            <declaration name="poolSize" type="int" line="58"/>
            <method name="ThreadPool" type="constructor" line="63">
                <params>
                    <param name="executor" type="ExecutorService"/>
                    <param name="isFixed" type="boolean"/>
                    <param name="poolSize" type="int"/>
                </params>
            </method>
            <method name="executor" type="ExecutorService" line="69"/>
            <method name="isFixedThreadPool" type="boolean" line="73"/>
            <method name="poolSize" type="int" line="77"/>
            <method name="defaultThreadFactory" type="ThreadFactory" line="81"/>
            <class name="DefaultThreadPoolHolder" line="85">
                <declaration name="defaultThreadPool" type="ThreadPool" line="86"/>
            </class>
            <method name="getDefault" type="ThreadPool" line="90"/>
            <method name="createDefault" type="ThreadPool" line="95">
                <comment line="97">
                    default the number of fixed threads to the hardware core count                    
                </comment>
                <comment line="101">
                    default to thread factory that creates daemon threads                    
                </comment>
                <comment line="105">
                    create thread pool                    
                </comment>
                <declaration name="initialSize" type="int" line="97"/>
                <declaration name="threadFactory" type="ThreadFactory" line="101"/>
                <declaration name="executor" type="ExecutorService" line="105"/>
            </method>
            <method name="create" type="ThreadPool" line="114">
                <params>
                    <param name="nThreads" type="int"/>
                    <param name="factory" type="ThreadFactory"/>
                </params>
                <declaration name="executor" type="ExecutorService" line="117"/>
            </method>
            <method name="wrap" type="ThreadPool" line="122">
                <params>
                    <param name="executor" type="ExecutorService"/>
                    <param name="initialSize" type="int"/>
                </params>
                <comment line="126">
                    attempt to check if cached thread pool                    
                </comment>
                <comment line="133">
                    not a cached thread pool so ignore initial size                    
                </comment>
                <comment line="138">
                    some other type of thread pool                    
                </comment>
                <scope line="126">
                    <declaration name="max" type="int" line="127"/>
                    <scope line="128">
                        <scope line="129"/>
                        <scope line="131"/>
                    </scope>
                </scope>
                <scope line="136"/>
            </method>
            <method name="getDefaultThreadPoolInitialSize" type="int" line="144">
                <declaration name="propValue" type="String" line="145"/>
                <scope line="147">
                    <scope line="148"/>
                    <scope line="150"/>
                </scope>
            </method>
            <method name="getDefaultThreadPoolThreadFactory" type="ThreadFactory" line="158">
                <declaration name="propValue" type="String" line="159"/>
                <scope line="161">
                    <scope line="162">
                        <declaration name="c" type="Class&lt;?&gt;" line="163"/>
                    </scope>
                    <scope line="166"/>
                    <scope line="168"/>
                    <scope line="170"/>
                </scope>
            </method>
        </class>
    </source>