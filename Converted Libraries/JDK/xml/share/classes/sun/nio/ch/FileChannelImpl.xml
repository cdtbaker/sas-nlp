<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.io.FileDescriptor"/>
        <import package="java.io.IOException"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.MappedByteBuffer"/>
        <import package="java.nio.channels"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.List"/>
        <import package="java.security.AccessController"/>
        <import package="sun.misc.Cleaner"/>
        <import package="sun.security.action.GetPropertyAction"/>
        <class name="FileChannelImpl" line="12">
            <extends class="FileChannel"/>
            <declaration name="allocationGranularity" type="long" line="13"/>
            <declaration name="nd" type="FileDispatcher" line="14"/>
            <declaration name="fd" type="FileDescriptor" line="15"/>
            <declaration name="writable" type="boolean" line="16"/>
            <declaration name="readable" type="boolean" line="17"/>
            <declaration name="append" type="boolean" line="18"/>
            <declaration name="parent" type="Object" line="19"/>
            <declaration name="threads" type="NativeThreadSet" line="20"/>
            <declaration name="positionLock" type="Object" line="21"/>
            <method name="FileChannelImpl" type="constructor" line="22">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="readable" type="boolean"/>
                    <param name="writable" type="boolean"/>
                    <param name="append" type="boolean"/>
                    <param name="parent" type="Object"/>
                </params>
            </method>
            <method name="open" type="FileChannel" line="30">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="readable" type="boolean"/>
                    <param name="writable" type="boolean"/>
                    <param name="parent" type="Object"/>
                </params>
            </method>
            <method name="open" type="FileChannel" line="33">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="readable" type="boolean"/>
                    <param name="writable" type="boolean"/>
                    <param name="append" type="boolean"/>
                    <param name="parent" type="Object"/>
                </params>
            </method>
            <method name="ensureOpen" type="void" line="36"/>
            <method name="implCloseChannel" type="void" line="39">
                <scope line="40">
                    <scope line="41">
                        <scope line="42">
                            <scope line="43"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="52"/>
                <scope line="55"/>
            </method>
            <method name="read" type="int" line="59">
                <params>
                    <param name="dst" type="ByteBuffer"/>
                </params>
            </method>
            <method name="read" type="long" line="82">
                <params>
                    <param name="dsts" type="ByteBuffer[]"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                </params>
            </method>
            <method name="write" type="int" line="106">
                <params>
                    <param name="src" type="ByteBuffer"/>
                </params>
            </method>
            <method name="write" type="long" line="129">
                <params>
                    <param name="srcs" type="ByteBuffer[]"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                </params>
            </method>
            <method name="position" type="long" line="153"/>
            <method name="position" type="FileChannel" line="175">
                <params>
                    <param name="newPosition" type="long"/>
                </params>
            </method>
            <method name="size" type="long" line="198"/>
            <method name="truncate" type="FileChannel" line="220">
                <params>
                    <param name="size" type="long"/>
                </params>
            </method>
            <method name="force" type="void" line="258">
                <params>
                    <param name="metaData" type="boolean"/>
                </params>
            </method>
            <declaration name="transferSupported" type="boolean" line="277"/>
            <declaration name="pipeSupported" type="boolean" line="278"/>
            <declaration name="fileSupported" type="boolean" line="279"/>
            <method name="transferToDirectly" type="long" line="280">
                <params>
                    <param name="position" type="long"/>
                    <param name="icount" type="int"/>
                    <param name="target" type="WritableByteChannel"/>
                </params>
                <declaration name="targetFD" type="FileDescriptor" line="282"/>
                <scope line="283"/>
                <scope line="287"/>
                <declaration name="thisFDVal" type="int" line="292"/>
                <declaration name="targetFDVal" type="int" line="293"/>
                <declaration name="n" type="long" line="295"/>
                <declaration name="ti" type="int" line="296"/>
                <scope line="297">
                    <scope line="301"/>
                    <scope line="305"/>
                    <scope line="310"/>
                </scope>
                <scope line="316"/>
            </method>
            <declaration name="MAPPED_TRANSFER_SIZE" type="long" line="321"/>
            <method name="transferToTrustedChannel" type="long" line="322">
                <params>
                    <param name="position" type="long"/>
                    <param name="count" type="long"/>
                    <param name="target" type="WritableByteChannel"/>
                </params>
            </method>
            <method name="transferToArbitraryChannel" type="long" line="361">
                <params>
                    <param name="position" type="long"/>
                    <param name="icount" type="int"/>
                    <param name="target" type="WritableByteChannel"/>
                </params>
                <declaration name="c" type="int" line="362"/>
                <declaration name="bb" type="ByteBuffer" line="363"/>
                <declaration name="tw" type="long" line="364"/>
                <declaration name="pos" type="long" line="365"/>
                <scope line="366">
                    <scope line="368">
                        <declaration name="nr" type="int" line="370"/>
                        <declaration name="nw" type="int" line="373"/>
                    </scope>
                </scope>
                <scope line="381"/>
                <scope line="385"/>
            </method>
            <method name="transferTo" type="long" line="389">
                <params>
                    <param name="position" type="long"/>
                    <param name="count" type="long"/>
                    <param name="target" type="WritableByteChannel"/>
                </params>
                <declaration name="sz" type="long" line="395"/>
                <declaration name="icount" type="int" line="397"/>
                <declaration name="n" type="long" line="399"/>
            </method>
            <method name="transferFromFileChannel" type="long" line="404">
                <params>
                    <param name="src" type="FileChannelImpl"/>
                    <param name="position" type="long"/>
                    <param name="count" type="long"/>
                </params>
            </method>
            <declaration name="TRANSFER_SIZE" type="int" line="434"/>
            <method name="transferFromArbitraryChannel" type="long" line="435">
                <params>
                    <param name="src" type="ReadableByteChannel"/>
                    <param name="position" type="long"/>
                    <param name="count" type="long"/>
                </params>
                <declaration name="c" type="int" line="436"/>
                <declaration name="bb" type="ByteBuffer" line="437"/>
                <declaration name="tw" type="long" line="438"/>
                <declaration name="pos" type="long" line="439"/>
                <scope line="440">
                    <scope line="442">
                        <declaration name="nr" type="int" line="444"/>
                        <declaration name="nw" type="int" line="447"/>
                    </scope>
                </scope>
                <scope line="455"/>
                <scope line="459"/>
            </method>
            <method name="transferFrom" type="long" line="463">
                <params>
                    <param name="src" type="ReadableByteChannel"/>
                    <param name="position" type="long"/>
                    <param name="count" type="long"/>
                </params>
            </method>
            <method name="read" type="int" line="472">
                <params>
                    <param name="dst" type="ByteBuffer"/>
                    <param name="position" type="long"/>
                </params>
            </method>
            <method name="write" type="int" line="495">
                <params>
                    <param name="src" type="ByteBuffer"/>
                    <param name="position" type="long"/>
                </params>
            </method>
            <class name="Unmapper" line="518">
                <implements interface="Runnable"/>
                <declaration name="nd" type="NativeDispatcher" line="519"/>
                <declaration name="count" type="int" line="520"/>
                <declaration name="totalSize" type="long" line="521"/>
                <declaration name="totalCapacity" type="long" line="522"/>
                <declaration name="address" type="long" line="523"/>
                <declaration name="size" type="long" line="524"/>
                <declaration name="cap" type="int" line="525"/>
                <declaration name="fd" type="FileDescriptor" line="526"/>
                <method name="Unmapper" type="constructor" line="527">
                    <params>
                        <param name="address" type="long"/>
                        <param name="size" type="long"/>
                        <param name="cap" type="int"/>
                        <param name="fd" type="FileDescriptor"/>
                    </params>
                    <scope line="533"/>
                </method>
                <method name="run" type="void" line="539">
                    <scope line="543">
                        <scope line="544"/>
                        <scope line="547"/>
                    </scope>
                    <scope line="550"/>
                </method>
            </class>
            <method name="unmap" type="void" line="557">
                <params>
                    <param name="bb" type="MappedByteBuffer"/>
                </params>
                <declaration name="cl" type="Cleaner" line="558"/>
            </method>
            <declaration name="MAP_RO" type="int" line="561"/>
            <declaration name="MAP_RW" type="int" line="562"/>
            <declaration name="MAP_PV" type="int" line="563"/>
            <method name="map" type="MappedByteBuffer" line="564">
                <params>
                    <param name="mode" type="MapMode"/>
                    <param name="position" type="long"/>
                    <param name="size" type="long"/>
                </params>
                <declaration name="imode" type="int" line="570"/>
                <declaration name="addr" type="long" line="577"/>
                <declaration name="ti" type="int" line="578"/>
                <scope line="579">
                    <scope line="583">
                        <scope line="584"/>
                        <declaration name="rv" type="int" line="587"/>
                        <scope line="588"/>
                    </scope>
                    <scope line="593">
                        <declaration name="dummy" type="FileDescriptor" line="595"/>
                    </scope>
                    <declaration name="pagePosition" type="int" line="599"/>
                    <declaration name="mapPosition" type="long" line="600"/>
                    <declaration name="mapSize" type="long" line="601"/>
                    <scope line="602"/>
                    <scope line="605">
                        <scope line="607"/>
                        <scope line="610"/>
                        <scope line="613"/>
                        <scope line="616"/>
                    </scope>
                    <declaration name="mfd" type="FileDescriptor" line="620"/>
                    <scope line="621"/>
                    <scope line="624"/>
                    <declaration name="isize" type="int" line="630"/>
                    <declaration name="um" type="Unmapper" line="631"/>
                    <scope line="632"/>
                    <scope line="635"/>
                </scope>
                <scope line="639"/>
            </method>
            <javadoc line="644">
                Invoked by sun.management.ManagementFactoryHelper to create the management
                  interface for mapped buffers.                
            </javadoc>
            <method name="getMappedBufferPool" type="sun.misc.JavaNioAccess.BufferPool" line="648">
                <anonymous_class line="649">
                    <method name="getName" type="String" line="650"/>
                    <method name="getCount" type="long" line="653"/>
                    <method name="getTotalCapacity" type="long" line="656"/>
                    <method name="getMemoryUsed" type="long" line="659"/>
                </anonymous_class>
            </method>
            <declaration name="fileLockTable" type="FileLockTable" line="665"/>
            <declaration name="isSharedFileLockTable" type="boolean" line="666"/>
            <declaration name="propertyChecked" type="boolean" line="667"/>
            <method name="isSharedFileLockTable" type="boolean" line="668">
                <scope line="669">
                    <scope line="670">
                        <scope line="671">
                            <declaration name="value" type="String" line="672"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="fileLockTable" type="FileLockTable" line="680">
                <scope line="681">
                    <scope line="682">
                        <scope line="683">
                            <scope line="684">
                                <declaration name="ti" type="int" line="685"/>
                                <scope line="686"/>
                                <scope line="690"/>
                            </scope>
                            <scope line="694"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="lock" type="FileLock" line="702">
                <params>
                    <param name="position" type="long"/>
                    <param name="size" type="long"/>
                    <param name="shared" type="boolean"/>
                </params>
                <declaration name="fli" type="FileLockImpl" line="706"/>
                <declaration name="flt" type="FileLockTable" line="707"/>
                <declaration name="completed" type="boolean" line="709"/>
                <declaration name="ti" type="int" line="710"/>
                <scope line="711">
                    <declaration name="n" type="int" line="715"/>
                    <scope line="716"/>
                    <scope line="720">
                        <scope line="721">
                            <declaration name="shared" type="assert" line="722"/>
                            <declaration name="fli2" type="FileLockImpl" line="723"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="730">
                    <scope line="733"/>
                    <scope line="736"/>
                </scope>
            </method>
            <method name="tryLock" type="FileLock" line="742">
                <params>
                    <param name="position" type="long"/>
                    <param name="size" type="long"/>
                    <param name="shared" type="boolean"/>
                </params>
                <declaration name="fli" type="FileLockImpl" line="746"/>
                <declaration name="flt" type="FileLockTable" line="747"/>
                <declaration name="result" type="int" line="749"/>
                <declaration name="ti" type="int" line="750"/>
                <scope line="751">
                    <scope line="752"/>
                    <scope line="756"/>
                    <scope line="760"/>
                    <scope line="764">
                        <declaration name="shared" type="assert" line="765"/>
                        <declaration name="fli2" type="FileLockImpl" line="766"/>
                    </scope>
                </scope>
                <scope line="772"/>
            </method>
            <method name="release" type="void" line="776">
                <params>
                    <param name="fli" type="FileLockImpl"/>
                </params>
            </method>
            <class name="SimpleFileLockTable" line="788">
                <extends class="FileLockTable"/>
                <javadoc line="788">
                    A simple file lock table that maintains a list of FileLocks obtained by a
                      FileChannel. Use to get 1.4/5.0 behaviour.                    
                </javadoc>
                <declaration name="lockList" type="List&lt;FileLock&gt;" line="793"/>
                <method name="SimpleFileLockTable" type="constructor" line="794"/>
                <method name="checkList" type="void" line="796">
                    <params>
                        <param name="position" type="long"/>
                        <param name="size" type="long"/>
                    </params>
                </method>
                <method name="add" type="void" line="804">
                    <params>
                        <param name="fl" type="FileLock"/>
                    </params>
                    <scope line="805"/>
                </method>
                <method name="remove" type="void" line="810">
                    <params>
                        <param name="fl" type="FileLock"/>
                    </params>
                    <scope line="811"/>
                </method>
                <method name="removeAll" type="List<FileLock>" line="815">
                    <scope line="816">
                        <declaration name="result" type="List&lt;FileLock&gt;" line="817"/>
                    </scope>
                </method>
                <method name="replace" type="void" line="822">
                    <params>
                        <param name="fl1" type="FileLock"/>
                        <param name="fl2" type="FileLock"/>
                    </params>
                    <scope line="823"/>
                </method>
            </class>
            <method name="map0" type="long" line="829"/>
            <method name="unmap0" type="int" line="830"/>
            <method name="transferTo0" type="long" line="831"/>
            <method name="position0" type="long" line="832"/>
            <method name="initIDs" type="long" line="833"/>
            <scope line="834"/>
        </class>
    </source>