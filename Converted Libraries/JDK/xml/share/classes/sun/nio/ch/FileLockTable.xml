<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.nio.channels"/>
        <import package="java.util"/>
        <import package="java.util.concurrent.ConcurrentHashMap"/>
        <import package="java.lang.ref"/>
        <import package="java.io.FileDescriptor"/>
        <import package="java.io.IOException"/>
        <class name="FileLockTable" line="8">
            <method name="FileLockTable" type="constructor" line="9"/>
            <javadoc line="11">
                Creates and returns a file lock table for a channel that is connected to
                  the a system-wide map of all file locks for the Java virtual machine.                
            </javadoc>
            <method name="newSharedFileLockTable" type="FileLockTable" line="15">
                <params>
                    <param name="channel" type="Channel"/>
                    <param name="fd" type="FileDescriptor"/>
                </params>
            </method>
            <method name="add" type="void" line="18"/>
            <javadoc line="18">
                Adds a file lock to the table.                
                <throws>
                    OverlappingFileLockException if the file lock overlaps
                      with an existing file lock in the table                    
                </throws>
            </javadoc>
            <method name="remove" type="void" line="24"/>
            <javadoc line="24">
                Remove an existing file lock from the table.                
            </javadoc>
            <method name="removeAll" type="List&lt;FileLock&gt;" line="28"/>
            <javadoc line="28">
                Removes all file locks from the table.                
                <return>
                    The list of file locks removed                    
                </return>
            </javadoc>
            <method name="replace" type="void" line="33"/>
            <javadoc line="33">
                Replaces an existing file lock in the table.                
            </javadoc>
        </class>
        <class name="SharedFileLockTable" line="38">
            <extends class="FileLockTable"/>
            <javadoc line="38">
                A file lock table that is over a system-wide map of all file locks.                
            </javadoc>
            <class name="FileLockReference" line="42">
                <extends class="WeakReference">
                    <type_params>
                        <type_param name="FileLock"/>
                    </type_params>
                </extends>
                <javadoc line="42">
                    A weak reference to a FileLock.
                      &lt;p&gt;
                      SharedFileLockTable uses a list of file lock references to avoid keeping the
                      FileLock (and FileChannel) alive.                    
                </javadoc>
                <declaration name="fileKey" type="FileKey" line="49"/>
                <method name="FileLockReference" type="constructor" line="50">
                    <params>
                        <param name="referent" type="FileLock"/>
                        <param name="queue" type="ReferenceQueue&lt;FileLock&gt;"/>
                        <param name="key" type="FileKey"/>
                    </params>
                </method>
                <method name="fileKey" type="FileKey" line="54"/>
            </class>
            <declaration name="lockMap" type="ConcurrentHashMap&amp;lt;FileKey,List&amp;lt;FileLockReference&amp;gt;&amp;gt;" line="58"/>
            <declaration name="queue" type="ReferenceQueue&amp;lt;FileLock&amp;gt;" line="59"/>
            <declaration name="channel" type="Channel" line="60"/>
            <declaration name="fileKey" type="FileKey" line="61"/>
            <method name="SharedFileLockTable" type="constructor" line="62">
                <params>
                    <param name="channel" type="Channel"/>
                    <param name="fd" type="FileDescriptor"/>
                </params>
            </method>
            <method name="add" type="void" line="66">
                <params>
                    <param name="fl" type="FileLock"/>
                </params>
                <declaration name="list" type="List&amp;lt;FileLockReference&amp;gt;" line="67"/>
                <scope line="68">
                    <scope line="69">
                        <declaration name="prev" type="List&amp;lt;FileLockReference&amp;gt;" line="71"/>
                        <scope line="72">
                            <scope line="74"/>
                        </scope>
                    </scope>
                    <scope line="81">
                        <declaration name="current" type="List&amp;lt;FileLockReference&amp;gt;" line="82"/>
                        <scope line="83"/>
                    </scope>
                </scope>
            </method>
            <method name="removeKeyIfEmpty" type="void" line="93">
                <params>
                    <param name="fk" type="FileKey"/>
                    <param name="list" type="List&lt;FileLockReference&gt;"/>
                </params>
            </method>
            <method name="remove" type="void" line="100">
                <params>
                    <param name="fl" type="FileLock"/>
                </params>
            </method>
            <method name="removeAll" type="List&lt;FileLock&gt;" line="119">
                <declaration name="result" type="List&amp;lt;FileLock&amp;gt;" line="120"/>
                <declaration name="list" type="List&amp;lt;FileLockReference&amp;gt;" line="121"/>
                <scope line="122">
                    <scope line="123">
                        <declaration name="index" type="int" line="124"/>
                        <scope line="125">
                            <declaration name="ref" type="FileLockReference" line="126"/>
                            <declaration name="lock" type="FileLock" line="127"/>
                            <scope line="128"/>
                            <scope line="133"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="replace" type="void" line="142">
                <params>
                    <param name="fromLock" type="FileLock"/>
                    <param name="toLock" type="FileLock"/>
                </params>
            </method>
            <method name="checkList" type="void" line="157">
                <params>
                    <param name="list" type="List&lt;FileLockReference&gt;"/>
                    <param name="position" type="long"/>
                    <param name="size" type="long"/>
                </params>
            </method>
            <method name="removeStaleEntries" type="void" line="164">
                <declaration name="ref" type="FileLockReference" line="165"/>
                <scope line="166">
                    <declaration name="fk" type="FileKey" line="167"/>
                    <declaration name="list" type="List&amp;lt;FileLockReference&amp;gt;" line="168"/>
                    <scope line="169">
                        <scope line="170"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>