<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.io.FileDescriptor"/>
        <import package="java.io.IOException"/>
        <import package="java.nio.ByteBuffer"/>
        <class name="IOUtil" line="33">
            <comment line="40">
                No instantiation                
            </comment>
            <javadoc line="33">
                File-descriptor based I/O utilities that are shared by NIO classes.                
            </javadoc>
            <method name="IOUtil" type="constructor" line="39"/>
            <method name="write" type="int" line="44">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="src" type="ByteBuffer"/>
                    <param name="position" type="long"/>
                    <param name="nd" type="NativeDispatcher"/>
                    <param name="lock" type="Object"/>
                </params>
                <comment line="49">
                    Substitute a native buffer                    
                </comment>
                <comment line="58">
                    Do not update src until we see how many bytes were written                    
                </comment>
                <comment line="63">
                    now update src                    
                </comment>
                <declaration name="pos" type="int" line="49"/>
                <declaration name="lim" type="int" line="50"/>
                <declaration name="rem" type="int" line="52"/>
                <declaration name="bb" type="ByteBuffer" line="53"/>
                <scope line="54">
                    <declaration name="n" type="int" line="60"/>
                    <scope line="61"/>
                </scope>
                <scope line="66"/>
            </method>
            <method name="writeFromNativeBuffer" type="int" line="75">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="position" type="long"/>
                    <param name="nd" type="NativeDispatcher"/>
                    <param name="lock" type="Object"/>
                </params>
                <declaration name="pos" type="int" line="76"/>
                <declaration name="lim" type="int" line="77"/>
                <declaration name="rem" type="int" line="79"/>
                <declaration name="written" type="int" line="81"/>
                <scope line="84"/>
                <scope line="88"/>
            </method>
            <method name="write" type="long" line="98">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="bufs" type="ByteBuffer[]"/>
                    <param name="nd" type="NativeDispatcher"/>
                </params>
            </method>
            <method name="write" type="long" line="105">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="bufs" type="ByteBuffer[]"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                    <param name="nd" type="NativeDispatcher"/>
                </params>
                <comment line="113">
                    Iterate over buffers to populate native iovec array.                    
                </comment>
                <comment line="124">
                    allocate shadow buffer to ensure I/O is done with direct buffer                    
                </comment>
                <comment line="130">
                    temporarily restore position in user buffer                    
                </comment>
                <comment line="145">
                    Notify the buffers how many bytes were taken                    
                </comment>
                <comment line="156">
                    return shadow buffers to buffer pool                    
                </comment>
                <comment line="167">
                    if an error occurred then clear refs to buffers and return any shadow
                     buffers to cache                    
                </comment>
                <declaration name="vec" type="IOVecWrapper" line="106"/>
                <declaration name="completed" type="boolean" line="108"/>
                <declaration name="iov_len" type="int" line="109"/>
                <scope line="110">
                    <declaration name="count" type="int" line="113"/>
                    <scope line="114">
                        <declaration name="buf" type="ByteBuffer" line="115"/>
                        <declaration name="pos" type="int" line="116"/>
                        <declaration name="lim" type="int" line="117"/>
                        <declaration name="rem" type="int" line="119"/>
                        <scope line="120">
                            <scope line="124">
                                <declaration name="shadow" type="ByteBuffer" line="125"/>
                            </scope>
                        </scope>
                    </scope>
                    <declaration name="bytesWritten" type="long" line="142"/>
                    <declaration name="left" type="long" line="145"/>
                    <scope line="146">
                        <scope line="147">
                            <declaration name="buf" type="ByteBuffer" line="148"/>
                            <declaration name="pos" type="int" line="149"/>
                            <declaration name="rem" type="int" line="150"/>
                            <declaration name="n" type="int" line="151"/>
                        </scope>
                        <declaration name="shadow" type="ByteBuffer" line="156"/>
                    </scope>
                </scope>
                <scope line="165">
                    <scope line="168">
                        <scope line="169">
                            <declaration name="shadow" type="ByteBuffer" line="170"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="read" type="int" line="182">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="dst" type="ByteBuffer"/>
                    <param name="position" type="long"/>
                    <param name="nd" type="NativeDispatcher"/>
                    <param name="lock" type="Object"/>
                </params>
                <comment line="189">
                    Substitute a native buffer                    
                </comment>
                <declaration name="bb" type="ByteBuffer" line="189"/>
                <scope line="190">
                    <declaration name="n" type="int" line="191"/>
                </scope>
                <scope line="196"/>
            </method>
            <method name="readIntoNativeBuffer" type="int" line="205">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="position" type="long"/>
                    <param name="nd" type="NativeDispatcher"/>
                    <param name="lock" type="Object"/>
                </params>
                <declaration name="pos" type="int" line="206"/>
                <declaration name="lim" type="int" line="207"/>
                <declaration name="rem" type="int" line="209"/>
                <declaration name="n" type="int" line="213"/>
                <scope line="214"/>
                <scope line="217"/>
            </method>
            <method name="read" type="long" line="227">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="bufs" type="ByteBuffer[]"/>
                    <param name="nd" type="NativeDispatcher"/>
                </params>
            </method>
            <method name="read" type="long" line="234">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="bufs" type="ByteBuffer[]"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                    <param name="nd" type="NativeDispatcher"/>
                </params>
                <comment line="242">
                    Iterate over buffers to populate native iovec array.                    
                </comment>
                <comment line="256">
                    allocate shadow buffer to ensure I/O is done with direct buffer                    
                </comment>
                <comment line="274">
                    Notify the buffers how many bytes were read                    
                </comment>
                <comment line="300">
                    if an error occurred then clear refs to buffers and return any shadow
                     buffers to cache                    
                </comment>
                <declaration name="vec" type="IOVecWrapper" line="235"/>
                <declaration name="completed" type="boolean" line="237"/>
                <declaration name="iov_len" type="int" line="238"/>
                <scope line="239">
                    <declaration name="count" type="int" line="242"/>
                    <scope line="243">
                        <declaration name="buf" type="ByteBuffer" line="244"/>
                        <declaration name="pos" type="int" line="247"/>
                        <declaration name="lim" type="int" line="248"/>
                        <declaration name="rem" type="int" line="250"/>
                        <scope line="252">
                            <scope line="256">
                                <declaration name="shadow" type="ByteBuffer" line="257"/>
                            </scope>
                        </scope>
                    </scope>
                    <declaration name="bytesRead" type="long" line="271"/>
                    <declaration name="left" type="long" line="274"/>
                    <scope line="275">
                        <declaration name="shadow" type="ByteBuffer" line="276"/>
                        <scope line="277">
                            <declaration name="buf" type="ByteBuffer" line="278"/>
                            <declaration name="rem" type="int" line="279"/>
                            <declaration name="n" type="int" line="280"/>
                            <scope line="281">
                                <declaration name="pos" type="int" line="282"/>
                            </scope>
                            <scope line="284"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="298">
                    <scope line="301">
                        <scope line="302">
                            <declaration name="shadow" type="ByteBuffer" line="303"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="newFD" type="FileDescriptor" line="312">
                <params>
                    <param name="i" type="int"/>
                </params>
                <declaration name="fd" type="FileDescriptor" line="313"/>
            </method>
            <method name="randomBytes" type="boolean" line="318"/>
            <method name="makePipe" type="long" line="320"/>
            <javadoc line="320">
                Returns two file descriptors for a pipe encoded in a long.
                  The read end of the pipe is returned in the high 32 bits,
                  while the write end is returned in the low 32 bits.                
            </javadoc>
            <method name="drain" type="boolean" line="327"/>
            <method name="configureBlocking" type="void" line="329"/>
            <method name="fdVal" type="int" line="332"/>
            <method name="setfdVal" type="void" line="334"/>
            <method name="initIDs" type="void" line="336"/>
            <scope line="338"/>
        </class>
    </source>