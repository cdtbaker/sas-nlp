<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.nio.channels"/>
        <import package="java.util.concurrent"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.io.FileDescriptor"/>
        <import package="java.io.IOException"/>
        <class name="SimpleAsynchronousFileChannelImpl" line="9">
            <extends class="AsynchronousFileChannelImpl"/>
            <javadoc line="9">
                &quot;Portable&quot; implementation of AsynchronousFileChannel for use on operating
                  systems that don&apos;t support asynchronous file I/O.                
            </javadoc>
            <class name="DefaultExecutorHolder" line="14">
                <declaration name="defaultExecutor" type="ExecutorService" line="15"/>
            </class>
            <declaration name="nd" type="FileDispatcher" line="17"/>
            <declaration name="threads" type="NativeThreadSet" line="18"/>
            <method name="SimpleAsynchronousFileChannelImpl" type="constructor" line="19">
                <params>
                    <param name="fdObj" type="FileDescriptor"/>
                    <param name="reading" type="boolean"/>
                    <param name="writing" type="boolean"/>
                    <param name="executor" type="ExecutorService"/>
                </params>
            </method>
            <method name="open" type="AsynchronousFileChannel" line="22">
                <params>
                    <param name="fdo" type="FileDescriptor"/>
                    <param name="reading" type="boolean"/>
                    <param name="writing" type="boolean"/>
                    <param name="pool" type="ThreadPool"/>
                </params>
                <declaration name="executor" type="ExecutorService" line="23"/>
            </method>
            <method name="close" type="void" line="26">
                <scope line="27"/>
                <scope line="35"/>
                <scope line="37"/>
            </method>
            <method name="size" type="long" line="42">
                <declaration name="ti" type="int" line="43"/>
                <scope line="44">
                    <declaration name="n" type="long" line="45"/>
                    <scope line="46">
                        <scope line="48"/>
                    </scope>
                    <scope line="54"/>
                </scope>
                <scope line="58"/>
            </method>
            <method name="truncate" type="AsynchronousFileChannel" line="62">
                <params>
                    <param name="size" type="long"/>
                </params>
                <declaration name="ti" type="int" line="65"/>
                <scope line="66">
                    <declaration name="n" type="long" line="67"/>
                    <scope line="68">
                        <scope line="70"/>
                        <scope line="74">
                            <scope line="75"/>
                        </scope>
                    </scope>
                    <scope line="82"/>
                </scope>
                <scope line="86"/>
            </method>
            <method name="force" type="void" line="90">
                <params>
                    <param name="metaData" type="boolean"/>
                </params>
                <declaration name="ti" type="int" line="91"/>
                <scope line="92">
                    <declaration name="n" type="int" line="93"/>
                    <scope line="94">
                        <scope line="96"/>
                    </scope>
                    <scope line="101"/>
                </scope>
                <scope line="105"/>
            </method>
            <method name="implLock" type="Future&lt;FileLock&gt;" line="109">
                <params>
                    <param name="position" type="long"/>
                    <param name="size" type="long"/>
                    <param name="shared" type="boolean"/>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler&lt;FileLock,? super A&gt;"/>
                </params>
                <declaration name="fli" type="FileLockImpl" line="112"/>
                <scope line="113">
                    <declaration name="exc" type="Throwable" line="114"/>
                </scope>
                <declaration name="result" type="PendingFuture&amp;lt;FileLock,A&amp;gt;" line="119"/>
                <anonymous_class line="120">
                    <method name="run" type="void" line="121">
                        <declaration name="exc" type="Throwable" line="122"/>
                        <declaration name="ti" type="int" line="123"/>
                        <scope line="124">
                            <declaration name="n" type="int" line="125"/>
                            <scope line="126">
                                <scope line="128"/>
                                <scope line="132"/>
                            </scope>
                            <scope line="136"/>
                            <scope line="141"/>
                        </scope>
                        <scope line="145"/>
                        <scope line="148"/>
                        <scope line="151"/>
                    </method>
                </anonymous_class>
                <declaration name="task" type="Runnable" line="120"/>
                <declaration name="executed" type="boolean" line="157"/>
                <scope line="158"/>
                <scope line="162">
                    <scope line="163"/>
                </scope>
            </method>
            <method name="tryLock" type="FileLock" line="169">
                <params>
                    <param name="position" type="long"/>
                    <param name="size" type="long"/>
                    <param name="shared" type="boolean"/>
                </params>
                <declaration name="fli" type="FileLockImpl" line="172"/>
                <declaration name="ti" type="int" line="174"/>
                <declaration name="gotLock" type="boolean" line="175"/>
                <scope line="176">
                    <declaration name="n" type="int" line="178"/>
                    <scope line="179"/>
                    <scope line="183"/>
                </scope>
                <scope line="191"/>
            </method>
            <method name="implRelease" type="void" line="197">
                <params>
                    <param name="fli" type="FileLockImpl"/>
                </params>
            </method>
            <method name="implRead" type="Future&lt;Integer&gt;" line="200">
                <params>
                    <param name="dst" type="ByteBuffer"/>
                    <param name="position" type="long"/>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler&lt;Integer,? super A&gt;"/>
                </params>
                <scope line="204">
                    <declaration name="exc" type="Throwable" line="205"/>
                </scope>
                <declaration name="result" type="PendingFuture&amp;lt;Integer,A&amp;gt;" line="210"/>
                <anonymous_class line="211">
                    <method name="run" type="void" line="212">
                        <declaration name="n" type="int" line="213"/>
                        <declaration name="exc" type="Throwable" line="214"/>
                        <declaration name="ti" type="int" line="215"/>
                        <scope line="216">
                            <scope line="218"/>
                        </scope>
                        <scope line="224"/>
                        <scope line="228"/>
                        <scope line="232"/>
                        <scope line="235"/>
                    </method>
                </anonymous_class>
                <declaration name="task" type="Runnable" line="211"/>
            </method>
            <method name="implWrite" type="Future&lt;Integer&gt;" line="244">
                <params>
                    <param name="src" type="ByteBuffer"/>
                    <param name="position" type="long"/>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler&lt;Integer,? super A&gt;"/>
                </params>
                <scope line="247">
                    <declaration name="exc" type="Throwable" line="248"/>
                </scope>
                <declaration name="result" type="PendingFuture&amp;lt;Integer,A&amp;gt;" line="253"/>
                <anonymous_class line="254">
                    <method name="run" type="void" line="255">
                        <declaration name="n" type="int" line="256"/>
                        <declaration name="exc" type="Throwable" line="257"/>
                        <declaration name="ti" type="int" line="258"/>
                        <scope line="259">
                            <scope line="261"/>
                        </scope>
                        <scope line="267"/>
                        <scope line="271"/>
                        <scope line="275"/>
                        <scope line="278"/>
                    </method>
                </anonymous_class>
                <declaration name="task" type="Runnable" line="254"/>
            </method>
        </class>
    </source>