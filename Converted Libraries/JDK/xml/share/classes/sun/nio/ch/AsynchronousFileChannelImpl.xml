<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.channels"/>
        <import package="java.util.concurrent.ExecutorService"/>
        <import package="java.util.concurrent.Future"/>
        <import package="java.util.concurrent.locks"/>
        <import package="java.io.FileDescriptor"/>
        <import package="java.io.IOException"/>
        <class name="AsynchronousFileChannelImpl" line="9">
            <extends class="AsynchronousFileChannel"/>
            <javadoc line="9">
                Base implementation of AsynchronousFileChannel.                
            </javadoc>
            <declaration name="closeLock" type="ReadWriteLock" line="13"/>
            <declaration name="closed" type="boolean" line="14"/>
            <declaration name="fdObj" type="FileDescriptor" line="15"/>
            <declaration name="reading" type="boolean" line="16"/>
            <declaration name="writing" type="boolean" line="17"/>
            <declaration name="executor" type="ExecutorService" line="18"/>
            <method name="AsynchronousFileChannelImpl" type="constructor" line="19">
                <params>
                    <param name="fdObj" type="FileDescriptor"/>
                    <param name="reading" type="boolean"/>
                    <param name="writing" type="boolean"/>
                    <param name="executor" type="ExecutorService"/>
                </params>
            </method>
            <method name="executor" type="ExecutorService" line="25"/>
            <method name="isOpen" type="boolean" line="28"/>
            <javadoc line="31">
                Marks the beginning of an I/O operation.                
                <throws>
                    ClosedChannelException  If channel is closed                    
                </throws>
            </javadoc>
            <method name="begin" type="void" line="35"/>
            <javadoc line="39">
                Marks the end of an I/O operation.                
            </javadoc>
            <method name="end" type="void" line="42"/>
            <javadoc line="45">
                Marks end of I/O operation                
            </javadoc>
            <method name="end" type="void" line="48">
                <params>
                    <param name="completed" type="boolean"/>
                </params>
            </method>
            <method name="implLock" type="Future<FileLock>" line="52"/>
            <method name="lock" type="Future<FileLock>" line="53">
                <params>
                    <param name="position" type="long"/>
                    <param name="size" type="long"/>
                    <param name="shared" type="boolean"/>
                </params>
            </method>
            <method name="lock" type="void" line="56">
                <params>
                    <param name="position" type="long"/>
                    <param name="size" type="long"/>
                    <param name="shared" type="boolean"/>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler<FileLock,? super A>"/>
                </params>
            </method>
            <declaration name="fileLockTable" type="FileLockTable" line="60"/>
            <method name="ensureFileLockTableInitialized" type="void" line="61">
                <scope line="62">
                    <scope line="63">
                        <scope line="64"/>
                    </scope>
                </scope>
            </method>
            <method name="invalidateAllLocks" type="void" line="70">
                <scope line="71">
                    <scope line="72">
                        <scope line="73">
                            <scope line="74">
                                <declaration name="fli" type="FileLockImpl" line="75"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="83">
                Adds region to lock table                
            </javadoc>
            <method name="addToFileLockTable" type="FileLockImpl" line="86">
                <params>
                    <param name="position" type="long"/>
                    <param name="size" type="long"/>
                    <param name="shared" type="boolean"/>
                </params>
                <declaration name="fli" type="FileLockImpl" line="87"/>
                <scope line="88">
                    <scope line="91"/>
                    <scope line="94"/>
                </scope>
                <scope line="100"/>
            </method>
            <method name="removeFromFileLockTable" type="void" line="105">
                <params>
                    <param name="fli" type="FileLockImpl"/>
                </params>
            </method>
            <method name="implRelease" type="void" line="108"/>
            <javadoc line="108">
                Releases the given file lock.                
            </javadoc>
            <javadoc line="112">
                Invoked by FileLockImpl to release the given file lock and remove it
                  from the lock table.                
            </javadoc>
            <method name="release" type="void" line="116">
                <params>
                    <param name="fli" type="FileLockImpl"/>
                </params>
                <scope line="117"/>
                <scope line="122"/>
            </method>
            <method name="implRead" type="Future<Integer>" line="126"/>
            <method name="read" type="Future<Integer>" line="127">
                <params>
                    <param name="dst" type="ByteBuffer"/>
                    <param name="position" type="long"/>
                </params>
            </method>
            <method name="read" type="void" line="130">
                <params>
                    <param name="dst" type="ByteBuffer"/>
                    <param name="position" type="long"/>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler<Integer,? super A>"/>
                </params>
            </method>
            <method name="implWrite" type="Future<Integer>" line="134"/>
            <method name="write" type="Future<Integer>" line="135">
                <params>
                    <param name="src" type="ByteBuffer"/>
                    <param name="position" type="long"/>
                </params>
            </method>
            <method name="write" type="void" line="138">
                <params>
                    <param name="src" type="ByteBuffer"/>
                    <param name="position" type="long"/>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler<Integer,? super A>"/>
                </params>
            </method>
        </class>
    </source>