<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.io.FileDescriptor"/>
        <import package="java.io.IOException"/>
        <import package="java.net"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.channels"/>
        <import package="java.nio.channels.spi"/>
        <import package="java.util"/>
        <import package="sun.net.ResourceManager"/>
        <class name="DatagramChannelImpl" line="10">
            <extends class="DatagramChannel"/>
            <implements interface="SelChImpl"/>
            <javadoc line="10">
                An implementation of DatagramChannels.                
            </javadoc>
            <declaration name="nd" type="NativeDispatcher" line="14"/>
            <declaration name="fd" type="FileDescriptor" line="15"/>
            <declaration name="fdVal" type="int" line="16"/>
            <declaration name="family" type="ProtocolFamily" line="17"/>
            <declaration name="readerThread" type="long" line="18"/>
            <declaration name="writerThread" type="long" line="19"/>
            <declaration name="cachedSenderInetAddress" type="InetAddress" line="20"/>
            <declaration name="cachedSenderPort" type="int" line="21"/>
            <declaration name="readLock" type="Object" line="22"/>
            <declaration name="writeLock" type="Object" line="23"/>
            <declaration name="stateLock" type="Object" line="24"/>
            <declaration name="ST_UNINITIALIZED" type="int" line="25"/>
            <declaration name="ST_UNCONNECTED" type="int" line="26"/>
            <declaration name="ST_CONNECTED" type="int" line="27"/>
            <declaration name="ST_KILLED" type="int" line="28"/>
            <declaration name="state" type="int" line="29"/>
            <declaration name="localAddress" type="SocketAddress" line="30"/>
            <declaration name="remoteAddress" type="SocketAddress" line="31"/>
            <declaration name="socket" type="DatagramSocket" line="32"/>
            <declaration name="registry" type="MembershipRegistry" line="33"/>
            <method name="DatagramChannelImpl" type="constructor" line="34">
                <params>
                    <param name="sp" type="SelectorProvider"/>
                </params>
                <scope line="37"/>
                <scope line="43"/>
            </method>
            <method name="DatagramChannelImpl" type="constructor" line="48">
                <params>
                    <param name="sp" type="SelectorProvider"/>
                    <param name="family" type="ProtocolFamily"/>
                </params>
                <scope line="50"/>
                <scope line="54">
                    <scope line="55"/>
                </scope>
            </method>
            <method name="DatagramChannelImpl" type="constructor" line="64">
                <params>
                    <param name="sp" type="SelectorProvider"/>
                    <param name="fd" type="FileDescriptor"/>
                </params>
            </method>
            <method name="socket" type="DatagramSocket" line="72">
                <scope line="73"/>
            </method>
            <method name="getLocalAddress" type="SocketAddress" line="78">
                <scope line="79"/>
            </method>
            <method name="getRemoteAddress" type="SocketAddress" line="84">
                <scope line="85"/>
            </method>
            <method name="setOption" type="DatagramChannel" line="90">
                <params>
                    <param name="name" type="SocketOption<T>"/>
                    <param name="value" type="T"/>
                </params>
                <scope line="93">
                    <scope line="95">
                        <scope line="96"/>
                    </scope>
                    <scope line="101"/>
                    <scope line="105">
                        <declaration name="interf" type="NetworkInterface" line="107"/>
                        <scope line="108">
                            <declaration name="index" type="int" line="109"/>
                        </scope>
                        <scope line="113">
                            <declaration name="target" type="Inet4Address" line="114"/>
                            <declaration name="targetAddress" type="int" line="116"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="getOption" type="T" line="125">
                <params>
                    <param name="name" type="SocketOption<T>"/>
                </params>
                <scope line="128">
                    <scope line="130">
                        <scope line="131"/>
                        <scope line="134"/>
                    </scope>
                    <scope line="138"/>
                    <scope line="141">
                        <scope line="142">
                            <declaration name="address" type="int" line="143"/>
                            <declaration name="ia" type="InetAddress" line="145"/>
                            <declaration name="ni" type="NetworkInterface" line="146"/>
                        </scope>
                        <scope line="150">
                            <declaration name="index" type="int" line="151"/>
                            <declaration name="ni" type="NetworkInterface" line="153"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <class name="DefaultOptionsHolder" line="161">
                <declaration name="defaultOptions" type="Set&lt;SocketOption&lt;?&gt;&gt;" line="162"/>
                <method name="defaultOptions" type="Set<SocketOption<?>>" line="163">
                    <declaration name="set" type="HashSet&lt;SocketOption&lt;?&gt;&gt;" line="164"/>
                </method>
            </class>
            <method name="supportedOptions" type="Set<SocketOption<?>>" line="176"/>
            <method name="ensureOpen" type="void" line="179"/>
            <declaration name="sender" type="SocketAddress" line="182"/>
            <method name="receive" type="SocketAddress" line="183">
                <params>
                    <param name="dst" type="ByteBuffer"/>
                </params>
            </method>
            <method name="receive" type="int" line="235">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="dst" type="ByteBuffer"/>
                </params>
                <declaration name="pos" type="int" line="236"/>
                <declaration name="lim" type="int" line="237"/>
                <declaration name="rem" type="int" line="239"/>
                <declaration name="newSize" type="int" line="241"/>
                <declaration name="bb" type="ByteBuffer" line="242"/>
                <scope line="243">
                    <declaration name="n" type="int" line="244"/>
                </scope>
                <scope line="249"/>
            </method>
            <method name="receiveIntoNativeBuffer" type="int" line="253">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="rem" type="int"/>
                    <param name="pos" type="int"/>
                </params>
                <declaration name="n" type="int" line="254"/>
            </method>
            <method name="send" type="int" line="258">
                <params>
                    <param name="src" type="ByteBuffer"/>
                    <param name="target" type="SocketAddress"/>
                </params>
            </method>
            <method name="send" type="int" line="308">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="src" type="ByteBuffer"/>
                    <param name="target" type="SocketAddress"/>
                </params>
                <declaration name="pos" type="int" line="310"/>
                <declaration name="lim" type="int" line="311"/>
                <declaration name="rem" type="int" line="313"/>
                <declaration name="bb" type="ByteBuffer" line="314"/>
                <scope line="315">
                    <declaration name="n" type="int" line="319"/>
                    <scope line="320"/>
                </scope>
                <scope line="325"/>
            </method>
            <method name="sendFromNativeBuffer" type="int" line="329">
                <params>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="bb" type="ByteBuffer"/>
                    <param name="target" type="SocketAddress"/>
                </params>
                <declaration name="pos" type="int" line="330"/>
                <declaration name="lim" type="int" line="331"/>
                <declaration name="rem" type="int" line="333"/>
                <declaration name="preferIPv6" type="boolean" line="334"/>
                <declaration name="written" type="int" line="335"/>
            </method>
            <method name="read" type="int" line="339">
                <params>
                    <param name="buf" type="ByteBuffer"/>
                </params>
            </method>
            <method name="read" type="long" line="364">
                <params>
                    <param name="dsts" type="ByteBuffer[]"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                </params>
            </method>
            <method name="write" type="int" line="389">
                <params>
                    <param name="buf" type="ByteBuffer"/>
                </params>
            </method>
            <method name="write" type="long" line="414">
                <params>
                    <param name="srcs" type="ByteBuffer[]"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                </params>
            </method>
            <method name="implConfigureBlocking" type="void" line="439">
                <params>
                    <param name="block" type="boolean"/>
                </params>
            </method>
            <method name="localAddress" type="SocketAddress" line="442">
                <scope line="443"/>
            </method>
            <method name="remoteAddress" type="SocketAddress" line="447">
                <scope line="448"/>
            </method>
            <method name="bind" type="DatagramChannel" line="452">
                <params>
                    <param name="local" type="SocketAddress"/>
                </params>
                <scope line="453">
                    <scope line="454">
                        <scope line="455">
                            <declaration name="isa" type="InetSocketAddress" line="458"/>
                            <scope line="459"/>
                            <scope line="462">
                                <scope line="464">
                                    <declaration name="addr" type="InetAddress" line="465"/>
                                </scope>
                            </scope>
                            <declaration name="sm" type="SecurityManager" line="469"/>
                            <scope line="470"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="isConnected" type="boolean" line="480">
                <scope line="481"/>
            </method>
            <method name="ensureOpenAndUnconnected" type="void" line="485">
                <scope line="486"/>
            </method>
            <method name="connect" type="DatagramChannel" line="491">
                <params>
                    <param name="sa" type="SocketAddress"/>
                </params>
                <declaration name="localPort" type="int" line="492"/>
                <scope line="493">
                    <scope line="494">
                        <scope line="495">
                            <declaration name="isa" type="InetSocketAddress" line="497"/>
                            <declaration name="sm" type="SecurityManager" line="498"/>
                            <declaration name="n" type="int" line="500"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="disconnect" type="DatagramChannel" line="513">
                <scope line="514">
                    <scope line="515">
                        <scope line="516">
                            <declaration name="isa" type="InetSocketAddress" line="518"/>
                            <declaration name="sm" type="SecurityManager" line="519"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="530">
                Joins channel&apos;s socket to the given group/interface and
                  optional source address.                
            </javadoc>
            <method name="innerJoin" type="MembershipKey" line="534">
                <params>
                    <param name="group" type="InetAddress"/>
                    <param name="interf" type="NetworkInterface"/>
                    <param name="source" type="InetAddress"/>
                </params>
                <scope line="536"/>
                <scope line="539"/>
                <scope line="542"/>
                <scope line="545"/>
                <declaration name="sm" type="SecurityManager" line="550"/>
                <scope line="552">
                    <scope line="554"/>
                    <scope line="557">
                        <declaration name="key" type="MembershipKey" line="558"/>
                    </scope>
                    <declaration name="key" type="MembershipKeyImpl" line="561"/>
                    <scope line="562">
                        <declaration name="index" type="int" line="563"/>
                        <declaration name="groupAddress" type="byte[]" line="565"/>
                        <declaration name="sourceAddress" type="byte[]" line="566"/>
                        <declaration name="n" type="int" line="567"/>
                    </scope>
                    <scope line="571">
                        <declaration name="target" type="Inet4Address" line="572"/>
                        <declaration name="groupAddress" type="int" line="574"/>
                        <declaration name="targetAddress" type="int" line="575"/>
                        <declaration name="sourceAddress" type="int" line="576"/>
                        <declaration name="n" type="int" line="577"/>
                    </scope>
                </scope>
            </method>
            <method name="join" type="MembershipKey" line="585">
                <params>
                    <param name="group" type="InetAddress"/>
                    <param name="interf" type="NetworkInterface"/>
                </params>
            </method>
            <method name="join" type="MembershipKey" line="588">
                <params>
                    <param name="group" type="InetAddress"/>
                    <param name="interf" type="NetworkInterface"/>
                    <param name="source" type="InetAddress"/>
                </params>
            </method>
            <method name="drop" type="void" line="592">
                <params>
                    <param name="key" type="MembershipKeyImpl"/>
                </params>
            </method>
            <javadoc line="613">
                Block datagrams from given source if a memory to receive all
                  datagrams.                
            </javadoc>
            <method name="block" type="void" line="617">
                <params>
                    <param name="key" type="MembershipKeyImpl"/>
                    <param name="source" type="InetAddress"/>
                </params>
            </method>
            <javadoc line="639">
                Unblock given source.                
            </javadoc>
            <method name="unblock" type="void" line="642">
                <params>
                    <param name="key" type="MembershipKeyImpl"/>
                    <param name="source" type="InetAddress"/>
                </params>
            </method>
            <method name="implCloseSelectableChannel" type="void" line="662">
                <scope line="663">
                    <declaration name="th" type="long" line="667"/>
                </scope>
            </method>
            <method name="kill" type="void" line="673"/>
            <method name="finalize" type="void" line="685"/>
            <javadoc line="688">
                Translates native poll revent set into a ready operation set                
            </javadoc>
            <method name="translateReadyOps" type="boolean" line="691">
                <params>
                    <param name="ops" type="int"/>
                    <param name="initialOps" type="int"/>
                    <param name="sk" type="SelectionKeyImpl"/>
                </params>
                <declaration name="intOps" type="int" line="692"/>
                <declaration name="oldOps" type="int" line="693"/>
                <declaration name="newOps" type="int" line="694"/>
                <scope line="695"/>
                <scope line="698"/>
            </method>
            <method name="translateAndUpdateReadyOps" type="boolean" line="708">
                <params>
                    <param name="ops" type="int"/>
                    <param name="sk" type="SelectionKeyImpl"/>
                </params>
            </method>
            <method name="translateAndSetReadyOps" type="boolean" line="711">
                <params>
                    <param name="ops" type="int"/>
                    <param name="sk" type="SelectionKeyImpl"/>
                </params>
            </method>
            <javadoc line="714">
                Translates an interest operation set into a native poll event set                
            </javadoc>
            <method name="translateAndSetInterestOps" type="void" line="717">
                <params>
                    <param name="ops" type="int"/>
                    <param name="sk" type="SelectionKeyImpl"/>
                </params>
                <declaration name="newOps" type="int" line="718"/>
            </method>
            <method name="getFD" type="FileDescriptor" line="724"/>
            <method name="getFDVal" type="int" line="727"/>
            <method name="initIDs" type="void" line="730"/>
            <method name="disconnect0" type="void" line="731"/>
            <method name="receive0" type="int" line="732"/>
            <method name="send0" type="int" line="733"/>
            <scope line="734"/>
        </class>
    </source>