<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.nio.channels"/>
        <import package="java.util.concurrent"/>
        <import package="java.security.AccessController"/>
        <import package="sun.security.action.GetIntegerAction"/>
        <class name="Invoker" line="33">
            <comment line="41">
                maximum number of completion handlers that may be invoked on the current
                 thread before it re-directs invocations to the thread pool. This helps
                 avoid stack overflow and lessens the risk of starvation.                
            </comment>
            <comment line="47">
                Per-thread object with reference to channel group and a counter for
                 the number of completion handlers invoked. This should be reset to 0
                 when all completion handlers have completed.                
            </comment>
            <javadoc line="33">
                Defines static methods to invoke a completion handler or arbitrary task.                
            </javadoc>
            <method name="Invoker" type="constructor" line="38"/>
            <declaration name="maxHandlerInvokeCount" type="int" line="43"/>
            <class name="GroupAndInvokeCount" line="49">
                <declaration name="group" type="AsynchronousChannelGroupImpl" line="50"/>
                <declaration name="handlerInvokeCount" type="int" line="51"/>
                <method name="GroupAndInvokeCount" type="constructor" line="52">
                    <params>
                        <param name="group" type="AsynchronousChannelGroupImpl"/>
                    </params>
                </method>
                <method name="group" type="AsynchronousChannelGroupImpl" line="55"/>
                <method name="invokeCount" type="int" line="58"/>
                <method name="setInvokeCount" type="void" line="61">
                    <params>
                        <param name="value" type="int"/>
                    </params>
                </method>
                <method name="resetInvokeCount" type="void" line="64"/>
                <method name="incrementInvokeCount" type="void" line="67"/>
            </class>
            <declaration name="myGroupAndInvokeCount" type="ThreadLocal&lt;GroupAndInvokeCount&gt;" line="71"/>
            <anonymous_class line="72">
                <method name="initialValue" type="GroupAndInvokeCount" line="73"/>
            </anonymous_class>
            <javadoc line="78">
                Binds this thread to the given group                
            </javadoc>
            <method name="bindToGroup" type="void" line="81">
                <params>
                    <param name="group" type="AsynchronousChannelGroupImpl"/>
                </params>
            </method>
            <javadoc line="85">
                Returns the GroupAndInvokeCount object for this thread.                
            </javadoc>
            <method name="getGroupAndInvokeCount" type="GroupAndInvokeCount" line="88"/>
            <javadoc line="92">
                Returns true if the current thread is in a channel group&apos;s thread pool                
            </javadoc>
            <method name="isBoundToAnyGroup" type="boolean" line="95"/>
            <javadoc line="99">
                Returns true if the current thread is in the given channel&apos;s thread
                  pool and we haven&apos;t exceeded the maximum number of handler frames on
                  the stack.                
            </javadoc>
            <method name="mayInvokeDirect" type="boolean" line="106">
                <params>
                    <param name="myGroupAndInvokeCount" type="GroupAndInvokeCount"/>
                    <param name="group" type="AsynchronousChannelGroupImpl"/>
                </params>
                <scope line="110"/>
            </method>
            <javadoc line="116">
                Invoke handler without checking the thread identity or number of handlers
                  on the thread stack.                
            </javadoc>
            <method name="invokeUnchecked" type="void" line="124">
                <params>
                    <param name="handler" type="CompletionHandler<V,? super A>"/>
                    <param name="attachment" type="A"/>
                    <param name="value" type="V"/>
                    <param name="exc" type="Throwable"/>
                </params>
                <comment line="132">
                    clear interrupt                    
                </comment>
                <scope line="125"/>
                <scope line="127"/>
            </method>
            <javadoc line="135">
                Invoke handler assuming thread identity already checked                
            </javadoc>
            <method name="invokeDirect" type="void" line="143">
                <params>
                    <param name="myGroupAndInvokeCount" type="GroupAndInvokeCount"/>
                    <param name="handler" type="CompletionHandler<V,? super A>"/>
                    <param name="attachment" type="A"/>
                    <param name="result" type="V"/>
                    <param name="exc" type="Throwable"/>
                </params>
            </method>
            <javadoc line="148">
                Invokes the handler. If the current thread is in the channel group&apos;s
                  thread pool then the handler is invoked directly, otherwise it is
                  invoked indirectly.                
            </javadoc>
            <method name="invoke" type="void" line="158">
                <params>
                    <param name="channel" type="AsynchronousChannel"/>
                    <param name="handler" type="CompletionHandler<V,? super A>"/>
                    <param name="attachment" type="A"/>
                    <param name="result" type="V"/>
                    <param name="exc" type="Throwable"/>
                </params>
                <comment line="169">
                    group match                    
                </comment>
                <comment line="179">
                    channel group shutdown; fallback to invoking directly
                     if the current thread has the right identity.                    
                </comment>
                <declaration name="invokeDirect" type="boolean" line="159"/>
                <declaration name="identityOkay" type="boolean" line="160"/>
                <declaration name="thisGroupAndInvokeCount" type="GroupAndInvokeCount" line="161"/>
                <scope line="162">
                    <scope line="167"/>
                </scope>
                <scope line="172"/>
                <scope line="174">
                    <scope line="175"/>
                    <scope line="177">
                        <scope line="180"/>
                        <scope line="183"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="190">
                Invokes the handler indirectly via the channel group&apos;s thread pool.                
            </javadoc>
            <method name="invokeIndirectly" type="void" line="198">
                <params>
                    <param name="channel" type="AsynchronousChannel"/>
                    <param name="handler" type="CompletionHandler<V,? super A>"/>
                    <param name="attachment" type="A"/>
                    <param name="result" type="V"/>
                    <param name="exc" type="Throwable"/>
                </params>
                <scope line="199">
                    <anonymous_class line="200">
                        <method name="run" type="void" line="201">
                            <declaration name="thisGroupAndInvokeCount" type="GroupAndInvokeCount" line="202"/>
                        </method>
                    </anonymous_class>
                </scope>
                <scope line="209"/>
            </method>
            <javadoc line="214">
                Invokes the handler &quot;indirectly&quot; in the given Executor                
            </javadoc>
            <method name="invokeIndirectly" type="void" line="222">
                <params>
                    <param name="handler" type="CompletionHandler<V,? super A>"/>
                    <param name="attachment" type="A"/>
                    <param name="value" type="V"/>
                    <param name="exc" type="Throwable"/>
                    <param name="executor" type="Executor"/>
                </params>
                <scope line="223">
                    <anonymous_class line="224">
                        <method name="run" type="void" line="225"/>
                    </anonymous_class>
                </scope>
                <scope line="229"/>
            </method>
            <javadoc line="234">
                Invokes the given task on the thread pool associated with the given
                  channel. If the current thread is in the thread pool then the task is
                  invoked directly.                
            </javadoc>
            <method name="invokeOnThreadInThreadPool" type="void" line="241">
                <params>
                    <param name="channel" type="Groupable"/>
                    <param name="task" type="Runnable"/>
                </params>
                <declaration name="invokeDirect" type="boolean" line="242"/>
                <declaration name="thisGroupAndInvokeCount" type="GroupAndInvokeCount" line="243"/>
                <declaration name="targetGroup" type="AsynchronousChannelGroupImpl" line="244"/>
                <scope line="245"/>
                <scope line="247"/>
                <scope line="250">
                    <scope line="251"/>
                    <scope line="253"/>
                </scope>
                <scope line="256"/>
            </method>
            <javadoc line="261">
                Invoke handler with completed result. This method does not check the
                  thread identity or the number of handlers on the thread stack.                
            </javadoc>
            <method name="invokeUnchecked" type="void" line="265">
                <params>
                    <param name="future" type="PendingFuture<V,A>"/>
                </params>
                <declaration name="handler" type="CompletionHandler&lt;V,? super A&gt;" line="267"/>
                <scope line="268"/>
            </method>
            <javadoc line="276">
                Invoke handler with completed result. If the current thread is in the
                  channel group&apos;s thread pool then the handler is invoked directly,
                  otherwise it is invoked indirectly.                
            </javadoc>
            <method name="invoke" type="void" line="281">
                <params>
                    <param name="future" type="PendingFuture<V,A>"/>
                </params>
                <declaration name="handler" type="CompletionHandler&lt;V,? super A&gt;" line="283"/>
                <scope line="284"/>
            </method>
            <javadoc line="293">
                Invoke handler with completed result. The handler is invoked indirectly,
                  via the channel group&apos;s thread pool.                
            </javadoc>
            <method name="invokeIndirectly" type="void" line="297">
                <params>
                    <param name="future" type="PendingFuture<V,A>"/>
                </params>
                <declaration name="handler" type="CompletionHandler&lt;V,? super A&gt;" line="299"/>
                <scope line="300"/>
            </method>
        </class>
    </source>