<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.channels"/>
        <import package="java.net.SocketOption"/>
        <import package="java.net.StandardSocketOptions"/>
        <import package="java.net.SocketAddress"/>
        <import package="java.net.InetSocketAddress"/>
        <import package="java.io.IOException"/>
        <import package="java.io.FileDescriptor"/>
        <import package="java.util.Set"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Collections"/>
        <import package="java.util.concurrent"/>
        <import package="java.util.concurrent.locks"/>
        <import package="sun.net.NetHooks"/>
        <class name="AsynchronousSocketChannelImpl" line="43">
            <extends class="AsynchronousSocketChannel"/>
            <comment line="54">
                protects state, localAddress, and remoteAddress                
            </comment>
            <comment line="60">
                State, increases monotonically                
            </comment>
            <comment line="67">
                reading state                
            </comment>
            <comment line="71">
                further reading disallowed due to timeout                
            </comment>
            <comment line="73">
                writing state                
            </comment>
            <comment line="77">
                further writing disallowed due to timeout                
            </comment>
            <comment line="79">
                close support                
            </comment>
            <comment line="91">
                Constructor for sockets obtained from AsynchronousServerSocketChannelImpl                
            </comment>
            <implements interface="Cancellable"/>
            <implements interface="Groupable"/>
            <javadoc line="43">
                Base implementation of AsynchronousSocketChannel                
            </javadoc>
            <declaration name="fd" type="FileDescriptor" line="51"/>
            <declaration name="stateLock" type="Object" line="54"/>
            <declaration name="localAddress" type="SocketAddress" line="56"/>
            <declaration name="remoteAddress" type="SocketAddress" line="57"/>
            <declaration name="ST_UNINITIALIZED" type="int" line="60"/>
            <declaration name="ST_UNCONNECTED" type="int" line="61"/>
            <declaration name="ST_PENDING" type="int" line="62"/>
            <declaration name="ST_CONNECTED" type="int" line="63"/>
            <declaration name="state" type="int" line="64"/>
            <declaration name="readLock" type="Object" line="67"/>
            <declaration name="reading" type="boolean" line="68"/>
            <declaration name="readShutdown" type="boolean" line="69"/>
            <declaration name="readKilled" type="boolean" line="70"/>
            <declaration name="writeLock" type="Object" line="73"/>
            <declaration name="writing" type="boolean" line="74"/>
            <declaration name="writeShutdown" type="boolean" line="75"/>
            <declaration name="writeKilled" type="boolean" line="76"/>
            <declaration name="closeLock" type="ReadWriteLock" line="79"/>
            <declaration name="open" type="boolean" line="80"/>
            <method name="AsynchronousSocketChannelImpl" type="constructor" line="84">
                <params>
                    <param name="group" type="AsynchronousChannelGroupImpl"/>
                </params>
            </method>
            <method name="AsynchronousSocketChannelImpl" type="constructor" line="95">
                <params>
                    <param name="group" type="AsynchronousChannelGroupImpl"/>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="remote" type="InetSocketAddress"/>
                </params>
            </method>
            <method name="isOpen" type="boolean" line="104"/>
            <javadoc line="108">
                Marks beginning of access to file descriptor/handle                
            </javadoc>
            <method name="begin" type="void" line="111"/>
            <javadoc line="117">
                Marks end of access to file descriptor/handle                
            </javadoc>
            <method name="end" type="void" line="120"/>
            <method name="implClose" type="void" line="124"/>
            <javadoc line="124">
                Invoked to close socket and release other resources.                
            </javadoc>
            <method name="close" type="void" line="130">
                <comment line="131">
                    synchronize with any threads initiating asynchronous operations                    
                </comment>
                <comment line="135">
                    already closed                    
                </comment>
                <scope line="133"/>
                <scope line="137"/>
            </method>
            <method name="enableReading" type="void" line="143">
                <params>
                    <param name="killed" type="boolean"/>
                </params>
                <scope line="144"/>
            </method>
            <method name="enableReading" type="void" line="151"/>
            <method name="enableWriting" type="void" line="155">
                <params>
                    <param name="killed" type="boolean"/>
                </params>
                <scope line="156"/>
            </method>
            <method name="enableWriting" type="void" line="163"/>
            <method name="killReading" type="void" line="167">
                <scope line="168"/>
            </method>
            <method name="killWriting" type="void" line="173">
                <scope line="174"/>
            </method>
            <method name="killConnect" type="void" line="179">
                <comment line="180">
                    when a connect is cancelled then the connection may have been                    
                </comment>
                <comment line="181">
                    established so prevent reading or writing.                    
                </comment>
            </method>
            <method name="implConnect" type="Future<Void>" line="186"/>
            <javadoc line="186">
                Invoked by connect to initiate the connect operation.                
            </javadoc>
            <method name="connect" type="Future<Void>" line="194">
                <params>
                    <param name="remote" type="SocketAddress"/>
                </params>
            </method>
            <method name="connect" type="void" line="202">
                <params>
                    <param name="remote" type="SocketAddress"/>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler<Void,? super A>"/>
                </params>
            </method>
            <method name="implRead" type="Future<V>" line="208"/>
            <javadoc line="208">
                Invoked by read to initiate the I/O operation.                
            </javadoc>
            <method name="read" type="Future<V>" line="227">
                <params>
                    <param name="isScatteringRead" type="boolean"/>
                    <param name="dst" type="ByteBuffer"/>
                    <param name="dsts" type="ByteBuffer[]"/>
                    <param name="timeout" type="long"/>
                    <param name="unit" type="TimeUnit"/>
                    <param name="att" type="A"/>
                    <param name="handler" type="CompletionHandler<V,? super A>"/>
                </params>
                <comment line="242">
                    check and update state                    
                </comment>
                <comment line="257">
                    immediately complete with -1 if shutdown for read                    
                </comment>
                <comment line="258">
                    immediately complete with 0 if no space remaining                    
                </comment>
                <scope line="228">
                    <declaration name="e" type="Throwable" line="229"/>
                </scope>
                <declaration name="hasSpaceToRead" type="boolean" line="239"/>
                <declaration name="shutdown" type="boolean" line="240"/>
                <scope line="243">
                    <scope line="248"/>
                    <scope line="250">
                        <scope line="251"/>
                    </scope>
                </scope>
                <scope line="259">
                    <declaration name="result" type="Number" line="260"/>
                    <scope line="261"/>
                    <scope line="263"/>
                </scope>
            </method>
            <method name="read" type="Future<Integer>" line="276">
                <params>
                    <param name="dst" type="ByteBuffer"/>
                </params>
            </method>
            <method name="read" type="void" line="288">
                <params>
                    <param name="dst" type="ByteBuffer"/>
                    <param name="timeout" type="long"/>
                    <param name="unit" type="TimeUnit"/>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler<Integer,? super A>"/>
                </params>
            </method>
            <method name="read" type="void" line="304">
                <params>
                    <param name="dsts" type="ByteBuffer[]"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                    <param name="timeout" type="long"/>
                    <param name="unit" type="TimeUnit"/>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler<Long,? super A>"/>
                </params>
                <declaration name="bufs" type="ByteBuffer[]" line="309"/>
                <scope line="310"/>
            </method>
            <method name="implWrite" type="Future<V>" line="317"/>
            <javadoc line="317">
                Invoked by write to initiate the I/O operation.                
            </javadoc>
            <method name="write" type="Future<V>" line="336">
                <params>
                    <param name="isGatheringWrite" type="boolean"/>
                    <param name="src" type="ByteBuffer"/>
                    <param name="srcs" type="ByteBuffer[]"/>
                    <param name="timeout" type="long"/>
                    <param name="unit" type="TimeUnit"/>
                    <param name="att" type="A"/>
                    <param name="handler" type="CompletionHandler<V,? super A>"/>
                </params>
                <comment line="343">
                    check and update state                    
                </comment>
                <comment line="360">
                    channel is closed or shutdown for write                    
                </comment>
                <comment line="369">
                    nothing to write so complete immediately                    
                </comment>
                <declaration name="hasDataToWrite" type="boolean" line="337"/>
                <declaration name="closed" type="boolean" line="339"/>
                <scope line="340">
                    <scope line="344">
                        <scope line="349"/>
                        <scope line="351"/>
                    </scope>
                </scope>
                <scope line="356"/>
                <scope line="361">
                    <declaration name="e" type="Throwable" line="362"/>
                </scope>
                <scope line="370">
                    <declaration name="result" type="Number" line="371"/>
                </scope>
            </method>
            <method name="write" type="Future<Integer>" line="382">
                <params>
                    <param name="src" type="ByteBuffer"/>
                </params>
            </method>
            <method name="write" type="void" line="392">
                <params>
                    <param name="src" type="ByteBuffer"/>
                    <param name="timeout" type="long"/>
                    <param name="unit" type="TimeUnit"/>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler<Integer,? super A>"/>
                </params>
            </method>
            <method name="write" type="void" line="406">
                <params>
                    <param name="srcs" type="ByteBuffer[]"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                    <param name="timeout" type="long"/>
                    <param name="unit" type="TimeUnit"/>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler<Long,? super A>"/>
                </params>
            </method>
            <method name="bind" type="AsynchronousSocketChannel" line="418">
                <params>
                    <param name="local" type="SocketAddress"/>
                </params>
                <scope line="419">
                    <scope line="421">
                        <declaration name="isa" type="InetSocketAddress" line="426"/>
                    </scope>
                </scope>
                <scope line="432"/>
            </method>
            <method name="getLocalAddress" type="SocketAddress" line="439"/>
            <method name="setOption" type="AsynchronousSocketChannel" line="448">
                <params>
                    <param name="name" type="SocketOption<T>"/>
                    <param name="value" type="T"/>
                </params>
                <scope line="454"/>
                <scope line="460"/>
            </method>
            <method name="getOption" type="T" line="467">
                <params>
                    <param name="name" type="SocketOption<T>"/>
                </params>
                <scope line="473"/>
                <scope line="476"/>
            </method>
            <class name="DefaultOptionsHolder" line="481">
                <declaration name="defaultOptions" type="Set&lt;SocketOption&lt;?&gt;&gt;" line="482"/>
                <method name="defaultOptions" type="Set<SocketOption<?>>" line="484">
                    <declaration name="set" type="HashSet&lt;SocketOption&lt;?&gt;&gt;" line="485"/>
                </method>
            </class>
            <method name="supportedOptions" type="Set<SocketOption<?>>" line="496"/>
            <method name="getRemoteAddress" type="SocketAddress" line="501"/>
            <method name="shutdownInput" type="AsynchronousSocketChannel" line="508">
                <scope line="509">
                    <scope line="513">
                        <scope line="514"/>
                    </scope>
                </scope>
                <scope line="519"/>
            </method>
            <method name="shutdownOutput" type="AsynchronousSocketChannel" line="526">
                <scope line="527">
                    <scope line="531">
                        <scope line="532"/>
                    </scope>
                </scope>
                <scope line="537"/>
            </method>
            <method name="toString" type="String" line="544">
                <declaration name="sb" type="StringBuilder" line="545"/>
                <scope line="548">
                    <scope line="549"/>
                    <scope line="551">
                        <scope line="567"/>
                        <scope line="571"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>