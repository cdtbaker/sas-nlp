<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.ch">
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.channels"/>
        <import package="java.net.SocketOption"/>
        <import package="java.net.StandardSocketOptions"/>
        <import package="java.net.SocketAddress"/>
        <import package="java.net.InetSocketAddress"/>
        <import package="java.io.IOException"/>
        <import package="java.io.FileDescriptor"/>
        <import package="java.util.Set"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Collections"/>
        <import package="java.util.concurrent"/>
        <import package="java.util.concurrent.locks"/>
        <import package="sun.net.NetHooks"/>
        <class name="AsynchronousSocketChannelImpl" line="16">
            <extends class="AsynchronousSocketChannel"/>
            <implements interface="Cancellable"/>
            <implements interface="Groupable"/>
            <javadoc line="16">
                Base implementation of AsynchronousSocketChannel                
            </javadoc>
            <declaration name="fd" type="FileDescriptor" line="20"/>
            <declaration name="stateLock" type="Object" line="21"/>
            <declaration name="localAddress" type="SocketAddress" line="22"/>
            <declaration name="remoteAddress" type="SocketAddress" line="23"/>
            <declaration name="ST_UNINITIALIZED" type="int" line="24"/>
            <declaration name="ST_UNCONNECTED" type="int" line="25"/>
            <declaration name="ST_PENDING" type="int" line="26"/>
            <declaration name="ST_CONNECTED" type="int" line="27"/>
            <declaration name="state" type="int" line="28"/>
            <declaration name="readLock" type="Object" line="29"/>
            <declaration name="reading" type="boolean" line="30"/>
            <declaration name="readShutdown" type="boolean" line="31"/>
            <declaration name="readKilled" type="boolean" line="32"/>
            <declaration name="writeLock" type="Object" line="33"/>
            <declaration name="writing" type="boolean" line="34"/>
            <declaration name="writeShutdown" type="boolean" line="35"/>
            <declaration name="writeKilled" type="boolean" line="36"/>
            <declaration name="closeLock" type="ReadWriteLock" line="37"/>
            <declaration name="open" type="boolean" line="38"/>
            <method name="AsynchronousSocketChannelImpl" type="constructor" line="39">
                <params>
                    <param name="group" type="AsynchronousChannelGroupImpl"/>
                </params>
            </method>
            <method name="AsynchronousSocketChannelImpl" type="constructor" line="44">
                <params>
                    <param name="group" type="AsynchronousChannelGroupImpl"/>
                    <param name="fd" type="FileDescriptor"/>
                    <param name="remote" type="InetSocketAddress"/>
                </params>
            </method>
            <method name="isOpen" type="boolean" line="51"/>
            <javadoc line="54">
                Marks beginning of access to file descriptor/handle                
            </javadoc>
            <method name="begin" type="void" line="57"/>
            <javadoc line="61">
                Marks end of access to file descriptor/handle                
            </javadoc>
            <method name="end" type="void" line="64"/>
            <method name="implClose" type="void" line="67"/>
            <javadoc line="67">
                Invoked to close socket and release other resources.                
            </javadoc>
            <method name="close" type="void" line="71">
                <scope line="73"/>
                <scope line="77"/>
            </method>
            <method name="enableReading" type="void" line="82">
                <params>
                    <param name="killed" type="boolean"/>
                </params>
                <scope line="83"/>
            </method>
            <method name="enableReading" type="void" line="88"/>
            <method name="enableWriting" type="void" line="91">
                <params>
                    <param name="killed" type="boolean"/>
                </params>
                <scope line="92"/>
            </method>
            <method name="enableWriting" type="void" line="97"/>
            <method name="killReading" type="void" line="100">
                <scope line="101"/>
            </method>
            <method name="killWriting" type="void" line="105">
                <scope line="106"/>
            </method>
            <method name="killConnect" type="void" line="110"/>
            <method name="implConnect" type="Future<Void>" line="114"/>
            <javadoc line="114">
                Invoked by connect to initiate the connect operation.                
            </javadoc>
            <method name="connect" type="Future<Void>" line="118">
                <params>
                    <param name="remote" type="SocketAddress"/>
                </params>
            </method>
            <method name="connect" type="void" line="121">
                <params>
                    <param name="remote" type="SocketAddress"/>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler<Void,? super A>"/>
                </params>
            </method>
            <method name="implRead" type="Future<V>" line="125"/>
            <javadoc line="125">
                Invoked by read to initiate the I/O operation.                
            </javadoc>
            <method name="read" type="Future<V>" line="129">
                <params>
                    <param name="isScatteringRead" type="boolean"/>
                    <param name="dst" type="ByteBuffer"/>
                    <param name="dsts" type="ByteBuffer[]"/>
                    <param name="timeout" type="long"/>
                    <param name="unit" type="TimeUnit"/>
                    <param name="att" type="A"/>
                    <param name="handler" type="CompletionHandler<V,? super A>"/>
                </params>
                <scope line="130">
                    <declaration name="e" type="Throwable" line="131"/>
                </scope>
                <declaration name="hasSpaceToRead" type="boolean" line="137"/>
                <declaration name="shutdown" type="boolean" line="138"/>
                <scope line="139">
                    <scope line="142"/>
                    <scope line="145">
                        <scope line="146"/>
                    </scope>
                </scope>
                <scope line="151">
                    <declaration name="result" type="Number" line="152"/>
                    <scope line="153"/>
                    <scope line="156"/>
                </scope>
            </method>
            <method name="read" type="Future<Integer>" line="165">
                <params>
                    <param name="dst" type="ByteBuffer"/>
                </params>
            </method>
            <method name="read" type="void" line="169">
                <params>
                    <param name="dst" type="ByteBuffer"/>
                    <param name="timeout" type="long"/>
                    <param name="unit" type="TimeUnit"/>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler<Integer,? super A>"/>
                </params>
            </method>
            <method name="read" type="void" line="174">
                <params>
                    <param name="dsts" type="ByteBuffer[]"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                    <param name="timeout" type="long"/>
                    <param name="unit" type="TimeUnit"/>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler<Long,? super A>"/>
                </params>
                <declaration name="bufs" type="ByteBuffer[]" line="177"/>
                <scope line="178"/>
            </method>
            <method name="implWrite" type="Future<V>" line="183"/>
            <javadoc line="183">
                Invoked by write to initiate the I/O operation.                
            </javadoc>
            <method name="write" type="Future<V>" line="187">
                <params>
                    <param name="isGatheringWrite" type="boolean"/>
                    <param name="src" type="ByteBuffer"/>
                    <param name="srcs" type="ByteBuffer[]"/>
                    <param name="timeout" type="long"/>
                    <param name="unit" type="TimeUnit"/>
                    <param name="att" type="A"/>
                    <param name="handler" type="CompletionHandler<V,? super A>"/>
                </params>
                <declaration name="hasDataToWrite" type="boolean" line="188"/>
                <declaration name="closed" type="boolean" line="189"/>
                <scope line="190">
                    <scope line="192">
                        <scope line="195"/>
                        <scope line="198"/>
                    </scope>
                </scope>
                <scope line="203"/>
                <scope line="206">
                    <declaration name="e" type="Throwable" line="207"/>
                </scope>
                <scope line="212">
                    <declaration name="result" type="Number" line="213"/>
                </scope>
            </method>
            <method name="write" type="Future<Integer>" line="220">
                <params>
                    <param name="src" type="ByteBuffer"/>
                </params>
            </method>
            <method name="write" type="void" line="223">
                <params>
                    <param name="src" type="ByteBuffer"/>
                    <param name="timeout" type="long"/>
                    <param name="unit" type="TimeUnit"/>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler<Integer,? super A>"/>
                </params>
            </method>
            <method name="write" type="void" line="227">
                <params>
                    <param name="srcs" type="ByteBuffer[]"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                    <param name="timeout" type="long"/>
                    <param name="unit" type="TimeUnit"/>
                    <param name="attachment" type="A"/>
                    <param name="handler" type="CompletionHandler<Long,? super A>"/>
                </params>
            </method>
            <method name="bind" type="AsynchronousSocketChannel" line="233">
                <params>
                    <param name="local" type="SocketAddress"/>
                </params>
                <scope line="234">
                    <scope line="236">
                        <declaration name="isa" type="InetSocketAddress" line="239"/>
                    </scope>
                </scope>
                <scope line="245"/>
            </method>
            <method name="getLocalAddress" type="SocketAddress" line="250"/>
            <method name="setOption" type="AsynchronousSocketChannel" line="254">
                <params>
                    <param name="name" type="SocketOption<T>"/>
                    <param name="value" type="T"/>
                </params>
                <scope line="257"/>
                <scope line="263"/>
            </method>
            <method name="getOption" type="T" line="267">
                <params>
                    <param name="name" type="SocketOption<T>"/>
                </params>
                <scope line="270"/>
                <scope line="274"/>
            </method>
            <class name="DefaultOptionsHolder" line="278">
                <declaration name="defaultOptions" type="Set&lt;SocketOption&lt;?&gt;&gt;" line="279"/>
                <method name="defaultOptions" type="Set<SocketOption<?>>" line="280">
                    <declaration name="set" type="HashSet&lt;SocketOption&lt;?&gt;&gt;" line="281"/>
                </method>
            </class>
            <method name="supportedOptions" type="Set<SocketOption<?>>" line="290"/>
            <method name="getRemoteAddress" type="SocketAddress" line="293"/>
            <method name="shutdownInput" type="AsynchronousSocketChannel" line="297">
                <scope line="298">
                    <scope line="301">
                        <scope line="302"/>
                    </scope>
                </scope>
                <scope line="308"/>
            </method>
            <method name="shutdownOutput" type="AsynchronousSocketChannel" line="313">
                <scope line="314">
                    <scope line="317">
                        <scope line="318"/>
                    </scope>
                </scope>
                <scope line="324"/>
            </method>
            <method name="toString" type="String" line="329">
                <declaration name="sb" type="StringBuilder" line="330"/>
                <scope line="333">
                    <scope line="334"/>
                    <scope line="337">
                        <scope line="351"/>
                        <scope line="355"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>