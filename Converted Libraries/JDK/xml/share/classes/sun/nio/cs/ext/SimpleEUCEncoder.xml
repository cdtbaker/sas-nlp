<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs.ext">
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.CharBuffer"/>
        <import package="java.nio.charset.Charset"/>
        <import package="java.nio.charset.CharsetEncoder"/>
        <import package="java.nio.charset.CoderResult"/>
        <import package="sun.nio.cs.Surrogate"/>
        <class name="SimpleEUCEncoder" line="39">
            <extends class="CharsetEncoder"/>
            <declaration name="index1" type="short" line="43"/>
            <declaration name="index2" type="String" line="44"/>
            <declaration name="index2a" type="String" line="45"/>
            <declaration name="index2b" type="String" line="46"/>
            <declaration name="index2c" type="String" line="47"/>
            <declaration name="mask1" type="int" line="48"/>
            <declaration name="mask2" type="int" line="49"/>
            <declaration name="shift" type="int" line="50"/>
            <declaration name="outputByte" type="byte[]" line="52"/>
            <declaration name="sgp" type="Surrogate.Parser" line="53"/>
            <method name="SimpleEUCEncoder" type="constructor" line="56">
                <params>
                    <param name="cs" type="Charset"/>
                </params>
            </method>
            <javadoc line="60">
                Returns true if the given character can be converted to the
                  target character encoding.                
            </javadoc>
            <method name="canEncode" type="boolean" line="65">
                <params>
                    <param name="ch" type="char"/>
                </params>
                <comment line="93">
                    only return true if input char was unicode null - all others are
                         undefined                    
                </comment>
                <declaration name="index" type="int" line="66"/>
                <declaration name="theChars" type="String" line="67"/>
                <scope line="74"/>
                <scope line="79"/>
                <scope line="83"/>
            </method>
            <method name="encodeArrayLoop" type="CoderResult" line="97">
                <params>
                    <param name="src" type="CharBuffer"/>
                    <param name="dst" type="ByteBuffer"/>
                </params>
                <comment line="130">
                    We have a valid character, get the bytes for it                    
                </comment>
                <declaration name="sa" type="char[]" line="98"/>
                <declaration name="sp" type="int" line="99"/>
                <declaration name="sl" type="int" line="100"/>
                <declaration name="da" type="byte[]" line="103"/>
                <declaration name="dp" type="int" line="104"/>
                <declaration name="dl" type="int" line="105"/>
                <declaration name="index" type="int" line="109"/>
                <declaration name="spaceNeeded" type="int" line="110"/>
                <declaration name="i" type="int" line="111"/>
                <scope line="113">
                    <scope line="114">
                        <declaration name="allZeroes" type="boolean" line="115"/>
                        <declaration name="inputChar" type="char" line="116"/>
                        <scope line="117"/>
                        <declaration name="theChars" type="String" line="126"/>
                        <declaration name="aChar" type="char" line="127"/>
                        <scope line="134"/>
                        <scope line="137"/>
                        <scope line="141"/>
                        <scope line="153">
                            <scope line="154"/>
                        </scope>
                        <scope line="160"/>
                        <declaration name="oindex" type="int" line="164"/>
                        <scope line="167"/>
                        <scope line="176"/>
                    </scope>
                </scope>
                <scope line="182"/>
            </method>
            <method name="encodeBufferLoop" type="CoderResult" line="188">
                <params>
                    <param name="src" type="CharBuffer"/>
                    <param name="dst" type="ByteBuffer"/>
                </params>
                <comment line="210">
                    We have a valid character, get the bytes for it                    
                </comment>
                <declaration name="index" type="int" line="189"/>
                <declaration name="spaceNeeded" type="int" line="190"/>
                <declaration name="i" type="int" line="191"/>
                <declaration name="mark" type="int" line="192"/>
                <scope line="193">
                    <scope line="194">
                        <declaration name="inputChar" type="char" line="195"/>
                        <declaration name="allZeroes" type="boolean" line="196"/>
                        <scope line="197"/>
                        <declaration name="theChars" type="String" line="206"/>
                        <declaration name="aChar" type="char" line="207"/>
                        <scope line="214"/>
                        <scope line="217"/>
                        <scope line="221"/>
                        <scope line="233">
                            <scope line="234"/>
                        </scope>
                        <scope line="239"/>
                        <declaration name="oindex" type="int" line="243"/>
                        <scope line="246"/>
                        <scope line="254"/>
                    </scope>
                </scope>
                <scope line="260"/>
            </method>
            <method name="encodeLoop" type="CoderResult" line="265">
                <params>
                    <param name="src" type="CharBuffer"/>
                    <param name="dst" type="ByteBuffer"/>
                </params>
            </method>
            <method name="encode" type="byte" line="272">
                <params>
                    <param name="inputChar" type="char"/>
                </params>
            </method>
        </class>
    </source>