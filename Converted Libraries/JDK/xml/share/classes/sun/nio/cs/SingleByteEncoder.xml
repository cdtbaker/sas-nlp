<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs">
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.CharBuffer"/>
        <import package="java.nio.charset.Charset"/>
        <import package="java.nio.charset.CharsetEncoder"/>
        <import package="java.nio.charset.CoderResult"/>
        <import package="java.nio.charset.CharacterCodingException"/>
        <import package="java.nio.charset.MalformedInputException"/>
        <import package="java.nio.charset.UnmappableCharacterException"/>
        <import package="sun.nio.cs.Surrogate"/>
        <class name="SingleByteEncoder" line="11">
            <extends class="CharsetEncoder"/>
            <declaration name="index1" type="short" line="12"/>
            <declaration name="index2" type="String" line="13"/>
            <declaration name="mask1" type="int" line="14"/>
            <declaration name="mask2" type="int" line="15"/>
            <declaration name="shift" type="int" line="16"/>
            <declaration name="sgp" type="Surrogate.Parser" line="17"/>
            <method name="SingleByteEncoder" type="constructor" line="18">
                <params>
                    <param name="cs" type="Charset"/>
                    <param name="index1" type="short[]"/>
                    <param name="index2" type="String"/>
                    <param name="mask1" type="int"/>
                    <param name="mask2" type="int"/>
                    <param name="shift" type="int"/>
                </params>
            </method>
            <method name="canEncode" type="boolean" line="26">
                <params>
                    <param name="c" type="char"/>
                </params>
                <declaration name="testEncode" type="char" line="27"/>
            </method>
            <method name="encodeArrayLoop" type="CoderResult" line="30">
                <params>
                    <param name="src" type="CharBuffer"/>
                    <param name="dst" type="ByteBuffer"/>
                </params>
                <declaration name="sa" type="char[]" line="31"/>
                <declaration name="sp" type="int" line="32"/>
                <declaration name="sl" type="int" line="33"/>
                <declaration name="da" type="byte[]" line="36"/>
                <declaration name="dp" type="int" line="37"/>
                <declaration name="dl" type="int" line="38"/>
                <scope line="41">
                    <scope line="42">
                        <declaration name="c" type="char" line="43"/>
                        <scope line="44"/>
                        <declaration name="e" type="char" line="50"/>
                    </scope>
                </scope>
                <scope line="57"/>
            </method>
            <method name="encodeBufferLoop" type="CoderResult" line="62">
                <params>
                    <param name="src" type="CharBuffer"/>
                    <param name="dst" type="ByteBuffer"/>
                </params>
                <declaration name="mark" type="int" line="63"/>
                <scope line="64">
                    <scope line="65">
                        <declaration name="c" type="char" line="66"/>
                        <scope line="67"/>
                        <declaration name="e" type="char" line="73"/>
                    </scope>
                </scope>
                <scope line="80"/>
            </method>
            <method name="encodeLoop" type="CoderResult" line="84">
                <params>
                    <param name="src" type="CharBuffer"/>
                    <param name="dst" type="ByteBuffer"/>
                </params>
            </method>
            <method name="encode" type="byte" line="88">
                <params>
                    <param name="inputChar" type="char"/>
                </params>
            </method>
        </class>
    </source>