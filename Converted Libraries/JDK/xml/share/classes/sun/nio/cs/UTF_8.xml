<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs">
        <import package="java.nio.Buffer"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.CharBuffer"/>
        <import package="java.nio.charset.Charset"/>
        <import package="java.nio.charset.CharsetDecoder"/>
        <import package="java.nio.charset.CharsetEncoder"/>
        <import package="java.nio.charset.CoderResult"/>
        <import package="java.nio.charset.CodingErrorAction"/>
        <class name="UTF_8" line="10">
            <extends class="Unicode"/>
            <method name="UTF_8" type="constructor" line="11"/>
            <method name="historicalName" type="String" line="14"/>
            <method name="newDecoder" type="CharsetDecoder" line="17"/>
            <method name="newEncoder" type="CharsetEncoder" line="20"/>
            <method name="updatePositions" type="void" line="23">
                <params>
                    <param name="src" type="Buffer"/>
                    <param name="sp" type="int"/>
                    <param name="dst" type="Buffer"/>
                    <param name="dp" type="int"/>
                </params>
            </method>
            <class name="Decoder" line="27">
                <extends class="CharsetDecoder"/>
                <implements interface="ArrayDecoder"/>
                <method name="Decoder" type="constructor" line="28">
                    <params>
                        <param name="cs" type="Charset"/>
                    </params>
                </method>
                <method name="isNotContinuation" type="boolean" line="31">
                    <params>
                        <param name="b" type="int"/>
                    </params>
                </method>
                <method name="isMalformed2" type="boolean" line="34">
                    <params>
                        <param name="b1" type="int"/>
                        <param name="b2" type="int"/>
                    </params>
                </method>
                <method name="isMalformed3" type="boolean" line="37">
                    <params>
                        <param name="b1" type="int"/>
                        <param name="b2" type="int"/>
                        <param name="b3" type="int"/>
                    </params>
                </method>
                <method name="isMalformed4" type="boolean" line="40">
                    <params>
                        <param name="b2" type="int"/>
                        <param name="b3" type="int"/>
                        <param name="b4" type="int"/>
                    </params>
                </method>
                <method name="lookupN" type="CoderResult" line="43">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="n" type="int"/>
                    </params>
                    <scope line="44"/>
                </method>
                <method name="malformedN" type="CoderResult" line="49">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="nb" type="int"/>
                    </params>
                </method>
                <method name="malformed" type="CoderResult" line="79">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="sp" type="int"/>
                        <param name="dst" type="CharBuffer"/>
                        <param name="dp" type="int"/>
                        <param name="nb" type="int"/>
                    </params>
                    <declaration name="cr" type="CoderResult" line="81"/>
                </method>
                <method name="malformed" type="CoderResult" line="85">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="mark" type="int"/>
                        <param name="nb" type="int"/>
                    </params>
                    <declaration name="cr" type="CoderResult" line="87"/>
                </method>
                <method name="xflow" type="CoderResult" line="91">
                    <params>
                        <param name="src" type="Buffer"/>
                        <param name="sp" type="int"/>
                        <param name="sl" type="int"/>
                        <param name="dst" type="Buffer"/>
                        <param name="dp" type="int"/>
                        <param name="nb" type="int"/>
                    </params>
                </method>
                <method name="xflow" type="CoderResult" line="95">
                    <params>
                        <param name="src" type="Buffer"/>
                        <param name="mark" type="int"/>
                        <param name="nb" type="int"/>
                    </params>
                    <declaration name="cr" type="CoderResult" line="96"/>
                </method>
                <method name="decodeArrayLoop" type="CoderResult" line="100">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <declaration name="sa" type="byte[]" line="101"/>
                    <declaration name="sp" type="int" line="102"/>
                    <declaration name="sl" type="int" line="103"/>
                    <declaration name="da" type="char[]" line="104"/>
                    <declaration name="dp" type="int" line="105"/>
                    <declaration name="dl" type="int" line="106"/>
                    <declaration name="dlASCII" type="int" line="107"/>
                    <scope line="109">
                        <declaration name="b1" type="int" line="110"/>
                        <scope line="111"/>
                        <scope line="116">
                            <declaration name="b2" type="int" line="118"/>
                        </scope>
                        <scope line="123">
                            <declaration name="b2" type="int" line="125"/>
                            <declaration name="b3" type="int" line="126"/>
                        </scope>
                        <scope line="131">
                            <declaration name="b2" type="int" line="133"/>
                            <declaration name="b3" type="int" line="134"/>
                            <declaration name="b4" type="int" line="135"/>
                            <declaration name="uc" type="int" line="136"/>
                            <scope line="137"/>
                        </scope>
                    </scope>
                </method>
                <method name="decodeBufferLoop" type="CoderResult" line="148">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <declaration name="mark" type="int" line="149"/>
                    <declaration name="limit" type="int" line="150"/>
                    <scope line="151">
                        <declaration name="b1" type="int" line="152"/>
                        <scope line="153"/>
                        <scope line="158">
                            <declaration name="b2" type="int" line="160"/>
                        </scope>
                        <scope line="165">
                            <declaration name="b2" type="int" line="167"/>
                            <declaration name="b3" type="int" line="168"/>
                        </scope>
                        <scope line="173">
                            <declaration name="b2" type="int" line="175"/>
                            <declaration name="b3" type="int" line="176"/>
                            <declaration name="b4" type="int" line="177"/>
                            <declaration name="uc" type="int" line="178"/>
                            <scope line="179"/>
                        </scope>
                        <scope line="186"/>
                    </scope>
                </method>
                <method name="decodeLoop" type="CoderResult" line="192">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                </method>
                <method name="getByteBuffer" type="ByteBuffer" line="196">
                    <params>
                        <param name="bb" type="ByteBuffer"/>
                        <param name="ba" type="byte[]"/>
                        <param name="sp" type="int"/>
                    </params>
                </method>
                <method name="decode" type="int" line="201">
                    <params>
                        <param name="sa" type="byte[]"/>
                        <param name="sp" type="int"/>
                        <param name="len" type="int"/>
                        <param name="da" type="char[]"/>
                    </params>
                    <declaration name="sl" type="int" line="202"/>
                    <declaration name="dp" type="int" line="203"/>
                    <declaration name="dlASCII" type="int" line="204"/>
                    <declaration name="bb" type="ByteBuffer" line="205"/>
                    <scope line="207">
                        <declaration name="b1" type="int" line="208"/>
                        <scope line="209"/>
                        <scope line="212">
                            <scope line="213">
                                <declaration name="b2" type="int" line="214"/>
                                <scope line="215"/>
                                <scope line="220"/>
                            </scope>
                        </scope>
                        <scope line="229">
                            <scope line="230">
                                <declaration name="b2" type="int" line="231"/>
                                <declaration name="b3" type="int" line="232"/>
                                <scope line="233"/>
                                <scope line="240"/>
                            </scope>
                        </scope>
                        <scope line="249">
                            <scope line="250">
                                <declaration name="b2" type="int" line="251"/>
                                <declaration name="b3" type="int" line="252"/>
                                <declaration name="b4" type="int" line="253"/>
                                <declaration name="uc" type="int" line="254"/>
                                <scope line="255"/>
                                <scope line="262"/>
                            </scope>
                        </scope>
                        <scope line="272">
                            <declaration name="cr" type="CoderResult" line="277"/>
                            <scope line="278"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="Encoder" line="287">
                <extends class="CharsetEncoder"/>
                <implements interface="ArrayEncoder"/>
                <method name="Encoder" type="constructor" line="288">
                    <params>
                        <param name="cs" type="Charset"/>
                    </params>
                </method>
                <method name="canEncode" type="boolean" line="291">
                    <params>
                        <param name="c" type="char"/>
                    </params>
                </method>
                <method name="isLegalReplacement" type="boolean" line="294">
                    <params>
                        <param name="repl" type="byte[]"/>
                    </params>
                </method>
                <method name="overflow" type="CoderResult" line="297">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="sp" type="int"/>
                        <param name="dst" type="ByteBuffer"/>
                        <param name="dp" type="int"/>
                    </params>
                </method>
                <method name="overflow" type="CoderResult" line="301">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="mark" type="int"/>
                    </params>
                </method>
                <declaration name="sgp" type="Surrogate.Parser" line="305"/>
                <method name="encodeArrayLoop" type="CoderResult" line="306">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                    <declaration name="sa" type="char[]" line="307"/>
                    <declaration name="sp" type="int" line="308"/>
                    <declaration name="sl" type="int" line="309"/>
                    <declaration name="da" type="byte[]" line="310"/>
                    <declaration name="dp" type="int" line="311"/>
                    <declaration name="dl" type="int" line="312"/>
                    <declaration name="dlASCII" type="int" line="313"/>
                    <scope line="315">
                        <declaration name="c" type="char" line="316"/>
                        <scope line="317"/>
                        <scope line="321"/>
                        <scope line="326">
                            <declaration name="uc" type="int" line="328"/>
                            <scope line="329"/>
                        </scope>
                        <scope line="340"/>
                    </scope>
                </method>
                <method name="encodeBufferLoop" type="CoderResult" line="351">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                    <declaration name="mark" type="int" line="352"/>
                    <scope line="353">
                        <declaration name="c" type="char" line="354"/>
                        <scope line="355"/>
                        <scope line="359"/>
                        <scope line="364">
                            <declaration name="uc" type="int" line="366"/>
                            <scope line="367"/>
                        </scope>
                        <scope line="378"/>
                    </scope>
                </method>
                <method name="encodeLoop" type="CoderResult" line="389">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                </method>
                <method name="encode" type="int" line="393">
                    <params>
                        <param name="sa" type="char[]"/>
                        <param name="sp" type="int"/>
                        <param name="len" type="int"/>
                        <param name="da" type="byte[]"/>
                    </params>
                    <declaration name="sl" type="int" line="394"/>
                    <declaration name="dp" type="int" line="395"/>
                    <declaration name="dlASCII" type="int" line="396"/>
                    <scope line="398">
                        <declaration name="c" type="char" line="399"/>
                        <scope line="400"/>
                        <scope line="403"/>
                        <scope line="407">
                            <declaration name="uc" type="int" line="409"/>
                            <scope line="410"/>
                            <scope line="414"/>
                        </scope>
                        <scope line="422"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>