<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs.ext">
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.CharBuffer"/>
        <import package="java.nio.charset.Charset"/>
        <import package="java.nio.charset.CharsetDecoder"/>
        <import package="java.nio.charset.CharsetEncoder"/>
        <import package="java.nio.charset.CoderResult"/>
        <import package="sun.nio.cs.Surrogate"/>
        <class name="GB18030" line="9">
            <extends class="Charset"/>
            <declaration name="GB18030_SINGLE_BYTE" type="int" line="10"/>
            <declaration name="GB18030_DOUBLE_BYTE" type="int" line="11"/>
            <declaration name="GB18030_FOUR_BYTE" type="int" line="12"/>
            <method name="GB18030" type="constructor" line="13"/>
            <method name="getDecoderIndex1" type="short[]" line="16"/>
            <method name="getDecoderIndex2" type="String[]" line="19"/>
            <method name="getSubDecoderIndex1" type="short[]" line="22"/>
            <method name="getSubDecoderIndex2" type="String[]" line="25"/>
            <method name="getEncoderIndex1" type="short[]" line="28"/>
            <method name="getEncoderIndex2" type="String[]" line="31"/>
            <method name="contains" type="boolean" line="34">
                <params>
                    <param name="cs" type="Charset"/>
                </params>
            </method>
            <method name="newDecoder" type="CharsetDecoder" line="37"/>
            <method name="newEncoder" type="CharsetEncoder" line="40"/>
            <declaration name="innerDecoderIndex0" type="String" line="43"/>
            <declaration name="innerDecoderIndex1" type="String" line="44"/>
            <declaration name="innerDecoderIndex2" type="String" line="45"/>
            <declaration name="innerDecoderIndex3" type="String" line="46"/>
            <declaration name="innerDecoderIndex4" type="String" line="47"/>
            <declaration name="innerDecoderIndex5" type="String" line="48"/>
            <declaration name="decoderIndex1" type="short" line="49"/>
            <declaration name="decoderIndex2" type="String" line="50"/>
            <declaration name="innerIndex0" type="String" line="51"/>
            <declaration name="innerIndex1" type="String" line="52"/>
            <declaration name="innerIndex2" type="String" line="53"/>
            <declaration name="innerIndex3" type="String" line="54"/>
            <declaration name="innerIndex4" type="String" line="55"/>
            <declaration name="innerIndex5" type="String" line="56"/>
            <declaration name="innerIndex6" type="String" line="57"/>
            <declaration name="innerIndex7" type="String" line="58"/>
            <declaration name="index1" type="short" line="59"/>
            <declaration name="index2" type="String" line="60"/>
            <declaration name="innerEncoderIndex0" type="String" line="61"/>
            <declaration name="innerEncoderIndex1" type="String" line="62"/>
            <declaration name="innerEncoderIndex2" type="String" line="63"/>
            <declaration name="innerEncoderIndex3" type="String" line="64"/>
            <declaration name="innerEncoderIndex4" type="String" line="65"/>
            <declaration name="innerEncoderIndex5" type="String" line="66"/>
            <declaration name="innerEncoderIndex6" type="String" line="67"/>
            <declaration name="innerEncoderIndex7" type="String" line="68"/>
            <declaration name="innerEncoderIndex8" type="String" line="69"/>
            <declaration name="innerEncoderIndex9" type="String" line="70"/>
            <declaration name="innerEncoderIndex10" type="String" line="71"/>
            <declaration name="innerEncoderIndex11" type="String" line="72"/>
            <declaration name="innerEncoderIndex12" type="String" line="73"/>
            <declaration name="encoderIndex1" type="short" line="74"/>
            <declaration name="encoderIndex2" type="String" line="75"/>
            <class name="Decoder" line="76">
                <extends class="CharsetDecoder"/>
                <declaration name="REPLACE_CHAR" type="char" line="77"/>
                <declaration name="currentState" type="int" line="78"/>
                <method name="Decoder" type="constructor" line="79">
                    <params>
                        <param name="cs" type="Charset"/>
                    </params>
                </method>
                <method name="getChar" type="char" line="82">
                    <params>
                        <param name="offset" type="int"/>
                    </params>
                    <declaration name="byte1" type="int" line="83"/>
                    <declaration name="byte2" type="int" line="84"/>
                    <declaration name="start" type="int" line="85"/>
                    <scope line="86"/>
                    <declaration name="n" type="int" line="89"/>
                </method>
                <method name="decodeDouble" type="char" line="92">
                    <params>
                        <param name="byte1" type="int"/>
                        <param name="byte2" type="int"/>
                    </params>
                    <declaration name="start" type="int" line="93"/>
                    <declaration name="n" type="int" line="95"/>
                </method>
                <method name="implReset" type="void" line="98"/>
                <method name="decodeArrayLoop" type="CoderResult" line="101">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <declaration name="sa" type="byte[]" line="102"/>
                    <declaration name="sp" type="int" line="103"/>
                    <declaration name="sl" type="int" line="104"/>
                    <declaration name="da" type="char[]" line="107"/>
                    <declaration name="dp" type="int" line="108"/>
                    <declaration name="dl" type="int" line="109"/>
                    <declaration name="inputSize" type="int" line="112"/>
                    <scope line="113">
                        <scope line="114">
                            <declaration name="byte1" type="int" line="115"/>
                            <scope line="118"/>
                            <scope line="121"/>
                            <scope line="124">
                                <scope line="129"/>
                                <scope line="138"/>
                            </scope>
                            <declaration name="offset" type="int" line="152"/>
                            <declaration name="hiByte" type="int" line="153"/>
                            <declaration name="lowByte" type="int" line="154"/>
                            <scope line="160"/>
                        </scope>
                    </scope>
                    <scope line="174"/>
                </method>
                <method name="decodeBufferLoop" type="CoderResult" line="179">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <declaration name="mark" type="int" line="180"/>
                    <scope line="181">
                        <scope line="182">
                            <declaration name="byte1" type="int" line="183"/>
                            <declaration name="inputSize" type="int" line="185"/>
                            <scope line="186"/>
                            <scope line="189"/>
                            <scope line="192">
                                <scope line="197"/>
                                <scope line="206"/>
                            </scope>
                            <declaration name="offset" type="int" line="220"/>
                            <declaration name="hiByte" type="int" line="221"/>
                            <declaration name="lowByte" type="int" line="222"/>
                            <scope line="228"/>
                            <scope line="235"/>
                        </scope>
                    </scope>
                    <scope line="243"/>
                </method>
                <method name="decodeLoop" type="CoderResult" line="247">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                </method>
            </class>
            <class name="Encoder" line="252">
                <extends class="CharsetEncoder"/>
                <declaration name="currentState" type="int" line="253"/>
                <method name="Encoder" type="constructor" line="254">
                    <params>
                        <param name="cs" type="Charset"/>
                    </params>
                </method>
                <method name="canEncode" type="boolean" line="257">
                    <params>
                        <param name="c" type="char"/>
                    </params>
                </method>
                <declaration name="sgp" type="Surrogate.Parser" line="260"/>
                <method name="getGB18030" type="int" line="261">
                    <params>
                        <param name="outerIndex" type="short[]"/>
                        <param name="innerEncoderIndex" type="String[]"/>
                        <param name="ch" type="char"/>
                    </params>
                    <declaration name="offset" type="int" line="262"/>
                </method>
                <method name="implReset" type="void" line="265"/>
                <method name="encodeArrayLoop" type="CoderResult" line="268">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                    <declaration name="sa" type="char[]" line="269"/>
                    <declaration name="sp" type="int" line="270"/>
                    <declaration name="sl" type="int" line="271"/>
                    <declaration name="da" type="byte[]" line="274"/>
                    <declaration name="dp" type="int" line="275"/>
                    <declaration name="dl" type="int" line="276"/>
                    <declaration name="condensedKey" type="int" line="279"/>
                    <declaration name="hiByte" type="int" line="280"/>
                    <scope line="282">
                        <scope line="283">
                            <declaration name="inputSize" type="int" line="284"/>
                            <declaration name="c" type="char" line="285"/>
                            <scope line="286"/>
                            <scope line="292"/>
                            <scope line="295">
                                <declaration name="outByteVal" type="int" line="296"/>
                            </scope>
                            <scope line="306"/>
                            <declaration name="b1" type="byte" line="321"/>
                        </scope>
                    </scope>
                    <scope line="341"/>
                </method>
                <method name="encodeBufferLoop" type="CoderResult" line="346">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                    <declaration name="condensedKey" type="int" line="347"/>
                    <declaration name="hiByte" type="int" line="348"/>
                    <declaration name="mark" type="int" line="350"/>
                    <scope line="351">
                        <scope line="352">
                            <declaration name="c" type="char" line="353"/>
                            <declaration name="inputSize" type="int" line="354"/>
                            <scope line="355"/>
                            <scope line="361"/>
                            <scope line="364">
                                <declaration name="outByteVal" type="int" line="365"/>
                            </scope>
                            <scope line="375"/>
                            <scope line="379"/>
                            <scope line="383"/>
                            <scope line="388">
                                <declaration name="b1" type="byte" line="389"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="406"/>
                </method>
                <method name="encodeLoop" type="CoderResult" line="410">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                </method>
            </class>
        </class>
    </source>