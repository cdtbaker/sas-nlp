<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs">
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.CharBuffer"/>
        <import package="java.nio.charset.Charset"/>
        <import package="java.nio.charset.CharsetDecoder"/>
        <import package="java.nio.charset.CharsetEncoder"/>
        <import package="java.nio.charset.CoderResult"/>
        <import package="java.util.Arrays"/>
        <class name="US_ASCII" line="36">
            <extends class="Charset"/>
            <implements interface="HistoricallyNamedCharset"/>
            <method name="US_ASCII" type="constructor" line="41"/>
            <method name="historicalName" type="String" line="45"/>
            <method name="contains" type="boolean" line="49">
                <params>
                    <param name="cs" type="Charset"/>
                </params>
            </method>
            <method name="newDecoder" type="CharsetDecoder" line="53"/>
            <method name="newEncoder" type="CharsetEncoder" line="57"/>
            <class name="Decoder" line="61">
                <extends class="CharsetDecoder"/>
                <implements interface="ArrayDecoder"/>
                <method name="Decoder" type="constructor" line="64">
                    <params>
                        <param name="cs" type="Charset"/>
                    </params>
                </method>
                <method name="decodeArrayLoop" type="CoderResult" line="70">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <declaration name="sa" type="byte[]" line="71"/>
                    <declaration name="sp" type="int" line="72"/>
                    <declaration name="sl" type="int" line="73"/>
                    <declaration name="da" type="char[]" line="76"/>
                    <declaration name="dp" type="int" line="77"/>
                    <declaration name="dl" type="int" line="78"/>
                    <scope line="82">
                        <scope line="83">
                            <declaration name="b" type="byte" line="84"/>
                            <scope line="85"/>
                        </scope>
                    </scope>
                    <scope line="95"/>
                </method>
                <method name="decodeBufferLoop" type="CoderResult" line="103">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <declaration name="mark" type="int" line="104"/>
                    <scope line="105">
                        <scope line="106">
                            <declaration name="b" type="byte" line="107"/>
                            <scope line="108"/>
                        </scope>
                    </scope>
                    <scope line="118"/>
                </method>
                <method name="decodeLoop" type="CoderResult" line="125">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                </method>
                <declaration name="repl" type="char" line="132"/>
                <method name="implReplaceWith" type="void" line="133">
                    <params>
                        <param name="newReplacement" type="String"/>
                    </params>
                </method>
                <method name="decode" type="int" line="137">
                    <params>
                        <param name="src" type="byte[]"/>
                        <param name="sp" type="int"/>
                        <param name="len" type="int"/>
                        <param name="dst" type="char[]"/>
                    </params>
                    <declaration name="dp" type="int" line="138"/>
                    <scope line="140">
                        <declaration name="b" type="byte" line="141"/>
                    </scope>
                </method>
            </class>
            <class name="Encoder" line="151">
                <extends class="CharsetEncoder"/>
                <implements interface="ArrayEncoder"/>
                <method name="Encoder" type="constructor" line="154">
                    <params>
                        <param name="cs" type="Charset"/>
                    </params>
                </method>
                <method name="canEncode" type="boolean" line="158">
                    <params>
                        <param name="c" type="char"/>
                    </params>
                </method>
                <method name="isLegalReplacement" type="boolean" line="162">
                    <params>
                        <param name="repl" type="byte[]"/>
                    </params>
                </method>
                <declaration name="sgp" type="Surrogate.Parser" line="167"/>
                <method name="encodeArrayLoop" type="CoderResult" line="170">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                    <declaration name="sa" type="char[]" line="171"/>
                    <declaration name="sp" type="int" line="172"/>
                    <declaration name="sl" type="int" line="173"/>
                    <declaration name="da" type="byte[]" line="176"/>
                    <declaration name="dp" type="int" line="177"/>
                    <declaration name="dl" type="int" line="178"/>
                    <scope line="182">
                        <scope line="183">
                            <declaration name="c" type="char" line="184"/>
                            <scope line="185"/>
                        </scope>
                    </scope>
                    <scope line="197"/>
                </method>
                <method name="encodeBufferLoop" type="CoderResult" line="205">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                    <declaration name="mark" type="int" line="206"/>
                    <scope line="207">
                        <scope line="208">
                            <declaration name="c" type="char" line="209"/>
                            <scope line="210"/>
                        </scope>
                    </scope>
                    <scope line="222"/>
                </method>
                <method name="encodeLoop" type="CoderResult" line="229">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                </method>
                <declaration name="repl" type="byte" line="236"/>
                <method name="implReplaceWith" type="void" line="237">
                    <params>
                        <param name="newReplacement" type="byte[]"/>
                    </params>
                </method>
                <method name="encode" type="int" line="241">
                    <params>
                        <param name="src" type="char[]"/>
                        <param name="sp" type="int"/>
                        <param name="len" type="int"/>
                        <param name="dst" type="byte[]"/>
                    </params>
                    <declaration name="dp" type="int" line="242"/>
                    <declaration name="sl" type="int" line="243"/>
                    <scope line="244">
                        <declaration name="c" type="char" line="245"/>
                        <scope line="246"/>
                        <scope line="251">
                            <scope line="252"/>
                        </scope>
                    </scope>
                </method>
            </class>
        </class>
    </source>