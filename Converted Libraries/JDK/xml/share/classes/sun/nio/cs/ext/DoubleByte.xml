<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs.ext">
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.CharBuffer"/>
        <import package="java.nio.charset.Charset"/>
        <import package="java.nio.charset.CharsetDecoder"/>
        <import package="java.nio.charset.CharsetEncoder"/>
        <import package="java.nio.charset.CoderResult"/>
        <import package="java.util.Arrays"/>
        <import package="sun.nio.cs.Surrogate"/>
        <import package="sun.nio.cs.CharsetMapping"/>
        <class name="DoubleByte" line="101">
            <comment line="234">
                IBM_EBCDIC_DBCS                
            </comment>
            <comment line="373">
                EBCDIC_DBCS_ONLY                
            </comment>
            <comment line="385">
                EUC_SIMPLE                
            </comment>
            <comment line="386">
                The only thing we need to &quot;override&quot; is to check SS2/SS3 and                
            </comment>
            <comment line="387">
                return &quot;malformed&quot; if found                
            </comment>
            <comment line="608">
                EBCDIC_DBCS_ONLY                
            </comment>
            <comment line="623">
                for IBM_EBCDIC_DBCS                
            </comment>
            <comment line="747">
                EUC_SIMPLE                
            </comment>
            <declaration name="B2C_UNMAPPABLE" type="char[]" line="103"/>
            <scope line="104"/>
            <class name="Decoder" line="109">
                <extends class="CharsetDecoder"/>
                <comment line="119">
                    for SimpleEUC override                    
                </comment>
                <comment line="205">
                    Make some protected methods public for use by JISAutoDetect                    
                </comment>
                <comment line="221">
                    decode loops are not using decodeSingle/Double() for performance                    
                </comment>
                <comment line="222">
                    reason.                    
                </comment>
                <comment line="251">
                    Check validity of dbcs ebcdic byte pair values                    
                </comment>
                <comment line="252">
                                        
                </comment>
                <comment line="253">
                    First byte : 0x41 -- 0xFE                    
                </comment>
                <comment line="254">
                    Second byte: 0x41 -- 0xFE                    
                </comment>
                <comment line="255">
                    Doublebyte blank: 0x4040                    
                </comment>
                <comment line="256">
                                        
                </comment>
                <comment line="257">
                    The validation implementation in &quot;old&quot; DBCS_IBM_EBCDIC and sun.io                    
                </comment>
                <comment line="258">
                    as                    
                </comment>
                <comment line="259">
                    if ((b1 != 0x40 || b2 != 0x40) &amp;&amp;                    
                </comment>
                <comment line="260">
                    (b2 &lt; 0x41 || b2 &gt; 0xfe)) {...}                    
                </comment>
                <comment line="261">
                    is not correct/complete (range check for b1)                    
                </comment>
                <comment line="262">
                                        
                </comment>
                <comment line="397">
                    No support provided for G2/G3 for SimpleEUC                    
                </comment>
                <comment line="524">
                    init the c2b and c2bIndex tables from b2c.                    
                </comment>
                <implements interface="DelegatableDecoder"/>
                <declaration name="b2c" type="char[][]" line="113"/>
                <declaration name="b2cSB" type="char[]" line="114"/>
                <declaration name="b2Min" type="int" line="115"/>
                <declaration name="b2Max" type="int" line="116"/>
                <method name="crMalformedOrUnderFlow" type="CoderResult" line="119">
                    <params>
                        <param name="b" type="int"/>
                    </params>
                </method>
                <method name="crMalformedOrUnmappable" type="CoderResult" line="123">
                    <params>
                        <param name="b" type="int"/>
                    </params>
                </method>
                <method name="Decoder" type="constructor" line="129">
                    <params>
                        <param name="cs" type="Charset"/>
                        <param name="avgcpb" type="float"/>
                        <param name="maxcpb" type="float"/>
                        <param name="b2c" type="char[][]"/>
                        <param name="b2cSB" type="char[]"/>
                        <param name="b2Min" type="int"/>
                        <param name="b2Max" type="int"/>
                    </params>
                </method>
                <method name="Decoder" type="constructor" line="137">
                    <params>
                        <param name="cs" type="Charset"/>
                        <param name="b2c" type="char[][]"/>
                        <param name="b2cSB" type="char[]"/>
                        <param name="b2Min" type="int"/>
                        <param name="b2Max" type="int"/>
                    </params>
                </method>
                <method name="decodeArrayLoop" type="CoderResult" line="141">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <comment line="152">
                        inline the decodeSingle/Double() for better performance                        
                    </comment>
                    <declaration name="sa" type="byte[]" line="142"/>
                    <declaration name="sp" type="int" line="143"/>
                    <declaration name="sl" type="int" line="144"/>
                    <declaration name="da" type="char[]" line="146"/>
                    <declaration name="dp" type="int" line="147"/>
                    <declaration name="dl" type="int" line="148"/>
                    <scope line="150">
                        <scope line="151">
                            <declaration name="inSize" type="int" line="153"/>
                            <declaration name="b1" type="int" line="154"/>
                            <declaration name="c" type="char" line="155"/>
                            <scope line="156">
                                <declaration name="b2" type="int" line="159"/>
                                <scope line="161"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="171"/>
                </method>
                <method name="decodeBufferLoop" type="CoderResult" line="177">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <declaration name="mark" type="int" line="178"/>
                    <scope line="179">
                        <scope line="181">
                            <declaration name="b1" type="int" line="182"/>
                            <declaration name="c" type="char" line="183"/>
                            <declaration name="inSize" type="int" line="184"/>
                            <scope line="185">
                                <declaration name="b2" type="int" line="188"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="199"/>
                </method>
                <method name="decodeLoop" type="CoderResult" line="205">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                </method>
                <method name="implReset" type="void" line="212"/>
                <method name="implFlush" type="CoderResult" line="216">
                    <params>
                        <param name="out" type="CharBuffer"/>
                    </params>
                </method>
                <method name="decodeSingle" type="char" line="222">
                    <params>
                        <param name="b" type="int"/>
                    </params>
                </method>
                <method name="decodeDouble" type="char" line="226">
                    <params>
                        <param name="b1" type="int"/>
                        <param name="b2" type="int"/>
                    </params>
                </method>
            </class>
            <class name="Decoder_EBCDIC" line="234">
                <extends class="Decoder"/>
                <comment line="119">
                    for SimpleEUC override                    
                </comment>
                <comment line="205">
                    Make some protected methods public for use by JISAutoDetect                    
                </comment>
                <comment line="221">
                    decode loops are not using decodeSingle/Double() for performance                    
                </comment>
                <comment line="222">
                    reason.                    
                </comment>
                <comment line="251">
                    Check validity of dbcs ebcdic byte pair values                    
                </comment>
                <comment line="252">
                                        
                </comment>
                <comment line="253">
                    First byte : 0x41 -- 0xFE                    
                </comment>
                <comment line="254">
                    Second byte: 0x41 -- 0xFE                    
                </comment>
                <comment line="255">
                    Doublebyte blank: 0x4040                    
                </comment>
                <comment line="256">
                                        
                </comment>
                <comment line="257">
                    The validation implementation in &quot;old&quot; DBCS_IBM_EBCDIC and sun.io                    
                </comment>
                <comment line="258">
                    as                    
                </comment>
                <comment line="259">
                    if ((b1 != 0x40 || b2 != 0x40) &amp;&amp;                    
                </comment>
                <comment line="260">
                    (b2 &lt; 0x41 || b2 &gt; 0xfe)) {...}                    
                </comment>
                <comment line="261">
                    is not correct/complete (range check for b1)                    
                </comment>
                <comment line="262">
                                        
                </comment>
                <comment line="397">
                    No support provided for G2/G3 for SimpleEUC                    
                </comment>
                <comment line="524">
                    init the c2b and c2bIndex tables from b2c.                    
                </comment>
                <declaration name="SBCS" type="int" line="235"/>
                <declaration name="DBCS" type="int" line="236"/>
                <declaration name="SO" type="int" line="237"/>
                <declaration name="SI" type="int" line="238"/>
                <declaration name="currentState" type="int" line="239"/>
                <method name="Decoder_EBCDIC" type="constructor" line="242">
                    <params>
                        <param name="cs" type="Charset"/>
                        <param name="b2c" type="char[][]"/>
                        <param name="b2cSB" type="char[]"/>
                        <param name="b2Min" type="int"/>
                        <param name="b2Max" type="int"/>
                    </params>
                </method>
                <method name="implReset" type="void" line="246"/>
                <method name="isDoubleByte" type="boolean" line="262">
                    <params>
                        <param name="b1" type="int"/>
                        <param name="b2" type="int"/>
                    </params>
                    <comment line="264">
                        DBCS-HOST SPACE                        
                    </comment>
                </method>
                <method name="decodeArrayLoop" type="CoderResult" line="267">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <comment line="276">
                        don&apos;t check dp/dl together here, it&apos;s possible to                        
                    </comment>
                    <comment line="277">
                        decdoe a SO/SI without space in output buffer.                        
                    </comment>
                    <comment line="281">
                        Shift out                        
                    </comment>
                    <declaration name="sa" type="byte[]" line="268"/>
                    <declaration name="sp" type="int" line="269"/>
                    <declaration name="sl" type="int" line="270"/>
                    <declaration name="da" type="char[]" line="271"/>
                    <declaration name="dp" type="int" line="272"/>
                    <declaration name="dl" type="int" line="273"/>
                    <scope line="275">
                        <scope line="278">
                            <declaration name="b1" type="int" line="279"/>
                            <declaration name="inSize" type="int" line="280"/>
                            <scope line="281"/>
                            <scope line="286"/>
                            <scope line="291">
                                <declaration name="c" type="char" line="292"/>
                                <scope line="293"/>
                                <scope line="297">
                                    <declaration name="b2" type="int" line="300"/>
                                    <scope line="302"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="317"/>
                </method>
                <method name="decodeBufferLoop" type="CoderResult" line="323">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <comment line="329">
                        Shift out                        
                    </comment>
                    <declaration name="mark" type="int" line="324"/>
                    <scope line="325">
                        <scope line="326">
                            <declaration name="b1" type="int" line="327"/>
                            <declaration name="inSize" type="int" line="328"/>
                            <scope line="329"/>
                            <scope line="334"/>
                            <scope line="339">
                                <declaration name="c" type="char" line="340"/>
                                <scope line="341"/>
                                <scope line="345">
                                    <declaration name="b2" type="int" line="348"/>
                                    <scope line="350"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="366"/>
                </method>
            </class>
            <class name="Decoder_EBCDIC_DBCSONLY" line="373">
                <extends class="Decoder"/>
                <comment line="119">
                    for SimpleEUC override                    
                </comment>
                <comment line="205">
                    Make some protected methods public for use by JISAutoDetect                    
                </comment>
                <comment line="221">
                    decode loops are not using decodeSingle/Double() for performance                    
                </comment>
                <comment line="222">
                    reason.                    
                </comment>
                <comment line="251">
                    Check validity of dbcs ebcdic byte pair values                    
                </comment>
                <comment line="252">
                                        
                </comment>
                <comment line="253">
                    First byte : 0x41 -- 0xFE                    
                </comment>
                <comment line="254">
                    Second byte: 0x41 -- 0xFE                    
                </comment>
                <comment line="255">
                    Doublebyte blank: 0x4040                    
                </comment>
                <comment line="256">
                                        
                </comment>
                <comment line="257">
                    The validation implementation in &quot;old&quot; DBCS_IBM_EBCDIC and sun.io                    
                </comment>
                <comment line="258">
                    as                    
                </comment>
                <comment line="259">
                    if ((b1 != 0x40 || b2 != 0x40) &amp;&amp;                    
                </comment>
                <comment line="260">
                    (b2 &lt; 0x41 || b2 &gt; 0xfe)) {...}                    
                </comment>
                <comment line="261">
                    is not correct/complete (range check for b1)                    
                </comment>
                <comment line="262">
                                        
                </comment>
                <comment line="397">
                    No support provided for G2/G3 for SimpleEUC                    
                </comment>
                <comment line="524">
                    init the c2b and c2bIndex tables from b2c.                    
                </comment>
                <declaration name="b2cSB" type="char[]" line="374"/>
                <scope line="375"/>
                <method name="Decoder_EBCDIC_DBCSONLY" type="constructor" line="379">
                    <params>
                        <param name="cs" type="Charset"/>
                        <param name="b2c" type="char[][]"/>
                        <param name="b2Min" type="int"/>
                        <param name="b2Max" type="int"/>
                    </params>
                </method>
            </class>
            <class name="Decoder_EUC_SIM" line="387">
                <extends class="Decoder"/>
                <comment line="119">
                    for SimpleEUC override                    
                </comment>
                <comment line="205">
                    Make some protected methods public for use by JISAutoDetect                    
                </comment>
                <comment line="221">
                    decode loops are not using decodeSingle/Double() for performance                    
                </comment>
                <comment line="222">
                    reason.                    
                </comment>
                <comment line="251">
                    Check validity of dbcs ebcdic byte pair values                    
                </comment>
                <comment line="252">
                                        
                </comment>
                <comment line="253">
                    First byte : 0x41 -- 0xFE                    
                </comment>
                <comment line="254">
                    Second byte: 0x41 -- 0xFE                    
                </comment>
                <comment line="255">
                    Doublebyte blank: 0x4040                    
                </comment>
                <comment line="256">
                                        
                </comment>
                <comment line="257">
                    The validation implementation in &quot;old&quot; DBCS_IBM_EBCDIC and sun.io                    
                </comment>
                <comment line="258">
                    as                    
                </comment>
                <comment line="259">
                    if ((b1 != 0x40 || b2 != 0x40) &amp;&amp;                    
                </comment>
                <comment line="260">
                    (b2 &lt; 0x41 || b2 &gt; 0xfe)) {...}                    
                </comment>
                <comment line="261">
                    is not correct/complete (range check for b1)                    
                </comment>
                <comment line="262">
                                        
                </comment>
                <comment line="397">
                    No support provided for G2/G3 for SimpleEUC                    
                </comment>
                <comment line="524">
                    init the c2b and c2bIndex tables from b2c.                    
                </comment>
                <declaration name="SS2" type="int" line="388"/>
                <declaration name="SS3" type="int" line="389"/>
                <method name="Decoder_EUC_SIM" type="constructor" line="392">
                    <params>
                        <param name="cs" type="Charset"/>
                        <param name="b2c" type="char[][]"/>
                        <param name="b2cSB" type="char[]"/>
                        <param name="b2Min" type="int"/>
                        <param name="b2Max" type="int"/>
                    </params>
                </method>
                <method name="crMalformedOrUnderFlow" type="CoderResult" line="397">
                    <params>
                        <param name="b" type="int"/>
                    </params>
                </method>
                <method name="crMalformedOrUnmappable" type="CoderResult" line="403">
                    <params>
                        <param name="b" type="int"/>
                    </params>
                </method>
            </class>
            <class name="Encoder" line="410">
                <extends class="CharsetEncoder"/>
                <comment line="119">
                    for SimpleEUC override                    
                </comment>
                <comment line="205">
                    Make some protected methods public for use by JISAutoDetect                    
                </comment>
                <comment line="221">
                    decode loops are not using decodeSingle/Double() for performance                    
                </comment>
                <comment line="222">
                    reason.                    
                </comment>
                <comment line="251">
                    Check validity of dbcs ebcdic byte pair values                    
                </comment>
                <comment line="252">
                                        
                </comment>
                <comment line="253">
                    First byte : 0x41 -- 0xFE                    
                </comment>
                <comment line="254">
                    Second byte: 0x41 -- 0xFE                    
                </comment>
                <comment line="255">
                    Doublebyte blank: 0x4040                    
                </comment>
                <comment line="256">
                                        
                </comment>
                <comment line="257">
                    The validation implementation in &quot;old&quot; DBCS_IBM_EBCDIC and sun.io                    
                </comment>
                <comment line="258">
                    as                    
                </comment>
                <comment line="259">
                    if ((b1 != 0x40 || b2 != 0x40) &amp;&amp;                    
                </comment>
                <comment line="260">
                    (b2 &lt; 0x41 || b2 &gt; 0xfe)) {...}                    
                </comment>
                <comment line="261">
                    is not correct/complete (range check for b1)                    
                </comment>
                <comment line="262">
                                        
                </comment>
                <comment line="397">
                    No support provided for G2/G3 for SimpleEUC                    
                </comment>
                <comment line="524">
                    init the c2b and c2bIndex tables from b2c.                    
                </comment>
                <declaration name="MAX_SINGLEBYTE" type="int" line="411"/>
                <declaration name="c2b" type="char[]" line="412"/>
                <declaration name="c2bIndex" type="char[]" line="413"/>
                <declaration name="sgp" type="Surrogate.Parser" line="414"/>
                <method name="Encoder" type="constructor" line="416">
                    <params>
                        <param name="cs" type="Charset"/>
                        <param name="c2b" type="char[]"/>
                        <param name="c2bIndex" type="char[]"/>
                    </params>
                </method>
                <method name="Encoder" type="constructor" line="422">
                    <params>
                        <param name="cs" type="Charset"/>
                        <param name="avg" type="float"/>
                        <param name="max" type="float"/>
                        <param name="repl" type="byte[]"/>
                        <param name="c2b" type="char[]"/>
                        <param name="c2bIndex" type="char[]"/>
                    </params>
                </method>
                <method name="canEncode" type="boolean" line="428">
                    <params>
                        <param name="c" type="char"/>
                    </params>
                </method>
                <method name="sgp" type="Surrogate.Parser" line="432"/>
                <method name="encodeArrayLoop" type="CoderResult" line="438">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                    <comment line="460">
                        DoubleByte                        
                    </comment>
                    <comment line="465">
                        SingleByte                        
                    </comment>
                    <declaration name="sa" type="char[]" line="439"/>
                    <declaration name="sp" type="int" line="440"/>
                    <declaration name="sl" type="int" line="441"/>
                    <declaration name="da" type="byte[]" line="443"/>
                    <declaration name="dp" type="int" line="444"/>
                    <declaration name="dl" type="int" line="445"/>
                    <scope line="447">
                        <scope line="448">
                            <declaration name="c" type="char" line="449"/>
                            <declaration name="bb" type="int" line="450"/>
                            <scope line="451">
                                <scope line="452"/>
                            </scope>
                            <scope line="460"/>
                            <scope line="465"/>
                        </scope>
                    </scope>
                    <scope line="474"/>
                </method>
                <method name="encodeBufferLoop" type="CoderResult" line="480">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                    <comment line="494">
                        DoubleByte                        
                    </comment>
                    <declaration name="mark" type="int" line="481"/>
                    <scope line="482">
                        <scope line="483">
                            <declaration name="c" type="char" line="484"/>
                            <declaration name="bb" type="int" line="485"/>
                            <scope line="486">
                                <scope line="487"/>
                            </scope>
                            <scope line="494"/>
                            <scope line="499"/>
                        </scope>
                    </scope>
                    <scope line="507"/>
                </method>
                <method name="encodeLoop" type="CoderResult" line="512">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                </method>
                <method name="encodeChar" type="int" line="519">
                    <params>
                        <param name="ch" type="char"/>
                    </params>
                </method>
                <method name="initC2B" type="void" line="527">
                    <params>
                        <param name="b2c" type="String[]"/>
                        <param name="b2cSB" type="String"/>
                        <param name="b2cNR" type="String"/>
                        <param name="c2bNR" type="String"/>
                        <param name="b2Min" type="int"/>
                        <param name="b2Max" type="int"/>
                        <param name="c2b" type="char[]"/>
                        <param name="c2bIndex" type="char[]"/>
                    </params>
                    <comment line="557">
                        SingleByte                        
                    </comment>
                    <comment line="572">
                        DoubleByte                        
                    </comment>
                    <comment line="591">
                        add c-&gt;b only nr entries                        
                    </comment>
                    <declaration name="off" type="int" line="529"/>
                    <declaration name="b2c_ca" type="char[][]" line="531"/>
                    <declaration name="b2cSB_ca" type="char[]" line="532"/>
                    <scope line="536"/>
                    <scope line="542">
                        <declaration name="j" type="int" line="543"/>
                        <scope line="544">
                            <declaration name="b" type="char" line="545"/>
                            <declaration name="c" type="char" line="546"/>
                            <scope line="547"/>
                            <scope line="550"/>
                        </scope>
                    </scope>
                    <scope line="557">
                        <scope line="558">
                            <declaration name="c" type="char" line="559"/>
                            <declaration name="index" type="int" line="562"/>
                            <scope line="563"/>
                        </scope>
                    </scope>
                    <scope line="572">
                        <declaration name="db" type="char[]" line="573"/>
                        <scope line="576">
                            <declaration name="c" type="char" line="577"/>
                            <declaration name="index" type="int" line="580"/>
                            <scope line="581"/>
                        </scope>
                    </scope>
                    <scope line="590">
                        <scope line="592">
                            <declaration name="b" type="char" line="593"/>
                            <declaration name="c" type="char" line="594"/>
                            <declaration name="index" type="int" line="595"/>
                            <scope line="596"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="Encoder_EBCDIC_DBCSONLY" line="608">
                <extends class="Encoder"/>
                <comment line="119">
                    for SimpleEUC override                    
                </comment>
                <comment line="205">
                    Make some protected methods public for use by JISAutoDetect                    
                </comment>
                <comment line="221">
                    decode loops are not using decodeSingle/Double() for performance                    
                </comment>
                <comment line="222">
                    reason.                    
                </comment>
                <comment line="251">
                    Check validity of dbcs ebcdic byte pair values                    
                </comment>
                <comment line="252">
                                        
                </comment>
                <comment line="253">
                    First byte : 0x41 -- 0xFE                    
                </comment>
                <comment line="254">
                    Second byte: 0x41 -- 0xFE                    
                </comment>
                <comment line="255">
                    Doublebyte blank: 0x4040                    
                </comment>
                <comment line="256">
                                        
                </comment>
                <comment line="257">
                    The validation implementation in &quot;old&quot; DBCS_IBM_EBCDIC and sun.io                    
                </comment>
                <comment line="258">
                    as                    
                </comment>
                <comment line="259">
                    if ((b1 != 0x40 || b2 != 0x40) &amp;&amp;                    
                </comment>
                <comment line="260">
                    (b2 &lt; 0x41 || b2 &gt; 0xfe)) {...}                    
                </comment>
                <comment line="261">
                    is not correct/complete (range check for b1)                    
                </comment>
                <comment line="262">
                                        
                </comment>
                <comment line="397">
                    No support provided for G2/G3 for SimpleEUC                    
                </comment>
                <comment line="524">
                    init the c2b and c2bIndex tables from b2c.                    
                </comment>
                <method name="Encoder_EBCDIC_DBCSONLY" type="constructor" line="610">
                    <params>
                        <param name="cs" type="Charset"/>
                        <param name="repl" type="byte[]"/>
                        <param name="c2b" type="char[]"/>
                        <param name="c2bIndex" type="char[]"/>
                    </params>
                </method>
                <method name="encodeChar" type="int" line="614">
                    <params>
                        <param name="ch" type="char"/>
                    </params>
                    <declaration name="bb" type="int" line="615"/>
                </method>
            </class>
            <class name="Encoder_EBCDIC" line="623">
                <extends class="Encoder"/>
                <comment line="119">
                    for SimpleEUC override                    
                </comment>
                <comment line="205">
                    Make some protected methods public for use by JISAutoDetect                    
                </comment>
                <comment line="221">
                    decode loops are not using decodeSingle/Double() for performance                    
                </comment>
                <comment line="222">
                    reason.                    
                </comment>
                <comment line="251">
                    Check validity of dbcs ebcdic byte pair values                    
                </comment>
                <comment line="252">
                                        
                </comment>
                <comment line="253">
                    First byte : 0x41 -- 0xFE                    
                </comment>
                <comment line="254">
                    Second byte: 0x41 -- 0xFE                    
                </comment>
                <comment line="255">
                    Doublebyte blank: 0x4040                    
                </comment>
                <comment line="256">
                                        
                </comment>
                <comment line="257">
                    The validation implementation in &quot;old&quot; DBCS_IBM_EBCDIC and sun.io                    
                </comment>
                <comment line="258">
                    as                    
                </comment>
                <comment line="259">
                    if ((b1 != 0x40 || b2 != 0x40) &amp;&amp;                    
                </comment>
                <comment line="260">
                    (b2 &lt; 0x41 || b2 &gt; 0xfe)) {...}                    
                </comment>
                <comment line="261">
                    is not correct/complete (range check for b1)                    
                </comment>
                <comment line="262">
                                        
                </comment>
                <comment line="397">
                    No support provided for G2/G3 for SimpleEUC                    
                </comment>
                <comment line="524">
                    init the c2b and c2bIndex tables from b2c.                    
                </comment>
                <declaration name="SBCS" type="int" line="624"/>
                <declaration name="DBCS" type="int" line="625"/>
                <declaration name="SO" type="byte" line="626"/>
                <declaration name="SI" type="byte" line="627"/>
                <declaration name="currentState" type="int" line="629"/>
                <method name="Encoder_EBCDIC" type="constructor" line="631">
                    <params>
                        <param name="cs" type="Charset"/>
                        <param name="c2b" type="char[]"/>
                        <param name="c2bIndex" type="char[]"/>
                    </params>
                </method>
                <method name="implReset" type="void" line="635"/>
                <method name="implFlush" type="CoderResult" line="639">
                    <params>
                        <param name="out" type="ByteBuffer"/>
                    </params>
                    <scope line="640"/>
                </method>
                <method name="encodeArrayLoop" type="CoderResult" line="649">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                    <comment line="669">
                        DoubleByte                        
                    </comment>
                    <comment line="680">
                        SingleByte                        
                    </comment>
                    <declaration name="sa" type="char[]" line="650"/>
                    <declaration name="sp" type="int" line="651"/>
                    <declaration name="sl" type="int" line="652"/>
                    <declaration name="da" type="byte[]" line="653"/>
                    <declaration name="dp" type="int" line="654"/>
                    <declaration name="dl" type="int" line="655"/>
                    <scope line="657">
                        <scope line="658">
                            <declaration name="c" type="char" line="659"/>
                            <declaration name="bb" type="int" line="660"/>
                            <scope line="661">
                                <scope line="662"/>
                            </scope>
                            <scope line="669">
                                <scope line="670"/>
                            </scope>
                            <scope line="680">
                                <scope line="681"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="695"/>
                </method>
                <method name="encodeBufferLoop" type="CoderResult" line="701">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                    <comment line="715">
                        DoubleByte                        
                    </comment>
                    <comment line="726">
                        Single-byte                        
                    </comment>
                    <declaration name="mark" type="int" line="702"/>
                    <scope line="703">
                        <scope line="704">
                            <declaration name="c" type="char" line="705"/>
                            <declaration name="bb" type="int" line="706"/>
                            <scope line="707">
                                <scope line="708"/>
                            </scope>
                            <scope line="715">
                                <scope line="716"/>
                            </scope>
                            <scope line="726">
                                <scope line="727"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="740"/>
                </method>
            </class>
            <class name="Encoder_EUC_SIM" line="747">
                <extends class="Encoder"/>
                <comment line="119">
                    for SimpleEUC override                    
                </comment>
                <comment line="205">
                    Make some protected methods public for use by JISAutoDetect                    
                </comment>
                <comment line="221">
                    decode loops are not using decodeSingle/Double() for performance                    
                </comment>
                <comment line="222">
                    reason.                    
                </comment>
                <comment line="251">
                    Check validity of dbcs ebcdic byte pair values                    
                </comment>
                <comment line="252">
                                        
                </comment>
                <comment line="253">
                    First byte : 0x41 -- 0xFE                    
                </comment>
                <comment line="254">
                    Second byte: 0x41 -- 0xFE                    
                </comment>
                <comment line="255">
                    Doublebyte blank: 0x4040                    
                </comment>
                <comment line="256">
                                        
                </comment>
                <comment line="257">
                    The validation implementation in &quot;old&quot; DBCS_IBM_EBCDIC and sun.io                    
                </comment>
                <comment line="258">
                    as                    
                </comment>
                <comment line="259">
                    if ((b1 != 0x40 || b2 != 0x40) &amp;&amp;                    
                </comment>
                <comment line="260">
                    (b2 &lt; 0x41 || b2 &gt; 0xfe)) {...}                    
                </comment>
                <comment line="261">
                    is not correct/complete (range check for b1)                    
                </comment>
                <comment line="262">
                                        
                </comment>
                <comment line="397">
                    No support provided for G2/G3 for SimpleEUC                    
                </comment>
                <comment line="524">
                    init the c2b and c2bIndex tables from b2c.                    
                </comment>
                <method name="Encoder_EUC_SIM" type="constructor" line="748">
                    <params>
                        <param name="cs" type="Charset"/>
                        <param name="c2b" type="char[]"/>
                        <param name="c2bIndex" type="char[]"/>
                    </params>
                </method>
            </class>
        </class>
    </source>