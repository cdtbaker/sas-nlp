<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs.ext">
        <import package="java.nio.charset.Charset"/>
        <import package="java.nio.CharBuffer"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.charset.CharsetDecoder"/>
        <import package="java.nio.charset.CharsetEncoder"/>
        <import package="java.nio.charset.CoderResult"/>
        <import package="sun.nio.cs.Surrogate"/>
        <import package="sun.nio.cs.HistoricallyNamedCharset"/>
        <class name="ISCII91" line="10">
            <extends class="Charset"/>
            <implements interface="HistoricallyNamedCharset"/>
            <declaration name="NUKTA_CHAR" type="char" line="11"/>
            <declaration name="HALANT_CHAR" type="char" line="12"/>
            <declaration name="NO_CHAR" type="byte" line="13"/>
            <method name="ISCII91" type="constructor" line="14"/>
            <method name="historicalName" type="String" line="17"/>
            <method name="contains" type="boolean" line="20">
                <params>
                    <param name="cs" type="Charset"/>
                </params>
            </method>
            <method name="newDecoder" type="CharsetDecoder" line="23"/>
            <method name="newEncoder" type="CharsetEncoder" line="26"/>
            <declaration name="directMapTable" type="char[]" line="29"/>
            <javadoc line="30">
                This accessor is temporarily supplied while sun.io
                  converters co-exist with the sun.nio.cs.{ext} charset coders
                  These facilitate sharing of conversion tables between the
                  two co-existing implementations. When sun.io converters
                  are made extinct these will be unnecessary and should be removed                
            </javadoc>
            <method name="getDirectMapTable" type="char[]" line="37"/>
            <declaration name="encoderMappingTable" type="byte[]" line="40"/>
            <javadoc line="41">
                This accessor is temporarily supplied while sun.io
                  converters co-exist with the sun.nio.cs.{ext} charset coders
                  These facilitate sharing of conversion tables between the
                  two co-existing implementations. When sun.io converters
                  are made extinct these will be unnecessary and should be removed                
            </javadoc>
            <method name="getEncoderMappingTable" type="byte[]" line="48"/>
            <class name="Decoder" line="51">
                <extends class="CharsetDecoder"/>
                <declaration name="ZWNJ_CHAR" type="char" line="52"/>
                <declaration name="ZWJ_CHAR" type="char" line="53"/>
                <declaration name="INVALID_CHAR" type="char" line="54"/>
                <declaration name="contextChar" type="char" line="55"/>
                <declaration name="needFlushing" type="boolean" line="56"/>
                <method name="Decoder" type="constructor" line="57">
                    <params>
                        <param name="cs" type="Charset"/>
                    </params>
                </method>
                <method name="implFlush" type="CoderResult" line="60">
                    <params>
                        <param name="out" type="CharBuffer"/>
                    </params>
                    <scope line="61">
                        <scope line="62"/>
                        <scope line="65"/>
                    </scope>
                </method>
                <method name="decodeArrayLoop" type="CoderResult" line="73">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <declaration name="sa" type="byte[]" line="74"/>
                    <declaration name="sp" type="int" line="75"/>
                    <declaration name="sl" type="int" line="76"/>
                    <declaration name="da" type="char[]" line="79"/>
                    <declaration name="dp" type="int" line="80"/>
                    <declaration name="dl" type="int" line="81"/>
                    <scope line="84">
                        <scope line="85">
                            <declaration name="index" type="int" line="86"/>
                            <declaration name="currentChar" type="char" line="88"/>
                            <scope line="89"/>
                            <scope line="106"/>
                            <scope line="145"/>
                            <scope line="154"/>
                            <scope line="165"/>
                            <scope line="171"/>
                            <scope line="178"/>
                            <scope line="188"/>
                        </scope>
                    </scope>
                    <scope line="203"/>
                </method>
                <method name="decodeBufferLoop" type="CoderResult" line="208">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <declaration name="mark" type="int" line="209"/>
                    <scope line="210">
                        <scope line="211">
                            <declaration name="index" type="int" line="212"/>
                            <declaration name="currentChar" type="char" line="214"/>
                            <scope line="215"/>
                            <scope line="232"/>
                            <scope line="271"/>
                            <scope line="280"/>
                            <scope line="291"/>
                            <scope line="297"/>
                            <scope line="304"/>
                            <scope line="314"/>
                        </scope>
                    </scope>
                    <scope line="329"/>
                </method>
                <method name="decodeLoop" type="CoderResult" line="333">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                </method>
            </class>
            <class name="Encoder" line="338">
                <extends class="CharsetEncoder"/>
                <declaration name="NO_CHAR" type="byte" line="339"/>
                <declaration name="sgp" type="Surrogate.Parser" line="340"/>
                <method name="Encoder" type="constructor" line="341">
                    <params>
                        <param name="cs" type="Charset"/>
                    </params>
                </method>
                <method name="canEncode" type="boolean" line="344">
                    <params>
                        <param name="ch" type="char"/>
                    </params>
                </method>
                <method name="encodeArrayLoop" type="CoderResult" line="347">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                    <declaration name="sa" type="char[]" line="348"/>
                    <declaration name="sp" type="int" line="349"/>
                    <declaration name="sl" type="int" line="350"/>
                    <declaration name="da" type="byte[]" line="353"/>
                    <declaration name="dp" type="int" line="354"/>
                    <declaration name="dl" type="int" line="355"/>
                    <declaration name="outputSize" type="int" line="358"/>
                    <scope line="359">
                        <declaration name="inputChar" type="char" line="360"/>
                        <scope line="361">
                            <declaration name="index" type="int" line="362"/>
                            <scope line="364"/>
                            <scope line="370"/>
                            <scope line="373"/>
                            <scope line="376"/>
                            <scope line="379"/>
                            <scope line="383"/>
                            <scope line="386">
                                <scope line="387"/>
                                <scope line="391"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="401"/>
                </method>
                <method name="encodeBufferLoop" type="CoderResult" line="406">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                    <declaration name="mark" type="int" line="407"/>
                    <scope line="408">
                        <declaration name="inputChar" type="char" line="409"/>
                        <scope line="410">
                            <declaration name="index" type="int" line="411"/>
                            <scope line="413"/>
                            <scope line="419"/>
                            <scope line="422"/>
                            <scope line="425"/>
                            <scope line="428"/>
                            <scope line="432"/>
                            <scope line="435">
                                <scope line="436"/>
                                <scope line="440"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="450"/>
                </method>
                <method name="encodeLoop" type="CoderResult" line="454">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                </method>
            </class>
        </class>
    </source>