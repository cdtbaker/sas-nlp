<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs.ext">
        <import package="java.nio.charset.Charset"/>
        <import package="java.nio.CharBuffer"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.charset.CharsetDecoder"/>
        <import package="java.nio.charset.CharsetEncoder"/>
        <import package="java.nio.charset.CoderResult"/>
        <import package="sun.nio.cs.Surrogate"/>
        <import package="sun.nio.cs.HistoricallyNamedCharset"/>
        <class name="ISCII91" line="41">
            <extends class="Charset"/>
            <comment line="333">
                end of table definition                
            </comment>
            <comment line="476">
                end of table definition                
            </comment>
            <implements interface="HistoricallyNamedCharset"/>
            <declaration name="NUKTA_CHAR" type="char" line="43"/>
            <declaration name="HALANT_CHAR" type="char" line="44"/>
            <declaration name="NO_CHAR" type="byte" line="45"/>
            <method name="ISCII91" type="constructor" line="47"/>
            <method name="historicalName" type="String" line="51"/>
            <method name="contains" type="boolean" line="55">
                <params>
                    <param name="cs" type="Charset"/>
                </params>
            </method>
            <method name="newDecoder" type="CharsetDecoder" line="60"/>
            <method name="newEncoder" type="CharsetEncoder" line="64"/>
            <declaration name="directMapTable" type="char[]" line="68"/>
            <javadoc line="334">
                This accessor is temporarily supplied while sun.io
                  converters co-exist with the sun.nio.cs.{ext} charset coders
                  These facilitate sharing of conversion tables between the
                  two co-existing implementations. When sun.io converters
                  are made extinct these will be unnecessary and should be removed                
            </javadoc>
            <method name="getDirectMapTable" type="char[]" line="342"/>
            <declaration name="encoderMappingTable" type="byte[]" line="346"/>
            <javadoc line="478">
                This accessor is temporarily supplied while sun.io
                  converters co-exist with the sun.nio.cs.{ext} charset coders
                  These facilitate sharing of conversion tables between the
                  two co-existing implementations. When sun.io converters
                  are made extinct these will be unnecessary and should be removed                
            </javadoc>
            <method name="getEncoderMappingTable" type="byte[]" line="486"/>
            <class name="Decoder" line="491">
                <extends class="CharsetDecoder"/>
                <comment line="519">
                    Rules:
                     1)ATR,EXT,following character to be replaced with &apos;\ufffd&apos;
                     2)Halant + Halant =&gt; &apos;\u094d&apos; (Virama) + &apos;\u200c&apos;(ZWNJ)
                     3)Halant + Nukta =&gt; &apos;\u094d&apos; (Virama) + &apos;\u200d&apos;(ZWJ)                    
                </comment>
                <comment line="826">
                    private static CharToByteISCII91 c2b = new CharToByteISCII91();                    
                </comment>
                <comment line="827">
                    private static final byte[] directMapTable = c2b.getISCIIEncoderMap();                    
                </comment>
                <declaration name="ZWNJ_CHAR" type="char" line="493"/>
                <declaration name="ZWJ_CHAR" type="char" line="494"/>
                <declaration name="INVALID_CHAR" type="char" line="495"/>
                <declaration name="contextChar" type="char" line="497"/>
                <declaration name="needFlushing" type="boolean" line="498"/>
                <method name="Decoder" type="constructor" line="501">
                    <params>
                        <param name="cs" type="Charset"/>
                    </params>
                </method>
                <method name="implFlush" type="CoderResult" line="505">
                    <params>
                        <param name="out" type="CharBuffer"/>
                    </params>
                    <scope line="506">
                        <scope line="507"/>
                        <scope line="509"/>
                    </scope>
                </method>
                <method name="decodeArrayLoop" type="CoderResult" line="525">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <comment line="544">
                        if the contextChar is either ATR || EXT                        
                    </comment>
                    <comment line="545">
                        set the output to &apos;\ufffd&apos;                        
                    </comment>
                    <comment line="660">
                        end switch                        
                    </comment>
                    <declaration name="sa" type="byte[]" line="526"/>
                    <declaration name="sp" type="int" line="527"/>
                    <declaration name="sl" type="int" line="528"/>
                    <declaration name="da" type="char[]" line="532"/>
                    <declaration name="dp" type="int" line="533"/>
                    <declaration name="dl" type="int" line="534"/>
                    <scope line="538">
                        <scope line="539">
                            <declaration name="index" type="int" line="540"/>
                            <declaration name="currentChar" type="char" line="542"/>
                            <scope line="546"/>
                            <scope line="565"/>
                            <scope line="606"/>
                            <scope line="615"/>
                            <scope line="627"/>
                            <scope line="633"/>
                            <scope line="640"/>
                            <scope line="652"/>
                        </scope>
                    </scope>
                    <scope line="667"/>
                </method>
                <method name="decodeBufferLoop" type="CoderResult" line="675">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <comment line="684">
                        if the contextChar is either ATR || EXT                        
                    </comment>
                    <comment line="685">
                        set the output to &apos;\ufffd&apos;                        
                    </comment>
                    <comment line="800">
                        end switch                        
                    </comment>
                    <declaration name="mark" type="int" line="676"/>
                    <scope line="678">
                        <scope line="679">
                            <declaration name="index" type="int" line="680"/>
                            <declaration name="currentChar" type="char" line="682"/>
                            <scope line="686"/>
                            <scope line="705"/>
                            <scope line="746"/>
                            <scope line="755"/>
                            <scope line="767"/>
                            <scope line="773"/>
                            <scope line="780"/>
                            <scope line="792"/>
                        </scope>
                    </scope>
                    <scope line="806"/>
                </method>
                <method name="decodeLoop" type="CoderResult" line="813">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                </method>
            </class>
            <class name="Encoder" line="821">
                <extends class="CharsetEncoder"/>
                <comment line="519">
                    Rules:
                     1)ATR,EXT,following character to be replaced with &apos;\ufffd&apos;
                     2)Halant + Halant =&gt; &apos;\u094d&apos; (Virama) + &apos;\u200c&apos;(ZWNJ)
                     3)Halant + Nukta =&gt; &apos;\u094d&apos; (Virama) + &apos;\u200d&apos;(ZWJ)                    
                </comment>
                <comment line="826">
                    private static CharToByteISCII91 c2b = new CharToByteISCII91();                    
                </comment>
                <comment line="827">
                    private static final byte[] directMapTable = c2b.getISCIIEncoderMap();                    
                </comment>
                <declaration name="NO_CHAR" type="byte" line="823"/>
                <declaration name="sgp" type="Surrogate.Parser" line="828"/>
                <method name="Encoder" type="constructor" line="830">
                    <params>
                        <param name="cs" type="Charset"/>
                    </params>
                </method>
                <method name="canEncode" type="boolean" line="834">
                    <params>
                        <param name="ch" type="char"/>
                    </params>
                    <comment line="835">
                        check for Devanagari range,ZWJ,ZWNJ and ASCII range.                        
                    </comment>
                </method>
                <method name="encodeArrayLoop" type="CoderResult" line="846">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                    <comment line="874">
                        if inputChar == ZWJ replace it with halant                        
                    </comment>
                    <comment line="875">
                        if inputChar == ZWNJ replace it with Nukta                        
                    </comment>
                    <declaration name="sa" type="char[]" line="847"/>
                    <declaration name="sp" type="int" line="848"/>
                    <declaration name="sl" type="int" line="849"/>
                    <declaration name="da" type="byte[]" line="852"/>
                    <declaration name="dp" type="int" line="853"/>
                    <declaration name="dl" type="int" line="854"/>
                    <declaration name="outputSize" type="int" line="858"/>
                    <scope line="860">
                        <declaration name="inputChar" type="char" line="861"/>
                        <scope line="862">
                            <declaration name="index" type="int" line="863"/>
                            <scope line="866"/>
                            <scope line="877"/>
                            <scope line="880"/>
                            <scope line="884"/>
                            <scope line="888"/>
                            <scope line="895"/>
                            <scope line="897">
                                <scope line="898"/>
                                <scope line="902"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="912"/>
                </method>
                <method name="encodeBufferLoop" type="CoderResult" line="920">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                    <comment line="937">
                        if inputChar == ZWJ replace it with halant                        
                    </comment>
                    <comment line="938">
                        if inputChar == ZWNJ replace it with Nukta                        
                    </comment>
                    <declaration name="mark" type="int" line="921"/>
                    <scope line="923">
                        <declaration name="inputChar" type="char" line="924"/>
                        <scope line="925">
                            <declaration name="index" type="int" line="926"/>
                            <scope line="929"/>
                            <scope line="940"/>
                            <scope line="943"/>
                            <scope line="947"/>
                            <scope line="951"/>
                            <scope line="958"/>
                            <scope line="960">
                                <scope line="961"/>
                                <scope line="965"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="975"/>
                </method>
                <method name="encodeLoop" type="CoderResult" line="982">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                </method>
            </class>
        </class>
    </source>