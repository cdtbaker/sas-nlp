<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs.ext">
        <import package="java.io"/>
        <import package="java.nio.CharBuffer"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.charset.Charset"/>
        <import package="java.nio.charset.CharsetDecoder"/>
        <import package="java.nio.charset.CharsetEncoder"/>
        <import package="java.nio.charset.CoderResult"/>
        <import package="java.util.Arrays"/>
        <import package="sun.nio.cs.HistoricallyNamedCharset"/>
        <import package="sun.nio.cs.CharsetMapping"/>
        <class name="EUC_TW" line="39">
            <extends class="Charset"/>
            <comment line="44">
                (1) EUC_TW
                Second byte of EUC_TW for cs2 is in range of
                0xA1-0xB0 for plane 1-16. According to CJKV 163,
                plane1 is coded in both cs1 and cs2. This impl
                however does not decode the codepoints of plane1
                in cs2, so only p2-p7 and p15 are supported in cs2.
                
                Plane2  0xA2;
                Plane3  0xA3;
                Plane4  0xA4;
                Plane5  0xA5;
                Plane6  0xA6;
                Plane7  0xA7;
                Plane15 0xAF;
                
                (2) Mapping
                The fact that all supplementary characters encoded in EUC_TW are
                in 0x2xxxx range gives us the room to optimize the data tables.
                
                Decoding:
                (1) save the lower 16-bit value of all codepoints of b-&gt;c mapping
                in a String array table  String[plane] b2c.
                (2) save &quot;codepoint is supplementary&quot; info (one bit) in a
                byte[] b2cIsSupp, so 8 codepoints (same codepoint value, different
                plane No) share one byte.
                
                Encoding:
                (1)c-&gt;b mappings are stored in
                char[]c2bchar[]c2bIndex
                char[]c2bSuppchar[]c2bIndexsupp  (indexed by lower 16-bit
                (2)byte[] c2bPlane stores the &quot;plane info&quot; of each euc-tw codepoints,
                BMP and Supp share the lowhigh 4 bits of one byte.
                
                Mapping tables are stored separated in EUC_TWMapping, which
                is generated by tool.                
            </comment>
            <implements interface="HistoricallyNamedCharset"/>
            <declaration name="SS2" type="int" line="41"/>
            <method name="EUC_TW" type="constructor" line="81"/>
            <method name="historicalName" type="String" line="85"/>
            <method name="contains" type="boolean" line="89">
                <params>
                    <param name="cs" type="Charset"/>
                </params>
            </method>
            <method name="newDecoder" type="CharsetDecoder" line="94"/>
            <method name="newEncoder" type="CharsetEncoder" line="98"/>
            <class name="Decoder" line="102">
                <extends class="CharsetDecoder"/>
                <comment line="122">
                    adjust from cns planeNo to the plane index of b2c                    
                </comment>
                <comment line="131">
                    static final BitSet b2cIsSupp;                    
                </comment>
                <method name="Decoder" type="constructor" line="103">
                    <params>
                        <param name="cs" type="Charset"/>
                    </params>
                </method>
                <declaration name="c1" type="char[]" line="107"/>
                <declaration name="c2" type="char[]" line="108"/>
                <method name="toUnicode" type="char[]" line="109">
                    <params>
                        <param name="b1" type="int"/>
                        <param name="b2" type="int"/>
                        <param name="p" type="int"/>
                    </params>
                </method>
                <declaration name="b2c" type="String[]" line="113"/>
                <declaration name="b1Min" type="int" line="114"/>
                <declaration name="b1Max" type="int" line="115"/>
                <declaration name="b2Min" type="int" line="116"/>
                <declaration name="b2Max" type="int" line="117"/>
                <declaration name="dbSegSize" type="int" line="118"/>
                <declaration name="b2cIsSupp" type="byte[]" line="119"/>
                <declaration name="cnspToIndex" type="byte[]" line="122"/>
                <scope line="123"/>
                <scope line="131">
                    <declaration name="b2cIsSuppStr" type="String" line="132"/>
                    <declaration name="flag" type="byte[]" line="135"/>
                    <declaration name="off" type="int" line="136"/>
                    <scope line="137">
                        <declaration name="c" type="char" line="138"/>
                    </scope>
                </scope>
                <method name="isLegalDB" type="boolean" line="145">
                    <params>
                        <param name="b" type="int"/>
                    </params>
                </method>
                <method name="decode" type="char[]" line="150">
                    <params>
                        <param name="b1" type="int"/>
                        <param name="b2" type="int"/>
                        <param name="p" type="int"/>
                        <param name="c1" type="char[]"/>
                        <param name="c2" type="char[]"/>
                    </params>
                    <declaration name="index" type="int" line="153"/>
                    <declaration name="c" type="char" line="154"/>
                    <scope line="157"/>
                    <scope line="160"/>
                </method>
                <method name="decodeArrayLoop" type="CoderResult" line="169">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <comment line="180">
                        Codeset 2  G2                        
                    </comment>
                    <comment line="203">
                        ASCII      G0                        
                    </comment>
                    <comment line="208">
                        Codeset 1  G1                        
                    </comment>
                    <declaration name="sa" type="byte[]" line="170"/>
                    <declaration name="sp" type="int" line="171"/>
                    <declaration name="sl" type="int" line="172"/>
                    <declaration name="da" type="char[]" line="174"/>
                    <declaration name="dp" type="int" line="175"/>
                    <declaration name="dl" type="int" line="176"/>
                    <scope line="177">
                        <scope line="178">
                            <declaration name="byte1" type="int" line="179"/>
                            <scope line="180">
                                <declaration name="cnsPlane" type="int" line="183"/>
                                <declaration name="byte2" type="int" line="187"/>
                                <declaration name="cc" type="char[]" line="188"/>
                                <scope line="189"/>
                                <scope line="196"/>
                                <scope line="198"/>
                            </scope>
                            <scope line="203"/>
                            <scope line="208">
                                <declaration name="byte2" type="int" line="211"/>
                                <declaration name="cc" type="char[]" line="212"/>
                                <scope line="213"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="225"/>
                </method>
                <method name="decodeBufferLoop" type="CoderResult" line="233">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <comment line="238">
                        Codeset 2  G2                        
                    </comment>
                    <comment line="261">
                        ASCII      G0                        
                    </comment>
                    <comment line="266">
                        Codeset 1  G1                        
                    </comment>
                    <declaration name="mark" type="int" line="234"/>
                    <scope line="235">
                        <scope line="236">
                            <declaration name="byte1" type="int" line="237"/>
                            <scope line="238">
                                <declaration name="cnsPlane" type="int" line="241"/>
                                <declaration name="byte2" type="int" line="245"/>
                                <declaration name="cc" type="char[]" line="246"/>
                                <scope line="247"/>
                                <scope line="254"/>
                                <scope line="256"/>
                            </scope>
                            <scope line="261"/>
                            <scope line="266">
                                <declaration name="byte2" type="int" line="269"/>
                                <declaration name="cc" type="char[]" line="270"/>
                                <scope line="271"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="283"/>
                </method>
                <method name="decodeLoop" type="CoderResult" line="289">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                </method>
            </class>
            <class name="Encoder" line="297">
                <extends class="CharsetEncoder"/>
                <comment line="122">
                    adjust from cns planeNo to the plane index of b2c                    
                </comment>
                <comment line="131">
                    static final BitSet b2cIsSupp;                    
                </comment>
                <declaration name="bb" type="byte[]" line="298"/>
                <method name="Encoder" type="constructor" line="300">
                    <params>
                        <param name="cs" type="Charset"/>
                    </params>
                </method>
                <method name="canEncode" type="boolean" line="304">
                    <params>
                        <param name="c" type="char"/>
                    </params>
                </method>
                <method name="canEncode" type="boolean" line="308">
                    <params>
                        <param name="cs" type="CharSequence"/>
                    </params>
                    <declaration name="i" type="int" line="309"/>
                    <scope line="310">
                        <declaration name="c" type="char" line="311"/>
                        <scope line="312">
                            <declaration name="low" type="char" line="315"/>
                        </scope>
                        <scope line="318"/>
                    </scope>
                </method>
                <method name="toEUC" type="int" line="325">
                    <params>
                        <param name="hi" type="char"/>
                        <param name="low" type="char"/>
                        <param name="bb" type="byte[]"/>
                    </params>
                </method>
                <method name="toEUC" type="int" line="329">
                    <params>
                        <param name="c" type="char"/>
                        <param name="bb" type="byte[]"/>
                    </params>
                </method>
                <method name="encodeArrayLoop" type="CoderResult" line="335">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                    <comment line="351">
                        ASCII                        
                    </comment>
                    <comment line="357">
                        to check surrogates only after BMP failed                        
                    </comment>
                    <comment line="358">
                        has the benefit of improving the BMP encoding                        
                    </comment>
                    <comment line="359">
                        10% faster, with the price of the slowdown of                        
                    </comment>
                    <comment line="360">
                        supplementary character encoding. given the use                        
                    </comment>
                    <comment line="361">
                        of supplementary characters is really rare, this                        
                    </comment>
                    <comment line="362">
                        is something worth doing.                        
                    </comment>
                    <declaration name="sa" type="char[]" line="336"/>
                    <declaration name="sp" type="int" line="337"/>
                    <declaration name="sl" type="int" line="338"/>
                    <declaration name="da" type="byte[]" line="340"/>
                    <declaration name="dp" type="int" line="341"/>
                    <declaration name="dl" type="int" line="342"/>
                    <declaration name="inSize" type="int" line="344"/>
                    <declaration name="outSize" type="int" line="345"/>
                    <scope line="347">
                        <scope line="348">
                            <declaration name="c" type="char" line="349"/>
                            <scope line="351"/>
                            <scope line="354">
                                <scope line="356">
                                    <scope line="363"/>
                                    <scope line="370"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="384"/>
                </method>
                <method name="encodeBufferLoop" type="CoderResult" line="392">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                    <comment line="401">
                        ASCII                        
                    </comment>
                    <declaration name="outSize" type="int" line="393"/>
                    <declaration name="inSize" type="int" line="394"/>
                    <declaration name="mark" type="int" line="395"/>
                    <scope line="397">
                        <scope line="398">
                            <declaration name="c" type="char" line="400"/>
                            <scope line="401"/>
                            <scope line="404">
                                <scope line="406">
                                    <scope line="407">
                                        <declaration name="c2" type="char" line="410"/>
                                    </scope>
                                    <scope line="415"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="429"/>
                </method>
                <method name="encodeLoop" type="CoderResult" line="435">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                </method>
                <method name="encode" type="int" line="442">
                    <params>
                        <param name="hi" type="char"/>
                        <param name="low" type="char"/>
                        <param name="bb" type="byte[]"/>
                    </params>
                    <declaration name="c" type="int" line="443"/>
                    <declaration name="index" type="int" line="447"/>
                    <declaration name="db" type="int" line="451"/>
                    <declaration name="p" type="int" line="454"/>
                </method>
                <method name="encode" type="int" line="462">
                    <params>
                        <param name="c" type="char"/>
                        <param name="bb" type="byte[]"/>
                    </params>
                    <declaration name="index" type="int" line="463"/>
                    <declaration name="db" type="int" line="467"/>
                    <declaration name="p" type="int" line="470"/>
                    <scope line="471"/>
                    <scope line="475"/>
                </method>
                <declaration name="c2b" type="char[]" line="484"/>
                <declaration name="c2bIndex" type="char[]" line="485"/>
                <declaration name="c2bSupp" type="char[]" line="486"/>
                <declaration name="c2bSuppIndex" type="char[]" line="487"/>
                <declaration name="c2bPlane" type="byte[]" line="488"/>
                <scope line="489">
                    <declaration name="b1Min" type="int" line="490"/>
                    <declaration name="b1Max" type="int" line="491"/>
                    <declaration name="b2Min" type="int" line="492"/>
                    <declaration name="b2Max" type="int" line="493"/>
                    <declaration name="dbSegSize" type="int" line="494"/>
                    <declaration name="b2c" type="String[]" line="495"/>
                    <declaration name="b2cIsSupp" type="byte[]" line="496"/>
                    <declaration name="c2b0" type="char[]" line="500"/>
                    <declaration name="c2bSupp0" type="char[]" line="501"/>
                    <declaration name="c2bPlane0" type="byte[]" line="502"/>
                    <scope line="508">
                        <declaration name="db" type="String" line="509"/>
                        <declaration name="plane" type="int" line="516"/>
                        <declaration name="off" type="int" line="522"/>
                        <scope line="523">
                            <scope line="524">
                                <declaration name="c" type="char" line="525"/>
                                <scope line="526">
                                    <scope line="527">
                                        <declaration name="index" type="int" line="528"/>
                                    </scope>
                                    <scope line="531">
                                        <declaration name="index" type="int" line="532"/>
                                    </scope>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </class>
        </class>
    </source>