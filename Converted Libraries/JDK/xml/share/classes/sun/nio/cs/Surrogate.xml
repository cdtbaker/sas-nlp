<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs">
        <import package="java.nio.CharBuffer"/>
        <import package="java.nio.charset.CoderResult"/>
        <import package="java.nio.charset.MalformedInputException"/>
        <import package="java.nio.charset.UnmappableCharacterException"/>
        <class name="Surrogate" line="6">
            <javadoc line="6">
                Utility class for dealing with surrogates.                
                <author>
                    Mark Reinhold                    
                </author>
                <author>
                    Martin Buchholz                    
                </author>
                <author>
                    Ulf Zibis                    
                </author>
            </javadoc>
            <method name="Surrogate" type="constructor" line="13"/>
            <declaration name="MIN_HIGH" type="char" line="15"/>
            <declaration name="MAX_HIGH" type="char" line="16"/>
            <declaration name="MIN_LOW" type="char" line="17"/>
            <declaration name="MAX_LOW" type="char" line="18"/>
            <declaration name="MIN" type="char" line="19"/>
            <declaration name="MAX" type="char" line="20"/>
            <declaration name="UCS4_MIN" type="int" line="21"/>
            <declaration name="UCS4_MAX" type="int" line="22"/>
            <javadoc line="23">
                Tells whether or not the given value is in the high surrogate range.
                  Use of {@link Character#isHighSurrogate} is generally preferred.                
            </javadoc>
            <method name="isHigh" type="boolean" line="27">
                <params>
                    <param name="c" type="int"/>
                </params>
            </method>
            <javadoc line="30">
                Tells whether or not the given value is in the low surrogate range.
                  Use of {@link Character#isLowSurrogate} is generally preferred.                
            </javadoc>
            <method name="isLow" type="boolean" line="34">
                <params>
                    <param name="c" type="int"/>
                </params>
            </method>
            <javadoc line="37">
                Tells whether or not the given value is in the surrogate range.
                  Use of {@link Character#isSurrogate} is generally preferred.                
            </javadoc>
            <method name="is" type="boolean" line="41">
                <params>
                    <param name="c" type="int"/>
                </params>
            </method>
            <javadoc line="44">
                Tells whether or not the given UCS-4 character must be represented as a
                  surrogate pair in UTF-16.
                  Use of {@link Character#isSupplementaryCodePoint} is generally preferred.                
            </javadoc>
            <method name="neededFor" type="boolean" line="49">
                <params>
                    <param name="uc" type="int"/>
                </params>
            </method>
            <javadoc line="52">
                Returns the high UTF-16 surrogate for the given supplementary UCS-4 character.
                  Use of {@link Character#highSurrogate} is generally preferred.                
            </javadoc>
            <method name="high" type="char" line="56">
                <params>
                    <param name="uc" type="int"/>
                </params>
            </method>
            <javadoc line="60">
                Returns the low UTF-16 surrogate for the given supplementary UCS-4 character.
                  Use of {@link Character#lowSurrogate} is generally preferred.                
            </javadoc>
            <method name="low" type="char" line="64">
                <params>
                    <param name="uc" type="int"/>
                </params>
            </method>
            <javadoc line="68">
                Converts the given surrogate pair into a 32-bit UCS-4 character.
                  Use of {@link Character#toCodePoint} is generally preferred.                
            </javadoc>
            <method name="toUCS4" type="int" line="72">
                <params>
                    <param name="c" type="char"/>
                    <param name="d" type="char"/>
                </params>
            </method>
            <class name="Parser" line="76">
                <javadoc line="76">
                    Surrogate parsing support.  Charset implementations may use instances of
                      this class to handle the details of parsing UTF-16 surrogate pairs.                    
                </javadoc>
                <method name="Parser" type="constructor" line="81"/>
                <declaration name="character" type="int" line="83"/>
                <declaration name="error" type="CoderResult" line="84"/>
                <declaration name="isPair" type="boolean" line="85"/>
                <javadoc line="86">
                    Returns the UCS-4 character previously parsed.                    
                </javadoc>
                <method name="character" type="int" line="89"/>
                <javadoc line="93">
                    Tells whether or not the previously-parsed UCS-4 character was
                      originally represented by a surrogate pair.                    
                </javadoc>
                <method name="isPair" type="boolean" line="97"/>
                <javadoc line="101">
                    Returns the number of UTF-16 characters consumed by the previous
                      parse.                    
                </javadoc>
                <method name="increment" type="int" line="105"/>
                <javadoc line="109">
                    If the previous parse operation detected an error, return the object
                      describing that error.                    
                </javadoc>
                <method name="error" type="CoderResult" line="113"/>
                <javadoc line="117">
                    Returns an unmappable-input result object, with the appropriate
                      input length, for the previously-parsed character.                    
                </javadoc>
                <method name="unmappableResult" type="CoderResult" line="121"/>
                <javadoc line="125">
                    Parses a UCS-4 character from the given source buffer, handling
                      surrogates.                    
                    <param>
                        c    The first character                        
                    </param>
                    <param>
                        in   The source buffer, from which one more character
                          will be consumed if c is a high surrogate                        
                    </param>
                    <returns>
                        Either a parsed UCS-4 character, in which case the isPair()
                          and increment() methods will return meaningful values, or
                          -1, in which case error() will return a descriptive result
                          object                        
                    </returns>
                </javadoc>
                <method name="parse" type="int" line="136">
                    <params>
                        <param name="c" type="char"/>
                        <param name="in" type="CharBuffer"/>
                    </params>
                    <scope line="137">
                        <scope line="138"/>
                        <declaration name="d" type="char" line="142"/>
                        <scope line="143"/>
                    </scope>
                    <scope line="152"/>
                </method>
                <javadoc line="161">
                    Parses a UCS-4 character from the given source buffer, handling
                      surrogates.                    
                    <param>
                        c    The first character                        
                    </param>
                    <param>
                        ia   The input array, from which one more character
                          will be consumed if c is a high surrogate                        
                    </param>
                    <param>
                        ip   The input index                        
                    </param>
                    <param>
                        il   The input limit                        
                    </param>
                    <returns>
                        Either a parsed UCS-4 character, in which case the isPair()
                          and increment() methods will return meaningful values, or
                          -1, in which case error() will return a descriptive result
                          object                        
                    </returns>
                </javadoc>
                <method name="parse" type="int" line="174">
                    <params>
                        <param name="c" type="char"/>
                        <param name="ia" type="char[]"/>
                        <param name="ip" type="int"/>
                        <param name="il" type="int"/>
                    </params>
                    <scope line="176">
                        <scope line="177"/>
                        <declaration name="d" type="char" line="181"/>
                        <scope line="182"/>
                    </scope>
                    <scope line="191"/>
                </method>
            </class>
            <class name="Generator" line="201">
                <javadoc line="201">
                    Surrogate generation support.  Charset implementations may use instances
                      of this class to handle the details of generating UTF-16 surrogate
                      pairs.                    
                </javadoc>
                <method name="Generator" type="constructor" line="207"/>
                <declaration name="error" type="CoderResult" line="209"/>
                <javadoc line="210">
                    If the previous generation operation detected an error, return the
                      object describing that error.                    
                </javadoc>
                <method name="error" type="CoderResult" line="214"/>
                <javadoc line="218">
                    Generates one or two UTF-16 characters to represent the given UCS-4
                      character.                    
                    <param>
                        uc   The UCS-4 character                        
                    </param>
                    <param>
                        len  The number of input bytes from which the UCS-4 value
                          was constructed (used when creating result objects)                        
                    </param>
                    <param>
                        dst  The destination buffer, to which one or two UTF-16
                          characters will be written                        
                    </param>
                    <returns>
                        Either a positive count of the number of UTF-16 characters
                          written to the destination buffer, or -1, in which case
                          error() will return a descriptive result object                        
                    </returns>
                </javadoc>
                <method name="generate" type="int" line="230">
                    <params>
                        <param name="uc" type="int"/>
                        <param name="len" type="int"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <scope line="231">
                        <declaration name="c" type="char" line="232"/>
                        <scope line="233"/>
                        <scope line="237"/>
                    </scope>
                    <scope line="245">
                        <scope line="246"/>
                    </scope>
                    <scope line="255"/>
                </method>
                <javadoc line="260">
                    Generates one or two UTF-16 characters to represent the given UCS-4
                      character.                    
                    <param>
                        uc   The UCS-4 character                        
                    </param>
                    <param>
                        len  The number of input bytes from which the UCS-4 value
                          was constructed (used when creating result objects)                        
                    </param>
                    <param>
                        da   The destination array, to which one or two UTF-16
                          characters will be written                        
                    </param>
                    <param>
                        dp   The destination position                        
                    </param>
                    <param>
                        dl   The destination limit                        
                    </param>
                    <returns>
                        Either a positive count of the number of UTF-16 characters
                          written to the destination buffer, or -1, in which case
                          error() will return a descriptive result object                        
                    </returns>
                </javadoc>
                <method name="generate" type="int" line="274">
                    <params>
                        <param name="uc" type="int"/>
                        <param name="len" type="int"/>
                        <param name="da" type="char[]"/>
                        <param name="dp" type="int"/>
                        <param name="dl" type="int"/>
                    </params>
                    <scope line="275">
                        <declaration name="c" type="char" line="276"/>
                        <scope line="277"/>
                        <scope line="281"/>
                    </scope>
                    <scope line="289">
                        <scope line="290"/>
                    </scope>
                    <scope line="299"/>
                </method>
            </class>
        </class>
    </source>