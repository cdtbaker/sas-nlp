<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs.ext">
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.CharBuffer"/>
        <import package="java.nio.charset.Charset"/>
        <import package="java.nio.charset.CharsetEncoder"/>
        <import package="java.nio.charset.CharsetDecoder"/>
        <import package="java.nio.charset.CoderResult"/>
        <import package="java.util.Arrays"/>
        <import package="sun.nio.cs.CharsetMapping"/>
        <class name="SJIS_0213" line="57">
            <extends class="Charset"/>
            <method name="SJIS_0213" type="constructor" line="58"/>
            <method name="contains" type="boolean" line="62">
                <params>
                    <param name="cs" type="Charset"/>
                </params>
            </method>
            <method name="newDecoder" type="CharsetDecoder" line="68"/>
            <method name="newEncoder" type="CharsetEncoder" line="72"/>
            <declaration name="mapping" type="CharsetMapping" line="76"/>
            <class name="Decoder" line="79">
                <extends class="CharsetDecoder"/>
                <comment line="237">
                    Unlike surrogate pair, the base character of a base+cc composite                    
                </comment>
                <comment line="238">
                    itself is a legal codepoint in 0213, if we simply return UNDERFLOW                    
                </comment>
                <comment line="239">
                    when a base candidate is the last input char in the CharBuffer, like                    
                </comment>
                <comment line="240">
                    what we do for the surrogte pair, encoding will fail if this base                    
                </comment>
                <comment line="241">
                    character is indeed the last character of the input char sequence.                    
                </comment>
                <comment line="242">
                    Keep this base candidate in &quot;leftoverBase&quot; so we can flush it out                    
                </comment>
                <comment line="243">
                    at the end of the encoding circle.                    
                </comment>
                <declaration name="UNMAPPABLE" type="char" line="80"/>
                <method name="Decoder" type="constructor" line="82">
                    <params>
                        <param name="cs" type="Charset"/>
                    </params>
                </method>
                <method name="decodeArrayLoop" type="CoderResult" line="86">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <declaration name="sa" type="byte[]" line="87"/>
                    <declaration name="sp" type="int" line="88"/>
                    <declaration name="sl" type="int" line="89"/>
                    <declaration name="da" type="char[]" line="91"/>
                    <declaration name="dp" type="int" line="92"/>
                    <declaration name="dl" type="int" line="93"/>
                    <scope line="95">
                        <scope line="96">
                            <declaration name="b1" type="int" line="97"/>
                            <declaration name="c" type="char" line="98"/>
                            <declaration name="inSize" type="int" line="99"/>
                            <declaration name="cc" type="char[]" line="100"/>
                            <scope line="101">
                                <declaration name="b2" type="int" line="104"/>
                                <scope line="107">
                                    <scope line="109"/>
                                </scope>
                            </scope>
                            <scope line="120"/>
                            <scope line="123"/>
                        </scope>
                    </scope>
                    <scope line="129"/>
                </method>
                <method name="decodeBufferLoop" type="CoderResult" line="135">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <declaration name="mark" type="int" line="136"/>
                    <scope line="137">
                        <scope line="138">
                            <declaration name="cc" type="char[]" line="139"/>
                            <declaration name="b1" type="int" line="140"/>
                            <declaration name="c" type="char" line="141"/>
                            <declaration name="inSize" type="int" line="142"/>
                            <scope line="143">
                                <declaration name="b2" type="int" line="146"/>
                                <scope line="149">
                                    <scope line="151"/>
                                </scope>
                            </scope>
                            <scope line="162"/>
                            <scope line="165"/>
                        </scope>
                    </scope>
                    <scope line="171"/>
                </method>
                <method name="decodeLoop" type="CoderResult" line="176">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                </method>
                <method name="decodeSingle" type="char" line="183">
                    <params>
                        <param name="b" type="int"/>
                    </params>
                </method>
                <method name="decodeDouble" type="char" line="187">
                    <params>
                        <param name="b1" type="int"/>
                        <param name="b2" type="int"/>
                    </params>
                </method>
                <declaration name="cc" type="char[]" line="191"/>
                <declaration name="comp" type="CharsetMapping.Entry" line="192"/>
                <method name="decodeDoubleEx" type="char[]" line="193">
                    <params>
                        <param name="b1" type="int"/>
                        <param name="b2" type="int"/>
                    </params>
                    <declaration name="db" type="int" line="194"/>
                </method>
            </class>
            <class name="Encoder" line="204">
                <extends class="CharsetEncoder"/>
                <comment line="237">
                    Unlike surrogate pair, the base character of a base+cc composite                    
                </comment>
                <comment line="238">
                    itself is a legal codepoint in 0213, if we simply return UNDERFLOW                    
                </comment>
                <comment line="239">
                    when a base candidate is the last input char in the CharBuffer, like                    
                </comment>
                <comment line="240">
                    what we do for the surrogte pair, encoding will fail if this base                    
                </comment>
                <comment line="241">
                    character is indeed the last character of the input char sequence.                    
                </comment>
                <comment line="242">
                    Keep this base candidate in &quot;leftoverBase&quot; so we can flush it out                    
                </comment>
                <comment line="243">
                    at the end of the encoding circle.                    
                </comment>
                <declaration name="UNMAPPABLE" type="int" line="205"/>
                <declaration name="MAX_SINGLEBYTE" type="int" line="206"/>
                <method name="Encoder" type="constructor" line="208">
                    <params>
                        <param name="cs" type="Charset"/>
                    </params>
                </method>
                <method name="canEncode" type="boolean" line="212">
                    <params>
                        <param name="c" type="char"/>
                    </params>
                </method>
                <method name="encodeChar" type="int" line="216">
                    <params>
                        <param name="ch" type="char"/>
                    </params>
                </method>
                <method name="encodeSurrogate" type="int" line="220">
                    <params>
                        <param name="hi" type="char"/>
                        <param name="lo" type="char"/>
                    </params>
                </method>
                <declaration name="comp" type="CharsetMapping.Entry" line="224"/>
                <method name="encodeComposite" type="int" line="225">
                    <params>
                        <param name="base" type="char"/>
                        <param name="cc" type="char"/>
                    </params>
                </method>
                <method name="isCompositeBase" type="boolean" line="231">
                    <params>
                        <param name="ch" type="char"/>
                    </params>
                </method>
                <declaration name="leftoverBase" type="char" line="243"/>
                <method name="encodeArrayLoop" type="CoderResult" line="244">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                    <comment line="277">
                        SingleByte                        
                    </comment>
                    <comment line="281">
                        DoubleByte                        
                    </comment>
                    <declaration name="sa" type="char[]" line="245"/>
                    <declaration name="sp" type="int" line="246"/>
                    <declaration name="sl" type="int" line="247"/>
                    <declaration name="da" type="byte[]" line="248"/>
                    <declaration name="dp" type="int" line="249"/>
                    <declaration name="dl" type="int" line="250"/>
                    <scope line="252">
                        <scope line="253">
                            <declaration name="db" type="int" line="254"/>
                            <declaration name="c" type="char" line="255"/>
                            <scope line="256">
                                <declaration name="isComp" type="boolean" line="257"/>
                                <scope line="268"/>
                            </scope>
                            <scope line="273"/>
                            <scope line="275">
                                <scope line="277"/>
                                <scope line="281"/>
                                <scope line="286">
                                    <declaration name="c2" type="char" line="289"/>
                                </scope>
                                <scope line="300"/>
                                <scope line="302"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="309"/>
                </method>
                <method name="encodeBufferLoop" type="CoderResult" line="315">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                    <comment line="342">
                        Single-byte                        
                    </comment>
                    <comment line="346">
                        DoubleByte                        
                    </comment>
                    <comment line="352">
                        Surrogates                        
                    </comment>
                    <declaration name="mark" type="int" line="316"/>
                    <scope line="317">
                        <scope line="318">
                            <declaration name="db" type="int" line="319"/>
                            <declaration name="c" type="char" line="320"/>
                            <scope line="321">
                                <declaration name="isComp" type="boolean" line="322"/>
                                <scope line="333"/>
                            </scope>
                            <scope line="338"/>
                            <scope line="340">
                                <scope line="342"/>
                                <scope line="346"/>
                                <scope line="351">
                                    <declaration name="c2" type="char" line="354"/>
                                </scope>
                                <scope line="365"/>
                                <scope line="367"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="374"/>
                </method>
                <method name="encodeLoop" type="CoderResult" line="379">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                </method>
                <method name="implFlush" type="CoderResult" line="386">
                    <params>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                    <scope line="387">
                        <declaration name="db" type="int" line="390"/>
                    </scope>
                </method>
                <method name="implReset" type="void" line="398"/>
            </class>
        </class>
    </source>