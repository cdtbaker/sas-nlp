<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs.ext">
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.CharBuffer"/>
        <import package="java.nio.charset.Charset"/>
        <import package="java.nio.charset.CharsetDecoder"/>
        <import package="java.nio.charset.CharsetEncoder"/>
        <import package="java.nio.charset.CoderResult"/>
        <import package="sun.nio.cs.HistoricallyNamedCharset"/>
        <import package="sun.nio.cs.Surrogate"/>
        <class name="EUC_JP" line="40">
            <extends class="Charset"/>
            <implements interface="HistoricallyNamedCharset"/>
            <method name="EUC_JP" type="constructor" line="44"/>
            <method name="historicalName" type="String" line="48"/>
            <method name="contains" type="boolean" line="52">
                <params>
                    <param name="cs" type="Charset"/>
                </params>
            </method>
            <method name="newDecoder" type="CharsetDecoder" line="60"/>
            <method name="newEncoder" type="CharsetEncoder" line="64">
                <comment line="67">
                    Need to force the replacement byte to 0x3f
                     because JIS_X_0208_Encoder defines its own
                     alternative 2 byte substitution to permit it
                     to exist as a self-standing Encoder                    
                </comment>
                <declaration name="replacementBytes" type="byte[]" line="71"/>
            </method>
            <class name="Decoder" line="76">
                <extends class="JIS_X_0208_Decoder"/>
                <comment line="221">
                    Make some protected methods public for use by JISAutoDetect                    
                </comment>
                <implements interface="DelegatableDecoder"/>
                <declaration name="decoderJ0201" type="JIS_X_0201.Decoder" line="79"/>
                <declaration name="decoderJ0212" type="JIS_X_0212_Decoder" line="80"/>
                <declaration name="j0208Index1" type="short[]" line="82"/>
                <declaration name="j0208Index2" type="String[]" line="84"/>
                <method name="Decoder" type="constructor" line="87">
                    <params>
                        <param name="cs" type="Charset"/>
                    </params>
                </method>
                <method name="decode0212" type="char" line="94">
                    <params>
                        <param name="byte1" type="int"/>
                        <param name="byte2" type="int"/>
                    </params>
                </method>
                <method name="decodeDouble" type="char" line="98">
                    <params>
                        <param name="byte1" type="int"/>
                        <param name="byte2" type="int"/>
                    </params>
                    <comment line="103">
                        Fix for bug 4121358 - similar fix for bug 4117820 put
                         into ByteToCharDoubleByte.getUnicode()                        
                    </comment>
                    <scope line="99"/>
                    <declaration name="n" type="int" line="108"/>
                </method>
                <method name="decodeArrayLoop" type="CoderResult" line="115">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <comment line="131">
                        U+FFFD;                        
                    </comment>
                    <comment line="141">
                        Multibyte char                        
                    </comment>
                    <comment line="142">
                        JIS0212                        
                    </comment>
                    <comment line="150">
                        JIS0208                        
                    </comment>
                    <comment line="158">
                        can&apos;t be decoded                        
                    </comment>
                    <declaration name="sa" type="byte[]" line="116"/>
                    <declaration name="sp" type="int" line="117"/>
                    <declaration name="sl" type="int" line="118"/>
                    <declaration name="da" type="char[]" line="122"/>
                    <declaration name="dp" type="int" line="123"/>
                    <declaration name="dl" type="int" line="124"/>
                    <declaration name="b1" type="int" line="128"/>
                    <declaration name="inputSize" type="int" line="129"/>
                    <declaration name="outputChar" type="char" line="130"/>
                    <scope line="132">
                        <scope line="133">
                            <scope line="137"/>
                            <scope line="140">
                                <scope line="141"/>
                                <scope line="148"/>
                            </scope>
                            <scope line="157"/>
                        </scope>
                    </scope>
                    <scope line="166"/>
                </method>
                <method name="decodeBufferLoop" type="CoderResult" line="174">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <comment line="180">
                        U+FFFD;                        
                    </comment>
                    <comment line="189">
                        Multibyte char                        
                    </comment>
                    <comment line="190">
                        JIS0212                        
                    </comment>
                    <comment line="198">
                        JIS0208                        
                    </comment>
                    <declaration name="mark" type="int" line="175"/>
                    <declaration name="b1" type="int" line="176"/>
                    <declaration name="inputSize" type="int" line="177"/>
                    <declaration name="outputChar" type="char" line="179"/>
                    <scope line="181">
                        <scope line="182">
                            <scope line="186"/>
                            <scope line="188">
                                <scope line="189"/>
                                <scope line="196"/>
                            </scope>
                            <scope line="206"/>
                        </scope>
                    </scope>
                    <scope line="215"/>
                </method>
                <method name="decodeLoop" type="CoderResult" line="221">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                </method>
                <method name="implReset" type="void" line="227"/>
                <method name="implFlush" type="CoderResult" line="230">
                    <params>
                        <param name="out" type="CharBuffer"/>
                    </params>
                </method>
            </class>
            <class name="Encoder" line="236">
                <extends class="JIS_X_0208_Encoder"/>
                <comment line="221">
                    Make some protected methods public for use by JISAutoDetect                    
                </comment>
                <declaration name="encoderJ0201" type="JIS_X_0201.Encoder" line="238"/>
                <declaration name="encoderJ0212" type="JIS_X_0212_Encoder" line="239"/>
                <declaration name="j0208Index1" type="short[]" line="241"/>
                <declaration name="j0208Index2" type="String[]" line="243"/>
                <declaration name="sgp" type="Surrogate.Parser" line="246"/>
                <method name="Encoder" type="constructor" line="248">
                    <params>
                        <param name="cs" type="Charset"/>
                    </params>
                </method>
                <method name="canEncode" type="boolean" line="254">
                    <params>
                        <param name="c" type="char"/>
                    </params>
                    <comment line="258">
                        doublebyte                        
                    </comment>
                    <declaration name="encodedBytes" type="byte[]" line="255"/>
                    <scope line="257"/>
                </method>
                <method name="encodeSingle" type="int" line="264">
                    <params>
                        <param name="inputChar" type="char"/>
                        <param name="outputByte" type="byte[]"/>
                    </params>
                    <declaration name="b" type="byte" line="265"/>
                    <scope line="267"/>
                    <scope line="275"/>
                </method>
                <method name="encodeDouble" type="int" line="285">
                    <params>
                        <param name="ch" type="char"/>
                    </params>
                    <declaration name="offset" type="int" line="286"/>
                    <declaration name="r" type="int" line="287"/>
                </method>
                <method name="encodeArrayLoop" type="CoderResult" line="299">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                    <comment line="314">
                        Size of input                        
                    </comment>
                    <comment line="330">
                        DoubleByte                        
                    </comment>
                    <comment line="349">
                        Put the byte in the output buffer                        
                    </comment>
                    <declaration name="sa" type="char[]" line="300"/>
                    <declaration name="sp" type="int" line="301"/>
                    <declaration name="sl" type="int" line="302"/>
                    <declaration name="da" type="byte[]" line="305"/>
                    <declaration name="dp" type="int" line="306"/>
                    <declaration name="dl" type="int" line="307"/>
                    <declaration name="outputSize" type="int" line="311"/>
                    <declaration name="outputByte" type="byte[]" line="312"/>
                    <declaration name="inputSize" type="int" line="313"/>
                    <declaration name="tmpBuf" type="byte[]" line="314"/>
                    <scope line="316">
                        <scope line="317">
                            <declaration name="c" type="char" line="319"/>
                            <scope line="321"/>
                            <scope line="329">
                                <declaration name="ncode" type="int" line="330"/>
                                <scope line="331">
                                    <scope line="332"/>
                                    <scope line="336"/>
                                </scope>
                                <scope line="342"/>
                            </scope>
                            <scope line="349"/>
                        </scope>
                    </scope>
                    <scope line="355"/>
                </method>
                <method name="encodeBufferLoop" type="CoderResult" line="363">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                    <comment line="367">
                        Size of input                        
                    </comment>
                    <comment line="383">
                        DoubleByte                        
                    </comment>
                    <comment line="403">
                        Put the byte in the output buffer                        
                    </comment>
                    <declaration name="outputSize" type="int" line="364"/>
                    <declaration name="outputByte" type="byte[]" line="365"/>
                    <declaration name="inputSize" type="int" line="366"/>
                    <declaration name="tmpBuf" type="byte[]" line="367"/>
                    <declaration name="mark" type="int" line="369"/>
                    <scope line="371">
                        <scope line="372">
                            <declaration name="c" type="char" line="374"/>
                            <scope line="375"/>
                            <scope line="382">
                                <declaration name="ncode" type="int" line="383"/>
                                <scope line="384">
                                    <scope line="385"/>
                                    <scope line="389"/>
                                </scope>
                                <scope line="395"/>
                            </scope>
                            <scope line="403"/>
                        </scope>
                    </scope>
                    <scope line="409"/>
                </method>
                <method name="encodeLoop" type="CoderResult" line="416">
                    <params>
                        <param name="src" type="CharBuffer"/>
                        <param name="dst" type="ByteBuffer"/>
                    </params>
                </method>
            </class>
        </class>
    </source>