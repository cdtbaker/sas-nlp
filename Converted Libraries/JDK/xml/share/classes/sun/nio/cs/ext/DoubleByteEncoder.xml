<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs.ext">
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.CharBuffer"/>
        <import package="java.nio.charset.Charset"/>
        <import package="java.nio.charset.CharsetEncoder"/>
        <import package="java.nio.charset.CoderResult"/>
        <import package="sun.nio.cs.Surrogate"/>
        <class name="DoubleByteEncoder" line="8">
            <extends class="CharsetEncoder"/>
            <declaration name="index1" type="short" line="9"/>
            <declaration name="index2" type="String" line="10"/>
            <declaration name="sgp" type="Surrogate.Parser" line="11"/>
            <method name="DoubleByteEncoder" type="constructor" line="12">
                <params>
                    <param name="cs" type="Charset"/>
                    <param name="index1" type="short[]"/>
                    <param name="index2" type="String[]"/>
                </params>
            </method>
            <method name="DoubleByteEncoder" type="constructor" line="17">
                <params>
                    <param name="cs" type="Charset"/>
                    <param name="index1" type="short[]"/>
                    <param name="index2" type="String[]"/>
                    <param name="avg" type="float"/>
                    <param name="max" type="float"/>
                </params>
            </method>
            <method name="DoubleByteEncoder" type="constructor" line="22">
                <params>
                    <param name="cs" type="Charset"/>
                    <param name="index1" type="short[]"/>
                    <param name="index2" type="String[]"/>
                    <param name="repl" type="byte[]"/>
                </params>
            </method>
            <method name="DoubleByteEncoder" type="constructor" line="27">
                <params>
                    <param name="cs" type="Charset"/>
                    <param name="index1" type="short[]"/>
                    <param name="index2" type="String[]"/>
                    <param name="repl" type="byte[]"/>
                    <param name="avg" type="float"/>
                    <param name="max" type="float"/>
                </params>
            </method>
            <method name="canEncode" type="boolean" line="32">
                <params>
                    <param name="c" type="char"/>
                </params>
            </method>
            <method name="encodeArrayLoop" type="CoderResult" line="35">
                <params>
                    <param name="src" type="CharBuffer"/>
                    <param name="dst" type="ByteBuffer"/>
                </params>
                <declaration name="sa" type="char[]" line="36"/>
                <declaration name="sp" type="int" line="37"/>
                <declaration name="sl" type="int" line="38"/>
                <declaration name="da" type="byte[]" line="39"/>
                <declaration name="dp" type="int" line="40"/>
                <declaration name="dl" type="int" line="41"/>
                <scope line="42">
                    <scope line="43">
                        <declaration name="c" type="char" line="44"/>
                        <scope line="45">
                            <declaration name="c2" type="char" line="48"/>
                            <declaration name="outputBytes" type="byte[]" line="49"/>
                            <scope line="51"/>
                            <scope line="54"/>
                        </scope>
                        <declaration name="b" type="int" line="63"/>
                        <scope line="64"/>
                        <declaration name="ncode" type="int" line="70"/>
                        <scope line="71"/>
                    </scope>
                </scope>
                <scope line="82"/>
            </method>
            <method name="encodeBufferLoop" type="CoderResult" line="87">
                <params>
                    <param name="src" type="CharBuffer"/>
                    <param name="dst" type="ByteBuffer"/>
                </params>
                <declaration name="mark" type="int" line="88"/>
                <scope line="89">
                    <scope line="90">
                        <declaration name="c" type="char" line="91"/>
                        <scope line="92">
                            <declaration name="surr" type="int" line="93"/>
                            <declaration name="c2" type="char" line="95"/>
                            <declaration name="outputBytes" type="byte[]" line="96"/>
                            <scope line="98"/>
                            <scope line="101"/>
                        </scope>
                        <declaration name="b" type="int" line="110"/>
                        <scope line="111"/>
                        <declaration name="ncode" type="int" line="117"/>
                        <scope line="118"/>
                    </scope>
                </scope>
                <scope line="129"/>
            </method>
            <method name="encodeLoop" type="CoderResult" line="133">
                <params>
                    <param name="src" type="CharBuffer"/>
                    <param name="dst" type="ByteBuffer"/>
                </params>
            </method>
            <method name="encodeDouble" type="int" line="137">
                <params>
                    <param name="ch" type="char"/>
                </params>
                <declaration name="offset" type="int" line="138"/>
            </method>
            <method name="encodeSingle" type="int" line="141">
                <params>
                    <param name="inputChar" type="char"/>
                </params>
            </method>
            <javadoc line="145">
                Protected method which should be overridden by concrete DBCS
                  CharsetEncoder classes which included supplementary characters
                  within their mapping coverage.
                  null return value indicates surrogate values could not be
                  handled or encoded.                
            </javadoc>
            <method name="encodeSurrogate" type="byte[]" line="152">
                <params>
                    <param name="highSurrogate" type="char"/>
                    <param name="lowSurrogate" type="char"/>
                </params>
            </method>
        </class>
    </source>