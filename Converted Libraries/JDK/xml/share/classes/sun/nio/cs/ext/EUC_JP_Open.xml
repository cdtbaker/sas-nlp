<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs.ext">
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.CharBuffer"/>
        <import package="java.nio.charset.Charset"/>
        <import package="java.nio.charset.CharsetDecoder"/>
        <import package="java.nio.charset.CharsetEncoder"/>
        <import package="java.nio.charset.CoderResult"/>
        <import package="sun.nio.cs.HistoricallyNamedCharset"/>
        <import package="sun.nio.cs.Surrogate"/>
        <class name="EUC_JP_Open" line="40">
            <extends class="Charset"/>
            <implements interface="HistoricallyNamedCharset"/>
            <method name="EUC_JP_Open" type="constructor" line="44"/>
            <method name="historicalName" type="String" line="48"/>
            <method name="contains" type="boolean" line="52">
                <params>
                    <param name="cs" type="Charset"/>
                </params>
            </method>
            <method name="newDecoder" type="CharsetDecoder" line="58"/>
            <method name="newEncoder" type="CharsetEncoder" line="62">
                <comment line="64">
                    Need to force the replacement byte to 0x3f                    
                </comment>
                <comment line="65">
                    because JIS_X_0208_Encoder defines its own                    
                </comment>
                <comment line="66">
                    alternative 2 byte substitution to permit it                    
                </comment>
                <comment line="67">
                    to exist as a self-standing Encoder                    
                </comment>
                <declaration name="replacementBytes" type="byte[]" line="69"/>
            </method>
            <class name="Decoder" line="73">
                <extends class="EUC_JP.Decoder"/>
                <declaration name="decoderJ0201" type="JIS_X_0201.Decoder" line="74"/>
                <declaration name="decodeMappingJ0212" type="JIS_X_0212_Solaris_Decoder" line="75"/>
                <declaration name="decodeMappingJ0208" type="JIS_X_0208_Solaris_Decoder" line="76"/>
                <declaration name="j0208Index1" type="short[]" line="78"/>
                <declaration name="j0208Index2" type="String[]" line="80"/>
                <declaration name="start" type="int" line="82"/>
                <declaration name="end" type="int" line="83"/>
                <declaration name="REPLACE_CHAR" type="char" line="85"/>
                <method name="Decoder" type="constructor" line="87">
                    <params>
                        <param name="cs" type="Charset"/>
                    </params>
                </method>
                <method name="decode0212" type="char" line="94">
                    <params>
                        <param name="byte1" type="int"/>
                        <param name="byte2" type="int"/>
                    </params>
                </method>
                <method name="decodeDouble" type="char" line="99">
                    <params>
                        <param name="byte1" type="int"/>
                        <param name="byte2" type="int"/>
                    </params>
                    <scope line="100"/>
                    <declaration name="result" type="char" line="110"/>
                    <scope line="111"/>
                    <scope line="113">
                        <declaration name="n" type="int" line="114"/>
                    </scope>
                </method>
            </class>
            <class name="Encoder" line="123">
                <extends class="EUC_JP.Encoder"/>
                <declaration name="encoderJ0201" type="JIS_X_0201.Encoder" line="125"/>
                <declaration name="encoderJ0212" type="JIS_X_0212_Solaris_Encoder" line="126"/>
                <declaration name="j0208Index1" type="short[]" line="128"/>
                <declaration name="j0208Index2" type="String[]" line="130"/>
                <declaration name="sgp" type="Surrogate.Parser" line="133"/>
                <method name="Encoder" type="constructor" line="135">
                    <params>
                        <param name="cs" type="Charset"/>
                    </params>
                </method>
                <method name="encodeSingle" type="int" line="141">
                    <params>
                        <param name="inputChar" type="char"/>
                        <param name="outputByte" type="byte[]"/>
                    </params>
                    <declaration name="b" type="byte" line="142"/>
                    <scope line="144"/>
                    <scope line="152"/>
                </method>
                <method name="encodeDouble" type="int" line="162">
                    <params>
                        <param name="ch" type="char"/>
                    </params>
                    <declaration name="r" type="int" line="163"/>
                    <scope line="164"/>
                    <scope line="167">
                        <declaration name="offset" type="int" line="168"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>