<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs">
        <import package="java.io"/>
        <import package="java.nio"/>
        <import package="java.nio.channels"/>
        <import package="java.nio.charset"/>
        <class name="StreamEncoder" line="36">
            <extends class="Writer"/>
            <comment line="49">
                Factories for java.io.OutputStreamWriter                
            </comment>
            <comment line="80">
                Factory for java.nio.channels.Channels.newWriter                
            </comment>
            <comment line="90">
                -- Public methods corresponding to those in OutputStreamWriter --                
            </comment>
            <comment line="92">
                All synchronization and state/argument checking is done in these public
                 methods; the concrete stream-encoder subclasses defined below need not
                 do any such checking.                
            </comment>
            <comment line="160">
                -- Charset-based stream encoder impl --                
            </comment>
            <comment line="166">
                Exactly one of these is non-null                
            </comment>
            <comment line="170">
                Leftover first char in a surrogate pair                
            </comment>
            <declaration name="DEFAULT_BYTE_BUFFER_SIZE" type="int" line="39"/>
            <declaration name="isOpen" type="boolean" line="41"/>
            <method name="ensureOpen" type="void" line="43"/>
            <method name="forOutputStreamWriter" type="StreamEncoder" line="53">
                <params>
                    <param name="out" type="OutputStream"/>
                    <param name="lock" type="Object"/>
                    <param name="charsetName" type="String"/>
                </params>
                <declaration name="csn" type="String" line="54"/>
                <scope line="57"/>
                <scope line="60"/>
            </method>
            <method name="forOutputStreamWriter" type="StreamEncoder" line="67">
                <params>
                    <param name="out" type="OutputStream"/>
                    <param name="lock" type="Object"/>
                    <param name="cs" type="Charset"/>
                </params>
            </method>
            <method name="forOutputStreamWriter" type="StreamEncoder" line="74">
                <params>
                    <param name="out" type="OutputStream"/>
                    <param name="lock" type="Object"/>
                    <param name="enc" type="CharsetEncoder"/>
                </params>
            </method>
            <method name="forEncoder" type="StreamEncoder" line="84">
                <params>
                    <param name="ch" type="WritableByteChannel"/>
                    <param name="enc" type="CharsetEncoder"/>
                    <param name="minBufferCap" type="int"/>
                </params>
            </method>
            <method name="getEncoding" type="String" line="95"/>
            <method name="flushBuffer" type="void" line="101">
                <scope line="102"/>
            </method>
            <method name="write" type="void" line="110">
                <params>
                    <param name="c" type="int"/>
                </params>
                <declaration name="cbuf" type="char" line="111"/>
            </method>
            <method name="write" type="void" line="116">
                <params>
                    <param name="cbuf" type="char"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="117">
                    <scope line="120"/>
                    <scope line="122"/>
                </scope>
            </method>
            <method name="write" type="void" line="129">
                <params>
                    <param name="str" type="String"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <comment line="131">
                                        
                </comment>
                <declaration name="cbuf" type="char" line="133"/>
            </method>
            <method name="flush" type="void" line="138">
                <scope line="139"/>
            </method>
            <method name="close" type="void" line="145">
                <scope line="146"/>
            </method>
            <method name="isOpen" type="boolean" line="154"/>
            <declaration name="cs" type="Charset" line="161"/>
            <declaration name="encoder" type="CharsetEncoder" line="162"/>
            <declaration name="bb" type="ByteBuffer" line="163"/>
            <declaration name="out" type="OutputStream" line="166"/>
            <declaration name="ch" type="WritableByteChannel" line="167"/>
            <declaration name="haveLeftoverChar" type="boolean" line="170"/>
            <declaration name="leftoverChar" type="char" line="171"/>
            <declaration name="lcb" type="CharBuffer" line="172"/>
            <method name="StreamEncoder" type="constructor" line="174">
                <params>
                    <param name="out" type="OutputStream"/>
                    <param name="lock" type="Object"/>
                    <param name="cs" type="Charset"/>
                </params>
            </method>
            <method name="StreamEncoder" type="constructor" line="181">
                <params>
                    <param name="out" type="OutputStream"/>
                    <param name="lock" type="Object"/>
                    <param name="enc" type="CharsetEncoder"/>
                </params>
                <comment line="189">
                    This path disabled until direct buffers are faster                    
                </comment>
                <scope line="189"/>
                <scope line="194"/>
            </method>
            <method name="StreamEncoder" type="constructor" line="199">
                <params>
                    <param name="ch" type="WritableByteChannel"/>
                    <param name="enc" type="CharsetEncoder"/>
                    <param name="mbc" type="int"/>
                </params>
            </method>
            <method name="writeBytes" type="void" line="209">
                <declaration name="lim" type="int" line="211"/>
                <declaration name="pos" type="int" line="212"/>
                <declaration name="rem" type="int" line="214"/>
                <scope line="216">
                    <scope line="217"/>
                    <scope line="220"/>
                </scope>
            </method>
            <method name="flushLeftoverChar" type="void" line="229">
                <params>
                    <param name="cb" type="CharBuffer"/>
                    <param name="endOfInput" type="boolean"/>
                </params>
                <scope line="241">
                    <declaration name="cr" type="CoderResult" line="242"/>
                    <scope line="243">
                        <scope line="244"/>
                    </scope>
                    <scope line="252"/>
                </scope>
            </method>
            <method name="implWrite" type="void" line="264">
                <params>
                    <param name="cbuf" type="char"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="cb" type="CharBuffer" line="265"/>
                <scope line="270">
                    <declaration name="cr" type="CoderResult" line="271"/>
                    <scope line="272">
                        <scope line="274"/>
                    </scope>
                    <scope line="280"/>
                </scope>
            </method>
            <method name="implFlushBuffer" type="void" line="289"/>
            <method name="implFlush" type="void" line="294"/>
            <method name="implClose" type="void" line="300">
                <scope line="302">
                    <scope line="303">
                        <declaration name="cr" type="CoderResult" line="304"/>
                        <scope line="307"/>
                    </scope>
                </scope>
                <scope line="321"/>
            </method>
            <method name="encodingName" type="String" line="327"/>
        </class>
    </source>