<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs.ext">
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.CharBuffer"/>
        <import package="java.nio.charset.Charset"/>
        <import package="java.nio.charset.CharsetDecoder"/>
        <import package="java.nio.charset.CoderResult"/>
        <class name="DoubleByteDecoder" line="7">
            <extends class="CharsetDecoder"/>
            <declaration name="index1" type="short" line="8"/>
            <declaration name="index2" type="String" line="9"/>
            <declaration name="start" type="int" line="10"/>
            <declaration name="end" type="int" line="11"/>
            <declaration name="REPLACE_CHAR" type="char" line="12"/>
            <declaration name="highSurrogate" type="char" line="13"/>
            <declaration name="lowSurrogate" type="char" line="14"/>
            <method name="DoubleByteDecoder" type="constructor" line="15">
                <params>
                    <param name="cs" type="Charset"/>
                    <param name="index1" type="short[]"/>
                    <param name="index2" type="String[]"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
            </method>
            <method name="decodeArrayLoop" type="CoderResult" line="22">
                <params>
                    <param name="src" type="ByteBuffer"/>
                    <param name="dst" type="CharBuffer"/>
                </params>
                <declaration name="sa" type="byte[]" line="23"/>
                <declaration name="sp" type="int" line="24"/>
                <declaration name="sl" type="int" line="25"/>
                <declaration name="da" type="char[]" line="28"/>
                <declaration name="dp" type="int" line="29"/>
                <declaration name="dl" type="int" line="30"/>
                <scope line="33">
                    <scope line="34">
                        <declaration name="b1" type="int" line="35"/>
                        <declaration name="inputSize" type="int" line="37"/>
                        <declaration name="outputSize" type="int" line="38"/>
                        <declaration name="c" type="char" line="40"/>
                        <scope line="41"/>
                        <scope line="51"/>
                        <scope line="55"/>
                    </scope>
                </scope>
                <scope line="62"/>
            </method>
            <method name="decodeBufferLoop" type="CoderResult" line="67">
                <params>
                    <param name="src" type="ByteBuffer"/>
                    <param name="dst" type="CharBuffer"/>
                </params>
                <declaration name="mark" type="int" line="68"/>
                <declaration name="inputSize" type="int" line="69"/>
                <declaration name="outputSize" type="int" line="70"/>
                <scope line="71">
                    <scope line="72">
                        <declaration name="b1" type="int" line="73"/>
                        <declaration name="c" type="char" line="77"/>
                        <scope line="78">
                            <declaration name="b2" type="int" line="81"/>
                        </scope>
                        <scope line="89"/>
                        <scope line="93"/>
                    </scope>
                </scope>
                <scope line="99"/>
            </method>
            <method name="decodeLoop" type="CoderResult" line="103">
                <params>
                    <param name="src" type="ByteBuffer"/>
                    <param name="dst" type="CharBuffer"/>
                </params>
            </method>
            <method name="decodeSingle" type="char" line="107">
                <params>
                    <param name="b" type="int"/>
                </params>
            </method>
            <method name="decodeDouble" type="char" line="111">
                <params>
                    <param name="byte1" type="int"/>
                    <param name="byte2" type="int"/>
                </params>
                <declaration name="n" type="int" line="113"/>
            </method>
        </class>
    </source>