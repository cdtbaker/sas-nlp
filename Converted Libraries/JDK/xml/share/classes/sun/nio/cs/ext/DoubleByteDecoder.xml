<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs.ext">
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.CharBuffer"/>
        <import package="java.nio.charset.Charset"/>
        <import package="java.nio.charset.CharsetDecoder"/>
        <import package="java.nio.charset.CoderResult"/>
        <class name="DoubleByteDecoder" line="37">
            <extends class="CharsetDecoder"/>
            <comment line="44">
                2nd level index, provided by subclass
                 every string has 0x10(end-start+1) characters.                
            </comment>
            <comment line="166">
                Can be changed by subclass                
            </comment>
            <declaration name="index1" type="short" line="41"/>
            <declaration name="index2" type="String" line="47"/>
            <declaration name="start" type="int" line="49"/>
            <declaration name="end" type="int" line="50"/>
            <declaration name="REPLACE_CHAR" type="char" line="52"/>
            <declaration name="highSurrogate" type="char" line="53"/>
            <declaration name="lowSurrogate" type="char" line="54"/>
            <method name="DoubleByteDecoder" type="constructor" line="57">
                <params>
                    <param name="cs" type="Charset"/>
                    <param name="index1" type="short[]"/>
                    <param name="index2" type="String[]"/>
                    <param name="start" type="int"/>
                    <param name="end" type="int"/>
                </params>
            </method>
            <method name="decodeArrayLoop" type="CoderResult" line="65">
                <params>
                    <param name="src" type="ByteBuffer"/>
                    <param name="dst" type="CharBuffer"/>
                </params>
                <declaration name="sa" type="byte[]" line="66"/>
                <declaration name="sp" type="int" line="67"/>
                <declaration name="sl" type="int" line="68"/>
                <declaration name="da" type="char[]" line="71"/>
                <declaration name="dp" type="int" line="72"/>
                <declaration name="dl" type="int" line="73"/>
                <scope line="77">
                    <scope line="78">
                        <declaration name="b1" type="int" line="79"/>
                        <declaration name="inputSize" type="int" line="81"/>
                        <declaration name="outputSize" type="int" line="82"/>
                        <declaration name="c" type="char" line="84"/>
                        <scope line="85"/>
                        <scope line="99"/>
                        <scope line="102"/>
                    </scope>
                </scope>
                <scope line="108"/>
            </method>
            <method name="decodeBufferLoop" type="CoderResult" line="114">
                <params>
                    <param name="src" type="ByteBuffer"/>
                    <param name="dst" type="CharBuffer"/>
                </params>
                <declaration name="mark" type="int" line="115"/>
                <declaration name="inputSize" type="int" line="116"/>
                <declaration name="outputSize" type="int" line="117"/>
                <scope line="118">
                    <scope line="119">
                        <declaration name="b1" type="int" line="120"/>
                        <declaration name="c" type="char" line="125"/>
                        <scope line="127">
                            <declaration name="b2" type="int" line="131"/>
                        </scope>
                        <scope line="145"/>
                        <scope line="148"/>
                    </scope>
                </scope>
                <scope line="153"/>
            </method>
            <method name="decodeLoop" type="CoderResult" line="158">
                <params>
                    <param name="src" type="ByteBuffer"/>
                    <param name="dst" type="CharBuffer"/>
                </params>
            </method>
            <method name="decodeSingle" type="char" line="168">
                <params>
                    <param name="b" type="int"/>
                </params>
            </method>
            <method name="decodeDouble" type="char" line="174">
                <params>
                    <param name="byte1" type="int"/>
                    <param name="byte2" type="int"/>
                </params>
                <declaration name="n" type="int" line="179"/>
            </method>
        </class>
    </source>