<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs.ext">
        <import package="java.nio.CharBuffer"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.charset.Charset"/>
        <import package="java.nio.charset.CharsetDecoder"/>
        <import package="java.nio.charset.CharsetEncoder"/>
        <import package="java.nio.charset.CoderResult"/>
        <import package="sun.nio.cs.HistoricallyNamedCharset"/>
        <class name="IBM33722" line="9">
            <extends class="Charset"/>
            <implements interface="HistoricallyNamedCharset"/>
            <method name="IBM33722" type="constructor" line="10"/>
            <method name="historicalName" type="String" line="13"/>
            <method name="contains" type="boolean" line="16">
                <params>
                    <param name="cs" type="Charset"/>
                </params>
            </method>
            <method name="newDecoder" type="CharsetDecoder" line="19"/>
            <method name="newEncoder" type="CharsetEncoder" line="22"/>
            <javadoc line="25">
                These accessors are temporarily supplied while sun.io
                  converters co-exist with the sun.nio.cs.{ext} charset coders
                  These facilitate sharing of conversion tables between the
                  two co-existing implementations. When sun.io converters
                  are made extinct these will be unncessary and should be removed                
            </javadoc>
            <method name="getDecoderSingleByteMappings" type="String" line="32"/>
            <method name="getDecoderMappingTableG1" type="String" line="35"/>
            <method name="getDecoderMappingTableG2" type="String" line="38"/>
            <method name="getDecoderMappingTableG3" type="String" line="41"/>
            <method name="getEncoderIndex1" type="short[]" line="44"/>
            <method name="getEncoderIndex2" type="String" line="47"/>
            <method name="getEncoderIndex2a" type="String" line="50"/>
            <method name="getEncoderIndex2b" type="String" line="53"/>
            <class name="Decoder" line="56">
                <extends class="CharsetDecoder"/>
                <declaration name="G0" type="int" line="57"/>
                <declaration name="G1" type="int" line="58"/>
                <declaration name="G2" type="int" line="59"/>
                <declaration name="G3" type="int" line="60"/>
                <declaration name="G4" type="int" line="61"/>
                <declaration name="SS2" type="int" line="62"/>
                <declaration name="SS3" type="int" line="63"/>
                <declaration name="firstByte" type="int" line="64"/>
                <method name="Decoder" type="constructor" line="65">
                    <params>
                        <param name="cs" type="Charset"/>
                    </params>
                </method>
                <method name="decodeArrayLoop" type="CoderResult" line="68">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <declaration name="sa" type="byte[]" line="69"/>
                    <declaration name="sp" type="int" line="70"/>
                    <declaration name="sl" type="int" line="71"/>
                    <declaration name="da" type="char[]" line="74"/>
                    <declaration name="dp" type="int" line="75"/>
                    <declaration name="dl" type="int" line="76"/>
                    <scope line="79">
                        <scope line="80">
                            <declaration name="byte1" type="int" line="81"/>
                            <declaration name="inputSize" type="int" line="82"/>
                            <declaration name="outputChar" type="char" line="83"/>
                            <scope line="85">
                                <scope line="86"/>
                                <scope line="91"/>
                            </scope>
                            <scope line="96">
                                <scope line="97"/>
                                <scope line="103"/>
                                <scope line="106"/>
                            </scope>
                            <scope line="111"/>
                            <scope line="114"/>
                            <scope line="117">
                                <scope line="118"/>
                                <scope line="123"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="135"/>
                </method>
                <method name="decodeBufferLoop" type="CoderResult" line="140">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                    <declaration name="mark" type="int" line="141"/>
                    <scope line="142">
                        <scope line="143">
                            <declaration name="byte1" type="int" line="144"/>
                            <declaration name="inputSize" type="int" line="145"/>
                            <declaration name="outputChar" type="char" line="146"/>
                            <scope line="148">
                                <scope line="152"/>
                            </scope>
                            <scope line="157">
                                <scope line="160"/>
                                <scope line="164"/>
                            </scope>
                            <scope line="170"/>
                            <scope line="173"/>
                            <scope line="176">
                                <scope line="179"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="192"/>
                </method>
                <method name="decodeLoop" type="CoderResult" line="196">
                    <params>
                        <param name="src" type="ByteBuffer"/>
                        <param name="dst" type="CharBuffer"/>
                    </params>
                </method>
                <declaration name="byteToCharTable" type="String" line="200"/>
                <declaration name="mappingTableG1" type="String" line="201"/>
                <declaration name="mappingTableG2" type="String" line="202"/>
                <declaration name="mappingTableG3" type="String" line="203"/>
                <scope line="204"/>
            </class>
            <class name="Encoder" line="211">
                <extends class="SimpleEUCEncoder"/>
                <method name="Encoder" type="constructor" line="212">
                    <params>
                        <param name="cs" type="Charset"/>
                    </params>
                </method>
                <declaration name="index1" type="short" line="222"/>
                <declaration name="index2" type="String" line="223"/>
                <declaration name="index2a" type="String" line="224"/>
                <declaration name="index2b" type="String" line="225"/>
                <scope line="226"/>
            </class>
        </class>
    </source>