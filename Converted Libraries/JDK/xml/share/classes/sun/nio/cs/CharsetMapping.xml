<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.nio.cs">
        <import package="java.io.InputStream"/>
        <import package="java.io.InputStreamReader"/>
        <import package="java.io.OutputStream"/>
        <import package="java.io.BufferedReader"/>
        <import package="java.io.IOException"/>
        <import package="java.util.regex.Matcher"/>
        <import package="java.util.regex.Pattern"/>
        <import package="java.util"/>
        <import package="java.security"/>
        <class name="CharsetMapping" line="38">
            <comment line="43">
                singlebyte b-&gt;c                
            </comment>
            <comment line="44">
                dobulebyte b-&gt;c /db1                
            </comment>
            <comment line="45">
                dobulebyte b-&gt;c /db2                
            </comment>
            <comment line="47">
                min/max(start/end) value of 2nd byte                
            </comment>
            <comment line="48">
                min/Max(start/end) value of 1st byte/db1                
            </comment>
            <comment line="49">
                min/Max(start/end) value of 1st byte/db2                
            </comment>
            <comment line="55">
                Supplementary                
            </comment>
            <comment line="59">
                Composite                
            </comment>
            <comment line="82">
                for jis0213 all supplementary characters are in 0x2xxxx range,                
            </comment>
            <comment line="83">
                so only the xxxx part is now stored, should actually store the                
            </comment>
            <comment line="84">
                codepoint value instead.                
            </comment>
            <comment line="137">
                init the CharsetMapping object from the .dat binary file                
            </comment>
            <comment line="199">
                0..256  : c                
            </comment>
            <comment line="200">
                min..max: c                
            </comment>
            <comment line="201">
                min..max: c [DB2]                
            </comment>
            <comment line="202">
                db,c                
            </comment>
            <comment line="203">
                c,db                
            </comment>
            <comment line="204">
                db,base,cc                
            </comment>
            <comment line="205">
                index table of c-&gt;bb                
            </comment>
            <declaration name="UNMAPPABLE_DECODING" type="char" line="39"/>
            <declaration name="UNMAPPABLE_ENCODING" type="int" line="40"/>
            <declaration name="b2cSB" type="char[]" line="42"/>
            <declaration name="b2cDB1" type="char[]" line="43"/>
            <declaration name="b2cDB2" type="char[]" line="44"/>
            <declaration name="b2Min" type="int" line="46"/>
            <declaration name="b1MinDB1" type="int" line="47"/>
            <declaration name="b1MinDB2" type="int" line="48"/>
            <declaration name="dbSegSize" type="int" line="49"/>
            <declaration name="c2b" type="char[]" line="51"/>
            <declaration name="c2bIndex" type="char[]" line="52"/>
            <declaration name="b2cSupp" type="char[]" line="55"/>
            <declaration name="c2bSupp" type="char[]" line="56"/>
            <declaration name="b2cComp" type="Entry[]" line="59"/>
            <declaration name="c2bComp" type="Entry[]" line="60"/>
            <method name="decodeSingle" type="char" line="62">
                <params>
                    <param name="b" type="int"/>
                </params>
            </method>
            <method name="decodeDouble" type="char" line="66">
                <params>
                    <param name="b1" type="int"/>
                    <param name="b2" type="int"/>
                </params>
                <scope line="67">
                    <scope line="69"/>
                    <scope line="73"/>
                </scope>
            </method>
            <method name="decodeSurrogate" type="char[]" line="84">
                <params>
                    <param name="db" type="int"/>
                    <param name="cc" type="char[]"/>
                </params>
                <declaration name="end" type="int" line="85"/>
                <declaration name="i" type="int" line="86"/>
                <scope line="87"/>
            </method>
            <method name="decodeComposite" type="char[]" line="94">
                <params>
                    <param name="comp" type="Entry"/>
                    <param name="cc" type="char[]"/>
                </params>
                <declaration name="i" type="int" line="95"/>
                <scope line="96"/>
            </method>
            <method name="encodeChar" type="int" line="104">
                <params>
                    <param name="ch" type="char"/>
                </params>
                <declaration name="index" type="int" line="105"/>
            </method>
            <method name="encodeSurrogate" type="int" line="111">
                <params>
                    <param name="hi" type="char"/>
                    <param name="lo" type="char"/>
                </params>
                <declaration name="cp" type="int" line="112"/>
                <declaration name="end" type="int" line="115"/>
                <declaration name="i" type="int" line="116"/>
            </method>
            <method name="isCompositeBase" type="boolean" line="122">
                <params>
                    <param name="comp" type="Entry"/>
                </params>
                <scope line="123"/>
            </method>
            <method name="encodeComposite" type="int" line="129">
                <params>
                    <param name="comp" type="Entry"/>
                </params>
                <declaration name="i" type="int" line="130"/>
            </method>
            <method name="get" type="CharsetMapping" line="137">
                <params>
                    <param name="is" type="InputStream"/>
                </params>
                <anonymous_class line="138">
                    <method name="run" type="CharsetMapping" line="139"/>
                </anonymous_class>
            </method>
            <class name="Entry" line="145">
                <comment line="147">
                    byte sequence reps                    
                </comment>
                <comment line="148">
                    Unicode codepoint                    
                </comment>
                <comment line="149">
                    CC of composite                    
                </comment>
                <comment line="198">
                    tags of different charset mapping tables                    
                </comment>
                <declaration name="bs" type="int" line="146"/>
                <declaration name="cp" type="int" line="147"/>
                <declaration name="cp2" type="int" line="148"/>
            </class>
            <declaration name="comparatorBytes" type="Comparator&lt;Entry&gt;" line="151"/>
            <anonymous_class line="152">
                <method name="compare" type="int" line="153">
                    <params>
                        <param name="m1" type="Entry"/>
                        <param name="m2" type="Entry"/>
                    </params>
                </method>
                <method name="equals" type="boolean" line="156">
                    <params>
                        <param name="obj" type="Object"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="comparatorCP" type="Comparator&lt;Entry&gt;" line="161"/>
            <anonymous_class line="162">
                <method name="compare" type="int" line="163">
                    <params>
                        <param name="m1" type="Entry"/>
                        <param name="m2" type="Entry"/>
                    </params>
                </method>
                <method name="equals" type="boolean" line="166">
                    <params>
                        <param name="obj" type="Object"/>
                    </params>
                </method>
            </anonymous_class>
            <declaration name="comparatorComp" type="Comparator&lt;Entry&gt;" line="171"/>
            <anonymous_class line="172">
                <method name="compare" type="int" line="173">
                    <params>
                        <param name="m1" type="Entry"/>
                        <param name="m2" type="Entry"/>
                    </params>
                    <declaration name="v" type="int" line="174"/>
                </method>
                <method name="equals" type="boolean" line="179">
                    <params>
                        <param name="obj" type="Object"/>
                    </params>
                </method>
            </anonymous_class>
            <method name="findBytes" type="int" line="184">
                <params>
                    <param name="a" type="Entry[]"/>
                    <param name="k" type="Entry"/>
                </params>
            </method>
            <method name="findCP" type="int" line="188">
                <params>
                    <param name="a" type="Entry[]"/>
                    <param name="k" type="Entry"/>
                </params>
            </method>
            <method name="findComp" type="int" line="192">
                <params>
                    <param name="a" type="Entry[]"/>
                    <param name="k" type="Entry"/>
                </params>
            </method>
            <declaration name="MAP_SINGLEBYTE" type="int" line="196"/>
            <javadoc line="196">
                                
            </javadoc>
            <declaration name="MAP_DOUBLEBYTE1" type="int" line="199"/>
            <declaration name="MAP_DOUBLEBYTE2" type="int" line="200"/>
            <declaration name="MAP_SUPPLEMENT" type="int" line="201"/>
            <declaration name="MAP_SUPPLEMENT_C2B" type="int" line="202"/>
            <declaration name="MAP_COMPOSITE" type="int" line="203"/>
            <declaration name="MAP_INDEXC2B" type="int" line="204"/>
            <method name="readNBytes" type="boolean" line="208">
                <params>
                    <param name="in" type="InputStream"/>
                    <param name="bb" type="byte[]"/>
                    <param name="N" type="int"/>
                </params>
                <declaration name="off" type="int" line="209"/>
                <scope line="210">
                    <declaration name="n" type="int" line="211"/>
                </scope>
            </method>
            <declaration name="off" type="int" line="220"/>
            <declaration name="bb" type="byte[]" line="221"/>
            <method name="readCharArray" type="char[]" line="222">
                <comment line="223">
                    first 2 bytes are the number of &quot;chars&quot; stored in this table                    
                </comment>
                <declaration name="size" type="int" line="224"/>
                <declaration name="cc" type="char[]" line="225"/>
                <scope line="226"/>
            </method>
            <method name="readSINGLEBYTE" type="void" line="232">
                <declaration name="map" type="char[]" line="233"/>
                <scope line="234">
                    <declaration name="c" type="char" line="235"/>
                    <scope line="236"/>
                </scope>
            </method>
            <method name="readINDEXC2B" type="void" line="243">
                <declaration name="map" type="char[]" line="244"/>
                <scope line="245">
                    <scope line="246"/>
                </scope>
            </method>
            <method name="readDB" type="char[]" line="255">
                <params>
                    <param name="b1Min" type="int"/>
                    <param name="b2Min" type="int"/>
                    <param name="segSize" type="int"/>
                </params>
                <comment line="263">
                    System.out.printf(&quot;    DB %x\t%x%n&quot;, b, c &amp; 0xffff);                    
                </comment>
                <declaration name="map" type="char[]" line="256"/>
                <scope line="257">
                    <declaration name="c" type="char" line="258"/>
                    <scope line="259">
                        <declaration name="b1" type="int" line="260"/>
                        <declaration name="b2" type="int" line="261"/>
                        <declaration name="b" type="int" line="262"/>
                    </scope>
                </scope>
            </method>
            <method name="readDOUBLEBYTE1" type="void" line="270"/>
            <method name="readDOUBLEBYTE2" type="void" line="279"/>
            <method name="readCOMPOSITE" type="void" line="288">
                <declaration name="map" type="char[]" line="289"/>
                <declaration name="mLen" type="int" line="290"/>
                <scope line="293">
                    <declaration name="m" type="Entry" line="294"/>
                </scope>
            </method>
            <method name="load" type="CharsetMapping" line="304">
                <params>
                    <param name="in" type="InputStream"/>
                </params>
                <comment line="306">
                    The first 4 bytes are the size of the total data followed in                    
                </comment>
                <comment line="307">
                    this .dat file.                    
                </comment>
                <comment line="312">
                    System.out.printf(&quot;In : Total=%d%n&quot;, len);                    
                </comment>
                <comment line="313">
                    Read in all bytes                    
                </comment>
                <scope line="305">
                    <declaration name="len" type="int" line="308"/>
                    <scope line="318">
                        <declaration name="type" type="int" line="319"/>
                    </scope>
                </scope>
                <scope line="348"/>
            </method>
        </class>
    </source>