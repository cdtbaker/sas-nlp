<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.audio">
        <import package="java.io.InputStream"/>
        <import package="java.io.DataInputStream"/>
        <import package="java.io.FilterInputStream"/>
        <import package="java.io.ByteArrayInputStream"/>
        <import package="java.io.BufferedInputStream"/>
        <import package="java.io.IOException"/>
        <import package="javax.sound.sampled"/>
        <import package="javax.sound.midi"/>
        <class name="AudioStream" line="38">
            <extends class="FilterInputStream"/>
            <comment line="47">
                AudioContainerInputStream acis;                
            </comment>
            <comment line="54">
                create the AudioStream; if we survive without throwing
                 an exception, we should now have some subclass of
                 ACIS with all the header info already read                
            </comment>
            <comment line="91">
                A blocking read.                
            </comment>
            <comment line="94">
                public int read(byte buf[], int pos, int len) throws IOException {
                
                return(acis.readFully(buf, pos, len));
                }                
            </comment>
            <javadoc line="38">
                Convert an InputStream to an AudioStream.                
            </javadoc>
            <declaration name="ais" type="AudioInputStream" line="47"/>
            <declaration name="format" type="AudioFormat" line="48"/>
            <declaration name="midiformat" type="MidiFileFormat" line="49"/>
            <declaration name="stream" type="InputStream" line="50"/>
            <method name="AudioStream" type="constructor" line="59">
                <params>
                    <param name="in" type="InputStream"/>
                </params>
                <comment line="77">
                    not an audio file, see if it&apos;s midi...                    
                </comment>
                <scope line="65"/>
                <scope line="70"/>
                <scope line="75">
                    <scope line="78"/>
                    <scope line="81"/>
                </scope>
            </method>
            <javadoc line="99">
                Get the data.                
            </javadoc>
            <method name="getData" type="AudioData" line="102">
                <comment line="105">
                    limit the memory to 1M, so too large au file won&apos;t load                    
                </comment>
                <comment line="116">
                    acis.setData();
                    
                    if (acis.stream instanceof ByteArrayInputStream) {
                    Format[] format = acis.getFormat();
                    byte[] bytes = acis.getBytes();
                    if (bytes == null)
                    throw new IOException(&quot;could not create AudioData object: no data received&quot;);
                    return new AudioData((AudioFormat)format[0], bytes);
                    }                    
                </comment>
                <declaration name="length" type="int" line="103"/>
                <scope line="106">
                    <declaration name="buffer" type="byte[]" line="107"/>
                    <scope line="108"/>
                    <scope line="110"/>
                </scope>
            </method>
            <method name="getLength" type="int" line="131">
                <scope line="133"/>
                <scope line="137"/>
                <scope line="140"/>
            </method>
        </class>
    </source>