<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.audio">
        <import package="java.util.Vector"/>
        <import package="java.util.Enumeration"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.io.FileOutputStream"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <class name="AudioPlayer" line="10">
            <extends class="Thread"/>
            <javadoc line="10">
                This class provides an interface to play audio streams.
                  To play an audio stream use:
                  &lt;pre&gt;
                  AudioPlayer.player.start(audiostream);
                  &lt;/pre&gt;
                  To stop playing an audio stream use:
                  &lt;pre&gt;
                  AudioPlayer.player.stop(audiostream);
                  &lt;/pre&gt;
                  To play an audio stream from a URL use:
                  &lt;pre&gt;
                  AudioStream audiostream = new AudioStream(url.openStream());
                  AudioPlayer.player.start(audiostream);
                  &lt;/pre&gt;
                  To play a continuous sound you first have to
                  create an AudioData instance and use it to construct a
                  ContinuousAudioDataStream.
                  For example:
                  &lt;pre&gt;
                  AudioData data = new AudioStream(url.openStream()).getData();
                  ContinuousAudioDataStream audiostream = new ContinuousAudioDataStream(data);
                  AudioPlayer.player.start(audiostream);
                  &lt;/pre&gt;                
                <see>
                    AudioData                    
                </see>
                <see>
                    AudioDataStream                    
                </see>
                <see>
                    AudioDevice                    
                </see>
                <see>
                    AudioStream                    
                </see>
                <author>
                    Arthur van Hoff, Thomas Ball                    
                </author>
            </javadoc>
            <declaration name="devAudio" type="AudioDevice" line="41"/>
            <declaration name="DEBUG" type="boolean" line="42"/>
            <declaration name="player" type="AudioPlayer" line="43"/>
            <javadoc line="43">
                The default audio player. This audio player is initialized
                  automatically.                
            </javadoc>
            <method name="getAudioThreadGroup" type="ThreadGroup" line="48">
                <scope line="49"/>
                <declaration name="g" type="ThreadGroup" line="52"/>
                <scope line="53"/>
            </method>
            <javadoc line="58">
                Create an AudioPlayer thread in a privileged block.                
            </javadoc>
            <method name="getAudioPlayer" type="AudioPlayer" line="61">
                <scope line="62"/>
                <declaration name="audioPlayer" type="AudioPlayer" line="65"/>
                <anonymous_class line="66">
                    <method name="run" type="Object" line="67">
                        <declaration name="t" type="Thread" line="68"/>
                    </method>
                </anonymous_class>
                <declaration name="action" type="PrivilegedAction" line="66"/>
            </method>
            <javadoc line="79">
                Construct an AudioPlayer.                
            </javadoc>
            <method name="AudioPlayer" type="constructor" line="82">
                <scope line="84"/>
                <scope line="89"/>
            </method>
            <javadoc line="93">
                Start playing a stream. The stream will continue to play
                  until the stream runs out of data, or it is stopped.                
                <see>
                    AudioPlayer#stop                    
                </see>
            </javadoc>
            <method name="start" type="void" line="98">
                <params>
                    <param name="in" type="InputStream"/>
                </params>
                <scope line="99"/>
                <scope line="105"/>
            </method>
            <javadoc line="109">
                Stop playing a stream. The stream will stop playing,
                  nothing happens if the stream wasn&apos;t playing in the
                  first place.                
                <see>
                    AudioPlayer#start                    
                </see>
            </javadoc>
            <method name="stop" type="void" line="115">
                <params>
                    <param name="in" type="InputStream"/>
                </params>
                <scope line="116"/>
                <scope line="120"/>
            </method>
            <javadoc line="124">
                Main mixing loop. This is called automatically when the AudioPlayer
                  is created.                
            </javadoc>
            <method name="run" type="void" line="128">
                <scope line="130"/>
                <scope line="133">
                    <scope line="134"/>
                    <scope line="137"/>
                </scope>
                <scope line="141"/>
            </method>
        </class>
    </source>