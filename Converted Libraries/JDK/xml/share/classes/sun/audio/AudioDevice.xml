<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.audio">
        <import package="java.util.Hashtable"/>
        <import package="java.util.Vector"/>
        <import package="java.util.Enumeration"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.BufferedInputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.io.ByteArrayInputStream"/>
        <import package="javax.sound.sampled"/>
        <import package="javax.sound.midi"/>
        <import package="com.sun.media.sound.DataPusher"/>
        <import package="com.sun.media.sound.Toolkit"/>
        <class name="AudioDevice" line="42">
            <comment line="406">
                INFO CLASS                
            </comment>
            <javadoc line="42">
                This class provides an interface to the Headspace Audio engine through
                  the Java Sound API.
                  This class emulates systems with multiple audio channels, mixing
                  multiple streams for the workstation&apos;s single-channel device.                
                <see>
                    AudioData                    
                </see>
                <see>
                    AudioDataStream                    
                </see>
                <see>
                    AudioStream                    
                </see>
                <see>
                    AudioStreamSequence                    
                </see>
                <see>
                    ContinuousAudioDataStream                    
                </see>
                <author>
                    David Rivas                    
                </author>
                <author>
                    Kara Kytle                    
                </author>
                <author>
                    Jan Borgersen                    
                </author>
                <author>
                    Florian Bomers                    
                </author>
            </javadoc>
            <declaration name="DEBUG" type="boolean" line="63"/>
            <declaration name="clipStreams" type="Hashtable" line="65"/>
            <javadoc line="65">
                Hashtable of audio clips / input streams.                
            </javadoc>
            <declaration name="infos" type="Vector" line="68"/>
            <declaration name="playing" type="boolean" line="70"/>
            <javadoc line="70">
                Are we currently playing audio?                
            </javadoc>
            <declaration name="mixer" type="Mixer" line="73"/>
            <javadoc line="73">
                Handle to the JS audio mixer.                
            </javadoc>
            <declaration name="device" type="AudioDevice" line="78"/>
            <javadoc line="78">
                The default audio player. This audio player is initialized
                  automatically.                
            </javadoc>
            <javadoc line="84">
                Create an AudioDevice instance.                
            </javadoc>
            <method name="AudioDevice" type="constructor" line="87"/>
            <method name="startSampled" type="void" line="96">
                <params>
                    <param name="as" type="AudioInputStream"/>
                    <param name="in" type="InputStream"/>
                </params>
                <comment line="104">
                    if ALAW or ULAW, we must convert....                    
                </comment>
                <comment line="108">
                    could not convert                    
                </comment>
                <declaration name="info" type="Info" line="98"/>
                <declaration name="datapusher" type="DataPusher" line="99"/>
                <declaration name="lineinfo" type="DataLine.Info" line="100"/>
                <declaration name="sourcedataline" type="SourceDataLine" line="101"/>
                <scope line="106"/>
                <scope line="113"/>
            </method>
            <method name="startMidi" type="void" line="127">
                <params>
                    <param name="bis" type="InputStream"/>
                    <param name="in" type="InputStream"/>
                </params>
                <comment line="145">
                    fix for bug 4302884: Audio device is not released when AudioClip stops                    
                </comment>
                <declaration name="sequencer" type="Sequencer" line="129"/>
                <declaration name="info" type="Info" line="130"/>
                <scope line="134"/>
                <scope line="136"/>
            </method>
            <javadoc line="153">
                Open an audio channel.                
            </javadoc>
            <method name="openChannel" type="void" line="156">
                <params>
                    <param name="in" type="InputStream"/>
                </params>
                <comment line="167">
                    is this already playing?  if so, then just return                    
                </comment>
                <comment line="183">
                    it&apos;s a midi file                    
                </comment>
                <comment line="193">
                    it&apos;s sampled audio                    
                </comment>
                <comment line="250">
                    $$jb:08.01.99: adding this section to make some of our other
                     legacy classes work.....
                     not MIDI either, special case handling for all others                    
                </comment>
                <comment line="268">
                    could not open sequence                    
                </comment>
                <comment line="278">
                    don&apos;t forget adjust for a new stream.                    
                </comment>
                <scope line="159"/>
                <declaration name="info" type="Info" line="164"/>
                <scope line="167">
                    <scope line="169"/>
                </scope>
                <declaration name="as" type="AudioInputStream" line="176"/>
                <scope line="178">
                    <scope line="180">
                        <scope line="183"/>
                        <scope line="185"/>
                    </scope>
                    <scope line="190">
                        <scope line="193"/>
                        <scope line="195"/>
                    </scope>
                </scope>
                <scope line="200">
                    <scope line="201">
                        <scope line="202">
                            <declaration name="ais" type="AudioInputStream" line="203"/>
                        </scope>
                        <scope line="207"/>
                    </scope>
                    <scope line="211">
                        <scope line="212">
                            <declaration name="ais" type="AudioInputStream" line="213"/>
                        </scope>
                        <scope line="217"/>
                    </scope>
                </scope>
                <scope line="221">
                    <declaration name="bis" type="BufferedInputStream" line="222"/>
                    <scope line="224">
                        <scope line="226"/>
                        <scope line="228"/>
                    </scope>
                    <scope line="234">
                        <scope line="236">
                            <scope line="237">
                                <declaration name="mff" type="MidiFileFormat" line="238"/>
                            </scope>
                            <scope line="240"/>
                        </scope>
                        <scope line="247">
                            <declaration name="defformat" type="AudioFormat" line="253"/>
                            <scope line="255">
                                <declaration name="defaif" type="AudioInputStream" line="256"/>
                            </scope>
                            <scope line="259"/>
                            <scope line="261"/>
                        </scope>
                        <scope line="265"/>
                    </scope>
                    <scope line="271"/>
                </scope>
            </method>
            <javadoc line="282">
                Close an audio channel.                
            </javadoc>
            <method name="closeChannel" type="void" line="285">
                <params>
                    <param name="in" type="InputStream"/>
                </params>
                <comment line="292">
                    can&apos;t go anywhere here!                    
                </comment>
                <comment line="305">
                    info.sequencer.close();                    
                </comment>
                <scope line="287"/>
                <declaration name="info" type="Info" line="293"/>
                <scope line="295">
                    <scope line="299">
                        <scope line="301"/>
                        <scope line="307"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="318">
                Open the device (done automatically)                
            </javadoc>
            <method name="open" type="void" line="321">
                <comment line="324">
                    $$jb: 06.24.99: This is done on a per-stream
                     basis using the new JS API now.                    
                </comment>
            </method>
            <javadoc line="328">
                Close the device (done automatically)                
            </javadoc>
            <method name="close" type="void" line="331">
                <comment line="334">
                    $$jb: 06.24.99: This is done on a per-stream
                     basis using the new JS API now.                    
                </comment>
            </method>
            <javadoc line="339">
                Play open audio stream(s)                
            </javadoc>
            <method name="play" type="void" line="342">
                <comment line="345">
                    $$jb: 06.24.99:  Holdover from old architechture ...
                     we now open/close the devices as needed on a per-stream
                     basis using the JavaSound API.                    
                </comment>
                <scope line="348"/>
            </method>
            <javadoc line="353">
                Close streams                
            </javadoc>
            <method name="closeStreams" type="void" line="356">
                <comment line="382">
                    Empty the hash table.                    
                </comment>
                <declaration name="info" type="Info" line="358"/>
                <scope line="360">
                    <scope line="364"/>
                    <scope line="370"/>
                </scope>
                <scope line="378"/>
            </method>
            <javadoc line="386">
                Number of channels currently open.                
            </javadoc>
            <method name="openChannels" type="int" line="389"/>
            <javadoc line="393">
                Make the debug info print out.                
            </javadoc>
            <method name="setVerbose" type="void" line="396">
                <params>
                    <param name="v" type="boolean"/>
                </params>
            </method>
            <class name="Info" line="407">
                <comment line="64">
                                        
                </comment>
                <implements interface="MetaEventListener"/>
                <declaration name="sequencer" type="Sequencer" line="409"/>
                <declaration name="in" type="InputStream" line="410"/>
                <declaration name="datapusher" type="DataPusher" line="411"/>
                <method name="Info" type="constructor" line="413">
                    <params>
                        <param name="sequencer" type="Sequencer"/>
                        <param name="in" type="InputStream"/>
                        <param name="datapusher" type="DataPusher"/>
                    </params>
                </method>
                <method name="meta" type="void" line="420">
                    <params>
                        <param name="event" type="MetaMessage"/>
                    </params>
                    <scope line="421"/>
                </method>
            </class>
        </class>
    </source>