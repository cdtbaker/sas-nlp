<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.audio">
        <import package="java.util.Hashtable"/>
        <import package="java.util.Vector"/>
        <import package="java.util.Enumeration"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.BufferedInputStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.io.ByteArrayInputStream"/>
        <import package="javax.sound.sampled"/>
        <import package="javax.sound.midi"/>
        <import package="com.sun.media.sound.DataPusher"/>
        <import package="com.sun.media.sound.Toolkit"/>
        <class name="AudioDevice" line="14">
            <javadoc line="14">
                This class provides an interface to the Headspace Audio engine through
                  the Java Sound API.
                  This class emulates systems with multiple audio channels, mixing
                  multiple streams for the workstation&apos;s single-channel device.                
                <see>
                    AudioData                    
                </see>
                <see>
                    AudioDataStream                    
                </see>
                <see>
                    AudioStream                    
                </see>
                <see>
                    AudioStreamSequence                    
                </see>
                <see>
                    ContinuousAudioDataStream                    
                </see>
                <author>
                    David Rivas                    
                </author>
                <author>
                    Kara Kytle                    
                </author>
                <author>
                    Jan Borgersen                    
                </author>
                <author>
                    Florian Bomers                    
                </author>
            </javadoc>
            <declaration name="DEBUG" type="boolean" line="30"/>
            <declaration name="clipStreams" type="Hashtable" line="31"/>
            <javadoc line="31">
                Hashtable of audio clips / input streams.                
            </javadoc>
            <declaration name="infos" type="Vector" line="35"/>
            <declaration name="playing" type="boolean" line="36"/>
            <javadoc line="36">
                Are we currently playing audio?                
            </javadoc>
            <declaration name="mixer" type="Mixer" line="40"/>
            <javadoc line="40">
                Handle to the JS audio mixer.                
            </javadoc>
            <declaration name="device" type="AudioDevice" line="44"/>
            <javadoc line="44">
                The default audio player. This audio player is initialized
                  automatically.                
            </javadoc>
            <javadoc line="49">
                Create an AudioDevice instance.                
            </javadoc>
            <method name="AudioDevice" type="constructor" line="52"/>
            <method name="startSampled" type="void" line="56">
                <params>
                    <param name="as" type="AudioInputStream"/>
                    <param name="in" type="InputStream"/>
                </params>
                <declaration name="info" type="Info" line="57"/>
                <declaration name="datapusher" type="DataPusher" line="58"/>
                <declaration name="lineinfo" type="DataLine.Info" line="59"/>
                <declaration name="sourcedataline" type="SourceDataLine" line="60"/>
                <scope line="62"/>
                <scope line="66"/>
            </method>
            <method name="startMidi" type="void" line="75">
                <params>
                    <param name="bis" type="InputStream"/>
                    <param name="in" type="InputStream"/>
                </params>
                <declaration name="sequencer" type="Sequencer" line="76"/>
                <declaration name="info" type="Info" line="77"/>
                <scope line="80"/>
                <scope line="83"/>
            </method>
            <javadoc line="91">
                Open an audio channel.                
            </javadoc>
            <method name="openChannel" type="void" line="94">
                <params>
                    <param name="in" type="InputStream"/>
                </params>
                <scope line="95"/>
                <declaration name="info" type="Info" line="99"/>
                <scope line="100">
                    <scope line="102"/>
                </scope>
                <declaration name="as" type="AudioInputStream" line="106"/>
                <scope line="107">
                    <scope line="108">
                        <scope line="109"/>
                        <scope line="112"/>
                    </scope>
                    <scope line="116">
                        <scope line="117"/>
                        <scope line="120"/>
                    </scope>
                </scope>
                <scope line="125">
                    <scope line="126">
                        <scope line="127">
                            <declaration name="ais" type="AudioInputStream" line="128"/>
                        </scope>
                        <scope line="131"/>
                    </scope>
                    <scope line="135">
                        <scope line="136">
                            <declaration name="ais" type="AudioInputStream" line="137"/>
                        </scope>
                        <scope line="140"/>
                    </scope>
                </scope>
                <scope line="145">
                    <declaration name="bis" type="BufferedInputStream" line="146"/>
                    <scope line="147">
                        <scope line="148"/>
                        <scope line="151"/>
                    </scope>
                    <scope line="156">
                        <scope line="157">
                            <scope line="158">
                                <declaration name="mff" type="MidiFileFormat" line="159"/>
                            </scope>
                            <scope line="161"/>
                        </scope>
                        <scope line="166">
                            <declaration name="defformat" type="AudioFormat" line="167"/>
                            <scope line="168">
                                <declaration name="defaif" type="AudioInputStream" line="169"/>
                            </scope>
                            <scope line="172"/>
                            <scope line="175"/>
                        </scope>
                        <scope line="179"/>
                    </scope>
                    <scope line="183"/>
                </scope>
            </method>
            <javadoc line="189">
                Close an audio channel.                
            </javadoc>
            <method name="closeChannel" type="void" line="192">
                <params>
                    <param name="in" type="InputStream"/>
                </params>
                <scope line="193"/>
                <declaration name="info" type="Info" line="197"/>
                <scope line="198">
                    <scope line="200">
                        <scope line="201"/>
                        <scope line="205"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="213">
                Open the device (done automatically)                
            </javadoc>
            <method name="open" type="void" line="216"/>
            <javadoc line="218">
                Close the device (done automatically)                
            </javadoc>
            <method name="close" type="void" line="221"/>
            <javadoc line="223">
                Play open audio stream(s)                
            </javadoc>
            <method name="play" type="void" line="226">
                <scope line="227"/>
            </method>
            <javadoc line="231">
                Close streams                
            </javadoc>
            <method name="closeStreams" type="void" line="234">
                <declaration name="info" type="Info" line="235"/>
                <scope line="236">
                    <scope line="238"/>
                    <scope line="243"/>
                </scope>
                <scope line="248"/>
            </method>
            <javadoc line="254">
                Number of channels currently open.                
            </javadoc>
            <method name="openChannels" type="int" line="257"/>
            <javadoc line="260">
                Make the debug info print out.                
            </javadoc>
            <method name="setVerbose" type="void" line="263">
                <params>
                    <param name="v" type="boolean"/>
                </params>
            </method>
            <class name="Info" line="266">
                <implements interface="MetaEventListener"/>
                <declaration name="sequencer" type="Sequencer" line="267"/>
                <declaration name="in" type="InputStream" line="268"/>
                <declaration name="datapusher" type="DataPusher" line="269"/>
                <method name="Info" type="constructor" line="270">
                    <params>
                        <param name="sequencer" type="Sequencer"/>
                        <param name="in" type="InputStream"/>
                        <param name="datapusher" type="DataPusher"/>
                    </params>
                </method>
                <method name="meta" type="void" line="275">
                    <params>
                        <param name="event" type="MetaMessage"/>
                    </params>
                    <scope line="276"/>
                </method>
            </class>
        </class>
    </source>