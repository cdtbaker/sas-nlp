<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.font">
        <import package="java.lang.ref.WeakReference"/>
        <import package="java.awt.FontFormatException"/>
        <import package="java.io.FileNotFoundException"/>
        <import package="java.io.IOException"/>
        <import package="java.io.RandomAccessFile"/>
        <import package="java.io.UnsupportedEncodingException"/>
        <import package="java.lang.ref.WeakReference"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.ByteOrder"/>
        <import package="java.nio.MappedByteBuffer"/>
        <import package="java.nio.BufferUnderflowException"/>
        <import package="java.nio.channels.ClosedChannelException"/>
        <import package="java.nio.channels.FileChannel"/>
        <import package="sun.java2d.Disposer"/>
        <import package="sun.java2d.DisposerRecord"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.HashMap"/>
        <import package="java.awt.Font"/>
        <class name="Type1Font" line="20">
            <extends class="FileFont"/>
            <class name="T1DisposerRecord" line="21">
                <implements interface="DisposerRecord"/>
                <declaration name="fileName" type="String" line="22"/>
                <method name="T1DisposerRecord" type="constructor" line="23">
                    <params>
                        <param name="name" type="String"/>
                    </params>
                </method>
                <method name="dispose" type="void" line="26">
                    <anonymous_class line="27">
                        <method name="run" type="Object" line="28">
                            <scope line="29"/>
                        </method>
                    </anonymous_class>
                </method>
            </class>
            <declaration name="bufferRef" type="WeakReference" line="38"/>
            <declaration name="psName" type="String" line="39"/>
            <declaration name="styleAbbreviationsMapping" type="HashMap" line="40"/>
            <declaration name="styleNameTokes" type="HashSet" line="41"/>
            <scope line="42">
                <declaration name="nm" type="String" line="45"/>
                <declaration name="abbrv" type="String" line="46"/>
                <declaration name="styleTokens" type="String" line="47"/>
                <scope line="48"/>
                <scope line="51"/>
            </scope>
            <javadoc line="55">
                Constructs a Type1 Font.                
                <param>
                    platname - Platform identifier of the font. Typically file name.                    
                </param>
                <param>
                    nativeNames - Native names - typically XLFDs on Unix.                    
                </param>
            </javadoc>
            <method name="Type1Font" type="constructor" line="60">
                <params>
                    <param name="platname" type="String"/>
                    <param name="nativeNames" type="Object"/>
                </params>
            </method>
            <javadoc line="63">
                - does basic verification of the file
                  - reads the names (full, family).
                  - determines the style of the font.                
                <throws>
                    FontFormatException - if the font can't be opened
                      or fails verification,  or there's no usable cmap                    
                </throws>
            </javadoc>
            <method name="Type1Font" type="constructor" line="70">
                <params>
                    <param name="platname" type="String"/>
                    <param name="nativeNames" type="Object"/>
                    <param name="createdCopy" type="boolean"/>
                </params>
                <scope line="74"/>
                <scope line="77">
                    <scope line="78">
                        <declaration name="ref" type="T1DisposerRecord" line="79"/>
                    </scope>
                    <scope line="83"/>
                    <scope line="86"/>
                </scope>
            </method>
            <method name="getBuffer" type="ByteBuffer" line="91">
                <declaration name="mapBuf" type="MappedByteBuffer" line="92"/>
                <scope line="93">
                    <scope line="94">
                        <anonymous_class line="95">
                            <method name="run" type="Object" line="96">
                                <scope line="97"/>
                                <scope line="100"/>
                            </method>
                        </anonymous_class>
                        <declaration name="raf" type="RandomAccessFile" line="95"/>
                        <declaration name="fc" type="FileChannel" line="106"/>
                    </scope>
                    <scope line="113"/>
                    <scope line="116"/>
                    <scope line="120"/>
                </scope>
            </method>
            <method name="close" type="void" line="126"/>
            <method name="readFile" type="void" line="128">
                <params>
                    <param name="buffer" type="ByteBuffer"/>
                </params>
                <declaration name="raf" type="RandomAccessFile" line="129"/>
                <declaration name="fc" type="FileChannel" line="130"/>
                <scope line="131">
                    <anonymous_class line="132">
                        <method name="run" type="Object" line="133">
                            <scope line="134"/>
                            <scope line="137"/>
                        </method>
                    </anonymous_class>
                    <scope line="144"/>
                </scope>
                <scope line="147"/>
                <scope line="149">
                    <scope line="150">
                        <scope line="151"/>
                    </scope>
                    <scope line="156"/>
                </scope>
                <scope line="161"/>
                <scope line="163">
                    <scope line="164">
                        <scope line="165"/>
                        <scope line="168"/>
                    </scope>
                </scope>
            </method>
            <method name="readBlock" type="ByteBuffer" line="173">
                <params>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                </params>
                <declaration name="mappedBuf" type="ByteBuffer" line="174"/>
                <scope line="175">
                    <scope line="177"/>
                </scope>
                <scope line="183"/>
            </method>
            <method name="verify" type="void" line="187">
                <declaration name="bb" type="ByteBuffer" line="188"/>
                <scope line="189"/>
                <declaration name="val" type="int" line="192"/>
                <scope line="193"/>
                <scope line="197"/>
                <scope line="202"/>
            </method>
            <method name="getFileSize" type="int" line="207">
                <scope line="208">
                    <scope line="209"/>
                    <scope line="212"/>
                </scope>
            </method>
            <method name="verifyPFA" type="void" line="217">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                </params>
                <scope line="218"/>
            </method>
            <method name="verifyPFB" type="void" line="222">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                </params>
                <declaration name="pos" type="int" line="223"/>
                <scope line="224">
                    <scope line="225">
                        <declaration name="segType" type="int" line="226"/>
                        <scope line="227">
                            <declaration name="segLen" type="int" line="229"/>
                            <scope line="231"/>
                        </scope>
                        <scope line="236"/>
                        <scope line="239"/>
                    </scope>
                    <scope line="243"/>
                    <scope line="246"/>
                </scope>
            </method>
            <declaration name="PSEOFTOKEN" type="int" line="251"/>
            <declaration name="PSNAMETOKEN" type="int" line="252"/>
            <declaration name="PSSTRINGTOKEN" type="int" line="253"/>
            <method name="initNames" type="void" line="254">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                </params>
                <declaration name="eof" type="boolean" line="255"/>
                <declaration name="fontType" type="String" line="256"/>
                <scope line="257">
                    <scope line="258">
                        <declaration name="tokenType" type="int" line="259"/>
                        <scope line="260">
                            <declaration name="pos" type="int" line="261"/>
                            <scope line="262">
                                <declaration name="s" type="String" line="263"/>
                                <scope line="264">
                                    <scope line="265"/>
                                </scope>
                                <scope line="269">
                                    <scope line="270"/>
                                </scope>
                                <scope line="274">
                                    <scope line="275"/>
                                </scope>
                                <scope line="279">
                                    <declaration name="token" type="String" line="280"/>
                                    <scope line="281"/>
                                </scope>
                            </scope>
                            <scope line="286"/>
                        </scope>
                        <scope line="290"/>
                    </scope>
                </scope>
                <scope line="295"/>
                <scope line="298"/>
                <scope line="301">
                    <scope line="303"/>
                    <declaration name="formatType" type="String" line="306"/>
                    <scope line="307"/>
                </scope>
                <scope line="312">
                    <scope line="313"/>
                    <scope line="316"/>
                    <scope line="319"/>
                </scope>
            </method>
            <method name="fullName2FamilyName" type="String" line="325">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="res" type="String" line="326"/>
                <declaration name="len" type="int" line="327"/>
                <scope line="329">
                    <scope line="332"/>
                </scope>
            </method>
            <method name="expandAbbreviation" type="String" line="339">
                <params>
                    <param name="abbr" type="String"/>
                </params>
            </method>
            <method name="isStyleToken" type="boolean" line="343">
                <params>
                    <param name="token" type="String"/>
                </params>
            </method>
            <method name="psName2FullName" type="String" line="346">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="res" type="String" line="347"/>
                <declaration name="pos" type="int" line="348"/>
                <scope line="350"/>
                <scope line="354"/>
            </method>
            <method name="psName2FamilyName" type="String" line="359">
                <params>
                    <param name="name" type="String"/>
                </params>
                <declaration name="tmp" type="String" line="360"/>
                <scope line="361"/>
            </method>
            <method name="nextCapitalLetter" type="int" line="366">
                <params>
                    <param name="s" type="String"/>
                    <param name="off" type="int"/>
                </params>
                <scope line="367"/>
            </method>
            <method name="expandName" type="String" line="372">
                <params>
                    <param name="s" type="String"/>
                    <param name="tryExpandAbbreviations" type="boolean"/>
                </params>
                <declaration name="res" type="StringBuffer" line="373"/>
                <declaration name="start" type="int" line="374"/>
                <scope line="375">
                    <scope line="377"/>
                    <scope line="380"/>
                    <scope line="383"/>
                    <scope line="386"/>
                </scope>
            </method>
            <method name="skip" type="byte" line="393">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                </params>
                <declaration name="b" type="byte" line="394"/>
                <scope line="395">
                    <scope line="396">
                        <scope line="398"/>
                    </scope>
                </scope>
                <scope line="403"/>
            </method>
            <method name="nextTokenType" type="int" line="408">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                </params>
                <scope line="409">
                    <declaration name="b" type="byte" line="410"/>
                    <scope line="411">
                        <scope line="412"/>
                        <scope line="415"/>
                        <scope line="418"/>
                        <scope line="421"/>
                    </scope>
                </scope>
                <scope line="426"/>
            </method>
            <method name="getSimpleToken" type="String" line="430">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                </params>
                <declaration name="pos1" type="int" line="432"/>
                <declaration name="pos2" type="int" line="434"/>
                <declaration name="nameBytes" type="byte[]" line="435"/>
                <scope line="438"/>
                <scope line="441"/>
            </method>
            <method name="getString" type="String" line="445">
                <params>
                    <param name="bb" type="ByteBuffer"/>
                </params>
                <declaration name="pos1" type="int" line="446"/>
                <declaration name="pos2" type="int" line="448"/>
                <declaration name="nameBytes" type="byte[]" line="449"/>
                <scope line="452"/>
                <scope line="455"/>
            </method>
            <method name="getPostscriptName" type="String" line="459"/>
            <method name="getScaler" type="FontScaler" line="462">
                <scope line="463"/>
            </method>
            <method name="getMapper" type="CharToGlyphMapper" line="468">
                <scope line="469"/>
            </method>
            <method name="getNumGlyphs" type="int" line="474">
                <scope line="475"/>
                <scope line="478"/>
            </method>
            <method name="getMissingGlyphCode" type="int" line="483">
                <scope line="484"/>
                <scope line="487"/>
            </method>
            <method name="getGlyphCode" type="int" line="492">
                <params>
                    <param name="charCode" type="char"/>
                </params>
                <scope line="493"/>
                <scope line="496"/>
            </method>
            <method name="toString" type="String" line="501"/>
        </class>
    </source>