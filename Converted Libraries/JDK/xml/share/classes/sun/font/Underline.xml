<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.font">
        <import package="java.awt.BasicStroke"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.Shape"/>
        <import package="java.awt.Stroke"/>
        <import package="java.awt.geom.GeneralPath"/>
        <import package="java.awt.geom.Line2D"/>
        <import package="java.awt.font.TextAttribute"/>
        <import package="java.util.concurrent.ConcurrentHashMap"/>
        <class name="Underline" line="44">
            <comment line="80">
                Implementation of underline for standard and Input Method underlines.                
            </comment>
            <comment line="81">
                These classes are private.                
            </comment>
            <comment line="83">
                IM Underlines ignore thickness param, and instead use                
            </comment>
            <comment line="84">
                DEFAULT_THICKNESS                
            </comment>
            <comment line="87">
                StandardUnderline&apos;s constructor takes a boolean param indicating                
            </comment>
            <comment line="88">
                whether to override the default thickness.  These values clarify                
            </comment>
            <comment line="89">
                the semantics of the parameter.                
            </comment>
            <comment line="93">
                Implementation of standard underline and all input method underlines                
            </comment>
            <comment line="94">
                except UNDERLINE_LOW_GRAY.                
            </comment>
            <comment line="197">
                Implementation of UNDERLINE_LOW_GRAY.                
            </comment>
            <comment line="257">
                Keep a map of underlines, one for each type                
            </comment>
            <comment line="258">
                of underline.  The Underline objects are Flyweights                
            </comment>
            <comment line="259">
                (shared across multiple clients), so they should be immutable.                
            </comment>
            <comment line="260">
                If this implementation changes then clone underline                
            </comment>
            <comment line="261">
                instances in getUnderline before returning them.                
            </comment>
            <javadoc line="44">
                This class provides drawing and bounds-measurement of
                  underlines.  Additionally, it has a factory method for
                  obtaining underlines from values of underline attributes.                
            </javadoc>
            <method name="drawUnderline" type="void" line="52"/>
            <javadoc line="52">
                Draws the underline into g2d.  The thickness should be obtained
                  from a LineMetrics object.  Note that some underlines ignore the
                  thickness parameter.
                  The underline is drawn from (x1, y) to (x2, y).                
            </javadoc>
            <method name="getLowerDrawLimit" type="float" line="64"/>
            <javadoc line="64">
                Returns the bottom of the bounding rectangle for this underline.                
            </javadoc>
            <method name="getUnderlineShape" type="Shape" line="69"/>
            <javadoc line="69">
                Returns a Shape representing the underline.  The thickness should be obtained
                  from a LineMetrics object.  Note that some underlines ignore the
                  thickness parameter.                
            </javadoc>
            <declaration name="DEFAULT_THICKNESS" type="float" line="84"/>
            <declaration name="USE_THICKNESS" type="boolean" line="89"/>
            <declaration name="IGNORE_THICKNESS" type="boolean" line="90"/>
            <class name="StandardUnderline" line="94">
                <extends class="Underline"/>
                <comment line="97">
                    the amount by which to move the underline                    
                </comment>
                <comment line="100">
                    the actual line thickness is this value times                    
                </comment>
                <comment line="101">
                    the requested thickness                    
                </comment>
                <comment line="104">
                    if non-null, underline is drawn with a BasicStroke                    
                </comment>
                <comment line="105">
                    with this dash pattern                    
                </comment>
                <comment line="108">
                    if false, all underlines are DEFAULT_THICKNESS thick                    
                </comment>
                <comment line="109">
                    if true, use thickness param                    
                </comment>
                <comment line="112">
                    cached BasicStroke                    
                </comment>
                <declaration name="shift" type="float" line="97"/>
                <declaration name="thicknessMultiplier" type="float" line="101"/>
                <declaration name="dashPattern" type="float[]" line="105"/>
                <declaration name="useThickness" type="boolean" line="109"/>
                <declaration name="cachedStroke" type="BasicStroke" line="112"/>
                <method name="StandardUnderline" type="constructor" line="117">
                    <params>
                        <param name="shift" type="float"/>
                        <param name="thicknessMultiplier" type="float"/>
                        <param name="dashPattern" type="float[]"/>
                        <param name="useThickness" type="boolean"/>
                    </params>
                </method>
                <method name="createStroke" type="BasicStroke" line="126">
                    <params>
                        <param name="lineThickness" type="float"/>
                    </params>
                    <scope line="128"/>
                    <scope line="133"/>
                </method>
                <method name="getLineThickness" type="float" line="143">
                    <params>
                        <param name="thickness" type="float"/>
                    </params>
                    <scope line="145"/>
                    <scope line="148"/>
                </method>
                <method name="getStroke" type="Stroke" line="153">
                    <params>
                        <param name="thickness" type="float"/>
                    </params>
                    <declaration name="lineThickness" type="float" line="155"/>
                    <declaration name="stroke" type="BasicStroke" line="156"/>
                    <scope line="158"/>
                </method>
                <method name="drawUnderline" type="void" line="171">
                    <params>
                        <param name="g2d" type="Graphics2D"/>
                        <param name="thickness" type="float"/>
                        <param name="x1" type="float"/>
                        <param name="x2" type="float"/>
                        <param name="y" type="float"/>
                    </params>
                    <declaration name="saveStroke" type="Stroke" line="174"/>
                </method>
                <method name="getLowerDrawLimit" type="float" line="180">
                    <params>
                        <param name="thickness" type="float"/>
                    </params>
                </method>
                <method name="getUnderlineShape" type="Shape" line="188">
                    <params>
                        <param name="thickness" type="float"/>
                        <param name="x1" type="float"/>
                        <param name="x2" type="float"/>
                        <param name="y" type="float"/>
                    </params>
                    <declaration name="ulStroke" type="Stroke" line="190"/>
                    <declaration name="line" type="Line2D" line="191"/>
                </method>
            </class>
            <class name="IMGrayUnderline" line="197">
                <extends class="Underline"/>
                <comment line="97">
                    the amount by which to move the underline                    
                </comment>
                <comment line="100">
                    the actual line thickness is this value times                    
                </comment>
                <comment line="101">
                    the requested thickness                    
                </comment>
                <comment line="104">
                    if non-null, underline is drawn with a BasicStroke                    
                </comment>
                <comment line="105">
                    with this dash pattern                    
                </comment>
                <comment line="108">
                    if false, all underlines are DEFAULT_THICKNESS thick                    
                </comment>
                <comment line="109">
                    if true, use thickness param                    
                </comment>
                <comment line="112">
                    cached BasicStroke                    
                </comment>
                <declaration name="stroke" type="BasicStroke" line="199"/>
                <method name="IMGrayUnderline" type="constructor" line="201"/>
                <method name="drawUnderline" type="void" line="214">
                    <params>
                        <param name="g2d" type="Graphics2D"/>
                        <param name="thickness" type="float"/>
                        <param name="x1" type="float"/>
                        <param name="x2" type="float"/>
                        <param name="y" type="float"/>
                    </params>
                    <declaration name="saveStroke" type="Stroke" line="216"/>
                    <declaration name="drawLine" type="Line2D.Float" line="219"/>
                </method>
                <method name="getLowerDrawLimit" type="float" line="231">
                    <params>
                        <param name="thickness" type="float"/>
                    </params>
                </method>
                <method name="getUnderlineShape" type="Shape" line="239">
                    <params>
                        <param name="thickness" type="float"/>
                        <param name="x1" type="float"/>
                        <param name="x2" type="float"/>
                        <param name="y" type="float"/>
                    </params>
                    <declaration name="gp" type="GeneralPath" line="241"/>
                    <declaration name="line" type="Line2D.Float" line="243"/>
                </method>
            </class>
            <declaration name="UNDERLINES" type="ConcurrentHashMap&lt;Object,Underline&gt;" line="261"/>
            <declaration name="UNDERLINE_LIST" type="Underline[]" line="263"/>
            <scope line="265">
                <declaration name="uls" type="Underline[]" line="266"/>
            </scope>
            <javadoc line="289">
                Return the Underline for the given value of
                  TextAttribute.INPUT_METHOD_UNDERLINE or
                  TextAttribute.UNDERLINE.
                  If value is not an input method underline value or
                  TextAttribute.UNDERLINE_ON, null is returned.                
            </javadoc>
            <method name="getUnderline" type="Underline" line="296">
                <params>
                    <param name="value" type="Object"/>
                </params>
                <scope line="298"/>
            </method>
            <method name="getUnderline" type="Underline" line="305">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
        </class>
    </source>