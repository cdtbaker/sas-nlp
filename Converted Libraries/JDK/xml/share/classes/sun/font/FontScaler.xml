<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.font">
        <import package="java.awt.geom.GeneralPath"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <import package="java.lang.ref.WeakReference"/>
        <import package="java.lang.reflect.Constructor"/>
        <import package="sun.java2d.Disposer"/>
        <import package="sun.java2d.DisposerRecord"/>
        <class name="FontScaler" line="82">
            <comment line="88">
                Find preferred font scaler                
            </comment>
            <comment line="89">
                                
            </comment>
            <comment line="90">
                NB: we can allow property based preferences                
            </comment>
            <comment line="91">
                (theoretically logic can be font type specific)                
            </comment>
            <comment line="115">
                This is the only place to instantiate new FontScaler.
                 Therefore this is very convinient place to register
                 scaler with Disposer as well as trigger deregistring bad font
                 in case when scaler reports this.                
            </comment>
            <comment line="143">
                At the moment it is harmless to create 2 null scalers so, technically,
                 syncronized keyword is not needed.
                
                 But it is safer to keep it to avoid subtle problems if we will be adding
                 checks like whether scaler is null scaler.                
            </comment>
            <comment line="158">
                used by decendants                
            </comment>
            <comment line="159">
                that have native state                
            </comment>
            <comment line="172">
                Returns pointer to native GlyphInfo object.
                  Callee is responsible for freeing this memory.
                
                  Note:
                   currently this method has to return not 0L but pointer to valid
                   GlyphInfo object. Because Strike and drawing releated logic does
                   expect that.
                   In the future we may want to rework this to allow 0L here.                
            </comment>
            <comment line="197">
                Used by Java2D disposer to ensure native resources are released.
                Note: this method does not release any of created                
            </comment>
            <comment line="202">
                At the moment these 3 methods are needed for Type1 fonts only.
                 For Truetype fonts we extract required info outside of scaler
                 on java layer.                
            </comment>
            <comment line="210">
                This method returns table cache used by native layout engine.
                 This cache is essentially just small collection of
                 pointers to various truetype tables. See definition of TTLayoutTableCache
                 in the fontscalerdefs.h for more details.
                
                 Note that tables themselves have same format as defined in the truetype
                 specification, i.e. font scaler do not need to perform any preprocessing.
                
                 Probably it is better to have API to request pointers to each table
                 separately instead of requesting pointer to some native structure.
                 (then there is not need to share its definition by different
                 implementations of scaler).
                 However, this means multiple JNI calls and potential impact on performance.
                
                 Note: return value 0 is legal.
                   This means tables are not available (e.g. type1 font).                
            </comment>
            <comment line="229">
                                
            </comment>
            <comment line="236">
                Returns pointer to native structure describing rasterization attributes.
                Format of this structure is scaler-specific.
                
                Callee is responsible for freeing scaler context (using free()).
                
                Note:
                Context is tightly associated with strike and it is actually
                freed when corresponding strike is being released.                
            </comment>
            <comment line="250">
                Marks context as invalid because native scaler is invalid.
                Notes:
                - pointer itself is still valid and has to be released
                - if pointer to native scaler was cached it
                should not be neither disposed nor used.                
            </comment>
            <implements interface="DisposerRecord"/>
            <declaration name="nullScaler" type="FontScaler" line="84"/>
            <declaration name="scalerConstructor" type="Constructor&lt;FontScaler&gt;" line="85"/>
            <scope line="91">
                <declaration name="scalerClass" type="Class" line="92"/>
                <declaration name="arglst" type="Class" line="93"/>
                <scope line="96">
                    <scope line="97"/>
                    <scope line="99"/>
                </scope>
                <scope line="102"/>
                <scope line="107"/>
                <scope line="109"/>
            </scope>
            <method name="getScaler" type="FontScaler" line="122">
                <params>
                    <param name="font" type="Font2D"/>
                    <param name="indexInCollection" type="int"/>
                    <param name="supportsCJK" type="boolean"/>
                    <param name="filesize" type="int"/>
                </params>
                <comment line="133">
                    if we can not instantiate scaler assume bad font                    
                </comment>
                <comment line="134">
                    NB: technically it could be also because of internal scaler                    
                </comment>
                <comment line="135">
                    error but here we are assuming scaler is ok.                    
                </comment>
                <declaration name="scaler" type="FontScaler" line="123"/>
                <scope line="125">
                    <declaration name="args" type="Object" line="126"/>
                </scope>
                <scope line="130">
                    <declaration name="fm" type="FontManager" line="136"/>
                </scope>
            </method>
            <method name="getNullScaler" type="FontScaler" line="149">
                <scope line="150"/>
            </method>
            <declaration name="font" type="WeakReference&lt;Font2D&gt;" line="156"/>
            <declaration name="nativeScaler" type="long" line="157"/>
            <declaration name="disposed" type="boolean" line="159"/>
            <method name="getFontMetrics" type="StrikeMetrics" line="161"/>
            <method name="getGlyphAdvance" type="float" line="164"/>
            <method name="getGlyphMetrics" type="void" line="167"/>
            <method name="getGlyphImage" type="long" line="181"/>
            <method name="getGlyphOutlineBounds" type="Rectangle2D.Float" line="184"/>
            <method name="getGlyphOutline" type="GeneralPath" line="188"/>
            <method name="getGlyphVectorOutline" type="GeneralPath" line="192"/>
            <method name="dispose" type="void" line="199"/>
            <method name="getNumGlyphs" type="int" line="205"/>
            <method name="getMissingGlyphCode" type="int" line="206"/>
            <method name="getGlyphCode" type="int" line="207"/>
            <method name="getLayoutTableCache" type="long" line="226"/>
            <method name="getGlyphPoint" type="Point2D.Float" line="229"/>
            <method name="getUnitsPerEm" type="long" line="233"/>
            <method name="createScalerContext" type="long" line="244"/>
            <method name="invalidateScalerContext" type="void" line="255"/>
        </class>
    </source>