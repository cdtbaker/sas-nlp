<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.font">
        <import package="java.awt.Font"/>
        <import package="java.awt.font.FontRenderContext"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.lang.ref.Reference"/>
        <import package="java.lang.ref.SoftReference"/>
        <import package="java.util.concurrent.ConcurrentHashMap"/>
        <import package="java.util.Locale"/>
        <class name="Font2D" line="9">
            <declaration name="FONT_CONFIG_RANK" type="int" line="10"/>
            <declaration name="JRE_RANK" type="int" line="11"/>
            <declaration name="TTF_RANK" type="int" line="12"/>
            <declaration name="TYPE1_RANK" type="int" line="13"/>
            <declaration name="NATIVE_RANK" type="int" line="14"/>
            <declaration name="UNKNOWN_RANK" type="int" line="15"/>
            <declaration name="DEFAULT_RANK" type="int" line="16"/>
            <declaration name="boldNames" type="String[]" line="17"/>
            <declaration name="italicNames" type="String[]" line="18"/>
            <declaration name="boldItalicNames" type="String[]" line="19"/>
            <declaration name="DEFAULT_FRC" type="FontRenderContext" line="20"/>
            <declaration name="handle" type="Font2DHandle" line="21"/>
            <declaration name="familyName" type="String" line="22"/>
            <declaration name="fullName" type="String" line="23"/>
            <declaration name="style" type="int" line="24"/>
            <declaration name="family" type="FontFamily" line="25"/>
            <declaration name="fontRank" type="int" line="26"/>
            <declaration name="mapper" type="CharToGlyphMapper" line="27"/>
            <declaration name="strikeCache" type="ConcurrentHashMap&amp;lt;FontStrikeDesc,Reference&amp;gt;" line="28"/>
            <declaration name="lastFontStrike" type="Reference" line="29"/>
            <method name="getStyle" type="int" line="30"/>
            <method name="setStyle" type="void" line="33">
                <declaration name="fName" type="String" line="34"/>
                <scope line="35">
                    <scope line="36"/>
                </scope>
                <scope line="41">
                    <scope line="42"/>
                </scope>
                <scope line="47">
                    <scope line="48"/>
                </scope>
            </method>
            <method name="getRank" type="int" line="54"/>
            <method name="setRank" type="void" line="57">
                <params>
                    <param name="rank" type="int"/>
                </params>
            </method>
            <method name="getMapper" type="CharToGlyphMapper" line="60"/>
            <method name="getValidatedGlyphCode" type="int" line="61">
                <params>
                    <param name="glyphCode" type="int"/>
                </params>
                <scope line="62"/>
            </method>
            <method name="createStrike" type="FontStrike" line="67"/>
            <method name="getStrike" type="FontStrike" line="68">
                <params>
                    <param name="font" type="Font"/>
                </params>
                <declaration name="strike" type="FontStrike" line="69"/>
                <scope line="70"/>
                <scope line="73"/>
            </method>
            <method name="getStrike" type="FontStrike" line="77">
                <params>
                    <param name="font" type="Font"/>
                    <param name="devTx" type="AffineTransform"/>
                    <param name="aa" type="int"/>
                    <param name="fm" type="int"/>
                </params>
                <declaration name="ptSize" type="double" line="78"/>
                <declaration name="glyphTx" type="AffineTransform" line="79"/>
                <scope line="81"/>
                <scope line="84"/>
                <declaration name="desc" type="FontStrikeDesc" line="87"/>
            </method>
            <method name="getStrike" type="FontStrike" line="90">
                <params>
                    <param name="font" type="Font"/>
                    <param name="devTx" type="AffineTransform"/>
                    <param name="glyphTx" type="AffineTransform"/>
                    <param name="aa" type="int"/>
                    <param name="fm" type="int"/>
                </params>
                <declaration name="desc" type="FontStrikeDesc" line="91"/>
            </method>
            <method name="getStrike" type="FontStrike" line="94">
                <params>
                    <param name="font" type="Font"/>
                    <param name="frc" type="FontRenderContext"/>
                </params>
                <declaration name="at" type="AffineTransform" line="95"/>
                <declaration name="ptSize" type="double" line="96"/>
                <scope line="98">
                    <scope line="100"/>
                </scope>
                <declaration name="aa" type="int" line="104"/>
                <declaration name="fm" type="int" line="105"/>
                <declaration name="desc" type="FontStrikeDesc" line="106"/>
            </method>
            <method name="getStrike" type="FontStrike" line="109">
                <params>
                    <param name="desc" type="FontStrikeDesc"/>
                </params>
            </method>
            <method name="getStrike" type="FontStrike" line="112">
                <params>
                    <param name="desc" type="FontStrikeDesc"/>
                    <param name="copy" type="boolean"/>
                </params>
                <declaration name="strike" type="FontStrike" line="113"/>
                <scope line="114"/>
                <scope line="117">
                    <declaration name="strikeRef" type="Reference" line="118"/>
                    <scope line="119">
                        <scope line="121"/>
                    </scope>
                    <scope line="127"/>
                    <declaration name="txType" type="int" line="131"/>
                    <scope line="132"/>
                    <scope line="135"/>
                </scope>
            </method>
            <method name="removeFromCache" type="void" line="144">
                <params>
                    <param name="desc" type="FontStrikeDesc"/>
                </params>
                <declaration name="ref" type="Reference" line="145"/>
                <scope line="146">
                    <declaration name="o" type="Object" line="147"/>
                    <scope line="148"/>
                </scope>
            </method>
            <javadoc line="153">
                The length of the metrics array must be &gt;= 8.  This method will
                  store the following elements in that array before returning:
                  metrics[0]: ascent
                  metrics[1]: descent
                  metrics[2]: leading
                  metrics[3]: max advance
                  metrics[4]: strikethrough offset
                  metrics[5]: strikethrough thickness
                  metrics[6]: underline offset
                  metrics[7]: underline thickness                
            </javadoc>
            <method name="getFontMetrics" type="void" line="165">
                <params>
                    <param name="font" type="Font"/>
                    <param name="at" type="AffineTransform"/>
                    <param name="aaHint" type="Object"/>
                    <param name="fmHint" type="Object"/>
                    <param name="metrics" type="float"/>
                </params>
                <declaration name="aa" type="int" line="166"/>
                <declaration name="fm" type="int" line="167"/>
                <declaration name="strike" type="FontStrike" line="168"/>
                <declaration name="strikeMetrics" type="StrikeMetrics" line="169"/>
            </method>
            <javadoc line="176">
                The length of the metrics array must be &gt;= offset+4, and offset must be
                  &gt;= 0.  Typically offset is 4.  This method will
                  store the following elements in that array before returning:
                  metrics[off+0]: strikethrough offset
                  metrics[off+1]: strikethrough thickness
                  metrics[off+2]: underline offset
                  metrics[off+3]: underline thickness
                  Note that this implementation simply returns default values;
                  subclasses can override this method to provide more accurate values.                
            </javadoc>
            <method name="getStyleMetrics" type="void" line="187">
                <params>
                    <param name="pointSize" type="float"/>
                    <param name="metrics" type="float[]"/>
                    <param name="offset" type="int"/>
                </params>
            </method>
            <javadoc line="193">
                The length of the metrics array must be &gt;= 4.  This method will
                  store the following elements in that array before returning:
                  metrics[0]: ascent
                  metrics[1]: descent
                  metrics[2]: leading
                  metrics[3]: max advance                
            </javadoc>
            <method name="getFontMetrics" type="void" line="201">
                <params>
                    <param name="font" type="Font"/>
                    <param name="frc" type="FontRenderContext"/>
                    <param name="metrics" type="float"/>
                </params>
                <declaration name="strikeMetrics" type="StrikeMetrics" line="202"/>
            </method>
            <method name="getTableBytes" type="byte[]" line="208">
                <params>
                    <param name="tag" type="int"/>
                </params>
            </method>
            <method name="getUnitsPerEm" type="long" line="211"/>
            <method name="supportsEncoding" type="boolean" line="214">
                <params>
                    <param name="encoding" type="String"/>
                </params>
            </method>
            <method name="canDoStyle" type="boolean" line="217">
                <params>
                    <param name="style" type="int"/>
                </params>
            </method>
            <method name="useAAForPtSize" type="boolean" line="220">
                <params>
                    <param name="ptsize" type="int"/>
                </params>
            </method>
            <method name="hasSupplementaryChars" type="boolean" line="223"/>
            <method name="getPostscriptName" type="String" line="226"/>
            <method name="getFontName" type="String" line="229">
                <params>
                    <param name="l" type="Locale"/>
                </params>
            </method>
            <method name="getFamilyName" type="String" line="232">
                <params>
                    <param name="l" type="Locale"/>
                </params>
            </method>
            <method name="getNumGlyphs" type="int" line="235"/>
            <method name="charToGlyph" type="int" line="238">
                <params>
                    <param name="wchar" type="int"/>
                </params>
            </method>
            <method name="getMissingGlyphCode" type="int" line="241"/>
            <method name="canDisplay" type="boolean" line="244">
                <params>
                    <param name="c" type="char"/>
                </params>
            </method>
            <method name="canDisplay" type="boolean" line="247">
                <params>
                    <param name="cp" type="int"/>
                </params>
            </method>
            <method name="getBaselineFor" type="byte" line="250">
                <params>
                    <param name="c" type="char"/>
                </params>
            </method>
            <method name="getItalicAngle" type="float" line="253">
                <params>
                    <param name="font" type="Font"/>
                    <param name="at" type="AffineTransform"/>
                    <param name="aaHint" type="Object"/>
                    <param name="fmHint" type="Object"/>
                </params>
                <declaration name="aa" type="int" line="254"/>
                <declaration name="fm" type="int" line="255"/>
                <declaration name="strike" type="FontStrike" line="256"/>
                <declaration name="metrics" type="StrikeMetrics" line="257"/>
                <scope line="258"/>
                <scope line="261"/>
            </method>
        </class>
    </source>