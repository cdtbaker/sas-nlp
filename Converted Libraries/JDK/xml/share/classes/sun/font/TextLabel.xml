<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.font">
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.Shape"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <class name="TextLabel" line="37">
            <javadoc line="37">
                A label.
                  Visual bounds is a rect that encompasses the entire rendered area.
                  Logical bounds is a rect that defines how to position this next
                  to other objects.
                  Align bounds is a rect that defines how to align this to margins.
                  it generally allows some overhang that logical bounds would prevent.                
            </javadoc>
            <method name="getVisualBounds" type="Rectangle2D" line="47"/>
            <javadoc line="47">
                Return a rectangle that surrounds the text outline when this label is rendered at x, y.                
            </javadoc>
            <method name="getLogicalBounds" type="Rectangle2D" line="52"/>
            <javadoc line="52">
                Return a rectangle that corresponds to the logical bounds of the text
                  when this label is rendered at x, y.
                  This rectangle is used when positioning text next to other text.                
            </javadoc>
            <method name="getAlignBounds" type="Rectangle2D" line="59"/>
            <javadoc line="59">
                Return a rectangle that corresponds to the alignment bounds of the text
                  when this label is rendered at x, y. This rectangle is used when positioning text next
                  to a margin.  It differs from the logical bounds in that it does not include leading or
                  trailing whitespace.                
            </javadoc>
            <method name="getItalicBounds" type="Rectangle2D" line="67"/>
            <javadoc line="67">
                Return a rectangle that corresponds to the logical bounds of the text, adjusted
                  to angle the leading and trailing edges by the italic angle.                
            </javadoc>
            <method name="getOutline" type="Shape" line="73"/>
            <javadoc line="73">
                Return an outline of the characters in the label when rendered at x, y.                
            </javadoc>
            <method name="draw" type="void" line="78"/>
            <javadoc line="78">
                Render the label at x, y in the graphics.                
            </javadoc>
            <javadoc line="83">
                A convenience method that returns the visual bounds when rendered at 0, 0.                
            </javadoc>
            <method name="getVisualBounds" type="Rectangle2D" line="86"/>
            <javadoc line="90">
                A convenience method that returns the logical bounds when rendered at 0, 0.                
            </javadoc>
            <method name="getLogicalBounds" type="Rectangle2D" line="93"/>
            <javadoc line="97">
                A convenience method that returns the align bounds when rendered at 0, 0.                
            </javadoc>
            <method name="getAlignBounds" type="Rectangle2D" line="100"/>
            <javadoc line="104">
                A convenience method that returns the italic bounds when rendered at 0, 0.                
            </javadoc>
            <method name="getItalicBounds" type="Rectangle2D" line="107"/>
            <javadoc line="111">
                A convenience method that returns the outline when rendered at 0, 0.                
            </javadoc>
            <method name="getOutline" type="Shape" line="114"/>
            <javadoc line="118">
                A convenience method that renders the label at 0, 0.                
            </javadoc>
            <method name="draw" type="void" line="121">
                <params>
                    <param name="g" type="Graphics2D"/>
                </params>
            </method>
        </class>
    </source>