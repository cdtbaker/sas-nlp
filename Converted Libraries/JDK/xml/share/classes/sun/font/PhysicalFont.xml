<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.font">
        <import package="java.awt.FontFormatException"/>
        <import package="java.awt.geom.GeneralPath"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <import package="java.io.FileInputStream"/>
        <import package="java.lang.ref.WeakReference"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.nio.channels.FileChannel"/>
        <class name="PhysicalFont" line="37">
            <extends class="Font2D"/>
            <comment line="41">
                nativeNames is a String or a (possibly null) String[].                
            </comment>
            <comment line="71">
                The following methods are delegated to the font by the strike
                 for physical fonts as the PhysicalFont holds a shared reference
                 to the native resource, so all invocations need to be directed
                 through a synchronization point. Implementations of these methods
                 will typically be &quot;synchronized native&quot;                
            </comment>
            <comment line="83">
                These 3 metrics methods should be implemented to return
                 values in user space.                
            </comment>
            <comment line="95">
                These 3 outline methods should be implemented to return
                 values in device space. Callers need to be aware of this
                 as typically Java client code will need to have them in user space.                
            </comment>
            <declaration name="platName" type="String" line="39"/>
            <declaration name="nativeNames" type="Object" line="41"/>
            <method name="equals" type="boolean" line="43">
                <params>
                    <param name="o" type="Object"/>
                </params>
            </method>
            <method name="hashCode" type="int" line="48"/>
            <javadoc line="52">
                Opens the file (temporarily) and does basic verification.
                  Initializes the CMAP                
                <throws>
                    FontFormatException - if the font can't be opened
                      or fails verification,  or there's no usable cmap                    
                </throws>
            </javadoc>
            <method name="PhysicalFont" type="constructor" line="59">
                <params>
                    <param name="platname" type="String"/>
                    <param name="nativeNames" type="Object"/>
                </params>
            </method>
            <method name="PhysicalFont" type="constructor" line="66"/>
            <method name="getGlyphPoint" type="Point2D.Float" line="78">
                <params>
                    <param name="pScalerContext" type="long"/>
                    <param name="glyphCode" type="int"/>
                    <param name="ptNumber" type="int"/>
                </params>
            </method>
            <method name="getFontMetrics" type="StrikeMetrics" line="85"/>
            <method name="getGlyphAdvance" type="float" line="87"/>
            <method name="getGlyphMetrics" type="void" line="89"/>
            <method name="getGlyphImage" type="long" line="92"/>
            <method name="getGlyphOutlineBounds" type="Rectangle2D.Float" line="98"/>
            <method name="getGlyphOutline" type="GeneralPath" line="101"/>
            <method name="getGlyphVectorOutline" type="GeneralPath" line="104"/>
        </class>
    </source>