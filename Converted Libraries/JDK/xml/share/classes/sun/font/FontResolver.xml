<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.font">
        <import package="java.awt.Font"/>
        <import package="java.awt.GraphicsEnvironment"/>
        <import package="java.awt.font.TextAttribute"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Map"/>
        <import package="sun.text.CodePointIterator"/>
        <class name="FontResolver" line="8">
            <javadoc line="8">
                This class maps an individual character to a Font family which can
                  display it.  The character-to-Font mapping does not depend on the
                  character&apos;s context, so a particular character will be mapped to the
                  same font family each time.
                  &lt;p&gt;
                  Typically, clients will call getIndexFor(char) for each character
                  in a style run.  When getIndexFor() returns a different value from
                  ones seen previously, the characters up to that point will be assigned
                  a font obtained from getFont().                
            </javadoc>
            <declaration name="allFonts" type="Font[]" line="20"/>
            <declaration name="supplementaryFonts" type="Font[]" line="21"/>
            <declaration name="supplementaryIndices" type="int[]" line="22"/>
            <declaration name="DEFAULT_SIZE" type="int" line="23"/>
            <declaration name="defaultFont" type="Font" line="24"/>
            <declaration name="SHIFT" type="int" line="25"/>
            <declaration name="BLOCKSIZE" type="int" line="26"/>
            <declaration name="MASK" type="int" line="27"/>
            <declaration name="blocks" type="int[][]" line="28"/>
            <method name="FontResolver" type="constructor" line="29"/>
            <method name="getAllFonts" type="Font[]" line="31">
                <scope line="32">
                    <scope line="34"/>
                </scope>
            </method>
            <javadoc line="40">
                Search fonts in order, and return &quot;1&quot; to indicate its in the default
                  font, (or not found at all),  or the index of the first font
                  which can display the given character, plus 2, if it is not
                  in the default font.                
            </javadoc>
            <method name="getIndexFor" type="int" line="46">
                <params>
                    <param name="c" type="char"/>
                </params>
                <scope line="47"/>
                <scope line="50">
                    <scope line="51"/>
                </scope>
            </method>
            <method name="getAllSCFonts" type="Font[]" line="57">
                <scope line="58">
                    <declaration name="fonts" type="ArrayList&lt;Font&gt;" line="59"/>
                    <declaration name="indices" type="ArrayList&lt;Integer&gt;" line="60"/>
                    <scope line="61">
                        <declaration name="font" type="Font" line="62"/>
                        <declaration name="font2D" type="Font2D" line="63"/>
                        <scope line="64"/>
                    </scope>
                    <declaration name="len" type="int" line="69"/>
                    <scope line="71"/>
                </scope>
            </method>
            <method name="getIndexFor" type="int" line="78">
                <params>
                    <param name="cp" type="int"/>
                </params>
                <scope line="79"/>
                <scope line="82">
                    <scope line="83"/>
                </scope>
            </method>
            <javadoc line="89">
                Return an index for the given character.  The index identifies a
                  font family to getFont(), and has no other inherent meaning.                
                <param>
                    c the character to map                    
                </param>
                <return>
                    a value for consumption by getFont()                    
                </return>
                <see>
                    #getFont                    
                </see>
            </javadoc>
            <method name="getFontIndex" type="int" line="96">
                <params>
                    <param name="c" type="char"/>
                </params>
                <declaration name="blockIndex" type="int" line="97"/>
                <declaration name="block" type="int[]" line="98"/>
                <scope line="99"/>
                <declaration name="index" type="int" line="103"/>
                <scope line="104"/>
            </method>
            <method name="getFontIndex" type="int" line="109">
                <params>
                    <param name="cp" type="int"/>
                </params>
                <scope line="110"/>
            </method>
            <javadoc line="115">
                Determines the font index for the code point at the current position in the
                  iterator, then advances the iterator to the first code point that has
                  a different index or until the iterator is DONE, and returns the font index.                
                <param>
                    iter a code point iterator, this will be advanced past any code
                      points that have the same font index                    
                </param>
                <return>
                    the font index for the initial code point found, or 1 if the iterator
                      was empty.                    
                </return>
            </javadoc>
            <method name="nextFontRunIndex" type="int" line="124">
                <params>
                    <param name="iter" type="CodePointIterator"/>
                </params>
                <declaration name="cp" type="int" line="125"/>
                <declaration name="fontIndex" type="int" line="126"/>
                <scope line="127">
                    <scope line="129">
                        <scope line="130"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="138">
                Return a Font from a given font index with properties
                  from attributes.  The font index, which should have been produced
                  by getFontIndex(), determines a font family.  The size and style
                  of the Font reflect the properties in attributes.  Any Font or
                  font family specifications in attributes are ignored, on the
                  assumption that clients have already handled them.                
                <param>
                    index an index from getFontIndex() which determines the
                      font family                    
                </param>
                <param>
                    attributes a Map from which the size and style of the Font
                      are determined.  The default size is 12 and the default style
                      is Font.PLAIN                    
                </param>
                <see>
                    #getFontIndex                    
                </see>
            </javadoc>
            <method name="getFont" type="Font" line="152">
                <params>
                    <param name="index" type="int"/>
                    <param name="attributes" type="Map"/>
                </params>
                <declaration name="font" type="Font" line="153"/>
                <scope line="154"/>
            </method>
            <declaration name="INSTANCE" type="FontResolver" line="159"/>
            <javadoc line="160">
                Return a shared instance of FontResolver.                
            </javadoc>
            <method name="getInstance" type="FontResolver" line="163">
                <scope line="164"/>
            </method>
        </class>
    </source>