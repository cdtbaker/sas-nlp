<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.font">
        <import package="java.util.Map"/>
        <import package="java.awt.BasicStroke"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.Paint"/>
        <import package="java.awt.RenderingHints"/>
        <import package="java.awt.Shape"/>
        <import package="java.awt.Stroke"/>
        <import package="java.awt.font.TextAttribute"/>
        <import package="java.awt.geom.Area"/>
        <import package="java.awt.geom.Line2D"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <import package="java.awt.geom.GeneralPath"/>
        <import package="sun.font.AttributeValues"/>
        <import package="sun.font.EAttribute"/>
        <class name="Decoration" line="17">
            <javadoc line="17">
                This class handles underlining, strikethrough, and foreground and
                  background styles on text.  Clients simply acquire instances
                  of this class and hand them off to ExtendedTextLabels or GraphicComponents.                
            </javadoc>
            <interface name="Label">
                <javadoc line="23">
                    This interface is implemented by clients that use Decoration.
                      Unfortunately, interface methods have to public;  ideally these
                      would be package-private.                    
                </javadoc>
                <method name="getCoreMetrics" type="CoreMetrics" line="29"/>
                <method name="getLogicalBounds" type="Rectangle2D" line="30"/>
                <method name="handleDraw" type="void" line="31"/>
                <method name="handleGetCharVisualBounds" type="Rectangle2D" line="32"/>
                <method name="handleGetVisualBounds" type="Rectangle2D" line="33"/>
                <method name="handleGetOutline" type="Shape" line="34"/>
            </interface>
            <method name="Decoration" type="constructor" line="36"/>
            <javadoc line="38">
                Return a Decoration which does nothing.                
            </javadoc>
            <method name="getPlainDecoration" type="Decoration" line="41"/>
            <declaration name="VALUES_MASK" type="int" line="44"/>
            <method name="getDecoration" type="Decoration" line="45">
                <params>
                    <param name="values" type="AttributeValues"/>
                </params>
                <scope line="46"/>
            </method>
            <javadoc line="52">
                Return a Decoration appropriate for the the given Map.                
                <param>
                    attributes the Map used to determine the Decoration                    
                </param>
            </javadoc>
            <method name="getDecoration" type="Decoration" line="56">
                <params>
                    <param name="attributes" type="Map"/>
                </params>
                <scope line="57"/>
            </method>
            <method name="drawTextAndDecorations" type="void" line="62">
                <params>
                    <param name="label" type="Label"/>
                    <param name="g2d" type="Graphics2D"/>
                    <param name="x" type="float"/>
                    <param name="y" type="float"/>
                </params>
            </method>
            <method name="getVisualBounds" type="Rectangle2D" line="65">
                <params>
                    <param name="label" type="Label"/>
                </params>
            </method>
            <method name="getCharVisualBounds" type="Rectangle2D" line="68">
                <params>
                    <param name="label" type="Label"/>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="getOutline" type="Shape" line="71">
                <params>
                    <param name="label" type="Label"/>
                    <param name="x" type="float"/>
                    <param name="y" type="float"/>
                </params>
            </method>
            <declaration name="PLAIN" type="Decoration" line="74"/>
            <class name="DecorationImpl" line="75">
                <extends class="Decoration"/>
                <declaration name="fgPaint" type="Paint" line="76"/>
                <declaration name="bgPaint" type="Paint" line="77"/>
                <declaration name="swapColors" type="boolean" line="78"/>
                <declaration name="strikethrough" type="boolean" line="79"/>
                <declaration name="stdUnderline" type="Underline" line="80"/>
                <declaration name="imUnderline" type="Underline" line="81"/>
                <method name="DecorationImpl" type="constructor" line="82">
                    <params>
                        <param name="foreground" type="Paint"/>
                        <param name="background" type="Paint"/>
                        <param name="swapColors" type="boolean"/>
                        <param name="strikethrough" type="boolean"/>
                        <param name="stdUnderline" type="Underline"/>
                        <param name="imUnderline" type="Underline"/>
                    </params>
                </method>
                <method name="areEqual" type="boolean" line="90">
                    <params>
                        <param name="lhs" type="Object"/>
                        <param name="rhs" type="Object"/>
                    </params>
                    <scope line="91"/>
                    <scope line="94"/>
                </method>
                <method name="equals" type="boolean" line="98">
                    <params>
                        <param name="rhs" type="Object"/>
                    </params>
                    <scope line="99"/>
                    <scope line="102"/>
                    <declaration name="other" type="DecorationImpl" line="105"/>
                    <scope line="106"/>
                    <scope line="109"/>
                    <scope line="112"/>
                    <scope line="115"/>
                    <scope line="118"/>
                    <scope line="121"/>
                </method>
                <method name="hashCode" type="int" line="126">
                    <declaration name="hc" type="int" line="127"/>
                    <scope line="128"/>
                    <scope line="131"/>
                    <scope line="134"/>
                </method>
                <javadoc line="139">
                    Return the bottom of the Rectangle which encloses pixels
                      drawn by underlines.                    
                </javadoc>
                <method name="getUnderlineMaxY" type="float" line="143">
                    <params>
                        <param name="cm" type="CoreMetrics"/>
                    </params>
                    <declaration name="maxY" type="float" line="144"/>
                    <scope line="145">
                        <declaration name="ulBottom" type="float" line="146"/>
                    </scope>
                    <scope line="150">
                        <declaration name="ulBottom" type="float" line="151"/>
                    </scope>
                </method>
                <method name="drawTextAndEmbellishments" type="void" line="157">
                    <params>
                        <param name="label" type="Label"/>
                        <param name="g2d" type="Graphics2D"/>
                        <param name="x" type="float"/>
                        <param name="y" type="float"/>
                    </params>
                    <scope line="159"/>
                    <declaration name="x1" type="float" line="162"/>
                    <declaration name="x2" type="float" line="163"/>
                    <declaration name="cm" type="CoreMetrics" line="164"/>
                    <scope line="165">
                        <declaration name="savedStroke" type="Stroke" line="166"/>
                        <declaration name="strikeY" type="float" line="168"/>
                    </scope>
                    <declaration name="ulOffset" type="float" line="172"/>
                    <declaration name="ulThickness" type="float" line="173"/>
                    <scope line="174"/>
                    <scope line="177"/>
                </method>
                <method name="drawTextAndDecorations" type="void" line="181">
                    <params>
                        <param name="label" type="Label"/>
                        <param name="g2d" type="Graphics2D"/>
                        <param name="x" type="float"/>
                        <param name="y" type="float"/>
                    </params>
                    <scope line="182"/>
                    <scope line="185">
                        <declaration name="savedPaint" type="Paint" line="186"/>
                        <declaration name="foreground" type="Paint" line="187"/>
                        <scope line="188">
                            <scope line="190">
                                <scope line="191">
                                    <declaration name="bg" type="Color" line="192"/>
                                    <declaration name="brightness" type="int" line="193"/>
                                </scope>
                                <scope line="196"/>
                            </scope>
                            <scope line="200"/>
                        </scope>
                        <scope line="204"/>
                        <scope line="208">
                            <declaration name="bgArea" type="Rectangle2D" line="209"/>
                        </scope>
                    </scope>
                </method>
                <method name="getVisualBounds" type="Rectangle2D" line="219">
                    <params>
                        <param name="label" type="Label"/>
                    </params>
                    <declaration name="visBounds" type="Rectangle2D" line="220"/>
                    <scope line="221">
                        <declaration name="minX" type="float" line="222"/>
                        <declaration name="lb" type="Rectangle2D" line="223"/>
                        <declaration name="minY" type="float" line="224"/>
                        <scope line="225"/>
                        <declaration name="ab" type="Rectangle2D" line="230"/>
                    </scope>
                </method>
                <method name="getOutline" type="Shape" line="235">
                    <params>
                        <param name="label" type="Label"/>
                        <param name="x" type="float"/>
                        <param name="y" type="float"/>
                    </params>
                    <scope line="236"/>
                    <declaration name="cm" type="CoreMetrics" line="239"/>
                    <declaration name="ulThickness" type="float" line="240"/>
                    <declaration name="ulOffset" type="float" line="241"/>
                    <declaration name="lb" type="Rectangle2D" line="242"/>
                    <declaration name="x1" type="float" line="243"/>
                    <declaration name="x2" type="float" line="244"/>
                    <declaration name="area" type="Area" line="245"/>
                    <scope line="246">
                        <declaration name="ul" type="Shape" line="247"/>
                    </scope>
                    <scope line="250">
                        <declaration name="stStroke" type="Stroke" line="251"/>
                        <declaration name="shiftY" type="float" line="252"/>
                        <declaration name="line" type="Line2D" line="253"/>
                        <declaration name="slArea" type="Area" line="254"/>
                        <scope line="255"/>
                        <scope line="258"/>
                    </scope>
                    <scope line="262">
                        <declaration name="ul" type="Shape" line="263"/>
                        <declaration name="ulArea" type="Area" line="264"/>
                        <scope line="265"/>
                        <scope line="268"/>
                    </scope>
                </method>
                <method name="toString" type="String" line="275">
                    <declaration name="buf" type="StringBuffer" line="276"/>
                </method>
            </class>
        </class>
    </source>