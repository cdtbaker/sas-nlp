<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.font">
        <import package="java.util.Map"/>
        <import package="java.awt.BasicStroke"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.Paint"/>
        <import package="java.awt.RenderingHints"/>
        <import package="java.awt.Shape"/>
        <import package="java.awt.Stroke"/>
        <import package="java.awt.font.TextAttribute"/>
        <import package="java.awt.geom.Area"/>
        <import package="java.awt.geom.Line2D"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <import package="java.awt.geom.GeneralPath"/>
        <import package="sun.font.AttributeValues"/>
        <import package="sun.font.EAttribute"/>
        <class name="Decoration" line="53">
            <javadoc line="53">
                This class handles underlining, strikethrough, and foreground and
                  background styles on text.  Clients simply acquire instances
                  of this class and hand them off to ExtendedTextLabels or GraphicComponents.                
            </javadoc>
            <interface name="Label">
                <comment line="151">
                    underline from TextAttribute.UNDERLINE_ON                    
                </comment>
                <comment line="152">
                    input method underline                    
                </comment>
                <javadoc line="60">
                    This interface is implemented by clients that use Decoration.
                      Unfortunately, interface methods have to public;  ideally these
                      would be package-private.                    
                </javadoc>
                <method name="getCoreMetrics" type="CoreMetrics" line="66"/>
                <method name="getLogicalBounds" type="Rectangle2D" line="67"/>
                <method name="handleDraw" type="void" line="69"/>
                <method name="handleGetCharVisualBounds" type="Rectangle2D" line="70"/>
                <method name="handleGetVisualBounds" type="Rectangle2D" line="71"/>
                <method name="handleGetOutline" type="Shape" line="72"/>
            </interface>
            <method name="Decoration" type="constructor" line="75"/>
            <javadoc line="78">
                Return a Decoration which does nothing.                
            </javadoc>
            <method name="getPlainDecoration" type="Decoration" line="81"/>
            <declaration name="VALUES_MASK" type="int" line="86"/>
            <method name="getDecoration" type="Decoration" line="91">
                <params>
                    <param name="values" type="AttributeValues"/>
                </params>
                <scope line="92"/>
            </method>
            <javadoc line="106">
                Return a Decoration appropriate for the the given Map.                
                <param>
                    attributes the Map used to determine the Decoration                    
                </param>
            </javadoc>
            <method name="getDecoration" type="Decoration" line="110">
                <params>
                    <param name="attributes" type="Map"/>
                </params>
                <scope line="111"/>
            </method>
            <method name="drawTextAndDecorations" type="void" line="120">
                <params>
                    <param name="label" type="Label"/>
                    <param name="g2d" type="Graphics2D"/>
                    <param name="x" type="float"/>
                    <param name="y" type="float"/>
                </params>
            </method>
            <method name="getVisualBounds" type="Rectangle2D" line="125">
                <params>
                    <param name="label" type="Label"/>
                </params>
            </method>
            <method name="getCharVisualBounds" type="Rectangle2D" line="130">
                <params>
                    <param name="label" type="Label"/>
                    <param name="index" type="int"/>
                </params>
            </method>
            <method name="getOutline" type="Shape" line="137">
                <params>
                    <param name="label" type="Label"/>
                    <param name="x" type="float"/>
                    <param name="y" type="float"/>
                </params>
            </method>
            <declaration name="PLAIN" type="Decoration" line="142"/>
            <class name="DecorationImpl" line="144">
                <extends class="Decoration"/>
                <comment line="151">
                    underline from TextAttribute.UNDERLINE_ON                    
                </comment>
                <comment line="152">
                    input method underline                    
                </comment>
                <declaration name="fgPaint" type="Paint" line="146"/>
                <declaration name="bgPaint" type="Paint" line="147"/>
                <declaration name="swapColors" type="boolean" line="148"/>
                <declaration name="strikethrough" type="boolean" line="149"/>
                <declaration name="stdUnderline" type="Underline" line="150"/>
                <declaration name="imUnderline" type="Underline" line="151"/>
                <method name="DecorationImpl" type="constructor" line="158">
                    <params>
                        <param name="foreground" type="Paint"/>
                        <param name="background" type="Paint"/>
                        <param name="swapColors" type="boolean"/>
                        <param name="strikethrough" type="boolean"/>
                        <param name="stdUnderline" type="Underline"/>
                        <param name="imUnderline" type="Underline"/>
                    </params>
                </method>
                <method name="areEqual" type="boolean" line="170">
                    <params>
                        <param name="lhs" type="Object"/>
                        <param name="rhs" type="Object"/>
                    </params>
                    <scope line="172"/>
                    <scope line="175"/>
                </method>
                <method name="equals" type="boolean" line="180">
                    <params>
                        <param name="rhs" type="Object"/>
                    </params>
                    <scope line="182"/>
                    <scope line="185"/>
                    <declaration name="other" type="DecorationImpl" line="189"/>
                    <scope line="190"/>
                    <scope line="193"/>
                    <scope line="198"/>
                    <scope line="202"/>
                    <scope line="205"/>
                    <scope line="208"/>
                </method>
                <method name="hashCode" type="int" line="214">
                    <declaration name="hc" type="int" line="216"/>
                    <scope line="217"/>
                    <scope line="220"/>
                    <scope line="223"/>
                </method>
                <javadoc line="229">
                    Return the bottom of the Rectangle which encloses pixels
                      drawn by underlines.                    
                </javadoc>
                <method name="getUnderlineMaxY" type="float" line="233">
                    <params>
                        <param name="cm" type="CoreMetrics"/>
                    </params>
                    <declaration name="maxY" type="float" line="235"/>
                    <scope line="236">
                        <declaration name="ulBottom" type="float" line="238"/>
                    </scope>
                    <scope line="243">
                        <declaration name="ulBottom" type="float" line="245"/>
                    </scope>
                </method>
                <method name="drawTextAndEmbellishments" type="void" line="256">
                    <params>
                        <param name="label" type="Label"/>
                        <param name="g2d" type="Graphics2D"/>
                        <param name="x" type="float"/>
                        <param name="y" type="float"/>
                    </params>
                    <scope line="260"/>
                    <declaration name="x1" type="float" line="264"/>
                    <declaration name="x2" type="float" line="265"/>
                    <declaration name="cm" type="CoreMetrics" line="267"/>
                    <scope line="268">
                        <declaration name="savedStroke" type="Stroke" line="269"/>
                        <declaration name="strikeY" type="float" line="273"/>
                    </scope>
                    <declaration name="ulOffset" type="float" line="278"/>
                    <declaration name="ulThickness" type="float" line="279"/>
                    <scope line="281"/>
                    <scope line="285"/>
                </method>
                <method name="drawTextAndDecorations" type="void" line="293">
                    <params>
                        <param name="label" type="Label"/>
                        <param name="g2d" type="Graphics2D"/>
                        <param name="x" type="float"/>
                        <param name="y" type="float"/>
                    </params>
                    <comment line="308">
                        30/59/11 is standard weights, tweaked a bit                        
                    </comment>
                    <scope line="295"/>
                    <scope line="298">
                        <declaration name="savedPaint" type="Paint" line="299"/>
                        <declaration name="foreground" type="Paint" line="300"/>
                        <scope line="302">
                            <scope line="304">
                                <scope line="305">
                                    <declaration name="bg" type="Color" line="306"/>
                                    <declaration name="brightness" type="int" line="308"/>
                                </scope>
                                <scope line="312"/>
                            </scope>
                            <scope line="315"/>
                        </scope>
                        <scope line="319"/>
                        <scope line="324">
                            <declaration name="bgArea" type="Rectangle2D" line="326"/>
                        </scope>
                    </scope>
                </method>
                <method name="getVisualBounds" type="Rectangle2D" line="342">
                    <params>
                        <param name="label" type="Label"/>
                    </params>
                    <declaration name="visBounds" type="Rectangle2D" line="344"/>
                    <scope line="347">
                        <declaration name="minX" type="float" line="349"/>
                        <declaration name="lb" type="Rectangle2D" line="350"/>
                        <declaration name="minY" type="float" line="352"/>
                        <scope line="354"/>
                        <declaration name="ab" type="Rectangle2D" line="362"/>
                    </scope>
                </method>
                <method name="getOutline" type="Shape" line="371">
                    <params>
                        <param name="label" type="Label"/>
                        <param name="x" type="float"/>
                        <param name="y" type="float"/>
                    </params>
                    <comment line="380">
                        NOTE:  The performace of the following code may
                         be very poor.                        
                    </comment>
                    <comment line="423">
                        area won&apos;t be null here, since at least one underline exists.                        
                    </comment>
                    <scope line="373"/>
                    <declaration name="cm" type="CoreMetrics" line="377"/>
                    <declaration name="ulThickness" type="float" line="381"/>
                    <declaration name="ulOffset" type="float" line="382"/>
                    <declaration name="lb" type="Rectangle2D" line="384"/>
                    <declaration name="x1" type="float" line="385"/>
                    <declaration name="x2" type="float" line="386"/>
                    <declaration name="area" type="Area" line="388"/>
                    <scope line="390">
                        <declaration name="ul" type="Shape" line="391"/>
                    </scope>
                    <scope line="396">
                        <declaration name="stStroke" type="Stroke" line="397"/>
                        <declaration name="shiftY" type="float" line="400"/>
                        <declaration name="line" type="Line2D" line="401"/>
                        <declaration name="slArea" type="Area" line="402"/>
                        <scope line="403"/>
                        <scope line="405"/>
                    </scope>
                    <scope line="410">
                        <declaration name="ul" type="Shape" line="411"/>
                        <declaration name="ulArea" type="Area" line="413"/>
                        <scope line="414"/>
                        <scope line="417"/>
                    </scope>
                </method>
                <method name="toString" type="String" line="429">
                    <declaration name="buf" type="StringBuffer" line="430"/>
                </method>
            </class>
        </class>
    </source>