<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.font">
        <import package="java.awt.Font"/>
        <import package="java.awt.font.FontRenderContext"/>
        <import package="java.awt.font.LineMetrics"/>
        <import package="java.text.Bidi"/>
        <class name="TextLabelFactory" line="38">
            <javadoc line="38">
                A factory for text labels.  Basically this just holds onto the stuff that
                  doesn&apos;t change-- the render context, context, and bidi info for the context-- and gets
                  called for each subrange you want to create.                
                <see>
                    Font                    
                </see>
                <see>
                    FontRenderContext                    
                </see>
                <see>
                    GlyphVector                    
                </see>
                <see>
                    TextLabel                    
                </see>
                <see>
                    ExtendedTextLabel                    
                </see>
                <see>
                    Bidi                    
                </see>
                <see>
                    TextLayout                    
                </see>
            </javadoc>
            <declaration name="frc" type="FontRenderContext" line="53"/>
            <declaration name="text" type="char[]" line="54"/>
            <declaration name="bidi" type="Bidi" line="55"/>
            <declaration name="lineBidi" type="Bidi" line="56"/>
            <declaration name="flags" type="int" line="57"/>
            <declaration name="lineStart" type="int" line="58"/>
            <declaration name="lineLimit" type="int" line="59"/>
            <javadoc line="61">
                Initialize a factory to produce glyph arrays.                
                <param>
                    frc the FontRenderContext to use for the arrays to be produced.                    
                </param>
                <param>
                    text the text of the paragraph.                    
                </param>
                <param>
                    bidi the bidi information for the paragraph text, or null if the
                      entire text is left-to-right text.                    
                </param>
            </javadoc>
            <method name="TextLabelFactory" type="constructor" line="71">
                <params>
                    <param name="frc" type="FontRenderContext"/>
                    <param name="text" type="char[]"/>
                    <param name="bidi" type="Bidi"/>
                    <param name="flags" type="int"/>
                </params>
            </method>
            <method name="getFontRenderContext" type="FontRenderContext" line="81"/>
            <method name="getText" type="char[]" line="85"/>
            <method name="getParagraphBidi" type="Bidi" line="89"/>
            <method name="getLineBidi" type="Bidi" line="93"/>
            <method name="getLayoutFlags" type="int" line="97"/>
            <method name="getLineStart" type="int" line="101"/>
            <method name="getLineLimit" type="int" line="105"/>
            <javadoc line="109">
                Set a line context for the factory.  Shaping only occurs on this line.
                  Characters are ordered as they would appear on this line.                
                <param>
                    lineStart the index within the text of the start of the line.                    
                </param>
                <param>
                    lineLimit the index within the text of the limit of the line.                    
                </param>
            </javadoc>
            <method name="setLineContext" type="void" line="115">
                <params>
                    <param name="lineStart" type="int"/>
                    <param name="lineLimit" type="int"/>
                </params>
                <scope line="118"/>
            </method>
            <javadoc line="123">
                Create an extended glyph array for the text between start and limit.                
                <param>
                    font the font to use to generate glyphs and character positions.                    
                </param>
                <param>
                    start the start of the subrange for which to create the glyph array                    
                </param>
                <param>
                    limit the limit of the subrange for which to create glyph array
                      Start and limit must be within the bounds of the current line.  If no
                      line context has been set, the entire text is used as the current line.
                      The text between start and limit will be treated as though it all has
                      the same bidi level (and thus the same directionality) as the character
                      at start.  Clients should ensure that all text between start and limit
                      has the same bidi level for the current line.                    
                </param>
            </javadoc>
            <method name="createExtended" type="ExtendedTextLabel" line="141">
                <params>
                    <param name="font" type="Font"/>
                    <param name="lm" type="CoreMetrics"/>
                    <param name="decorator" type="Decoration"/>
                    <param name="start" type="int"/>
                    <param name="limit" type="int"/>
                </params>
                <comment line="149">
                    remove bidi, line direction flags                    
                </comment>
                <comment line="150">
                    rtl                    
                </comment>
                <comment line="151">
                    line rtl                    
                </comment>
                <scope line="143"/>
                <declaration name="level" type="int" line="147"/>
                <declaration name="linedir" type="int" line="148"/>
                <declaration name="layoutFlags" type="int" line="149"/>
                <declaration name="source" type="TextSource" line="153"/>
            </method>
            <javadoc line="157">
                Create a simple glyph array for the text between start and limit.                
                <param>
                    font the font to use to generate glyphs and character positions.                    
                </param>
                <param>
                    start the start of the subrange for which to create the glyph array                    
                </param>
                <param>
                    limit the limit of the subrange for which to create glyph array                    
                </param>
            </javadoc>
            <method name="createSimple" type="TextLabel" line="167">
                <params>
                    <param name="font" type="Font"/>
                    <param name="lm" type="CoreMetrics"/>
                    <param name="start" type="int"/>
                    <param name="limit" type="int"/>
                </params>
                <comment line="175">
                    remove bidi, line direction flags                    
                </comment>
                <comment line="176">
                    rtl                    
                </comment>
                <comment line="177">
                    line rtl                    
                </comment>
                <scope line="169"/>
                <declaration name="level" type="int" line="173"/>
                <declaration name="linedir" type="int" line="174"/>
                <declaration name="layoutFlags" type="int" line="175"/>
                <declaration name="source" type="TextSource" line="178"/>
            </method>
        </class>
    </source>