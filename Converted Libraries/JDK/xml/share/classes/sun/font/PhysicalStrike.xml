<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.font">
        <import package="java.awt.Font"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.awt.geom.GeneralPath"/>
        <import package="java.awt.geom.Point2D"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <import package="java.util.concurrent.ConcurrentHashMap"/>
        <class name="PhysicalStrike" line="36">
            <extends class="FontStrike"/>
            <comment line="51">
                the ScalerContext is a native structure pre-filled with the
                 info needed to setup the scaler for this strike. Its immutable
                 so we set it up when the strike is created and free it when the
                 strike is disposed. There&apos;s then no need to pass the info down
                 separately to native on every call to the scaler.                
            </comment>
            <comment line="59">
                Only one of these two arrays is non-null.
                 use the one that matches size of an address (32 or 64 bits)                
            </comment>
            <comment line="65">
                Used by the TrueTypeFont subclass, which is the only client
                 of getGlyphPoint(). The field and method are here because
                 there is no TrueTypeFontStrike subclass.
                 This map is a cache of the positions of points on the outline
                 of a TrueType glyph. It is used by the OpenType layout engine
                 to perform mark positioning. Without this cache every position
                 request involves scaling and hinting the glyph outline potentially
                 over and over again.                
            </comment>
            <comment line="91">
                A number of methods are delegated by the strike to the scaler
                 context which is a shared resource on a physical font.                
            </comment>
            <comment line="99">
                These 3 metrics methods below should be implemented to return
                 values in user space.                
            </comment>
            <comment line="122">
                Used by the OpenType engine for mark positioning.                
            </comment>
            <declaration name="INTMASK" type="long" line="38"/>
            <declaration name="longAddresses" type="boolean" line="39"/>
            <scope line="40"/>
            <declaration name="physicalFont" type="PhysicalFont" line="48"/>
            <declaration name="mapper" type="CharToGlyphMapper" line="49"/>
            <declaration name="pScalerContext" type="long" line="56"/>
            <declaration name="longGlyphImages" type="long[]" line="61"/>
            <declaration name="intGlyphImages" type="int[]" line="62"/>
            <declaration name="glyphPointMapCache" type="ConcurrentHashMap&lt;Integer,Point2D.Float&gt;" line="73"/>
            <declaration name="getImageWithAdvance" type="boolean" line="75"/>
            <declaration name="complexTX" type="int" line="76"/>
            <method name="PhysicalStrike" type="constructor" line="83">
                <params>
                    <param name="physicalFont" type="PhysicalFont"/>
                    <param name="desc" type="FontStrikeDesc"/>
                </params>
            </method>
            <method name="PhysicalStrike" type="constructor" line="88"/>
            <method name="getNumGlyphs" type="int" line="94"/>
            <method name="getFontMetrics" type="StrikeMetrics" line="101">
                <scope line="102"/>
            </method>
            <method name="getCodePointAdvance" type="float" line="109">
                <params>
                    <param name="cp" type="int"/>
                </params>
            </method>
            <method name="getCharMetrics" type="Point2D.Float" line="113">
                <params>
                    <param name="ch" type="char"/>
                </params>
            </method>
            <method name="getSlot0GlyphImagePtrs" type="int" line="117">
                <params>
                    <param name="glyphCodes" type="int[]"/>
                    <param name="images" type="long[]"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <method name="getGlyphPoint" type="Point2D.Float" line="123">
                <params>
                    <param name="glyphCode" type="int"/>
                    <param name="ptNumber" type="int"/>
                </params>
                <declaration name="gp" type="Point2D.Float" line="124"/>
                <declaration name="ptKey" type="Integer" line="125"/>
                <scope line="126">
                    <scope line="127">
                        <scope line="128"/>
                    </scope>
                </scope>
                <scope line="133"/>
                <scope line="137"/>
            </method>
            <method name="adjustPoint" type="void" line="145">
                <params>
                    <param name="pt" type="Point2D.Float"/>
                </params>
            </method>
        </class>
    </source>