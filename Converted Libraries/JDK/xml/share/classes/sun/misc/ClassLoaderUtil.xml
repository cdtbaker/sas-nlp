<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.misc">
        <import package="java.io.IOException"/>
        <import package="java.net.URLClassLoader"/>
        <import package="java.util"/>
        <import package="java.util.jar.JarFile"/>
        <class name="ClassLoaderUtil" line="45">
            <javadoc line="47">
                Releases resources held by a URLClassLoader. A new classloader must
                  be created before the underlying resources can be accessed again.                
                <param>
                    classLoader the instance of URLClassLoader (or a subclass)                    
                </param>
            </javadoc>
            <method name="releaseLoader" type="void" line="52">
                <params>
                    <param name="classLoader" type="URLClassLoader"/>
                </params>
            </method>
            <javadoc line="56">
                Releases resources held by a URLClassLoader.  Notably, close the jars
                  opened by the loader. Initializes and updates the List of
                  jars that have been successfully closed.
                  &lt;p&gt;                
                <param>
                    classLoader the instance of URLClassLoader (or a subclass)                    
                </param>
                <param>
                    jarsClosed a List of Strings that will contain the names of jars
                      successfully closed; can be null if the caller does not need the information returned                    
                </param>
                <return>
                    a List of IOExceptions reporting jars that failed to close; null
                      indicates that an error other than an IOException occurred attempting to
                      release the loader; empty indicates a successful release; non-empty
                      indicates at least one error attempting to close an open jar.                    
                </return>
            </javadoc>
            <method name="releaseLoader" type="List<IOException>" line="69">
                <params>
                    <param name="classLoader" type="URLClassLoader"/>
                    <param name="jarsClosed" type="List<String>"/>
                </params>
                <comment line="75">
                                        
                </comment>
                <comment line="87">
                    The urls variable in the URLClassPath object holds URLs that have not yet
                    been used to resolve a resource or load a class and, therefore, do
                    not yet have a loader associated with them.  Clear the stack so any
                    future requests that might incorrectly reach the loader cannot be
                    resolved and cannot open a jar file after we think we&apos;ve closed
                    them all.                    
                </comment>
                <comment line="99">
                    Also clear the map of URLs to loaders so the class loader cannot use
                    previously-opened jar files - they are about to be closed.                    
                </comment>
                <comment line="107">
                    The URLClassPath object&apos;s path variable records the list of all URLs that are on
                    the URLClassPath&apos;s class path.  Leave that unchanged.  This might
                    help someone trying to debug why a released class loader is still used.
                    Because the stack and lmap are now clear, code that incorrectly uses a
                    the released class loader will trigger an exception if the
                    class or resource would have been resolved by the class
                    loader (and no other) if it had not been released.
                    
                    The list of URLs might provide some hints to the person as to where
                    in the code the class loader was set up, which might in turn suggest
                    where in the code the class loader needs to stop being used.
                    The URLClassPath does not use the path variable to open new jar
                    files - it uses the urls Stack for that - so leaving the path variable
                    will not by itself allow the class loader to continue handling requests.                    
                </comment>
                <comment line="124">
                    For each loader, close the jar file associated with that loader.
                    
                    The URLClassPath&apos;s use of loaders is sync-ed on the entire URLClassPath
                    object.                    
                </comment>
                <comment line="133">
                    If the loader is a JarLoader inner class and its jarFile
                    field is non-null then try to close that jar file.  Add
                    it to the list of closed files if successful.                    
                </comment>
                <comment line="149">
                    Wrap the IOException to identify which jar
                    could not be closed and add it to the list
                    of IOExceptions to be returned to the caller.                    
                </comment>
                <comment line="163">
                    Now clear the loaders ArrayList.                    
                </comment>
                <declaration name="ioExceptions" type="List&lt;IOException&gt;" line="71"/>
                <scope line="73">
                    <scope line="76"/>
                    <declaration name="ucp" type="URLClassPath" line="80"/>
                    <declaration name="loaders" type="ArrayList" line="82"/>
                    <declaration name="urls" type="Stack" line="83"/>
                    <declaration name="lmap" type="HashMap" line="84"/>
                    <scope line="94"/>
                    <scope line="102"/>
                    <scope line="129">
                        <scope line="130">
                            <scope line="131">
                                <scope line="137">
                                    <declaration name="jl" type="URLClassPath.JarLoader" line="138"/>
                                    <declaration name="jarFile" type="JarFile" line="139"/>
                                    <scope line="140">
                                        <scope line="141">
                                            <scope line="143"/>
                                        </scope>
                                    </scope>
                                    <scope line="147">
                                        <declaration name="jarFileName" type="String" line="153"/>
                                        <declaration name="msg" type="String" line="154"/>
                                        <declaration name="newIOE" type="IOException" line="155"/>
                                    </scope>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="167"/>
            </method>
        </class>
    </source>