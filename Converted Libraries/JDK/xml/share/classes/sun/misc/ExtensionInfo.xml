<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.misc">
        <import package="java.util.StringTokenizer"/>
        <import package="java.util.jar.Attributes"/>
        <import package="java.util.jar.Attributes.Name"/>
        <import package="java.util.ResourceBundle"/>
        <import package="java.util.MissingResourceException"/>
        <import package="java.text.MessageFormat"/>
        <import package="java.lang.Character"/>
        <class name="ExtensionInfo" line="37">
            <comment line="72">
                For I18N support                
            </comment>
            <comment line="218">
                &lt;p&gt;
                 helper method to compare two versions.
                 version are in the x.y.z.t pattern.
                 &lt;p&gt;
                 @param source version to compare to
                 @param target version used to compare against
                 @return &lt; 0 if source &lt; version
                         &gt; 0 if source &gt; version
                         = 0 if source = version                
            </comment>
            <comment line="239">
                &lt;p&gt;
                 helper method to compare two versions.
                 version are in the x.y.z.t pattern.
                 &lt;p&gt;
                 @param source version to compare to
                 @param target version used to compare against
                 @return &lt; 0 if source &lt; version
                         &gt; 0 if source &gt; version
                         = 0 if source = version                
            </comment>
            <javadoc line="37">
                This class holds all necessary information to install or
                  upgrade a extension on the user&apos;s disk                
                <author>
                    Jerome Dochez                    
                </author>
            </javadoc>
            <declaration name="COMPATIBLE" type="int" line="45"/>
            <javadoc line="45">
                &lt;p&gt;
                  public static values returned by the isCompatible method
                  &lt;/p&gt;                
            </javadoc>
            <declaration name="REQUIRE_SPECIFICATION_UPGRADE" type="int" line="51"/>
            <declaration name="REQUIRE_IMPLEMENTATION_UPGRADE" type="int" line="52"/>
            <declaration name="REQUIRE_VENDOR_SWITCH" type="int" line="53"/>
            <declaration name="INCOMPATIBLE" type="int" line="54"/>
            <declaration name="title" type="String" line="56"/>
            <javadoc line="56">
                &lt;p&gt;
                  attributes fully describer an extension. The underlying described
                  extension may be installed and requested.
                  &lt;p&gt;                
            </javadoc>
            <declaration name="name" type="String" line="63"/>
            <declaration name="specVersion" type="String" line="64"/>
            <declaration name="specVendor" type="String" line="65"/>
            <declaration name="implementationVersion" type="String" line="66"/>
            <declaration name="vendor" type="String" line="67"/>
            <declaration name="vendorId" type="String" line="68"/>
            <declaration name="url" type="String" line="69"/>
            <declaration name="rb" type="ResourceBundle" line="72"/>
            <javadoc line="76">
                &lt;p&gt;
                  Create a new uninitialized extension information object
                  &lt;/p&gt;                
            </javadoc>
            <method name="ExtensionInfo" type="constructor" line="81"/>
            <javadoc line="84">
                &lt;p&gt;
                  Create and initialize an extension information object.
                  The initialization uses the attributes passed as being
                  the content of a manifest file to load the extension
                  information from.
                  Since manifest file may contain information on several
                  extension they may depend on, the extension key parameter
                  is prepanded to the attribute name to make the key used
                  to retrieve the attribute from the manifest file
                  &lt;p&gt;                
                <param>
                    extensionKey unique extension key in the manifest                    
                </param>
                <param>
                    attr Attributes of a manifest file                    
                </param>
            </javadoc>
            <method name="ExtensionInfo" type="constructor" line="100">
                <params>
                    <param name="extensionKey" type="String"/>
                    <param name="attr" type="Attributes"/>
                </params>
                <declaration name="s" type="String" line="101"/>
                <scope line="102"/>
                <scope line="104"/>
                <declaration name="attrKey" type="String" line="108"/>
            </method>
            <javadoc line="149">
                &lt;p&gt;                
                <return>
                    true if the extension described by this extension information
                      is compatible with the extension described by the extension
                      information passed as a parameter
                      </p>                    
                </return>
                <param>
                    the requested extension information to compare to                    
                </param>
            </javadoc>
            <method name="isCompatibleWith" type="int" line="158">
                <params>
                    <param name="ei" type="ExtensionInfo"/>
                </params>
                <comment line="163">
                    is this true, if not spec version is specified, we consider                    
                </comment>
                <comment line="164">
                    the value as being &quot;any&quot;.                    
                </comment>
                <comment line="170">
                    this extension specification is &quot;older&quot;                    
                </comment>
                <comment line="178">
                    the extension spec is compatible, let&apos;s look at the                    
                </comment>
                <comment line="179">
                    implementation attributes                    
                </comment>
                <comment line="181">
                    They care who provides the extension                    
                </comment>
                <comment line="183">
                    They want to use another vendor implementation                    
                </comment>
                <comment line="186">
                    Vendor matches, let&apos;s see the implementation version                    
                </comment>
                <comment line="188">
                    they care about the implementation version                    
                </comment>
                <comment line="191">
                    This extension is an older implementation                    
                </comment>
                <comment line="197">
                    All othe cases, we consider the extensions to be compatible                    
                </comment>
                <scope line="162">
                    <declaration name="version" type="int" line="168"/>
                    <scope line="169">
                        <scope line="171">
                            <scope line="172"/>
                        </scope>
                    </scope>
                    <scope line="177">
                        <scope line="180">
                            <scope line="182"/>
                            <scope line="185">
                                <scope line="187">
                                    <scope line="190"/>
                                </scope>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="204">
                &lt;p&gt;
                  helper method to print sensible information on the undelying described
                  extension
                  &lt;/p&gt;                
            </javadoc>
            <method name="toString" type="String" line="210"/>
            <method name="compareExtensionVersion" type="int" line="230">
                <params>
                    <param name="source" type="String"/>
                    <param name="target" type="String"/>
                </params>
            </method>
            <method name="strictCompareExtensionVersion" type="int" line="251">
                <params>
                    <param name="source" type="String"/>
                    <param name="target" type="String"/>
                </params>
                <comment line="258">
                    Compare number                    
                </comment>
                <comment line="261">
                    Convert token into meaning number for comparision                    
                </comment>
                <comment line="265">
                    Convert token into meaning number for comparision                    
                </comment>
                <comment line="275">
                    Look for index of &quot;.&quot; in the string                    
                </comment>
                <declaration name="stk" type="StringTokenizer" line="255"/>
                <declaration name="ttk" type="StringTokenizer" line="256"/>
                <declaration name="n" type="int" line="259"/>
                <scope line="274">
                    <declaration name="sIdx" type="int" line="276"/>
                    <declaration name="tIdx" type="int" line="277"/>
                </scope>
            </method>
            <method name="convertToken" type="int" line="291">
                <params>
                    <param name="token" type="String"/>
                </params>
                <comment line="306">
                    Look for &quot;-&quot; for pre-release                    
                </comment>
                <comment line="309">
                    Look for &quot;_&quot; for patch release                    
                </comment>
                <comment line="314">
                    This is a FCS release                    
                </comment>
                <comment line="324">
                    This is a patch (update) release                    
                </comment>
                <comment line="327">
                    Obtain the version                    
                </comment>
                <comment line="330">
                    Check to see if the patch version is in the n.n.n_nnl format (special release)                    
                </comment>
                <comment line="333">
                    letters a-z have values from 10-35                    
                </comment>
                <comment line="337">
                    Obtain the patch version id                    
                </comment>
                <comment line="341">
                    This is a special release                    
                </comment>
                <comment line="344">
                    character is not a a-z letter, ignore                    
                </comment>
                <comment line="349">
                    This is a regular update release. Obtain the patch version id                    
                </comment>
                <comment line="360">
                    This is a milestone release, either a early access, alpha, beta, or RC                    
                </comment>
                <comment line="362">
                    Obtain the version                    
                </comment>
                <comment line="371">
                    Obtain the patch version string, including the milestone + version                    
                </comment>
                <comment line="374">
                    Milestone version                    
                </comment>
                <comment line="401">
                    No version after the milestone, assume 0                    
                </comment>
                <comment line="406">
                    Convert the milestone version                    
                </comment>
                <declaration name="charValue" type="int" line="295"/>
                <declaration name="charVersion" type="int" line="296"/>
                <declaration name="patchVersion" type="int" line="297"/>
                <declaration name="strLength" type="int" line="298"/>
                <declaration name="endIndex" type="int" line="299"/>
                <declaration name="lastChar" type="char" line="300"/>
                <declaration name="args" type="Object[]" line="302"/>
                <declaration name="mf" type="MessageFormat" line="303"/>
                <declaration name="versionError" type="String" line="304"/>
                <declaration name="prIndex" type="int" line="307"/>
                <declaration name="patchIndex" type="int" line="310"/>
                <scope line="313">
                    <scope line="315"/>
                    <scope line="317"/>
                </scope>
                <scope line="323">
                    <declaration name="prversion" type="int" line="325"/>
                    <scope line="326">
                        <scope line="332">
                            <scope line="340"/>
                            <scope line="343"/>
                        </scope>
                        <scope line="348"/>
                    </scope>
                    <scope line="352"/>
                </scope>
                <scope line="359">
                    <declaration name="mrversion" type="int" line="363"/>
                    <scope line="364"/>
                    <scope line="366"/>
                    <declaration name="prString" type="String" line="372"/>
                    <declaration name="msVersion" type="String" line="375"/>
                    <declaration name="delta" type="int" line="376"/>
                    <scope line="379"/>
                    <scope line="384"/>
                    <scope line="389"/>
                    <scope line="394"/>
                    <scope line="400"/>
                    <scope line="405">
                        <scope line="407"/>
                        <scope line="409"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>