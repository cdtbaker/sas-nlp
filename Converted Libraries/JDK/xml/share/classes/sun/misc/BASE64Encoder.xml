<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.misc">
        <import package="java.io.OutputStream"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.PrintStream"/>
        <import package="java.io.IOException"/>
        <class name="BASE64Encoder" line="32">
            <extends class="CharacterEncoder"/>
            <javadoc line="32">
                This class implements a BASE64 Character encoder as specified in RFC1521.
                  This RFC is part of the MIME specification as published by the Internet
                  Engineering Task Force (IETF). Unlike some other encoding schemes there
                  is nothing in this encoding that indicates
                  where a buffer starts or ends.
                  This means that the encoded text will simply start with the first line
                  of encoded text and end with the last line of encoded text.                
                <author>
                    Chuck McManis                    
                </author>
                <see>
                    CharacterEncoder                    
                </see>
                <see>
                    BASE64Decoder                    
                </see>
            </javadoc>
            <javadoc line="49">
                this class encodes three bytes per atom.                
            </javadoc>
            <method name="bytesPerAtom" type="int" line="50"/>
            <javadoc line="54">
                this class encodes 57 bytes per line. This results in a maximum
                  of 57/3  4 or 76 characters per output line. Not counting the
                  line termination.                
            </javadoc>
            <method name="bytesPerLine" type="int" line="59"/>
            <declaration name="pem_array" type="char" line="63"/>
            <javadoc line="63">
                This array maps the characters to their 6 bit values                
            </javadoc>
            <javadoc line="76">
                encodeAtom - Take three bytes of input and encode it as 4
                  printable characters. Note that if the length in len is less
                  than three is encodes either one or two &apos;=&apos; signs to indicate
                  padding characters.                
            </javadoc>
            <method name="encodeAtom" type="void" line="83">
                <params>
                    <param name="outStream" type="OutputStream"/>
                    <param name="data" type="byte"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="a" type="byte" line="84"/>
                <scope line="86"/>
                <scope line="94"/>
                <scope line="102"/>
            </method>
        </class>
    </source>