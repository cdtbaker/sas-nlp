<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.misc">
        <import package="java.lang.Thread.State"/>
        <import package="java.util.Properties"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Map"/>
        <import package="java.util.Set"/>
        <class name="VM" line="7">
            <declaration name="suspended" type="boolean" line="8"/>
            <javadoc line="9">
                @deprecated                
            </javadoc>
            <method name="threadsSuspended" type="boolean" line="12"/>
            <method name="allowThreadSuspension" type="boolean" line="15">
                <params>
                    <param name="g" type="ThreadGroup"/>
                    <param name="b" type="boolean"/>
                </params>
            </method>
            <javadoc line="18">
                @deprecated                
            </javadoc>
            <method name="suspendThreads" type="boolean" line="21"/>
            <javadoc line="25">
                @deprecated                
            </javadoc>
            <method name="unsuspendThreads" type="void" line="28"/>
            <javadoc line="31">
                @deprecated                
            </javadoc>
            <method name="unsuspendSomeThreads" type="void" line="34"/>
            <declaration name="STATE_GREEN" type="int" line="36"/>
            <javadoc line="36">
                @deprecated                
            </javadoc>
            <declaration name="STATE_YELLOW" type="int" line="40"/>
            <javadoc line="40">
                @deprecated                
            </javadoc>
            <declaration name="STATE_RED" type="int" line="44"/>
            <javadoc line="44">
                @deprecated                
            </javadoc>
            <javadoc line="48">
                @deprecated                
            </javadoc>
            <method name="getState" type="int" line="51"/>
            <javadoc line="54">
                @deprecated                
            </javadoc>
            <method name="registerVMNotification" type="void" line="57">
                <params>
                    <param name="n" type="VMNotification"/>
                </params>
            </method>
            <javadoc line="59">
                @deprecated                
            </javadoc>
            <method name="asChange" type="void" line="62">
                <params>
                    <param name="as_old" type="int"/>
                    <param name="as_new" type="int"/>
                </params>
            </method>
            <javadoc line="64">
                @deprecated                
            </javadoc>
            <method name="asChange_otherthread" type="void" line="67">
                <params>
                    <param name="as_old" type="int"/>
                    <param name="as_new" type="int"/>
                </params>
            </method>
            <declaration name="booted" type="boolean" line="69"/>
            <javadoc line="69">
                Write the current profiling contents to the file &quot;java.prof&quot;.
                  If the file already exists, it will be overwritten.                
            </javadoc>
            <method name="booted" type="void" line="74"/>
            <method name="isBooted" type="boolean" line="77"/>
            <declaration name="directMemory" type="long" line="80"/>
            <method name="maxDirectMemory" type="long" line="81"/>
            <declaration name="pageAlignDirectMemory" type="boolean" line="84"/>
            <method name="isDirectMemoryPageAligned" type="boolean" line="85"/>
            <declaration name="defaultAllowArraySyntax" type="boolean" line="88"/>
            <declaration name="allowArraySyntax" type="boolean" line="89"/>
            <method name="allowArraySyntax" type="boolean" line="90"/>
            <javadoc line="93">
                Returns the system property of the specified key saved at
                  system initialization time.  This method should only be used
                  for the system properties that are not changed during runtime.
                  It accesses a private copy of the system properties so
                  that user&apos;s locking of the system properties object will not
                  cause the library to deadlock.
                  Note that the saved system properties do not include
                  the ones set by sun.misc.Version.init().                
            </javadoc>
            <method name="getSavedProperty" type="String" line="103">
                <params>
                    <param name="key" type="String"/>
                </params>
            </method>
            <declaration name="savedProps" type="Properties" line="107"/>
            <method name="saveAndRemoveProperties" type="void" line="108">
                <params>
                    <param name="props" type="Properties"/>
                </params>
                <declaration name="s" type="String" line="111"/>
                <scope line="112">
                    <scope line="113"/>
                    <scope line="116">
                        <declaration name="l" type="long" line="117"/>
                    </scope>
                </scope>
            </method>
            <method name="initializeOSEnvironment" type="void" line="129">
                <scope line="130"/>
            </method>
            <declaration name="finalRefCount" type="int" line="134"/>
            <declaration name="peakFinalRefCount" type="int" line="135"/>
            <method name="getFinalRefCount" type="int" line="136"/>
            <method name="getPeakFinalRefCount" type="int" line="139"/>
            <method name="addFinalRefCount" type="void" line="142">
                <params>
                    <param name="n" type="int"/>
                </params>
                <scope line="144"/>
            </method>
            <javadoc line="148">
                Returns Thread.State for the given threadStatus                
            </javadoc>
            <method name="toThreadState" type="Thread.State" line="151">
                <params>
                    <param name="threadStatus" type="int"/>
                </params>
                <scope line="152"/>
                <scope line="155"/>
                <scope line="158"/>
                <scope line="161"/>
                <scope line="164"/>
                <scope line="167"/>
                <scope line="170"/>
            </method>
            <declaration name="JVMTI_THREAD_STATE_ALIVE" type="int" line="174"/>
            <declaration name="JVMTI_THREAD_STATE_TERMINATED" type="int" line="175"/>
            <declaration name="JVMTI_THREAD_STATE_RUNNABLE" type="int" line="176"/>
            <declaration name="JVMTI_THREAD_STATE_BLOCKED_ON_MONITOR_ENTER" type="int" line="177"/>
            <declaration name="JVMTI_THREAD_STATE_WAITING_INDEFINITELY" type="int" line="178"/>
            <declaration name="JVMTI_THREAD_STATE_WAITING_WITH_TIMEOUT" type="int" line="179"/>
            <scope line="180"/>
            <method name="initialize" type="void" line="183"/>
        </class>
    </source>