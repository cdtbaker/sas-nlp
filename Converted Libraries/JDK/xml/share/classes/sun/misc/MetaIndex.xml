<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.misc">
        <import package="java.io.BufferedReader"/>
        <import package="java.io.FileReader"/>
        <import package="java.io.File"/>
        <import package="java.io.IOException"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collections"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <class name="MetaIndex" line="130">
            <comment line="132">
                Maps jar file names in registered directories to meta-indices                
            </comment>
            <comment line="135">
                List of contents of this meta-index                
            </comment>
            <comment line="138">
                Indicate whether the coresponding jar file is a pure class jar file or not                
            </comment>
            <comment line="141">
                ----------------------------------------------------------------------                
            </comment>
            <comment line="142">
                Registration of directories (which can cause parsing of the                
            </comment>
            <comment line="143">
                meta-index file if it is present), and fetching of parsed                
            </comment>
            <comment line="144">
                meta-indices                
            </comment>
            <comment line="145">
                jarMap is not strictly thread-safe when the meta index mechanism                
            </comment>
            <comment line="146">
                is extended for user-provided jar files in future.                
            </comment>
            <comment line="152">
                &apos;synchronized&apos; is added to protect the jarMap from being modified                
            </comment>
            <comment line="153">
                by multiple threads.                
            </comment>
            <comment line="230">
                ----------------------------------------------------------------------                
            </comment>
            <comment line="231">
                Public APIs                
            </comment>
            <comment line="232">
                                
            </comment>
            <comment line="252">
                ----------------------------------------------------------------------                
            </comment>
            <comment line="253">
                Implementation only below this point                
            </comment>
            <comment line="254">
                @IllegalArgumentException if entries is null.                
            </comment>
            <declaration name="jarMap" type="Map&lt;File,MetaIndex&gt;" line="132"/>
            <declaration name="contents" type="String[]" line="135"/>
            <declaration name="isClassOnlyJar" type="boolean" line="138"/>
            <method name="forJar" type="MetaIndex" line="147">
                <params>
                    <param name="jar" type="File"/>
                </params>
            </method>
            <method name="registerDirectory" type="void" line="153">
                <params>
                    <param name="dir" type="File"/>
                </params>
                <comment line="154">
                    Note that this does not currently check to see whether the                    
                </comment>
                <comment line="155">
                    directory has previously been registered, since the meta-index                    
                </comment>
                <comment line="156">
                    in a particular directory creates multiple entries in the                    
                </comment>
                <comment line="157">
                    jarMap. If this mechanism is extended beyond the boot and                    
                </comment>
                <comment line="158">
                    extension class paths (for example, automatically searching for                    
                </comment>
                <comment line="159">
                    meta-index files in directories containing jars which have been                    
                </comment>
                <comment line="160">
                    explicitly opened) then this code should be generalized.                    
                </comment>
                <comment line="161">
                                        
                </comment>
                <comment line="162">
                    This method must be called from a privileged context.                    
                </comment>
                <comment line="173">
                                        
                </comment>
                <comment line="175">
                    Note: The first line should contain the version of
                     the meta-index file. We have to match the right version                    
                </comment>
                <comment line="189">
                    Store away current contents, if any                    
                </comment>
                <comment line="197">
                    Fetch new current jar file name                    
                </comment>
                <comment line="214">
                    Store away current contents, if any                    
                </comment>
                <comment line="223">
                    Silently fail for now (similar behavior to elsewhere in                    
                </comment>
                <comment line="224">
                    extension and core loaders)                    
                </comment>
                <declaration name="indexFile" type="File" line="163"/>
                <scope line="164">
                    <scope line="165">
                        <declaration name="reader" type="BufferedReader" line="166"/>
                        <declaration name="line" type="String" line="167"/>
                        <declaration name="curJarName" type="String" line="168"/>
                        <declaration name="isCurJarContainClassOnly" type="boolean" line="169"/>
                        <declaration name="contents" type="List&lt;String&gt;" line="170"/>
                        <declaration name="map" type="Map&lt;File,MetaIndex&gt;" line="171"/>
                        <scope line="180"/>
                        <scope line="184">
                            <scope line="188">
                                <scope line="190"/>
                                <scope line="199"/>
                                <scope line="201"/>
                            </scope>
                            <scope line="209"/>
                        </scope>
                        <scope line="215"/>
                    </scope>
                    <scope line="222"/>
                </scope>
            </method>
            <method name="mayContain" type="boolean" line="233">
                <params>
                    <param name="entry" type="String"/>
                </params>
                <comment line="234">
                    Ask non-class file from class only jar returns false                    
                </comment>
                <comment line="235">
                    This check is important to avoid some class only jar                    
                </comment>
                <comment line="236">
                    files such as rt.jar are opened for resource request.                    
                </comment>
                <scope line="237"/>
                <declaration name="conts" type="String[]" line="241"/>
                <scope line="242">
                    <scope line="243"/>
                </scope>
            </method>
            <method name="MetaIndex" type="constructor" line="255">
                <params>
                    <param name="entries" type="List<String>"/>
                    <param name="isClassOnlyJar" type="boolean"/>
                </params>
                <scope line="256"/>
            </method>
            <method name="getJarMap" type="Map<File,MetaIndex>" line="264">
                <scope line="265">
                    <scope line="266">
                        <scope line="267"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>