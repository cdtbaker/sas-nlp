<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.misc">
        <import package="java.io.EOFException"/>
        <import package="java.net.URL"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InterruptedIOException"/>
        <import package="java.io.InputStream"/>
        <import package="java.security.CodeSigner"/>
        <import package="java.util.jar.Manifest"/>
        <import package="java.nio.ByteBuffer"/>
        <import package="java.util.Arrays"/>
        <import package="sun.nio.ByteBuffered"/>
        <class name="Resource" line="39">
            <comment line="75">
                                
            </comment>
            <javadoc line="39">
                This class is used to represent a Resource that has been loaded
                  from the class path.                
                <author>
                    David Connelly                    
                </author>
                <since>
                    1.2                    
                </since>
            </javadoc>
            <method name="getName" type="String" line="47"/>
            <javadoc line="47">
                Returns the name of the Resource.                
            </javadoc>
            <method name="getURL" type="URL" line="52"/>
            <javadoc line="52">
                Returns the URL of the Resource.                
            </javadoc>
            <method name="getCodeSourceURL" type="URL" line="57"/>
            <javadoc line="57">
                Returns the CodeSource URL for the Resource.                
            </javadoc>
            <method name="getInputStream" type="InputStream" line="62"/>
            <javadoc line="62">
                Returns an InputStream for reading the Resource data.                
            </javadoc>
            <method name="getContentLength" type="int" line="67"/>
            <javadoc line="67">
                Returns the length of the Resource data, or -1 if unknown.                
            </javadoc>
            <declaration name="cis" type="InputStream" line="72"/>
            <method name="cachedInputStream" type="InputStream" line="75">
                <scope line="76"/>
            </method>
            <javadoc line="82">
                Returns the Resource data as an array of bytes.                
            </javadoc>
            <method name="getBytes" type="byte[]" line="85">
                <comment line="88">
                    Get stream before content length so that a FileNotFoundException
                     can propagate upwards without being caught too early                    
                </comment>
                <comment line="92">
                    This code has been uglified to protect against interrupts.
                     Even if a thread has been interrupted when loading resources,
                     the IO should not abort, so must carefully retry, failing only
                     if the retry leads to some other IO exception.                    
                </comment>
                <comment line="115">
                    Only expand when there&apos;s no room                    
                </comment>
                <declaration name="b" type="byte[]" line="86"/>
                <declaration name="in" type="InputStream" line="89"/>
                <declaration name="isInterrupted" type="boolean" line="96"/>
                <declaration name="len" type="int" line="97"/>
                <scope line="98">
                    <scope line="99"/>
                    <scope line="102"/>
                </scope>
                <scope line="108">
                    <declaration name="pos" type="int" line="111"/>
                    <scope line="112">
                        <declaration name="bytesToRead" type="int" line="113"/>
                        <scope line="114">
                            <scope line="116"/>
                        </scope>
                        <scope line="119"/>
                        <declaration name="cc" type="int" line="122"/>
                        <scope line="123"/>
                        <scope line="125"/>
                        <scope line="129">
                            <scope line="130"/>
                            <scope line="132">
                                <scope line="133"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="141">
                    <scope line="142"/>
                    <scope line="144"/>
                    <scope line="146"/>
                    <scope line="148"/>
                </scope>
            </method>
            <javadoc line="155">
                Returns the Resource data as a ByteBuffer, but only if the input stream
                  was implemented on top of a ByteBuffer. Return &lt;tt&gt;null&lt;/tt&gt; otherwise.                
            </javadoc>
            <method name="getByteBuffer" type="ByteBuffer" line="159">
                <declaration name="in" type="InputStream" line="160"/>
                <scope line="161"/>
            </method>
            <javadoc line="167">
                Returns the Manifest for the Resource, or null if none.                
            </javadoc>
            <method name="getManifest" type="Manifest" line="170"/>
            <javadoc line="174">
                Returns theCertificates for the Resource, or null if none.                
            </javadoc>
            <method name="getCertificates" type="java.security.cert.Certificate[]" line="177"/>
            <javadoc line="181">
                Returns the code signers for the Resource, or null if none.                
            </javadoc>
            <method name="getCodeSigners" type="CodeSigner[]" line="184"/>
        </class>
    </source>