<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.misc">
        <import package="java.util.Enumeration"/>
        <import package="java.util.NoSuchElementException"/>
        <class name="Queue" line="31">
            <javadoc line="31">
                Queue: implements a simple queue mechanism.  Allows for enumeration of the
                  elements.                
                <author>
                    Herb Jellinek                    
                </author>
            </javadoc>
            <declaration name="length" type="int" line="40"/>
            <declaration name="head" type="QueueElement" line="42"/>
            <declaration name="tail" type="QueueElement" line="43"/>
            <method name="Queue" type="constructor" line="45"/>
            <javadoc line="48">
                Enqueue an object.                
            </javadoc>
            <method name="enqueue" type="void" line="51">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <declaration name="newElt" type="QueueElement" line="53"/>
                <scope line="55"/>
                <scope line="59"/>
            </method>
            <javadoc line="68">
                Dequeue the oldest object on the queue.  Will wait indefinitely.                
                <return>
                    the oldest object on the queue.                    
                </return>
                <exception>
                    java.lang.InterruptedException if any thread has
                      interrupted this thread.                    
                </exception>
            </javadoc>
            <method name="dequeue" type="Object" line="75"/>
            <javadoc line="79">
                Dequeue the oldest object on the queue.                
                <param>
                    timeOut the number of milliseconds to wait for something
                      to arrive.                    
                </param>
                <return>
                    the oldest object on the queue.                    
                </return>
                <exception>
                    java.lang.InterruptedException if any thread has
                      interrupted this thread.                    
                </exception>
            </javadoc>
            <method name="dequeue" type="Object" line="89">
                <params>
                    <param name="timeOut" type="long"/>
                </params>
                <scope line="91"/>
                <declaration name="elt" type="QueueElement" line="94"/>
                <scope line="96"/>
                <scope line="98"/>
            </method>
            <javadoc line="105">
                Is the queue empty?                
                <return>
                    true if the queue is empty.                    
                </return>
            </javadoc>
            <method name="isEmpty" type="boolean" line="109"/>
            <javadoc line="113">
                Returns an enumeration of the elements in Last-In, First-Out
                  order. Use the Enumeration methods on the returned object to
                  fetch the elements sequentially.                
            </javadoc>
            <method name="elements" type="Enumeration" line="118"/>
            <javadoc line="122">
                Returns an enumeration of the elements in First-In, First-Out
                  order. Use the Enumeration methods on the returned object to
                  fetch the elements sequentially.                
            </javadoc>
            <method name="reverseElements" type="Enumeration" line="127"/>
            <method name="dump" type="void" line="131">
                <params>
                    <param name="msg" type="String"/>
                </params>
                <declaration name="cursor" type="QueueElement" line="136"/>
                <declaration name="last" type="QueueElement" line="137"/>
                <scope line="138"/>
                <scope line="143"/>
            </method>
        </class>
        <class name="FIFOQueueEnumerator" line="150">
            <implements interface="Enumeration"/>
            <declaration name="queue" type="Queue" line="151"/>
            <declaration name="cursor" type="QueueElement" line="152"/>
            <method name="FIFOQueueEnumerator" type="constructor" line="154">
                <params>
                    <param name="q" type="Queue"/>
                </params>
            </method>
            <method name="hasMoreElements" type="boolean" line="159"/>
            <method name="nextElement" type="Object" line="163">
                <scope line="164">
                    <scope line="165">
                        <declaration name="result" type="QueueElement" line="166"/>
                    </scope>
                </scope>
            </method>
        </class>
        <class name="LIFOQueueEnumerator" line="175">
            <implements interface="Enumeration"/>
            <declaration name="queue" type="Queue" line="176"/>
            <declaration name="cursor" type="QueueElement" line="177"/>
            <method name="LIFOQueueEnumerator" type="constructor" line="179">
                <params>
                    <param name="q" type="Queue"/>
                </params>
            </method>
            <method name="hasMoreElements" type="boolean" line="184"/>
            <method name="nextElement" type="Object" line="188">
                <scope line="189">
                    <scope line="190">
                        <declaration name="result" type="QueueElement" line="191"/>
                    </scope>
                </scope>
            </method>
        </class>
        <class name="QueueElement" line="200">
            <declaration name="next" type="QueueElement" line="201"/>
            <declaration name="prev" type="QueueElement" line="202"/>
            <declaration name="obj" type="Object" line="204"/>
            <method name="QueueElement" type="constructor" line="206">
                <params>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <method name="toString" type="String" line="210"/>
        </class>
    </source>