<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.misc">
        <class name="FloatConsts" line="2">
            <javadoc line="2">
                This class contains additional constants documenting limits of the
                  &lt;code&gt;float&lt;/code&gt; type.                
                <author>
                    Joseph D. Darcy                    
                </author>
            </javadoc>
            <javadoc line="8">
                Don&apos;t let anyone instantiate this class.                
            </javadoc>
            <method name="FloatConsts" type="constructor" line="11"/>
            <declaration name="POSITIVE_INFINITY" type="float" line="13"/>
            <declaration name="NEGATIVE_INFINITY" type="float" line="14"/>
            <declaration name="NaN" type="float" line="15"/>
            <declaration name="MAX_VALUE" type="float" line="16"/>
            <declaration name="MIN_VALUE" type="float" line="17"/>
            <declaration name="MIN_NORMAL" type="float" line="18"/>
            <javadoc line="18">
                A constant holding the smallest positive normal value of type
                  &lt;code&gt;float&lt;/code&gt;, 2&lt;sup&gt;-126&lt;/sup&gt;.  It is equal to the value
                  returned by &lt;code&gt;Float.intBitsToFloat(0x00800000)&lt;/code&gt;.                
            </javadoc>
            <declaration name="SIGNIFICAND_WIDTH" type="int" line="24"/>
            <javadoc line="24">
                The number of logical bits in the significand of a
                  &lt;code&gt;float&lt;/code&gt; number, including the implicit bit.                
            </javadoc>
            <declaration name="MAX_EXPONENT" type="int" line="29"/>
            <javadoc line="29">
                Maximum exponent a finite &lt;code&gt;float&lt;/code&gt; number may have.
                  It is equal to the value returned by
                  &lt;code&gt;Math.ilogb(Float.MAX_VALUE)&lt;/code&gt;.                
            </javadoc>
            <declaration name="MIN_EXPONENT" type="int" line="35"/>
            <javadoc line="35">
                Minimum exponent a normalized &lt;code&gt;float&lt;/code&gt; number may
                  have.  It is equal to the value returned by
                  &lt;code&gt;Math.ilogb(Float.MIN_NORMAL)&lt;/code&gt;.                
            </javadoc>
            <declaration name="MIN_SUB_EXPONENT" type="int" line="41"/>
            <javadoc line="41">
                The exponent the smallest positive &lt;code&gt;float&lt;/code&gt; subnormal
                  value would have if it could be normalized.  It is equal to the
                  value returned by &lt;code&gt;FpUtils.ilogb(Float.MIN_VALUE)&lt;/code&gt;.                
            </javadoc>
            <declaration name="EXP_BIAS" type="int" line="47"/>
            <javadoc line="47">
                Bias used in representing a &lt;code&gt;float&lt;/code&gt; exponent.                
            </javadoc>
            <declaration name="SIGN_BIT_MASK" type="int" line="51"/>
            <javadoc line="51">
                Bit mask to isolate the sign bit of a &lt;code&gt;float&lt;/code&gt;.                
            </javadoc>
            <declaration name="EXP_BIT_MASK" type="int" line="55"/>
            <javadoc line="55">
                Bit mask to isolate the exponent field of a
                  &lt;code&gt;float&lt;/code&gt;.                
            </javadoc>
            <declaration name="SIGNIF_BIT_MASK" type="int" line="60"/>
            <javadoc line="60">
                Bit mask to isolate the significand field of a
                  &lt;code&gt;float&lt;/code&gt;.                
            </javadoc>
            <scope line="65"/>
        </class>
    </source>