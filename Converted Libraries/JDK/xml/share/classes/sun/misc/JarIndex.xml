<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.misc">
        <import package="java.io"/>
        <import package="java.util"/>
        <import package="java.util.jar"/>
        <import package="java.util.zip"/>
        <class name="JarIndex" line="33">
            <comment line="60">
                An ordered list of jar file names.                
            </comment>
            <comment line="150">
                Add the key, value pair to the hashmap, the value will
                 be put in a linked list which is created if necessary.                
            </comment>
            <javadoc line="33">
                This class is used to maintain mappings from packages, classes
                  and resources to their enclosing JAR files. Mappings are kept
                  at the package level except for class or resource files that
                  are located at the root directory. URLClassLoader uses the mapping
                  information to determine where to fetch an extension class or
                  resource from.                
                <author>
                    Zhenghua Li                    
                </author>
                <since>
                    1.3                    
                </since>
            </javadoc>
            <declaration name="indexMap" type="HashMap" line="47"/>
            <javadoc line="47">
                The hash map that maintains mappings from
                  package/classe/resource to jar file list(s)                
            </javadoc>
            <declaration name="jarMap" type="HashMap" line="53"/>
            <javadoc line="53">
                The hash map that maintains mappings from
                  jar file to package/class/resource lists                
            </javadoc>
            <declaration name="jarFiles" type="String[]" line="62"/>
            <declaration name="INDEX_NAME" type="String" line="64"/>
            <javadoc line="64">
                The index file name.                
            </javadoc>
            <declaration name="metaInfFilenames" type="boolean" line="69"/>
            <javadoc line="69">
                true if, and only if, sun.misc.JarIndex.metaInfFilenames is set to true.
                  If true, the names of the files in META-INF, and its subdirectories, will
                  be added to the index. Otherwise, just the directory names are added.                
            </javadoc>
            <javadoc line="77">
                Constructs a new, empty jar index.                
            </javadoc>
            <method name="JarIndex" type="constructor" line="80"/>
            <javadoc line="85">
                Constructs a new index from the specified input stream.                
                <param>
                    is the input stream containing the index data                    
                </param>
            </javadoc>
            <method name="JarIndex" type="constructor" line="90">
                <params>
                    <param name="is" type="InputStream"/>
                </params>
            </method>
            <javadoc line="95">
                Constructs a new index for the specified list of jar files.                
                <param>
                    files the list of jar files to construct the index from.                    
                </param>
            </javadoc>
            <method name="JarIndex" type="constructor" line="100">
                <params>
                    <param name="files" type="String[]"/>
                </params>
            </method>
            <javadoc line="106">
                Returns the jar index, or &lt;code&gt;null&lt;/code&gt; if none.
                  This single parameter version of the method is retained
                  for binary compatibility with earlier releases.                
                <param>
                    jar the JAR file to get the index from.                    
                </param>
                <exception>
                    IOException if an I/O error has occurred.                    
                </exception>
            </javadoc>
            <method name="getJarIndex" type="JarIndex" line="115">
                <params>
                    <param name="jar" type="JarFile"/>
                </params>
            </method>
            <javadoc line="119">
                Returns the jar index, or &lt;code&gt;null&lt;/code&gt; if none.                
                <param>
                    jar the JAR file to get the index from.                    
                </param>
                <exception>
                    IOException if an I/O error has occurred.                    
                </exception>
            </javadoc>
            <method name="getJarIndex" type="JarIndex" line="125">
                <params>
                    <param name="jar" type="JarFile"/>
                    <param name="metaIndex" type="MetaIndex"/>
                </params>
                <comment line="127">
                    If metaIndex is not null, check the meta index to see
                    if META-INFINDEX.LIST is contained in jar file or not.                    
                </comment>
                <comment line="135">
                    if found, then load the index                    
                </comment>
                <declaration name="index" type="JarIndex" line="126"/>
                <scope line="131"/>
                <declaration name="e" type="JarEntry" line="134"/>
                <scope line="136"/>
            </method>
            <javadoc line="142">
                Returns the jar files that are defined in this index.                
            </javadoc>
            <method name="getJarFiles" type="String[]" line="145"/>
            <method name="addToList" type="void" line="153">
                <params>
                    <param name="key" type="String"/>
                    <param name="value" type="String"/>
                    <param name="t" type="HashMap"/>
                </params>
                <declaration name="list" type="LinkedList" line="154"/>
                <scope line="155"/>
                <scope line="159"/>
            </method>
            <javadoc line="164">
                Returns the list of jar files that are mapped to the file.                
                <param>
                    fileName the key of the mapping                    
                </param>
            </javadoc>
            <method name="get" type="LinkedList" line="169">
                <params>
                    <param name="fileName" type="String"/>
                </params>
                <comment line="172">
                                        
                </comment>
                <declaration name="jarFiles" type="LinkedList" line="170"/>
                <scope line="171">
                    <declaration name="pos" type="int" line="173"/>
                    <scope line="174"/>
                </scope>
            </method>
            <javadoc line="181">
                Add the mapping from the specified file to the specified
                  jar file. If there were no mapping for the package of the
                  specified file before, a new linked list will be created,
                  the jar file is added to the list and a new mapping from
                  the package to the jar file list is added to the hashmap.
                  Otherwise, the jar file will be added to the end of the
                  existing list.                
                <param>
                    fileName the file name                    
                </param>
                <param>
                    jarName the jar file that the file is mapped to                    
                </param>
            </javadoc>
            <method name="add" type="void" line="194">
                <params>
                    <param name="fileName" type="String"/>
                    <param name="jarName" type="String"/>
                </params>
                <comment line="203">
                    add the mapping to indexMap                    
                </comment>
                <comment line="206">
                    add the mapping to jarMap                    
                </comment>
                <declaration name="packageName" type="String" line="195"/>
                <declaration name="pos" type="int" line="196"/>
                <scope line="197"/>
                <scope line="199"/>
            </method>
            <javadoc line="210">
                Same as add(String,String) except that it doesn&apos;t strip off from the
                  last index of &apos;/&apos;. It just adds the filename.                
            </javadoc>
            <method name="addExplicit" type="void" line="214">
                <params>
                    <param name="fileName" type="String"/>
                    <param name="jarName" type="String"/>
                </params>
                <comment line="215">
                    add the mapping to indexMap                    
                </comment>
                <comment line="218">
                    add the mapping to jarMap                    
                </comment>
            </method>
            <javadoc line="222">
                Go through all the jar files and construct the
                  index table.                
            </javadoc>
            <method name="parseJars" type="void" line="226">
                <params>
                    <param name="files" type="String[]"/>
                </params>
                <comment line="243">
                    Skip the META-INF directory, the index, and manifest.                    
                </comment>
                <comment line="244">
                    Any files in META-INF/ will be indexed explicitly                    
                </comment>
                <comment line="256">
                    Add files under META-INF explicitly so that certain                    
                </comment>
                <comment line="257">
                    services, like ServiceLoader, etc, can be located                    
                </comment>
                <comment line="258">
                    with greater accuracy. Directories can be skipped                    
                </comment>
                <comment line="259">
                    since each file will be added explicitly.                    
                </comment>
                <scope line="227"/>
                <declaration name="currentJar" type="String" line="231"/>
                <scope line="233">
                    <declaration name="zrf" type="ZipFile" line="235"/>
                    <declaration name="entries" type="Enumeration" line="238"/>
                    <scope line="239">
                        <declaration name="entry" type="ZipEntry" line="240"/>
                        <declaration name="fileName" type="String" line="241"/>
                        <scope line="250"/>
                        <scope line="252">
                            <scope line="253"/>
                            <scope line="255"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="269">
                Writes the index to the specified OutputStream                
                <param>
                    out the output stream                    
                </param>
                <exception>
                    IOException if an I/O error has occurred                    
                </exception>
            </javadoc>
            <method name="write" type="void" line="275">
                <params>
                    <param name="out" type="OutputStream"/>
                </params>
                <comment line="282">
                                        
                </comment>
                <declaration name="bw" type="BufferedWriter" line="276"/>
                <scope line="280">
                    <scope line="281">
                        <declaration name="jar" type="String" line="283"/>
                        <declaration name="jarlist" type="LinkedList" line="285"/>
                        <scope line="286">
                            <declaration name="listitr" type="Iterator" line="287"/>
                            <scope line="288"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="299">
                Reads the index from the specified InputStream.                
                <param>
                    is the input stream                    
                </param>
                <exception>
                    IOException if an I/O error has occurred                    
                </exception>
            </javadoc>
            <method name="read" type="void" line="305">
                <params>
                    <param name="is" type="InputStream"/>
                </params>
                <comment line="311">
                                        
                </comment>
                <comment line="314">
                                        
                </comment>
                <declaration name="br" type="BufferedReader" line="306"/>
                <declaration name="line" type="String" line="308"/>
                <declaration name="currentJar" type="String" line="309"/>
                <declaration name="jars" type="Vector" line="312"/>
                <scope line="317">
                    <scope line="321"/>
                    <scope line="324">
                        <declaration name="name" type="String" line="325"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="334">
                Merges the current index into another index, taking into account
                  the relative path of the current index.                
                <param>
                    toIndex The destination index which the current index will
                      merge into.                    
                </param>
                <param>
                    path    The relative path of the this index to the destination
                      index.                    
                </param>
            </javadoc>
            <method name="merge" type="void" line="344">
                <params>
                    <param name="toIndex" type="JarIndex"/>
                    <param name="path" type="String"/>
                </params>
                <declaration name="itr" type="Iterator" line="345"/>
                <scope line="346">
                    <declaration name="e" type="Map.Entry" line="347"/>
                    <declaration name="packageName" type="String" line="348"/>
                    <declaration name="from_list" type="LinkedList" line="349"/>
                    <declaration name="listItr" type="Iterator" line="350"/>
                    <scope line="351">
                        <declaration name="jarName" type="String" line="352"/>
                        <scope line="353"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>