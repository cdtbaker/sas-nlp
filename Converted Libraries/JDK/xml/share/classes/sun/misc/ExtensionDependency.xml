<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.misc">
        <import package="java.io.File"/>
        <import package="java.io.FilenameFilter"/>
        <import package="java.io.IOException"/>
        <import package="java.io.FileNotFoundException"/>
        <import package="java.util.StringTokenizer"/>
        <import package="java.util.Vector"/>
        <import package="java.util.Enumeration"/>
        <import package="java.util.jar.JarFile"/>
        <import package="java.util.jar.Manifest"/>
        <import package="java.util.jar.Attributes"/>
        <import package="java.util.jar.Attributes.Name"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.security.PrivilegedExceptionAction"/>
        <import package="java.security.PrivilegedActionException"/>
        <import package="java.net.URL"/>
        <import package="java.net.MalformedURLException"/>
        <import package="sun.net.www.ParseUtil"/>
        <class name="ExtensionDependency" line="20">
            <javadoc line="20">
                &lt;p&gt;
                  This class checks dependent extensions a particular jar file may have
                  declared through its manifest attributes.
                  &lt;/p&gt;
                  Jar file declared dependent extensions through the extension-list
                  attribute. The extension-list contains a list of keys used to
                  fetch the other attributes describing the required extension.
                  If key is the extension key declared in the extension-list
                  attribute, the following describing attribute can be found in
                  the manifest :
                  key-Extension-Name:  (Specification package name)
                  key-Specification-Version: (Specification-Version)
                  key-Implementation-Version: (Implementation-Version)
                  key-Implementation-Vendor-Id: (Imlementation-Vendor-Id)
                  key-Implementation-Version: (Implementation version)
                  key-Implementation-URL: (URL to download the requested extension)
                  &lt;p&gt;
                  This class also maintain versioning consistency of installed
                  extensions dependencies declared in jar file manifest.
                  &lt;/p&gt;                
                <author>
                    Jerome Dochez                    
                </author>
            </javadoc>
            <declaration name="providers" type="Vector" line="44"/>
            <javadoc line="45">
                &lt;p&gt;
                  Register an ExtensionInstallationProvider. The provider is responsible
                  for handling the installation (upgrade) of any missing extensions.
                  &lt;/p&gt;                
                <param>
                    eip ExtensionInstallationProvider implementation                    
                </param>
            </javadoc>
            <method name="addExtensionInstallationProvider" type="void" line="52">
                <params>
                    <param name="eip" type="ExtensionInstallationProvider"/>
                </params>
                <scope line="53"/>
            </method>
            <javadoc line="58">
                &lt;p&gt;
                  Unregister a previously installed installation provider
                  &lt;/p&gt;                
            </javadoc>
            <method name="removeExtensionInstallationProvider" type="void" line="63">
                <params>
                    <param name="eip" type="ExtensionInstallationProvider"/>
                </params>
            </method>
            <javadoc line="66">
                &lt;p&gt;
                  Checks the dependencies of the jar file on installed extension.
                  &lt;/p&gt;                
                <param>
                    jarFile containing the attriutes declaring the dependencies                    
                </param>
            </javadoc>
            <method name="checkExtensionsDependencies" type="boolean" line="72">
                <params>
                    <param name="jar" type="JarFile"/>
                </params>
                <scope line="73"/>
                <scope line="76">
                    <declaration name="extDep" type="ExtensionDependency" line="77"/>
                </scope>
                <scope line="80"/>
            </method>
            <method name="checkExtensions" type="boolean" line="85">
                <params>
                    <param name="jar" type="JarFile"/>
                </params>
                <declaration name="man" type="Manifest" line="86"/>
                <scope line="87"/>
                <scope line="90"/>
                <scope line="93"/>
                <declaration name="result" type="boolean" line="96"/>
                <declaration name="attr" type="Attributes" line="97"/>
                <scope line="98">
                    <declaration name="value" type="String" line="99"/>
                    <scope line="100">
                        <declaration name="st" type="StringTokenizer" line="101"/>
                        <scope line="102">
                            <declaration name="extensionName" type="String" line="103"/>
                            <declaration name="extName" type="String" line="105"/>
                            <scope line="106"/>
                            <scope line="109">
                                <scope line="110"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="117"/>
                </scope>
            </method>
            <method name="checkExtension" type="boolean" line="123">
                <params>
                    <param name="extensionName" type="String"/>
                    <param name="attr" type="Attributes"/>
                </params>
                <declaration name="reqInfo" type="ExtensionInfo" line="127"/>
            </method>
            <method name="checkExtensionAgainstInstalled" type="boolean" line="130">
                <params>
                    <param name="extensionName" type="String"/>
                    <param name="attr" type="Attributes"/>
                </params>
                <declaration name="fExtension" type="File" line="131"/>
                <scope line="132">
                    <scope line="133"/>
                    <scope line="136"/>
                    <scope line="139"/>
                </scope>
                <scope line="144">
                    <declaration name="installedExts" type="File[]" line="145"/>
                    <scope line="146"/>
                    <scope line="149"/>
                    <scope line="153">
                        <scope line="154"/>
                        <scope line="157"/>
                        <scope line="160"/>
                    </scope>
                </scope>
            </method>
            <method name="checkExtensionAgainst" type="boolean" line="167">
                <params>
                    <param name="extensionName" type="String"/>
                    <param name="attr" type="Attributes"/>
                    <param name="file" type="File"/>
                </params>
                <declaration name="man" type="Manifest" line="169"/>
                <scope line="170">
                    <anonymous_class line="171">
                        <method name="run" type="Manifest" line="172">
                            <declaration name="jarFile" type="JarFile" line="174"/>
                        </method>
                    </anonymous_class>
                </scope>
                <scope line="180"/>
                <declaration name="reqInfo" type="ExtensionInfo" line="184"/>
                <declaration name="isCompatible" type="int" line="186"/>
                <declaration name="instInfo" type="ExtensionInfo" line="187"/>
                <scope line="188">
                    <declaration name="instAttr" type="Attributes" line="189"/>
                    <scope line="190"/>
                </scope>
            </method>
            <method name="installExtension" type="boolean" line="209">
                <params>
                    <param name="reqInfo" type="ExtensionInfo"/>
                    <param name="instInfo" type="ExtensionInfo"/>
                </params>
                <declaration name="currentProviders" type="Vector" line="210"/>
                <scope line="211"/>
                <scope line="214">
                    <declaration name="eip" type="ExtensionInstallationProvider" line="215"/>
                    <scope line="216">
                        <scope line="217">
                            <declaration name="cl" type="Launcher.ExtClassLoader" line="219"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="228">
                &lt;p&gt;
                  Checks if the extension, that is specified in the extension-list in
                  the applet jar manifest, is already installed (i.e. exists in the
                  extension directory).
                  &lt;/p&gt;                
                <param>
                    extensionName extension name in the extension-list                    
                </param>
                <return>
                    the extension if it exists in the extension directory                    
                </return>
            </javadoc>
            <method name="checkExtensionExists" type="File" line="237">
                <params>
                    <param name="extensionName" type="String"/>
                </params>
                <declaration name="extName" type="String" line="238"/>
                <declaration name="fileExt" type="String[]" line="239"/>
                <anonymous_class line="240">
                    <method name="run" type="File" line="241">
                        <scope line="242">
                            <declaration name="fExtension" type="File" line="243"/>
                            <declaration name="dirs" type="File[]" line="244"/>
                            <scope line="245">
                                <scope line="246">
                                    <scope line="247"/>
                                    <scope line="250"/>
                                    <scope line="254"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="261"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="269">
                &lt;p&gt;                
                <return>
                    the java.ext.dirs property as a list of directory
                      </p>                    
                </return>
            </javadoc>
            <method name="getExtDirs" type="File[]" line="274">
                <declaration name="s" type="String" line="275"/>
                <declaration name="dirs" type="File[]" line="276"/>
                <scope line="277">
                    <declaration name="st" type="StringTokenizer" line="278"/>
                    <declaration name="count" type="int" line="279"/>
                    <scope line="282"/>
                </scope>
                <scope line="287"/>
            </method>
            <method name="getExtFiles" type="File[]" line="294">
                <params>
                    <param name="dirs" type="File[]"/>
                </params>
                <declaration name="urls" type="Vector&lt;File&gt;" line="295"/>
                <scope line="296">
                    <declaration name="files" type="String[]" line="297"/>
                    <scope line="298">
                        <scope line="300">
                            <declaration name="f" type="File" line="301"/>
                        </scope>
                    </scope>
                </scope>
                <declaration name="ua" type="File[]" line="307"/>
            </method>
            <method name="getInstalledExtensions" type="File[]" line="312">
                <anonymous_class line="313">
                    <method name="run" type="File[]" line="314">
                        <scope line="315"/>
                        <scope line="318"/>
                    </method>
                </anonymous_class>
            </method>
            <method name="addNewExtensionsToClassLoader" type="Boolean" line="327">
                <params>
                    <param name="cl" type="Launcher.ExtClassLoader"/>
                </params>
                <scope line="328">
                    <declaration name="installedExts" type="File[]" line="329"/>
                    <scope line="330">
                        <declaration name="instFile" type="File" line="331"/>
                        <anonymous_class line="332">
                            <method name="run" type="URL" line="333">
                                <scope line="334"/>
                                <scope line="337"/>
                            </method>
                        </anonymous_class>
                        <declaration name="instURL" type="URL" line="332"/>
                        <scope line="344">
                            <declaration name="urls" type="URL[]" line="345"/>
                            <declaration name="found" type="boolean" line="346"/>
                            <scope line="347">
                                <scope line="349"/>
                            </scope>
                            <scope line="354"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="361"/>
                <scope line="364"/>
            </method>
            <declaration name="DEBUG" type="boolean" line="369"/>
            <method name="debug" type="void" line="370">
                <params>
                    <param name="s" type="String"/>
                </params>
                <scope line="371"/>
            </method>
            <method name="debugException" type="void" line="375">
                <params>
                    <param name="e" type="Throwable"/>
                </params>
                <scope line="376"/>
            </method>
        </class>
    </source>