<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.misc">
        <class name="Regexp" line="28">
            <comment line="38">
                regular expressions are carved into three regions: a constant string
                 prefix, a constant string suffix, and a series of floating strings in
                 between.  In the input regular expression, they are separated by s                
            </comment>
            <javadoc line="28">
                A class to represent a regular expression.  Only handles &apos;&apos;s.                
                <author>
                    James Gosling                    
                </author>
            </javadoc>
            <declaration name="ignoreCase" type="boolean" line="34"/>
            <javadoc line="34">
                if true then the matching process ignores case.                
            </javadoc>
            <declaration name="exp" type="String" line="42"/>
            <declaration name="prefix" type="String" line="43"/>
            <declaration name="exact" type="boolean" line="44"/>
            <declaration name="prefixLen" type="int" line="45"/>
            <declaration name="mids" type="String" line="46"/>
            <javadoc line="48">
                Create a new regular expression object.  The regular expression
                  is a series of constant strings separated by s.  For example:
                  &lt;dl&gt;
                  &lt;dt&gt;.gif       &lt;dd&gt;Matches any string that ends in &quot;.gif&quot;.
                  &lt;dt&gt;/tmp/      &lt;dd&gt;Matches any string that starts with &quot;/tmp/&quot;.
                  &lt;dt&gt;/tmp/.gif  &lt;dd&gt;Matches any string that starts with &quot;/tmp/&quot; and ends
                  with &quot;.gif&quot;.
                  &lt;dt&gt;/tmp/new.gif &lt;dd&gt;Matches any string that starts with &quot;/tmp/&quot;
                  and ends with &quot;.gif&quot; and has &quot;new&quot; somewhere in between.
                  &lt;/dl&gt;                
            </javadoc>
            <method name="Regexp" type="constructor" line="59">
                <params>
                    <param name="s" type="String"/>
                </params>
                <comment line="66">
                    no * s                    
                </comment>
                <declaration name="firstst" type="int" line="61"/>
                <declaration name="lastst" type="int" line="62"/>
                <scope line="63"/>
                <scope line="66">
                    <declaration name="nmids" type="int" line="77"/>
                    <declaration name="pos" type="int" line="78"/>
                    <scope line="79"/>
                    <scope line="84">
                        <scope line="87">
                            <declaration name="npos" type="int" line="89"/>
                            <scope line="90"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="100">
                Returns true iff the String s matches this regular expression.                
            </javadoc>
            <method name="matches" type="boolean" line="101">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <javadoc line="105">
                Returns true iff the substring of s from offset for len characters
                  matches this regular expression.                
            </javadoc>
            <method name="matches" type="boolean" line="107">
                <params>
                    <param name="s" type="String"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="nmids" type="int" line="124"/>
                <declaration name="spos" type="int" line="125"/>
                <declaration name="limit" type="int" line="126"/>
                <scope line="127">
                    <declaration name="ms" type="String" line="128"/>
                    <declaration name="ml" type="int" line="129"/>
                </scope>
            </method>
        </class>
    </source>