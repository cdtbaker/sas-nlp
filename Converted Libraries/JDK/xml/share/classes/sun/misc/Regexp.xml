<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.misc">
        <class name="Regexp" line="2">
            <javadoc line="2">
                A class to represent a regular expression.  Only handles &apos;&apos;s.                
                <author>
                    James Gosling                    
                </author>
            </javadoc>
            <declaration name="ignoreCase" type="boolean" line="7"/>
            <javadoc line="7">
                if true then the matching process ignores case.                
            </javadoc>
            <declaration name="exp" type="String" line="11"/>
            <declaration name="prefix" type="String" line="12"/>
            <declaration name="exact" type="boolean" line="13"/>
            <declaration name="prefixLen" type="int" line="14"/>
            <declaration name="mids" type="String" line="15"/>
            <javadoc line="16">
                Create a new regular expression object.  The regular expression
                  is a series of constant strings separated by s.  For example:
                  &lt;dl&gt;
                  &lt;dt&gt;.gif       &lt;dd&gt;Matches any string that ends in &quot;.gif&quot;.
                  &lt;dt&gt;/tmp/      &lt;dd&gt;Matches any string that starts with &quot;/tmp/&quot;.
                  &lt;dt&gt;/tmp/.gif  &lt;dd&gt;Matches any string that starts with &quot;/tmp/&quot; and ends
                  with &quot;.gif&quot;.
                  &lt;dt&gt;/tmp/new.gif &lt;dd&gt;Matches any string that starts with &quot;/tmp/&quot;
                  and ends with &quot;.gif&quot; and has &quot;new&quot; somewhere in between.
                  &lt;/dl&gt;                
            </javadoc>
            <method name="Regexp" type="constructor" line="28">
                <params>
                    <param name="s" type="String"/>
                </params>
                <declaration name="firstst" type="int" line="30"/>
                <declaration name="lastst" type="int" line="31"/>
                <scope line="32"/>
                <scope line="36">
                    <declaration name="nmids" type="int" line="43"/>
                    <declaration name="pos" type="int" line="44"/>
                    <scope line="45"/>
                    <scope line="50">
                        <scope line="53">
                            <declaration name="npos" type="int" line="55"/>
                            <scope line="56"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="65">
                Returns true iff the String s matches this regular expression.                
            </javadoc>
            <method name="matches" type="boolean" line="68">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <javadoc line="71">
                Returns true iff the substring of s from offset for len characters
                  matches this regular expression.                
            </javadoc>
            <method name="matches" type="boolean" line="75">
                <params>
                    <param name="s" type="String"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="nmids" type="int" line="80"/>
                <declaration name="spos" type="int" line="81"/>
                <declaration name="limit" type="int" line="82"/>
                <scope line="83">
                    <declaration name="ms" type="String" line="84"/>
                    <declaration name="ml" type="int" line="85"/>
                </scope>
            </method>
        </class>
    </source>