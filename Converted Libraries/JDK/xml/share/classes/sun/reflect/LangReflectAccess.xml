<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.reflect">
        <import package="java.lang.reflect"/>
        <interface name="LangReflectAccess">
            <comment line="97">
                                
            </comment>
            <comment line="98">
                Copying routines, needed to quickly fabricate new Field,                
            </comment>
            <comment line="99">
                Method, and Constructor objects from templates                
            </comment>
            <comment line="100">
                                
            </comment>
            <javadoc line="30">
                An interface which gives privileged packages Java-level access to
                  internals of java.lang.reflect.                
            </javadoc>
            <method name="newField" type="Field" line="34"/>
            <javadoc line="34">
                Creates a new java.lang.reflect.Field. Access checks as per
                  java.lang.reflect.AccessibleObject are not overridden.                
            </javadoc>
            <method name="newMethod" type="Method" line="44"/>
            <javadoc line="44">
                Creates a new java.lang.reflect.Method. Access checks as per
                  java.lang.reflect.AccessibleObject are not overridden.                
            </javadoc>
            <method name="newConstructor" type="Constructor<T>" line="58"/>
            <javadoc line="58">
                Creates a new java.lang.reflect.Constructor. Access checks as
                  per java.lang.reflect.AccessibleObject are not overridden.                
            </javadoc>
            <method name="getMethodAccessor" type="MethodAccessor" line="69"/>
            <javadoc line="69">
                Gets the MethodAccessor object for a java.lang.reflect.Method                
            </javadoc>
            <method name="setMethodAccessor" type="void" line="72"/>
            <javadoc line="72">
                Sets the MethodAccessor object for a java.lang.reflect.Method                
            </javadoc>
            <method name="getConstructorAccessor" type="ConstructorAccessor" line="75"/>
            <javadoc line="75">
                Gets the ConstructorAccessor object for a
                  java.lang.reflect.Constructor                
            </javadoc>
            <method name="setConstructorAccessor" type="void" line="79"/>
            <javadoc line="79">
                Sets the ConstructorAccessor object for a
                  java.lang.reflect.Constructor                
            </javadoc>
            <method name="getConstructorSlot" type="int" line="84"/>
            <javadoc line="84">
                Gets the &quot;slot&quot; field from a Constructor (used for serialization)                
            </javadoc>
            <method name="getConstructorSignature" type="String" line="87"/>
            <javadoc line="87">
                Gets the &quot;signature&quot; field from a Constructor (used for serialization)                
            </javadoc>
            <method name="getConstructorAnnotations" type="byte[]" line="90"/>
            <javadoc line="90">
                Gets the &quot;annotations&quot; field from a Constructor (used for serialization)                
            </javadoc>
            <method name="getConstructorParameterAnnotations" type="byte[]" line="93"/>
            <javadoc line="93">
                Gets the &quot;parameterAnnotations&quot; field from a Constructor (used for serialization)                
            </javadoc>
            <method name="copyMethod" type="Method" line="101"/>
            <javadoc line="101">
                Makes a &quot;child&quot; copy of a Method                
            </javadoc>
            <method name="copyField" type="Field" line="104"/>
            <javadoc line="104">
                Makes a &quot;child&quot; copy of a Field                
            </javadoc>
            <method name="copyConstructor" type="Constructor<T>" line="107"/>
            <javadoc line="107">
                Makes a &quot;child&quot; copy of a Constructor                
            </javadoc>
        </interface>
    </source>