<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.reflect.generics.repository">
        <import package="java.lang.reflect.TypeVariable"/>
        <import package="sun.reflect.generics.factory.GenericsFactory"/>
        <import package="sun.reflect.generics.tree.FormalTypeParameter"/>
        <import package="sun.reflect.generics.tree.Signature"/>
        <import package="sun.reflect.generics.visitor.Reifier"/>
        <class name="GenericDeclRepository" line="36">
            <type_params>
                <type_param name="S"/>
            </type_params>
            <extends class="AbstractRepository">
                <type_params>
                    <type_param name="S"/>
                </type_params>
            </extends>
            <comment line="46">
                caches the formal type parameters                
            </comment>
            <comment line="52">
                public API                
            </comment>
            <comment line="53">
                When queried for a particular piece of type information, the
                 general pattern is to consult the corresponding cached value.
                 If the corresponding field is non-null, it is returned.
                 If not, it is created lazily. This is done by selecting the appropriate
                 part of the tree and transforming it into a reflective object
                 using a visitor.
                 a visitor, which is created by feeding it the factory
                 with which the repository was created.                
            </comment>
            <javadoc line="36">
                This class represents the generic type information for a generic
                  declaration.
                  The code is not dependent on a particular reflective implementation.
                  It is designed to be used unchanged by at least core reflection and JDI.                
            </javadoc>
            <declaration name="typeParams" type="TypeVariable[]" line="45"/>
            <method name="GenericDeclRepository" type="constructor" line="47">
                <params>
                    <param name="rawSig" type="String"/>
                    <param name="f" type="GenericsFactory"/>
                </params>
            </method>
            <javadoc line="63">
                Return the formal type parameters of this generic declaration.                
                <return>
                    the formal type parameters of this generic declaration                    
                </return>
            </javadoc>
            <method name="getTypeParameters" type="TypeVariable[]" line="67">
                <comment line="68">
                                        
                </comment>
                <comment line="69">
                    lazily initialize type parameters                    
                </comment>
                <comment line="70">
                    first, extract type parameter subtree(s) from AST                    
                </comment>
                <comment line="72">
                    create array to store reified subtree(s)                    
                </comment>
                <comment line="74">
                    reify all subtrees                    
                </comment>
                <comment line="76">
                    obtain visitor                    
                </comment>
                <comment line="77">
                    reify subtree                    
                </comment>
                <comment line="78">
                    extract result from visitor and store it                    
                </comment>
                <comment line="81">
                    cache overall result                    
                </comment>
                <comment line="83">
                    return cached result                    
                </comment>
                <scope line="68">
                    <declaration name="ftps" type="FormalTypeParameter[]" line="70"/>
                    <declaration name="tps" type="TypeVariable[]" line="72"/>
                    <scope line="74">
                        <declaration name="r" type="Reifier" line="75"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>