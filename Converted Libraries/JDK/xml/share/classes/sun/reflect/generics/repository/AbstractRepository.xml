<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.reflect.generics.repository">
        <import package="sun.reflect.generics.factory.GenericsFactory"/>
        <import package="sun.reflect.generics.tree.Tree"/>
        <import package="sun.reflect.generics.visitor.Reifier"/>
        <class name="AbstractRepository" line="5">
            <type_params>
                <type_param name="T"/>
            </type_params>
            <javadoc line="5">
                Abstract superclass for representing the generic type information for
                  a reflective entity.
                  The code is not dependent on a particular reflective implementation.
                  It is designed to be used unchanged by at least core reflection and JDI.                
            </javadoc>
            <declaration name="factory" type="GenericsFactory" line="12"/>
            <declaration name="tree" type="T" line="13"/>
            <method name="getFactory" type="GenericsFactory" line="14"/>
            <javadoc line="17">
                Accessor for &lt;tt&gt;tree&lt;/tt&gt;.                
                <return>
                    the cached AST this repository holds                    
                </return>
            </javadoc>
            <method name="getTree" type="T" line="21"/>
            <javadoc line="24">
                Returns a &lt;tt&gt;Reifier&lt;/tt&gt; used to convert parts of the
                  AST into reflective objects.                
                <return>
                    a <tt>Reifier</tt> used to convert parts of the
                      AST into reflective objects                    
                </return>
            </javadoc>
            <method name="getReifier" type="Reifier" line="30"/>
            <javadoc line="33">
                Constructor. Should only be used by subclasses. Concrete subclasses
                  should make their constructors private and provide public factory
                  methods.                
                <param>
                    rawSig - the generic signature of the reflective object
                      that this repository is servicing                    
                </param>
                <param>
                    f - a factory that will provide instances of reflective
                      objects when this repository converts its AST                    
                </param>
            </javadoc>
            <method name="AbstractRepository" type="constructor" line="42">
                <params>
                    <param name="rawSig" type="String"/>
                    <param name="f" type="GenericsFactory"/>
                </params>
            </method>
            <method name="parse" type="T" line="46"/>
            <javadoc line="46">
                Returns the AST for the genric type info of this entity.                
                <param>
                    s - a string representing the generic signature of this
                      entity                    
                </param>
                <return>
                    the AST for the generic type info of this entity.                    
                </return>
            </javadoc>
        </class>
    </source>