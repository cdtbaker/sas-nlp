<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.reflect.generics.scope">
        <import package="java.lang.reflect.Constructor"/>
        <import package="java.lang.reflect.Method"/>
        <class name="ClassScope" line="32">
            <extends class="AbstractScope">
                <type_params>
                    <type_param name="Class<?>"/>
                </type_params>
            </extends>
            <comment line="39">
                constructor is private to enforce use of factory method                
            </comment>
            <implements interface="Scope"/>
            <javadoc line="32">
                This class represents the scope containing the type variables of
                  a class.                
            </javadoc>
            <method name="ClassScope" type="constructor" line="39">
                <params>
                    <param name="c" type="Class<?>"/>
                </params>
            </method>
            <javadoc line="43">
                Overrides the abstract method in the superclass.                
                <return>
                    the enclosing scope                    
                </return>
            </javadoc>
            <method name="computeEnclosingScope" type="Scope" line="47">
                <comment line="52">
                    Receiver is a local or anonymous class enclosed in a                    
                </comment>
                <comment line="53">
                    method.                    
                </comment>
                <comment line="58">
                    Receiver is a local or anonymous class enclosed in a                    
                </comment>
                <comment line="59">
                    constructor.                    
                </comment>
                <comment line="63">
                    if there is a declaring class, recvr is a member class                    
                </comment>
                <comment line="64">
                    and its enclosing scope is that of the declaring class                    
                </comment>
                <comment line="66">
                    Receiver is a local class, an anonymous class, or a                    
                </comment>
                <comment line="67">
                    member class (static or not).                    
                </comment>
                <comment line="70">
                    otherwise, recvr is a top level class, and it has no real                    
                </comment>
                <comment line="71">
                    enclosing scope.                    
                </comment>
                <declaration name="receiver" type="Class&lt;?&gt;" line="48"/>
                <declaration name="m" type="Method" line="50"/>
                <declaration name="cnstr" type="Constructor&lt;?&gt;" line="56"/>
                <declaration name="c" type="Class&lt;?&gt;" line="62"/>
            </method>
            <javadoc line="75">
                Factory method. Takes a &lt;tt&gt;Class&lt;/tt&gt; object and creates a
                  scope for it.                
                <param>
                    c - a Class whose scope we want to obtain                    
                </param>
                <return>
                    The type-variable scope for the class c                    
                </return>
            </javadoc>
            <method name="make" type="ClassScope" line="81">
                <params>
                    <param name="c" type="Class<?>"/>
                </params>
            </method>
        </class>
    </source>