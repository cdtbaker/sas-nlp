<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.reflect.generics.repository">
        <import package="sun.reflect.generics.factory.GenericsFactory"/>
        <import package="sun.reflect.generics.tree.ClassSignature"/>
        <import package="sun.reflect.generics.tree.TypeTree"/>
        <import package="sun.reflect.generics.visitor.Reifier"/>
        <import package="sun.reflect.generics.parser.SignatureParser"/>
        <import package="java.lang.reflect.Type"/>
        <class name="ClassRepository" line="8">
            <extends class="GenericDeclRepository">
                <type_params>
                    <type_param name="ClassSignature"/>
                </type_params>
            </extends>
            <javadoc line="8">
                This class represents the generic type information for a class.
                  The code is not dependent on a particular reflective implementation.
                  It is designed to be used unchanged by at least core reflection and JDI.                
            </javadoc>
            <declaration name="superclass" type="Type" line="14"/>
            <declaration name="superInterfaces" type="Type[]" line="15"/>
            <method name="ClassRepository" type="constructor" line="16">
                <params>
                    <param name="rawSig" type="String"/>
                    <param name="f" type="GenericsFactory"/>
                </params>
            </method>
            <method name="parse" type="ClassSignature" line="19">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <javadoc line="22">
                Static factory method.                
                <param>
                    rawSig - the generic signature of the reflective object
                      that this repository is servicing                    
                </param>
                <param>
                    f - a factory that will provide instances of reflective
                      objects when this repository converts its AST                    
                </param>
                <return>
                    a &lt;tt&gt;ClassRepository&lt;/tt&gt; that manages the generic type
                      information represented in the signature &lt;tt&gt;rawSig&lt;/tt&gt;                    
                </return>
            </javadoc>
            <method name="make" type="ClassRepository" line="31">
                <params>
                    <param name="rawSig" type="String"/>
                    <param name="f" type="GenericsFactory"/>
                </params>
            </method>
            <method name="getSuperclass" type="Type" line="34">
                <scope line="35">
                    <declaration name="r" type="Reifier" line="36"/>
                </scope>
            </method>
            <method name="getSuperInterfaces" type="Type[]" line="42">
                <scope line="43">
                    <declaration name="ts" type="TypeTree[]" line="44"/>
                    <declaration name="sis" type="Type[]" line="45"/>
                    <scope line="46">
                        <declaration name="r" type="Reifier" line="47"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>