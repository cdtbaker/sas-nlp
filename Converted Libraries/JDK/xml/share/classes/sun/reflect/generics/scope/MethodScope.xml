<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.reflect.generics.scope">
        <import package="java.lang.reflect.Method"/>
        <class name="MethodScope" line="31">
            <extends class="AbstractScope">
                <type_params>
                    <type_param name="Method"/>
                </type_params>
            </extends>
            <comment line="38">
                constructor is private to enforce use of factory method                
            </comment>
            <comment line="43">
                utility method; computes enclosing class, from which we can
                 derive enclosing scope.                
            </comment>
            <javadoc line="31">
                This class represents the scope containing the type variables of
                  a method.                
            </javadoc>
            <method name="MethodScope" type="constructor" line="38">
                <params>
                    <param name="m" type="Method"/>
                </params>
            </method>
            <method name="getEnclosingClass" type="Class<?>" line="44"/>
            <javadoc line="48">
                Overrides the abstract method in the superclass.                
                <return>
                    the enclosing scope                    
                </return>
            </javadoc>
            <method name="computeEnclosingScope" type="Scope" line="52">
                <comment line="54">
                    the enclosing scope of a (generic) method is the scope of the
                     class in which it was declared.                    
                </comment>
            </method>
            <javadoc line="58">
                Factory method. Takes a &lt;tt&gt;Method&lt;/tt&gt; object and creates a
                  scope for it.                
                <param>
                    m - A Method whose scope we want to obtain                    
                </param>
                <return>
                    The type-variable scope for the method m                    
                </return>
            </javadoc>
            <method name="make" type="MethodScope" line="64">
                <params>
                    <param name="m" type="Method"/>
                </params>
            </method>
        </class>
    </source>