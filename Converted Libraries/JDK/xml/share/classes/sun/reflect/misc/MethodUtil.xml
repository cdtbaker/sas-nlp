<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.reflect.misc">
        <import package="java.security.AllPermission"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PermissionCollection"/>
        <import package="java.security.SecureClassLoader"/>
        <import package="java.security.PrivilegedExceptionAction"/>
        <import package="java.security.CodeSource"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.BufferedInputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.net.URL"/>
        <import package="java.net.URLConnection"/>
        <import package="java.net.HttpURLConnection"/>
        <import package="java.lang.reflect.Method"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.lang.reflect.AccessibleObject"/>
        <import package="java.lang.reflect.Modifier"/>
        <import package="java.util.Collection"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Map"/>
        <import package="sun.misc.IOUtils"/>
        <import package="sun.net.www.ParseUtil"/>
        <import package="sun.security.util.SecurityConstants"/>
        <class name="Trampoline" line="24">
            <method name="invoke" type="Object" line="25">
                <params>
                    <param name="m" type="Method"/>
                    <param name="obj" type="Object"/>
                    <param name="params" type="Object[]"/>
                </params>
            </method>
        </class>
        <class name="MethodUtil" line="29">
            <extends class="SecureClassLoader"/>
            <declaration name="MISC_PKG" type="String" line="30"/>
            <declaration name="TRAMPOLINE" type="String" line="31"/>
            <declaration name="bounce" type="Method" line="32"/>
            <method name="MethodUtil" type="constructor" line="33"/>
            <method name="getMethod" type="Method" line="36">
                <params>
                    <param name="cls" type="Class&lt;?&gt;"/>
                    <param name="name" type="String"/>
                    <param name="args" type="Class[]"/>
                </params>
            </method>
            <method name="getMethods" type="Method[]" line="40">
                <params>
                    <param name="cls" type="Class"/>
                </params>
            </method>
            <method name="getPublicMethods" type="Method[]" line="44">
                <params>
                    <param name="cls" type="Class"/>
                </params>
                <scope line="45"/>
                <declaration name="sigs" type="Map&amp;lt;Signature,Method&amp;gt;" line="48"/>
                <scope line="49">
                    <declaration name="done" type="boolean" line="50"/>
                    <scope line="51"/>
                </scope>
            </method>
            <method name="getInterfaceMethods" type="void" line="59">
                <params>
                    <param name="cls" type="Class"/>
                    <param name="sigs" type="Map&lt;Signature,Method&gt;"/>
                </params>
                <declaration name="intfs" type="Class[]" line="60"/>
                <scope line="61">
                    <declaration name="intf" type="Class" line="62"/>
                    <declaration name="done" type="boolean" line="63"/>
                    <scope line="64"/>
                </scope>
            </method>
            <method name="getInternalPublicMethods" type="boolean" line="69">
                <params>
                    <param name="cls" type="Class"/>
                    <param name="sigs" type="Map&lt;Signature,Method&gt;"/>
                </params>
                <declaration name="methods" type="Method[]" line="70"/>
                <scope line="71">
                    <scope line="72"/>
                    <scope line="75"/>
                </scope>
                <scope line="80"/>
                <declaration name="done" type="boolean" line="83"/>
                <scope line="84">
                    <declaration name="dc" type="Class" line="85"/>
                    <scope line="86"/>
                </scope>
                <scope line="91">
                    <scope line="92"/>
                </scope>
                <scope line="96">
                    <scope line="97">
                        <declaration name="dc" type="Class" line="98"/>
                        <scope line="99"/>
                    </scope>
                </scope>
            </method>
            <method name="addMethod" type="void" line="106">
                <params>
                    <param name="sigs" type="Map&lt;Signature,Method&gt;"/>
                    <param name="method" type="Method"/>
                </params>
                <declaration name="signature" type="Signature" line="107"/>
                <scope line="108"/>
                <scope line="111">
                    <declaration name="old" type="Method" line="112"/>
                    <scope line="113"/>
                </scope>
            </method>
            <class name="Signature" line="118">
                <javadoc line="118">
                    A class that represents the unique elements of a method that will be a
                      key in the method cache.                    
                </javadoc>
                <declaration name="methodName" type="String" line="123"/>
                <declaration name="argClasses" type="Class[]" line="124"/>
                <declaration name="hashCode" type="int" line="125"/>
                <method name="Signature" type="constructor" line="126">
                    <params>
                        <param name="m" type="Method"/>
                    </params>
                </method>
                <method name="equals" type="boolean" line="130">
                    <params>
                        <param name="o2" type="Object"/>
                    </params>
                    <scope line="131"/>
                    <declaration name="that" type="Signature" line="134"/>
                    <scope line="135"/>
                    <scope line="138"/>
                    <scope line="141">
                        <scope line="142"/>
                    </scope>
                </method>
                <javadoc line="148">
                    Hash code computed using algorithm suggested in
                      Effective Java, Item 8.                    
                </javadoc>
                <method name="hashCode" type="int" line="152">
                    <scope line="153">
                        <declaration name="result" type="int" line="154"/>
                        <scope line="156">
                            <scope line="157"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <method name="invoke" type="Object" line="166">
                <params>
                    <param name="m" type="Method"/>
                    <param name="obj" type="Object"/>
                    <param name="params" type="Object[]"/>
                </params>
                <scope line="168"/>
                <scope line="171">
                    <declaration name="t" type="Throwable" line="172"/>
                    <scope line="173"/>
                    <scope line="176"/>
                    <scope line="179"/>
                    <scope line="182"/>
                    <scope line="185"/>
                </scope>
                <scope line="189"/>
            </method>
            <method name="getTrampoline" type="Method" line="193">
                <scope line="194">
                    <anonymous_class line="195">
                        <method name="run" type="Method" line="196">
                            <declaration name="t" type="Class&amp;lt;?&amp;gt;" line="197"/>
                            <declaration name="types" type="Class[]" line="198"/>
                            <declaration name="b" type="Method" line="199"/>
                        </method>
                    </anonymous_class>
                </scope>
                <scope line="206"/>
            </method>
            <method name="loadClass" type="Class" line="210">
                <params>
                    <param name="name" type="String"/>
                    <param name="resolve" type="boolean"/>
                </params>
                <declaration name="c" type="Class" line="212"/>
                <scope line="213">
                    <scope line="214"/>
                    <scope line="217"/>
                    <scope line="219"/>
                </scope>
                <scope line="223"/>
            </method>
            <method name="findClass" type="Class" line="228">
                <params>
                    <param name="name" type="String"/>
                </params>
                <scope line="229"/>
                <declaration name="path" type="String" line="232"/>
                <declaration name="res" type="URL" line="233"/>
                <scope line="234">
                    <scope line="235"/>
                    <scope line="238"/>
                </scope>
                <scope line="242"/>
            </method>
            <method name="defineClass" type="Class" line="246">
                <params>
                    <param name="name" type="String"/>
                    <param name="url" type="URL"/>
                </params>
                <declaration name="b" type="byte[]" line="247"/>
                <declaration name="cs" type="CodeSource" line="248"/>
                <scope line="249"/>
            </method>
            <method name="getBytes" type="byte[]" line="254">
                <params>
                    <param name="url" type="URL"/>
                </params>
                <declaration name="uc" type="URLConnection" line="255"/>
                <scope line="256">
                    <declaration name="huc" type="java.net.HttpURLConnection" line="257"/>
                    <declaration name="code" type="int" line="258"/>
                    <scope line="259"/>
                </scope>
                <declaration name="len" type="int" line="263"/>
                <declaration name="in" type="InputStream" line="264"/>
                <declaration name="b" type="byte[]" line="265"/>
                <scope line="266"/>
                <scope line="269"/>
            </method>
            <method name="getPermissions" type="PermissionCollection" line="274">
                <params>
                    <param name="codesource" type="CodeSource"/>
                </params>
                <declaration name="perms" type="PermissionCollection" line="275"/>
            </method>
            <method name="getTrampolineClass" type="Class" line="279">
                <scope line="280"/>
                <scope line="283"/>
            </method>
        </class>
    </source>