<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.reflect">
        <import package="java.lang.reflect"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="sun.misc.Unsafe"/>
        <class name="MethodAccessorGenerator" line="6">
            <extends class="AccessorGenerator"/>
            <javadoc line="6">
                Generator for sun.reflect.MethodAccessor and
                  sun.reflect.ConstructorAccessor objects using bytecodes to
                  implement reflection. A java.lang.reflect.Method or
                  java.lang.reflect.Constructor object can delegate its invoke or
                  newInstance method to an accessor using native code or to one
                  generated by this class. (Methods and Constructors were merged
                  together in this class to ensure maximum code sharing.)                
            </javadoc>
            <declaration name="NUM_BASE_CPOOL_ENTRIES" type="short" line="16"/>
            <declaration name="NUM_METHODS" type="short" line="17"/>
            <declaration name="NUM_SERIALIZATION_CPOOL_ENTRIES" type="short" line="18"/>
            <declaration name="methodSymnum" type="int" line="19"/>
            <declaration name="constructorSymnum" type="int" line="20"/>
            <declaration name="serializationConstructorSymnum" type="int" line="21"/>
            <declaration name="declaringClass" type="Class" line="22"/>
            <declaration name="parameterTypes" type="Class[]" line="23"/>
            <declaration name="returnType" type="Class" line="24"/>
            <declaration name="isConstructor" type="boolean" line="25"/>
            <declaration name="forSerialization" type="boolean" line="26"/>
            <declaration name="targetMethodRef" type="short" line="27"/>
            <declaration name="invokeIdx" type="short" line="28"/>
            <declaration name="invokeDescriptorIdx" type="short" line="29"/>
            <declaration name="nonPrimitiveParametersBaseIdx" type="short" line="30"/>
            <method name="MethodAccessorGenerator" type="constructor" line="31"/>
            <javadoc line="33">
                This routine is not thread-safe                
            </javadoc>
            <method name="generateMethod" type="MethodAccessor" line="36">
                <params>
                    <param name="declaringClass" type="Class"/>
                    <param name="name" type="String"/>
                    <param name="parameterTypes" type="Class[]"/>
                    <param name="returnType" type="Class"/>
                    <param name="checkedExceptions" type="Class[]"/>
                    <param name="modifiers" type="int"/>
                </params>
            </method>
            <javadoc line="39">
                This routine is not thread-safe                
            </javadoc>
            <method name="generateConstructor" type="ConstructorAccessor" line="42">
                <params>
                    <param name="declaringClass" type="Class"/>
                    <param name="parameterTypes" type="Class[]"/>
                    <param name="checkedExceptions" type="Class[]"/>
                    <param name="modifiers" type="int"/>
                </params>
            </method>
            <javadoc line="45">
                This routine is not thread-safe                
            </javadoc>
            <method name="generateSerializationConstructor" type="SerializationConstructorAccessorImpl" line="48">
                <params>
                    <param name="declaringClass" type="Class"/>
                    <param name="parameterTypes" type="Class[]"/>
                    <param name="checkedExceptions" type="Class[]"/>
                    <param name="modifiers" type="int"/>
                    <param name="targetConstructorClass" type="Class"/>
                </params>
            </method>
            <javadoc line="51">
                This routine is not thread-safe                
            </javadoc>
            <method name="generate" type="MagicAccessorImpl" line="54">
                <params>
                    <param name="declaringClass" type="Class"/>
                    <param name="name" type="String"/>
                    <param name="parameterTypes" type="Class[]"/>
                    <param name="returnType" type="Class"/>
                    <param name="checkedExceptions" type="Class[]"/>
                    <param name="modifiers" type="int"/>
                    <param name="isConstructor" type="boolean"/>
                    <param name="forSerialization" type="boolean"/>
                    <param name="serializationTargetClass" type="Class"/>
                </params>
                <declaration name="vec" type="ByteVector" line="55"/>
                <declaration name="numCPEntries" type="short" line="64"/>
                <declaration name="usesPrimitives" type="boolean" line="65"/>
                <scope line="66"/>
                <scope line="69"/>
                <declaration name="generatedName" type="String" line="74"/>
                <scope line="78">
                    <scope line="79"/>
                    <scope line="82"/>
                </scope>
                <scope line="86"/>
                <declaration name="serializationTargetClassIdx" type="short" line="94"/>
                <scope line="95"/>
                <scope line="103"/>
                <scope line="106">
                    <scope line="107"/>
                    <scope line="110"/>
                </scope>
                <scope line="115"/>
                <scope line="118"/>
                <scope line="122"/>
                <scope line="125"/>
                <scope line="130">
                    <declaration name="c" type="Class" line="131"/>
                    <scope line="132"/>
                </scope>
                <scope line="138"/>
                <scope line="141"/>
                <declaration name="bytes" type="byte[]" line="154"/>
                <anonymous_class line="155">
                    <method name="run" type="MagicAccessorImpl" line="156">
                        <scope line="157"/>
                        <scope line="160"/>
                        <scope line="163"/>
                    </method>
                </anonymous_class>
            </method>
            <javadoc line="170">
                This emits the code for either invoke() or newInstance()                
            </javadoc>
            <method name="emitInvoke" type="void" line="173">
                <scope line="174"/>
                <declaration name="cb" type="ClassFileAssembler" line="177"/>
                <scope line="178"/>
                <scope line="181"/>
                <declaration name="illegalArgStartPC" type="short" line="184"/>
                <scope line="185"/>
                <scope line="189">
                    <scope line="190"/>
                    <scope line="194">
                        <declaration name="l" type="Label" line="196"/>
                    </scope>
                </scope>
                <declaration name="successLabel" type="Label" line="208"/>
                <scope line="209">
                    <scope line="210"/>
                    <scope line="213"/>
                </scope>
                <scope line="218"/>
                <scope line="221"/>
                <declaration name="paramTypeCPIdx" type="short" line="232"/>
                <declaration name="nextParamLabel" type="Label" line="233"/>
                <declaration name="count" type="byte" line="234"/>
                <scope line="235">
                    <declaration name="paramType" type="Class" line="236"/>
                    <scope line="238"/>
                    <scope line="242"/>
                    <scope line="245"/>
                    <scope line="250">
                        <scope line="251"/>
                        <scope line="254"/>
                        <declaration name="l" type="Label" line="257"/>
                        <scope line="259">
                            <declaration name="c" type="Class" line="260"/>
                            <scope line="261">
                                <scope line="262"/>
                                <scope line="265"/>
                                <scope line="268"/>
                                <scope line="274"/>
                                <scope line="277"/>
                            </scope>
                        </scope>
                        <scope line="286"/>
                    </scope>
                    <scope line="295"/>
                </scope>
                <scope line="300"/>
                <declaration name="invokeStartPC" type="short" line="303"/>
                <scope line="304"/>
                <scope line="307">
                    <scope line="308"/>
                    <scope line="311">
                        <scope line="312"/>
                        <scope line="315"/>
                    </scope>
                </scope>
                <declaration name="invokeEndPC" type="short" line="320"/>
                <scope line="321">
                    <scope line="322"/>
                    <scope line="325"/>
                </scope>
                <declaration name="classCastHandler" type="short" line="330"/>
                <declaration name="invocationTargetHandler" type="short" line="338"/>
                <declaration name="exc" type="ClassFileAssembler" line="345"/>
            </method>
            <method name="usesPrimitiveTypes" type="boolean" line="360">
                <scope line="361"/>
                <scope line="364">
                    <scope line="365"/>
                </scope>
            </method>
            <method name="numNonPrimitiveParameterTypes" type="int" line="371">
                <declaration name="num" type="int" line="372"/>
                <scope line="373">
                    <scope line="374"/>
                </scope>
            </method>
            <method name="isInterface" type="boolean" line="380"/>
            <method name="buildInternalSignature" type="String" line="383">
                <declaration name="buf" type="StringBuffer" line="384"/>
                <scope line="386"/>
            </method>
            <method name="generateName" type="String" line="393">
                <params>
                    <param name="isConstructor" type="boolean"/>
                    <param name="forSerialization" type="boolean"/>
                </params>
                <scope line="394">
                    <scope line="395">
                        <declaration name="num" type="int" line="396"/>
                    </scope>
                    <scope line="399">
                        <declaration name="num" type="int" line="400"/>
                    </scope>
                </scope>
                <scope line="404">
                    <declaration name="num" type="int" line="405"/>
                </scope>
            </method>
        </class>
    </source>