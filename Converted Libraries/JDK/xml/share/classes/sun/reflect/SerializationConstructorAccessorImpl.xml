<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.reflect">
        <class name="SerializationConstructorAccessorImpl" line="28">
            <extends class="ConstructorAccessorImpl"/>
            <javadoc line="28">
                &lt;P&gt; Java serialization (in java.io) expects to be able to
                  instantiate a class and invoke a no-arg constructor of that
                  class&apos;s first non-Serializable superclass. This is not a valid
                  operation according to the VM specification; one can not (for
                  classes A and B, where B is a subclass of A) write &quot;new B;
                  invokespecial A()&quot; without getting a verification error. &lt;/P&gt;
                  &lt;P&gt; In all other respects, the bytecode-based reflection framework
                  can be reused for this purpose. This marker class was originally
                  known to the VM and verification disabled for it and all
                  subclasses, but the bug fix for 4486457 necessitated disabling
                  verification for all of the dynamically-generated bytecodes
                  associated with reflection. This class has been left in place to
                  make future debugging easier. &lt;/P&gt;                
            </javadoc>
        </class>
    </source>