<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.text.normalizer">
        <import package="java.text.ParsePosition"/>
        <interface name="SymbolTable">
            <javadoc line="3">
                An interface that defines both lookup protocol and parsing of
                  symbolic names.
                  &lt;p&gt;A symbol table maintains two kinds of mappings.  The first is
                  between symbolic names and their values.  For example, if the
                  variable with the name &quot;start&quot; is set to the value &quot;alpha&quot;
                  (perhaps, though not necessarily, through an expression such as
                  &quot;$start=alpha&quot;), then the call lookup(&quot;start&quot;) will return the
                  char[] array [&apos;a&apos;, &apos;l&apos;, &apos;p&apos;, &apos;h&apos;, &apos;a&apos;].
                  &lt;p&gt;The second kind of mapping is between character values and
                  UnicodeMatcher objects.  This is used by RuleBasedTransliterator,
                  which uses characters in the private use area to represent objects
                  such as UnicodeSets.  If U+E015 is mapped to the UnicodeSet [a-z],
                  then lookupMatcher(0xE015) will return the UnicodeSet [a-z].
                  &lt;p&gt;Finally, a symbol table defines parsing behavior for symbolic
                  names.  All symbolic names start with the SYMBOL_REF character.
                  When a parser encounters this character, it calls parseReference()
                  with the position immediately following the SYMBOL_REF.  The symbol
                  table parses the name, if there is one, and returns it.                
                <draft>
                    ICU 2.8                    
                </draft>
                <deprecated>
                    This is a draft API and might change in a future release of ICU.                    
                </deprecated>
            </javadoc>
            <declaration name="SYMBOL_REF" type="char" line="26"/>
            <javadoc line="26">
                The character preceding a symbol reference name.                
                <draft>
                    ICU 2.8                    
                </draft>
                <deprecated>
                    This is a draft API and might change in a future release of ICU.                    
                </deprecated>
            </javadoc>
            <method name="lookup" type="char[]" line="32"/>
            <javadoc line="32">
                Lookup the characters associated with this string and return it.
                  Return &lt;tt&gt;null&lt;/tt&gt; if no such name exists.  The resultant
                  array may have length zero.                
                <param>
                    s the symbolic name to lookup                    
                </param>
                <return>
                    a char array containing the name's value, or null if
                      there is no mapping for s.                    
                </return>
                <draft>
                    ICU 2.8                    
                </draft>
                <deprecated>
                    This is a draft API and might change in a future release of ICU.                    
                </deprecated>
            </javadoc>
            <method name="lookupMatcher" type="UnicodeMatcher" line="43"/>
            <javadoc line="43">
                Lookup the UnicodeMatcher associated with the given character, and
                  return it.  Return &lt;tt&gt;null&lt;/tt&gt; if not found.                
                <param>
                    ch a 32-bit code point from 0 to 0x10FFFF inclusive.                    
                </param>
                <return>
                    the UnicodeMatcher object represented by the given
                      character, or null if there is no mapping for ch.                    
                </return>
                <draft>
                    ICU 2.8                    
                </draft>
                <deprecated>
                    This is a draft API and might change in a future release of ICU.                    
                </deprecated>
            </javadoc>
            <method name="parseReference" type="String" line="53"/>
            <javadoc line="53">
                Parse a symbol reference name from the given string, starting
                  at the given position.  If no valid symbol reference name is
                  found, return null and leave pos unchanged.  That is, if the
                  character at pos cannot start a name, or if pos is at or after
                  text.length(), then return null.  This indicates an isolated
                  SYMBOL_REF character.                
                <param>
                    text the text to parse for the name                    
                </param>
                <param>
                    pos on entry, the index of the first character to parse.
                      This is the character following the SYMBOL_REF character.  On
                      exit, the index after the last parsed character.  If the parse
                      failed, pos is unchanged on exit.                    
                </param>
                <param>
                    limit the index after the last character to be parsed.                    
                </param>
                <return>
                    the parsed name, or null if there is no valid symbolic
                      name at the given position.                    
                </return>
                <draft>
                    ICU 2.8                    
                </draft>
                <deprecated>
                    This is a draft API and might change in a future release of ICU.                    
                </deprecated>
            </javadoc>
        </interface>
    </source>