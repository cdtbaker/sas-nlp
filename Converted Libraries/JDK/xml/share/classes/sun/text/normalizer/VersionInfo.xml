<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.text.normalizer">
        <import package="java.util.HashMap"/>
        <class name="VersionInfo" line="41">
            <comment line="50">
                public methods ------------------------------------------------------                
            </comment>
            <comment line="145">
                private data members ----------------------------------------------                
            </comment>
            <comment line="164">
                private constructor -----------------------------------------------                
            </comment>
            <javadoc line="41">
                Class to store version numbers of the form major.minor.milli.micro.                
                <author>
                    synwee                    
                </author>
                <stable>
                    ICU 2.6                    
                </stable>
            </javadoc>
            <javadoc line="51">
                Returns an instance of VersionInfo with the argument version.                
                <param>
                    version version String in the format of &quot;major.minor.milli.micro&quot;
                      or &quot;major.minor.milli&quot; or &quot;major.minor&quot; or &quot;major&quot;,
                      where major, minor, milli, micro are non-negative numbers
                      &lt;= 255. If the trailing version numbers are
                      not specified they are taken as 0s. E.g. Version &quot;3.1&quot; is
                      equivalent to &quot;3.1.0.0&quot;.                    
                </param>
                <return>
                    an instance of VersionInfo with the argument version.                    
                </return>
                <exception>
                    throws an IllegalArgumentException when the argument version
                      is not in the right format                    
                </exception>
                <stable>
                    ICU 2.6                    
                </stable>
            </javadoc>
            <method name="getInstance" type="VersionInfo" line="65">
                <params>
                    <param name="version" type="String"/>
                </params>
                <declaration name="length" type="int" line="66"/>
                <declaration name="array" type="int" line="67"/>
                <declaration name="count" type="int" line="68"/>
                <declaration name="index" type="int" line="69"/>
                <scope line="71">
                    <declaration name="c" type="char" line="72"/>
                    <scope line="73"/>
                    <scope line="76">
                        <scope line="78"/>
                    </scope>
                </scope>
                <scope line="86"/>
                <scope line="90">
                    <scope line="91"/>
                </scope>
            </method>
            <javadoc line="99">
                Returns an instance of VersionInfo with the argument version.                
                <param>
                    major major version, non-negative number &lt;= 255.                    
                </param>
                <param>
                    minor minor version, non-negative number &lt;= 255.                    
                </param>
                <param>
                    milli milli version, non-negative number &lt;= 255.                    
                </param>
                <param>
                    micro micro version, non-negative number &lt;= 255.                    
                </param>
                <exception>
                    throws an IllegalArgumentException when either arguments are
                      negative or &gt; 255                    
                </exception>
                <stable>
                    ICU 2.6                    
                </stable>
            </javadoc>
            <method name="getInstance" type="VersionInfo" line="111">
                <params>
                    <param name="major" type="int"/>
                    <param name="minor" type="int"/>
                    <param name="milli" type="int"/>
                    <param name="micro" type="int"/>
                </params>
                <comment line="113">
                    checks if it is in the hashmap
                     else                    
                </comment>
                <scope line="115"/>
                <declaration name="version" type="int" line="118"/>
                <declaration name="key" type="Integer" line="119"/>
                <declaration name="result" type="Object" line="120"/>
                <scope line="121"/>
            </method>
            <javadoc line="128">
                Compares other with this VersionInfo.                
                <param>
                    other VersionInfo to be compared                    
                </param>
                <return>
                    0 if the argument is a VersionInfo object that has version
                      information equals to this object.
                      Less than 0 if the argument is a VersionInfo object that has
                      version information greater than this object.
                      Greater than 0 if the argument is a VersionInfo object that
                      has version information less than this object.                    
                </return>
                <stable>
                    ICU 2.6                    
                </stable>
            </javadoc>
            <method name="compareTo" type="int" line="140">
                <params>
                    <param name="other" type="VersionInfo"/>
                </params>
            </method>
            <declaration name="m_version_" type="int" line="146"/>
            <javadoc line="146">
                Version number stored as a byte for each of the major, minor, milli and
                  micro numbers in the 32 bit int.
                  Most significant for the major and the least significant contains the
                  micro numbers.                
            </javadoc>
            <declaration name="MAP_" type="HashMap" line="153"/>
            <javadoc line="153">
                Map of singletons                
            </javadoc>
            <declaration name="INVALID_VERSION_NUMBER_" type="String" line="157"/>
            <javadoc line="157">
                Error statement string                
            </javadoc>
            <javadoc line="165">
                Constructor with int                
                <param>
                    compactversion a 32 bit int with each byte representing a number                    
                </param>
            </javadoc>
            <method name="VersionInfo" type="constructor" line="170">
                <params>
                    <param name="compactversion" type="int"/>
                </params>
            </method>
            <javadoc line="174">
                Gets the int from the version numbers                
                <param>
                    major non-negative version number                    
                </param>
                <param>
                    minor non-negativeversion number                    
                </param>
                <param>
                    milli non-negativeversion number                    
                </param>
                <param>
                    micro non-negativeversion number                    
                </param>
            </javadoc>
            <method name="getInt" type="int" line="182">
                <params>
                    <param name="major" type="int"/>
                    <param name="minor" type="int"/>
                    <param name="milli" type="int"/>
                    <param name="micro" type="int"/>
                </params>
            </method>
        </class>
    </source>