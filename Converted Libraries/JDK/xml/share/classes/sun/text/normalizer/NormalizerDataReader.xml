<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.text.normalizer">
        <import package="java.io.DataInputStream"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.IOException"/>
        <class name="NormalizerDataReader" line="5">
            <implements interface="ICUBinary.Authenticate"/>
            <javadoc line="5">
                @author        Ram Viswanadha                
            </javadoc>
            <javadoc line="9">
                &lt;p&gt;Protected constructor.&lt;/p&gt;                
                <param>
                    inputStream ICU uprop.dat file input stream                    
                </param>
                <exception>
                    IOException throw if data file fails authentication                    
                </exception>
                <draft>
                    2.1                    
                </draft>
            </javadoc>
            <method name="NormalizerDataReader" type="constructor" line="15">
                <params>
                    <param name="inputStream" type="InputStream"/>
                </params>
            </method>
            <method name="readIndexes" type="int[]" line="19">
                <params>
                    <param name="length" type="int"/>
                </params>
                <declaration name="indexes" type="int[]" line="20"/>
                <scope line="21"/>
            </method>
            <javadoc line="26">
                &lt;p&gt;Reads unorm.icu, parse it into blocks of data to be stored in
                  NormalizerImpl.&lt;/P                
                <param>
                    normBytes                    
                </param>
                <param>
                    fcdBytes                    
                </param>
                <param>
                    auxBytes                    
                </param>
                <param>
                    extraData                    
                </param>
                <param>
                    combiningTable                    
                </param>
                <exception>
                    thrown when data reading fails                    
                </exception>
                <draft>
                    2.1                    
                </draft>
            </javadoc>
            <method name="read" type="void" line="37">
                <params>
                    <param name="normBytes" type="byte[]"/>
                    <param name="fcdBytes" type="byte[]"/>
                    <param name="auxBytes" type="byte[]"/>
                    <param name="extraData" type="char[]"/>
                    <param name="combiningTable" type="char[]"/>
                </params>
                <scope line="39"/>
                <scope line="42"/>
            </method>
            <method name="getDataFormatVersion" type="byte[]" line="48"/>
            <method name="isDataVersionAcceptable" type="boolean" line="51">
                <params>
                    <param name="version" type="byte"/>
                </params>
            </method>
            <method name="getUnicodeVersion" type="byte[]" line="54"/>
            <declaration name="dataInputStream" type="DataInputStream" line="57"/>
            <javadoc line="57">
                ICU data file input stream                
            </javadoc>
            <declaration name="unicodeVersion" type="byte[]" line="61"/>
            <declaration name="DATA_FORMAT_ID" type="byte" line="62"/>
            <javadoc line="62">
                File format version that this class understands.
                  No guarantees are made if a older version is used
                  see store.c of gennorm for more information and values                
            </javadoc>
            <declaration name="DATA_FORMAT_VERSION" type="byte" line="68"/>
        </class>
    </source>