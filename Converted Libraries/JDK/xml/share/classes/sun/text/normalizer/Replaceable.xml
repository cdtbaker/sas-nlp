<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.text.normalizer">
        <interface name="Replaceable">
            <comment line="104">
                // for StringPrep                
            </comment>
            <javadoc line="40">
                &lt;code&gt;Replaceable&lt;/code&gt; is an interface representing a
                  string of characters that supports the replacement of a range of
                  itself with a new string of characters.  It is used by APIs that
                  change a piece of text while retaining metadata.  Metadata is data
                  other than the Unicode characters returned by char32At().  One
                  example of metadata is style attributes; another is an edit
                  history, marking each character with an author and revision number.
                  &lt;p&gt;An implicit aspect of the &lt;code&gt;Replaceable&lt;/code&gt; API is that
                  during a replace operation, new characters take on the metadata of
                  the old characters.  For example, if the string &quot;the &lt;b&gt;bold&lt;/b&gt;
                  font&quot; has range (4, 8) replaced with &quot;strong&quot;, then it becomes &quot;the
                  &lt;b&gt;strong&lt;/b&gt; font&quot;.
                  &lt;p&gt;&lt;code&gt;Replaceable&lt;/code&gt; specifies ranges using a start
                  offset and a limit offset.  The range of characters thus specified
                  includes the characters at offset start..limit-1.  That is, the
                  start offset is inclusive, and the limit offset is exclusive.
                  &lt;p&gt;&lt;code&gt;Replaceable&lt;/code&gt; also includes API to access characters
                  in the string: &lt;code&gt;length()&lt;/code&gt;, &lt;code&gt;charAt()&lt;/code&gt;,
                  &lt;code&gt;char32At()&lt;/code&gt;, and &lt;code&gt;extractBetween()&lt;/code&gt;.
                  &lt;p&gt;For a subclass to support metadata, typical behavior of
                  &lt;code&gt;replace()&lt;/code&gt; is the following:
                  &lt;ul&gt;
                  &lt;li&gt;Set the metadata of the new text to the metadata of the first
                  character replaced&lt;/li&gt;
                  &lt;li&gt;If no characters are replaced, use the metadata of the
                  previous character&lt;/li&gt;
                  &lt;li&gt;If there is no previous character (i.e. start == 0), use the
                  following character&lt;/li&gt;
                  &lt;li&gt;If there is no following character (i.e. the replaceable was
                  empty), use default metadata&lt;br&gt;
                  &lt;li&gt;If the code point U+FFFF is seen, it should be interpreted as
                  a special marker having no metadata&lt;li&gt;
                  &lt;/li&gt;
                  &lt;/ul&gt;
                  If this is not the behavior, the subclass should document any differences.
                  &lt;p&gt;Copyright &amp;copy; IBM Corporation 1999.  All rights reserved.                
                <author>
                    Alan Liu                    
                </author>
                <stable>
                    ICU 2.0                    
                </stable>
            </javadoc>
            <method name="length" type="int" line="87"/>
            <javadoc line="87">
                Returns the number of 16-bit code units in the text.                
                <return>
                    number of 16-bit code units in text                    
                </return>
                <stable>
                    ICU 2.0                    
                </stable>
            </javadoc>
            <method name="charAt" type="char" line="94"/>
            <javadoc line="94">
                Returns the 16-bit code unit at the given offset into the text.                
                <param>
                    offset an integer between 0 and &lt;code&gt;length()&lt;/code&gt;-1
                      inclusive                    
                </param>
                <return>
                    16-bit code unit of text at given offset                    
                </return>
                <stable>
                    ICU 2.0                    
                </stable>
            </javadoc>
            <method name="getChars" type="void" line="104"/>
            <javadoc line="104">
                Copies characters from this object into the destination
                  character array.  The first character to be copied is at index
                  &lt;code&gt;srcStart&lt;/code&gt;; the last character to be copied is at
                  index &lt;code&gt;srcLimit-1&lt;/code&gt; (thus the total number of
                  characters to be copied is &lt;code&gt;srcLimit-srcStart&lt;/code&gt;). The
                  characters are copied into the subarray of &lt;code&gt;dst&lt;/code&gt;
                  starting at index &lt;code&gt;dstStart&lt;/code&gt; and ending at index
                  &lt;code&gt;dstStart + (srcLimit-srcStart) - 1&lt;/code&gt;.                
                <param>
                    srcStart the beginning index to copy, inclusive; &lt;code&gt;0
                      &lt;= start &lt;= limit&lt;/code&gt;.                    
                </param>
                <param>
                    srcLimit the ending index to copy, exclusive;
                      &lt;code&gt;start &lt;= limit &lt;= length()&lt;/code&gt;.                    
                </param>
                <param>
                    dst the destination array.                    
                </param>
                <param>
                    dstStart the start offset in the destination array.                    
                </param>
                <stable>
                    ICU 2.0                    
                </stable>
            </javadoc>
        </interface>
    </source>