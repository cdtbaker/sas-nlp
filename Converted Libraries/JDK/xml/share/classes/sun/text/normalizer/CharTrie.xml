<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.text.normalizer">
        <import package="java.io.InputStream"/>
        <import package="java.io.DataInputStream"/>
        <import package="java.io.IOException"/>
        <class name="CharTrie" line="43">
            <extends class="Trie"/>
            <comment line="51">
                note that i need to handle the block calculations later, since chartrie                
            </comment>
            <comment line="52">
                in icu4c uses the same index array.                
            </comment>
            <comment line="55">
                public constructors ---------------------------------------------                
            </comment>
            <comment line="171">
                public methods --------------------------------------------------                
            </comment>
            <comment line="265">
                protected methods -----------------------------------------------                
            </comment>
            <comment line="336">
                private data members --------------------------------------------                
            </comment>
            <javadoc line="43">
                Trie implementation which stores data in char, 16 bits.                
                <author>
                    synwee                    
                </author>
                <see>
                    com.ibm.icu.impl.Trie                    
                </see>
                <since>
                    release 2.1, Jan 01 2002                    
                </since>
            </javadoc>
            <javadoc line="56">
                &lt;p&gt;Creates a new Trie with the settings for the trie data.&lt;/p&gt;
                  &lt;p&gt;Unserialize the 32-bit-aligned input stream and use the data for the
                  trie.&lt;/p&gt;                
                <param>
                    inputStream file input stream to a ICU data file, containing
                      the trie                    
                </param>
                <param>
                    dataManipulate object which provides methods to parse the char
                      data                    
                </param>
                <throws>
                    IOException thrown when data reading fails                    
                </throws>
                <draft>
                    2.1                    
                </draft>
            </javadoc>
            <method name="CharTrie" type="constructor" line="69">
                <params>
                    <param name="inputStream" type="InputStream"/>
                    <param name="dataManipulate" type="DataManipulate"/>
                </params>
                <scope line="72"/>
            </method>
            <javadoc line="79">
                Make a dummy CharTrie.
                  A dummy trie is an empty runtime trie, used when a real data trie cannot
                  be loaded.
                  The trie always returns the initialValue,
                  or the leadUnitValue for lead surrogate code points.
                  The Latin-1 part is always set up to be linear.                
                <param>
                    initialValue the initial value that is set for all code points                    
                </param>
                <param>
                    leadUnitValue the value for lead surrogate code _units_ that do not
                      have associated supplementary data                    
                </param>
                <param>
                    dataManipulate object which provides methods to parse the char data                    
                </param>
            </javadoc>
            <method name="CharTrie" type="constructor" line="93">
                <params>
                    <param name="initialValue" type="int"/>
                    <param name="leadUnitValue" type="int"/>
                    <param name="dataManipulate" type="DataManipulate"/>
                </params>
                <comment line="99">
                                        
                </comment>
                <comment line="101">
                                        
                </comment>
                <comment line="111">
                                        
                </comment>
                <comment line="113">
                                        
                </comment>
                <comment line="115">
                                        
                </comment>
                <comment line="121">
                                        
                </comment>
                <comment line="129">
                                        
                </comment>
                <declaration name="dataLength" type="int" line="96"/>
                <declaration name="block" type="char" line="97"/>
                <scope line="103"/>
                <scope line="116"/>
                <scope line="120">
                    <scope line="125"/>
                    <scope line="131"/>
                </scope>
            </method>
            <class name="FriendAgent" line="139">
                <javadoc line="139">
                    Java friend implementation                    
                </javadoc>
                <javadoc line="144">
                    Gives out the index array of the trie                    
                    <return>
                        index array of trie                        
                    </return>
                </javadoc>
                <method name="getPrivateIndex" type="char[]" line="149"/>
                <javadoc line="152">
                    Gives out the data array of the trie                    
                    <return>
                        data array of trie                        
                    </return>
                </javadoc>
                <method name="getPrivateData" type="char[]" line="157"/>
                <javadoc line="160">
                    Gives out the data offset in the trie                    
                    <return>
                        data offset in the trie                        
                    </return>
                </javadoc>
                <method name="getPrivateInitialValue" type="int" line="165"/>
            </class>
            <javadoc line="172">
                Java friend implementation
                  To store the index and data array into the argument.                
                <param>
                    friend java friend UCharacterProperty object to store the array                    
                </param>
            </javadoc>
            <method name="putIndexData" type="void" line="178">
                <params>
                    <param name="friend" type="UCharacterProperty"/>
                </params>
            </method>
            <javadoc line="182">
                Gets the value associated with the codepoint.
                  If no value is associated with the codepoint, a default value will be
                  returned.                
                <param>
                    ch codepoint                    
                </param>
                <return>
                    offset to data                    
                </return>
                <draft>
                    2.1                    
                </draft>
            </javadoc>
            <method name="getCodePointValue" type="char" line="191">
                <params>
                    <param name="ch" type="int"/>
                </params>
                <comment line="194">
                    fastpath for U+0000..U+D7FF                    
                </comment>
                <comment line="196">
                    copy of getRawOffset()                    
                </comment>
                <comment line="202">
                    handle U+D800..U+10FFFF                    
                </comment>
                <comment line="205">
                    return -1 if there is an error, in this case we return the default                    
                </comment>
                <comment line="206">
                    value: m_initialValue_                    
                </comment>
                <declaration name="offset" type="int" line="192"/>
                <scope line="195"/>
            </method>
            <javadoc line="210">
                Gets the value to the data which this lead surrogate character points
                  to.
                  Returned data may contain folding offset information for the next
                  trailing surrogate character.
                  This method does not guarantee correct results for trail surrogates.                
                <param>
                    ch lead surrogate character                    
                </param>
                <return>
                    data value                    
                </return>
                <draft>
                    2.1                    
                </draft>
            </javadoc>
            <method name="getLeadValue" type="char" line="221">
                <params>
                    <param name="ch" type="char"/>
                </params>
            </method>
            <javadoc line="225">
                Get the value associated with a pair of surrogates.                
                <param>
                    lead a lead surrogate                    
                </param>
                <param>
                    trail a trail surrogate                    
                </param>
                <draft>
                    2.1                    
                </draft>
            </javadoc>
            <method name="getSurrogateValue" type="char" line="232">
                <params>
                    <param name="lead" type="char"/>
                    <param name="trail" type="char"/>
                </params>
                <declaration name="offset" type="int" line="233"/>
                <scope line="234"/>
            </method>
            <javadoc line="240">
                &lt;p&gt;Get a value from a folding offset (from the value of a lead surrogate)
                  and a trail surrogate.&lt;/p&gt;
                  &lt;p&gt;If the                
                <param>
                    leadvalue value associated with the lead surrogate which contains
                      the folding offset                    
                </param>
                <param>
                    trail surrogate                    
                </param>
                <return>
                    trie data value associated with the trail character                    
                </return>
                <draft>
                    2.1                    
                </draft>
            </javadoc>
            <method name="getTrailValue" type="char" line="251">
                <params>
                    <param name="leadvalue" type="int"/>
                    <param name="trail" type="char"/>
                </params>
                <scope line="252"/>
                <declaration name="offset" type="int" line="256"/>
                <scope line="257"/>
            </method>
            <javadoc line="266">
                &lt;p&gt;Parses the input stream and stores its trie content into a index and
                  data array&lt;/p&gt;                
                <param>
                    inputStream data input stream containing trie data                    
                </param>
                <exception>
                    IOException thrown when data reading fails                    
                </exception>
            </javadoc>
            <method name="unserialize" type="void" line="274">
                <params>
                    <param name="inputStream" type="InputStream"/>
                </params>
                <declaration name="input" type="DataInputStream" line="275"/>
                <declaration name="indexDataLength" type="int" line="276"/>
                <scope line="278"/>
            </method>
            <javadoc line="285">
                Gets the offset to the data which the surrogate pair points to.                
                <param>
                    lead lead surrogate                    
                </param>
                <param>
                    trail trailing surrogate                    
                </param>
                <return>
                    offset to data                    
                </return>
                <draft>
                    2.1                    
                </draft>
            </javadoc>
            <method name="getSurrogateOffset" type="int" line="293">
                <params>
                    <param name="lead" type="char"/>
                    <param name="trail" type="char"/>
                </params>
                <comment line="299">
                    get fold position for the next trail surrogate                    
                </comment>
                <comment line="302">
                    get the real data from the folded lead/trail units                    
                </comment>
                <comment line="307">
                    return -1 if there is an error, in this case we return the default                    
                </comment>
                <comment line="308">
                    value: m_initialValue_                    
                </comment>
                <scope line="294"/>
                <declaration name="offset" type="int" line="300"/>
                <scope line="303"/>
            </method>
            <javadoc line="312">
                Gets the value at the argument index.
                  For use internally in TrieIterator.                
                <param>
                    index value at index will be retrieved                    
                </param>
                <return>
                    32 bit value                    
                </return>
                <see>
                    com.ibm.icu.impl.TrieIterator                    
                </see>
                <draft>
                    2.1                    
                </draft>
            </javadoc>
            <method name="getValue" type="int" line="321">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <javadoc line="325">
                Gets the default initial value                
                <return>
                    32 bit value                    
                </return>
                <draft>
                    2.1                    
                </draft>
            </javadoc>
            <method name="getInitialValue" type="int" line="331"/>
            <declaration name="m_initialValue_" type="char" line="337"/>
            <javadoc line="337">
                Default value                
            </javadoc>
            <declaration name="m_data_" type="char" line="341"/>
            <javadoc line="341">
                Array of char data                
            </javadoc>
            <declaration name="m_friendAgent_" type="FriendAgent" line="345"/>
            <javadoc line="345">
                Agent for friends                
            </javadoc>
        </class>
    </source>