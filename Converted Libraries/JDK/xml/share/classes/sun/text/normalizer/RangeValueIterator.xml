<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.text.normalizer">
        <interface name="RangeValueIterator">
            <comment line="81">
                public inner class ---------------------------------------------                
            </comment>
            <comment line="122">
                public methods -------------------------------------------------                
            </comment>
            <javadoc line="40">
                &lt;p&gt;Interface for enabling iteration over sets of &lt;int index, int value&gt;,
                  where index is the sorted integer index in ascending order and value, its
                  associated integer value.&lt;/p&gt;
                  &lt;p&gt;The result for each iteration is the consecutive range of
                  &lt;int index, int value&gt; with the same value. Result is represented by
                  &lt;start, limit, value&gt; where&lt;/p&gt;
                  &lt;ul&gt;
                  &lt;li&gt; start is the starting integer of the result range
                  &lt;li&gt; limit is 1 after the maximum integer that follows start, such that
                  all integers between start and (limit - 1), inclusive, have the same
                  associated integer value.
                  &lt;li&gt; value is the integer value that all integers from start to (limit - 1)
                  share in common.
                  &lt;/ul&gt;
                  &lt;p&gt;
                  Hence value(start) = value(start + 1) = .... = value(start + n) = .... =
                  value(limit - 1). However value(start -1) != value(start) and
                  value(limit) != value(start).
                  &lt;/p&gt;
                  &lt;p&gt;Most implementations will be created by factory methods, such as the
                  character type iterator in UCharacter.getTypeIterator. See example below.
                  &lt;/p&gt;
                  Example of use:&lt;br&gt;
                  &lt;pre&gt;
                  RangeValueIterator iterator = UCharacter.getTypeIterator();
                  RangeValueIterator.Element result = new RangeValueIterator.Element();
                  while (iterator.next(result)) {
                  System.out.println(&quot;Codepoint \\u&quot; +
                  Integer.toHexString(result.start) +
                  &quot; to codepoint \\u&quot; +
                  Integer.toHexString(result.limit - 1) +
                  &quot; has the character type &quot; + result.value);
                  }
                  &lt;/pre&gt;                
                <author>
                    synwee                    
                </author>
                <stable>
                    ICU 2.6                    
                </stable>
            </javadoc>
            <class name="Element" line="82">
                <comment line="91">
                    public data member ---------------------------------------------                    
                </comment>
                <comment line="111">
                    public constructor --------------------------------------------                    
                </comment>
                <javadoc line="82">
                    Return result wrapper for com.ibm.icu.util.RangeValueIterator.
                      Stores the start and limit of the continous result range and the
                      common value all integers between [start, limit - 1] has.                    
                    <stable>
                        ICU 2.6                        
                    </stable>
                </javadoc>
                <declaration name="start" type="int" line="92"/>
                <javadoc line="92">
                    Starting integer of the continuous result range that has the same
                      value                    
                    <stable>
                        ICU 2.6                        
                    </stable>
                </javadoc>
                <declaration name="limit" type="int" line="98"/>
                <javadoc line="98">
                    (End + 1) integer of continuous result range that has the same
                      value                    
                    <stable>
                        ICU 2.6                        
                    </stable>
                </javadoc>
                <declaration name="value" type="int" line="104"/>
                <javadoc line="104">
                    Gets the common value of the continous result range                    
                    <stable>
                        ICU 2.6                        
                    </stable>
                </javadoc>
                <javadoc line="112">
                    Empty default constructor to make javadoc happy                    
                    <stable>
                        ICU 2.4                        
                    </stable>
                </javadoc>
                <method name="Element" type="constructor" line="117"/>
            </class>
            <method name="next" type="boolean" line="123"/>
            <javadoc line="123">
                &lt;p&gt;Gets the next maximal result range with a common value and returns
                  true if we are not at the end of the iteration, false otherwise.&lt;/p&gt;
                  &lt;p&gt;If the return boolean is a false, the contents of elements will not
                  be updated.&lt;/p&gt;                
                <param>
                    element for storing the result range and value                    
                </param>
                <return>
                    true if we are not at the end of the iteration, false otherwise.                    
                </return>
                <see>
                    Element                    
                </see>
                <stable>
                    ICU 2.6                    
                </stable>
            </javadoc>
            <method name="reset" type="void" line="135"/>
            <javadoc line="135">
                Resets the iterator to the beginning of the iteration.                
                <stable>
                    ICU 2.6                    
                </stable>
            </javadoc>
        </interface>
    </source>