<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.text.normalizer">
        <import package="java.io.InputStream"/>
        <import package="java.io.DataInputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.util.Arrays"/>
        <class name="IntTrie" line="45">
            <extends class="Trie"/>
            <comment line="54">
                public constructors ---------------------------------------------                
            </comment>
            <comment line="77">
                public methods --------------------------------------------------                
            </comment>
            <comment line="131">
                protected methods -----------------------------------------------                
            </comment>
            <comment line="201">
                package private methods -----------------------------------------                
            </comment>
            <comment line="220">
                private data members --------------------------------------------                
            </comment>
            <javadoc line="45">
                Trie implementation which stores data in int, 32 bits.                
                <author>
                    synwee                    
                </author>
                <see>
                    com.ibm.icu.impl.Trie                    
                </see>
                <since>
                    release 2.1, Jan 01 2002                    
                </since>
            </javadoc>
            <javadoc line="55">
                &lt;p&gt;Creates a new Trie with the settings for the trie data.&lt;/p&gt;
                  &lt;p&gt;Unserialize the 32-bit-aligned input stream and use the data for the
                  trie.&lt;/p&gt;                
                <param>
                    inputStream file input stream to a ICU data file, containing
                      the trie                    
                </param>
                <param>
                    dataManipulate object which provides methods to parse the char
                      data                    
                </param>
                <throws>
                    IOException thrown when data reading fails                    
                </throws>
                <draft>
                    2.1                    
                </draft>
            </javadoc>
            <method name="IntTrie" type="constructor" line="68">
                <params>
                    <param name="inputStream" type="InputStream"/>
                    <param name="datamanipulate" type="DataManipulate"/>
                </params>
                <scope line="70"/>
            </method>
            <javadoc line="78">
                Gets the value associated with the codepoint.
                  If no value is associated with the codepoint, a default value will be
                  returned.                
                <param>
                    ch codepoint                    
                </param>
                <return>
                    offset to data                    
                </return>
                <draft>
                    2.1                    
                </draft>
            </javadoc>
            <method name="getCodePointValue" type="int" line="87">
                <params>
                    <param name="ch" type="int"/>
                </params>
                <declaration name="offset" type="int" line="88"/>
            </method>
            <javadoc line="92">
                Gets the value to the data which this lead surrogate character points
                  to.
                  Returned data may contain folding offset information for the next
                  trailing surrogate character.
                  This method does not guarantee correct results for trail surrogates.                
                <param>
                    ch lead surrogate character                    
                </param>
                <return>
                    data value                    
                </return>
                <draft>
                    2.1                    
                </draft>
            </javadoc>
            <method name="getLeadValue" type="int" line="103">
                <params>
                    <param name="ch" type="char"/>
                </params>
            </method>
            <javadoc line="107">
                Get a value from a folding offset (from the value of a lead surrogate)
                  and a trail surrogate.                
                <param>
                    leadvalue the value of a lead surrogate that contains the
                      folding offset                    
                </param>
                <param>
                    trail surrogate                    
                </param>
                <return>
                    trie data value associated with the trail character                    
                </return>
                <draft>
                    2.1                    
                </draft>
            </javadoc>
            <method name="getTrailValue" type="int" line="117">
                <params>
                    <param name="leadvalue" type="int"/>
                    <param name="trail" type="char"/>
                </params>
                <scope line="118"/>
                <declaration name="offset" type="int" line="122"/>
                <scope line="123"/>
            </method>
            <javadoc line="132">
                &lt;p&gt;Parses the input stream and stores its trie content into a index and
                  data array&lt;/p&gt;                
                <param>
                    inputStream data input stream containing trie data                    
                </param>
                <exception>
                    IOException thrown when data reading fails                    
                </exception>
            </javadoc>
            <method name="unserialize" type="void" line="140">
                <params>
                    <param name="inputStream" type="InputStream"/>
                </params>
                <comment line="142">
                    one used for initial value                    
                </comment>
                <declaration name="input" type="DataInputStream" line="144"/>
                <scope line="145"/>
            </method>
            <javadoc line="151">
                Gets the offset to the data which the surrogate pair points to.                
                <param>
                    lead lead surrogate                    
                </param>
                <param>
                    trail trailing surrogate                    
                </param>
                <return>
                    offset to data                    
                </return>
                <draft>
                    2.1                    
                </draft>
            </javadoc>
            <method name="getSurrogateOffset" type="int" line="159">
                <params>
                    <param name="lead" type="char"/>
                    <param name="trail" type="char"/>
                </params>
                <comment line="164">
                    get fold position for the next trail surrogate                    
                </comment>
                <comment line="167">
                    get the real data from the folded lead/trail units                    
                </comment>
                <comment line="172">
                    return -1 if there is an error, in this case we return the default                    
                </comment>
                <comment line="173">
                    value: m_initialValue_                    
                </comment>
                <scope line="160"/>
                <declaration name="offset" type="int" line="165"/>
                <scope line="168"/>
            </method>
            <javadoc line="177">
                Gets the value at the argument index.
                  For use internally in TrieIterator                
                <param>
                    index value at index will be retrieved                    
                </param>
                <return>
                    32 bit value                    
                </return>
                <see>
                    com.ibm.icu.impl.TrieIterator                    
                </see>
                <draft>
                    2.1                    
                </draft>
            </javadoc>
            <method name="getValue" type="int" line="186">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <javadoc line="190">
                Gets the default initial value                
                <return>
                    32 bit value                    
                </return>
                <draft>
                    2.1                    
                </draft>
            </javadoc>
            <method name="getInitialValue" type="int" line="196"/>
            <javadoc line="202">
                Internal constructor for builder use                
                <param>
                    index the index array to be slotted into this trie                    
                </param>
                <param>
                    data the data array to be slotted into this trie                    
                </param>
                <param>
                    initialvalue the initial value for this trie                    
                </param>
                <param>
                    options trie options to use                    
                </param>
                <param>
                    datamanipulate folding implementation                    
                </param>
            </javadoc>
            <method name="IntTrie" type="constructor" line="212">
                <params>
                    <param name="index" type="char"/>
                    <param name="data" type="int"/>
                    <param name="initialvalue" type="int"/>
                    <param name="options" type="int"/>
                    <param name="datamanipulate" type="DataManipulate"/>
                </params>
            </method>
            <declaration name="m_initialValue_" type="int" line="221"/>
            <javadoc line="221">
                Default value                
            </javadoc>
            <declaration name="m_data_" type="int" line="225"/>
            <javadoc line="225">
                Array of char data                
            </javadoc>
        </class>
    </source>