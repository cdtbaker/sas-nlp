<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.text">
        <class name="SupplementaryCharacterData" line="2">
            <implements interface="Cloneable"/>
            <javadoc line="2">
                SupplementaryCharacterData is an SMI-private class which was written for
                  RuleBasedBreakIterator and BreakDictionary.                
            </javadoc>
            <declaration name="dataTable" type="int[]" line="7"/>
            <javadoc line="7">
                An array for supplementary characters and values.
                  Lower one byte is used to keep a byte-value.
                  Upper three bytes are used to keep the first supplementary character
                  which has the value. The value is also valid for the following
                  supplementary characters until the next supplementary character in
                  the array &lt;code&gt;dataTable&lt;/code&gt;.
                  For example, if the value of &lt;code&gt;dataTable[2]&lt;/code&gt; is
                  &lt;code&gt;0x01000123&lt;/code&gt; and the value of &lt;code&gt;dataTable[3]&lt;/code&gt; is
                  &lt;code&gt;0x01000567&lt;/code&gt;, supplementary characters from
                  &lt;code&gt;0x10001&lt;/code&gt; to &lt;code&gt;0x10004&lt;/code&gt; has the value
                  &lt;code&gt;0x23&lt;/code&gt;. And, &lt;code&gt;getValue(0x10003)&lt;/code&gt; returns the value.                
            </javadoc>
            <javadoc line="21">
                Creates a new SupplementaryCharacterData object with the given table.                
            </javadoc>
            <method name="SupplementaryCharacterData" type="constructor" line="24">
                <params>
                    <param name="table" type="int[]"/>
                </params>
            </method>
            <javadoc line="27">
                Returns a corresponding value for the given supplementary code-point.                
            </javadoc>
            <method name="getValue" type="int" line="30">
                <params>
                    <param name="index" type="int"/>
                </params>
            </method>
            <javadoc line="50">
                Returns the data array.                
            </javadoc>
            <method name="getArray" type="int[]" line="53"/>
        </class>
    </source>