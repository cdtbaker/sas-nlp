<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.text.bidi">
        <class name="BidiRun" line="42">
            <comment line="61">
                                
            </comment>
            <comment line="62">
                                
            </comment>
            <comment line="63">
                int insertRemove;        if &gt;0, flags for inserting LRMRLM beforeafter run,                
            </comment>
            <comment line="67">
                Default constructor
                
                 Note that members start and limit of a run instance have different
                 meanings depending whether the run is part of the runs array of a Bidi
                 object, or if it is a reference returned by getVisualRun() or
                 getLogicalRun().
                 For a member of the runs array of a Bidi object,
                   - start is the first logical position of the run in the source text.
                   - limit is one after the last visual position of the run.
                 For a reference returned by getLogicalRun() or getVisualRun(),
                   - start is the first logical position of the run in the source text.
                   - limit is one after the last logical position of the run.                
            </comment>
            <comment line="86">
                Constructor                
            </comment>
            <comment line="96">
                Copy the content of a BidiRun instance                
            </comment>
            <javadoc line="42">
                A BidiRun represents a sequence of characters at the same embedding level.
                  The Bidi algorithm decomposes a piece of text into sequences of characters
                  at the same embedding level, each such sequence is called a &lt;quote&gt;run&lt;/quote&gt;.
                  &lt;p&gt;A BidiRun represents such a run by storing its essential properties,
                  but does not duplicate the characters which form the run.
                  &lt;p&gt;The &amp;quot;limit&amp;quot; of the run is the position just after the
                  last character, i.e., one more than that position.
                  &lt;p&gt;This class has no public constructor, and its members cannot be
                  modified by users.                
                <see>
                    com.ibm.icu.text.Bidi                    
                </see>
            </javadoc>
            <declaration name="start" type="int" line="60"/>
            <declaration name="limit" type="int" line="61"/>
            <declaration name="insertRemove" type="int" line="62"/>
            <declaration name="level" type="byte" line="64"/>
            <method name="BidiRun" type="constructor" line="81"/>
            <method name="BidiRun" type="constructor" line="89">
                <params>
                    <param name="start" type="int"/>
                    <param name="limit" type="int"/>
                    <param name="embeddingLevel" type="byte"/>
                </params>
            </method>
            <method name="copyFrom" type="void" line="99">
                <params>
                    <param name="run" type="BidiRun"/>
                </params>
            </method>
            <javadoc line="106">
                Get level of run                
            </javadoc>
            <method name="getEmbeddingLevel" type="byte" line="110"/>
            <javadoc line="114">
                Check if run level is even                
                <return>
                    true if the embedding level of this run is even, i.e. it is a
                      left-to-right run.                    
                </return>
            </javadoc>
            <method name="isEvenRun" type="boolean" line="120"/>
        </class>
    </source>