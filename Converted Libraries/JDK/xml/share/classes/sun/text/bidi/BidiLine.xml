<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.text.bidi">
        <import package="java.text.Bidi"/>
        <import package="java.util.Arrays"/>
        <class name="BidiLine" line="45">
            <comment line="48">
                General remarks about the functions in this file:
                
                 These functions deal with the aspects of potentially mixed-directional
                 text in a single paragraph or in a line of a single paragraph
                 which has already been processed according to
                 the Unicode 3.0 Bidi algorithm as defined in
                 http:www.unicode.orgunicodereportstr9 , version 13,
                 also described in The Unicode Standard, Version 4.0.1 .
                
                 This means that there is a Bidi object with a levels
                 and a dirProps array.
                 paraLevel and direction are also set.
                 Only if the length of the text is zero, then levels==dirProps==NULL.
                
                 The overall directionality of the paragraph
                 or line is used to bypass the reordering steps if possible.
                 Even purely RTL text does not need reordering there because
                 the getLogicalVisualIndex() methods can compute the
                 index on the fly in such a case.
                
                 The implementation of the access to same-level-runs and of the reordering
                 do attempt to provide better performance and less memory usage compared to
                 a direct implementation of especially rule (L2) with an array of
                 one (32-bit) integer per text character.
                
                 Here, the levels array is scanned as soon as necessary, and a vector of
                 same-level-runs is created. Reordering then is done on this vector.
                 For each run of text positions that were resolved to the same level,
                 only 8 bytes are stored: the first text position of the run and the visual
                 position behind the run after reordering.
                 One sign bit is used to hold the directionality of the run.
                 This is inefficient if there are many very short runs. If the average run
                 length is &lt;2, then this uses more memory.
                
                 In a further attempt to save memory, the levels array is never changed
                 after all the resolution rules (Xn, Wn, Nn, In).
                 Many methods have to consider the field trailingWSStart:
                 if it is less than length, then there is an implicit trailing run
                 at the paraLevel,
                 which is not reflected in the levels array.
                 This allows a line Bidi object to use the same levels array as
                 its paragraph parent object.
                
                 When a Bidi object is created for a line of a paragraph, then the
                 paragraph&apos;s levels and dirProps arrays are reused by way of setting
                 a pointer into them, not by copying. This again saves memory and forbids to
                 change the now shared levels for (L1).                
            </comment>
            <comment line="98">
                                
            </comment>
            <comment line="100">
                setTrailingWSStart() sets the start index for a trailing
                 run of WS in the line. This is necessary because we do not modify
                 the paragraph&apos;s levels array that we just point into.
                 Using trailingWSStart is another form of performing (L1).
                
                 To make subsequent operations easier, we also include the run
                 before the WS if it is at the paraLevel - we merge the two here.
                
                 This method is called only from setLine(), so paraLevel is
                 set correctly for the line even when contextual multiple paragraphs.                
            </comment>
            <comment line="333">
                                
            </comment>
            <comment line="343">
                                
            </comment>
            <comment line="345">
                Reorder the same-level runs in the runs array.
                 Here, runCount&gt;1 and maxLevel&gt;=minLevel&gt;=paraLevel.
                 All the visualStart fields=logical start before reordering.
                 The &quot;odd&quot; bits are not set yet.
                
                 Reordering with this data structure lends itself to some handy shortcuts:
                
                 Since each run is moved but not modified, and since at the initial maxLevel
                 each sequence of same-level runs consists of only one run each, we
                 don&apos;t need to do anything there and can predecrement maxLevel.
                 In many simple cases, the reordering is thus done entirely in the
                 index mapping.
                 Also, reordering occurs only down to the lowest odd level that occurs,
                 which is minLevel|1. However, if the lowest level itself is odd, then
                 in the last reordering the sequence of the runs at this level or higher
                 will be all runs, and we don&apos;t need the elaborate loop to search for them.
                 This is covered by ++minLevel instead of minLevel|=1 followed
                 by an extra reorder-all after the reorder-some loop.
                 About a trailing WS run:
                 Such a run would need special treatment because its level is not
                 reflected in levels[] if this is not a paragraph object.
                 Instead, all characters from trailingWSStart on are implicitly at
                 paraLevel.
                 However, for all maxLevel&gt;paraLevel, this run will never be reordered
                 and does not need to be taken into account. maxLevel==paraLevel is only reordered
                 if minLevel==paraLevel is odd, which is done in the extra segment.
                 This means that for the main reordering loop we don&apos;t need to consider
                 this run and can --runCount. If it is later part of the all-runs
                 reordering, then runCount is adjusted accordingly.                
            </comment>
            <comment line="460">
                                
            </comment>
            <comment line="478">
                Compute the runs array from the levels array.
                 After getRuns() returns true, runCount is guaranteed to be &gt;0
                 and the runs are reordered.
                 Odd-level runs have visualStart on their visual right edge and
                 they progress visually to the left.
                 If option OPTION_INSERT_MARKS is set, insertRemove will contain the
                 sum of appropriate LRMRLM_BEFOREAFTER flags.
                 If option OPTION_REMOVE_CONTROLS is set, insertRemove will contain the
                 negative number of BiDi control characters within this run.                
            </comment>
            <method name="setTrailingWSStart" type="void" line="113">
                <params>
                    <param name="bidiBase" type="BidiBase"/>
                </params>
                <comment line="119">
                    If the line is terminated by a block separator, all preceding WS etc...
                    are already set to paragraph level.
                    Setting trailingWSStart to pBidi-&gt;length will avoid changing the
                    level of B chars from 0 to paraLevel in getLevels when
                    orderParagraphsLTR==TRUE                    
                </comment>
                <comment line="126">
                                        
                </comment>
                <comment line="129">
                                        
                </comment>
                <comment line="135">
                                        
                </comment>
                <declaration name="dirProps" type="byte[]" line="114"/>
                <declaration name="levels" type="byte[]" line="115"/>
                <declaration name="start" type="int" line="116"/>
                <declaration name="paraLevel" type="byte" line="117"/>
                <scope line="125"/>
                <scope line="131"/>
                <scope line="136"/>
            </method>
            <method name="setLine" type="Bidi" line="145">
                <params>
                    <param name="bidi" type="Bidi"/>
                    <param name="paraBidi" type="BidiBase"/>
                    <param name="newBidi" type="Bidi"/>
                    <param name="newBidiBase" type="BidiBase"/>
                    <param name="start" type="int"/>
                    <param name="limit" type="int"/>
                </params>
                <comment line="150">
                                        
                </comment>
                <comment line="151">
                                        
                </comment>
                <comment line="152">
                    lineBidi.paraBidi = null;        /* mark unfinished setLine */                    
                </comment>
                <comment line="153">
                    lineBidi.flags = 0;                    
                </comment>
                <comment line="154">
                    lineBidi.controlCount = 0;                    
                </comment>
                <comment line="173">
                                        
                </comment>
                <comment line="178">
                                        
                </comment>
                <comment line="186">
                                        
                </comment>
                <comment line="189">
                    The parent&apos;s levels are all either
                     implicitly or explicitly ==paraLevel;
                     do the same here.                    
                </comment>
                <comment line="209">
                                        
                </comment>
                <comment line="211">
                                        
                </comment>
                <comment line="214">
                                        
                </comment>
                <comment line="217">
                    if there is anything of a different level, then the line                    
                </comment>
                <comment line="221">
                    the trailing WS is at paraLevel, which differs from                    
                </comment>
                <comment line="225">
                    see if levels[1..trailingWSStart-1] have the same                    
                </comment>
                <comment line="229">
                                        
                </comment>
                <comment line="242">
                                        
                </comment>
                <comment line="246">
                    all levels are implicitly at paraLevel (important for                    
                </comment>
                <comment line="251">
                                        
                </comment>
                <comment line="254">
                    all levels are implicitly at paraLevel (important for                    
                </comment>
                <comment line="263">
                                        
                </comment>
                <declaration name="length" type="int" line="146"/>
                <declaration name="lineBidi" type="BidiBase" line="148"/>
                <scope line="164">
                    <declaration name="j" type="int" line="165"/>
                    <scope line="166">
                        <scope line="167"/>
                    </scope>
                </scope>
                <scope line="185">
                    <scope line="194"/>
                    <scope line="196"/>
                    <scope line="198"/>
                </scope>
                <scope line="201">
                    <declaration name="levels" type="byte[]" line="202"/>
                    <declaration name="i" type="int" line="203"/>
                    <declaration name="level" type="byte" line="204"/>
                    <scope line="210"/>
                    <scope line="213">
                        <scope line="220"/>
                        <scope line="224">
                            <scope line="227">
                                <scope line="228"/>
                                <scope line="232"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="getLevelAt" type="byte" line="268">
                <params>
                    <param name="bidiBase" type="BidiBase"/>
                    <param name="charIndex" type="int"/>
                </params>
                <comment line="269">
                                        
                </comment>
                <scope line="270"/>
                <scope line="272"/>
            </method>
            <method name="getLevels" type="byte[]" line="278">
                <params>
                    <param name="bidiBase" type="BidiBase"/>
                </params>
                <comment line="283">
                                        
                </comment>
                <comment line="284">
                    After the previous if(), we know that the levels array
                     has an implicit trailing WS run and therefore does not fully
                     reflect itself all the levels.
                     This must be a Bidi object for a line, and
                     we need to create a new levels array.                    
                </comment>
                <comment line="291">
                    bidiBase.paraLevel is ok even if contextual multiple paragraphs,                    
                </comment>
                <comment line="295">
                                        
                </comment>
                <declaration name="start" type="int" line="279"/>
                <declaration name="length" type="int" line="280"/>
                <scope line="282"/>
                <scope line="298">
                    <declaration name="levels" type="byte[]" line="299"/>
                </scope>
            </method>
            <method name="getLogicalRun" type="BidiRun" line="307">
                <params>
                    <param name="bidiBase" type="BidiBase"/>
                    <param name="logicalPosition" type="int"/>
                </params>
                <comment line="308">
                    this is done based on runs rather than on levels since levels have
                    a special interpretation when REORDER_RUNS_ONLY                    
                </comment>
                <declaration name="newRun" type="BidiRun" line="311"/>
                <declaration name="runCount" type="int" line="313"/>
                <declaration name="visualStart" type="int" line="314"/>
                <scope line="317">
                    <scope line="321"/>
                </scope>
            </method>
            <method name="getSingleRun" type="void" line="333">
                <params>
                    <param name="bidiBase" type="BidiBase"/>
                    <param name="level" type="byte"/>
                </params>
                <comment line="334">
                                        
                </comment>
                <comment line="338">
                                        
                </comment>
            </method>
            <method name="reorderLine" type="void" line="375">
                <params>
                    <param name="bidiBase" type="BidiBase"/>
                    <param name="minLevel" type="byte"/>
                    <param name="maxLevel" type="byte"/>
                </params>
                <comment line="377">
                                        
                </comment>
                <comment line="387">
                    Reorder only down to the lowest odd level
                     and reorder at an odd minLevel in a separate, simpler loop.
                     See comments above for why minLevel is always incremented.                    
                </comment>
                <comment line="398">
                                        
                </comment>
                <comment line="406">
                                        
                </comment>
                <comment line="408">
                                        
                </comment>
                <comment line="409">
                                        
                </comment>
                <comment line="414">
                                        
                </comment>
                <comment line="417">
                                        
                </comment>
                <comment line="421">
                                        
                </comment>
                <comment line="432">
                                        
                </comment>
                <comment line="439">
                                        
                </comment>
                <comment line="443">
                                        
                </comment>
                <comment line="448">
                                        
                </comment>
                <scope line="378"/>
                <declaration name="runs" type="BidiRun[]" line="382"/>
                <declaration name="tempRun" type="BidiRun" line="383"/>
                <declaration name="levels" type="byte[]" line="384"/>
                <declaration name="firstRun" type="int" line="385"/>
                <scope line="399"/>
                <scope line="403">
                    <scope line="407">
                        <scope line="410"/>
                        <scope line="413"/>
                        <scope line="419"/>
                        <scope line="423"/>
                        <scope line="431"/>
                        <scope line="433"/>
                    </scope>
                </scope>
                <scope line="440">
                    <scope line="444"/>
                    <scope line="449"/>
                </scope>
            </method>
            <method name="getRunFromLogicalIndex" type="int" line="461">
                <params>
                    <param name="bidiBase" type="BidiBase"/>
                    <param name="logicalIndex" type="int"/>
                </params>
                <comment line="473">
                                        
                </comment>
                <declaration name="runs" type="BidiRun[]" line="462"/>
                <declaration name="runCount" type="int" line="463"/>
                <scope line="465">
                    <scope line="468"/>
                </scope>
            </method>
            <method name="getRuns" type="void" line="488">
                <params>
                    <param name="bidiBase" type="BidiBase"/>
                </params>
                <comment line="489">
                    This method returns immediately if the runs are already set. This
                     includes the case of length==0 (handled in setPara)..                    
                </comment>
                <comment line="497">
                                        
                </comment>
                <comment line="498">
                                        
                </comment>
                <comment line="500">
                                        
                </comment>
                <comment line="501">
                                        
                </comment>
                <comment line="505">
                                        
                </comment>
                <comment line="506">
                    If there are WS characters at the end of the line
                     and the run preceding them has a level different from
                     paraLevel, then they will form their own run at paraLevel (L1).
                     Count them separately.
                     We need some special treatment for this in order to not
                     modify the levels array which a line Bidi object shares
                     with its paragraph parent and its other line siblings.
                     In other words, for the trailing WS, it may be
                     levels[]!=paraLevel but we have to treat it like it were so.                    
                </comment>
                <comment line="518">
                                        
                </comment>
                <comment line="521">
                                        
                </comment>
                <comment line="528">
                    We don&apos;t need to see if the last run can be merged with a trailing
                     WS run because setTrailingWSStart() would have done that.                    
                </comment>
                <comment line="533">
                                        
                </comment>
                <comment line="535">
                                        
                </comment>
                <comment line="536">
                                        
                </comment>
                <comment line="542">
                                        
                </comment>
                <comment line="547">
                                        
                </comment>
                <comment line="551">
                                        
                </comment>
                <comment line="552">
                    FOOD FOR THOUGHT: this could be optimized, e.g.:
                     464-&gt;444, 484-&gt;444, 575-&gt;555, 595-&gt;555
                     However, that would take longer. Check also how it would
                     interact with BiDi control removal and inserting Marks.                    
                </comment>
                <comment line="559">
                                        
                </comment>
                <comment line="562">
                                        
                </comment>
                <comment line="572">
                                        
                </comment>
                <comment line="575">
                                        
                </comment>
                <comment line="581">
                                        
                </comment>
                <comment line="583">
                    For the trailing WS run, bidiBase.paraLevel is ok even                    
                </comment>
                <comment line="590">
                                        
                </comment>
                <comment line="596">
                                        
                </comment>
                <comment line="597">
                                        
                </comment>
                <comment line="604">
                                        
                </comment>
                <comment line="605">
                                        
                </comment>
                <comment line="606">
                    For the trailing WS run, bidiBase.paraLevel is ok even if                    
                </comment>
                <comment line="615">
                                        
                </comment>
                <comment line="626">
                                        
                </comment>
                <scope line="493"/>
                <scope line="496"/>
                <scope line="500">
                    <declaration name="length" type="int" line="502"/>
                    <declaration name="levels" type="byte[]" line="503"/>
                    <declaration name="i" type="int" line="504"/>
                    <declaration name="level" type="byte" line="505"/>
                    <scope line="520">
                        <scope line="522"/>
                    </scope>
                    <scope line="532"/>
                    <scope line="535">
                        <declaration name="runs" type="BidiRun[]" line="537"/>
                        <declaration name="runIndex" type="int" line="538"/>
                        <declaration name="minLevel" type="byte" line="539"/>
                        <declaration name="maxLevel" type="byte" line="540"/>
                        <scope line="543"/>
                        <scope line="561">
                            <scope line="565"/>
                            <scope line="568"/>
                            <scope line="573"/>
                        </scope>
                        <scope line="580">
                            <scope line="585"/>
                        </scope>
                        <scope line="599"/>
                        <scope line="608">
                            <declaration name="trailingRun" type="int" line="609"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="616">
                    <declaration name="point" type="BidiBase.Point" line="617"/>
                    <declaration name="runIndex" type="int" line="618"/>
                    <scope line="619"/>
                </scope>
                <scope line="627">
                    <declaration name="runIndex" type="int" line="628"/>
                    <declaration name="c" type="char" line="629"/>
                    <scope line="630">
                        <scope line="632"/>
                    </scope>
                </scope>
            </method>
            <method name="prepareReorder" type="int[]" line="641">
                <params>
                    <param name="levels" type="byte[]"/>
                    <param name="pMinLevel" type="byte[]"/>
                    <param name="pMaxLevel" type="byte[]"/>
                </params>
                <comment line="649">
                                        
                </comment>
                <comment line="667">
                                        
                </comment>
                <declaration name="start" type="int" line="642"/>
                <declaration name="level" type="byte" line="643"/>
                <scope line="645"/>
                <scope line="652">
                    <scope line="654"/>
                    <scope line="657"/>
                    <scope line="660"/>
                </scope>
                <declaration name="indexMap" type="int[]" line="668"/>
                <scope line="669"/>
            </method>
            <method name="reorderVisual" type="int[]" line="678">
                <params>
                    <param name="levels" type="byte[]"/>
                </params>
                <comment line="692">
                                        
                </comment>
                <comment line="697">
                                        
                </comment>
                <comment line="700">
                                        
                </comment>
                <comment line="704">
                                        
                </comment>
                <comment line="706">
                                        
                </comment>
                <comment line="707">
                                        
                </comment>
                <comment line="712">
                                        
                </comment>
                <comment line="715">
                                        
                </comment>
                <comment line="718">
                    Swap the entire interval of indexes from start to limit-1.
                     We don&apos;t need to swap the levels for the purpose of this
                     algorithm: the sequence of levels that we look at does not
                     move anyway.                    
                </comment>
                <comment line="735">
                                        
                </comment>
                <declaration name="aMinLevel" type="byte[]" line="679"/>
                <declaration name="aMaxLevel" type="byte[]" line="680"/>
                <declaration name="start" type="int" line="681"/>
                <declaration name="minLevel" type="byte" line="682"/>
                <declaration name="indexMap" type="int[]" line="684"/>
                <scope line="685"/>
                <scope line="693"/>
                <scope line="701">
                    <scope line="705">
                        <scope line="708"/>
                        <scope line="711"/>
                        <scope line="716"/>
                        <scope line="725"/>
                        <scope line="734"/>
                        <scope line="736"/>
                    </scope>
                </scope>
            </method>
            <method name="getVisualMap" type="int[]" line="746">
                <params>
                    <param name="bidiBase" type="BidiBase"/>
                </params>
                <comment line="747">
                                        
                </comment>
                <comment line="760">
                                        
                </comment>
                <comment line="764">
                                        
                </comment>
                <comment line="765">
                                        
                </comment>
                <comment line="769">
                                        
                </comment>
                <comment line="776">
                                        
                </comment>
                <comment line="786">
                                        
                </comment>
                <comment line="811">
                                        
                </comment>
                <comment line="816">
                                        
                </comment>
                <comment line="821">
                                        
                </comment>
                <declaration name="runs" type="BidiRun[]" line="748"/>
                <declaration name="logicalStart" type="int" line="749"/>
                <declaration name="allocLength" type="int" line="750"/>
                <declaration name="indexMap" type="int[]" line="752"/>
                <declaration name="idx" type="int" line="755"/>
                <scope line="756">
                    <scope line="759">
                        <scope line="760"/>
                    </scope>
                    <scope line="763">
                        <scope line="765"/>
                    </scope>
                </scope>
                <scope line="772">
                    <declaration name="markFound" type="int" line="773"/>
                    <declaration name="insertRemove" type="int" line="774"/>
                    <scope line="777">
                        <scope line="779"/>
                        <scope line="782"/>
                    </scope>
                    <scope line="788">
                        <scope line="790"/>
                        <scope line="795"/>
                        <scope line="798"/>
                    </scope>
                </scope>
                <scope line="804">
                    <declaration name="runCount" type="int" line="805"/>
                    <declaration name="insertRemove" type="int" line="806"/>
                    <declaration name="uchar" type="char" line="807"/>
                    <declaration name="evenRun" type="boolean" line="808"/>
                    <scope line="813">
                        <scope line="817"/>
                        <scope line="822">
                            <scope line="824"/>
                        </scope>
                        <scope line="832">
                            <scope line="835"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="841"/>
                <declaration name="newMap" type="int[]" line="844"/>
            </method>
        </class>
    </source>