<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.launcher">
        <import package="java.io.File"/>
        <import package="java.io.IOException"/>
        <import package="java.io.PrintStream"/>
        <import package="java.io.UnsupportedEncodingException"/>
        <import package="java.lang.reflect.Method"/>
        <import package="java.lang.reflect.Modifier"/>
        <import package="java.math.BigDecimal"/>
        <import package="java.math.RoundingMode"/>
        <import package="java.nio.charset.Charset"/>
        <import package="java.util.ResourceBundle"/>
        <import package="java.text.MessageFormat"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collections"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.List"/>
        <import package="java.util.Locale"/>
        <import package="java.util.Locale.Category"/>
        <import package="java.util.Properties"/>
        <import package="java.util.Set"/>
        <import package="java.util.TreeSet"/>
        <import package="java.util.jar.Attributes"/>
        <import package="java.util.jar.JarFile"/>
        <import package="java.util.jar.Manifest"/>
        <class name="ResourceBundleHolder" line="34">
            <declaration name="RB" type="ResourceBundle" line="35"/>
            <scope line="-1"/>
            <method name="showSettings" type="void" line="37">
                <params>
                    <param name="printToStderr" type="boolean"/>
                    <param name="optionFlag" type="String"/>
                    <param name="initialHeapSize" type="long"/>
                    <param name="maxHeapSize" type="long"/>
                    <param name="stackSize" type="long"/>
                    <param name="isServer" type="boolean"/>
                </params>
                <declaration name="ostream" type="PrintStream" line="38"/>
                <declaration name="opts" type="String" line="39"/>
                <declaration name="optStr" type="String" line="40"/>
            </method>
            <method name="printVmSettings" type="void" line="58">
                <params>
                    <param name="ostream" type="PrintStream"/>
                    <param name="initialHeapSize" type="long"/>
                    <param name="maxHeapSize" type="long"/>
                    <param name="stackSize" type="long"/>
                    <param name="isServer" type="boolean"/>
                </params>
                <scope line="60"/>
                <scope line="63"/>
                <scope line="66"/>
                <scope line="69"/>
            </method>
            <method name="printProperties" type="void" line="76">
                <params>
                    <param name="ostream" type="PrintStream"/>
                </params>
                <declaration name="p" type="Properties" line="77"/>
                <declaration name="sortedPropertyKeys" type="List&amp;lt;String&amp;gt;" line="79"/>
                <scope line="82"/>
            </method>
            <method name="isPath" type="boolean" line="87">
                <params>
                    <param name="key" type="String"/>
                </params>
            </method>
            <method name="printPropertyValue" type="void" line="90">
                <params>
                    <param name="ostream" type="PrintStream"/>
                    <param name="key" type="String"/>
                    <param name="value" type="String"/>
                </params>
                <scope line="92">
                    <scope line="93"/>
                </scope>
                <scope line="109"/>
                <declaration name="values" type="String[]" line="113"/>
                <declaration name="first" type="boolean" line="114"/>
                <scope line="115">
                    <scope line="116"/>
                    <scope line="120"/>
                </scope>
            </method>
            <method name="printLocale" type="void" line="125">
                <params>
                    <param name="ostream" type="PrintStream"/>
                </params>
                <declaration name="locale" type="Locale" line="126"/>
            </method>
            <method name="printLocales" type="void" line="134">
                <params>
                    <param name="ostream" type="PrintStream"/>
                </params>
                <declaration name="tlocales" type="Locale[]" line="135"/>
                <declaration name="len" type="int" line="136"/>
                <scope line="137"/>
                <declaration name="sortedSet" type="Set&amp;lt;String&amp;gt;" line="140"/>
                <scope line="141"/>
                <declaration name="iter" type="Iterator&amp;lt;String&amp;gt;" line="145"/>
                <declaration name="last" type="int" line="146"/>
                <scope line="147">
                    <declaration name="s" type="String" line="148"/>
                    <scope line="150"/>
                    <scope line="153"/>
                </scope>
            </method>
            <declaration name="SizePrefix" type="enum" line="159"/>
            <method name="KILO" type="constructor" line="159"/>
            <method name="SizePrefix" type="constructor" line="161">
                <params>
                    <param name="size" type="long"/>
                    <param name="abbrev" type="String"/>
                </params>
            </method>
            <method name="scale" type="String" line="165">
                <params>
                    <param name="v" type="long"/>
                    <param name="prefix" type="SizePrefix"/>
                </params>
            </method>
            <method name="scaleValue" type="String" line="168">
                <params>
                    <param name="v" type="long"/>
                </params>
                <scope line="169"/>
                <scope line="172"/>
                <scope line="175"/>
                <scope line="178"/>
            </method>
            <scope line="-1"/>
            <javadoc line="183">
                A private helper method to get a localized message and also
                  apply any arguments that we might pass.                
            </javadoc>
            <method name="getLocalizedMessage" type="String" line="187">
                <params>
                    <param name="key" type="String"/>
                    <param name="args" type="Object"/>
                </params>
                <declaration name="msg" type="String" line="188"/>
            </method>
            <javadoc line="191">
                The java -help message is split into 3 parts, an invariant, followed
                  by a set of platform dependent variant messages, finally an invariant
                  set of lines.
                  This method initializes the help message for the first time, and also
                  assembles the invariant header part of the message.                
            </javadoc>
            <method name="initHelpMessage" type="void" line="198">
                <params>
                    <param name="progname" type="String"/>
                </params>
            </method>
            <javadoc line="203">
                Appends the vm selection messages to the header, already created.
                  initHelpSystem must already be called.                
            </javadoc>
            <method name="appendVmSelectMessage" type="void" line="207">
                <params>
                    <param name="vm1" type="String"/>
                    <param name="vm2" type="String"/>
                </params>
            </method>
            <javadoc line="210">
                Appends the vm synoym message to the header, already created.
                  initHelpSystem must be called before using this method.                
            </javadoc>
            <method name="appendVmSynonymMessage" type="void" line="214">
                <params>
                    <param name="vm1" type="String"/>
                    <param name="vm2" type="String"/>
                </params>
            </method>
            <javadoc line="217">
                Appends the vm Ergo message to the header, already created.
                  initHelpSystem must be called before using this method.                
            </javadoc>
            <method name="appendVmErgoMessage" type="void" line="221">
                <params>
                    <param name="isServerClass" type="boolean"/>
                    <param name="vm" type="String"/>
                </params>
            </method>
            <javadoc line="225">
                Appends the last invariant part to the previously created messages,
                  and finishes up the printing to the desired output stream.
                  initHelpSystem must be called before using this method.                
            </javadoc>
            <method name="printHelpMessage" type="void" line="230">
                <params>
                    <param name="printToStderr" type="boolean"/>
                </params>
                <declaration name="ostream" type="PrintStream" line="231"/>
            </method>
            <javadoc line="235">
                Prints the Xusage text to the desired output stream.                
            </javadoc>
            <method name="printXUsageMessage" type="void" line="238">
                <params>
                    <param name="printToStderr" type="boolean"/>
                </params>
                <declaration name="ostream" type="PrintStream" line="239"/>
            </method>
            <method name="getMainClassFromJar" type="String" line="242">
                <params>
                    <param name="ostream" type="PrintStream"/>
                    <param name="jarname" type="String"/>
                </params>
                <scope line="243">
                    <declaration name="jarFile" type="JarFile" line="244"/>
                    <scope line="245">
                        <declaration name="manifest" type="Manifest" line="247"/>
                        <scope line="248"/>
                        <declaration name="mainAttrs" type="Attributes" line="251"/>
                        <scope line="252"/>
                    </scope>
                    <scope line="257">
                        <scope line="258"/>
                    </scope>
                </scope>
                <scope line="263"/>
            </method>
            <declaration name="LM_UNKNOWN" type="int" line="268"/>
            <declaration name="LM_CLASS" type="int" line="269"/>
            <declaration name="LM_JAR" type="int" line="270"/>
            <method name="abort" type="void" line="271">
                <params>
                    <param name="ostream" type="PrintStream"/>
                    <param name="t" type="Throwable"/>
                    <param name="msgKey" type="String"/>
                    <param name="args" type="Object"/>
                </params>
                <scope line="272"/>
                <scope line="275">
                    <scope line="276"/>
                    <scope line="279"/>
                </scope>
            </method>
            <javadoc line="285">
                This method does the following:
                  1. gets the classname from a Jar&apos;s manifest, if necessary
                  2. loads the class using the System ClassLoader
                  3. ensures the availability and accessibility of the main method,
                  using signatureDiagnostic method.
                  a. does the class exist
                  b. is there a main
                  c. is the main public
                  d. is the main static
                  c. does the main take a String array for args
                  4. and off we go......                
                <param>
                    printToStderr                    
                </param>
                <param>
                    isJar                    
                </param>
                <param>
                    name                    
                </param>
                <return>
                                        
                </return>
            </javadoc>
            <method name="checkAndLoadMain" type="Class&lt;?&gt;" line="302">
                <params>
                    <param name="printToStderr" type="boolean"/>
                    <param name="mode" type="int"/>
                    <param name="what" type="String"/>
                </params>
                <declaration name="ostream" type="PrintStream" line="303"/>
                <declaration name="ld" type="ClassLoader" line="304"/>
                <declaration name="cn" type="String" line="305"/>
                <declaration name="c" type="Class&amp;lt;?&amp;gt;" line="317"/>
                <scope line="318"/>
                <scope line="321"/>
            </method>
            <method name="getMainMethod" type="Method" line="327">
                <params>
                    <param name="ostream" type="PrintStream"/>
                    <param name="clazz" type="Class&lt;?&gt;"/>
                </params>
                <declaration name="classname" type="String" line="328"/>
                <declaration name="method" type="Method" line="329"/>
                <scope line="330"/>
                <scope line="333"/>
                <declaration name="mod" type="int" line="336"/>
                <scope line="337"/>
                <scope line="340"/>
            </method>
            <declaration name="encprop" type="String" line="345"/>
            <declaration name="encoding" type="String" line="346"/>
            <declaration name="isCharsetSupported" type="boolean" line="347"/>
            <method name="makePlatformString" type="String" line="348">
                <params>
                    <param name="printToStderr" type="boolean"/>
                    <param name="inArray" type="byte[]"/>
                </params>
                <declaration name="ostream" type="PrintStream" line="349"/>
                <scope line="350"/>
                <scope line="354">
                    <declaration name="out" type="String" line="355"/>
                </scope>
                <scope line="358"/>
            </method>
        </class>
    </source>