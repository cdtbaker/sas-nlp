<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.io">
        <class name="CharToByteDoubleByte" line="28">
            <extends class="CharToByteConverter"/>
            <comment line="35">
                1st level index, provided by subclass                
            </comment>
            <comment line="40">
                2nd level index, provided by subclass                
            </comment>
            <comment line="214">
                Can be changed by subclass                
            </comment>
            <comment line="225">
                Can be changed by subclass                
            </comment>
            <javadoc line="28">
                @author Limin Shi                
            </javadoc>
            <declaration name="index1" type="short" line="37"/>
            <declaration name="index2" type="String" line="42"/>
            <declaration name="highHalfZoneCode" type="char" line="44"/>
            <method name="getIndex1" type="short[]" line="46"/>
            <method name="getIndex2" type="String[]" line="50"/>
            <method name="flush" type="int" line="56">
                <params>
                    <param name="output" type="byte[]"/>
                    <param name="outStart" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <scope line="57"/>
            </method>
            <javadoc line="66">
                Converts characters to sequences of bytes.
                  Conversions that result in Exceptions can be restarted by calling
                  convert again, with appropriately modified parameters.                
                <return>
                    the characters written to output.                    
                </return>
                <param>
                    input char array containing text in Unicode                    
                </param>
                <param>
                    inStart offset in input array                    
                </param>
                <param>
                    inEnd offset of last byte to be converted                    
                </param>
                <param>
                    output byte array to receive conversion result                    
                </param>
                <param>
                    outStart starting offset                    
                </param>
                <param>
                    outEnd offset of last byte to be written to                    
                </param>
                <throw>
                    UnsupportedCharacterException for any character
                      that cannot be converted to the external character set.                    
                </throw>
            </javadoc>
            <method name="convert" type="int" line="84">
                <params>
                    <param name="input" type="char[]"/>
                    <param name="inOff" type="int"/>
                    <param name="inEnd" type="int"/>
                    <param name="output" type="byte[]"/>
                    <param name="outOff" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <comment line="86">
                    Input character to be converted                    
                </comment>
                <comment line="87">
                    Output byte written to output                    
                </comment>
                <comment line="88">
                    Size of input                    
                </comment>
                <comment line="89">
                    Size of output                    
                </comment>
                <comment line="92">
                    Record beginning offsets                    
                </comment>
                <comment line="100">
                    This is legal UTF16 sequence.                    
                </comment>
                <comment line="104">
                    This is illegal UTF16 sequence.                    
                </comment>
                <comment line="110">
                    Loop until we hit the end of the input                    
                </comment>
                <comment line="114">
                    Get the input character                    
                </comment>
                <comment line="116">
                    Is this a high surrogate?                    
                </comment>
                <comment line="118">
                    Is this the last character of the input?                    
                </comment>
                <comment line="124">
                    Is there a low surrogate following?                    
                </comment>
                <comment line="127">
                    We have a valid surrogate pair.  Too bad we don&apos;t do
                     surrogates.  Is substitution enabled?                    
                </comment>
                <comment line="138">
                    We have a malformed surrogate pair                    
                </comment>
                <comment line="143">
                    Is this an unaccompanied low surrogate?                    
                </comment>
                <comment line="149">
                    DoubleByte                    
                </comment>
                <comment line="167">
                    If we don&apos;t have room for the output, throw an exception                    
                </comment>
                <comment line="171">
                    Put the byte in the output buffer                    
                </comment>
                <comment line="177">
                    Return the length written to the output buffer                    
                </comment>
                <declaration name="inputChar" type="char" line="85"/>
                <declaration name="outputByte" type="byte[]" line="86"/>
                <declaration name="inputSize" type="int" line="87"/>
                <declaration name="outputSize" type="int" line="88"/>
                <declaration name="tmpbuf" type="byte[]" line="89"/>
                <scope line="95">
                    <scope line="98"/>
                    <scope line="102"/>
                </scope>
                <scope line="110">
                    <scope line="116">
                        <scope line="118"/>
                        <scope line="125">
                            <scope line="128"/>
                            <scope line="132"/>
                        </scope>
                        <scope line="136"/>
                    </scope>
                    <scope line="143"/>
                    <scope line="146">
                        <scope line="148">
                            <declaration name="ncode" type="int" line="149"/>
                            <scope line="150"/>
                            <scope line="154">
                                <scope line="155"/>
                                <scope line="158"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="171"/>
                </scope>
            </method>
            <javadoc line="181">
                the maximum number of bytes needed to hold a converted char                
                <returns>
                    the maximum number of bytes needed for a converted char                    
                </returns>
            </javadoc>
            <method name="getMaxBytesPerChar" type="int" line="185"/>
            <javadoc line="189">
                Resets the converter.
                  Call this method to reset the converter to its initial state                
            </javadoc>
            <method name="reset" type="void" line="193"/>
            <javadoc line="198">
                Return whether a character is mappable or not                
                <return>
                    true if a character is mappable                    
                </return>
            </javadoc>
            <method name="canConvert" type="boolean" line="202">
                <params>
                    <param name="ch" type="char"/>
                </params>
                <declaration name="outByte" type="byte[]" line="203"/>
            </method>
            <method name="convSingleByte" type="int" line="216">
                <params>
                    <param name="inputChar" type="char"/>
                    <param name="outputByte" type="byte[]"/>
                </params>
                <scope line="217"/>
            </method>
            <method name="getNative" type="int" line="227">
                <params>
                    <param name="ch" type="char"/>
                </params>
                <declaration name="offset" type="int" line="228"/>
            </method>
        </class>
    </source>