<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.io">
        <import package="java.io"/>
        <class name="ByteToCharUnicode" line="30">
            <extends class="ByteToCharConverter"/>
            <comment line="60">
                                
            </comment>
            <comment line="61">
                                
            </comment>
            <comment line="62">
                                
            </comment>
            <javadoc line="30">
                Convert byte arrays containing Unicode characters into arrays of actual
                  Unicode characters.  This class may be used directly, in which case it
                  expects the input byte array to begin with a byte-order mark, or it may be
                  subclassed in order to preset the byte order and mark behavior.
                  &lt;p&gt; Whether or not a mark is expected, if a mark that does not match the
                  established byte order is later discovered then a
                  &lt;tt&gt;MalformedInputException&lt;/tt&gt; will be thrown by the &lt;tt&gt;convert&lt;/tt&gt;
                  method.  If a correct mark is seen later in the input stream, it is passed
                  through as a character.                
                <see>
                    ByteToCharUnicodeLittle                    
                </see>
                <see>
                    ByteToCharUnicodeLittleUnmarked                    
                </see>
                <see>
                    ByteToCharUnicodeBig                    
                </see>
                <see>
                    ByteToCharUnicodeBigUnmarked                    
                </see>
                <author>
                    Mark Reinhold                    
                </author>
            </javadoc>
            <declaration name="BYTE_ORDER_MARK" type="char" line="52"/>
            <declaration name="REVERSED_MARK" type="char" line="53"/>
            <declaration name="AUTO" type="int" line="55"/>
            <declaration name="BIG" type="int" line="56"/>
            <declaration name="LITTLE" type="int" line="57"/>
            <declaration name="originalByteOrder" type="int" line="59"/>
            <declaration name="byteOrder" type="int" line="60"/>
            <declaration name="usesMark" type="boolean" line="61"/>
            <javadoc line="63">
                Creates a Unicode byte-to-char converter that expects the first pair of
                  input bytes to be a byte-order mark, which will be interpreted and
                  discarded.  If the first pair of bytes is not such a mark then a
                  &lt;tt&gt;MalformedInputException&lt;/tt&gt; will be thrown by the convert method.                
            </javadoc>
            <method name="ByteToCharUnicode" type="constructor" line="69"/>
            <javadoc line="74">
                Creates a Unicode byte-to-char converter that uses the given byte order
                  and may or may not insist upon an initial byte-order mark.                
            </javadoc>
            <method name="ByteToCharUnicode" type="constructor" line="78">
                <params>
                    <param name="bo" type="int"/>
                    <param name="m" type="boolean"/>
                </params>
            </method>
            <method name="getCharacterEncoding" type="String" line="83"/>
            <declaration name="started" type="boolean" line="94"/>
            <declaration name="leftOverByte" type="int" line="95"/>
            <declaration name="leftOver" type="boolean" line="96"/>
            <method name="convert" type="int" line="101">
                <params>
                    <param name="in" type="byte[]"/>
                    <param name="inOff" type="int"/>
                    <param name="inEnd" type="int"/>
                    <param name="out" type="char[]"/>
                    <param name="outOff" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <comment line="122">
                                        
                </comment>
                <comment line="167">
                                        
                </comment>
                <declaration name="b1" type="int" line="108"/>
                <declaration name="bc" type="int" line="109"/>
                <declaration name="inI" type="int" line="110"/>
                <scope line="112"/>
                <scope line="116"/>
                <scope line="121">
                    <scope line="122">
                        <declaration name="c" type="char" line="126"/>
                        <declaration name="bo" type="int" line="127"/>
                        <scope line="134">
                            <scope line="135"/>
                            <scope line="141"/>
                        </scope>
                        <scope line="146"/>
                        <scope line="150">
                            <scope line="151"/>
                        </scope>
                        <scope line="156"/>
                    </scope>
                </scope>
                <scope line="167">
                    <declaration name="c" type="char" line="171"/>
                    <scope line="187"/>
                </scope>
                <scope line="193"/>
            </method>
            <method name="reset" type="void" line="202"/>
            <method name="flush" type="int" line="211">
                <params>
                    <param name="buf" type="char"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="212"/>
            </method>
        </class>
    </source>