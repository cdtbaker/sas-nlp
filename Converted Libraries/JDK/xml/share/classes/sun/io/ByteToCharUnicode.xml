<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.io">
        <import package="java.io"/>
        <class name="ByteToCharUnicode" line="3">
            <extends class="ByteToCharConverter"/>
            <javadoc line="3">
                Convert byte arrays containing Unicode characters into arrays of actual
                  Unicode characters.  This class may be used directly, in which case it
                  expects the input byte array to begin with a byte-order mark, or it may be
                  subclassed in order to preset the byte order and mark behavior.
                  &lt;p&gt; Whether or not a mark is expected, if a mark that does not match the
                  established byte order is later discovered then a
                  &lt;tt&gt;MalformedInputException&lt;/tt&gt; will be thrown by the &lt;tt&gt;convert&lt;/tt&gt;
                  method.  If a correct mark is seen later in the input stream, it is passed
                  through as a character.                
                <see>
                    ByteToCharUnicodeLittle                    
                </see>
                <see>
                    ByteToCharUnicodeLittleUnmarked                    
                </see>
                <see>
                    ByteToCharUnicodeBig                    
                </see>
                <see>
                    ByteToCharUnicodeBigUnmarked                    
                </see>
                <author>
                    Mark Reinhold                    
                </author>
            </javadoc>
            <declaration name="BYTE_ORDER_MARK" type="char" line="20"/>
            <declaration name="REVERSED_MARK" type="char" line="21"/>
            <declaration name="AUTO" type="int" line="22"/>
            <declaration name="BIG" type="int" line="23"/>
            <declaration name="LITTLE" type="int" line="24"/>
            <declaration name="originalByteOrder" type="int" line="25"/>
            <declaration name="byteOrder" type="int" line="26"/>
            <declaration name="usesMark" type="boolean" line="27"/>
            <javadoc line="28">
                Creates a Unicode byte-to-char converter that expects the first pair of
                  input bytes to be a byte-order mark, which will be interpreted and
                  discarded.  If the first pair of bytes is not such a mark then a
                  &lt;tt&gt;MalformedInputException&lt;/tt&gt; will be thrown by the convert method.                
            </javadoc>
            <method name="ByteToCharUnicode" type="constructor" line="34"/>
            <javadoc line="38">
                Creates a Unicode byte-to-char converter that uses the given byte order
                  and may or may not insist upon an initial byte-order mark.                
            </javadoc>
            <method name="ByteToCharUnicode" type="constructor" line="42">
                <params>
                    <param name="bo" type="int"/>
                    <param name="m" type="boolean"/>
                </params>
            </method>
            <method name="getCharacterEncoding" type="String" line="46"/>
            <declaration name="started" type="boolean" line="56"/>
            <declaration name="leftOverByte" type="int" line="57"/>
            <declaration name="leftOver" type="boolean" line="58"/>
            <method name="convert" type="int" line="59">
                <params>
                    <param name="in" type="byte[]"/>
                    <param name="inOff" type="int"/>
                    <param name="inEnd" type="int"/>
                    <param name="out" type="char[]"/>
                    <param name="outOff" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <declaration name="b1" type="int" line="63"/>
                <declaration name="bc" type="int" line="64"/>
                <declaration name="inI" type="int" line="65"/>
                <scope line="66"/>
                <scope line="70"/>
                <scope line="74">
                    <scope line="75">
                        <declaration name="c" type="char" line="78"/>
                        <declaration name="bo" type="int" line="79"/>
                        <scope line="82">
                            <scope line="83"/>
                            <scope line="88"/>
                        </scope>
                        <scope line="93"/>
                        <scope line="97">
                            <scope line="98"/>
                        </scope>
                        <scope line="103"/>
                    </scope>
                </scope>
                <scope line="110">
                    <declaration name="c" type="char" line="113"/>
                    <scope line="121"/>
                </scope>
                <scope line="126"/>
            </method>
            <method name="reset" type="void" line="133"/>
            <method name="flush" type="int" line="139">
                <params>
                    <param name="buf" type="char"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="140"/>
            </method>
        </class>
    </source>