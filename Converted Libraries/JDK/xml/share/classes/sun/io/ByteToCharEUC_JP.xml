<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.io">
        <class name="ByteToCharEUC_JP" line="2">
            <extends class="ByteToCharJIS0208"/>
            <javadoc line="2">
                @author Limin Shi                
            </javadoc>
            <declaration name="savedSecond" type="byte" line="6"/>
            <declaration name="bcJIS0201" type="ByteToCharJIS0201" line="7"/>
            <declaration name="bcJIS0212" type="ByteToCharJIS0212" line="8"/>
            <method name="ByteToCharEUC_JP" type="constructor" line="9"/>
            <method name="flush" type="int" line="15">
                <params>
                    <param name="output" type="char[]"/>
                    <param name="outStart" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <scope line="16"/>
            </method>
            <javadoc line="23">
                Resets the converter.
                  Call this method to reset the converter to its initial state                
            </javadoc>
            <method name="reset" type="void" line="27"/>
            <method name="getCharacterEncoding" type="String" line="31"/>
            <method name="convSingleByte" type="char" line="34">
                <params>
                    <param name="b" type="int"/>
                </params>
            </method>
            <method name="getUnicode" type="char" line="38">
                <params>
                    <param name="byte1" type="int"/>
                    <param name="byte2" type="int"/>
                </params>
                <scope line="39"/>
                <declaration name="n" type="int" line="43"/>
            </method>
            <method name="decode0212" type="char" line="46">
                <params>
                    <param name="byte1" type="int"/>
                    <param name="byte2" type="int"/>
                </params>
            </method>
            <javadoc line="49">
                Converts sequences of bytes to characters.
                  Conversions that result in Exceptions can be restarted by calling
                  convert again, with appropriately modified parameters.                
                <return>
                    the characters written to output.                    
                </return>
                <param>
                    input byte array containing text in Double/single Byte                    
                </param>
                <param>
                    inStart offset in input array                    
                </param>
                <param>
                    inEnd offset of last byte to be converted                    
                </param>
                <param>
                    output character array to receive conversion result                    
                </param>
                <param>
                    outStart starting offset                    
                </param>
                <param>
                    outEnd offset of last byte to be written to                    
                </param>
                <throw>
                    UnsupportedCharacterException for any bytes
                      that cannot be converted to the external character set.                    
                </throw>
            </javadoc>
            <method name="convert" type="int" line="63">
                <params>
                    <param name="input" type="byte[]"/>
                    <param name="inOff" type="int"/>
                    <param name="inEnd" type="int"/>
                    <param name="output" type="char[]"/>
                    <param name="outOff" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <declaration name="outputChar" type="char" line="64"/>
                <declaration name="inputSize" type="int" line="65"/>
                <scope line="68">
                    <declaration name="byte1" type="int" line="69"/>
                    <scope line="70"/>
                    <scope line="74"/>
                    <scope line="80">
                        <scope line="81">
                            <scope line="82">
                                <scope line="85"/>
                            </scope>
                            <scope line="91"/>
                            <scope line="95"/>
                        </scope>
                        <scope line="103">
                            <scope line="104"/>
                        </scope>
                    </scope>
                    <scope line="115">
                        <scope line="117"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>