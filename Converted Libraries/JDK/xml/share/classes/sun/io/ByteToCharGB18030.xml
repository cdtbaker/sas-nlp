<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.io">
        <import package="sun.nio.cs.ext.GB18030"/>
        <class name="ByteToCharGB18030" line="33">
            <extends class="ByteToCharGB18030DB"/>
            <declaration name="GB18030_SINGLE_BYTE" type="int" line="35"/>
            <declaration name="GB18030_DOUBLE_BYTE" type="int" line="36"/>
            <declaration name="GB18030_FOUR_BYTE" type="int" line="37"/>
            <declaration name="decoderIndex1" type="short[]" line="38"/>
            <declaration name="decoderIndex2" type="String[]" line="39"/>
            <declaration name="currentState" type="int" line="41"/>
            <declaration name="savedSize" type="int" line="42"/>
            <declaration name="savedBytes" type="byte[]" line="43"/>
            <method name="ByteToCharGB18030" type="constructor" line="45">
                <declaration name="nioCoder" type="GB18030" line="47"/>
            </method>
            <method name="getOuter" type="short[]" line="55"/>
            <method name="getInner" type="String[]" line="59"/>
            <method name="getDBIndex1" type="short[]" line="63"/>
            <method name="getDBIndex2" type="String[]" line="67"/>
            <method name="flush" type="int" line="73">
                <params>
                    <param name="output" type="char[]"/>
                    <param name="outStart" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <scope line="74"/>
            </method>
            <javadoc line="85">
                Character conversion                
            </javadoc>
            <method name="convert" type="int" line="92">
                <params>
                    <param name="input" type="byte[]"/>
                    <param name="inOff" type="int"/>
                    <param name="inEnd" type="int"/>
                    <param name="output" type="char[]"/>
                    <param name="outOff" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <comment line="95">
                    readOff keeps the actual buffer&apos;s pointer.                    
                </comment>
                <comment line="96">
                    byteOff keeps original buffer&apos;s pointer.                    
                </comment>
                <comment line="100">
                    Filter illegal bytes when they are detected in saved                    
                </comment>
                <comment line="101">
                    partial input from a previous conversion attempt.                    
                </comment>
                <comment line="130">
                    Is there room in the output buffer for the result?                    
                </comment>
                <comment line="135">
                    Get the input byte                    
                </comment>
                <comment line="139">
                    US-ASCII range                    
                </comment>
                <comment line="153">
                    Either 2 or 4 byte sequence follows                    
                </comment>
                <comment line="154">
                    If an underrun is detected save for later                    
                </comment>
                <comment line="155">
                    replay.                    
                </comment>
                <comment line="224">
                    Mixture of table lookups and algorithmic calculation                    
                </comment>
                <comment line="225">
                    of character values.                    
                </comment>
                <comment line="227">
                    BMP Ranges                    
                </comment>
                <comment line="239">
                    Supplemental UCS planes handled via surrogates                    
                </comment>
                <declaration name="inputSize" type="int" line="93"/>
                <declaration name="outputChar" type="char" line="94"/>
                <declaration name="readOff" type="int" line="97"/>
                <scope line="99">
                    <scope line="107"/>
                    <declaration name="newBuf" type="byte[]" line="112"/>
                    <scope line="113"/>
                </scope>
                <scope line="127">
                    <declaration name="byte1" type="int" line="128"/>
                    <scope line="131"/>
                    <scope line="139"/>
                    <scope line="144">
                        <scope line="147"/>
                    </scope>
                    <scope line="152">
                        <scope line="157"/>
                        <scope line="166"/>
                        <scope line="170">
                            <scope line="174">
                                <scope line="175"/>
                                <scope line="180"/>
                            </scope>
                            <scope line="189"/>
                            <scope line="196"/>
                        </scope>
                        <scope line="202"/>
                    </scope>
                    <declaration name="offset" type="int" line="218"/>
                    <declaration name="hiByte" type="int" line="221"/>
                    <declaration name="lowByte" type="int" line="222"/>
                    <scope line="240">
                        <scope line="241">
                            <scope line="244"/>
                        </scope>
                        <scope line="250"/>
                        <declaration name="highSurr" type="char" line="254"/>
                        <declaration name="lowSurr" type="char" line="255"/>
                    </scope>
                    <scope line="259"/>
                </scope>
            </method>
            <method name="reset" type="void" line="272"/>
            <method name="getCharacterEncoding" type="String" line="278"/>
            <method name="getChar" type="char" line="282">
                <params>
                    <param name="offset" type="int"/>
                </params>
                <declaration name="byte1" type="int" line="283"/>
                <declaration name="byte2" type="int" line="284"/>
                <declaration name="start" type="int" line="285"/>
                <scope line="288">
                    <scope line="291"/>
                </scope>
                <declaration name="n" type="int" line="297"/>
            </method>
        </class>
    </source>