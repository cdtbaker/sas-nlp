<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.io">
        <import package="sun.nio.cs.ext.GB18030"/>
        <class name="CharToByteGB18030" line="3">
            <extends class="CharToByteConverter"/>
            <declaration name="highHalfZoneCode" type="char" line="4"/>
            <declaration name="flushed" type="boolean" line="5"/>
            <declaration name="GB18030_SINGLE_BYTE" type="int" line="6"/>
            <declaration name="GB18030_DOUBLE_BYTE" type="int" line="7"/>
            <declaration name="GB18030_FOUR_BYTE" type="int" line="8"/>
            <declaration name="index1" type="short[]" line="9"/>
            <declaration name="index2" type="String[]" line="10"/>
            <declaration name="currentState" type="int" line="11"/>
            <method name="CharToByteGB18030" type="constructor" line="12">
                <declaration name="nioCoder" type="GB18030" line="13"/>
            </method>
            <method name="flush" type="int" line="20">
                <params>
                    <param name="output" type="byte[]"/>
                    <param name="outStart" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <scope line="21"/>
            </method>
            <method name="reset" type="void" line="30"/>
            <method name="canConvert" type="boolean" line="34">
                <params>
                    <param name="c" type="char"/>
                </params>
            </method>
            <javadoc line="38">
                Character conversion                
            </javadoc>
            <method name="convert" type="int" line="41">
                <params>
                    <param name="input" type="char[]"/>
                    <param name="inOff" type="int"/>
                    <param name="inEnd" type="int"/>
                    <param name="output" type="byte[]"/>
                    <param name="outOff" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <declaration name="linearDiffValue" type="int" line="42"/>
                <declaration name="hiByte" type="int" line="43"/>
                <declaration name="inputChar" type="char" line="44"/>
                <declaration name="inputSize" type="int" line="47"/>
                <declaration name="outputSize" type="int" line="48"/>
                <scope line="50">
                    <scope line="51">
                        <declaration name="newBuf" type="char[]" line="52"/>
                    </scope>
                    <scope line="61"/>
                </scope>
                <scope line="66">
                    <scope line="68">
                        <scope line="69"/>
                        <declaration name="previousChar" type="char" line="73"/>
                        <scope line="75"/>
                        <scope line="81"/>
                    </scope>
                    <scope line="86"/>
                    <scope line="90">
                        <scope line="91"/>
                    </scope>
                    <scope line="97">
                        <declaration name="outByteVal" type="int" line="98"/>
                        <scope line="99">
                            <scope line="100">
                                <scope line="101"/>
                                <scope line="104"/>
                            </scope>
                            <scope line="109"/>
                        </scope>
                    </scope>
                    <scope line="122"/>
                    <scope line="126"/>
                    <scope line="131">
                        <scope line="132"/>
                    </scope>
                    <scope line="138">
                        <scope line="139"/>
                        <declaration name="b1" type="byte" line="142"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="157">
                returns the maximum number of bytes needed to convert a char                
            </javadoc>
            <method name="getMaxBytesPerChar" type="int" line="160"/>
            <javadoc line="163">
                Return the character set ID                
            </javadoc>
            <method name="getCharacterEncoding" type="String" line="166"/>
            <method name="getGB18030" type="int" line="169">
                <params>
                    <param name="outerIndex" type="short[]"/>
                    <param name="innerIndex" type="String[]"/>
                    <param name="ch" type="char"/>
                </params>
                <declaration name="offset" type="int" line="170"/>
            </method>
        </class>
    </source>