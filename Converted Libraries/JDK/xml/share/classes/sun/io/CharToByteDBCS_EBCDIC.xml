<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.io">
        <import package="sun.nio.cs.ext.DoubleByte"/>
        <import package="sun.nio.cs.CharsetMapping"/>
        <class name="CharToByteDBCS_EBCDIC" line="4">
            <extends class="CharToByteConverter"/>
            <declaration name="SBCS" type="int" line="5"/>
            <declaration name="DBCS" type="int" line="6"/>
            <declaration name="SO" type="byte" line="7"/>
            <declaration name="SI" type="byte" line="8"/>
            <declaration name="currentState" type="int" line="9"/>
            <declaration name="highHalfZoneCode" type="char" line="10"/>
            <declaration name="outputByte" type="byte[]" line="11"/>
            <declaration name="enc" type="DoubleByte.Encoder" line="12"/>
            <method name="CharToByteDBCS_EBCDIC" type="constructor" line="13">
                <params>
                    <param name="enc" type="DoubleByte.Encoder"/>
                </params>
            </method>
            <method name="encodeChar" type="int" line="19">
                <params>
                    <param name="c" type="char"/>
                </params>
            </method>
            <javadoc line="22">
                flush out any residual data and reset the buffer state                
            </javadoc>
            <method name="flush" type="int" line="25">
                <params>
                    <param name="output" type="byte[]"/>
                    <param name="outStart" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <declaration name="bytesOut" type="int" line="26"/>
                <scope line="27"/>
                <scope line="32"/>
            </method>
            <javadoc line="40">
                Character conversion                
            </javadoc>
            <method name="convert" type="int" line="43">
                <params>
                    <param name="input" type="char[]"/>
                    <param name="inOff" type="int"/>
                    <param name="inEnd" type="int"/>
                    <param name="output" type="byte[]"/>
                    <param name="outOff" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <declaration name="inputChar" type="char" line="44"/>
                <declaration name="inputSize" type="int" line="45"/>
                <scope line="48">
                    <declaration name="index" type="int" line="49"/>
                    <declaration name="theBytes" type="int" line="50"/>
                    <declaration name="spaceNeeded" type="int" line="51"/>
                    <scope line="52"/>
                    <scope line="56"/>
                    <scope line="61">
                        <scope line="62"/>
                        <scope line="68">
                            <scope line="69">
                                <scope line="70"/>
                                <scope line="74"/>
                            </scope>
                            <scope line="80"/>
                        </scope>
                        <scope line="85"/>
                    </scope>
                    <scope line="90"/>
                    <scope line="94">
                        <scope line="96">
                            <scope line="97">
                                <scope line="98"/>
                                <scope line="102"/>
                            </scope>
                            <scope line="107"/>
                        </scope>
                        <scope line="112"/>
                    </scope>
                    <scope line="117"/>
                    <scope line="122">
                        <scope line="123"/>
                    </scope>
                    <scope line="131"/>
                    <scope line="135"/>
                </scope>
            </method>
            <javadoc line="143">
                Resets converter to its initial state.                
            </javadoc>
            <method name="reset" type="void" line="146"/>
            <javadoc line="151">
                Returns the maximum number of bytes needed to convert a char.                
            </javadoc>
            <method name="getMaxBytesPerChar" type="int" line="154"/>
            <javadoc line="157">
                Sets the substitution bytes to use when the converter is in
                  substitution mode.  The given bytes should represent a valid
                  character in the target character encoding.                
            </javadoc>
            <method name="setSubstitutionBytes" type="void" line="162">
                <params>
                    <param name="newSubBytes" type="byte[]"/>
                </params>
                <scope line="163"/>
            </method>
            <javadoc line="169">
                Returns true if the given character can be converted to the
                  target character encoding.                
            </javadoc>
            <method name="canConvert" type="boolean" line="173">
                <params>
                    <param name="c" type="char"/>
                </params>
            </method>
        </class>
    </source>