<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.io">
        <import package="sun.nio.cs.ext.DoubleByte"/>
        <import package="sun.nio.cs.CharsetMapping"/>
        <class name="CharToByteDBCS_EBCDIC" line="30">
            <extends class="CharToByteConverter"/>
            <declaration name="SBCS" type="int" line="32"/>
            <declaration name="DBCS" type="int" line="33"/>
            <declaration name="SO" type="byte" line="35"/>
            <declaration name="SI" type="byte" line="36"/>
            <declaration name="currentState" type="int" line="38"/>
            <declaration name="highHalfZoneCode" type="char" line="39"/>
            <declaration name="outputByte" type="byte[]" line="40"/>
            <declaration name="enc" type="DoubleByte.Encoder" line="42"/>
            <method name="CharToByteDBCS_EBCDIC" type="constructor" line="44">
                <params>
                    <param name="enc" type="DoubleByte.Encoder"/>
                </params>
            </method>
            <method name="encodeChar" type="int" line="51">
                <params>
                    <param name="c" type="char"/>
                </params>
            </method>
            <javadoc line="55">
                flush out any residual data and reset the buffer state                
            </javadoc>
            <method name="flush" type="int" line="60">
                <params>
                    <param name="output" type="byte[]"/>
                    <param name="outStart" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <declaration name="bytesOut" type="int" line="61"/>
                <scope line="63"/>
                <scope line="69"/>
            </method>
            <javadoc line="80">
                Character conversion                
            </javadoc>
            <method name="convert" type="int" line="87">
                <params>
                    <param name="input" type="char[]"/>
                    <param name="inOff" type="int"/>
                    <param name="inEnd" type="int"/>
                    <param name="output" type="byte[]"/>
                    <param name="outOff" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <comment line="109">
                    Is this a high surrogate?                    
                </comment>
                <comment line="111">
                    Is this the last character of the input?                    
                </comment>
                <comment line="118">
                    Is there a low surrogate following?                    
                </comment>
                <comment line="121">
                    We have a valid surrogate pair.  Too bad we don&apos;t do                    
                </comment>
                <comment line="122">
                    surrogates.  Is substitution enabled?                    
                </comment>
                <comment line="138">
                    We have a malformed surrogate pair                    
                </comment>
                <comment line="143">
                    Is this an unaccompanied low surrogate?                    
                </comment>
                <comment line="149">
                    We have a valid character, get the bytes for it                    
                </comment>
                <comment line="152">
                    if there was no mapping - look for substitution characters                    
                </comment>
                <comment line="171">
                    Set the output buffer into the correct state                    
                </comment>
                <declaration name="inputChar" type="char" line="88"/>
                <declaration name="inputSize" type="int" line="89"/>
                <scope line="94">
                    <declaration name="index" type="int" line="96"/>
                    <declaration name="theBytes" type="int" line="97"/>
                    <declaration name="spaceNeeded" type="int" line="98"/>
                    <scope line="100"/>
                    <scope line="103"/>
                    <scope line="110">
                        <scope line="112"/>
                        <scope line="120">
                            <scope line="123">
                                <scope line="124"/>
                                <scope line="128"/>
                            </scope>
                            <scope line="133"/>
                        </scope>
                        <scope line="137"/>
                    </scope>
                    <scope line="144"/>
                    <scope line="147">
                        <scope line="151">
                            <scope line="153">
                                <scope line="154"/>
                                <scope line="157"/>
                            </scope>
                            <scope line="161"/>
                        </scope>
                        <scope line="165"/>
                    </scope>
                    <scope line="173"/>
                    <scope line="179">
                        <scope line="180"/>
                    </scope>
                    <scope line="192"/>
                    <scope line="198"/>
                </scope>
            </method>
            <javadoc line="210">
                Resets converter to its initial state.                
            </javadoc>
            <method name="reset" type="void" line="213"/>
            <javadoc line="220">
                Returns the maximum number of bytes needed to convert a char.                
            </javadoc>
            <method name="getMaxBytesPerChar" type="int" line="223">
                <comment line="224">
                    Fixed with bug 4199599 so tests would pass.                    
                </comment>
            </method>
            <javadoc line="228">
                Sets the substitution bytes to use when the converter is in
                  substitution mode.  The given bytes should represent a valid
                  character in the target character encoding.                
            </javadoc>
            <method name="setSubstitutionBytes" type="void" line="236">
                <params>
                    <param name="newSubBytes" type="byte[]"/>
                </params>
                <scope line="237"/>
            </method>
            <javadoc line="246">
                Returns true if the given character can be converted to the
                  target character encoding.                
            </javadoc>
            <method name="canConvert" type="boolean" line="250">
                <params>
                    <param name="c" type="char"/>
                </params>
            </method>
        </class>
    </source>