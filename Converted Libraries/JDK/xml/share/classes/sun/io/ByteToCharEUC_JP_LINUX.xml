<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.io">
        <class name="ByteToCharEUC_JP_LINUX" line="2">
            <extends class="ByteToCharJIS0208"/>
            <javadoc line="2">
                Class for converting bytes to characters for the EUC-JP encoding in
                  linux. This converter supports the JIS0201 and the JIS0208 encoding and
                  omits support for the JIS212 encoding.                
                <author>
                    Naveen Sanjeeva                    
                </author>
            </javadoc>
            <declaration name="savedSecond" type="byte" line="9"/>
            <declaration name="bcJIS0201" type="ByteToCharJIS0201" line="10"/>
            <method name="ByteToCharEUC_JP_LINUX" type="constructor" line="11"/>
            <method name="flush" type="int" line="17">
                <params>
                    <param name="output" type="char[]"/>
                    <param name="outStart" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <scope line="18"/>
            </method>
            <javadoc line="25">
                Resets the converter.
                  Call this method to reset the converter to its initial state                
            </javadoc>
            <method name="reset" type="void" line="29"/>
            <method name="getCharacterEncoding" type="String" line="33"/>
            <method name="convSingleByte" type="char" line="36">
                <params>
                    <param name="b" type="int"/>
                </params>
            </method>
            <method name="getUnicode" type="char" line="40">
                <params>
                    <param name="byte1" type="int"/>
                    <param name="byte2" type="int"/>
                </params>
                <scope line="41"/>
                <declaration name="n" type="int" line="45"/>
            </method>
            <javadoc line="48">
                Converts sequences of bytes to characters.
                  Conversions that result in Exceptions can be restarted by calling
                  convert again, with appropriately modified parameters.                
                <return>
                    the characters written to output.                    
                </return>
                <param>
                    input byte array containing text in Double/single Byte                    
                </param>
                <param>
                    inStart offset in input array                    
                </param>
                <param>
                    inEnd offset of last byte to be converted                    
                </param>
                <param>
                    output character array to receive conversion result                    
                </param>
                <param>
                    outStart starting offset                    
                </param>
                <param>
                    outEnd offset of last byte to be written to                    
                </param>
                <throw>
                    UnsupportedCharacterException for any bytes
                      that cannot be converted to the external character set.                    
                </throw>
            </javadoc>
            <method name="convert" type="int" line="62">
                <params>
                    <param name="input" type="byte[]"/>
                    <param name="inOff" type="int"/>
                    <param name="inEnd" type="int"/>
                    <param name="output" type="char[]"/>
                    <param name="outOff" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <declaration name="outputChar" type="char" line="63"/>
                <declaration name="inputSize" type="int" line="64"/>
                <scope line="67">
                    <declaration name="byte1" type="int" line="68"/>
                    <scope line="69"/>
                    <scope line="73"/>
                    <scope line="79">
                        <scope line="80">
                            <scope line="81"/>
                        </scope>
                        <scope line="91">
                            <scope line="92">
                                <scope line="95"/>
                            </scope>
                            <scope line="101"/>
                            <scope line="104"/>
                        </scope>
                    </scope>
                    <scope line="110">
                        <scope line="112"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>