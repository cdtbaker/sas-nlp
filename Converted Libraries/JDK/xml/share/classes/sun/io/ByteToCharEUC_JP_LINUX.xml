<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.io">
        <class name="ByteToCharEUC_JP_LINUX" line="28">
            <extends class="ByteToCharJIS0208"/>
            <javadoc line="28">
                Class for converting bytes to characters for the EUC-JP encoding in
                  linux. This converter supports the JIS0201 and the JIS0208 encoding and
                  omits support for the JIS212 encoding.                
                <author>
                    Naveen Sanjeeva                    
                </author>
            </javadoc>
            <declaration name="savedSecond" type="byte" line="37"/>
            <declaration name="bcJIS0201" type="ByteToCharJIS0201" line="38"/>
            <method name="ByteToCharEUC_JP_LINUX" type="constructor" line="40"/>
            <method name="flush" type="int" line="49">
                <params>
                    <param name="output" type="char[]"/>
                    <param name="outStart" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <scope line="50"/>
            </method>
            <javadoc line="58">
                Resets the converter.
                  Call this method to reset the converter to its initial state                
            </javadoc>
            <method name="reset" type="void" line="62"/>
            <method name="getCharacterEncoding" type="String" line="67"/>
            <method name="convSingleByte" type="char" line="71">
                <params>
                    <param name="b" type="int"/>
                </params>
            </method>
            <method name="getUnicode" type="char" line="77">
                <params>
                    <param name="byte1" type="int"/>
                    <param name="byte2" type="int"/>
                </params>
                <comment line="82">
                    Fix for bug 4121358 - similar fix for bug 4117820 put
                     into ByteToCharDoubleByte.getUnicode()                    
                </comment>
                <scope line="78"/>
                <declaration name="n" type="int" line="87"/>
            </method>
            <javadoc line="92">
                Converts sequences of bytes to characters.
                  Conversions that result in Exceptions can be restarted by calling
                  convert again, with appropriately modified parameters.                
                <return>
                    the characters written to output.                    
                </return>
                <param>
                    input byte array containing text in Double/single Byte                    
                </param>
                <param>
                    inStart offset in input array                    
                </param>
                <param>
                    inEnd offset of last byte to be converted                    
                </param>
                <param>
                    output character array to receive conversion result                    
                </param>
                <param>
                    outStart starting offset                    
                </param>
                <param>
                    outEnd offset of last byte to be written to                    
                </param>
                <throw>
                    UnsupportedCharacterException for any bytes
                      that cannot be converted to the external character set.                    
                </throw>
            </javadoc>
            <method name="convert" type="int" line="110">
                <params>
                    <param name="input" type="byte[]"/>
                    <param name="inOff" type="int"/>
                    <param name="inEnd" type="int"/>
                    <param name="output" type="char[]"/>
                    <param name="outOff" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <comment line="113">
                    Size of input                    
                </comment>
                <comment line="115">
                    Record beginning offsets                    
                </comment>
                <comment line="119">
                    Loop until we hit the end of the input                    
                </comment>
                <comment line="134">
                    Multibyte char                    
                </comment>
                <comment line="135">
                    JIS0208                    
                </comment>
                <comment line="137">
                    split in the middle of a character
                     save the first byte for next time around                    
                </comment>
                <comment line="147">
                    JIS0212                    
                </comment>
                <comment line="148">
                    Handling of 3-byte sequences for this converter involves
                     just ignoring the relevant bytes and returning a
                     suitable substitute char if one exists.                    
                </comment>
                <comment line="152">
                    split in the middle of a character
                     save the first 2 bytes for next time around                    
                </comment>
                <comment line="163">
                    Skip over the saved bytes if any                    
                </comment>
                <declaration name="outputChar" type="char" line="111"/>
                <declaration name="inputSize" type="int" line="112"/>
                <scope line="119">
                    <declaration name="byte1" type="int" line="120"/>
                    <scope line="122"/>
                    <scope line="125"/>
                    <scope line="133">
                        <scope line="134">
                            <scope line="135"/>
                        </scope>
                        <scope line="146">
                            <scope line="150">
                                <scope line="155"/>
                            </scope>
                            <scope line="163"/>
                            <scope line="165"/>
                        </scope>
                    </scope>
                    <scope line="172">
                        <scope line="175"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>