<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.io">
        <class name="CharToByteEUC_JP_LINUX" line="28">
            <extends class="CharToByteJIS0208"/>
            <javadoc line="28">
                Class for converting characters to bytes for the EUC-JP encoding in
                  linux. This converter supports the JIS0201 and the JIS0208 encoding and
                  omits support for the JIS212 encoding.                
                <author>
                    Naveen Sanjeeva                    
                </author>
            </javadoc>
            <declaration name="cbJIS0201" type="CharToByteJIS0201" line="37"/>
            <method name="getCharacterEncoding" type="String" line="39"/>
            <method name="convSingleByte" type="int" line="43">
                <params>
                    <param name="inputChar" type="char"/>
                    <param name="outputByte" type="byte[]"/>
                </params>
                <declaration name="b" type="byte" line="44"/>
                <scope line="46"/>
                <scope line="54"/>
            </method>
            <method name="getNative" type="int" line="63">
                <params>
                    <param name="ch" type="char"/>
                </params>
                <declaration name="offset" type="int" line="64"/>
                <declaration name="r" type="int" line="65"/>
            </method>
            <javadoc line="71">
                Converts characters to sequences of bytes.
                  Conversions that result in Exceptions can be restarted by calling
                  convert again, with appropriately modified parameters.                
                <return>
                    the characters written to output.                    
                </return>
                <param>
                    input char array containing text in Unicode                    
                </param>
                <param>
                    inStart offset in input array                    
                </param>
                <param>
                    inEnd offset of last byte to be converted                    
                </param>
                <param>
                    output byte array to receive conversion result                    
                </param>
                <param>
                    outStart starting offset                    
                </param>
                <param>
                    outEnd offset of last byte to be written to                    
                </param>
                <throw>
                    UnsupportedCharacterException for any character
                      that cannot be converted to the external character set.                    
                </throw>
            </javadoc>
            <method name="convert" type="int" line="89">
                <params>
                    <param name="input" type="char[]"/>
                    <param name="inOff" type="int"/>
                    <param name="inEnd" type="int"/>
                    <param name="output" type="byte[]"/>
                    <param name="outOff" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <comment line="90">
                    Input character to be converted                    
                </comment>
                <comment line="91">
                    Output byte written to output                    
                </comment>
                <comment line="92">
                    Size of input                    
                </comment>
                <comment line="93">
                    Size of output                    
                </comment>
                <comment line="96">
                    Record beginning offsets                    
                </comment>
                <comment line="104">
                    This is legal UTF16 sequence.                    
                </comment>
                <comment line="108">
                    This is illegal UTF16 sequence.                    
                </comment>
                <comment line="114">
                    Loop until we hit the end of the input                    
                </comment>
                <comment line="118">
                    Get the input character                    
                </comment>
                <comment line="120">
                    Is this a high surrogate?                    
                </comment>
                <comment line="122">
                    Is this the last character of the input?                    
                </comment>
                <comment line="128">
                    Is there a low surrogate following?                    
                </comment>
                <comment line="131">
                    We have a valid surrogate pair.  Too bad we don&apos;t do                    
                </comment>
                <comment line="132">
                    surrogates.  Is substitution enabled?                    
                </comment>
                <comment line="142">
                    We have a malformed surrogate pair                    
                </comment>
                <comment line="147">
                    Is this an unaccompanied low surrogate?                    
                </comment>
                <comment line="153">
                    DoubleByte                    
                </comment>
                <comment line="171">
                    If we don&apos;t have room for the output, throw an exception                    
                </comment>
                <comment line="175">
                    Put the byte in the output buffer                    
                </comment>
                <comment line="181">
                    Return the length written to the output buffer                    
                </comment>
                <declaration name="inputChar" type="char" line="90"/>
                <declaration name="outputByte" type="byte[]" line="91"/>
                <declaration name="inputSize" type="int" line="92"/>
                <declaration name="outputSize" type="int" line="93"/>
                <declaration name="tmpbuf" type="byte[]" line="94"/>
                <scope line="100">
                    <scope line="103"/>
                    <scope line="107"/>
                </scope>
                <scope line="115">
                    <scope line="121">
                        <scope line="123"/>
                        <scope line="130">
                            <scope line="133"/>
                            <scope line="137"/>
                        </scope>
                        <scope line="141"/>
                    </scope>
                    <scope line="148"/>
                    <scope line="151">
                        <scope line="153">
                            <declaration name="ncode" type="int" line="154"/>
                            <scope line="155"/>
                            <scope line="159">
                                <scope line="160"/>
                                <scope line="163"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="176"/>
                </scope>
            </method>
            <javadoc line="186">
                the maximum number of bytes needed to hold a converted char                
                <returns>
                    the maximum number of bytes needed for a converted char                    
                </returns>
            </javadoc>
            <method name="getMaxBytesPerChar" type="int" line="190"/>
        </class>
    </source>