<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.io">
        <import package="sun.nio.cs.ext.JIS_X_0208_Solaris_Encoder"/>
        <class name="CharToBytePCK" line="30">
            <extends class="CharToByteSJIS"/>
            <javadoc line="30">
                @author Limin Shi                
                <author>
                    Mark Son-Bell                    
                </author>
                <author>
                    Ian Little
                      PCK char->byte converter for Solaris platform containing additional
                      mappings for vendor defined chars (NEC row 13 & IBM extension chars)
                      (bugID 4765370)                    
                </author>
            </javadoc>
            <declaration name="cbJIS0201" type="CharToByteJIS0201" line="40"/>
            <declaration name="j0208Index1" type="short[]" line="41"/>
            <declaration name="j0208Index2" type="String[]" line="42"/>
            <method name="getCharacterEncoding" type="String" line="44"/>
            <method name="convSingleByte" type="int" line="48">
                <params>
                    <param name="inputChar" type="char"/>
                    <param name="outputByte" type="byte[]"/>
                </params>
                <comment line="51">
                    \u0000 - \u007F map straight through                    
                </comment>
                <declaration name="b" type="byte" line="49"/>
                <scope line="52"/>
            </method>
            <method name="getNative" type="int" line="64">
                <params>
                    <param name="ch" type="char"/>
                </params>
                <comment line="83">
                    This algorithm for converting from JIS to SJIS comes from Ken Lunde&apos;s
                     &quot;Understanding Japanese Information Processing&quot;, pg 163.                    
                </comment>
                <declaration name="result" type="int" line="65"/>
                <scope line="76"/>
                <scope line="78">
                    <declaration name="offset" type="int" line="79"/>
                    <declaration name="pos" type="int" line="80"/>
                    <scope line="82">
                        <declaration name="c1" type="int" line="87"/>
                        <declaration name="c2" type="int" line="88"/>
                        <declaration name="rowOffset" type="int" line="89"/>
                        <declaration name="cellOffset" type="int" line="90"/>
                    </scope>
                </scope>
            </method>
        </class>
    </source>