<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.io">
        <import package="java.io"/>
        <class name="CharToByteISO2022JP" line="29">
            <extends class="CharToByteJIS0208"/>
            <comment line="32">
                ESC ( B                
            </comment>
            <comment line="33">
                ESC ( J                
            </comment>
            <comment line="34">
                ESC $ @                
            </comment>
            <comment line="35">
                ESC $ B                
            </comment>
            <comment line="36">
                ESC ( I                
            </comment>
            <comment line="41">
                JIS is state full encoding, so currentMode keep the
                 current codeset                
            </comment>
            <comment line="50">
                ESC ( B                
            </comment>
            <comment line="301">
                Reset                
            </comment>
            <comment line="315">
                Return the character set ID                
            </comment>
            <declaration name="ASCII" type="int" line="31"/>
            <declaration name="JISX0201_1976" type="int" line="32"/>
            <declaration name="JISX0208_1978" type="int" line="33"/>
            <declaration name="JISX0208_1983" type="int" line="34"/>
            <declaration name="JISX0201_1976_KANA" type="int" line="35"/>
            <declaration name="highHalfZoneCode" type="char" line="37"/>
            <declaration name="flushed" type="boolean" line="38"/>
            <declaration name="currentMode" type="int" line="42"/>
            <declaration name="subBytesEscape" type="byte[]" line="44"/>
            <javadoc line="44">
                Bytes for substitute for unmappable input.                
            </javadoc>
            <declaration name="subBytesMode" type="int" line="50"/>
            <method name="flush" type="int" line="54">
                <params>
                    <param name="output" type="byte[]"/>
                    <param name="outStart" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <scope line="55"/>
                <scope line="61">
                    <scope line="62"/>
                </scope>
            </method>
            <method name="convert" type="int" line="82">
                <params>
                    <param name="input" type="char[]"/>
                    <param name="inOff" type="int"/>
                    <param name="inEnd" type="int"/>
                    <param name="output" type="byte[]"/>
                    <param name="outOff" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <comment line="84">
                    Input character to be converted                    
                </comment>
                <comment line="85">
                    Size of the input                    
                </comment>
                <comment line="86">
                    Size of the output                    
                </comment>
                <comment line="88">
                    Buffer for output bytes                    
                </comment>
                <comment line="94">
                    Make copies of input and output indexes                    
                </comment>
                <comment line="102">
                    This is legal UTF16 sequence.                    
                </comment>
                <comment line="106">
                    This is illegal UTF16 sequence.                    
                </comment>
                <comment line="112">
                    Loop until we run out of input                    
                </comment>
                <comment line="115">
                    Trace character mode changing                    
                </comment>
                <comment line="117">
                    Get the input character                    
                </comment>
                <comment line="122">
                    Is this a high surrogate?                    
                </comment>
                <comment line="124">
                    Is this the last character of the input?                    
                </comment>
                <comment line="130">
                    Is there a low surrogate following?                    
                </comment>
                <comment line="133">
                    We have a valid surrogate pair.  Too bad we don&apos;t do
                     surrogates.  Is substitution enabled?                    
                </comment>
                <comment line="154">
                    We have a malformed surrogate pair                    
                </comment>
                <comment line="160">
                    Is this an unaccompanied low surrogate?                    
                </comment>
                <comment line="165">
                    Not part of a surrogate                    
                </comment>
                <comment line="167">
                    Does this map to the Roman range?                    
                </comment>
                <comment line="181">
                    Is it a single byte kana?                    
                </comment>
                <comment line="195">
                    Is it a yen sign?                    
                </comment>
                <comment line="209">
                    Is it a tilde?                    
                </comment>
                <comment line="224">
                    Is it a JIS-X-0208 character?                    
                </comment>
                <comment line="242">
                    It doesn&apos;t map to JIS-0208!                    
                </comment>
                <comment line="265">
                    Is there room in the output buffer?
                     XXX: The code assumes output buffer can hold at least 5 bytes,
                     in this coverter case. However, there is no way for apps to
                     see how many bytes will be necessary for next call.
                     getMaxBytesPerChar() should be overriden in every subclass of
                     CharToByteConverter and reflect real value (5 for this).                    
                </comment>
                <comment line="274">
                    Put the output into the buffer                    
                </comment>
                <comment line="278">
                    Advance the input pointer                    
                </comment>
                <comment line="281">
                    We can successfuly output the characters, changes
                     current mode. Fix for 4251646.                    
                </comment>
                <comment line="286">
                    return mode ASCII at the end                    
                </comment>
                <comment line="297">
                    Return the length written to the output buffer                    
                </comment>
                <declaration name="inputChar" type="char" line="83"/>
                <declaration name="inputSize" type="int" line="84"/>
                <declaration name="outputSize" type="int" line="85"/>
                <declaration name="tmpArray" type="byte[]" line="88"/>
                <declaration name="outputByte" type="byte[]" line="89"/>
                <scope line="97">
                    <scope line="100"/>
                    <scope line="104"/>
                </scope>
                <scope line="112">
                    <declaration name="newMode" type="int" line="114"/>
                    <scope line="122">
                        <scope line="124"/>
                        <scope line="131">
                            <scope line="134">
                                <scope line="135"/>
                                <scope line="143"/>
                            </scope>
                            <scope line="148"/>
                        </scope>
                        <scope line="152"/>
                    </scope>
                    <scope line="160"/>
                    <scope line="163">
                        <scope line="167">
                            <scope line="168"/>
                            <scope line="175"/>
                        </scope>
                        <scope line="181">
                            <scope line="182"/>
                            <scope line="189"/>
                        </scope>
                        <scope line="195">
                            <scope line="196"/>
                            <scope line="203"/>
                        </scope>
                        <scope line="210">
                            <scope line="211"/>
                            <scope line="218"/>
                        </scope>
                        <scope line="224">
                            <declaration name="index" type="int" line="225"/>
                            <scope line="226">
                                <scope line="227"/>
                                <scope line="235"/>
                            </scope>
                            <scope line="242">
                                <scope line="243">
                                    <scope line="244"/>
                                    <scope line="252"/>
                                </scope>
                                <scope line="256"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="286"/>
            </method>
            <method name="reset" type="void" line="301"/>
            <javadoc line="307">
                returns the maximum number of bytes needed to convert a char                
            </javadoc>
            <method name="getMaxBytesPerChar" type="int" line="310"/>
            <method name="getCharacterEncoding" type="String" line="315"/>
        </class>
    </source>