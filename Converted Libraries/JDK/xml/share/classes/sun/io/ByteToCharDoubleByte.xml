<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.io">
        <class name="ByteToCharDoubleByte" line="28">
            <extends class="ByteToCharConverter"/>
            <comment line="37">
                1st level index, provided by subclass                
            </comment>
            <comment line="42">
                2nd level index, provided by subclass
                 every string has 0x10(end-start+1) characters.                
            </comment>
            <comment line="51">
                Size of bad input that caused conversion to stop                
            </comment>
            <comment line="168">
                Can be changed by subclass                
            </comment>
            <comment line="177">
                Can be changed by subclass                
            </comment>
            <javadoc line="28">
                @author Limin Shi
                  Sean Jiang                
            </javadoc>
            <declaration name="savedByte" type="byte" line="34"/>
            <declaration name="index1" type="short" line="39"/>
            <declaration name="index2" type="String" line="45"/>
            <declaration name="start" type="int" line="47"/>
            <declaration name="end" type="int" line="48"/>
            <declaration name="badInputLength" type="int" line="53"/>
            <method name="ByteToCharDoubleByte" type="constructor" line="55"/>
            <method name="getIndex1" type="short[]" line="61"/>
            <method name="getIndex2" type="String[]" line="65"/>
            <method name="flush" type="int" line="71">
                <params>
                    <param name="output" type="char[]"/>
                    <param name="outStart" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <scope line="72"/>
            </method>
            <javadoc line="81">
                Converts sequences of bytes to characters.
                  Conversions that result in Exceptions can be restarted by calling
                  convert again, with appropriately modified parameters.                
                <return>
                    the characters written to output.                    
                </return>
                <param>
                    input byte array containing text in Double/single Byte                    
                </param>
                <param>
                    inStart offset in input array                    
                </param>
                <param>
                    inEnd offset of last byte to be converted                    
                </param>
                <param>
                    output character array to receive conversion result                    
                </param>
                <param>
                    outStart starting offset                    
                </param>
                <param>
                    outEnd offset of last byte to be written to                    
                </param>
                <throw>
                    UnsupportedCharacterException for any bytes
                      that cannot be converted to the external character set.                    
                </throw>
            </javadoc>
            <method name="convert" type="int" line="99">
                <params>
                    <param name="input" type="byte[]"/>
                    <param name="inOff" type="int"/>
                    <param name="inEnd" type="int"/>
                    <param name="output" type="char[]"/>
                    <param name="outOff" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <comment line="101">
                    Size of input                    
                </comment>
                <comment line="103">
                    Record beginning offsets                    
                </comment>
                <comment line="107">
                    Loop until we hit the end of the input                    
                </comment>
                <comment line="122">
                    DoubleByte char                    
                </comment>
                <comment line="124">
                    split in the middle of a character                    
                </comment>
                <comment line="125">
                    save the first byte for next time around                    
                </comment>
                <declaration name="outputChar" type="char" line="100"/>
                <declaration name="inputSize" type="int" line="101"/>
                <scope line="108">
                    <declaration name="byte1" type="int" line="109"/>
                    <scope line="111"/>
                    <scope line="114"/>
                    <scope line="122">
                        <scope line="123"/>
                    </scope>
                    <scope line="138">
                        <scope line="141"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="157">
                Resets the converter.
                  Call this method to reset the converter to its initial state                
            </javadoc>
            <method name="reset" type="void" line="161"/>
            <method name="convSingleByte" type="char" line="170">
                <params>
                    <param name="b" type="int"/>
                </params>
            </method>
            <method name="getUnicode" type="char" line="179">
                <params>
                    <param name="byte1" type="int"/>
                    <param name="byte2" type="int"/>
                </params>
                <comment line="180">
                    Fix for bug 4117820 - similar fix for bug 4121358 put                    
                </comment>
                <comment line="181">
                    into ByteToCharEUC_JP.getUnicode()                    
                </comment>
                <declaration name="n" type="int" line="186"/>
            </method>
            <declaration name="REPLACE_CHAR" type="char" line="190"/>
        </class>
    </source>