<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.io">
        <class name="ByteToCharDoubleByte" line="2">
            <extends class="ByteToCharConverter"/>
            <javadoc line="2">
                @author Limin Shi
                  Sean Jiang                
            </javadoc>
            <declaration name="savedByte" type="byte" line="7"/>
            <declaration name="index1" type="short" line="8"/>
            <declaration name="index2" type="String" line="9"/>
            <declaration name="start" type="int" line="10"/>
            <declaration name="end" type="int" line="11"/>
            <declaration name="badInputLength" type="int" line="12"/>
            <method name="ByteToCharDoubleByte" type="constructor" line="13"/>
            <method name="getIndex1" type="short[]" line="17"/>
            <method name="getIndex2" type="String[]" line="20"/>
            <method name="flush" type="int" line="23">
                <params>
                    <param name="output" type="char[]"/>
                    <param name="outStart" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <scope line="24"/>
            </method>
            <javadoc line="32">
                Converts sequences of bytes to characters.
                  Conversions that result in Exceptions can be restarted by calling
                  convert again, with appropriately modified parameters.                
                <return>
                    the characters written to output.                    
                </return>
                <param>
                    input byte array containing text in Double/single Byte                    
                </param>
                <param>
                    inStart offset in input array                    
                </param>
                <param>
                    inEnd offset of last byte to be converted                    
                </param>
                <param>
                    output character array to receive conversion result                    
                </param>
                <param>
                    outStart starting offset                    
                </param>
                <param>
                    outEnd offset of last byte to be written to                    
                </param>
                <throw>
                    UnsupportedCharacterException for any bytes
                      that cannot be converted to the external character set.                    
                </throw>
            </javadoc>
            <method name="convert" type="int" line="46">
                <params>
                    <param name="input" type="byte[]"/>
                    <param name="inOff" type="int"/>
                    <param name="inEnd" type="int"/>
                    <param name="output" type="char[]"/>
                    <param name="outOff" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <declaration name="outputChar" type="char" line="47"/>
                <declaration name="inputSize" type="int" line="48"/>
                <scope line="51">
                    <declaration name="byte1" type="int" line="52"/>
                    <scope line="53"/>
                    <scope line="57"/>
                    <scope line="63">
                        <scope line="64"/>
                    </scope>
                    <scope line="74">
                        <scope line="76"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="87">
                Resets the converter.
                  Call this method to reset the converter to its initial state                
            </javadoc>
            <method name="reset" type="void" line="91"/>
            <method name="convSingleByte" type="char" line="95">
                <params>
                    <param name="b" type="int"/>
                </params>
            </method>
            <method name="getUnicode" type="char" line="99">
                <params>
                    <param name="byte1" type="int"/>
                    <param name="byte2" type="int"/>
                </params>
                <declaration name="n" type="int" line="101"/>
            </method>
            <declaration name="REPLACE_CHAR" type="char" line="104"/>
        </class>
    </source>