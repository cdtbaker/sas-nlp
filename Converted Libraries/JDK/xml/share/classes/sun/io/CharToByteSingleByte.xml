<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.io">
        <import package="sun.nio.cs.CharsetMapping"/>
        <class name="CharToByteSingleByte" line="30">
            <extends class="CharToByteConverter"/>
            <comment line="46">
                1st level index, provided by subclass                
            </comment>
            <comment line="51">
                2nd level index, provided by subclass                
            </comment>
            <comment line="56">
                Mask to isolate bits for 1st level index, from subclass                
            </comment>
            <comment line="61">
                Mask to isolate bits for 2nd level index, from subclass                
            </comment>
            <comment line="66">
                Shift to isolate bits for 1st level index, from subclass                
            </comment>
            <javadoc line="30">
                A table driven conversion from char to byte for single byte
                  character sets.  Tables will reside in the class CharToByteYYYYY,
                  where YYYYY is a unique character set identifier
                  &lt; TBD: Tables are of the form... &gt;                
                <author>
                    Lloyd Honomichl                    
                </author>
                <author>
                    Asmus Freytag                    
                </author>
                <version>
                    8/28/96                    
                </version>
            </javadoc>
            <declaration name="index1" type="char[]" line="48"/>
            <declaration name="index2" type="char[]" line="53"/>
            <declaration name="mask1" type="int" line="58"/>
            <declaration name="mask2" type="int" line="63"/>
            <declaration name="shift" type="int" line="68"/>
            <declaration name="highHalfZoneCode" type="char" line="70"/>
            <method name="getIndex1" type="char[]" line="72"/>
            <method name="getIndex2" type="char[]" line="76"/>
            <method name="flush" type="int" line="81">
                <params>
                    <param name="output" type="byte[]"/>
                    <param name="outStart" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <scope line="82"/>
            </method>
            <javadoc line="91">
                Converts characters to sequences of bytes.
                  Conversions that result in Exceptions can be restarted by calling
                  convert again, with appropriately modified parameters.                
                <return>
                    the characters written to output.                    
                </return>
                <param>
                    input char array containing text in Unicode                    
                </param>
                <param>
                    inStart offset in input array                    
                </param>
                <param>
                    inEnd offset of last byte to be converted                    
                </param>
                <param>
                    output byte array to receive conversion result                    
                </param>
                <param>
                    outStart starting offset                    
                </param>
                <param>
                    outEnd offset of last byte to be written to                    
                </param>
                <throw>
                    MalformedInputException for any sequence of chars that is
                      illegal in Unicode (principally unpaired surrogates
                      and \uFFFF or \uFFFE), including any partial surrogate pair
                      which occurs at the end of an input buffer.                    
                </throw>
                <throw>
                    UnsupportedCharacterException for any character that
                      that cannot be converted to the external character set.                    
                </throw>
            </javadoc>
            <method name="convert" type="int" line="114">
                <params>
                    <param name="input" type="char[]"/>
                    <param name="inOff" type="int"/>
                    <param name="inEnd" type="int"/>
                    <param name="output" type="byte[]"/>
                    <param name="outOff" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <comment line="116">
                    Input character to be converted                    
                </comment>
                <comment line="117">
                    Output byte written to output                    
                </comment>
                <comment line="118">
                    Size of input                    
                </comment>
                <comment line="119">
                    Size of output                    
                </comment>
                <comment line="123">
                    Record beginning offsets                    
                </comment>
                <comment line="131">
                    This is legal UTF16 sequence.                    
                </comment>
                <comment line="135">
                    This is illegal UTF16 sequence.                    
                </comment>
                <comment line="141">
                    Loop until we hit the end of the input                    
                </comment>
                <comment line="146">
                    Get the input character                    
                </comment>
                <comment line="149">
                    Default output size                    
                </comment>
                <comment line="152">
                    Assume this is a simple character                    
                </comment>
                <comment line="155">
                    Is this a high surrogate?                    
                </comment>
                <comment line="157">
                    Is this the last character in the input?                    
                </comment>
                <comment line="163">
                    Is there a low surrogate following?                    
                </comment>
                <comment line="166">
                    We have a valid surrogate pair.  Too bad we don&apos;t map
                      surrogates.  Is substitution enabled?                    
                </comment>
                <comment line="177">
                    We have a malformed surrogate pair                    
                </comment>
                <comment line="183">
                    Is this an unaccompanied low surrogate?                    
                </comment>
                <comment line="189">
                    Not part of a surrogate, so look it up                    
                </comment>
                <comment line="191">
                    Get output using two level lookup                    
                </comment>
                <comment line="194">
                    Might this character be unmappable?                    
                </comment>
                <comment line="196">
                    If outputByte is zero because the input was zero
                      then this character is actually mappable                    
                </comment>
                <comment line="199">
                    We have an unmappable character
                     Is substitution enabled?                    
                </comment>
                <comment line="212">
                    If we don&apos;t have room for the output, throw an exception                    
                </comment>
                <comment line="216">
                    Put the byte in the output buffer                    
                </comment>
                <comment line="224">
                    Return the length written to the output buffer                    
                </comment>
                <declaration name="inputChar" type="char" line="115"/>
                <declaration name="outputByte" type="byte[]" line="116"/>
                <declaration name="inputSize" type="int" line="117"/>
                <declaration name="outputSize" type="int" line="118"/>
                <declaration name="tmpArray" type="byte[]" line="120"/>
                <scope line="126">
                    <scope line="129"/>
                    <scope line="133"/>
                </scope>
                <scope line="141">
                    <scope line="155">
                        <scope line="157"/>
                        <scope line="164">
                            <scope line="167"/>
                            <scope line="171"/>
                        </scope>
                        <scope line="175"/>
                    </scope>
                    <scope line="183"/>
                    <scope line="189">
                        <scope line="194">
                            <scope line="197">
                                <scope line="200"/>
                                <scope line="203"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="216"/>
                </scope>
            </method>
            <javadoc line="227">
                the maximum number of bytes needed to hold a converted char                
                <returns>
                    the maximum number of bytes needed for a converted char                    
                </returns>
            </javadoc>
            <method name="getMaxBytesPerChar" type="int" line="231"/>
            <method name="encodeChar" type="int" line="235">
                <params>
                    <param name="ch" type="char"/>
                </params>
                <declaration name="index" type="char" line="236"/>
            </method>
            <method name="getNative" type="byte" line="242">
                <params>
                    <param name="inputChar" type="char"/>
                </params>
                <declaration name="b" type="int" line="243"/>
            </method>
            <javadoc line="249">
                Resets the converter.
                  Call this method to reset the converter to its initial state                
            </javadoc>
            <method name="reset" type="void" line="253"/>
            <javadoc line="258">
                Return whether a character is mappable or not                
                <return>
                    true if a character is mappable                    
                </return>
            </javadoc>
            <method name="canConvert" type="boolean" line="262">
                <params>
                    <param name="ch" type="char"/>
                </params>
            </method>
        </class>
    </source>