<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.io">
        <import package="sun.nio.cs.CharsetMapping"/>
        <class name="CharToByteSingleByte" line="3">
            <extends class="CharToByteConverter"/>
            <javadoc line="3">
                A table driven conversion from char to byte for single byte
                  character sets.  Tables will reside in the class CharToByteYYYYY,
                  where YYYYY is a unique character set identifier
                  &lt; TBD: Tables are of the form... &gt;                
                <author>
                    Lloyd Honomichl                    
                </author>
                <author>
                    Asmus Freytag                    
                </author>
                <version>
                    8/28/96                    
                </version>
            </javadoc>
            <declaration name="index1" type="char[]" line="13"/>
            <declaration name="index2" type="char[]" line="14"/>
            <declaration name="mask1" type="int" line="15"/>
            <declaration name="mask2" type="int" line="16"/>
            <declaration name="shift" type="int" line="17"/>
            <declaration name="highHalfZoneCode" type="char" line="18"/>
            <method name="getIndex1" type="char[]" line="19"/>
            <method name="getIndex2" type="char[]" line="22"/>
            <method name="flush" type="int" line="25">
                <params>
                    <param name="output" type="byte[]"/>
                    <param name="outStart" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <scope line="26"/>
            </method>
            <javadoc line="34">
                Converts characters to sequences of bytes.
                  Conversions that result in Exceptions can be restarted by calling
                  convert again, with appropriately modified parameters.                
                <return>
                    the characters written to output.                    
                </return>
                <param>
                    input char array containing text in Unicode                    
                </param>
                <param>
                    inStart offset in input array                    
                </param>
                <param>
                    inEnd offset of last byte to be converted                    
                </param>
                <param>
                    output byte array to receive conversion result                    
                </param>
                <param>
                    outStart starting offset                    
                </param>
                <param>
                    outEnd offset of last byte to be written to                    
                </param>
                <throw>
                    MalformedInputException for any sequence of chars that is
                      illegal in Unicode (principally unpaired surrogates
                      and \uFFFF or \uFFFE), including any partial surrogate pair
                      which occurs at the end of an input buffer.                    
                </throw>
                <throw>
                    UnsupportedCharacterException for any character that
                      that cannot be converted to the external character set.                    
                </throw>
            </javadoc>
            <method name="convert" type="int" line="52">
                <params>
                    <param name="input" type="char[]"/>
                    <param name="inOff" type="int"/>
                    <param name="inEnd" type="int"/>
                    <param name="output" type="byte[]"/>
                    <param name="outOff" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <declaration name="inputChar" type="char" line="53"/>
                <declaration name="outputByte" type="byte[]" line="54"/>
                <declaration name="inputSize" type="int" line="55"/>
                <declaration name="outputSize" type="int" line="56"/>
                <declaration name="tmpArray" type="byte[]" line="57"/>
                <scope line="60">
                    <scope line="63"/>
                    <scope line="67"/>
                </scope>
                <scope line="72">
                    <scope line="77">
                        <scope line="78"/>
                        <scope line="83">
                            <scope line="84"/>
                            <scope line="89"/>
                        </scope>
                        <scope line="94"/>
                    </scope>
                    <scope line="99"/>
                    <scope line="103">
                        <scope line="105">
                            <scope line="106">
                                <scope line="107"/>
                                <scope line="111"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="119"/>
                </scope>
            </method>
            <javadoc line="126">
                the maximum number of bytes needed to hold a converted char                
                <returns>
                    the maximum number of bytes needed for a converted char                    
                </returns>
            </javadoc>
            <method name="getMaxBytesPerChar" type="int" line="130"/>
            <method name="encodeChar" type="int" line="133">
                <params>
                    <param name="ch" type="char"/>
                </params>
                <declaration name="index" type="char" line="134"/>
            </method>
            <method name="getNative" type="byte" line="138">
                <params>
                    <param name="inputChar" type="char"/>
                </params>
                <declaration name="b" type="int" line="139"/>
            </method>
            <javadoc line="143">
                Resets the converter.
                  Call this method to reset the converter to its initial state                
            </javadoc>
            <method name="reset" type="void" line="147"/>
            <javadoc line="151">
                Return whether a character is mappable or not                
                <return>
                    true if a character is mappable                    
                </return>
            </javadoc>
            <method name="canConvert" type="boolean" line="155">
                <params>
                    <param name="ch" type="char"/>
                </params>
            </method>
        </class>
    </source>