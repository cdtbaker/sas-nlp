<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.io">
        <import package="sun.nio.cs.ext.DoubleByte"/>
        <import package="sun.nio.cs.CharsetMapping"/>
        <class name="ByteToCharDBCS_EBCDIC" line="30">
            <extends class="ByteToCharConverter"/>
            <declaration name="SBCS" type="int" line="33"/>
            <declaration name="DBCS" type="int" line="34"/>
            <declaration name="SO" type="int" line="36"/>
            <declaration name="SI" type="int" line="37"/>
            <declaration name="currentState" type="int" line="39"/>
            <declaration name="savedBytePresent" type="boolean" line="40"/>
            <declaration name="savedByte" type="int" line="41"/>
            <declaration name="dec" type="DoubleByte.Decoder" line="43"/>
            <method name="ByteToCharDBCS_EBCDIC" type="constructor" line="45">
                <params>
                    <param name="dec" type="DoubleByte.Decoder"/>
                </params>
            </method>
            <method name="decodeSingle" type="char" line="52">
                <params>
                    <param name="b" type="int"/>
                </params>
            </method>
            <method name="decodeDouble" type="char" line="56">
                <params>
                    <param name="b1" type="int"/>
                    <param name="b2" type="int"/>
                </params>
            </method>
            <method name="flush" type="int" line="62">
                <params>
                    <param name="output" type="char[]"/>
                    <param name="outStart" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <scope line="64"/>
            </method>
            <javadoc line="74">
                Character conversion                
            </javadoc>
            <method name="convert" type="int" line="81">
                <params>
                    <param name="input" type="byte[]"/>
                    <param name="inOff" type="int"/>
                    <param name="inEnd" type="int"/>
                    <param name="output" type="char[]"/>
                    <param name="outOff" type="int"/>
                    <param name="outEnd" type="int"/>
                </params>
                <comment line="102">
                    For SO characters - simply validate the state and if OK                    
                </comment>
                <comment line="103">
                    update the state and go to the next byte                    
                </comment>
                <comment line="116">
                    For SI characters - simply validate the state and if OK                    
                </comment>
                <comment line="117">
                    update the state and go to the next byte                    
                </comment>
                <comment line="128">
                    Process the real data characters                    
                </comment>
                <comment line="134">
                    for a DBCS character - architecture dictates the                    
                </comment>
                <comment line="135">
                    valid range of 1st bytes                    
                </comment>
                <comment line="143">
                    We have been split in the middle if a character                    
                </comment>
                <comment line="144">
                    save the first byte for next time around                    
                </comment>
                <comment line="155">
                    validate the pair of bytes meet the architecture                    
                </comment>
                <declaration name="inputSize" type="int" line="82"/>
                <declaration name="outputChar" type="char" line="83"/>
                <scope line="88">
                    <declaration name="byte1" type="int" line="89"/>
                    <scope line="91"/>
                    <scope line="94"/>
                    <scope line="100">
                        <scope line="105"/>
                        <scope line="108"/>
                    </scope>
                    <scope line="115">
                        <scope line="119"/>
                        <scope line="122"/>
                    </scope>
                    <scope line="126">
                        <scope line="130"/>
                        <scope line="132">
                            <scope line="137"/>
                            <scope line="142"/>
                            <scope line="158"/>
                        </scope>
                        <scope line="166">
                            <scope line="169"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="188">
                Resets the converter.                
            </javadoc>
            <method name="reset" type="void" line="191"/>
        </class>
    </source>