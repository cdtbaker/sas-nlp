<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.dc">
        <import package="java.awt.Shape"/>
        <import package="java.awt.BasicStroke"/>
        <import package="java.awt.geom.Path2D"/>
        <import package="java.awt.geom.PathIterator"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="sun.awt.geom.PathConsumer2D"/>
        <import package="sun.java2d.pipe.Region"/>
        <import package="sun.java2d.pipe.AATileGenerator"/>
        <import package="sun.java2d.pipe.RenderingEngine"/>
        <import package="sun.dc.pr.Rasterizer"/>
        <import package="sun.dc.pr.PathStroker"/>
        <import package="sun.dc.pr.PathDasher"/>
        <import package="sun.dc.pr.PRException"/>
        <import package="sun.dc.path.PathConsumer"/>
        <import package="sun.dc.path.PathException"/>
        <import package="sun.dc.path.FastPathProducer"/>
        <class name="DuctusRenderingEngine" line="18">
            <extends class="RenderingEngine"/>
            <declaration name="PenUnits" type="float" line="19"/>
            <declaration name="MinPenUnits" type="int" line="20"/>
            <declaration name="MinPenUnitsAA" type="int" line="21"/>
            <declaration name="MinPenSizeAA" type="float" line="22"/>
            <declaration name="UPPER_BND" type="float" line="23"/>
            <declaration name="LOWER_BND" type="float" line="24"/>
            <declaration name="RasterizerCaps" type="int" line="25"/>
            <declaration name="RasterizerCorners" type="int" line="26"/>
            <method name="getTransformMatrix" type="float[]" line="27">
                <params>
                    <param name="transform" type="AffineTransform"/>
                </params>
                <declaration name="matrix" type="float" line="28"/>
                <declaration name="dmatrix" type="double" line="29"/>
                <scope line="31"/>
            </method>
            <javadoc line="36">
                {@inheritDoc}                
            </javadoc>
            <method name="createStrokedShape" type="Shape" line="39">
                <params>
                    <param name="src" type="Shape"/>
                    <param name="width" type="float"/>
                    <param name="caps" type="int"/>
                    <param name="join" type="int"/>
                    <param name="miterlimit" type="float"/>
                    <param name="dashes" type="float"/>
                    <param name="dashphase" type="float"/>
                </params>
                <declaration name="filler" type="FillAdapter" line="40"/>
                <declaration name="stroker" type="PathStroker" line="41"/>
                <declaration name="dasher" type="PathDasher" line="42"/>
                <scope line="43">
                    <declaration name="consumer" type="PathConsumer" line="44"/>
                    <scope line="49"/>
                    <scope line="55"/>
                </scope>
                <scope line="60">
                    <scope line="62"/>
                </scope>
            </method>
            <javadoc line="68">
                {@inheritDoc}                
            </javadoc>
            <method name="strokeTo" type="void" line="71">
                <params>
                    <param name="src" type="Shape"/>
                    <param name="transform" type="AffineTransform"/>
                    <param name="bs" type="BasicStroke"/>
                    <param name="thin" type="boolean"/>
                    <param name="normalize" type="boolean"/>
                    <param name="antialias" type="boolean"/>
                    <param name="sr" type="PathConsumer2D"/>
                </params>
                <declaration name="stroker" type="PathStroker" line="72"/>
                <declaration name="consumer" type="PathConsumer" line="73"/>
                <declaration name="matrix" type="float" line="74"/>
                <scope line="75">
                    <scope line="77"/>
                </scope>
                <declaration name="dashes" type="float[]" line="85"/>
                <scope line="86">
                    <declaration name="dasher" type="PathDasher" line="87"/>
                    <scope line="89"/>
                </scope>
                <scope line="95">
                    <declaration name="pi" type="PathIterator" line="96"/>
                </scope>
                <scope line="99"/>
                <scope line="102">
                    <scope line="103">
                        <declaration name="next" type="PathConsumer" line="104"/>
                    </scope>
                </scope>
            </method>
            <method name="feedConsumer" type="void" line="110">
                <params>
                    <param name="pi" type="PathIterator"/>
                    <param name="consumer" type="PathConsumer"/>
                    <param name="normalize" type="boolean"/>
                    <param name="norm" type="float"/>
                </params>
                <declaration name="pathClosed" type="boolean" line="112"/>
                <declaration name="skip" type="boolean" line="113"/>
                <declaration name="subpathStarted" type="boolean" line="114"/>
                <declaration name="mx" type="float" line="115"/>
                <declaration name="my" type="float" line="116"/>
                <declaration name="point" type="float" line="117"/>
                <declaration name="rnd" type="float" line="118"/>
                <declaration name="ax" type="float" line="119"/>
                <declaration name="ay" type="float" line="120"/>
                <scope line="121">
                    <declaration name="type" type="int" line="122"/>
                    <scope line="123">
                        <scope line="125"/>
                    </scope>
                    <scope line="130">
                        <declaration name="index" type="int" line="131"/>
                        <scope line="148">
                            <declaration name="ox" type="float" line="149"/>
                            <declaration name="oy" type="float" line="150"/>
                            <declaration name="newax" type="float" line="151"/>
                            <declaration name="neway" type="float" line="152"/>
                        </scope>
                    </scope>
                    <scope line="179"/>
                    <scope line="186"/>
                    <scope line="191">
                        <scope line="192"/>
                        <scope line="197"/>
                    </scope>
                    <scope line="203">
                        <scope line="204"/>
                        <scope line="209">
                            <scope line="210"/>
                            <scope line="213"/>
                        </scope>
                    </scope>
                    <scope line="220">
                        <scope line="221"/>
                        <scope line="226">
                            <scope line="227"/>
                            <scope line="230"/>
                        </scope>
                    </scope>
                    <scope line="237"/>
                </scope>
            </method>
            <declaration name="theRasterizer" type="Rasterizer" line="248"/>
            <method name="getRasterizer" type="Rasterizer" line="249">
                <declaration name="r" type="Rasterizer" line="250"/>
                <scope line="251"/>
                <scope line="254"/>
            </method>
            <method name="dropRasterizer" type="void" line="259">
                <params>
                    <param name="r" type="Rasterizer"/>
                </params>
            </method>
            <javadoc line="263">
                {@inheritDoc}                
            </javadoc>
            <method name="getMinimumAAPenSize" type="float" line="266"/>
            <javadoc line="269">
                {@inheritDoc}                
            </javadoc>
            <method name="getAATileGenerator" type="AATileGenerator" line="272">
                <params>
                    <param name="s" type="Shape"/>
                    <param name="at" type="AffineTransform"/>
                    <param name="clip" type="Region"/>
                    <param name="bs" type="BasicStroke"/>
                    <param name="thin" type="boolean"/>
                    <param name="normalize" type="boolean"/>
                    <param name="bbox" type="int"/>
                </params>
                <declaration name="r" type="Rasterizer" line="273"/>
                <declaration name="pi" type="PathIterator" line="274"/>
                <scope line="275">
                    <declaration name="matrix" type="float" line="276"/>
                    <scope line="278"/>
                    <scope line="281">
                        <scope line="283"/>
                    </scope>
                    <declaration name="dashes" type="float[]" line="291"/>
                    <scope line="292">
                        <scope line="294"/>
                    </scope>
                </scope>
                <scope line="300"/>
                <scope line="304">
                    <declaration name="pathClosed" type="boolean" line="305"/>
                    <declaration name="skip" type="boolean" line="306"/>
                    <declaration name="subpathStarted" type="boolean" line="307"/>
                    <declaration name="mx" type="float" line="308"/>
                    <declaration name="my" type="float" line="309"/>
                    <declaration name="point" type="float" line="310"/>
                    <declaration name="ax" type="float" line="311"/>
                    <declaration name="ay" type="float" line="312"/>
                    <scope line="313">
                        <declaration name="type" type="int" line="314"/>
                        <scope line="315">
                            <scope line="317"/>
                        </scope>
                        <scope line="322">
                            <declaration name="index" type="int" line="323"/>
                            <scope line="340">
                                <declaration name="ox" type="float" line="341"/>
                                <declaration name="oy" type="float" line="342"/>
                                <declaration name="newax" type="float" line="343"/>
                                <declaration name="neway" type="float" line="344"/>
                            </scope>
                        </scope>
                        <scope line="371"/>
                        <scope line="378"/>
                        <scope line="383">
                            <scope line="384"/>
                            <scope line="389"/>
                        </scope>
                        <scope line="395">
                            <scope line="396"/>
                            <scope line="401">
                                <scope line="402"/>
                                <scope line="405"/>
                            </scope>
                        </scope>
                        <scope line="412">
                            <scope line="413"/>
                            <scope line="418">
                                <scope line="419"/>
                                <scope line="422"/>
                            </scope>
                        </scope>
                        <scope line="429"/>
                    </scope>
                </scope>
                <scope line="439">
                    <scope line="443"/>
                </scope>
                <scope line="449"/>
            </method>
            <javadoc line="454">
                {@inheritDoc}                
            </javadoc>
            <method name="getAATileGenerator" type="AATileGenerator" line="457">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="dx1" type="double"/>
                    <param name="dy1" type="double"/>
                    <param name="dx2" type="double"/>
                    <param name="dy2" type="double"/>
                    <param name="lw1" type="double"/>
                    <param name="lw2" type="double"/>
                    <param name="clip" type="Region"/>
                    <param name="bbox" type="int"/>
                </params>
                <declaration name="ldx1" type="double" line="458"/>
                <declaration name="innerpgram" type="boolean" line="459"/>
                <scope line="460">
                    <scope line="471"/>
                </scope>
                <scope line="475"/>
                <declaration name="r" type="Rasterizer" line="478"/>
                <scope line="486"/>
                <scope line="499">
                    <scope line="503"/>
                </scope>
                <scope line="509"/>
            </method>
            <method name="feedConsumer" type="void" line="514">
                <params>
                    <param name="consumer" type="PathConsumer"/>
                    <param name="pi" type="PathIterator"/>
                </params>
                <scope line="515">
                    <declaration name="pathClosed" type="boolean" line="517"/>
                    <declaration name="mx" type="float" line="518"/>
                    <declaration name="my" type="float" line="519"/>
                    <declaration name="point" type="float" line="520"/>
                    <scope line="521">
                        <declaration name="type" type="int" line="522"/>
                        <scope line="523">
                            <scope line="525"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="553"/>
            </method>
            <class name="FillAdapter" line="557">
                <implements interface="PathConsumer"/>
                <declaration name="closed" type="boolean" line="558"/>
                <declaration name="path" type="Path2D.Float" line="559"/>
                <method name="FillAdapter" type="constructor" line="560"/>
                <method name="getShape" type="Shape" line="563"/>
                <method name="dispose" type="void" line="566"/>
                <method name="getConsumer" type="PathConsumer" line="568"/>
                <method name="beginPath" type="void" line="571"/>
                <method name="beginSubpath" type="void" line="573">
                    <params>
                        <param name="x0" type="float"/>
                        <param name="y0" type="float"/>
                    </params>
                    <scope line="574"/>
                </method>
                <method name="appendLine" type="void" line="580">
                    <params>
                        <param name="x1" type="float"/>
                        <param name="y1" type="float"/>
                    </params>
                </method>
                <method name="appendQuadratic" type="void" line="583">
                    <params>
                        <param name="xm" type="float"/>
                        <param name="ym" type="float"/>
                        <param name="x1" type="float"/>
                        <param name="y1" type="float"/>
                    </params>
                </method>
                <method name="appendCubic" type="void" line="586">
                    <params>
                        <param name="xm" type="float"/>
                        <param name="ym" type="float"/>
                        <param name="xn" type="float"/>
                        <param name="yn" type="float"/>
                        <param name="x1" type="float"/>
                        <param name="y1" type="float"/>
                    </params>
                </method>
                <method name="closedSubpath" type="void" line="589"/>
                <method name="endPath" type="void" line="592">
                    <scope line="593"/>
                </method>
                <method name="useProxy" type="void" line="598">
                    <params>
                        <param name="proxy" type="FastPathProducer"/>
                    </params>
                </method>
                <method name="getCPathConsumer" type="long" line="601"/>
            </class>
        </class>
    </source>