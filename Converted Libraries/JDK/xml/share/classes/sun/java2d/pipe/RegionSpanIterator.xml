<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.pipe">
        <class name="RegionSpanIterator" line="2">
            <implements interface="SpanIterator"/>
            <javadoc line="2">
                This class implements the ShapeIterator interface for a Region.
                  This is useful as the source iterator of a device clip region
                  (in its native guise), and also as the result of clipping a
                  Region to a rectangle.                
            </javadoc>
            <declaration name="ri" type="RegionIterator" line="9"/>
            <declaration name="lox" type="int" line="10"/>
            <declaration name="curloy" type="int" line="11"/>
            <declaration name="done" type="boolean" line="12"/>
            <declaration name="isrect" type="boolean" line="13"/>
            <javadoc line="14">
                Constructs an instance based on the given Region                
            </javadoc>
            <method name="RegionSpanIterator" type="constructor" line="17">
                <params>
                    <param name="r" type="Region"/>
                </params>
                <declaration name="bounds" type="int[]" line="18"/>
            </method>
            <javadoc line="27">
                Gets the bbox of the available region spans.                
            </javadoc>
            <method name="getPathBox" type="void" line="30">
                <params>
                    <param name="pathbox" type="int"/>
                </params>
            </method>
            <javadoc line="36">
                Intersect the box used for clipping the output spans with the
                  given box.                
            </javadoc>
            <method name="intersectClipBox" type="void" line="40">
                <params>
                    <param name="clox" type="int"/>
                    <param name="cloy" type="int"/>
                    <param name="chix" type="int"/>
                    <param name="chiy" type="int"/>
                </params>
                <scope line="41"/>
                <scope line="44"/>
                <scope line="47"/>
                <scope line="50"/>
            </method>
            <javadoc line="55">
                Fetches the next span that needs to be operated on.
                  If the return value is false then there are no more spans.                
            </javadoc>
            <method name="nextSpan" type="boolean" line="59">
                <params>
                    <param name="spanbox" type="int"/>
                </params>
                <scope line="60"/>
                <scope line="63"/>
                <declaration name="curlox" type="int" line="68"/>
                <declaration name="curloy" type="int" line="69"/>
                <declaration name="curhiy" type="int" line="70"/>
                <scope line="71">
                    <scope line="72">
                        <scope line="73"/>
                        <scope line="79"/>
                        <scope line="82"/>
                        <scope line="85"/>
                    </scope>
                    <scope line="93"/>
                    <scope line="96"/>
                    <scope line="99"/>
                </scope>
            </method>
            <javadoc line="109">
                This method tells the iterator that it may skip all spans
                  whose Y range is completely above the indicated Y coordinate.                
            </javadoc>
            <method name="skipDownTo" type="void" line="113">
                <params>
                    <param name="y" type="int"/>
                </params>
            </method>
            <javadoc line="116">
                This method returns a native pointer to a function block that
                  can be used by a native method to perform the same iteration
                  cycle that the above methods provide while avoiding upcalls to
                  the Java object.
                  The definition of the structure whose pointer is returned by
                  this method is defined in:
                  &lt;pre&gt;
                  src/share/native/sun/java2d/pipe/SpanIterator.h
                  &lt;/pre&gt;                
            </javadoc>
            <method name="getNativeIterator" type="long" line="127"/>
        </class>
    </source>