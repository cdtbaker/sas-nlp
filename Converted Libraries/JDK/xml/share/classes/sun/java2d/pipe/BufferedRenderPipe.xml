<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.pipe">
        <import package="java.awt.BasicStroke"/>
        <import package="java.awt.Polygon"/>
        <import package="java.awt.Shape"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.awt.geom.Arc2D"/>
        <import package="java.awt.geom.Ellipse2D"/>
        <import package="java.awt.geom.Path2D"/>
        <import package="java.awt.geom.IllegalPathStateException"/>
        <import package="java.awt.geom.PathIterator"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <import package="java.awt.geom.RoundRectangle2D"/>
        <import package="sun.java2d.SunGraphics2D"/>
        <import package="sun.java2d.loops.ProcessPath"/>
        <import package="sun.java2d.pipe.BufferedOpCodes"/>
        <class name="BufferedRenderPipe" line="16">
            <implements interface="PixelDrawPipe"/>
            <implements interface="PixelFillPipe"/>
            <implements interface="ShapeDrawPipe"/>
            <implements interface="ParallelogramPipe"/>
            <javadoc line="16">
                Base class for enqueuing rendering operations in a single-threaded
                  rendering environment.  Instead of each operation being rendered
                  immediately by the underlying graphics library, the operation will be
                  added to the provided RenderQueue, which will be processed at a later
                  time by a single thread.
                  This class provides implementations of drawLine(), drawRect(), drawPoly(),
                  fillRect(), draw(Shape), and fill(Shape), which are useful for a
                  hardware-accelerated renderer.  The other draw() and fill() methods
                  simply delegate to draw(Shape) and fill(Shape), respectively.                
            </javadoc>
            <declaration name="aapgrampipe" type="ParallelogramPipe" line="28"/>
            <declaration name="BYTES_PER_POLY_POINT" type="int" line="29"/>
            <declaration name="BYTES_PER_SCANLINE" type="int" line="30"/>
            <declaration name="BYTES_PER_SPAN" type="int" line="31"/>
            <declaration name="rq" type="RenderQueue" line="32"/>
            <declaration name="buf" type="RenderBuffer" line="33"/>
            <declaration name="drawHandler" type="BufferedDrawHandler" line="34"/>
            <method name="BufferedRenderPipe" type="constructor" line="35">
                <params>
                    <param name="rq" type="RenderQueue"/>
                </params>
            </method>
            <method name="getAAParallelogramPipe" type="ParallelogramPipe" line="40"/>
            <method name="validateContext" type="void" line="43"/>
            <javadoc line="43">
                Validates the state in the provided SunGraphics2D object and sets up
                  any special resources for this operation (e.g. enabling gradient
                  shading).                
            </javadoc>
            <method name="validateContextAA" type="void" line="49"/>
            <method name="drawLine" type="void" line="50">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x1" type="int"/>
                    <param name="y1" type="int"/>
                    <param name="x2" type="int"/>
                    <param name="y2" type="int"/>
                </params>
                <declaration name="transx" type="int" line="51"/>
                <declaration name="transy" type="int" line="52"/>
                <scope line="54"/>
                <scope line="63"/>
            </method>
            <method name="drawRect" type="void" line="67">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <scope line="69"/>
                <scope line="78"/>
            </method>
            <method name="fillRect" type="void" line="82">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <scope line="84"/>
                <scope line="93"/>
            </method>
            <method name="drawRoundRect" type="void" line="97">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="arcWidth" type="int"/>
                    <param name="arcHeight" type="int"/>
                </params>
            </method>
            <method name="fillRoundRect" type="void" line="100">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="arcWidth" type="int"/>
                    <param name="arcHeight" type="int"/>
                </params>
            </method>
            <method name="drawOval" type="void" line="103">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
            </method>
            <method name="fillOval" type="void" line="106">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
            </method>
            <method name="drawArc" type="void" line="109">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="startAngle" type="int"/>
                    <param name="arcAngle" type="int"/>
                </params>
            </method>
            <method name="fillArc" type="void" line="112">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="startAngle" type="int"/>
                    <param name="arcAngle" type="int"/>
                </params>
            </method>
            <method name="drawPoly" type="void" line="115">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="xPoints" type="int[]"/>
                    <param name="yPoints" type="int[]"/>
                    <param name="nPoints" type="int"/>
                    <param name="isClosed" type="boolean"/>
                </params>
                <scope line="116"/>
                <scope line="119"/>
                <scope line="122"/>
                <scope line="125"/>
                <scope line="130">
                    <declaration name="pointBytesRequired" type="int" line="132"/>
                    <declaration name="totalBytesRequired" type="int" line="133"/>
                    <scope line="134">
                        <scope line="135"/>
                    </scope>
                    <scope line="146">
                        <anonymous_class line="147">
                            <method name="run" type="void" line="148"/>
                        </anonymous_class>
                    </scope>
                </scope>
                <scope line="155"/>
            </method>
            <method name="drawPoly" type="void" line="159"/>
            <method name="drawPolyline" type="void" line="160">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="xPoints" type="int[]"/>
                    <param name="yPoints" type="int[]"/>
                    <param name="nPoints" type="int"/>
                </params>
            </method>
            <method name="drawPolygon" type="void" line="163">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="xPoints" type="int[]"/>
                    <param name="yPoints" type="int[]"/>
                    <param name="nPoints" type="int"/>
                </params>
            </method>
            <method name="fillPolygon" type="void" line="166">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="xPoints" type="int[]"/>
                    <param name="yPoints" type="int[]"/>
                    <param name="nPoints" type="int"/>
                </params>
            </method>
            <class name="BufferedDrawHandler" line="169">
                <extends class="ProcessPath.DrawHandler"/>
                <method name="BufferedDrawHandler" type="constructor" line="170"/>
                <javadoc line="173">
                    This method needs to be called prior to each draw/fillPath()
                      operation to ensure the clip bounds are up to date.                    
                </javadoc>
                <method name="validate" type="void" line="177">
                    <params>
                        <param name="sg2d" type="SunGraphics2D"/>
                    </params>
                    <declaration name="clip" type="Region" line="178"/>
                </method>
                <javadoc line="181">
                    drawPath() support...                    
                </javadoc>
                <method name="drawLine" type="void" line="184">
                    <params>
                        <param name="x1" type="int"/>
                        <param name="y1" type="int"/>
                        <param name="x2" type="int"/>
                        <param name="y2" type="int"/>
                    </params>
                </method>
                <method name="drawPixel" type="void" line="192">
                    <params>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                </method>
                <declaration name="scanlineCount" type="int" line="198"/>
                <javadoc line="198">
                    fillPath() support...                    
                </javadoc>
                <declaration name="scanlineCountIndex" type="int" line="202"/>
                <declaration name="remainingScanlines" type="int" line="203"/>
                <method name="resetFillPath" type="void" line="204"/>
                <method name="updateScanlineCount" type="void" line="211"/>
                <javadoc line="214">
                    Called from fillPath() to indicate that we are about to
                      start issuing drawScanline() calls.                    
                </javadoc>
                <method name="startFillPath" type="void" line="218"/>
                <method name="drawScanline" type="void" line="222">
                    <params>
                        <param name="x1" type="int"/>
                        <param name="x2" type="int"/>
                        <param name="y" type="int"/>
                    </params>
                    <scope line="223"/>
                </method>
                <javadoc line="234">
                    Called from fillPath() to indicate that we are done
                      issuing drawScanline() calls.                    
                </javadoc>
                <method name="endFillPath" type="void" line="238"/>
            </class>
            <method name="drawPath" type="void" line="242">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="p2df" type="Path2D.Float"/>
                    <param name="transx" type="int"/>
                    <param name="transy" type="int"/>
                </params>
                <scope line="244"/>
                <scope line="249"/>
            </method>
            <method name="fillPath" type="void" line="253">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="p2df" type="Path2D.Float"/>
                    <param name="transx" type="int"/>
                    <param name="transy" type="int"/>
                </params>
                <scope line="255"/>
                <scope line="262"/>
            </method>
            <method name="fillSpans" type="int" line="266"/>
            <method name="fillSpans" type="void" line="267">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="si" type="SpanIterator"/>
                    <param name="transx" type="int"/>
                    <param name="transy" type="int"/>
                </params>
                <scope line="269">
                    <declaration name="newpos" type="int" line="272"/>
                </scope>
                <scope line="275"/>
            </method>
            <method name="fillParallelogram" type="void" line="279">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="ux1" type="double"/>
                    <param name="uy1" type="double"/>
                    <param name="ux2" type="double"/>
                    <param name="uy2" type="double"/>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="dx1" type="double"/>
                    <param name="dy1" type="double"/>
                    <param name="dx2" type="double"/>
                    <param name="dy2" type="double"/>
                </params>
                <scope line="281"/>
                <scope line="292"/>
            </method>
            <method name="drawParallelogram" type="void" line="296">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="ux1" type="double"/>
                    <param name="uy1" type="double"/>
                    <param name="ux2" type="double"/>
                    <param name="uy2" type="double"/>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="dx1" type="double"/>
                    <param name="dy1" type="double"/>
                    <param name="dx2" type="double"/>
                    <param name="dy2" type="double"/>
                    <param name="lw1" type="double"/>
                    <param name="lw2" type="double"/>
                </params>
                <scope line="298"/>
                <scope line="311"/>
            </method>
            <class name="AAParallelogramPipe" line="315">
                <implements interface="ParallelogramPipe"/>
                <method name="fillParallelogram" type="void" line="316">
                    <params>
                        <param name="sg2d" type="SunGraphics2D"/>
                        <param name="ux1" type="double"/>
                        <param name="uy1" type="double"/>
                        <param name="ux2" type="double"/>
                        <param name="uy2" type="double"/>
                        <param name="x" type="double"/>
                        <param name="y" type="double"/>
                        <param name="dx1" type="double"/>
                        <param name="dy1" type="double"/>
                        <param name="dx2" type="double"/>
                        <param name="dy2" type="double"/>
                    </params>
                    <scope line="318"/>
                    <scope line="329"/>
                </method>
                <method name="drawParallelogram" type="void" line="333">
                    <params>
                        <param name="sg2d" type="SunGraphics2D"/>
                        <param name="ux1" type="double"/>
                        <param name="uy1" type="double"/>
                        <param name="ux2" type="double"/>
                        <param name="uy2" type="double"/>
                        <param name="x" type="double"/>
                        <param name="y" type="double"/>
                        <param name="dx1" type="double"/>
                        <param name="dy1" type="double"/>
                        <param name="dx2" type="double"/>
                        <param name="dy2" type="double"/>
                        <param name="lw1" type="double"/>
                        <param name="lw2" type="double"/>
                    </params>
                    <scope line="335"/>
                    <scope line="348"/>
                </method>
            </class>
            <method name="draw" type="void" line="353">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="s" type="Shape"/>
                </params>
                <scope line="354">
                    <scope line="355">
                        <scope line="356">
                            <declaration name="p" type="Polygon" line="357"/>
                        </scope>
                    </scope>
                    <declaration name="p2df" type="Path2D.Float" line="362"/>
                    <declaration name="transx" type="int" line="363"/>
                    <scope line="364">
                        <scope line="365"/>
                        <scope line="368"/>
                    </scope>
                    <scope line="374"/>
                </scope>
                <scope line="381">
                    <declaration name="si" type="ShapeSpanIterator" line="382"/>
                    <scope line="383"/>
                    <scope line="386"/>
                </scope>
                <scope line="390"/>
            </method>
            <method name="fill" type="void" line="394">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="s" type="Shape"/>
                </params>
                <declaration name="transx" type="int" line="395"/>
                <scope line="396">
                    <declaration name="p2df" type="Path2D.Float" line="397"/>
                    <scope line="398">
                        <scope line="399"/>
                        <scope line="402"/>
                    </scope>
                    <scope line="408"/>
                </scope>
                <declaration name="at" type="AffineTransform" line="416"/>
                <scope line="417"/>
                <scope line="422"/>
                <declaration name="ssi" type="ShapeSpanIterator" line="426"/>
                <scope line="427">
                    <declaration name="clip" type="Region" line="428"/>
                </scope>
                <scope line="433"/>
            </method>
        </class>
    </source>