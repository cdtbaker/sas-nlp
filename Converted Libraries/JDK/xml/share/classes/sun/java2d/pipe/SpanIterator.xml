<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.pipe">
        <interface name="SpanIterator">
            <javadoc line="2">
                This interface defines a general method for iterating through the
                  rectangular &quot;spans&quot; that represent the interior of a filled path.
                  &lt;p&gt;
                  There can be many kinds of span iterators used in the rendering
                  pipeline, the most basic being an iterator that scan converts a
                  path defined by any PathIterator, or an nested iterator which
                  intersects another iterator&apos;s spans with a clip region.
                  Other iterators can be created for scan converting some of the
                  primitive shapes more explicitly for speed or quality.                
                <author>
                    Jim Graham                    
                </author>
            </javadoc>
            <method name="getPathBox" type="void" line="15"/>
            <javadoc line="15">
                This method returns the bounding box of the spans that the
                  iterator will be returning.
                  The array must be of length at least 4 and upon return, it
                  will be filled with the values:
                  &lt;pre&gt;
                  {PathMinX, PathMinY, PathMaxX, PathMaxY}.
                  &lt;/pre&gt;                
            </javadoc>
            <method name="intersectClipBox" type="void" line="25"/>
            <javadoc line="25">
                This method constrains the spans returned by nextSpan() to the
                  rectangle whose bounds are given.                
            </javadoc>
            <method name="nextSpan" type="boolean" line="30"/>
            <javadoc line="30">
                This method returns the next span in the shape being iterated.
                  The array must be of length at least 4 and upon return, it
                  will be filled with the values:
                  &lt;pre&gt;
                  {SpanMinX, SpanMinY, SpanMaxX, SpanMaxY}.
                  &lt;/pre&gt;                
            </javadoc>
            <method name="skipDownTo" type="void" line="39"/>
            <javadoc line="39">
                This method tells the iterator that it may skip all spans
                  whose Y range is completely above the indicated Y coordinate.
                  This method is used to provide feedback from the caller when
                  clipping prevents the display of any data in a given Y range.
                  Typically it will only be called when this iterator has returned
                  a span whose MaxY coordinate is less than the indicated Y and
                  the calling mechanism wants to avoid unnecessary iteration work.
                  While this request could technically be ignored (i.e. a NOP),
                  doing so could potentially cause the caller to make this callback
                  for each span that is being skipped.                
            </javadoc>
            <method name="getNativeIterator" type="long" line="52"/>
            <javadoc line="52">
                This method returns a native pointer to a function block that
                  can be used by a native method to perform the same iteration
                  cycle that the above methods provide while avoiding upcalls to
                  the Java object.
                  The definition of the structure whose pointer is returned by
                  this method is defined in:
                  &lt;pre&gt;
                  src/share/native/sun/java2d/pipe/SpanIterator.h
                  &lt;/pre&gt;                
            </javadoc>
        </interface>
    </source>