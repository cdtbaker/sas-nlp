<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.pipe">
        <import package="java.awt.AlphaComposite"/>
        <import package="java.awt.Composite"/>
        <import package="sun.font.GlyphList"/>
        <import package="sun.java2d.SunGraphics2D"/>
        <import package="sun.java2d.SurfaceData"/>
        <import package="sun.java2d.pipe.BufferedOpCodes"/>
        <class name="BufferedTextPipe" line="8">
            <extends class="GlyphListPipe"/>
            <declaration name="BYTES_PER_GLYPH_IMAGE" type="int" line="9"/>
            <declaration name="BYTES_PER_GLYPH_POSITION" type="int" line="10"/>
            <declaration name="OFFSET_CONTRAST" type="int" line="11"/>
            <javadoc line="11">
                The following offsets are used to pack the parameters in
                  createPackedParams().  (They are also used at the native level when
                  unpacking the params.)                
            </javadoc>
            <declaration name="OFFSET_RGBORDER" type="int" line="17"/>
            <declaration name="OFFSET_SUBPIXPOS" type="int" line="18"/>
            <declaration name="OFFSET_POSITIONS" type="int" line="19"/>
            <javadoc line="20">
                Packs the given parameters into a single int value in order to save
                  space on the rendering queue.  Note that most of these parameters
                  are only used for rendering LCD-optimized text, but conditionalizing
                  this work wouldn&apos;t make any impact on performance, so we will pack
                  those parameters even in the non-LCD case.                
            </javadoc>
            <method name="createPackedParams" type="int" line="27">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="gl" type="GlyphList"/>
                </params>
            </method>
            <declaration name="rq" type="RenderQueue" line="30"/>
            <method name="BufferedTextPipe" type="constructor" line="31">
                <params>
                    <param name="rq" type="RenderQueue"/>
                </params>
            </method>
            <method name="drawGlyphList" type="void" line="34">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="gl" type="GlyphList"/>
                </params>
                <declaration name="comp" type="Composite" line="35"/>
                <scope line="36"/>
                <scope line="40"/>
                <scope line="44"/>
            </method>
            <method name="enqueueGlyphList" type="void" line="48">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="gl" type="GlyphList"/>
                </params>
                <declaration name="buf" type="RenderBuffer" line="49"/>
                <declaration name="totalGlyphs" type="int" line="50"/>
                <declaration name="glyphBytesRequired" type="int" line="51"/>
                <declaration name="posBytesRequired" type="int" line="52"/>
                <declaration name="totalBytesRequired" type="int" line="53"/>
                <declaration name="images" type="long[]" line="54"/>
                <declaration name="glyphListOrigX" type="float" line="55"/>
                <declaration name="glyphListOrigY" type="float" line="56"/>
                <scope line="58">
                    <scope line="59"/>
                    <scope line="69">
                        <declaration name="positions" type="float[]" line="70"/>
                    </scope>
                </scope>
                <scope line="74">
                    <anonymous_class line="75">
                        <method name="run" type="void" line="76"/>
                    </anonymous_class>
                </scope>
            </method>
            <method name="drawGlyphList" type="void" line="83"/>
            <javadoc line="83">
                Called as a separate Runnable when the operation is too large to fit
                  on the RenderQueue.  The OGL/D3D pipelines each have their own (small)
                  native implementation of this method.                
            </javadoc>
            <method name="validateContext" type="void" line="89"/>
            <javadoc line="89">
                Validates the state in the provided SunGraphics2D object.                
            </javadoc>
        </class>
    </source>