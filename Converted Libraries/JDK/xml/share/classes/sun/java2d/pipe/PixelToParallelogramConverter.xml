<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.pipe">
        <import package="java.awt.Shape"/>
        <import package="java.awt.BasicStroke"/>
        <import package="java.awt.geom.Line2D"/>
        <import package="java.awt.geom.Rectangle2D"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="sun.java2d.SunGraphics2D"/>
        <import package="sun.awt.SunHints"/>
        <class name="PixelToParallelogramConverter" line="9">
            <extends class="PixelToShapeConverter"/>
            <implements interface="ShapeDrawPipe"/>
            <javadoc line="9">
                This class converts calls to the basic pixel rendering methods
                  into calls to the methods on a ParallelogramPipe.
                  Most calls are transformed into calls to the fill(Shape) method
                  by the parent PixelToShapeConverter class, but some calls are
                  transformed into calls to fill/drawParallelogram().                
            </javadoc>
            <declaration name="outrenderer" type="ParallelogramPipe" line="17"/>
            <declaration name="minPenSize" type="double" line="18"/>
            <declaration name="normPosition" type="double" line="19"/>
            <declaration name="normRoundingBias" type="double" line="20"/>
            <declaration name="adjustfill" type="boolean" line="21"/>
            <javadoc line="22">
                @param shapepipe pipeline to forward shape calls to                
                <param>
                    pgrampipe pipeline to forward parallelogram calls to
                      (and drawLine calls if possible)                    
                </param>
                <param>
                    minPenSize minimum pen size for dropout control                    
                </param>
                <param>
                    normPosition sub-pixel location to normalize endpoints
                      for STROKE_NORMALIZE cases                    
                </param>
                <param>
                    adjustFill boolean to control whethere normalization
                      constants are also applied to fill operations
                      (normally true for non-AA, false for AA)                    
                </param>
            </javadoc>
            <method name="PixelToParallelogramConverter" type="constructor" line="33">
                <params>
                    <param name="shapepipe" type="ShapeDrawPipe"/>
                    <param name="pgrampipe" type="ParallelogramPipe"/>
                    <param name="minPenSize" type="double"/>
                    <param name="normPosition" type="double"/>
                    <param name="adjustfill" type="boolean"/>
                </params>
            </method>
            <method name="drawLine" type="void" line="41">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x1" type="int"/>
                    <param name="y1" type="int"/>
                    <param name="x2" type="int"/>
                    <param name="y2" type="int"/>
                </params>
                <scope line="42"/>
            </method>
            <method name="drawRect" type="void" line="46">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <scope line="47">
                    <scope line="48">
                        <declaration name="bs" type="BasicStroke" line="49"/>
                        <scope line="50">
                            <scope line="51">
                                <declaration name="lw" type="double" line="52"/>
                            </scope>
                        </scope>
                        <scope line="57"/>
                    </scope>
                </scope>
            </method>
            <method name="fillRect" type="void" line="65">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <scope line="66"/>
            </method>
            <method name="draw" type="void" line="70">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="s" type="Shape"/>
                </params>
                <scope line="71">
                    <declaration name="bs" type="BasicStroke" line="72"/>
                    <scope line="73">
                        <scope line="74">
                            <declaration name="r2d" type="Rectangle2D" line="75"/>
                            <declaration name="w" type="double" line="76"/>
                            <declaration name="h" type="double" line="77"/>
                            <declaration name="x" type="double" line="78"/>
                            <declaration name="y" type="double" line="79"/>
                            <scope line="80">
                                <declaration name="lw" type="double" line="81"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="87">
                        <declaration name="l2d" type="Line2D" line="88"/>
                        <scope line="89"/>
                    </scope>
                </scope>
            </method>
            <method name="fill" type="void" line="96">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="s" type="Shape"/>
                </params>
                <scope line="97">
                    <declaration name="r2d" type="Rectangle2D" line="98"/>
                    <declaration name="w" type="double" line="99"/>
                    <declaration name="h" type="double" line="100"/>
                    <scope line="101">
                        <declaration name="x" type="double" line="102"/>
                        <declaration name="y" type="double" line="103"/>
                    </scope>
                </scope>
            </method>
            <method name="len" type="double" line="110">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                </params>
            </method>
            <method name="normalize" type="double" line="113">
                <params>
                    <param name="v" type="double"/>
                </params>
            </method>
            <method name="drawGeneralLine" type="boolean" line="116">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="ux1" type="double"/>
                    <param name="uy1" type="double"/>
                    <param name="ux2" type="double"/>
                    <param name="uy2" type="double"/>
                </params>
                <scope line="117"/>
                <declaration name="bs" type="BasicStroke" line="120"/>
                <declaration name="cap" type="int" line="121"/>
                <scope line="122"/>
                <declaration name="lw" type="double" line="125"/>
                <declaration name="dx" type="double" line="126"/>
                <declaration name="dy" type="double" line="127"/>
                <declaration name="x1" type="double" line="128"/>
                <scope line="132">
                    <declaration name="coords" type="double" line="133"/>
                </scope>
                <scope line="143">
                    <declaration name="tx" type="double" line="144"/>
                    <declaration name="ty" type="double" line="145"/>
                </scope>
                <scope line="161">
                    <scope line="162">
                        <declaration name="ix1" type="int" line="163"/>
                        <declaration name="iy1" type="int" line="164"/>
                        <declaration name="ix2" type="int" line="165"/>
                        <declaration name="iy2" type="int" line="166"/>
                    </scope>
                </scope>
                <scope line="175">
                    <declaration name="len" type="double" line="176"/>
                    <scope line="177"/>
                    <declaration name="unitvector" type="double" line="180"/>
                </scope>
                <declaration name="len" type="double" line="187"/>
                <declaration name="udx" type="double" line="188"/>
                <scope line="189">
                    <scope line="190"/>
                </scope>
                <scope line="196"/>
                <declaration name="px" type="double" line="200"/>
                <declaration name="py" type="double" line="201"/>
                <scope line="202"/>
            </method>
            <method name="fillRectangle" type="void" line="211">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="rx" type="double"/>
                    <param name="ry" type="double"/>
                    <param name="rw" type="double"/>
                    <param name="rh" type="double"/>
                </params>
                <declaration name="px" type="double" line="212"/>
                <declaration name="dx1" type="double" line="213"/>
                <declaration name="txform" type="AffineTransform" line="214"/>
                <scope line="225">
                    <declaration name="newx" type="double" line="226"/>
                    <declaration name="newy" type="double" line="227"/>
                </scope>
            </method>
            <method name="drawRectangle" type="void" line="237">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="rx" type="double"/>
                    <param name="ry" type="double"/>
                    <param name="rw" type="double"/>
                    <param name="rh" type="double"/>
                    <param name="lw" type="double"/>
                </params>
                <declaration name="px" type="double" line="238"/>
                <declaration name="dx1" type="double" line="239"/>
                <declaration name="lw1" type="double" line="240"/>
                <declaration name="txform" type="AffineTransform" line="241"/>
                <scope line="254">
                    <declaration name="newx" type="double" line="255"/>
                    <declaration name="newy" type="double" line="256"/>
                </scope>
                <declaration name="len1" type="double" line="266"/>
                <declaration name="len2" type="double" line="267"/>
                <scope line="268"/>
                <scope line="271"/>
            </method>
            <javadoc line="275">
                This utility function handles the case where a drawRectangle
                  operation discovered that the interior hole in the rectangle
                  or parallelogram has been completely filled in by the stroke
                  width.  It calculates the outer parallelogram of the stroke
                  and issues a single fillParallelogram request to fill it.                
            </javadoc>
            <method name="fillOuterParallelogram" type="void" line="282">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="ux1" type="double"/>
                    <param name="uy1" type="double"/>
                    <param name="ux2" type="double"/>
                    <param name="uy2" type="double"/>
                    <param name="px" type="double"/>
                    <param name="py" type="double"/>
                    <param name="dx1" type="double"/>
                    <param name="dy1" type="double"/>
                    <param name="dx2" type="double"/>
                    <param name="dy2" type="double"/>
                    <param name="len1" type="double"/>
                    <param name="len2" type="double"/>
                    <param name="lw1" type="double"/>
                    <param name="lw2" type="double"/>
                </params>
                <declaration name="udx1" type="double" line="283"/>
                <declaration name="udy1" type="double" line="284"/>
                <declaration name="udx2" type="double" line="285"/>
                <declaration name="udy2" type="double" line="286"/>
                <scope line="287">
                    <scope line="288"/>
                </scope>
                <scope line="295"/>
            </method>
        </class>
    </source>