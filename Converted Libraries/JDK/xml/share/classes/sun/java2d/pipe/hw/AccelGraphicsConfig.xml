<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.pipe.hw">
        <import package="java.awt.image.VolatileImage"/>
        <interface name="AccelGraphicsConfig">
            <implements interface="BufferedContextProvider"/>
            <javadoc line="30">
                Implementors of this interface provida a way to create a{@code VolatileImage} whose destination surface is an{@link AccelSurface} of specified type.                
                <see>
                    AccelSurface                    
                </see>
            </javadoc>
            <method name="createCompatibleVolatileImage" type="VolatileImage" line="38"/>
            <javadoc line="38">
                Returns a VolatileImage with specified width, height, transparency
                  and guaranteed accelerated surface type. If such image can not be created
                  (out of vram error, specific surface type is not supported) null
                  is returned.
                  Note: if {@link AccelSurface#TEXTURE} type is requested, rendering
                  to the image will be denied by throwing{@code UnsupportedOperationException }from {@link java.awt.image.VolatileImage#getGraphics} and{@link java.awt.image.VolatileImage#createGraphics}                
                <param>
                    width the width of the returned {@code VolatileImage}                    
                </param>
                <param>
                    height the height of the returned {@code VolatileImage}                    
                </param>
                <param>
                    transparency the specified transparency mode                    
                </param>
                <param>
                    type requested accelerated surface type as specified by constants
                      in AccelSurface interface                    
                </param>
                <return>
                    a {@code VolatileImage} backed up by requested accelerated
                      surface type or null                    
                </return>
                <throws>
                    IllegalArgumentException if the transparency is not a valid value                    
                </throws>
                <see>
                    AccelSurface#TEXTURE                    
                </see>
                <see>
                    AccelSurface#RT_PLAIN                    
                </see>
                <see>
                    AccelSurface#RT_TEXTURE                    
                </see>
            </javadoc>
            <method name="getContextCapabilities" type="ContextCapabilities" line="65"/>
            <javadoc line="65">
                Returns object representing capabilities of the context associated
                  with this {@code AccelGraphicsConfig}.                
                <return>
                    ContextCapabilities object representing caps                    
                </return>
                <see>
                    ContextCapabilities                    
                </see>
            </javadoc>
            <method name="addDeviceEventListener" type="void" line="74"/>
            <javadoc line="74">
                Adds an {@code AccelDeviceEventListener} to listen to accelerated
                  device&apos;s (which is associated with this {@code AccelGraphicsConfig})
                  events.
                  Note: a hard link to the listener may be kept so it must be explicitly
                  removed via {@link #removeDeviceEventListener()}.                
                <param>
                    l the listener                    
                </param>
                <see>
                    AccelDeviceEventListener                    
                </see>
            </javadoc>
            <method name="removeDeviceEventListener" type="void" line="87"/>
            <javadoc line="87">
                Removes an {@code AccelDeviceEventListener} from the list of listeners
                  for this device&apos;s events.                
                <param>
                    l the listener                    
                </param>
                <see>
                    AccelDeviceEventListener                    
                </see>
            </javadoc>
        </interface>
    </source>