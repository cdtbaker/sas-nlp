<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.pipe.hw">
        <import package="java.util.Collections"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.Map"/>
        <import package="java.util.Set"/>
        <class name="AccelDeviceEventNotifier" line="7">
            <javadoc line="7">
                This class is used to notify listeners about accelerated device&apos;s
                  events such as device reset or dispose that are about to occur.                
            </javadoc>
            <declaration name="theInstance" type="AccelDeviceEventNotifier" line="12"/>
            <declaration name="DEVICE_RESET" type="int" line="13"/>
            <javadoc line="13">
                A device is about to be reset. The listeners have to release all
                  resources associated with the device which are required for the device
                  to be reset.                
            </javadoc>
            <declaration name="DEVICE_DISPOSED" type="int" line="19"/>
            <javadoc line="19">
                A device is about to be disposed. The listeners have to release all
                  resources associated with the device.                
            </javadoc>
            <declaration name="listeners" type="Map&lt;AccelDeviceEventListener,Integer&gt;" line="24"/>
            <method name="AccelDeviceEventNotifier" type="constructor" line="25"/>
            <javadoc line="28">
                Returns a singleton of AccelDeviceEventNotifier if it exists. If the
                  passed boolean is false and singleton doesn&apos;t exist yet, null is
                  returned. If the passed boolean is {@code true} and singleton doesn&apos;t
                  exist it will be created and returned.                
                <param>
                    create whether to create a singleton instance if doesn't yet
                      exist                    
                </param>
                <return>
                    a singleton instance or null                    
                </return>
            </javadoc>
            <method name="getInstance" type="AccelDeviceEventNotifier" line="37">
                <params>
                    <param name="create" type="boolean"/>
                </params>
                <scope line="38"/>
            </method>
            <javadoc line="43">
                Called to indicate that a device event had occured.
                  If a singleton exists, the listeners (those associated with
                  the device) will be notified.                
                <param>
                    screen a screen number of the device which is a source of
                      the event                    
                </param>
                <param>
                    eventType a type of the event                    
                </param>
                <see>
                    #DEVICE_DISPOSED                    
                </see>
                <see>
                    #DEVICE_RESET                    
                </see>
            </javadoc>
            <method name="eventOccured" type="void" line="53">
                <params>
                    <param name="screen" type="int"/>
                    <param name="eventType" type="int"/>
                </params>
                <declaration name="notifier" type="AccelDeviceEventNotifier" line="54"/>
                <scope line="55"/>
            </method>
            <javadoc line="59">
                Adds the listener associated with a device on particular screen.
                  Note: the listener must be removed as otherwise it will forever
                  be referenced by the notifier.                
                <param>
                    l the listener                    
                </param>
                <param>
                    screen the screen number indicating which device the listener is
                      interested in.                    
                </param>
            </javadoc>
            <method name="addListener" type="void" line="67">
                <params>
                    <param name="l" type="AccelDeviceEventListener"/>
                    <param name="screen" type="int"/>
                </params>
            </method>
            <javadoc line="70">
                Removes the listener.                
                <param>
                    l the listener                    
                </param>
            </javadoc>
            <method name="removeListener" type="void" line="74">
                <params>
                    <param name="l" type="AccelDeviceEventListener"/>
                </params>
            </method>
            <method name="add" type="void" line="77">
                <params>
                    <param name="theListener" type="AccelDeviceEventListener"/>
                    <param name="screen" type="int"/>
                </params>
            </method>
            <method name="remove" type="void" line="80">
                <params>
                    <param name="theListener" type="AccelDeviceEventListener"/>
                </params>
            </method>
            <javadoc line="83">
                Notifies the listeners associated with the screen&apos;s device about the
                  event.
                  Implementation note: the current list of listeners is first duplicated
                  which allows the listeners to remove themselves during the iteration.                
                <param>
                    screen a screen number with which the device which is a source of
                      the event is associated with                    
                </param>
                <param>
                    eventType a type of the event                    
                </param>
                <see>
                    #DEVICE_DISPOSED                    
                </see>
                <see>
                    #DEVICE_RESET                    
                </see>
            </javadoc>
            <method name="notifyListeners" type="void" line="94">
                <params>
                    <param name="deviceEventType" type="int"/>
                    <param name="screen" type="int"/>
                </params>
                <declaration name="listClone" type="HashMap&lt;AccelDeviceEventListener,Integer&gt;" line="95"/>
                <declaration name="cloneSet" type="Set&lt;AccelDeviceEventListener&gt;" line="96"/>
                <scope line="97"/>
                <declaration name="itr" type="Iterator&lt;AccelDeviceEventListener&gt;" line="101"/>
                <scope line="102">
                    <declaration name="current" type="AccelDeviceEventListener" line="103"/>
                    <declaration name="i" type="Integer" line="104"/>
                    <scope line="105"/>
                    <scope line="108"/>
                    <scope line="111"/>
                </scope>
            </method>
        </class>
    </source>