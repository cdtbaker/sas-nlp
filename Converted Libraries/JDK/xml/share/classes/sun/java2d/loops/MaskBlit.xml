<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.loops">
        <import package="java.awt.Composite"/>
        <import package="java.lang.ref.WeakReference"/>
        <import package="sun.java2d.loops.GraphicsPrimitive"/>
        <import package="sun.java2d.SurfaceData"/>
        <import package="sun.java2d.pipe.Region"/>
        <class name="MaskBlit" line="34">
            <extends class="GraphicsPrimitive"/>
            <javadoc line="34">
                MaskBlit
                  1) copies rectangle of pixels from one surface to another
                  2) performs compositing of colors based upon a Composite
                  parameter
                  3) blends result of composite with destination using an
                  alpha coverage mask
                  4) the mask may be null in which case it should be treated
                  as if it were an array of all opaque values (0xff)
                  precise behavior is undefined if the source surface
                  and the destination surface are the same surface
                  with overlapping regions of pixels                
            </javadoc>
            <declaration name="methodSignature" type="String" line="51"/>
            <declaration name="primTypeID" type="int" line="53"/>
            <declaration name="blitcache" type="RenderCache" line="55"/>
            <method name="locate" type="MaskBlit" line="60">
                <params>
                    <param name="srctype" type="SurfaceType"/>
                    <param name="comptype" type="CompositeType"/>
                    <param name="dsttype" type="SurfaceType"/>
                </params>
            </method>
            <method name="getFromCache" type="MaskBlit" line="69">
                <params>
                    <param name="src" type="SurfaceType"/>
                    <param name="comp" type="CompositeType"/>
                    <param name="dst" type="SurfaceType"/>
                </params>
                <declaration name="o" type="Object" line="70"/>
                <scope line="71"/>
                <declaration name="blit" type="MaskBlit" line="74"/>
                <scope line="75"/>
                <scope line="80"/>
            </method>
            <method name="MaskBlit" type="constructor" line="89">
                <params>
                    <param name="srctype" type="SurfaceType"/>
                    <param name="comptype" type="CompositeType"/>
                    <param name="dsttype" type="SurfaceType"/>
                </params>
            </method>
            <method name="MaskBlit" type="constructor" line="97">
                <params>
                    <param name="pNativePrim" type="long"/>
                    <param name="srctype" type="SurfaceType"/>
                    <param name="comptype" type="CompositeType"/>
                    <param name="dsttype" type="SurfaceType"/>
                </params>
            </method>
            <method name="MaskBlit" type="void" line="101"/>
            <javadoc line="101">
                All MaskBlit implementors must have this invoker method                
            </javadoc>
            <scope line="111"/>
            <method name="makePrimitive" type="GraphicsPrimitive" line="118">
                <params>
                    <param name="srctype" type="SurfaceType"/>
                    <param name="comptype" type="CompositeType"/>
                    <param name="dsttype" type="SurfaceType"/>
                </params>
                <comment line="119">
                    new Throwable().printStackTrace();
                    System.out.println(&quot;Constructing general maskblit for:&quot;);
                    System.out.println(&quot;src:  &quot;+srctype);
                    System.out.println(&quot;comp: &quot;+comptype);
                    System.out.println(&quot;dst:  &quot;+dsttype);                    
                </comment>
                <scope line="127"/>
                <declaration name="ob" type="General" line="132"/>
            </method>
            <class name="General" line="137">
                <extends class="MaskBlit"/>
                <implements interface="GeneralBinaryOp"/>
                <declaration name="convertsrc" type="Blit" line="141"/>
                <declaration name="convertdst" type="Blit" line="142"/>
                <declaration name="performop" type="MaskBlit" line="143"/>
                <declaration name="convertresult" type="Blit" line="144"/>
                <declaration name="srcTmp" type="WeakReference" line="146"/>
                <declaration name="dstTmp" type="WeakReference" line="147"/>
                <method name="General" type="constructor" line="152">
                    <params>
                        <param name="srctype" type="SurfaceType"/>
                        <param name="comptype" type="CompositeType"/>
                        <param name="dsttype" type="SurfaceType"/>
                    </params>
                </method>
                <method name="setPrimitives" type="void" line="160">
                    <params>
                        <param name="srcconverter" type="Blit"/>
                        <param name="dstconverter" type="Blit"/>
                        <param name="genericop" type="GraphicsPrimitive"/>
                        <param name="resconverter" type="Blit"/>
                    </params>
                </method>
                <method name="MaskBlit" type="void" line="175">
                    <params>
                        <param name="srcData" type="SurfaceData"/>
                        <param name="dstData" type="SurfaceData"/>
                        <param name="comp" type="Composite"/>
                        <param name="clip" type="Region"/>
                        <param name="srcx" type="int"/>
                        <param name="srcy" type="int"/>
                        <param name="dstx" type="int"/>
                        <param name="dsty" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                        <param name="mask" type="byte"/>
                        <param name="offset" type="int"/>
                        <param name="scan" type="int"/>
                    </params>
                    <comment line="204">
                        assert: convertresult != null                        
                    </comment>
                    <comment line="224">
                        assert: convertdst != null                        
                    </comment>
                    <declaration name="src" type="SurfaceData" line="176"/>
                    <declaration name="opclip" type="Region" line="177"/>
                    <declaration name="sx" type="int" line="178"/>
                    <scope line="180"/>
                    <scope line="184">
                        <declaration name="cachedSrc" type="SurfaceData" line="185"/>
                        <scope line="186"/>
                        <scope line="193"/>
                    </scope>
                    <scope line="198"/>
                    <scope line="203">
                        <declaration name="cachedDst" type="SurfaceData" line="205"/>
                        <scope line="206"/>
                        <scope line="214"/>
                    </scope>
                    <scope line="223"/>
                </method>
            </class>
            <method name="traceWrap" type="GraphicsPrimitive" line="231"/>
            <class name="TraceMaskBlit" line="235">
                <extends class="MaskBlit"/>
                <declaration name="target" type="MaskBlit" line="236"/>
                <method name="TraceMaskBlit" type="constructor" line="238">
                    <params>
                        <param name="target" type="MaskBlit"/>
                    </params>
                    <comment line="239">
                        We need to have the same NativePrim as our                        
                    </comment>
                    <comment line="240">
                        target in case we are used with a TransformHelper                        
                    </comment>
                </method>
                <method name="traceWrap" type="GraphicsPrimitive" line="248"/>
                <method name="MaskBlit" type="void" line="257">
                    <params>
                        <param name="src" type="SurfaceData"/>
                        <param name="dst" type="SurfaceData"/>
                        <param name="comp" type="Composite"/>
                        <param name="clip" type="Region"/>
                        <param name="srcx" type="int"/>
                        <param name="srcy" type="int"/>
                        <param name="dstx" type="int"/>
                        <param name="dsty" type="int"/>
                        <param name="width" type="int"/>
                        <param name="height" type="int"/>
                        <param name="mask" type="byte[]"/>
                        <param name="maskoff" type="int"/>
                        <param name="maskscan" type="int"/>
                    </params>
                </method>
            </class>
        </class>
    </source>