<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.loops">
        <import package="java.awt.image.WritableRaster"/>
        <import package="java.awt.image.DataBuffer"/>
        <import package="java.awt.image.ColorModel"/>
        <import package="java.awt.geom.Path2D"/>
        <import package="java.awt.geom.PathIterator"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="sun.java2d.pipe.Region"/>
        <import package="sun.java2d.pipe.SpanIterator"/>
        <import package="sun.java2d.SunGraphics2D"/>
        <import package="sun.java2d.SurfaceData"/>
        <import package="sun.java2d.loops.ProcessPath"/>
        <import package="sun.font.GlyphList"/>
        <class name="GeneralRenderer" line="14">
            <javadoc line="14">
                GeneralRenderer collection
                  Basically, a collection of components which permit basic
                  rendering to occur on rasters of any format                
            </javadoc>
            <method name="register" type="void" line="20">
                <declaration name="owner" type="Class" line="21"/>
                <declaration name="primitives" type="GraphicsPrimitive[]" line="22"/>
            </method>
            <method name="doDrawPoly" type="void" line="25">
                <params>
                    <param name="sData" type="SurfaceData"/>
                    <param name="pw" type="PixelWriter"/>
                    <param name="xPoints" type="int"/>
                    <param name="yPoints" type="int"/>
                    <param name="off" type="int"/>
                    <param name="nPoints" type="int"/>
                    <param name="clip" type="Region"/>
                    <param name="transx" type="int"/>
                    <param name="transy" type="int"/>
                    <param name="close" type="boolean"/>
                </params>
                <declaration name="mx" type="int" line="26"/>
                <declaration name="tmp" type="int[]" line="27"/>
                <scope line="28"/>
                <scope line="33">
                    <declaration name="x2" type="int" line="35"/>
                    <declaration name="y2" type="int" line="36"/>
                </scope>
                <scope line="41"/>
            </method>
            <method name="doSetRect" type="void" line="45">
                <params>
                    <param name="sData" type="SurfaceData"/>
                    <param name="pw" type="PixelWriter"/>
                    <param name="x1" type="int"/>
                    <param name="y1" type="int"/>
                    <param name="x2" type="int"/>
                    <param name="y2" type="int"/>
                </params>
                <declaration name="dstRast" type="WritableRaster" line="46"/>
                <scope line="48">
                    <scope line="49"/>
                </scope>
            </method>
            <method name="doDrawLine" type="int[]" line="55">
                <params>
                    <param name="sData" type="SurfaceData"/>
                    <param name="pw" type="PixelWriter"/>
                    <param name="boundPts" type="int[]"/>
                    <param name="clip" type="Region"/>
                    <param name="origx1" type="int"/>
                    <param name="origy1" type="int"/>
                    <param name="origx2" type="int"/>
                    <param name="origy2" type="int"/>
                </params>
                <scope line="56"/>
                <scope line="63"/>
                <declaration name="x1" type="int" line="66"/>
                <declaration name="y1" type="int" line="67"/>
                <declaration name="x2" type="int" line="68"/>
                <declaration name="y2" type="int" line="69"/>
                <declaration name="dstRast" type="WritableRaster" line="70"/>
                <scope line="72">
                    <scope line="73">
                        <scope line="74"/>
                    </scope>
                    <scope line="80">
                        <scope line="81"/>
                    </scope>
                </scope>
                <scope line="88">
                    <scope line="89">
                        <scope line="90"/>
                    </scope>
                    <scope line="96">
                        <scope line="97"/>
                    </scope>
                </scope>
                <scope line="104">
                    <declaration name="dx" type="int" line="105"/>
                    <declaration name="dy" type="int" line="106"/>
                    <declaration name="ax" type="int" line="107"/>
                    <declaration name="ay" type="int" line="108"/>
                    <declaration name="steps" type="int" line="109"/>
                    <declaration name="bumpmajor" type="int" line="110"/>
                    <declaration name="bumpminor" type="int" line="111"/>
                    <declaration name="errminor" type="int" line="112"/>
                    <declaration name="errmajor" type="int" line="113"/>
                    <declaration name="error" type="int" line="114"/>
                    <declaration name="xmajor" type="boolean" line="115"/>
                    <scope line="116"/>
                    <scope line="125"/>
                    <scope line="135">
                        <declaration name="ysteps" type="int" line="136"/>
                        <scope line="137"/>
                    </scope>
                    <scope line="142">
                        <declaration name="xsteps" type="int" line="143"/>
                        <scope line="144"/>
                    </scope>
                    <scope line="149"/>
                    <scope line="152">
                        <scope line="153">
                            <scope line="157"/>
                        </scope>
                    </scope>
                    <scope line="164">
                        <scope line="165">
                            <scope line="169"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="doDrawRect" type="void" line="179">
                <params>
                    <param name="pw" type="PixelWriter"/>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="sData" type="SurfaceData"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <scope line="180"/>
                <declaration name="x2" type="int" line="183"/>
                <declaration name="y2" type="int" line="184"/>
                <declaration name="r" type="Region" line="185"/>
                <scope line="186"/>
                <declaration name="cx1" type="int" line="189"/>
                <declaration name="cy1" type="int" line="190"/>
                <declaration name="cx2" type="int" line="191"/>
                <declaration name="cy2" type="int" line="192"/>
                <scope line="193"/>
                <scope line="197"/>
                <scope line="200"/>
                <scope line="203"/>
                <scope line="206"/>
            </method>
            <method name="doDrawGlyphList" type="void" line="210">
                <params>
                    <param name="sData" type="SurfaceData"/>
                    <param name="pw" type="PixelWriter"/>
                    <param name="gl" type="GlyphList"/>
                    <param name="clip" type="Region"/>
                </params>
                <declaration name="bounds" type="int[]" line="211"/>
                <declaration name="cx1" type="int" line="213"/>
                <declaration name="cy1" type="int" line="214"/>
                <declaration name="cx2" type="int" line="215"/>
                <declaration name="cy2" type="int" line="216"/>
                <declaration name="dstRast" type="WritableRaster" line="217"/>
                <declaration name="num" type="int" line="219"/>
                <scope line="220">
                    <declaration name="metrics" type="int" line="222"/>
                    <declaration name="gx1" type="int" line="223"/>
                    <declaration name="gy1" type="int" line="224"/>
                    <declaration name="w" type="int" line="225"/>
                    <declaration name="gx2" type="int" line="226"/>
                    <declaration name="gy2" type="int" line="227"/>
                    <declaration name="off" type="int" line="228"/>
                    <scope line="229"/>
                    <scope line="233"/>
                    <scope line="239">
                        <declaration name="alpha" type="byte" line="240"/>
                        <scope line="242">
                            <scope line="243">
                                <scope line="244"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <declaration name="OUTCODE_TOP" type="int" line="253"/>
            <declaration name="OUTCODE_BOTTOM" type="int" line="254"/>
            <declaration name="OUTCODE_LEFT" type="int" line="255"/>
            <declaration name="OUTCODE_RIGHT" type="int" line="256"/>
            <method name="outcode" type="int" line="257">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="xmin" type="int"/>
                    <param name="ymin" type="int"/>
                    <param name="xmax" type="int"/>
                    <param name="ymax" type="int"/>
                </params>
                <declaration name="code" type="int" line="258"/>
                <scope line="259"/>
                <scope line="262"/>
                <scope line="265"/>
                <scope line="268"/>
                <scope line="271"/>
            </method>
            <method name="adjustLine" type="boolean" line="276">
                <params>
                    <param name="boundPts" type="int[]"/>
                    <param name="cxmin" type="int"/>
                    <param name="cymin" type="int"/>
                    <param name="cx2" type="int"/>
                    <param name="cy2" type="int"/>
                </params>
                <declaration name="cxmax" type="int" line="277"/>
                <declaration name="cymax" type="int" line="278"/>
                <declaration name="x1" type="int" line="279"/>
                <declaration name="y1" type="int" line="280"/>
                <declaration name="x2" type="int" line="281"/>
                <declaration name="y2" type="int" line="282"/>
                <scope line="283"/>
                <scope line="286">
                    <scope line="287"/>
                    <scope line="290">
                        <declaration name="t" type="int" line="291"/>
                    </scope>
                    <scope line="295"/>
                    <scope line="298"/>
                    <scope line="301"/>
                </scope>
                <scope line="307">
                    <scope line="308"/>
                    <scope line="311">
                        <declaration name="t" type="int" line="312"/>
                    </scope>
                    <scope line="316"/>
                    <scope line="319"/>
                    <scope line="322"/>
                </scope>
                <scope line="328">
                    <declaration name="outcode1" type="int" line="329"/>
                    <declaration name="dx" type="int" line="330"/>
                    <declaration name="dy" type="int" line="331"/>
                    <declaration name="ax" type="int" line="332"/>
                    <declaration name="ay" type="int" line="333"/>
                    <declaration name="xmajor" type="boolean" line="334"/>
                    <scope line="337">
                        <declaration name="xsteps" type="int" line="338"/>
                        <scope line="339"/>
                        <scope line="342">
                            <scope line="343">
                                <scope line="344"/>
                                <scope line="347"/>
                                <scope line="351"/>
                                <scope line="355"/>
                                <scope line="359"/>
                            </scope>
                            <scope line="364">
                                <scope line="365"/>
                                <scope line="368"/>
                                <scope line="372"/>
                                <scope line="376"/>
                                <scope line="380"/>
                            </scope>
                        </scope>
                        <scope line="387">
                            <scope line="388">
                                <scope line="389"/>
                                <scope line="392"/>
                                <scope line="396"/>
                                <scope line="400"/>
                                <scope line="403"/>
                                <scope line="407"/>
                            </scope>
                            <scope line="412">
                                <scope line="413"/>
                                <scope line="416"/>
                                <scope line="420"/>
                                <scope line="424"/>
                                <scope line="427"/>
                                <scope line="431"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="createSolidPixelWriter" type="PixelWriter" line="450">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="sData" type="SurfaceData"/>
                </params>
                <declaration name="dstCM" type="ColorModel" line="451"/>
                <declaration name="srcPixel" type="Object" line="452"/>
            </method>
            <method name="createXorPixelWriter" type="PixelWriter" line="455">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="sData" type="SurfaceData"/>
                </params>
                <declaration name="dstCM" type="ColorModel" line="456"/>
                <declaration name="srcPixel" type="Object" line="457"/>
                <declaration name="comp" type="XORComposite" line="458"/>
                <declaration name="xorrgb" type="int" line="459"/>
                <declaration name="xorPixel" type="Object" line="460"/>
            </method>
        </class>
        <class name="SetFillRectANY" line="478">
            <extends class="FillRect"/>
            <method name="SetFillRectANY" type="constructor" line="479"/>
            <method name="FillRect" type="void" line="482">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="sData" type="SurfaceData"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="pw" type="PixelWriter" line="483"/>
                <declaration name="r" type="Region" line="484"/>
            </method>
        </class>
        <class name="PixelWriterDrawHandler" line="488">
            <extends class="ProcessPath.DrawHandler"/>
            <declaration name="pw" type="PixelWriter" line="489"/>
            <declaration name="sData" type="SurfaceData" line="490"/>
            <declaration name="clip" type="Region" line="491"/>
            <method name="PixelWriterDrawHandler" type="constructor" line="492">
                <params>
                    <param name="sData" type="SurfaceData"/>
                    <param name="pw" type="PixelWriter"/>
                    <param name="clip" type="Region"/>
                    <param name="strokeHint" type="int"/>
                </params>
            </method>
            <method name="drawLine" type="void" line="498">
                <params>
                    <param name="x0" type="int"/>
                    <param name="y0" type="int"/>
                    <param name="x1" type="int"/>
                    <param name="y1" type="int"/>
                </params>
            </method>
            <method name="drawPixel" type="void" line="501">
                <params>
                    <param name="x0" type="int"/>
                    <param name="y0" type="int"/>
                </params>
            </method>
            <method name="drawScanline" type="void" line="504">
                <params>
                    <param name="x0" type="int"/>
                    <param name="x1" type="int"/>
                    <param name="y0" type="int"/>
                </params>
            </method>
        </class>
        <class name="SetFillPathANY" line="508">
            <extends class="FillPath"/>
            <method name="SetFillPathANY" type="constructor" line="509"/>
            <method name="FillPath" type="void" line="512">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="sData" type="SurfaceData"/>
                    <param name="transx" type="int"/>
                    <param name="transy" type="int"/>
                    <param name="p2df" type="Path2D.Float"/>
                </params>
                <declaration name="pw" type="PixelWriter" line="513"/>
            </method>
        </class>
        <class name="SetFillSpansANY" line="517">
            <extends class="FillSpans"/>
            <method name="SetFillSpansANY" type="constructor" line="518"/>
            <method name="FillSpans" type="void" line="521">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="sData" type="SurfaceData"/>
                    <param name="si" type="SpanIterator"/>
                </params>
                <declaration name="pw" type="PixelWriter" line="522"/>
                <declaration name="span" type="int" line="523"/>
                <scope line="524"/>
            </method>
        </class>
        <class name="SetDrawLineANY" line="529">
            <extends class="DrawLine"/>
            <method name="SetDrawLineANY" type="constructor" line="530"/>
            <method name="DrawLine" type="void" line="533">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="sData" type="SurfaceData"/>
                    <param name="x1" type="int"/>
                    <param name="y1" type="int"/>
                    <param name="x2" type="int"/>
                    <param name="y2" type="int"/>
                </params>
                <declaration name="pw" type="PixelWriter" line="534"/>
                <scope line="535"/>
                <scope line="538"/>
            </method>
        </class>
        <class name="SetDrawPolygonsANY" line="543">
            <extends class="DrawPolygons"/>
            <method name="SetDrawPolygonsANY" type="constructor" line="544"/>
            <method name="DrawPolygons" type="void" line="547">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="sData" type="SurfaceData"/>
                    <param name="xPoints" type="int"/>
                    <param name="yPoints" type="int"/>
                    <param name="nPoints" type="int"/>
                    <param name="numPolys" type="int"/>
                    <param name="transx" type="int"/>
                    <param name="transy" type="int"/>
                    <param name="close" type="boolean"/>
                </params>
                <declaration name="pw" type="PixelWriter" line="548"/>
                <declaration name="off" type="int" line="549"/>
                <declaration name="clip" type="Region" line="550"/>
                <scope line="551">
                    <declaration name="numpts" type="int" line="552"/>
                </scope>
            </method>
        </class>
        <class name="SetDrawPathANY" line="558">
            <extends class="DrawPath"/>
            <method name="SetDrawPathANY" type="constructor" line="559"/>
            <method name="DrawPath" type="void" line="562">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="sData" type="SurfaceData"/>
                    <param name="transx" type="int"/>
                    <param name="transy" type="int"/>
                    <param name="p2df" type="Path2D.Float"/>
                </params>
                <declaration name="pw" type="PixelWriter" line="563"/>
            </method>
        </class>
        <class name="SetDrawRectANY" line="567">
            <extends class="DrawRect"/>
            <method name="SetDrawRectANY" type="constructor" line="568"/>
            <method name="DrawRect" type="void" line="571">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="sData" type="SurfaceData"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="pw" type="PixelWriter" line="572"/>
            </method>
        </class>
        <class name="XorFillRectANY" line="576">
            <extends class="FillRect"/>
            <method name="XorFillRectANY" type="constructor" line="577"/>
            <method name="FillRect" type="void" line="580">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="sData" type="SurfaceData"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="pw" type="PixelWriter" line="581"/>
                <declaration name="r" type="Region" line="582"/>
            </method>
        </class>
        <class name="XorFillPathANY" line="586">
            <extends class="FillPath"/>
            <method name="XorFillPathANY" type="constructor" line="587"/>
            <method name="FillPath" type="void" line="590">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="sData" type="SurfaceData"/>
                    <param name="transx" type="int"/>
                    <param name="transy" type="int"/>
                    <param name="p2df" type="Path2D.Float"/>
                </params>
                <declaration name="pw" type="PixelWriter" line="591"/>
            </method>
        </class>
        <class name="XorFillSpansANY" line="595">
            <extends class="FillSpans"/>
            <method name="XorFillSpansANY" type="constructor" line="596"/>
            <method name="FillSpans" type="void" line="599">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="sData" type="SurfaceData"/>
                    <param name="si" type="SpanIterator"/>
                </params>
                <declaration name="pw" type="PixelWriter" line="600"/>
                <declaration name="span" type="int" line="601"/>
                <scope line="602"/>
            </method>
        </class>
        <class name="XorDrawLineANY" line="607">
            <extends class="DrawLine"/>
            <method name="XorDrawLineANY" type="constructor" line="608"/>
            <method name="DrawLine" type="void" line="611">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="sData" type="SurfaceData"/>
                    <param name="x1" type="int"/>
                    <param name="y1" type="int"/>
                    <param name="x2" type="int"/>
                    <param name="y2" type="int"/>
                </params>
                <declaration name="pw" type="PixelWriter" line="612"/>
                <scope line="613"/>
                <scope line="616"/>
            </method>
        </class>
        <class name="XorDrawPolygonsANY" line="621">
            <extends class="DrawPolygons"/>
            <method name="XorDrawPolygonsANY" type="constructor" line="622"/>
            <method name="DrawPolygons" type="void" line="625">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="sData" type="SurfaceData"/>
                    <param name="xPoints" type="int"/>
                    <param name="yPoints" type="int"/>
                    <param name="nPoints" type="int"/>
                    <param name="numPolys" type="int"/>
                    <param name="transx" type="int"/>
                    <param name="transy" type="int"/>
                    <param name="close" type="boolean"/>
                </params>
                <declaration name="pw" type="PixelWriter" line="626"/>
                <declaration name="off" type="int" line="627"/>
                <declaration name="clip" type="Region" line="628"/>
                <scope line="629">
                    <declaration name="numpts" type="int" line="630"/>
                </scope>
            </method>
        </class>
        <class name="XorDrawPathANY" line="636">
            <extends class="DrawPath"/>
            <method name="XorDrawPathANY" type="constructor" line="637"/>
            <method name="DrawPath" type="void" line="640">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="sData" type="SurfaceData"/>
                    <param name="transx" type="int"/>
                    <param name="transy" type="int"/>
                    <param name="p2df" type="Path2D.Float"/>
                </params>
                <declaration name="pw" type="PixelWriter" line="641"/>
            </method>
        </class>
        <class name="XorDrawRectANY" line="645">
            <extends class="DrawRect"/>
            <method name="XorDrawRectANY" type="constructor" line="646"/>
            <method name="DrawRect" type="void" line="649">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="sData" type="SurfaceData"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="pw" type="PixelWriter" line="650"/>
            </method>
        </class>
        <class name="XorDrawGlyphListANY" line="654">
            <extends class="DrawGlyphList"/>
            <method name="XorDrawGlyphListANY" type="constructor" line="655"/>
            <method name="DrawGlyphList" type="void" line="658">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="sData" type="SurfaceData"/>
                    <param name="gl" type="GlyphList"/>
                </params>
                <declaration name="pw" type="PixelWriter" line="659"/>
            </method>
        </class>
        <class name="XorDrawGlyphListAAANY" line="663">
            <extends class="DrawGlyphListAA"/>
            <method name="XorDrawGlyphListAAANY" type="constructor" line="664"/>
            <method name="DrawGlyphListAA" type="void" line="667">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                    <param name="sData" type="SurfaceData"/>
                    <param name="gl" type="GlyphList"/>
                </params>
                <declaration name="pw" type="PixelWriter" line="668"/>
            </method>
        </class>
        <class name="PixelWriter" line="672">
            <declaration name="dstRast" type="WritableRaster" line="673"/>
            <method name="setRaster" type="void" line="674">
                <params>
                    <param name="dstRast" type="WritableRaster"/>
                </params>
            </method>
            <method name="writePixel" type="void" line="677"/>
        </class>
        <class name="SolidPixelWriter" line="679">
            <extends class="PixelWriter"/>
            <declaration name="srcData" type="Object" line="680"/>
            <method name="SolidPixelWriter" type="constructor" line="681">
                <params>
                    <param name="srcPixel" type="Object"/>
                </params>
            </method>
            <method name="writePixel" type="void" line="684">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
            </method>
        </class>
        <class name="XorPixelWriter" line="688">
            <extends class="PixelWriter"/>
            <declaration name="dstCM" type="ColorModel" line="689"/>
            <method name="writePixel" type="void" line="690">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <declaration name="dstPixel" type="Object" line="691"/>
            </method>
            <method name="xorPixel" type="void" line="695"/>
            <class name="ByteData" line="696">
                <extends class="XorPixelWriter"/>
                <declaration name="xorData" type="byte[]" line="697"/>
                <method name="ByteData" type="constructor" line="698">
                    <params>
                        <param name="srcPixel" type="Object"/>
                        <param name="xorPixel" type="Object"/>
                    </params>
                </method>
                <method name="xorPixel" type="void" line="703">
                    <params>
                        <param name="pixData" type="Object"/>
                    </params>
                    <declaration name="dstData" type="byte[]" line="704"/>
                    <scope line="705"/>
                </method>
            </class>
            <class name="ShortData" line="710">
                <extends class="XorPixelWriter"/>
                <declaration name="xorData" type="short[]" line="711"/>
                <method name="ShortData" type="constructor" line="712">
                    <params>
                        <param name="srcPixel" type="Object"/>
                        <param name="xorPixel" type="Object"/>
                    </params>
                </method>
                <method name="xorPixel" type="void" line="717">
                    <params>
                        <param name="pixData" type="Object"/>
                    </params>
                    <declaration name="dstData" type="short[]" line="718"/>
                    <scope line="719"/>
                </method>
            </class>
            <class name="IntData" line="724">
                <extends class="XorPixelWriter"/>
                <declaration name="xorData" type="int[]" line="725"/>
                <method name="IntData" type="constructor" line="726">
                    <params>
                        <param name="srcPixel" type="Object"/>
                        <param name="xorPixel" type="Object"/>
                    </params>
                </method>
                <method name="xorPixel" type="void" line="731">
                    <params>
                        <param name="pixData" type="Object"/>
                    </params>
                    <declaration name="dstData" type="int[]" line="732"/>
                    <scope line="733"/>
                </method>
            </class>
            <class name="FloatData" line="738">
                <extends class="XorPixelWriter"/>
                <declaration name="xorData" type="int[]" line="739"/>
                <method name="FloatData" type="constructor" line="740">
                    <params>
                        <param name="srcPixel" type="Object"/>
                        <param name="xorPixel" type="Object"/>
                    </params>
                    <declaration name="srcData" type="float[]" line="741"/>
                    <declaration name="xorData" type="float[]" line="742"/>
                    <scope line="744"/>
                </method>
                <method name="xorPixel" type="void" line="748">
                    <params>
                        <param name="pixData" type="Object"/>
                    </params>
                    <declaration name="dstData" type="float[]" line="749"/>
                    <scope line="750">
                        <declaration name="v" type="int" line="751"/>
                    </scope>
                </method>
            </class>
            <class name="DoubleData" line="756">
                <extends class="XorPixelWriter"/>
                <declaration name="xorData" type="long[]" line="757"/>
                <method name="DoubleData" type="constructor" line="758">
                    <params>
                        <param name="srcPixel" type="Object"/>
                        <param name="xorPixel" type="Object"/>
                    </params>
                    <declaration name="srcData" type="double[]" line="759"/>
                    <declaration name="xorData" type="double[]" line="760"/>
                    <scope line="762"/>
                </method>
                <method name="xorPixel" type="void" line="766">
                    <params>
                        <param name="pixData" type="Object"/>
                    </params>
                    <declaration name="dstData" type="double[]" line="767"/>
                    <scope line="768">
                        <declaration name="v" type="long" line="769"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>