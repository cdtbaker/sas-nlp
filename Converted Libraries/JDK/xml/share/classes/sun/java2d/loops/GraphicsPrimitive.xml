<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.loops">
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.awt.AlphaComposite"/>
        <import package="java.awt.Rectangle"/>
        <import package="sun.awt.image.BufImgSurfaceData"/>
        <import package="sun.java2d.SurfaceData"/>
        <import package="sun.java2d.pipe.Region"/>
        <import package="java.lang.reflect.Field"/>
        <import package="java.util.StringTokenizer"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Map"/>
        <import package="java.io.PrintStream"/>
        <import package="java.io.OutputStream"/>
        <import package="java.io.FileOutputStream"/>
        <import package="java.io.FileNotFoundException"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="sun.security.action.GetPropertyAction"/>
        <class name="GraphicsPrimitive" line="20">
            <javadoc line="20">
                defines interface for primitives which can be placed into
                  the graphic component manager framework                
            </javadoc>
            <interface name="GeneralBinaryOp">
                <method name="setPrimitives" type="void" line="26"/>
                <javadoc line="26">
                    This method allows the setupGeneralBinaryOp method to set
                      the converters into the General version of the Primitive.                    
                </javadoc>
                <method name="getSourceType" type="SurfaceType" line="31"/>
                <javadoc line="31">
                    These 4 methods are implemented automatically for any
                      GraphicsPrimitive.  They are used by setupGeneralBinaryOp
                      to retrieve the information needed to find the right
                      converter primitives.                    
                </javadoc>
                <method name="getCompositeType" type="CompositeType" line="38"/>
                <method name="getDestType" type="SurfaceType" line="39"/>
                <method name="getSignature" type="String" line="40"/>
                <method name="getPrimTypeID" type="int" line="41"/>
            </interface>
            <interface name="GeneralUnaryOp">
                <method name="setPrimitives" type="void" line="44"/>
                <javadoc line="44">
                    This method allows the setupGeneralUnaryOp method to set
                      the converters into the General version of the Primitive.                    
                </javadoc>
                <method name="getCompositeType" type="CompositeType" line="49"/>
                <javadoc line="49">
                    These 3 methods are implemented automatically for any
                      GraphicsPrimitive.  They are used by setupGeneralUnaryOp
                      to retrieve the information needed to find the right
                      converter primitives.                    
                </javadoc>
                <method name="getDestType" type="SurfaceType" line="56"/>
                <method name="getSignature" type="String" line="57"/>
                <method name="getPrimTypeID" type="int" line="58"/>
            </interface>
            <declaration name="methodSignature" type="String" line="60"/>
            <javadoc line="60">
                INSTANCE DATA MEMBERS DESCRIBING CHARACTERISTICS OF THIS PRIMITIVE                
            </javadoc>
            <declaration name="uniqueID" type="int" line="64"/>
            <declaration name="unusedPrimID" type="int" line="65"/>
            <declaration name="sourceType" type="SurfaceType" line="66"/>
            <declaration name="compositeType" type="CompositeType" line="67"/>
            <declaration name="destType" type="SurfaceType" line="68"/>
            <declaration name="pNativePrim" type="long" line="69"/>
            <method name="makePrimTypeID" type="int" line="70">
                <scope line="71"/>
            </method>
            <method name="makeUniqueID" type="int" line="76">
                <params>
                    <param name="primTypeID" type="int"/>
                    <param name="src" type="SurfaceType"/>
                    <param name="cmp" type="CompositeType"/>
                    <param name="dst" type="SurfaceType"/>
                </params>
            </method>
            <javadoc line="79">
                Create a new GraphicsPrimitive with all of the required
                  descriptive information.                
            </javadoc>
            <method name="GraphicsPrimitive" type="constructor" line="83">
                <params>
                    <param name="methodSignature" type="String"/>
                    <param name="primTypeID" type="int"/>
                    <param name="sourceType" type="SurfaceType"/>
                    <param name="compositeType" type="CompositeType"/>
                    <param name="destType" type="SurfaceType"/>
                </params>
                <scope line="88"/>
                <scope line="91"/>
            </method>
            <javadoc line="95">
                Create a new GraphicsPrimitive for native invocation
                  with all of the required descriptive information.                
            </javadoc>
            <method name="GraphicsPrimitive" type="constructor" line="99">
                <params>
                    <param name="pNativePrim" type="long"/>
                    <param name="methodSignature" type="String"/>
                    <param name="primTypeID" type="int"/>
                    <param name="sourceType" type="SurfaceType"/>
                    <param name="compositeType" type="CompositeType"/>
                    <param name="destType" type="SurfaceType"/>
                </params>
                <scope line="105"/>
                <scope line="108"/>
            </method>
            <javadoc line="112">
                Gets instance ID of this graphics primitive.
                  Instance ID is comprised of four distinct ids (ORed together)
                  that uniquely identify each instance of a GraphicsPrimitive
                  object. The four ids making up instance ID are:
                  1. primitive id - identifier shared by all primitives of the
                  same type (eg. all Blits have the same primitive id)
                  2. sourcetype id - identifies source surface type
                  3. desttype id - identifies destination surface type
                  4. compositetype id - identifies composite used                
                <return>
                    instance ID                    
                </return>
            </javadoc>
            <method name="getUniqueID" type="int" line="124"/>
            <javadoc line="127">
                                
            </javadoc>
            <method name="getSignature" type="String" line="129"/>
            <javadoc line="132">
                Gets unique id for this GraphicsPrimitive type.
                  This id is used to identify the TYPE of primitive (Blit vs. BlitBg)
                  as opposed to INSTANCE of primitive.                
                <return>
                    primitive ID                    
                </return>
            </javadoc>
            <method name="getPrimTypeID" type="int" line="138"/>
            <javadoc line="141">
                                
            </javadoc>
            <method name="getNativePrim" type="long" line="143"/>
            <javadoc line="146">
                                
            </javadoc>
            <method name="getSourceType" type="SurfaceType" line="148"/>
            <javadoc line="151">
                                
            </javadoc>
            <method name="getCompositeType" type="CompositeType" line="153"/>
            <javadoc line="156">
                                
            </javadoc>
            <method name="getDestType" type="SurfaceType" line="158"/>
            <javadoc line="161">
                Return true if this primitive can be used for the given signature
                  surfaces, and composite.                
                <param>
                    signature The signature of the given operation.  Must be
                      == (not just .equals) the signature string given by the
                      abstract class that declares the operation.                    
                </param>
                <param>
                    srctype The surface type for the source of the operation                    
                </param>
                <param>
                    comptype The composite type for the operation                    
                </param>
                <param>
                    dsttype The surface type for the destination of the operation                    
                </param>
            </javadoc>
            <method name="satisfies" type="boolean" line="171">
                <params>
                    <param name="signature" type="String"/>
                    <param name="srctype" type="SurfaceType"/>
                    <param name="comptype" type="CompositeType"/>
                    <param name="dsttype" type="SurfaceType"/>
                </params>
                <scope line="172"/>
                <scope line="175">
                    <scope line="176"/>
                    <scope line="179"/>
                </scope>
                <scope line="184">
                    <scope line="185"/>
                    <scope line="188"/>
                </scope>
                <scope line="193">
                    <scope line="194"/>
                    <scope line="197"/>
                </scope>
            </method>
            <method name="satisfiesSameAs" type="boolean" line="204">
                <params>
                    <param name="other" type="GraphicsPrimitive"/>
                </params>
            </method>
            <method name="makePrimitive" type="GraphicsPrimitive" line="207"/>
            <method name="traceWrap" type="GraphicsPrimitive" line="208"/>
            <declaration name="traceMap" type="HashMap" line="209"/>
            <declaration name="traceflags" type="int" line="210"/>
            <declaration name="tracefile" type="String" line="211"/>
            <declaration name="traceout" type="PrintStream" line="212"/>
            <declaration name="TRACELOG" type="int" line="213"/>
            <declaration name="TRACETIMESTAMP" type="int" line="214"/>
            <declaration name="TRACECOUNTS" type="int" line="215"/>
            <scope line="216">
                <declaration name="gpa" type="GetPropertyAction" line="217"/>
                <declaration name="trace" type="String" line="218"/>
                <scope line="219">
                    <declaration name="verbose" type="boolean" line="220"/>
                    <declaration name="traceflags" type="int" line="221"/>
                    <declaration name="st" type="StringTokenizer" line="222"/>
                    <scope line="223">
                        <declaration name="tok" type="String" line="224"/>
                        <scope line="225"/>
                        <scope line="228"/>
                        <scope line="231"/>
                        <scope line="234"/>
                        <scope line="237"/>
                        <scope line="240">
                            <scope line="241"/>
                        </scope>
                    </scope>
                    <scope line="247">
                        <scope line="249">
                            <scope line="252"/>
                            <scope line="255"/>
                        </scope>
                        <scope line="259"/>
                        <scope line="263"/>
                        <scope line="266"/>
                        <scope line="270"/>
                        <scope line="273"/>
                    </scope>
                </scope>
            </scope>
            <method name="tracingEnabled" type="boolean" line="280"/>
            <method name="getTraceOutputFile" type="PrintStream" line="283">
                <scope line="284">
                    <scope line="285">
                        <anonymous_class line="286">
                            <method name="run" type="Object" line="287">
                                <scope line="288"/>
                                <scope line="291"/>
                            </method>
                        </anonymous_class>
                        <declaration name="o" type="Object" line="286"/>
                        <scope line="297"/>
                        <scope line="300"/>
                    </scope>
                    <scope line="304"/>
                </scope>
            </method>
            <class name="TraceReporter" line="310">
                <extends class="Thread"/>
                <method name="setShutdownHook" type="void" line="311">
                    <anonymous_class line="312">
                        <method name="run" type="Object" line="313">
                            <declaration name="t" type="TraceReporter" line="314"/>
                        </method>
                    </anonymous_class>
                </method>
                <method name="run" type="void" line="322">
                    <declaration name="ps" type="PrintStream" line="323"/>
                    <declaration name="iterator" type="Iterator" line="324"/>
                    <declaration name="total" type="long" line="325"/>
                    <declaration name="numprims" type="int" line="326"/>
                    <scope line="327">
                        <declaration name="me" type="Map.Entry" line="328"/>
                        <declaration name="prim" type="Object" line="329"/>
                        <declaration name="count" type="int[]" line="330"/>
                        <scope line="331"/>
                        <scope line="334"/>
                    </scope>
                    <scope line="341"/>
                    <scope line="344"/>
                </method>
            </class>
            <method name="tracePrimitive" type="void" line="349">
                <params>
                    <param name="prim" type="Object"/>
                </params>
                <scope line="350">
                    <scope line="351"/>
                    <declaration name="o" type="Object" line="355"/>
                    <scope line="356"/>
                </scope>
                <scope line="362">
                    <declaration name="ps" type="PrintStream" line="363"/>
                    <scope line="364"/>
                </scope>
            </method>
            <method name="setupGeneralBinaryOp" type="void" line="370">
                <params>
                    <param name="gbo" type="GeneralBinaryOp"/>
                </params>
                <declaration name="primID" type="int" line="371"/>
                <declaration name="methodSignature" type="String" line="372"/>
                <declaration name="srctype" type="SurfaceType" line="373"/>
                <declaration name="comptype" type="CompositeType" line="374"/>
                <declaration name="dsttype" type="SurfaceType" line="375"/>
                <declaration name="convertsrc" type="Blit" line="376"/>
                <declaration name="performop" type="GraphicsPrimitive" line="377"/>
                <scope line="380"/>
                <scope line="384">
                    <scope line="386"/>
                </scope>
            </method>
            <method name="setupGeneralUnaryOp" type="void" line="394">
                <params>
                    <param name="guo" type="GeneralUnaryOp"/>
                </params>
                <declaration name="primID" type="int" line="395"/>
                <declaration name="methodSignature" type="String" line="396"/>
                <declaration name="comptype" type="CompositeType" line="397"/>
                <declaration name="dsttype" type="SurfaceType" line="398"/>
                <declaration name="convertdst" type="Blit" line="399"/>
                <declaration name="performop" type="GraphicsPrimitive" line="400"/>
                <declaration name="convertres" type="Blit" line="401"/>
                <scope line="402"/>
            </method>
            <method name="createConverter" type="Blit" line="407">
                <params>
                    <param name="srctype" type="SurfaceType"/>
                    <param name="dsttype" type="SurfaceType"/>
                </params>
                <scope line="408"/>
                <declaration name="cv" type="Blit" line="411"/>
                <scope line="412"/>
            </method>
            <method name="convertFrom" type="SurfaceData" line="417">
                <params>
                    <param name="ob" type="Blit"/>
                    <param name="srcData" type="SurfaceData"/>
                    <param name="srcX" type="int"/>
                    <param name="srcY" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="dstData" type="SurfaceData"/>
                </params>
            </method>
            <method name="convertFrom" type="SurfaceData" line="420">
                <params>
                    <param name="ob" type="Blit"/>
                    <param name="srcData" type="SurfaceData"/>
                    <param name="srcX" type="int"/>
                    <param name="srcY" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="dstData" type="SurfaceData"/>
                    <param name="type" type="int"/>
                </params>
                <scope line="421">
                    <declaration name="r" type="Rectangle" line="422"/>
                    <scope line="423"/>
                </scope>
                <scope line="427">
                    <declaration name="dstBI" type="BufferedImage" line="428"/>
                </scope>
            </method>
            <method name="convertTo" type="void" line="434">
                <params>
                    <param name="ob" type="Blit"/>
                    <param name="srcImg" type="SurfaceData"/>
                    <param name="dstImg" type="SurfaceData"/>
                    <param name="clip" type="Region"/>
                    <param name="dstX" type="int"/>
                    <param name="dstY" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <scope line="435"/>
            </method>
            <method name="getGeneralOp" type="GraphicsPrimitive" line="439">
                <params>
                    <param name="primID" type="int"/>
                    <param name="comptype" type="CompositeType"/>
                </params>
            </method>
            <method name="simplename" type="String" line="442">
                <params>
                    <param name="fields" type="Field[]"/>
                    <param name="o" type="Object"/>
                </params>
                <scope line="443">
                    <declaration name="f" type="Field" line="444"/>
                    <scope line="445">
                        <scope line="446"/>
                    </scope>
                    <scope line="450"/>
                </scope>
            </method>
            <method name="simplename" type="String" line="455">
                <params>
                    <param name="st" type="SurfaceType"/>
                </params>
            </method>
            <method name="simplename" type="String" line="458">
                <params>
                    <param name="ct" type="CompositeType"/>
                </params>
            </method>
            <declaration name="cachedname" type="String" line="461"/>
            <method name="toString" type="String" line="462">
                <scope line="463">
                    <declaration name="sig" type="String" line="464"/>
                    <declaration name="index" type="int" line="465"/>
                    <scope line="466"/>
                </scope>
            </method>
        </class>
    </source>