<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.loops">
        <import package="java.awt.Composite"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.image.ColorModel"/>
        <import package="java.awt.image.DataBuffer"/>
        <import package="java.awt.image.Raster"/>
        <import package="java.awt.image.WritableRaster"/>
        <import package="sun.awt.image.IntegerComponentRaster"/>
        <import package="sun.java2d.SurfaceData"/>
        <import package="sun.java2d.pipe.Region"/>
        <import package="sun.java2d.pipe.SpanIterator"/>
        <class name="CustomComponent" line="12">
            <javadoc line="12">
                CustomComponent, collection of GraphicsPrimitive
                  Basically, this collection of components performs conversion from
                  ANY to ANY via opaque copy                
            </javadoc>
            <method name="register" type="void" line="18">
                <declaration name="owner" type="Class" line="19"/>
                <declaration name="primitives" type="GraphicsPrimitive[]" line="20"/>
            </method>
            <method name="getRegionOfInterest" type="Region" line="23">
                <params>
                    <param name="src" type="SurfaceData"/>
                    <param name="dst" type="SurfaceData"/>
                    <param name="clip" type="Region"/>
                    <param name="srcx" type="int"/>
                    <param name="srcy" type="int"/>
                    <param name="dstx" type="int"/>
                    <param name="dsty" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="ret" type="Region" line="24"/>
                <declaration name="r" type="Rectangle" line="26"/>
                <scope line="29"/>
            </method>
        </class>
        <class name="OpaqueCopyAnyToArgb" line="35">
            <extends class="Blit"/>
            <javadoc line="35">
                ANY format to ARGB format Blit                
            </javadoc>
            <method name="OpaqueCopyAnyToArgb" type="constructor" line="39"/>
            <method name="Blit" type="void" line="42">
                <params>
                    <param name="src" type="SurfaceData"/>
                    <param name="dst" type="SurfaceData"/>
                    <param name="comp" type="Composite"/>
                    <param name="clip" type="Region"/>
                    <param name="srcx" type="int"/>
                    <param name="srcy" type="int"/>
                    <param name="dstx" type="int"/>
                    <param name="dsty" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="srcRast" type="Raster" line="43"/>
                <declaration name="srcCM" type="ColorModel" line="44"/>
                <declaration name="dstRast" type="Raster" line="45"/>
                <declaration name="icr" type="IntegerComponentRaster" line="46"/>
                <declaration name="dstPix" type="int[]" line="47"/>
                <declaration name="roi" type="Region" line="48"/>
                <declaration name="si" type="SpanIterator" line="49"/>
                <declaration name="srcPix" type="Object" line="50"/>
                <declaration name="dstScan" type="int" line="51"/>
                <declaration name="span" type="int" line="54"/>
                <scope line="55">
                    <declaration name="rowoff" type="int" line="56"/>
                    <scope line="57">
                        <declaration name="off" type="int" line="58"/>
                        <scope line="59"/>
                    </scope>
                </scope>
            </method>
        </class>
        <class name="OpaqueCopyArgbToAny" line="69">
            <extends class="Blit"/>
            <javadoc line="69">
                ARGB format to ANY format Blit                
            </javadoc>
            <method name="OpaqueCopyArgbToAny" type="constructor" line="73"/>
            <method name="Blit" type="void" line="76">
                <params>
                    <param name="src" type="SurfaceData"/>
                    <param name="dst" type="SurfaceData"/>
                    <param name="comp" type="Composite"/>
                    <param name="clip" type="Region"/>
                    <param name="srcx" type="int"/>
                    <param name="srcy" type="int"/>
                    <param name="dstx" type="int"/>
                    <param name="dsty" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="srcRast" type="Raster" line="77"/>
                <declaration name="icr" type="IntegerComponentRaster" line="78"/>
                <declaration name="srcPix" type="int[]" line="79"/>
                <declaration name="dstRast" type="WritableRaster" line="80"/>
                <declaration name="dstCM" type="ColorModel" line="81"/>
                <declaration name="roi" type="Region" line="82"/>
                <declaration name="si" type="SpanIterator" line="83"/>
                <declaration name="dstPix" type="Object" line="84"/>
                <declaration name="srcScan" type="int" line="85"/>
                <declaration name="span" type="int" line="88"/>
                <scope line="89">
                    <declaration name="rowoff" type="int" line="90"/>
                    <scope line="91">
                        <declaration name="off" type="int" line="92"/>
                        <scope line="93"/>
                    </scope>
                </scope>
            </method>
        </class>
        <class name="XorCopyArgbToAny" line="102">
            <extends class="Blit"/>
            <javadoc line="102">
                ARGB format to ANY format Blit (pixels are XORed together with XOR pixel)                
            </javadoc>
            <method name="XorCopyArgbToAny" type="constructor" line="106"/>
            <method name="Blit" type="void" line="109">
                <params>
                    <param name="src" type="SurfaceData"/>
                    <param name="dst" type="SurfaceData"/>
                    <param name="comp" type="Composite"/>
                    <param name="clip" type="Region"/>
                    <param name="srcx" type="int"/>
                    <param name="srcy" type="int"/>
                    <param name="dstx" type="int"/>
                    <param name="dsty" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <declaration name="srcRast" type="Raster" line="110"/>
                <declaration name="icr" type="IntegerComponentRaster" line="111"/>
                <declaration name="srcPix" type="int[]" line="112"/>
                <declaration name="dstRast" type="WritableRaster" line="113"/>
                <declaration name="dstCM" type="ColorModel" line="114"/>
                <declaration name="roi" type="Region" line="115"/>
                <declaration name="si" type="SpanIterator" line="116"/>
                <declaration name="xorrgb" type="int" line="117"/>
                <declaration name="xorPixel" type="Object" line="118"/>
                <declaration name="srcPixel" type="Object" line="119"/>
                <declaration name="dstPixel" type="Object" line="120"/>
                <declaration name="srcScan" type="int" line="121"/>
                <declaration name="span" type="int" line="124"/>
                <scope line="125">
                    <declaration name="rowoff" type="int" line="126"/>
                    <scope line="127">
                        <declaration name="off" type="int" line="128"/>
                        <scope line="129">
                            <declaration name="bytesrcarr" type="byte[]" line="134"/>
                            <declaration name="bytedstarr" type="byte[]" line="135"/>
                            <declaration name="bytexorarr" type="byte[]" line="136"/>
                            <scope line="137"/>
                            <declaration name="shortsrcarr" type="short[]" line="143"/>
                            <declaration name="shortdstarr" type="short[]" line="144"/>
                            <declaration name="shortxorarr" type="short[]" line="145"/>
                            <scope line="146"/>
                            <declaration name="intsrcarr" type="int[]" line="151"/>
                            <declaration name="intdstarr" type="int[]" line="152"/>
                            <declaration name="intxorarr" type="int[]" line="153"/>
                            <scope line="154"/>
                            <declaration name="floatsrcarr" type="float[]" line="159"/>
                            <declaration name="floatdstarr" type="float[]" line="160"/>
                            <declaration name="floatxorarr" type="float[]" line="161"/>
                            <scope line="162">
                                <declaration name="v" type="int" line="163"/>
                            </scope>
                            <declaration name="doublesrcarr" type="double[]" line="168"/>
                            <declaration name="doubledstarr" type="double[]" line="169"/>
                            <declaration name="doublexorarr" type="double[]" line="170"/>
                            <scope line="171">
                                <declaration name="v" type="long" line="172"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
        </class>
    </source>