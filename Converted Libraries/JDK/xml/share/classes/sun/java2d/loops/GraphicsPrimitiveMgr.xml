<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.loops">
        <import package="java.util.Comparator"/>
        <import package="java.util.Arrays"/>
        <import package="sun.java2d.SunGraphics2D"/>
        <class name="GraphicsPrimitiveMgr" line="36">
            <javadoc line="36">
                GraphicsComponentMgr provides services to
                  1. register primitives for later use
                  2. locate an instance of a primitve based on characteristics                
            </javadoc>
            <declaration name="debugTrace" type="boolean" line="43"/>
            <declaration name="primitives" type="GraphicsPrimitive" line="44"/>
            <declaration name="generalPrimitives" type="GraphicsPrimitive" line="45"/>
            <declaration name="needssort" type="boolean" line="46"/>
            <method name="initIDs" type="void" line="48"/>
            <method name="registerNativeLoops" type="void" line="53"/>
            <scope line="55"/>
            <class name="PrimitiveSpec" line="72">
                <comment line="276">
                    This is only really meant to be called from GraphicsPrimitiveProxyTest                    
                </comment>
                <comment line="277">
                    in the regression tests directory, but it has to be here because                    
                </comment>
                <comment line="278">
                    it needs access to a private data structure.  It is not very                    
                </comment>
                <comment line="279">
                    big, though.                    
                </comment>
                <declaration name="uniqueID" type="int" line="73"/>
            </class>
            <declaration name="primSorter" type="Comparator" line="76"/>
            <anonymous_class line="76">
                <method name="compare" type="int" line="77">
                    <params>
                        <param name="o1" type="Object"/>
                        <param name="o2" type="Object"/>
                    </params>
                    <declaration name="id1" type="int" line="78"/>
                    <declaration name="id2" type="int" line="79"/>
                </method>
            </anonymous_class>
            <declaration name="primFinder" type="Comparator" line="85"/>
            <anonymous_class line="85">
                <method name="compare" type="int" line="86">
                    <params>
                        <param name="o1" type="Object"/>
                        <param name="o2" type="Object"/>
                    </params>
                    <declaration name="id1" type="int" line="87"/>
                    <declaration name="id2" type="int" line="88"/>
                </method>
            </anonymous_class>
            <javadoc line="94">
                Ensure that noone can instantiate this class.                
            </javadoc>
            <method name="GraphicsPrimitiveMgr" type="constructor" line="97"/>
            <method name="register" type="void" line="101">
                <params>
                    <param name="newPrimitives" type="GraphicsPrimitive[]"/>
                </params>
                <declaration name="devCollection" type="GraphicsPrimitive[]" line="102"/>
                <declaration name="oldSize" type="int" line="103"/>
                <declaration name="newSize" type="int" line="104"/>
                <scope line="105">
                    <scope line="107"/>
                </scope>
                <scope line="111"/>
                <declaration name="temp" type="GraphicsPrimitive[]" line="114"/>
                <scope line="115"/>
            </method>
            <method name="registerGeneral" type="void" line="123">
                <params>
                    <param name="gen" type="GraphicsPrimitive"/>
                </params>
                <scope line="124"/>
                <declaration name="len" type="int" line="128"/>
                <declaration name="newGen" type="GraphicsPrimitive[]" line="129"/>
            </method>
            <method name="locate" type="GraphicsPrimitive" line="137">
                <params>
                    <param name="primTypeID" type="int"/>
                    <param name="dsttype" type="SurfaceType"/>
                </params>
            </method>
            <method name="locate" type="GraphicsPrimitive" line="148">
                <params>
                    <param name="primTypeID" type="int"/>
                    <param name="srctype" type="SurfaceType"/>
                    <param name="comptype" type="CompositeType"/>
                    <param name="dsttype" type="SurfaceType"/>
                </params>
                <comment line="149">
                    System.out.println(&quot;Looking for:&quot;);
                    System.out.println(&quot;    method: &quot;+signature);
                    System.out.println(&quot;    from:   &quot;+srctype);
                    System.out.println(&quot;    by:     &quot;+comptype);
                    System.out.println(&quot;    to:     &quot;+dsttype);                    
                </comment>
                <comment line="160">
                    System.out.println(&quot;Trying general loop&quot;);                    
                </comment>
                <declaration name="prim" type="GraphicsPrimitive" line="156"/>
                <scope line="159">
                    <scope line="162">
                        <scope line="164"/>
                    </scope>
                </scope>
            </method>
            <method name="locatePrim" type="GraphicsPrimitive" line="177">
                <params>
                    <param name="primTypeID" type="int"/>
                    <param name="srctype" type="SurfaceType"/>
                    <param name="comptype" type="CompositeType"/>
                    <param name="dsttype" type="SurfaceType"/>
                </params>
                <comment line="178">
                    System.out.println(&quot;Looking for:&quot;);
                    System.out.println(&quot;    method: &quot;+signature);
                    System.out.println(&quot;    from:   &quot;+srctype);
                    System.out.println(&quot;    by:     &quot;+comptype);
                    System.out.println(&quot;    to:     &quot;+dsttype);                    
                </comment>
                <comment line="193">
                    System.out.println(&quot;Trying:&quot;);
                    System.out.println(&quot;    method: &quot;+spec.methodSignature);
                    System.out.println(&quot;    from:   &quot;+spec.sourceType);
                    System.out.println(&quot;    by:     &quot;+spec.compType);
                    System.out.println(&quot;    to:     &quot;+spec.destType);                    
                </comment>
                <comment line="205">
                    System.out.println(&quot;&lt;GPMgr&gt; Found: &quot; + prim + &quot; in &quot; + i + &quot; steps&quot;);                    
                </comment>
                <declaration name="src" type="SurfaceType" line="185"/>
                <declaration name="cmp" type="CompositeType" line="186"/>
                <declaration name="prim" type="GraphicsPrimitive" line="187"/>
                <declaration name="spec" type="PrimitiveSpec" line="188"/>
                <scope line="190">
                    <scope line="191">
                        <scope line="192">
                            <scope line="204"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="locateGeneral" type="GraphicsPrimitive" line="214">
                <params>
                    <param name="primTypeID" type="int"/>
                </params>
                <comment line="225">
                    throw new InternalError(&quot;No general handler registered for&quot;+signature);                    
                </comment>
                <scope line="215"/>
                <scope line="218">
                    <declaration name="prim" type="GraphicsPrimitive" line="219"/>
                    <scope line="220"/>
                </scope>
            </method>
            <method name="locate" type="GraphicsPrimitive" line="228">
                <params>
                    <param name="spec" type="PrimitiveSpec"/>
                </params>
                <scope line="229">
                    <scope line="230">
                        <scope line="231"/>
                    </scope>
                </scope>
                <declaration name="devCollection" type="GraphicsPrimitive[]" line="238"/>
                <scope line="239"/>
                <declaration name="index" type="int" line="242"/>
                <scope line="243">
                    <declaration name="prim" type="GraphicsPrimitive" line="244"/>
                    <scope line="245">
                        <scope line="248"/>
                    </scope>
                    <scope line="252"/>
                </scope>
                <scope line="257"/>
            </method>
            <method name="writeLog" type="void" line="264">
                <params>
                    <param name="str" type="String"/>
                </params>
                <scope line="265"/>
            </method>
            <javadoc line="270">
                Test that all of the GraphicsPrimitiveProxy objects actually
                  resolve to something.  Throws a RuntimeException if anything
                  is wrong, an has no effect if all is well.                
            </javadoc>
            <method name="testPrimitiveInstantiation" type="void" line="279">
                <comment line="275">
                    This is only really meant to be called from GraphicsPrimitiveProxyTest                    
                </comment>
                <comment line="276">
                    in the regression tests directory, but it has to be here because                    
                </comment>
                <comment line="277">
                    it needs access to a private data structure.  It is not very                    
                </comment>
                <comment line="278">
                    big, though.                    
                </comment>
            </method>
            <method name="testPrimitiveInstantiation" type="void" line="283">
                <params>
                    <param name="verbose" type="boolean"/>
                </params>
                <comment line="301">
                    instantiate checks that p.satisfiesSameAs(r)                    
                </comment>
                <declaration name="resolved" type="int" line="284"/>
                <declaration name="unresolved" type="int" line="285"/>
                <declaration name="prims" type="GraphicsPrimitive[]" line="286"/>
                <scope line="287">
                    <declaration name="p" type="GraphicsPrimitive" line="288"/>
                    <scope line="289">
                        <declaration name="r" type="GraphicsPrimitive" line="290"/>
                        <scope line="292"/>
                        <scope line="304"/>
                    </scope>
                    <scope line="307">
                        <scope line="308"/>
                    </scope>
                </scope>
            </method>
            <method name="main" type="void" line="322">
                <params>
                    <param name="argv" type="String"/>
                </params>
                <comment line="323">
                    REMIND: Should trigger loading of platform primitives somehow...                    
                </comment>
                <scope line="324"/>
            </method>
        </class>
    </source>