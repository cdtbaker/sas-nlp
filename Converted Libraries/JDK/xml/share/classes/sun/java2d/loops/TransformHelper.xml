<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.loops">
        <import package="java.awt.Composite"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.lang.ref.WeakReference"/>
        <import package="sun.java2d.SurfaceData"/>
        <import package="sun.java2d.loops.GraphicsPrimitive"/>
        <import package="sun.java2d.pipe.Region"/>
        <class name="TransformHelper" line="35">
            <extends class="GraphicsPrimitive"/>
            <javadoc line="35">
                TransformHelper
                  1) applies an AffineTransform to a rectangle of pixels while copying
                  from one surface to another
                  2) performs compositing of colors based upon a Composite
                  parameter
                  precise behavior is undefined if the source surface
                  and the destination surface are the same surface
                  with overlapping regions of pixels                
            </javadoc>
            <declaration name="methodSignature" type="String" line="48"/>
            <declaration name="primTypeID" type="int" line="51"/>
            <declaration name="helpercache" type="RenderCache" line="53"/>
            <method name="locate" type="TransformHelper" line="55">
                <params>
                    <param name="srctype" type="SurfaceType"/>
                </params>
            </method>
            <method name="getFromCache" type="TransformHelper" line="63">
                <params>
                    <param name="src" type="SurfaceType"/>
                </params>
                <comment line="71">
                    System.out.println(&quot;helper loop not found for:&quot;);
                    System.out.println(&quot;src:  &quot;+src);                    
                </comment>
                <declaration name="o" type="Object" line="64"/>
                <scope line="65"/>
                <declaration name="helper" type="TransformHelper" line="68"/>
                <scope line="69"/>
                <scope line="74"/>
            </method>
            <method name="TransformHelper" type="constructor" line="80">
                <params>
                    <param name="srctype" type="SurfaceType"/>
                </params>
            </method>
            <method name="TransformHelper" type="constructor" line="89">
                <params>
                    <param name="pNativePrim" type="long"/>
                    <param name="srctype" type="SurfaceType"/>
                    <param name="comptype" type="CompositeType"/>
                    <param name="dsttype" type="SurfaceType"/>
                </params>
            </method>
            <method name="Transform" type="void" line="94"/>
            <method name="makePrimitive" type="GraphicsPrimitive" line="105">
                <params>
                    <param name="srctype" type="SurfaceType"/>
                    <param name="comptype" type="CompositeType"/>
                    <param name="dsttype" type="SurfaceType"/>
                </params>
            </method>
            <method name="traceWrap" type="GraphicsPrimitive" line="109"/>
            <class name="TraceTransformHelper" line="113">
                <extends class="TransformHelper"/>
                <declaration name="target" type="TransformHelper" line="114"/>
                <method name="TraceTransformHelper" type="constructor" line="116">
                    <params>
                        <param name="target" type="TransformHelper"/>
                    </params>
                </method>
                <method name="traceWrap" type="GraphicsPrimitive" line="121"/>
                <method name="Transform" type="void" line="132">
                    <params>
                        <param name="output" type="MaskBlit"/>
                        <param name="src" type="SurfaceData"/>
                        <param name="dst" type="SurfaceData"/>
                        <param name="comp" type="Composite"/>
                        <param name="clip" type="Region"/>
                        <param name="itx" type="AffineTransform"/>
                        <param name="txtype" type="int"/>
                        <param name="sx1" type="int"/>
                        <param name="sy1" type="int"/>
                        <param name="sx2" type="int"/>
                        <param name="sy2" type="int"/>
                        <param name="dx1" type="int"/>
                        <param name="dy1" type="int"/>
                        <param name="dx2" type="int"/>
                        <param name="dy2" type="int"/>
                        <param name="edges" type="int"/>
                        <param name="dxoff" type="int"/>
                        <param name="dyoff" type="int"/>
                    </params>
                </method>
            </class>
        </class>
    </source>