<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.opengl">
        <import package="java.awt.GradientPaint"/>
        <import package="java.awt.LinearGradientPaint"/>
        <import package="java.awt.MultipleGradientPaint"/>
        <import package="java.awt.MultipleGradientPaint.ColorSpaceType"/>
        <import package="java.awt.MultipleGradientPaint.CycleMethod"/>
        <import package="java.awt.RadialGradientPaint"/>
        <import package="java.awt.TexturePaint"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Map"/>
        <import package="sun.java2d.SunGraphics2D"/>
        <import package="sun.java2d.SurfaceData"/>
        <import package="sun.java2d.loops.CompositeType"/>
        <import package="sun.java2d.pipe.BufferedPaints"/>
        <import package="sun.java2d.opengl.OGLContext.OGLContextCaps"/>
        <class name="OGLPaints" line="44">
            <declaration name="impls" type="Map&lt;Integer,OGLPaints&gt;" line="46"/>
            <javadoc line="46">
                Holds all registered implementations, using the corresponding
                  SunGraphics2D.PAINT_ constant as the hash key.                
            </javadoc>
            <scope line="53"/>
            <javadoc line="60">
                Attempts to locate an implementation corresponding to the paint state
                  of the provided SunGraphics2D object.  If no implementation can be
                  found, or if the paint cannot be accelerated under the conditions
                  of the SunGraphics2D, this method returns false; otherwise, returns
                  true.                
            </javadoc>
            <method name="isValid" type="boolean" line="67">
                <params>
                    <param name="sg2d" type="SunGraphics2D"/>
                </params>
                <declaration name="impl" type="OGLPaints" line="68"/>
            </method>
            <method name="isPaintValid" type="boolean" line="72"/>
            <javadoc line="72">
                Returns true if this implementation is able to accelerate the
                  Paint object associated with, and under the conditions of, the
                  provided SunGraphics2D instance; otherwise returns false.                
            </javadoc>
            <class name="Gradient" line="79">
                <extends class="OGLPaints"/>
                <javadoc line="79">
                    GradientPaint support                    
                </javadoc>
                <method name="Gradient" type="constructor" line="82"/>
                <javadoc line="84">
                    There are no restrictions for accelerating GradientPaint, so
                      this method always returns true.                    
                </javadoc>
                <method name="isPaintValid" type="boolean" line="89">
                    <params>
                        <param name="sg2d" type="SunGraphics2D"/>
                    </params>
                </method>
            </class>
            <class name="Texture" line="94">
                <extends class="OGLPaints"/>
                <javadoc line="94">
                    TexturePaint support                    
                </javadoc>
                <method name="Texture" type="constructor" line="97"/>
                <javadoc line="99">
                    Returns true if the given TexturePaint instance can be used by the
                      accelerated OGLPaints.Texture implementation.  A TexturePaint is
                      considered valid if the following conditions are met:
                      - the texture image dimensions are power-of-two (or the
                      GL_ARB_texture_non_power_of_two extension is present)
                      - the texture image can be (or is already) cached in an OpenGL
                      texture object                    
                </javadoc>
                <method name="isPaintValid" type="boolean" line="109">
                    <params>
                        <param name="sg2d" type="SunGraphics2D"/>
                    </params>
                    <comment line="114">
                        see if texture-non-pow2 extension is available                        
                    </comment>
                    <comment line="119">
                        verify that the texture image dimensions are pow2                        
                    </comment>
                    <comment line="129">
                        REMIND: this is a hack that attempts to cache the system                        
                    </comment>
                    <comment line="130">
                        memory image from the TexturePaint instance into an                        
                    </comment>
                    <comment line="131">
                        OpenGL texture...                        
                    </comment>
                    <comment line="140">
                        verify that the source surface is actually a texture                        
                    </comment>
                    <declaration name="paint" type="TexturePaint" line="110"/>
                    <declaration name="dstData" type="OGLSurfaceData" line="111"/>
                    <declaration name="bi" type="BufferedImage" line="112"/>
                    <scope line="115">
                        <declaration name="imgw" type="int" line="116"/>
                        <declaration name="imgh" type="int" line="117"/>
                        <scope line="120"/>
                    </scope>
                    <declaration name="srcData" type="SurfaceData" line="125"/>
                    <scope line="128">
                        <scope line="135"/>
                    </scope>
                    <declaration name="oglData" type="OGLSurfaceData" line="141"/>
                    <scope line="142"/>
                </method>
            </class>
            <class name="MultiGradient" line="150">
                <extends class="OGLPaints"/>
                <javadoc line="150">
                    Shared MultipleGradientPaint support                    
                </javadoc>
                <method name="MultiGradient" type="constructor" line="153"/>
                <javadoc line="155">
                    Returns true if the given MultipleGradientPaint instance can be
                      used by the accelerated OGLPaints.MultiGradient implementation.
                      A MultipleGradientPaint is considered valid if the following
                      conditions are met:
                      - the number of gradient &quot;stops&quot; is &lt;= MAX_FRACTIONS
                      - the destination has support for fragment shaders                    
                </javadoc>
                <method name="isPaintValid" type="boolean" line="164">
                    <params>
                        <param name="sg2d" type="SunGraphics2D"/>
                    </params>
                    <comment line="166">
                        REMIND: ugh, this creates garbage; would be nicer if                        
                    </comment>
                    <comment line="167">
                        we had a MultipleGradientPaint.getNumStops() method...                        
                    </comment>
                    <declaration name="paint" type="MultipleGradientPaint" line="165"/>
                    <scope line="168"/>
                    <declaration name="dstData" type="OGLSurfaceData" line="172"/>
                    <declaration name="gc" type="OGLGraphicsConfig" line="173"/>
                    <scope line="174"/>
                </method>
            </class>
            <class name="LinearGradient" line="182">
                <extends class="MultiGradient"/>
                <javadoc line="182">
                    LinearGradientPaint support                    
                </javadoc>
                <method name="LinearGradient" type="constructor" line="185"/>
                <method name="isPaintValid" type="boolean" line="188">
                    <params>
                        <param name="sg2d" type="SunGraphics2D"/>
                    </params>
                    <comment line="195">
                        we can delegate to the optimized two-color gradient                        
                    </comment>
                    <comment line="196">
                        codepath, which does not require fragment shader support                        
                    </comment>
                    <declaration name="paint" type="LinearGradientPaint" line="189"/>
                    <scope line="194"/>
                </method>
            </class>
            <class name="RadialGradient" line="204">
                <extends class="MultiGradient"/>
                <javadoc line="204">
                    RadialGradientPaint support                    
                </javadoc>
                <method name="RadialGradient" type="constructor" line="207"/>
            </class>
        </class>
    </source>