<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.pisces">
        <import package="java.util.Map"/>
        <import package="java.util.concurrent.ConcurrentHashMap"/>
        <import package="sun.java2d.pipe.AATileGenerator"/>
        <class name="PiscesTileGenerator" line="5">
            <implements interface="AATileGenerator"/>
            <declaration name="TILE_SIZE" type="int" line="6"/>
            <declaration name="alphaMapsCache" type="Map&amp;lt;Integer,byte[]&amp;gt;" line="7"/>
            <declaration name="cache" type="PiscesCache" line="8"/>
            <declaration name="x" type="int" line="9"/>
            <declaration name="maxalpha" type="int" line="10"/>
            <declaration name="maxTileAlphaSum" type="int" line="11"/>
            <declaration name="alphaMap" type="byte" line="12"/>
            <method name="PiscesTileGenerator" type="constructor" line="13">
                <params>
                    <param name="r" type="Renderer"/>
                    <param name="maxalpha" type="int"/>
                </params>
            </method>
            <method name="buildAlphaMap" type="byte[]" line="21">
                <params>
                    <param name="maxalpha" type="int"/>
                </params>
                <declaration name="alMap" type="byte[]" line="22"/>
                <declaration name="halfmaxalpha" type="int" line="23"/>
                <scope line="24"/>
            </method>
            <method name="getAlphaMap" type="byte[]" line="29">
                <params>
                    <param name="maxalpha" type="int"/>
                </params>
                <scope line="30"/>
            </method>
            <method name="getBbox" type="void" line="35">
                <params>
                    <param name="bbox" type="int"/>
                </params>
            </method>
            <javadoc line="41">
                Gets the width of the tiles that the generator batches output into.                
                <return>
                    the width of the standard alpha tile                    
                </return>
            </javadoc>
            <method name="getTileWidth" type="int" line="45"/>
            <javadoc line="48">
                Gets the height of the tiles that the generator batches output into.                
                <return>
                    the height of the standard alpha tile                    
                </return>
            </javadoc>
            <method name="getTileHeight" type="int" line="52"/>
            <javadoc line="55">
                Gets the typical alpha value that will characterize the current
                  tile.
                  The answer may be 0x00 to indicate that the current tile has
                  no coverage in any of its pixels, or it may be 0xff to indicate
                  that the current tile is completely covered by the path, or any
                  other value to indicate non-trivial coverage cases.                
                <return>
                    0x00 for no coverage, 0xff for total coverage, or any other
                      value for partial coverage of the tile                    
                </return>
            </javadoc>
            <method name="getTypicalAlpha" type="int" line="65">
                <declaration name="al" type="int" line="66"/>
            </method>
            <javadoc line="69">
                Skips the current tile and moves on to the next tile.
                  Either this method, or the getAlpha() method should be called
                  once per tile, but not both.                
            </javadoc>
            <method name="nextTile" type="void" line="74">
                <scope line="75"/>
            </method>
            <javadoc line="80">
                Gets the alpha coverage values for the current tile.
                  Either this method, or the nextTile() method should be called
                  once per tile, but not both.                
            </javadoc>
            <method name="getAlpha" type="void" line="85">
                <params>
                    <param name="tile" type="byte"/>
                    <param name="offset" type="int"/>
                    <param name="rowstride" type="int"/>
                </params>
            </method>
            <method name="hex" type="String" line="158">
                <params>
                    <param name="v" type="int"/>
                    <param name="d" type="int"/>
                </params>
                <declaration name="s" type="String" line="159"/>
                <scope line="160"/>
            </method>
            <javadoc line="165">
                Disposes this tile generator.
                  No further calls will be made on this instance.                
            </javadoc>
            <method name="dispose" type="void" line="169"/>
        </class>
    </source>