<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d.pisces">
        <import package="java.util.Arrays"/>
        <import package="java.lang.Math.PI"/>
        <import package="java.lang.Math.cos"/>
        <import package="java.lang.Math.sqrt"/>
        <import package="java.lang.Math.cbrt"/>
        <import package="java.lang.Math.acos"/>
        <class name="Helpers" line="36">
            <comment line="85">
                find the roots of g(t) = d*t^3 + a*t^2 + b*t + c in [A,B)                
            </comment>
            <comment line="155">
                These use a hardcoded factor of 2 for increasing sizes. Perhaps this                
            </comment>
            <comment line="156">
                should be provided as an argument.                
            </comment>
            <comment line="184">
                returns the index 1 past the last valid element remaining after filtering                
            </comment>
            <comment line="238">
                Most of these are copied from classes in java.awt.geom because we need                
            </comment>
            <comment line="239">
                float versions of these functions, and Line2D, CubicCurve2D,                
            </comment>
            <comment line="240">
                QuadCurve2D don&apos;t provide them.                
            </comment>
            <method name="Helpers" type="constructor" line="37"/>
            <method name="within" type="boolean" line="41">
                <params>
                    <param name="x" type="float"/>
                    <param name="y" type="float"/>
                    <param name="err" type="float"/>
                </params>
                <declaration name="d" type="float" line="42"/>
            </method>
            <method name="within" type="boolean" line="46">
                <params>
                    <param name="x" type="double"/>
                    <param name="y" type="double"/>
                    <param name="err" type="double"/>
                </params>
                <declaration name="d" type="double" line="47"/>
            </method>
            <method name="quadraticRoots" type="int" line="53">
                <params>
                    <param name="a" type="float"/>
                    <param name="b" type="float"/>
                    <param name="c" type="float"/>
                    <param name="zeroes" type="float[]"/>
                    <param name="off" type="int"/>
                </params>
                <comment line="60">
                    depending on the sign of b we use a slightly different                    
                </comment>
                <comment line="61">
                    algorithm than the traditional one to find one of the roots                    
                </comment>
                <comment line="62">
                    so we can avoid adding numbers of different signs (which                    
                </comment>
                <comment line="63">
                    might result in loss of precision).                    
                </comment>
                <declaration name="ret" type="int" line="54"/>
                <declaration name="t" type="float" line="55"/>
                <scope line="56">
                    <declaration name="dis" type="float" line="57"/>
                    <scope line="58">
                        <declaration name="sqrtDis" type="float" line="59"/>
                        <scope line="64"/>
                        <scope line="67"/>
                    </scope>
                    <scope line="71"/>
                </scope>
                <scope line="75">
                    <scope line="76"/>
                </scope>
            </method>
            <method name="cubicRootsInAB" type="int" line="88">
                <params>
                    <param name="d" type="float"/>
                    <param name="a" type="float"/>
                    <param name="b" type="float"/>
                    <param name="c" type="float"/>
                    <param name="pts" type="float[]"/>
                    <param name="off" type="int"/>
                    <param name="A" type="float"/>
                    <param name="B" type="float"/>
                </params>
                <comment line="93">
                    From Graphics Gems:                    
                </comment>
                <comment line="94">
                    http://tog.acm.org/resources/GraphicsGems/gems/Roots3And4.c                    
                </comment>
                <comment line="95">
                    (also from awt.geom.CubicCurve2D. But here we don&apos;t need as                    
                </comment>
                <comment line="96">
                    much accuracy and we don&apos;t want to create arrays so we use                    
                </comment>
                <comment line="97">
                    our own customized version).                    
                </comment>
                <comment line="99">
                                        
                </comment>
                <comment line="104">
                    substitute x = y - A/3 to eliminate quadratic term:                    
                </comment>
                <comment line="105">
                    x^3 +Px + Q = 0                    
                </comment>
                <comment line="106">
                                        
                </comment>
                <comment line="107">
                    Since we actually need P/3 and Q/2 for all of the                    
                </comment>
                <comment line="108">
                    calculations that follow, we will calculate                    
                </comment>
                <comment line="109">
                    p = P/3                    
                </comment>
                <comment line="110">
                    q = Q/2                    
                </comment>
                <comment line="111">
                    instead and use those values for simplicity of the code.                    
                </comment>
                <comment line="116">
                                        
                </comment>
                <comment line="123">
                    see: http://en.wikipedia.org/wiki/Cubic_function#Trigonometric_.28and_hyperbolic.29_method                    
                </comment>
                <scope line="89">
                    <declaration name="num" type="int" line="90"/>
                </scope>
                <declaration name="sq_A" type="double" line="112"/>
                <declaration name="p" type="double" line="113"/>
                <declaration name="q" type="double" line="114"/>
                <declaration name="cb_p" type="double" line="118"/>
                <declaration name="D" type="double" line="119"/>
                <declaration name="num" type="int" line="121"/>
                <scope line="122">
                    <declaration name="phi" type="double" line="124"/>
                    <declaration name="t" type="double" line="125"/>
                </scope>
                <scope line="131">
                    <declaration name="sqrt_D" type="double" line="132"/>
                    <declaration name="u" type="double" line="133"/>
                    <declaration name="v" type="double" line="134"/>
                    <scope line="139"/>
                </scope>
                <declaration name="sub" type="float" line="145"/>
                <scope line="147"/>
            </method>
            <method name="widenArray" type="float[]" line="156">
                <params>
                    <param name="in" type="float[]"/>
                    <param name="cursize" type="int"/>
                    <param name="numToAdd" type="int"/>
                </params>
                <scope line="157"/>
            </method>
            <method name="widenArray" type="int[]" line="163">
                <params>
                    <param name="in" type="int[]"/>
                    <param name="cursize" type="int"/>
                    <param name="numToAdd" type="int"/>
                </params>
                <scope line="164"/>
            </method>
            <method name="evalCubic" type="float" line="173">
                <params>
                    <param name="a" type="float"/>
                    <param name="b" type="float"/>
                    <param name="c" type="float"/>
                    <param name="d" type="float"/>
                    <param name="t" type="float"/>
                </params>
            </method>
            <method name="evalQuad" type="float" line="179">
                <params>
                    <param name="a" type="float"/>
                    <param name="b" type="float"/>
                    <param name="c" type="float"/>
                    <param name="t" type="float"/>
                </params>
            </method>
            <method name="filterOutNotInAB" type="int" line="186">
                <params>
                    <param name="nums" type="float[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                    <param name="a" type="float"/>
                    <param name="b" type="float"/>
                </params>
                <declaration name="ret" type="int" line="187"/>
                <scope line="188">
                    <scope line="189"/>
                </scope>
            </method>
            <method name="polyLineLength" type="float" line="196">
                <params>
                    <param name="poly" type="float[]"/>
                    <param name="off" type="int"/>
                    <param name="nCoords" type="int"/>
                </params>
                <declaration name="acc" type="float" line="198"/>
                <scope line="199"/>
            </method>
            <method name="linelen" type="float" line="205">
                <params>
                    <param name="x1" type="float"/>
                    <param name="y1" type="float"/>
                    <param name="x2" type="float"/>
                    <param name="y2" type="float"/>
                </params>
                <declaration name="dx" type="float" line="206"/>
                <declaration name="dy" type="float" line="207"/>
            </method>
            <method name="subdivide" type="void" line="213">
                <params>
                    <param name="src" type="float[]"/>
                    <param name="srcoff" type="int"/>
                    <param name="left" type="float[]"/>
                    <param name="leftoff" type="int"/>
                    <param name="right" type="float[]"/>
                    <param name="rightoff" type="int"/>
                    <param name="type" type="int"/>
                </params>
            </method>
            <method name="isort" type="void" line="226">
                <params>
                    <param name="a" type="float[]"/>
                    <param name="off" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <scope line="227">
                    <declaration name="ai" type="float" line="228"/>
                    <declaration name="j" type="int" line="229"/>
                    <scope line="230"/>
                </scope>
            </method>
            <javadoc line="240">
                Subdivides the cubic curve specified by the coordinates
                  stored in the &lt;code&gt;src&lt;/code&gt; array at indices &lt;code&gt;srcoff&lt;/code&gt;
                  through (&lt;code&gt;srcoff&lt;/code&gt;&amp;nbsp;+&amp;nbsp;7) and stores the
                  resulting two subdivided curves into the two result arrays at the
                  corresponding indices.
                  Either or both of the &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt;
                  arrays may be &lt;code&gt;null&lt;/code&gt; or a reference to the same array
                  as the &lt;code&gt;src&lt;/code&gt; array.
                  Note that the last point in the first subdivided curve is the
                  same as the first point in the second subdivided curve. Thus,
                  it is possible to pass the same array for &lt;code&gt;left&lt;/code&gt;
                  and &lt;code&gt;right&lt;/code&gt; and to use offsets, such as &lt;code&gt;rightoff&lt;/code&gt;
                  equals (&lt;code&gt;leftoff&lt;/code&gt; + 6), in order
                  to avoid allocating extra storage for this common point.                
                <param>
                    src the array holding the coordinates for the source curve                    
                </param>
                <param>
                    srcoff the offset into the array of the beginning of the
                      the 6 source coordinates                    
                </param>
                <param>
                    left the array for storing the coordinates for the first
                      half of the subdivided curve                    
                </param>
                <param>
                    leftoff the offset into the array of the beginning of the
                      the 6 left coordinates                    
                </param>
                <param>
                    right the array for storing the coordinates for the second
                      half of the subdivided curve                    
                </param>
                <param>
                    rightoff the offset into the array of the beginning of the
                      the 6 right coordinates                    
                </param>
                <since>
                    1.7                    
                </since>
            </javadoc>
            <method name="subdivideCubic" type="void" line="271">
                <params>
                    <param name="src" type="float"/>
                    <param name="srcoff" type="int"/>
                    <param name="left" type="float"/>
                    <param name="leftoff" type="int"/>
                    <param name="right" type="float"/>
                    <param name="rightoff" type="int"/>
                </params>
                <declaration name="x1" type="float" line="272"/>
                <declaration name="y1" type="float" line="273"/>
                <declaration name="ctrlx1" type="float" line="274"/>
                <declaration name="ctrly1" type="float" line="275"/>
                <declaration name="ctrlx2" type="float" line="276"/>
                <declaration name="ctrly2" type="float" line="277"/>
                <declaration name="x2" type="float" line="278"/>
                <declaration name="y2" type="float" line="279"/>
                <scope line="280"/>
                <scope line="284"/>
                <declaration name="centerx" type="float" line="292"/>
                <declaration name="centery" type="float" line="293"/>
                <scope line="300"/>
                <scope line="308"/>
            </method>
            <method name="subdivideCubicAt" type="void" line="322">
                <params>
                    <param name="t" type="float"/>
                    <param name="src" type="float"/>
                    <param name="srcoff" type="int"/>
                    <param name="left" type="float"/>
                    <param name="leftoff" type="int"/>
                    <param name="right" type="float"/>
                    <param name="rightoff" type="int"/>
                </params>
                <declaration name="x1" type="float" line="323"/>
                <declaration name="y1" type="float" line="324"/>
                <declaration name="ctrlx1" type="float" line="325"/>
                <declaration name="ctrly1" type="float" line="326"/>
                <declaration name="ctrlx2" type="float" line="327"/>
                <declaration name="ctrly2" type="float" line="328"/>
                <declaration name="x2" type="float" line="329"/>
                <declaration name="y2" type="float" line="330"/>
                <scope line="331"/>
                <scope line="335"/>
                <declaration name="centerx" type="float" line="343"/>
                <declaration name="centery" type="float" line="344"/>
                <scope line="351"/>
                <scope line="359"/>
            </method>
            <method name="subdivideQuad" type="void" line="372">
                <params>
                    <param name="src" type="float"/>
                    <param name="srcoff" type="int"/>
                    <param name="left" type="float"/>
                    <param name="leftoff" type="int"/>
                    <param name="right" type="float"/>
                    <param name="rightoff" type="int"/>
                </params>
                <declaration name="x1" type="float" line="373"/>
                <declaration name="y1" type="float" line="374"/>
                <declaration name="ctrlx" type="float" line="375"/>
                <declaration name="ctrly" type="float" line="376"/>
                <declaration name="x2" type="float" line="377"/>
                <declaration name="y2" type="float" line="378"/>
                <scope line="379"/>
                <scope line="383"/>
                <scope line="393"/>
                <scope line="399"/>
            </method>
            <method name="subdivideQuadAt" type="void" line="410">
                <params>
                    <param name="t" type="float"/>
                    <param name="src" type="float"/>
                    <param name="srcoff" type="int"/>
                    <param name="left" type="float"/>
                    <param name="leftoff" type="int"/>
                    <param name="right" type="float"/>
                    <param name="rightoff" type="int"/>
                </params>
                <declaration name="x1" type="float" line="411"/>
                <declaration name="y1" type="float" line="412"/>
                <declaration name="ctrlx" type="float" line="413"/>
                <declaration name="ctrly" type="float" line="414"/>
                <declaration name="x2" type="float" line="415"/>
                <declaration name="y2" type="float" line="416"/>
                <scope line="417"/>
                <scope line="421"/>
                <scope line="431"/>
                <scope line="437"/>
            </method>
            <method name="subdivideAt" type="void" line="448">
                <params>
                    <param name="t" type="float"/>
                    <param name="src" type="float"/>
                    <param name="srcoff" type="int"/>
                    <param name="left" type="float"/>
                    <param name="leftoff" type="int"/>
                    <param name="right" type="float"/>
                    <param name="rightoff" type="int"/>
                    <param name="size" type="int"/>
                </params>
            </method>
        </class>
    </source>