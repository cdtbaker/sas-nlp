<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.java2d">
        <import package="java.lang.ref.Reference"/>
        <import package="java.lang.ref.ReferenceQueue"/>
        <import package="java.lang.ref.PhantomReference"/>
        <import package="java.lang.ref.WeakReference"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Hashtable"/>
        <class name="Disposer" line="8">
            <implements interface="Runnable"/>
            <javadoc line="8">
                This class is used for registering and disposing the native
                  data associated with java objects.
                  The object can register itself by calling one of the addRecord
                  methods and providing either the pointer to the native disposal
                  method or a descendant of the DisposerRecord class with overridden
                  dispose() method.
                  When the object becomes unreachable, the dispose() method
                  of the associated DisposerRecord object will be called.                
                <see>
                    DisposerRecord                    
                </see>
            </javadoc>
            <declaration name="queue" type="ReferenceQueue" line="20"/>
            <declaration name="records" type="Hashtable" line="21"/>
            <declaration name="disposerInstance" type="Disposer" line="22"/>
            <declaration name="WEAK" type="int" line="23"/>
            <declaration name="PHANTOM" type="int" line="24"/>
            <declaration name="refType" type="int" line="25"/>
            <scope line="26">
                <declaration name="type" type="String" line="29"/>
                <scope line="30">
                    <scope line="31"/>
                    <scope line="35"/>
                </scope>
                <anonymous_class line="41">
                    <method name="run" type="Object" line="42">
                        <declaration name="tg" type="ThreadGroup" line="43"/>
                        <declaration name="t" type="Thread" line="45"/>
                    </method>
                </anonymous_class>
            </scope>
            <javadoc line="55">
                Registers the object and the native data for later disposal.                
                <param>
                    target Object to be registered                    
                </param>
                <param>
                    disposeMethod pointer to the native disposal method                    
                </param>
                <param>
                    pData pointer to the data to be passed to the
                      native disposal method                    
                </param>
            </javadoc>
            <method name="addRecord" type="void" line="62">
                <params>
                    <param name="target" type="Object"/>
                    <param name="disposeMethod" type="long"/>
                    <param name="pData" type="long"/>
                </params>
            </method>
            <javadoc line="65">
                Registers the object and the native data for later disposal.                
                <param>
                    target Object to be registered                    
                </param>
                <param>
                    rec the associated DisposerRecord object                    
                </param>
                <see>
                    DisposerRecord                    
                </see>
            </javadoc>
            <method name="addRecord" type="void" line="71">
                <params>
                    <param name="target" type="Object"/>
                    <param name="rec" type="DisposerRecord"/>
                </params>
            </method>
            <javadoc line="74">
                Performs the actual registration of the target object to be disposed.                
                <param>
                    target Object to be registered, or if target is an instance
                      of DisposerTarget, its associated disposer referent
                      will be the Object that is registered                    
                </param>
                <param>
                    rec the associated DisposerRecord object                    
                </param>
                <see>
                    DisposerRecord                    
                </see>
            </javadoc>
            <method name="add" type="void" line="82">
                <params>
                    <param name="target" type="Object"/>
                    <param name="rec" type="DisposerRecord"/>
                </params>
                <scope line="83"/>
                <declaration name="ref" type="java.lang.ref.Reference" line="86"/>
                <scope line="87"/>
                <scope line="90"/>
            </method>
            <method name="run" type="void" line="95">
                <scope line="96">
                    <scope line="97">
                        <declaration name="obj" type="Object" line="98"/>
                        <declaration name="rec" type="DisposerRecord" line="100"/>
                    </scope>
                    <scope line="106"/>
                </scope>
            </method>
            <interface name="PollDisposable"/>
            <declaration name="deferredRecords" type="ArrayList&amp;lt;DisposerRecord&amp;gt;" line="114"/>
            <method name="clearDeferredRecords" type="void" line="115">
                <scope line="116"/>
                <scope line="119">
                    <scope line="120">
                        <declaration name="rec" type="DisposerRecord" line="121"/>
                    </scope>
                    <scope line="124"/>
                </scope>
            </method>
            <declaration name="pollingQueue" type="boolean" line="131"/>
            <method name="pollRemove" type="void" line="132">
                <scope line="133"/>
                <declaration name="obj" type="Object" line="136"/>
                <declaration name="freed" type="int" line="138"/>
                <declaration name="deferred" type="int" line="139"/>
                <scope line="140">
                    <scope line="141">
                        <declaration name="rec" type="DisposerRecord" line="144"/>
                        <scope line="145"/>
                        <scope line="150">
                            <scope line="151"/>
                            <scope line="155"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="162"/>
                <scope line="166"/>
            </method>
            <method name="initIDs" type="void" line="170"/>
            <method name="addReference" type="void" line="171">
                <params>
                    <param name="ref" type="Reference"/>
                    <param name="rec" type="DisposerRecord"/>
                </params>
            </method>
            <method name="addObjectRecord" type="void" line="174">
                <params>
                    <param name="obj" type="Object"/>
                    <param name="rec" type="DisposerRecord"/>
                </params>
            </method>
            <method name="getQueue" type="ReferenceQueue" line="177"/>
        </class>
    </source>