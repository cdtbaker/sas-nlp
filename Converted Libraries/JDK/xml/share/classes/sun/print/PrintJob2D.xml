<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.print">
        <import package="java.awt.Dimension"/>
        <import package="java.awt.Frame"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.PrintJob"/>
        <import package="java.awt.JobAttributes"/>
        <import package="java.awt.JobAttributes"/>
        <import package="java.awt.PageAttributes"/>
        <import package="java.awt.PageAttributes"/>
        <import package="java.awt.print.PageFormat"/>
        <import package="java.awt.print.Paper"/>
        <import package="java.awt.print.Printable"/>
        <import package="java.awt.print.PrinterException"/>
        <import package="java.awt.print.PrinterJob"/>
        <import package="java.io.File"/>
        <import package="java.io.FilePermission"/>
        <import package="java.io.IOException"/>
        <import package="java.net.URI"/>
        <import package="java.net.URISyntaxException"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.Properties"/>
        <import package="javax.print.PrintService"/>
        <import package="javax.print.attribute.HashPrintRequestAttributeSet"/>
        <import package="javax.print.attribute.PrintRequestAttributeSet"/>
        <import package="javax.print.attribute.ResolutionSyntax"/>
        <import package="javax.print.attribute.Size2DSyntax"/>
        <import package="javax.print.attribute.standard.Chromaticity"/>
        <import package="javax.print.attribute.standard.Copies"/>
        <import package="javax.print.attribute.standard.Destination"/>
        <import package="javax.print.attribute.standard.DialogTypeSelection"/>
        <import package="javax.print.attribute.standard.JobName"/>
        <import package="javax.print.attribute.standard.MediaSize"/>
        <import package="javax.print.attribute.standard.PrintQuality"/>
        <import package="javax.print.attribute.standard.PrinterResolution"/>
        <import package="javax.print.attribute.standard.SheetCollate"/>
        <import package="javax.print.attribute.standard.Sides"/>
        <import package="javax.print.attribute.standard.Media"/>
        <import package="javax.print.attribute.standard.OrientationRequested"/>
        <import package="javax.print.attribute.standard.MediaSizeName"/>
        <import package="javax.print.attribute.standard.PageRanges"/>
        <import package="sun.print.SunPageSelection"/>
        <import package="sun.print.SunMinMaxPage"/>
        <class name="PrintJob2D" line="44">
            <extends class="PrintJob"/>
            <implements interface="Printable"/>
            <implements interface="Runnable"/>
            <javadoc line="44">
                A class which initiates and executes a print job using
                  the underlying PrinterJob graphics conversions.                
                <see>
                    Toolkit#getPrintJob                    
                </see>
            </javadoc>
            <declaration name="SIZES" type="MediaType" line="50"/>
            <declaration name="JAVAXSIZES" type="MediaSizeName" line="51"/>
            <declaration name="WIDTHS" type="int" line="52"/>
            <declaration name="LENGTHS" type="int" line="53"/>
            <declaration name="frame" type="Frame" line="54"/>
            <declaration name="docTitle" type="String" line="55"/>
            <declaration name="jobAttributes" type="JobAttributes" line="56"/>
            <declaration name="pageAttributes" type="PageAttributes" line="57"/>
            <declaration name="attributes" type="PrintRequestAttributeSet" line="58"/>
            <declaration name="printerJob" type="PrinterJob" line="59"/>
            <javadoc line="59">
                The PrinterJob being uses to implement the PrintJob.                
            </javadoc>
            <declaration name="pageFormat" type="PageFormat" line="63"/>
            <javadoc line="63">
                The size of the page being used for the PrintJob.                
            </javadoc>
            <declaration name="graphicsToBeDrawn" type="MessageQ" line="67"/>
            <javadoc line="67">
                The PrinterJob and the application run on different
                  threads and communicate through a pair of message
                  queues. This queue is the list of Graphics that
                  the PrinterJob has requested rendering for, but
                  for which the application has not yet called getGraphics().
                  In practice the length of this message queue is always
                  0 or 1.                
            </javadoc>
            <declaration name="graphicsDrawn" type="MessageQ" line="77"/>
            <javadoc line="77">
                Used to communicate between the application&apos;s thread
                  and the PrinterJob&apos;s thread this message queue holds
                  the list of Graphics into which the application has
                  finished drawing, but that have not yet been returned
                  to the PrinterJob thread. Again, in practice, the
                  length of this message queue is always 0 or 1.                
            </javadoc>
            <declaration name="currentGraphics" type="Graphics2D" line="86"/>
            <javadoc line="86">
                The last Graphics returned to the application via
                  getGraphics. This is the Graphics into which the
                  application is currently drawing.                
            </javadoc>
            <declaration name="pageIndex" type="int" line="92"/>
            <javadoc line="92">
                The zero based index of the page currently being rendered
                  by the application.                
            </javadoc>
            <declaration name="DEST_PROP" type="String" line="97"/>
            <declaration name="PRINTER" type="String" line="98"/>
            <declaration name="FILE" type="String" line="99"/>
            <declaration name="PRINTER_PROP" type="String" line="100"/>
            <declaration name="FILENAME_PROP" type="String" line="101"/>
            <declaration name="NUMCOPIES_PROP" type="String" line="102"/>
            <declaration name="OPTIONS_PROP" type="String" line="103"/>
            <declaration name="ORIENT_PROP" type="String" line="104"/>
            <declaration name="PORTRAIT" type="String" line="105"/>
            <declaration name="LANDSCAPE" type="String" line="106"/>
            <declaration name="PAPERSIZE_PROP" type="String" line="107"/>
            <declaration name="LETTER" type="String" line="108"/>
            <declaration name="LEGAL" type="String" line="109"/>
            <declaration name="EXECUTIVE" type="String" line="110"/>
            <declaration name="A4" type="String" line="111"/>
            <declaration name="props" type="Properties" line="112"/>
            <declaration name="options" type="String" line="113"/>
            <declaration name="printerJobThread" type="Thread" line="114"/>
            <javadoc line="114">
                The thread on which PrinterJob is running.
                  This is different than the applications thread.                
            </javadoc>
            <method name="PrintJob2D" type="constructor" line="119">
                <params>
                    <param name="frame" type="Frame"/>
                    <param name="doctitle" type="String"/>
                    <param name="props" type="Properties"/>
                </params>
            </method>
            <method name="PrintJob2D" type="constructor" line="126">
                <params>
                    <param name="frame" type="Frame"/>
                    <param name="doctitle" type="String"/>
                    <param name="jobAttributes" type="JobAttributes"/>
                    <param name="pageAttributes" type="PageAttributes"/>
                </params>
            </method>
            <method name="initPrintJob2D" type="void" line="129">
                <params>
                    <param name="frame" type="Frame"/>
                    <param name="doctitle" type="String"/>
                    <param name="jobAttributes" type="JobAttributes"/>
                    <param name="pageAttributes" type="PageAttributes"/>
                </params>
                <declaration name="security" type="SecurityManager" line="130"/>
                <scope line="131"/>
                <scope line="134"/>
                <declaration name="pageRanges" type="int[][]" line="141"/>
                <declaration name="first" type="int" line="142"/>
                <declaration name="last" type="int" line="143"/>
                <declaration name="res" type="int[]" line="147"/>
                <scope line="148"/>
                <declaration name="dest" type="DestinationType" line="151"/>
                <scope line="152">
                    <declaration name="destStr" type="String" line="154"/>
                    <scope line="155">
                        <declaration name="f" type="File" line="156"/>
                        <scope line="157">
                            <scope line="158"/>
                        </scope>
                        <scope line="162"/>
                        <scope line="165"/>
                        <declaration name="pFile" type="File" line="167"/>
                        <scope line="168"/>
                    </scope>
                </scope>
            </method>
            <method name="printDialog" type="boolean" line="174">
                <declaration name="proceedWithPrint" type="boolean" line="175"/>
                <scope line="177"/>
                <declaration name="d" type="DialogType" line="180"/>
                <declaration name="pServ" type="PrintService" line="181"/>
                <scope line="182"/>
                <declaration name="select" type="DefaultSelectionType" line="186"/>
                <scope line="187"/>
                <scope line="190"/>
                <scope line="193"/>
                <scope line="196"/>
                <scope line="199"/>
                <scope line="202">
                    <scope line="203"/>
                    <scope line="206"/>
                    <scope line="209">
                        <scope line="210">
                            <scope line="212"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="220">
                    <declaration name="jname" type="JobName" line="221"/>
                    <scope line="222"/>
                    <declaration name="media" type="Media" line="226"/>
                    <declaration name="mediaSize" type="MediaSize" line="227"/>
                    <scope line="228"/>
                    <declaration name="p" type="Paper" line="231"/>
                    <scope line="232"/>
                    <scope line="235"/>
                    <scope line="238"/>
                    <declaration name="orient" type="OrientationRequested" line="242"/>
                    <scope line="243"/>
                    <scope line="246"/>
                    <scope line="249"/>
                </scope>
            </method>
            <method name="updateAttributes" type="void" line="256">
                <declaration name="c" type="Copies" line="257"/>
                <declaration name="sel" type="SunPageSelection" line="259"/>
                <scope line="260"/>
                <scope line="263"/>
                <scope line="266"/>
                <declaration name="dest" type="Destination" line="269"/>
                <scope line="270"/>
                <scope line="274"/>
                <declaration name="serv" type="PrintService" line="277"/>
                <scope line="278"/>
                <declaration name="range" type="PageRanges" line="281"/>
                <declaration name="members" type="int[][]" line="282"/>
                <declaration name="collation" type="SheetCollate" line="284"/>
                <scope line="285"/>
                <scope line="288"/>
                <declaration name="sides" type="Sides" line="291"/>
                <scope line="292"/>
                <scope line="295"/>
                <scope line="298"/>
                <declaration name="color" type="Chromaticity" line="301"/>
                <scope line="302"/>
                <scope line="305"/>
                <declaration name="orient" type="OrientationRequested" line="308"/>
                <scope line="309"/>
                <scope line="312"/>
                <declaration name="qual" type="PrintQuality" line="315"/>
                <scope line="316"/>
                <scope line="319"/>
                <scope line="322"/>
                <declaration name="msn" type="Media" line="325"/>
                <scope line="326">
                    <declaration name="mType" type="MediaType" line="327"/>
                    <scope line="328"/>
                </scope>
            </method>
            <method name="debugPrintAttributes" type="void" line="334">
                <params>
                    <param name="ja" type="boolean"/>
                    <param name="pa" type="boolean"/>
                </params>
                <scope line="335"/>
                <scope line="338"/>
            </method>
            <method name="copyAttributes" type="void" line="342">
                <params>
                    <param name="printServ" type="PrintService"/>
                </params>
                <declaration name="pServ" type="PrintService" line="345"/>
                <declaration name="printerName" type="String" line="346"/>
                <scope line="347">
                    <declaration name="services" type="PrintService[]" line="348"/>
                    <scope line="349">
                        <scope line="350">
                            <scope line="351"/>
                        </scope>
                    </scope>
                    <scope line="358"/>
                </scope>
                <declaration name="dest" type="DestinationType" line="361"/>
                <scope line="362">
                    <declaration name="fileName" type="String" line="363"/>
                    <declaration name="defaultDest" type="Destination" line="364"/>
                    <scope line="365"/>
                    <scope line="368">
                        <declaration name="uri" type="URI" line="369"/>
                        <scope line="370">
                            <scope line="371">
                                <scope line="372"/>
                            </scope>
                            <scope line="376"/>
                        </scope>
                        <scope line="381">
                            <scope line="382"/>
                            <scope line="386"/>
                        </scope>
                        <scope line="389"/>
                    </scope>
                </scope>
                <declaration name="sType" type="SidesType" line="395"/>
                <scope line="396"/>
                <scope line="399"/>
                <scope line="402"/>
                <declaration name="hType" type="MultipleDocumentHandlingType" line="405"/>
                <scope line="406"/>
                <scope line="409"/>
                <scope line="414"/>
                <scope line="417"/>
                <scope line="421"/>
                <scope line="425"/>
                <declaration name="media" type="MediaType" line="429"/>
                <declaration name="msn" type="MediaSizeName" line="430"/>
                <scope line="431"/>
                <declaration name="qType" type="PrintQualityType" line="434"/>
                <scope line="435"/>
                <scope line="438"/>
                <scope line="441"/>
            </method>
            <javadoc line="445">
                Gets a Graphics object that will draw to the next page.
                  The page is sent to the printer when the graphics
                  object is disposed.  This graphics object will also implement
                  the PrintGraphics interface.                
                <see>
                    PrintGraphics                    
                </see>
            </javadoc>
            <method name="getGraphics" type="Graphics" line="452">
                <declaration name="printGraphics" type="Graphics" line="453"/>
                <scope line="454">
                    <scope line="456"/>
                </scope>
                <scope line="461"/>
                <scope line="466"/>
                <scope line="471">
                    <declaration name="awtScale" type="double" line="473"/>
                </scope>
            </method>
            <javadoc line="479">
                Returns the dimensions of the page in pixels.
                  The resolution of the page is chosen so that it
                  is similar to the screen resolution.
                  Except (since 1.3) when the application specifies a resolution.
                  In that case it it scaled accordingly.                
            </javadoc>
            <method name="getPageDimension" type="Dimension" line="486">
                <declaration name="wid" type="double" line="487"/>
                <scope line="488"/>
                <scope line="492"/>
            </method>
            <method name="getPageResolutionInternal" type="double" line="499">
                <scope line="500">
                    <declaration name="res" type="int[]" line="501"/>
                    <scope line="502"/>
                    <scope line="505"/>
                </scope>
                <scope line="509"/>
            </method>
            <javadoc line="513">
                Returns the resolution of the page in pixels per inch.
                  Note that this doesn&apos;t have to correspond to the physical
                  resolution of the printer.                
            </javadoc>
            <method name="getPageResolution" type="int" line="518"/>
            <javadoc line="521">
                Returns true if the last page will be printed first.                
            </javadoc>
            <method name="lastPageFirst" type="boolean" line="524"/>
            <javadoc line="527">
                Ends the print job and does any necessary cleanup.                
            </javadoc>
            <method name="end" type="void" line="530">
                <scope line="532"/>
                <scope line="536">
                    <scope line="537"/>
                    <scope line="540"/>
                </scope>
            </method>
            <javadoc line="544">
                Ends this print job once it is no longer referenced.                
                <see>
                    #end                    
                </see>
            </javadoc>
            <method name="finalize" type="void" line="548"/>
            <javadoc line="551">
                Prints the page at the specified index into the specified{@link Graphics} context in the specified
                  format.  A &lt;code&gt;PrinterJob&lt;/code&gt; calls the
                  &lt;code&gt;Printable&lt;/code&gt; interface to request that a page be
                  rendered into the context specified by
                  &lt;code&gt;graphics&lt;/code&gt;.  The format of the page to be drawn is
                  specified by &lt;code&gt;pageFormat&lt;/code&gt;.  The zero based index
                  of the requested page is specified by &lt;code&gt;pageIndex&lt;/code&gt;.
                  If the requested page does not exist then this method returns
                  NO_SUCH_PAGE; otherwise PAGE_EXISTS is returned.
                  The &lt;code&gt;Graphics&lt;/code&gt; class or subclass implements the{@link PrinterGraphics} interface to provide additional
                  information.  If the &lt;code&gt;Printable&lt;/code&gt; object
                  aborts the print job then it throws a {@link PrinterException}.                
                <param>
                    graphics the context into which the page is drawn                    
                </param>
                <param>
                    pageFormat the size and orientation of the page being drawn                    
                </param>
                <param>
                    pageIndex the zero based index of the page to be drawn                    
                </param>
                <return>
                    PAGE_EXISTS if the page is rendered successfully
                      or NO_SUCH_PAGE if <code>pageIndex</code> specifies a
                      non-existent page.                    
                </return>
                <exception>
                    java.awt.print.PrinterExceptionthrown when the print job is terminated.                    
                </exception>
            </javadoc>
            <method name="print" type="int" line="572">
                <params>
                    <param name="graphics" type="Graphics"/>
                    <param name="pageFormat" type="PageFormat"/>
                    <param name="pageIndex" type="int"/>
                </params>
                <declaration name="result" type="int" line="573"/>
                <scope line="575"/>
                <scope line="578"/>
            </method>
            <method name="startPrinterJobThread" type="void" line="583"/>
            <method name="run" type="void" line="587">
                <scope line="588"/>
                <scope line="591"/>
            </method>
            <class name="MessageQ" line="596">
                <declaration name="qid" type="String" line="597"/>
                <declaration name="queue" type="ArrayList" line="598"/>
                <method name="MessageQ" type="constructor" line="599">
                    <params>
                        <param name="id" type="String"/>
                    </params>
                </method>
                <method name="closeWhenEmpty" type="void" line="602">
                    <scope line="603">
                        <scope line="604"/>
                        <scope line="607"/>
                    </scope>
                </method>
                <method name="close" type="void" line="613"/>
                <method name="append" type="boolean" line="617">
                    <params>
                        <param name="g" type="Graphics2D"/>
                    </params>
                    <declaration name="queued" type="boolean" line="618"/>
                    <scope line="619"/>
                </method>
                <method name="pop" type="Graphics2D" line="626">
                    <declaration name="g" type="Graphics2D" line="627"/>
                    <scope line="628">
                        <scope line="629"/>
                        <scope line="633">
                            <scope line="634"/>
                            <scope line="637"/>
                        </scope>
                    </scope>
                </method>
                <method name="isClosed" type="boolean" line="643"/>
            </class>
            <method name="getSize" type="int[]" line="647">
                <params>
                    <param name="mType" type="MediaType"/>
                </params>
                <declaration name="dim" type="int[]" line="648"/>
                <scope line="651">
                    <scope line="652"/>
                </scope>
            </method>
            <method name="mapMedia" type="MediaSizeName" line="660">
                <params>
                    <param name="mType" type="MediaType"/>
                </params>
                <declaration name="media" type="MediaSizeName" line="661"/>
                <declaration name="length" type="int" line="662"/>
                <scope line="663">
                    <scope line="664">
                        <scope line="665"/>
                        <scope line="669">
                            <declaration name="w" type="float" line="671"/>
                            <declaration name="h" type="float" line="672"/>
                            <scope line="673"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="unMapMedia" type="MediaType" line="682">
                <params>
                    <param name="mSize" type="MediaSizeName"/>
                </params>
                <declaration name="media" type="MediaType" line="683"/>
                <declaration name="length" type="int" line="684"/>
                <scope line="685">
                    <scope line="686">
                        <scope line="687"/>
                    </scope>
                </scope>
            </method>
            <method name="translateInputProps" type="void" line="695">
                <scope line="696"/>
                <declaration name="str" type="String" line="699"/>
                <scope line="701">
                    <scope line="702"/>
                    <scope line="705"/>
                </scope>
                <scope line="710"/>
                <scope line="714"/>
                <scope line="718"/>
                <scope line="723">
                    <scope line="724"/>
                    <scope line="727"/>
                </scope>
                <scope line="732">
                    <scope line="733"/>
                    <scope line="736"/>
                    <scope line="739"/>
                    <scope line="742"/>
                </scope>
            </method>
            <method name="translateOutputProps" type="void" line="747">
                <scope line="748"/>
                <declaration name="str" type="String" line="751"/>
                <scope line="754"/>
                <scope line="758"/>
                <declaration name="copies" type="int" line="761"/>
                <scope line="762"/>
                <scope line="766"/>
                <declaration name="media" type="MediaType" line="770"/>
                <scope line="771"/>
                <scope line="774"/>
                <scope line="777"/>
                <scope line="780"/>
                <scope line="783"/>
            </method>
            <method name="throwPrintToFile" type="void" line="788">
                <declaration name="security" type="SecurityManager" line="789"/>
                <declaration name="printToFilePermission" type="FilePermission" line="790"/>
                <scope line="791">
                    <scope line="792"/>
                </scope>
            </method>
        </class>
    </source>