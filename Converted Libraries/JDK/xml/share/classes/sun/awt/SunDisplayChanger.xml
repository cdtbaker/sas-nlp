<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt">
        <import package="java.awt.IllegalComponentStateException"/>
        <import package="java.util.Collections"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.Map"/>
        <import package="java.util.Set"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.WeakHashMap"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <class name="SunDisplayChanger" line="10">
            <javadoc line="10">
                This class is used to aid in keeping track of DisplayChangedListeners and
                  notifying them when a display change has taken place. DisplayChangedListeners
                  are notified when the display&apos;s bit depth is changed, or when a top-level
                  window has been dragged onto another screen.
                  It is safe for a DisplayChangedListener to be added while the list is being
                  iterated.
                  The displayChanged() call is propagated after some occurrence (either
                  due to user action or some other application) causes the display mode
                  (e.g., depth or resolution) to change.  All heavyweight components need
                  to know when this happens because they need to create new surfaceData
                  objects based on the new depth.
                  displayChanged() is also called on Windows when they are moved from one
                  screen to another on a system equipped with multiple displays.                
            </javadoc>
            <declaration name="log" type="PlatformLogger" line="26"/>
            <declaration name="listeners" type="Map" line="27"/>
            <method name="SunDisplayChanger" type="constructor" line="28"/>
            <method name="add" type="void" line="30">
                <params>
                    <param name="theListener" type="DisplayChangedListener"/>
                </params>
                <scope line="31">
                    <scope line="32"/>
                </scope>
                <scope line="36"/>
            </method>
            <method name="remove" type="void" line="41">
                <params>
                    <param name="theListener" type="DisplayChangedListener"/>
                </params>
                <scope line="42">
                    <scope line="43"/>
                </scope>
                <scope line="47"/>
            </method>
            <method name="notifyListeners" type="void" line="52">
                <scope line="53"/>
                <declaration name="listClone" type="HashMap" line="56"/>
                <declaration name="cloneSet" type="Set" line="57"/>
                <scope line="58"/>
                <declaration name="itr" type="Iterator" line="62"/>
                <scope line="63">
                    <declaration name="current" type="DisplayChangedListener" line="64"/>
                    <scope line="65">
                        <scope line="66"/>
                    </scope>
                    <scope line="71"/>
                </scope>
            </method>
            <method name="notifyPaletteChanged" type="void" line="76">
                <scope line="77"/>
                <declaration name="listClone" type="HashMap" line="80"/>
                <declaration name="cloneSet" type="Set" line="81"/>
                <scope line="82"/>
                <declaration name="itr" type="Iterator" line="86"/>
                <scope line="87">
                    <declaration name="current" type="DisplayChangedListener" line="88"/>
                    <scope line="89">
                        <scope line="90"/>
                    </scope>
                    <scope line="95"/>
                </scope>
            </method>
        </class>
    </source>