<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt">
        <import package="java.lang.reflect.Array"/>
        <import package="java.util.EventListener"/>
        <class name="EventListenerAggregate" line="32">
            <javadoc line="32">
                A class that assists in managing {@link java.util.EventListener}s of
                  the specified type. Its instance holds an array of listeners of the same
                  type and allows to perform the typical operations on the listeners.
                  This class is thread-safe.                
                <author>
                    Alexander Gerasimov                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="listenerList" type="EventListener[]" line="44"/>
            <javadoc line="46">
                Constructs an &lt;code&gt;EventListenerAggregate&lt;/code&gt; object.                
                <param>
                    listenerClass the type of the listeners to be managed by this object                    
                </param>
                <throws>
                    NullPointerException if <code>listenerClass</code> is
                      <code>null</code>                    
                </throws>
                <throws>
                    ClassCastException if <code>listenerClass</code> is not
                      assignable to <code>java.util.EventListener</code>                    
                </throws>
            </javadoc>
            <method name="EventListenerAggregate" type="constructor" line="56">
                <params>
                    <param name="listenerClass" type="Class"/>
                </params>
                <scope line="57"/>
                <scope line="61"/>
            </method>
            <method name="getListenerClass" type="Class" line="69"/>
            <javadoc line="73">
                Adds the listener to this aggregate.                
                <param>
                    listener the listener to be added                    
                </param>
                <throws>
                    ClassCastException if <code>listener</code> is not
                      an instatce of <code>listenerClass</code> specified
                      in the constructor                    
                </throws>
            </javadoc>
            <method name="add" type="void" line="82">
                <params>
                    <param name="listener" type="EventListener"/>
                </params>
                <comment line="85">
                    null is not an instance of any class                    
                </comment>
                <declaration name="listenerClass" type="Class" line="83"/>
                <scope line="85"/>
                <declaration name="tmp" type="EventListener[]" line="90"/>
            </method>
            <javadoc line="96">
                Removes a listener that is equal to the given one from this aggregate.
                  &lt;code&gt;equals()&lt;/code&gt; method is used to compare listeners.                
                <param>
                    listener the listener to be removed                    
                </param>
                <return>
                    <code>true</code> if this aggregate contained the specified
                      <code>listener</code>; <code>false</code> otherwise                    
                </return>
                <throws>
                    ClassCastException if <code>listener</code> is not
                      an instatce of <code>listenerClass</code> specified
                      in the constructor                    
                </throws>
            </javadoc>
            <method name="remove" type="boolean" line="109">
                <params>
                    <param name="listener" type="EventListener"/>
                </params>
                <comment line="112">
                    null is not an instance of any class                    
                </comment>
                <declaration name="listenerClass" type="Class" line="110"/>
                <scope line="112"/>
                <scope line="117">
                    <scope line="118">
                        <declaration name="tmp" type="EventListener[]" line="119"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="132">
                Returns an array of all the listeners contained in this aggregate.
                  The array is the data structure in which listeners are stored internally.
                  The runtime type of the returned array is &quot;array of &lt;code&gt;listenerClass&lt;/code&gt;&quot;
                  (&lt;code&gt;listenerClass&lt;/code&gt; has been specified as a parameter to
                  the constructor of this class).                
                <return>
                    all the listeners contained in this aggregate (an empty
                      array if there are no listeners)                    
                </return>
            </javadoc>
            <method name="getListenersInternal" type="EventListener[]" line="142"/>
            <javadoc line="146">
                Returns an array of all the listeners contained in this aggregate.
                  The array is a copy of the data structure in which listeners are stored
                  internally.
                  The runtime type of the returned array is &quot;array of &lt;code&gt;listenerClass&lt;/code&gt;&quot;
                  (&lt;code&gt;listenerClass&lt;/code&gt; has been specified as a parameter to
                  the constructor of this class).                
                <return>
                    a copy of all the listeners contained in this aggregate (an empty
                      array if there are no listeners)                    
                </return>
            </javadoc>
            <method name="getListenersCopy" type="EventListener[]" line="157"/>
            <javadoc line="161">
                Returns the number of lisetners in this aggregate.                
                <return>
                    the number of lisetners in this aggregate                    
                </return>
            </javadoc>
            <method name="size" type="int" line="166"/>
            <javadoc line="170">
                Returns &lt;code&gt;true&lt;/code&gt; if this aggregate contains no listeners,
                  &lt;code&gt;false&lt;/code&gt; otherwise.                
                <return>
                    <code>true</code> if this aggregate contains no listeners,
                      <code>false</code> otherwise                    
                </return>
            </javadoc>
            <method name="isEmpty" type="boolean" line="177"/>
        </class>
    </source>