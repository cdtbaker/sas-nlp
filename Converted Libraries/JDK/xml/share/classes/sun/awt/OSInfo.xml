<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt">
        <import package="java.security.PrivilegedAction"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Map"/>
        <import package="sun.awt.OSInfo.OSType"/>
        <class name="OSInfo" line="34">
            <comment line="46">
                The map windowsVersionMap must contain all windows version constants except WINDOWS_UNKNOWN,
                and so the method getWindowsVersion() will return the constant for known OS.
                It allows compare objects by &quot;==&quot; instead of &quot;equals&quot;.                
            </comment>
            <javadoc line="34">
                @author Pavel Porvatov                
            </javadoc>
            <declaration name="WINDOWS_UNKNOWN" type="WindowsVersion" line="50"/>
            <declaration name="WINDOWS_95" type="WindowsVersion" line="51"/>
            <declaration name="WINDOWS_98" type="WindowsVersion" line="52"/>
            <declaration name="WINDOWS_ME" type="WindowsVersion" line="53"/>
            <declaration name="WINDOWS_2000" type="WindowsVersion" line="54"/>
            <declaration name="WINDOWS_XP" type="WindowsVersion" line="55"/>
            <declaration name="WINDOWS_2003" type="WindowsVersion" line="56"/>
            <declaration name="WINDOWS_VISTA" type="WindowsVersion" line="57"/>
            <declaration name="OS_NAME" type="String" line="59"/>
            <declaration name="OS_VERSION" type="String" line="60"/>
            <declaration name="windowsVersionMap" type="Map&lt;String,WindowsVersion&gt;" line="62"/>
            <scope line="64"/>
            <declaration name="osTypeAction" type="PrivilegedAction&lt;OSType&gt;" line="74"/>
            <anonymous_class line="74">
                <method name="run" type="OSType" line="75"/>
            </anonymous_class>
            <method name="OSInfo" type="constructor" line="80">
                <comment line="81">
                    Don&apos;t allow to create instances                    
                </comment>
            </method>
            <javadoc line="84">
                Returns type of operating system.                
            </javadoc>
            <method name="getOSType" type="OSType" line="87">
                <comment line="103">
                    determine another OS here                    
                </comment>
                <declaration name="osName" type="String" line="88"/>
                <scope line="90">
                    <scope line="91"/>
                    <scope line="95"/>
                    <scope line="99"/>
                </scope>
            </method>
            <method name="getOSTypeAction" type="PrivilegedAction<OSType>" line="109"/>
            <method name="getWindowsVersion" type="WindowsVersion" line="113">
                <comment line="124">
                    Try parse version and put object into windowsVersionMap                    
                </comment>
                <declaration name="osVersion" type="String" line="114"/>
                <scope line="116"/>
                <scope line="120">
                    <declaration name="result" type="WindowsVersion" line="121"/>
                    <scope line="123">
                        <declaration name="arr" type="String[]" line="125"/>
                        <scope line="127">
                            <scope line="128"/>
                            <scope line="130"/>
                        </scope>
                        <scope line="133"/>
                    </scope>
                </scope>
            </method>
            <class name="WindowsVersion" line="144">
                <implements interface="Comparable">
                    <type_params>
                        <type_param name="WindowsVersion"/>
                    </type_params>
                </implements>
                <declaration name="major" type="int" line="145"/>
                <declaration name="minor" type="int" line="147"/>
                <method name="WindowsVersion" type="constructor" line="149">
                    <params>
                        <param name="major" type="int"/>
                        <param name="minor" type="int"/>
                    </params>
                </method>
                <method name="getMajor" type="int" line="154"/>
                <method name="getMinor" type="int" line="158"/>
                <method name="compareTo" type="int" line="162">
                    <params>
                        <param name="o" type="WindowsVersion"/>
                    </params>
                    <declaration name="result" type="int" line="163"/>
                    <scope line="165"/>
                </method>
                <method name="equals" type="boolean" line="172">
                    <params>
                        <param name="obj" type="Object"/>
                    </params>
                </method>
                <method name="hashCode" type="int" line="176"/>
                <method name="toString" type="String" line="180"/>
            </class>
        </class>
    </source>