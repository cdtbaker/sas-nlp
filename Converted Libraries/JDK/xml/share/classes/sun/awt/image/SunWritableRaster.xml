<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.image">
        <import package="java.awt.Point"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.Image"/>
        <import package="java.awt.image.DataBuffer"/>
        <import package="java.awt.image.DataBufferByte"/>
        <import package="java.awt.image.DataBufferUShort"/>
        <import package="java.awt.image.DataBufferInt"/>
        <import package="java.awt.image.SampleModel"/>
        <import package="java.awt.image.WritableRaster"/>
        <import package="sun.java2d.StateTrackable.State"/>
        <import package="sun.java2d.SurfaceData"/>
        <import package="sun.java2d.StateTrackableDelegate"/>
        <class name="SunWritableRaster" line="14">
            <extends class="WritableRaster"/>
            <javadoc line="14">
                This class exists as a middle layer between WritableRaster and its
                  implementation specific subclasses (ByteComponentRaster, ShortBandedRaster,
                  etc).
                  It provides utilities to steal the data arrays from the standard DataBuffer
                  types and also steals the StateTrackableDelegate from the associated
                  DataBuffer so that it can be updated when the data is changed.                
            </javadoc>
            <declaration name="stealer" type="DataStealer" line="23"/>
            <interface name="DataStealer">
                <method name="getData" type="byte[]" line="25"/>
                <method name="getData" type="short[]" line="26"/>
                <method name="getData" type="int[]" line="27"/>
                <method name="getTrackable" type="StateTrackableDelegate" line="28"/>
                <method name="setTrackable" type="void" line="29"/>
            </interface>
            <method name="setDataStealer" type="void" line="31">
                <params>
                    <param name="ds" type="DataStealer"/>
                </params>
                <scope line="32"/>
            </method>
            <method name="stealData" type="byte[]" line="37">
                <params>
                    <param name="dbb" type="DataBufferByte"/>
                    <param name="bank" type="int"/>
                </params>
            </method>
            <method name="stealData" type="short[]" line="40">
                <params>
                    <param name="dbus" type="DataBufferUShort"/>
                    <param name="bank" type="int"/>
                </params>
            </method>
            <method name="stealData" type="int[]" line="43">
                <params>
                    <param name="dbi" type="DataBufferInt"/>
                    <param name="bank" type="int"/>
                </params>
            </method>
            <method name="stealTrackable" type="StateTrackableDelegate" line="46">
                <params>
                    <param name="db" type="DataBuffer"/>
                </params>
            </method>
            <method name="setTrackable" type="void" line="49">
                <params>
                    <param name="db" type="DataBuffer"/>
                    <param name="trackable" type="StateTrackableDelegate"/>
                </params>
            </method>
            <method name="makeTrackable" type="void" line="52">
                <params>
                    <param name="db" type="DataBuffer"/>
                </params>
            </method>
            <method name="markDirty" type="void" line="55">
                <params>
                    <param name="db" type="DataBuffer"/>
                </params>
            </method>
            <method name="markDirty" type="void" line="58">
                <params>
                    <param name="wr" type="WritableRaster"/>
                </params>
                <scope line="59"/>
                <scope line="62"/>
            </method>
            <method name="markDirty" type="void" line="66">
                <params>
                    <param name="img" type="Image"/>
                </params>
            </method>
            <declaration name="theTrackable" type="StateTrackableDelegate" line="69"/>
            <method name="SunWritableRaster" type="constructor" line="70">
                <params>
                    <param name="sampleModel" type="SampleModel"/>
                    <param name="origin" type="Point"/>
                </params>
            </method>
            <method name="SunWritableRaster" type="constructor" line="74">
                <params>
                    <param name="sampleModel" type="SampleModel"/>
                    <param name="dataBuffer" type="DataBuffer"/>
                    <param name="origin" type="Point"/>
                </params>
            </method>
            <method name="SunWritableRaster" type="constructor" line="78">
                <params>
                    <param name="sampleModel" type="SampleModel"/>
                    <param name="dataBuffer" type="DataBuffer"/>
                    <param name="aRegion" type="Rectangle"/>
                    <param name="sampleModelTranslate" type="Point"/>
                    <param name="parent" type="WritableRaster"/>
                </params>
            </method>
            <javadoc line="82">
                Mark the TrackableDelegate of the associated DataBuffer dirty.                
            </javadoc>
            <method name="markDirty" type="void" line="85"/>
        </class>
    </source>