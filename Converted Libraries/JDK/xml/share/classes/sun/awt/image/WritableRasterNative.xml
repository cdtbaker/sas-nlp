<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.image">
        <import package="java.awt.Point"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.awt.image.ColorModel"/>
        <import package="java.awt.image.DataBuffer"/>
        <import package="java.awt.image.DirectColorModel"/>
        <import package="java.awt.image.PixelInterleavedSampleModel"/>
        <import package="java.awt.image.SampleModel"/>
        <import package="java.awt.image.SinglePixelPackedSampleModel"/>
        <import package="java.awt.image.WritableRaster"/>
        <import package="sun.java2d.SurfaceData"/>
        <class name="WritableRasterNative" line="12">
            <extends class="WritableRaster"/>
            <javadoc line="12">
                WritableRasterNative
                  This class exists to wrap a native DataBuffer object.  The
                  standard WritableRaster object assumes that a DataBuffer
                  of a given type (e.g., DataBuffer.TYPE_INT) implies a certain
                  subclass (e.g., DataBufferInt).  But this is not always the
                  case.  DataBufferNative, for example, may allow access to
                  integer-based data, but it is not DataBufferInt (which is a
                  final class and cannot be subclassed).
                  So this class exists simply to allow the WritableRaster
                  functionality for this new kind of DataBuffer object.                
            </javadoc>
            <method name="createNativeRaster" type="WritableRasterNative" line="25">
                <params>
                    <param name="sm" type="SampleModel"/>
                    <param name="db" type="DataBuffer"/>
                </params>
            </method>
            <method name="WritableRasterNative" type="constructor" line="28">
                <params>
                    <param name="sm" type="SampleModel"/>
                    <param name="db" type="DataBuffer"/>
                </params>
            </method>
            <method name="createNativeRaster" type="WritableRasterNative" line="31">
                <params>
                    <param name="cm" type="ColorModel"/>
                    <param name="sd" type="SurfaceData"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="smHw" type="SampleModel" line="32"/>
                <declaration name="dataType" type="int" line="33"/>
                <declaration name="scanStride" type="int" line="34"/>
                <scope line="38"/>
                <scope line="41"/>
                <declaration name="bandOffsets" type="int[]" line="44"/>
                <declaration name="bitMasks" type="int[]" line="51"/>
                <declaration name="dcm" type="DirectColorModel" line="52"/>
                <declaration name="dbn" type="DataBuffer" line="71"/>
            </method>
        </class>
    </source>