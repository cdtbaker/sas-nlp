<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.image">
        <import package="java.awt.image"/>
        <import package="java.io.InputStream"/>
        <import package="java.io.IOException"/>
        <import package="java.io.BufferedInputStream"/>
        <import package="java.util.Hashtable"/>
        <class name="InputStreamImageSource" line="34">
            <implements interface="ImageProducer"/>
            <implements interface="ImageFetchable"/>
            <declaration name="consumers" type="ImageConsumerQueue" line="37"/>
            <declaration name="decoder" type="ImageDecoder" line="39"/>
            <declaration name="decoders" type="ImageDecoder" line="40"/>
            <declaration name="awaitingFetch" type="boolean" line="42"/>
            <method name="checkSecurity" type="boolean" line="44"/>
            <method name="countConsumers" type="int" line="46">
                <params>
                    <param name="cq" type="ImageConsumerQueue"/>
                </params>
                <declaration name="i" type="int" line="47"/>
                <scope line="48"/>
            </method>
            <method name="countConsumers" type="int" line="55">
                <declaration name="id" type="ImageDecoder" line="56"/>
                <declaration name="i" type="int" line="57"/>
                <scope line="58"/>
            </method>
            <method name="addConsumer" type="void" line="65">
                <params>
                    <param name="ic" type="ImageConsumer"/>
                </params>
            </method>
            <method name="printQueue" type="void" line="69">
                <params>
                    <param name="cq" type="ImageConsumerQueue"/>
                    <param name="prefix" type="String"/>
                </params>
                <scope line="70"/>
            </method>
            <method name="printQueues" type="void" line="76">
                <params>
                    <param name="title" type="String"/>
                </params>
                <scope line="79"/>
            </method>
            <method name="addConsumer" type="void" line="86">
                <params>
                    <param name="ic" type="ImageConsumer"/>
                    <param name="produce" type="boolean"/>
                </params>
                <comment line="90">
                    This consumer is already being fed.                    
                </comment>
                <comment line="112">
                    If there are two different security contexts that both                    
                </comment>
                <comment line="113">
                    have a handle on the same ImageConsumer, then there has                    
                </comment>
                <comment line="114">
                    been a security breach and whether or not they trade                    
                </comment>
                <comment line="115">
                    image data is small fish compared to what they could be                    
                </comment>
                <comment line="116">
                    trading.  Throw a Security exception anyway...                    
                </comment>
                <scope line="88">
                    <scope line="89"/>
                </scope>
                <declaration name="cq" type="ImageConsumerQueue" line="94"/>
                <scope line="95"/>
                <scope line="98"/>
                <scope line="102">
                    <scope line="103">
                        <declaration name="context" type="Object" line="104"/>
                        <declaration name="security" type="SecurityManager" line="105"/>
                        <scope line="106"/>
                        <scope line="109"/>
                        <scope line="111"/>
                    </scope>
                </scope>
                <scope line="123"/>
            </method>
            <method name="isConsumer" type="boolean" line="128">
                <params>
                    <param name="ic" type="ImageConsumer"/>
                </params>
                <scope line="129">
                    <scope line="130"/>
                </scope>
            </method>
            <method name="errorAllConsumers" type="void" line="137">
                <params>
                    <param name="cq" type="ImageConsumerQueue"/>
                    <param name="needReload" type="boolean"/>
                </params>
                <scope line="138">
                    <scope line="139"/>
                </scope>
            </method>
            <method name="errorConsumer" type="void" line="146">
                <params>
                    <param name="cq" type="ImageConsumerQueue"/>
                    <param name="needReload" type="boolean"/>
                </params>
                <scope line="148"/>
            </method>
            <method name="removeConsumer" type="void" line="154">
                <params>
                    <param name="ic" type="ImageConsumer"/>
                </params>
                <scope line="155"/>
            </method>
            <method name="startProduction" type="void" line="161">
                <params>
                    <param name="ic" type="ImageConsumer"/>
                </params>
            </method>
            <method name="startProduction" type="void" line="165">
                <scope line="166">
                    <scope line="167"/>
                    <scope line="169">
                        <declaration name="cq" type="ImageConsumerQueue" line="170"/>
                    </scope>
                </scope>
            </method>
            <method name="stopProduction" type="void" line="177">
                <scope line="178"/>
            </method>
            <method name="requestTopDownLeftRightResend" type="void" line="184">
                <params>
                    <param name="ic" type="ImageConsumer"/>
                </params>
            </method>
            <method name="getDecoder" type="ImageDecoder" line="187"/>
            <method name="decoderForType" type="ImageDecoder" line="190">
                <params>
                    <param name="is" type="InputStream"/>
                    <param name="content_type" type="String"/>
                </params>
                <comment line="191">
                    Don&apos;t believe the content type - file extensions can                    
                </comment>
                <comment line="192">
                    lie.                    
                </comment>
                <comment line="193">
                    if (content_type.equals(&quot;imagegif&quot;)) {
                    return new GifImageDecoder(this, is);
                    } else if (content_type.equals(&quot;imagejpeg&quot;)) {
                    return new JPEGImageDecoder(this, is);
                    } else if (content_type.equals(&quot;imagex-xbitmap&quot;)) {
                    return new XbmImageDecoder(this, is);
                    }
                    else if (content_type == URL.content_jpeg) {
                    return new JpegImageDecoder(this, is);
                    } else if (content_type == URL.content_xbitmap) {
                    return new XbmImageDecoder(this, is);
                    } else if (content_type == URL.content_xpixmap) {
                    return new Xpm2ImageDecoder(this, is);
                    }                    
                </comment>
            </method>
            <method name="getDecoder" type="ImageDecoder" line="213">
                <params>
                    <param name="is" type="InputStream"/>
                </params>
                <comment line="217">
                    changed to support png
                    is.mark(6);                    
                </comment>
                <comment line="227">
                    added to support png                    
                </comment>
                <comment line="230">
                    end of adding                    
                </comment>
                <comment line="240">
                    } else if (c1 == &apos;!&apos; &amp;&amp; c2 == &apos; &apos; &amp;&amp; c3 == &apos;X&apos; &amp;&amp; c4 == &apos;P&apos; &amp;&amp;                    
                </comment>
                <comment line="241">
                    c5 == &apos;M&apos; &amp;&amp; c6 == &apos;2&apos;) {                    
                </comment>
                <comment line="242">
                    return new Xpm2ImageDecoder(this, is);                    
                </comment>
                <comment line="243">
                    added to support png                    
                </comment>
                <comment line="249">
                    end of adding                    
                </comment>
                <scope line="216">
                    <declaration name="c1" type="int" line="221"/>
                    <declaration name="c2" type="int" line="222"/>
                    <declaration name="c3" type="int" line="223"/>
                    <declaration name="c4" type="int" line="224"/>
                    <declaration name="c5" type="int" line="225"/>
                    <declaration name="c6" type="int" line="226"/>
                    <declaration name="c7" type="int" line="228"/>
                    <declaration name="c8" type="int" line="229"/>
                    <scope line="234"/>
                    <scope line="236"/>
                    <scope line="238"/>
                    <scope line="246"/>
                </scope>
                <scope line="250"/>
            </method>
            <method name="doFetch" type="void" line="256">
                <comment line="272">
                    the finally clause will send an error.                    
                </comment>
                <comment line="275">
                    the finally clause will send an error.                    
                </comment>
                <scope line="257">
                    <scope line="258"/>
                </scope>
                <declaration name="imgd" type="ImageDecoder" line="263"/>
                <scope line="264"/>
                <scope line="266">
                    <scope line="268"/>
                    <scope line="270"/>
                    <scope line="273"/>
                    <scope line="276">
                        <scope line="278"/>
                        <scope line="280"/>
                    </scope>
                </scope>
            </method>
            <method name="badDecoder" type="void" line="287">
                <declaration name="cq" type="ImageConsumerQueue" line="288"/>
                <scope line="289"/>
            </method>
            <method name="setDecoder" type="void" line="297">
                <params>
                    <param name="mydecoder" type="ImageDecoder"/>
                </params>
                <comment line="310">
                    Now that there is a decoder, security may have changed                    
                </comment>
                <comment line="311">
                    so reverify it here, just in case.                    
                </comment>
                <declaration name="cq" type="ImageConsumerQueue" line="298"/>
                <scope line="299"/>
                <scope line="308">
                    <scope line="309">
                        <scope line="312"/>
                    </scope>
                </scope>
            </method>
            <method name="removeDecoder" type="void" line="320">
                <params>
                    <param name="mydecoder" type="ImageDecoder"/>
                </params>
                <declaration name="idprev" type="ImageDecoder" line="322"/>
                <scope line="323">
                    <scope line="324">
                        <scope line="325"/>
                        <scope line="327"/>
                    </scope>
                </scope>
            </method>
            <method name="doneDecoding" type="void" line="336">
                <params>
                    <param name="mydecoder" type="ImageDecoder"/>
                </params>
                <scope line="337">
                    <scope line="339"/>
                </scope>
            </method>
            <method name="latchConsumers" type="void" line="345">
                <params>
                    <param name="id" type="ImageDecoder"/>
                </params>
            </method>
            <method name="flush" type="void" line="349"/>
        </class>
    </source>