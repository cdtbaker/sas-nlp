<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.image">
        <import package="java.lang.ref.WeakReference"/>
        <import package="java.awt.Image"/>
        <import package="java.awt.image.ImageObserver"/>
        <class name="ImageWatched" line="32">
            <comment line="42">
                This class defines a node on a linked list of ImageObservers.
                 The base class defines the dummy implementation used for the
                 last link on all chains and a subsequent subclass then
                 defines the standard implementation that manages a weak
                 reference to a real ImageObserver.                
            </comment>
            <comment line="89">
                Standard Link implementation to manage a Weak Reference
                 to an ImageObserver.                
            </comment>
            <declaration name="endlink" type="Link" line="33"/>
            <declaration name="watcherList" type="Link" line="35"/>
            <method name="ImageWatched" type="constructor" line="37"/>
            <class name="Link" line="48">
                <comment line="50">
                    Check if iw is the referent of this Link or any
                     subsequent Link objects on this chain.                    
                </comment>
                <comment line="58">
                    Remove this Link from the chain if its referent
                     is the indicated target or if it has been nulled
                     out by the garbage collector.
                     Return the new remainder of the chain.
                     The argument may be null which will trigger
                     the chain to remove only the dead (null) links.
                     This method is only ever called inside a
                     synchronized block so Link.next modifications
                     will be safe.                    
                </comment>
                <comment line="73">
                    Deliver the indicated image update information
                     to the referent of this Link and return a boolean
                     indicating whether or not some referent became
                     null or has indicated a lack of interest in
                     further updates to its imageUpdate() method.
                     This method is not called inside a synchronized
                     block so Link.next modifications are not safe.                    
                </comment>
                <method name="isWatcher" type="boolean" line="53">
                    <params>
                        <param name="iw" type="ImageObserver"/>
                    </params>
                    <comment line="55">
                        No &quot;iw&quot; down here.                        
                    </comment>
                </method>
                <method name="removeWatcher" type="Link" line="68">
                    <params>
                        <param name="iw" type="ImageObserver"/>
                    </params>
                    <comment line="70">
                        Leave me as the end link.                        
                    </comment>
                </method>
                <method name="newInfo" type="boolean" line="83">
                    <params>
                        <param name="img" type="Image"/>
                        <param name="info" type="int"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="w" type="int"/>
                        <param name="h" type="int"/>
                    </params>
                    <comment line="85">
                        No disinterested parties down here.                        
                    </comment>
                </method>
            </class>
            <class name="WeakLink" line="92">
                <extends class="Link"/>
                <comment line="50">
                    Check if iw is the referent of this Link or any
                     subsequent Link objects on this chain.                    
                </comment>
                <comment line="58">
                    Remove this Link from the chain if its referent
                     is the indicated target or if it has been nulled
                     out by the garbage collector.
                     Return the new remainder of the chain.
                     The argument may be null which will trigger
                     the chain to remove only the dead (null) links.
                     This method is only ever called inside a
                     synchronized block so Link.next modifications
                     will be safe.                    
                </comment>
                <comment line="73">
                    Deliver the indicated image update information
                     to the referent of this Link and return a boolean
                     indicating whether or not some referent became
                     null or has indicated a lack of interest in
                     further updates to its imageUpdate() method.
                     This method is not called inside a synchronized
                     block so Link.next modifications are not safe.                    
                </comment>
                <declaration name="myref" type="WeakReference&lt;ImageObserver&gt;" line="93"/>
                <declaration name="next" type="Link" line="94"/>
                <method name="WeakLink" type="constructor" line="96">
                    <params>
                        <param name="obs" type="ImageObserver"/>
                        <param name="next" type="Link"/>
                    </params>
                </method>
                <method name="isWatcher" type="boolean" line="101">
                    <params>
                        <param name="iw" type="ImageObserver"/>
                    </params>
                </method>
                <method name="removeWatcher" type="Link" line="105">
                    <params>
                        <param name="iw" type="ImageObserver"/>
                    </params>
                    <comment line="109">
                        Remove me from the chain, but continue recursion.                        
                    </comment>
                    <comment line="112">
                        At this point myiw is not null so we know this test will
                         never succeed if this is a pruning pass (iw == null).                        
                    </comment>
                    <comment line="115">
                        Remove me from the chain and end the recursion here.                        
                    </comment>
                    <comment line="118">
                        I am alive, but not the one to be removed, recurse
                         and update my next link and leave me in the chain.                        
                    </comment>
                    <declaration name="myiw" type="ImageObserver" line="106"/>
                    <scope line="107"/>
                    <scope line="113"/>
                </method>
                <method name="newInfo" type="boolean" line="125">
                    <params>
                        <param name="img" type="Image"/>
                        <param name="info" type="int"/>
                        <param name="x" type="int"/>
                        <param name="y" type="int"/>
                        <param name="w" type="int"/>
                        <param name="h" type="int"/>
                    </params>
                    <comment line="127">
                        Note tail recursion because items are added LIFO.                        
                    </comment>
                    <comment line="131">
                        My referent is null so we must prune in a second pass.                        
                    </comment>
                    <comment line="134">
                        My referent has lost interest so clear it and ask
                         for a pruning pass to remove it later.                        
                    </comment>
                    <declaration name="ret" type="boolean" line="127"/>
                    <declaration name="myiw" type="ImageObserver" line="128"/>
                    <scope line="129"/>
                    <scope line="132"/>
                </method>
            </class>
            <method name="addWatcher" type="void" line="142">
                <params>
                    <param name="iw" type="ImageObserver"/>
                </params>
                <scope line="143"/>
            </method>
            <method name="isWatcher" type="boolean" line="148">
                <params>
                    <param name="iw" type="ImageObserver"/>
                </params>
            </method>
            <method name="removeWatcher" type="void" line="152">
                <params>
                    <param name="iw" type="ImageObserver"/>
                </params>
                <scope line="153"/>
                <scope line="156"/>
            </method>
            <method name="isWatcherListEmpty" type="boolean" line="161">
                <scope line="162"/>
            </method>
            <method name="newInfo" type="void" line="168">
                <params>
                    <param name="img" type="Image"/>
                    <param name="info" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <comment line="171">
                    Some Link returned true so we now need to prune dead links.                    
                </comment>
                <scope line="169"/>
            </method>
            <method name="notifyWatcherListEmpty" type="void" line="175"/>
        </class>
    </source>