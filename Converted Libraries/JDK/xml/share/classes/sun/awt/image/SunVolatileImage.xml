<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.image">
        <import package="java.awt.AlphaComposite"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Font"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.GraphicsConfiguration"/>
        <import package="java.awt.ImageCapabilities"/>
        <import package="java.awt.Transparency"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.awt.image.ImageObserver"/>
        <import package="java.awt.image.VolatileImage"/>
        <import package="sun.java2d.SunGraphics2D"/>
        <import package="sun.java2d.SurfaceManagerFactory"/>
        <import package="sun.java2d.DestSurfaceProvider"/>
        <import package="sun.java2d.Surface"/>
        <import package="sun.java2d.pipe.hw.AccelSurface"/>
        <class name="SunVolatileImage" line="18">
            <extends class="VolatileImage"/>
            <implements interface="DestSurfaceProvider"/>
            <javadoc line="18">
                This class is the base implementation of the VolatileImage
                  abstract class.  The class implements most of the standard Image
                  methods (width, height, etc.) but delegates all surface management
                  issues to a platform-specific VolatileSurfaceManager.  When a new instance
                  of SunVolatileImage is created, it automatically creates an
                  appropriate VolatileSurfaceManager for the GraphicsConfiguration
                  under which this SunVolatileImage was created.                
            </javadoc>
            <declaration name="volSurfaceManager" type="VolatileSurfaceManager" line="28"/>
            <declaration name="comp" type="Component" line="29"/>
            <declaration name="graphicsConfig" type="GraphicsConfiguration" line="30"/>
            <declaration name="defaultFont" type="Font" line="31"/>
            <declaration name="width" type="int" line="32"/>
            <declaration name="forcedAccelSurfaceType" type="int" line="33"/>
            <method name="SunVolatileImage" type="constructor" line="34">
                <params>
                    <param name="comp" type="Component"/>
                    <param name="graphicsConfig" type="GraphicsConfiguration"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="context" type="Object"/>
                    <param name="transparency" type="int"/>
                    <param name="caps" type="ImageCapabilities"/>
                    <param name="accType" type="int"/>
                </params>
                <scope line="40"/>
            </method>
            <method name="SunVolatileImage" type="constructor" line="49">
                <params>
                    <param name="comp" type="Component"/>
                    <param name="graphicsConfig" type="GraphicsConfiguration"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="context" type="Object"/>
                    <param name="caps" type="ImageCapabilities"/>
                </params>
            </method>
            <method name="SunVolatileImage" type="constructor" line="52">
                <params>
                    <param name="comp" type="Component"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
            </method>
            <method name="SunVolatileImage" type="constructor" line="55">
                <params>
                    <param name="comp" type="Component"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="context" type="Object"/>
                </params>
            </method>
            <method name="SunVolatileImage" type="constructor" line="58">
                <params>
                    <param name="graphicsConfig" type="GraphicsConfiguration"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="transparency" type="int"/>
                    <param name="caps" type="ImageCapabilities"/>
                </params>
            </method>
            <method name="getWidth" type="int" line="61"/>
            <method name="getHeight" type="int" line="64"/>
            <method name="getGraphicsConfig" type="GraphicsConfiguration" line="67"/>
            <method name="updateGraphicsConfig" type="void" line="70">
                <scope line="71">
                    <declaration name="gc" type="GraphicsConfiguration" line="72"/>
                    <scope line="73"/>
                </scope>
            </method>
            <method name="getComponent" type="Component" line="78"/>
            <method name="getForcedAccelSurfaceType" type="int" line="81"/>
            <method name="createSurfaceManager" type="VolatileSurfaceManager" line="84">
                <params>
                    <param name="context" type="Object"/>
                    <param name="caps" type="ImageCapabilities"/>
                </params>
                <scope line="85"/>
                <declaration name="smf" type="SurfaceManagerFactory" line="88"/>
            </method>
            <method name="getForeground" type="Color" line="91">
                <scope line="92"/>
                <scope line="95"/>
            </method>
            <method name="getBackground" type="Color" line="99">
                <scope line="100"/>
                <scope line="103"/>
            </method>
            <method name="getFont" type="Font" line="107">
                <scope line="108"/>
                <scope line="111">
                    <scope line="112"/>
                </scope>
            </method>
            <method name="createGraphics" type="Graphics2D" line="118"/>
            <method name="getProperty" type="Object" line="121">
                <params>
                    <param name="name" type="String"/>
                    <param name="observer" type="ImageObserver"/>
                </params>
                <scope line="122"/>
            </method>
            <method name="getWidth" type="int" line="127">
                <params>
                    <param name="observer" type="ImageObserver"/>
                </params>
            </method>
            <method name="getHeight" type="int" line="130">
                <params>
                    <param name="observer" type="ImageObserver"/>
                </params>
            </method>
            <javadoc line="133">
                This method creates a BufferedImage intended for use as a &quot;snapshot&quot;
                  or a backup surface.                
            </javadoc>
            <method name="getBackupImage" type="BufferedImage" line="137"/>
            <method name="getSnapshot" type="BufferedImage" line="140">
                <declaration name="bi" type="BufferedImage" line="141"/>
                <declaration name="g" type="Graphics2D" line="142"/>
            </method>
            <method name="validate" type="int" line="148">
                <params>
                    <param name="gc" type="GraphicsConfiguration"/>
                </params>
            </method>
            <method name="contentsLost" type="boolean" line="151"/>
            <method name="getCapabilities" type="ImageCapabilities" line="154"/>
            <javadoc line="157">
                {@inheritDoc}                
                <see>
                    sun.java2d.DestSurfaceProvider#getDestSurface                    
                </see>
            </javadoc>
            <method name="getDestSurface" type="Surface" line="161"/>
        </class>
    </source>