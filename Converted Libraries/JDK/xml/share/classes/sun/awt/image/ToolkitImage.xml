<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.image">
        <import package="java.util.Hashtable"/>
        <import package="java.util.Enumeration"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Image"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.awt.image.ColorModel"/>
        <import package="java.awt.image.ImageProducer"/>
        <import package="java.awt.image.ImageConsumer"/>
        <import package="java.awt.image.ImageObserver"/>
        <import package="sun.awt.image.ImageRepresentation"/>
        <import package="sun.awt.image.FileImageSource"/>
        <class name="ToolkitImage" line="43">
            <extends class="Image"/>
            <comment line="315">
                                
            </comment>
            <comment line="321">
                                
            </comment>
            <declaration name="source" type="ImageProducer" line="45"/>
            <javadoc line="45">
                The object which is used to reconstruct the original image data
                  as needed.                
            </javadoc>
            <declaration name="src" type="InputStreamImageSource" line="51"/>
            <declaration name="imagerep" type="ImageRepresentation" line="53"/>
            <scope line="55"/>
            <method name="ToolkitImage" type="constructor" line="60"/>
            <javadoc line="63">
                Construct an image from an ImageProducer object.                
            </javadoc>
            <method name="ToolkitImage" type="constructor" line="66">
                <params>
                    <param name="is" type="ImageProducer"/>
                </params>
                <scope line="68"/>
            </method>
            <method name="getSource" type="ImageProducer" line="73">
                <scope line="74"/>
            </method>
            <declaration name="width" type="int" line="80"/>
            <declaration name="height" type="int" line="81"/>
            <declaration name="properties" type="Hashtable" line="82"/>
            <declaration name="availinfo" type="int" line="84"/>
            <javadoc line="86">
                Return the width of the original image source.
                  If the width isn&apos;t known, then the image is reconstructed.                
            </javadoc>
            <method name="getWidth" type="int" line="90">
                <scope line="91"/>
                <scope line="94"/>
            </method>
            <javadoc line="100">
                Return the width of the original image source.
                  If the width isn&apos;t known, then the ImageObserver object will be
                  notified when the data is available.                
            </javadoc>
            <method name="getWidth" type="int" line="105">
                <params>
                    <param name="iw" type="ImageObserver"/>
                </params>
                <scope line="106"/>
                <scope line="109">
                    <scope line="111"/>
                </scope>
            </method>
            <javadoc line="118">
                Return the height of the original image source.
                  If the height isn&apos;t known, then the image is reconstructed.                
            </javadoc>
            <method name="getHeight" type="int" line="122">
                <scope line="123"/>
                <scope line="126"/>
            </method>
            <javadoc line="132">
                Return the height of the original image source.
                  If the height isn&apos;t known, then the ImageObserver object will be
                  notified when the data is available.                
            </javadoc>
            <method name="getHeight" type="int" line="137">
                <params>
                    <param name="iw" type="ImageObserver"/>
                </params>
                <scope line="138"/>
                <scope line="141">
                    <scope line="143"/>
                </scope>
            </method>
            <javadoc line="150">
                Return a property of the image by name.  Individual property names
                  are defined by the various image formats.  If a property is not
                  defined for a particular image, then this method will return the
                  UndefinedProperty object.  If the properties for this image are
                  not yet known, then this method will return null and the ImageObserver
                  object will be notified later.  The property name &quot;comment&quot; should
                  be used to store an optional comment which can be presented to
                  the user as a description of the image, its source, or its author.                
            </javadoc>
            <method name="getProperty" type="Object" line="160">
                <params>
                    <param name="name" type="String"/>
                    <param name="observer" type="ImageObserver"/>
                </params>
                <scope line="161"/>
                <scope line="165"/>
                <scope line="168">
                    <scope line="170"/>
                </scope>
                <declaration name="o" type="Object" line="174"/>
                <scope line="175"/>
            </method>
            <method name="hasError" type="boolean" line="181">
                <scope line="182"/>
            </method>
            <method name="check" type="int" line="188">
                <params>
                    <param name="iw" type="ImageObserver"/>
                </params>
                <scope line="189"/>
                <scope line="195"/>
            </method>
            <method name="preload" type="void" line="201">
                <params>
                    <param name="iw" type="ImageObserver"/>
                </params>
                <scope line="202"/>
                <scope line="205"/>
            </method>
            <method name="addWatcher" type="void" line="210">
                <params>
                    <param name="iw" type="ImageObserver"/>
                    <param name="load" type="boolean"/>
                </params>
                <scope line="211">
                    <scope line="212"/>
                </scope>
                <declaration name="ir" type="ImageRepresentation" line="218"/>
                <scope line="220"/>
            </method>
            <method name="reconstruct" type="void" line="225">
                <params>
                    <param name="flags" type="int"/>
                </params>
                <scope line="226">
                    <scope line="227"/>
                    <declaration name="ir" type="ImageRepresentation" line="230"/>
                    <scope line="232">
                        <scope line="233"/>
                        <scope line="235"/>
                        <scope line="239"/>
                    </scope>
                </scope>
            </method>
            <method name="addInfo" type="void" line="246">
                <params>
                    <param name="newinfo" type="int"/>
                </params>
            </method>
            <method name="setDimensions" type="void" line="251">
                <params>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <method name="setProperties" type="void" line="257">
                <params>
                    <param name="props" type="Hashtable"/>
                </params>
                <scope line="258"/>
            </method>
            <method name="infoDone" type="void" line="265">
                <params>
                    <param name="status" type="int"/>
                </params>
                <scope line="268"/>
                <scope line="270"/>
            </method>
            <method name="flush" type="void" line="275">
                <scope line="276"/>
                <declaration name="ir" type="ImageRepresentation" line="280"/>
                <scope line="281"/>
                <scope line="286"/>
                <scope line="289"/>
            </method>
            <method name="makeImageRep" type="ImageRepresentation" line="294"/>
            <method name="getImageRep" type="ImageRepresentation" line="299">
                <scope line="300"/>
                <scope line="303"/>
            </method>
            <method name="getGraphics" type="Graphics" line="309"/>
            <method name="getColorModel" type="ColorModel" line="315">
                <declaration name="imageRep" type="ImageRepresentation" line="316"/>
            </method>
            <method name="getBufferedImage" type="BufferedImage" line="321">
                <declaration name="imageRep" type="ImageRepresentation" line="322"/>
            </method>
            <method name="setAccelerationPriority" type="void" line="326">
                <params>
                    <param name="priority" type="float"/>
                </params>
                <declaration name="imageRep" type="ImageRepresentation" line="328"/>
            </method>
        </class>
    </source>