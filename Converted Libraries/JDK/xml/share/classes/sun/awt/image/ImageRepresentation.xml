<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.image">
        <import package="java.awt.Color"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Transparency"/>
        <import package="java.awt.AWTException"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.awt.image.ColorModel"/>
        <import package="java.awt.image.DirectColorModel"/>
        <import package="java.awt.image.IndexColorModel"/>
        <import package="java.awt.image.ImageConsumer"/>
        <import package="java.awt.image.ImageObserver"/>
        <import package="sun.awt.image.ByteComponentRaster"/>
        <import package="sun.awt.image.IntegerComponentRaster"/>
        <import package="java.awt.image.Raster"/>
        <import package="java.awt.image.WritableRaster"/>
        <import package="java.awt.image.DataBuffer"/>
        <import package="java.awt.image.DataBufferInt"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.geom.AffineTransform"/>
        <import package="sun.awt.image.ImageWatched"/>
        <import package="java.util.Hashtable"/>
        <class name="ImageRepresentation" line="23">
            <extends class="ImageWatched"/>
            <implements interface="ImageConsumer"/>
            <declaration name="src" type="InputStreamImageSource" line="24"/>
            <declaration name="image" type="ToolkitImage" line="25"/>
            <declaration name="tag" type="int" line="26"/>
            <declaration name="pData" type="long" line="27"/>
            <declaration name="width" type="int" line="28"/>
            <declaration name="height" type="int" line="29"/>
            <declaration name="hints" type="int" line="30"/>
            <declaration name="availinfo" type="int" line="31"/>
            <declaration name="newbits" type="Rectangle" line="32"/>
            <declaration name="bimage" type="BufferedImage" line="33"/>
            <declaration name="biRaster" type="WritableRaster" line="34"/>
            <declaration name="cmodel" type="ColorModel" line="35"/>
            <declaration name="srcModel" type="ColorModel" line="36"/>
            <declaration name="srcLUT" type="int[]" line="37"/>
            <declaration name="srcLUTtransIndex" type="int" line="38"/>
            <declaration name="numSrcLUT" type="int" line="39"/>
            <declaration name="forceCMhint" type="boolean" line="40"/>
            <declaration name="sstride" type="int" line="41"/>
            <declaration name="isDefaultBI" type="boolean" line="42"/>
            <declaration name="isSameCM" type="boolean" line="43"/>
            <method name="initIDs" type="void" line="44"/>
            <scope line="45"/>
            <javadoc line="49">
                Create an ImageRepresentation for the given Image.  The
                  width and height are unknown at this point.  The color
                  model is a hint as to the color model to use when creating
                  the buffered image.  If null, the src color model will
                  be used.                
            </javadoc>
            <method name="ImageRepresentation" type="constructor" line="56">
                <params>
                    <param name="im" type="ToolkitImage"/>
                    <param name="cmodel" type="ColorModel"/>
                    <param name="forceCMhint" type="boolean"/>
                </params>
                <scope line="58"/>
            </method>
            <method name="reconstruct" type="void" line="64">
                <params>
                    <param name="flags" type="int"/>
                </params>
                <scope line="65"/>
                <declaration name="missinginfo" type="int" line="68"/>
                <scope line="69">
                    <scope line="71">
                        <scope line="74">
                            <scope line="75"/>
                            <scope line="78"/>
                        </scope>
                    </scope>
                    <scope line="85"/>
                </scope>
            </method>
            <method name="setDimensions" type="void" line="90">
                <params>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
                <scope line="91"/>
                <scope line="96"/>
                <scope line="100"/>
            </method>
            <method name="getWidth" type="int" line="107"/>
            <method name="getHeight" type="int" line="110"/>
            <method name="getColorModel" type="ColorModel" line="113"/>
            <method name="getBufferedImage" type="BufferedImage" line="116"/>
            <javadoc line="119">
                Returns the BufferedImage that will be used as the representation of
                  the pixel data.  Subclasses can override this method to return
                  platform specific subclasses of BufferedImage that may or may not be
                  accelerated.
                  It is subclass&apos; responsibility to propagate acceleration priority
                  to the newly created image.                
            </javadoc>
            <method name="createImage" type="BufferedImage" line="127">
                <params>
                    <param name="cm" type="ColorModel"/>
                    <param name="raster" type="WritableRaster"/>
                    <param name="isRasterPremultiplied" type="boolean"/>
                    <param name="properties" type="Hashtable"/>
                </params>
                <declaration name="bi" type="BufferedImage" line="128"/>
            </method>
            <method name="setProperties" type="void" line="132">
                <params>
                    <param name="props" type="Hashtable<?,?>"/>
                </params>
                <scope line="133"/>
            </method>
            <method name="setColorModel" type="void" line="139">
                <params>
                    <param name="model" type="ColorModel"/>
                </params>
                <scope line="140"/>
                <scope line="144">
                    <scope line="145"/>
                    <scope line="149">
                        <declaration name="icm" type="IndexColorModel" line="150"/>
                    </scope>
                </scope>
                <scope line="158">
                    <scope line="159"/>
                    <scope line="163">
                        <declaration name="dcm" type="DirectColorModel" line="164"/>
                        <scope line="165"/>
                    </scope>
                </scope>
            </method>
            <method name="createBufferedImage" type="void" line="173">
                <scope line="175"/>
                <scope line="179"/>
                <declaration name="type" type="int" line="184"/>
                <scope line="185"/>
                <scope line="188">
                    <declaration name="dcm" type="DirectColorModel" line="189"/>
                    <scope line="190"/>
                </scope>
            </method>
            <method name="convertToRGB" type="void" line="195">
                <declaration name="w" type="int" line="196"/>
                <declaration name="h" type="int" line="197"/>
                <declaration name="size" type="int" line="198"/>
                <declaration name="dbi" type="DataBufferInt" line="199"/>
                <declaration name="newpixels" type="int" line="200"/>
                <scope line="201">
                    <declaration name="bct" type="ByteComponentRaster" line="202"/>
                    <declaration name="data" type="byte[]" line="203"/>
                    <declaration name="coff" type="int" line="204"/>
                    <scope line="205"/>
                </scope>
                <scope line="209">
                    <declaration name="srcpixels" type="Object" line="210"/>
                    <declaration name="off" type="int" line="211"/>
                    <scope line="212">
                        <scope line="213"/>
                    </scope>
                </scope>
                <declaration name="bandMasks" type="int" line="222"/>
            </method>
            <method name="setHints" type="void" line="228">
                <params>
                    <param name="h" type="int"/>
                </params>
                <scope line="229"/>
            </method>
            <method name="setICMpixels" type="void" line="234"/>
            <method name="setDiffICM" type="int" line="235"/>
            <declaration name="s_useNative" type="boolean" line="236"/>
            <method name="setPixels" type="void" line="237">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="model" type="ColorModel"/>
                    <param name="pix" type="byte"/>
                    <param name="off" type="int"/>
                    <param name="scansize" type="int"/>
                </params>
                <declaration name="lineOff" type="int" line="238"/>
                <declaration name="poff" type="int" line="239"/>
                <declaration name="newLUT" type="int[]" line="240"/>
                <scope line="241"/>
                <scope line="244">
                    <scope line="245">
                        <scope line="246"/>
                    </scope>
                    <scope line="251"/>
                    <declaration name="biWidth" type="int" line="254"/>
                    <declaration name="biHeight" type="int" line="255"/>
                    <declaration name="x1" type="int" line="256"/>
                    <declaration name="y1" type="int" line="257"/>
                    <scope line="258"/>
                    <scope line="262"/>
                    <scope line="265"/>
                    <scope line="269"/>
                    <scope line="272"/>
                    <scope line="275"/>
                    <scope line="278"/>
                    <scope line="283"/>
                    <declaration name="remainder" type="int" line="286"/>
                    <scope line="287"/>
                    <declaration name="num" type="int" line="290"/>
                    <scope line="291"/>
                    <scope line="294"/>
                    <scope line="297"/>
                    <scope line="300"/>
                    <scope line="303">
                        <declaration name="icm" type="IndexColorModel" line="304"/>
                        <declaration name="bct" type="ByteComponentRaster" line="305"/>
                        <declaration name="numlut" type="int" line="306"/>
                        <scope line="307"/>
                        <scope line="310">
                            <scope line="312">
                                <declaration name="hasAlpha" type="boolean" line="313"/>
                                <scope line="314"/>
                                <declaration name="nbits" type="int" line="317"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="325">
                        <declaration name="pixel" type="int" line="326"/>
                        <declaration name="iraster" type="IntegerComponentRaster" line="327"/>
                        <scope line="328">
                            <scope line="329"/>
                            <scope line="333"/>
                            <scope line="337">
                                <declaration name="storage" type="int[]" line="338"/>
                                <declaration name="soff" type="int" line="339"/>
                                <scope line="340">
                                    <scope line="342"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="349">
                            <declaration name="storage" type="int[]" line="350"/>
                            <scope line="351">
                                <scope line="353"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="361">
                        <declaration name="bt" type="ByteComponentRaster" line="362"/>
                        <scope line="363"/>
                        <scope line="366">
                            <declaration name="bpix" type="byte[]" line="367"/>
                            <scope line="369"/>
                        </scope>
                    </scope>
                    <scope line="376">
                        <scope line="377">
                            <scope line="379"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="386"/>
            </method>
            <method name="setPixels" type="void" line="390">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="model" type="ColorModel"/>
                    <param name="pix" type="int"/>
                    <param name="off" type="int"/>
                    <param name="scansize" type="int"/>
                </params>
                <declaration name="lineOff" type="int" line="391"/>
                <declaration name="poff" type="int" line="392"/>
                <scope line="393"/>
                <scope line="396">
                    <scope line="397">
                        <scope line="398"/>
                    </scope>
                    <declaration name="storage" type="int[]" line="403"/>
                    <declaration name="yoff" type="int" line="404"/>
                    <declaration name="pixel" type="int" line="405"/>
                    <scope line="406"/>
                    <scope line="409">
                        <declaration name="iraster" type="IntegerComponentRaster" line="410"/>
                        <scope line="411"/>
                        <scope line="414">
                            <scope line="415"/>
                        </scope>
                    </scope>
                    <scope line="421">
                        <scope line="422"/>
                        <scope line="425">
                            <declaration name="iraster" type="IntegerComponentRaster" line="426"/>
                            <declaration name="data" type="int[]" line="427"/>
                            <scope line="428">
                                <declaration name="sstride" type="int" line="429"/>
                                <declaration name="doff" type="int" line="430"/>
                                <scope line="431"/>
                            </scope>
                            <scope line="437">
                                <scope line="438">
                                    <scope line="440"/>
                                </scope>
                            </scope>
                        </scope>
                        <scope line="448">
                            <declaration name="tmp" type="Object" line="449"/>
                            <scope line="450">
                                <scope line="452"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="462"/>
            </method>
            <method name="getOpaqueRGBImage" type="BufferedImage" line="466">
                <scope line="467">
                    <declaration name="w" type="int" line="468"/>
                    <declaration name="h" type="int" line="469"/>
                    <declaration name="size" type="int" line="470"/>
                    <declaration name="db" type="DataBufferInt" line="471"/>
                    <declaration name="pixels" type="int[]" line="472"/>
                    <scope line="473">
                        <scope line="474"/>
                    </scope>
                    <declaration name="opModel" type="ColorModel" line="478"/>
                    <declaration name="bandmasks" type="int" line="479"/>
                    <declaration name="opRaster" type="WritableRaster" line="480"/>
                    <scope line="481">
                        <declaration name="opImage" type="BufferedImage" line="482"/>
                    </scope>
                    <scope line="485"/>
                </scope>
            </method>
            <declaration name="consuming" type="boolean" line="491"/>
            <method name="imageComplete" type="void" line="492">
                <params>
                    <param name="status" type="int"/>
                </params>
                <scope line="493"/>
                <declaration name="done" type="boolean" line="496"/>
                <declaration name="info" type="int" line="497"/>
                <scope line="519">
                    <scope line="520">
                        <scope line="524"/>
                    </scope>
                </scope>
            </method>
            <method name="startProduction" type="void" line="534">
                <scope line="535"/>
            </method>
            <declaration name="numWaiters" type="int" line="540"/>
            <method name="checkConsumption" type="void" line="541">
                <scope line="542"/>
            </method>
            <method name="notifyWatcherListEmpty" type="void" line="546"/>
            <method name="decrementWaiters" type="void" line="549"/>
            <method name="prepare" type="boolean" line="553">
                <params>
                    <param name="iw" type="ImageObserver"/>
                </params>
                <scope line="554"/>
                <scope line="557">
                    <scope line="558"/>
                </scope>
                <declaration name="done" type="boolean" line="563"/>
                <scope line="564"/>
            </method>
            <method name="check" type="int" line="571">
                <params>
                    <param name="iw" type="ImageObserver"/>
                </params>
                <scope line="572"/>
                <scope line="575"/>
            </method>
            <method name="drawToBufImage" type="boolean" line="580">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="img" type="ToolkitImage"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="bg" type="Color"/>
                    <param name="iw" type="ImageObserver"/>
                </params>
                <scope line="581"/>
                <scope line="584">
                    <scope line="585"/>
                </scope>
                <declaration name="done" type="boolean" line="590"/>
                <declaration name="abort" type="boolean" line="591"/>
                <scope line="592"/>
                <scope line="597"/>
            </method>
            <method name="drawToBufImage" type="boolean" line="602">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="img" type="ToolkitImage"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="bg" type="Color"/>
                    <param name="iw" type="ImageObserver"/>
                </params>
                <scope line="603"/>
                <scope line="606">
                    <scope line="607"/>
                </scope>
                <declaration name="done" type="boolean" line="612"/>
                <declaration name="abort" type="boolean" line="613"/>
                <scope line="614"/>
                <scope line="619"/>
            </method>
            <method name="drawToBufImage" type="boolean" line="624">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="img" type="ToolkitImage"/>
                    <param name="dx1" type="int"/>
                    <param name="dy1" type="int"/>
                    <param name="dx2" type="int"/>
                    <param name="dy2" type="int"/>
                    <param name="sx1" type="int"/>
                    <param name="sy1" type="int"/>
                    <param name="sx2" type="int"/>
                    <param name="sy2" type="int"/>
                    <param name="bg" type="Color"/>
                    <param name="iw" type="ImageObserver"/>
                </params>
                <scope line="625"/>
                <scope line="628">
                    <scope line="629"/>
                </scope>
                <declaration name="done" type="boolean" line="634"/>
                <declaration name="abort" type="boolean" line="635"/>
                <scope line="636"/>
                <scope line="641"/>
            </method>
            <method name="drawToBufImage" type="boolean" line="646">
                <params>
                    <param name="g" type="Graphics"/>
                    <param name="img" type="ToolkitImage"/>
                    <param name="xform" type="AffineTransform"/>
                    <param name="iw" type="ImageObserver"/>
                </params>
                <declaration name="g2" type="Graphics2D" line="647"/>
                <scope line="648"/>
                <scope line="651">
                    <scope line="652"/>
                </scope>
                <declaration name="done" type="boolean" line="657"/>
                <declaration name="abort" type="boolean" line="658"/>
                <scope line="659"/>
                <scope line="664"/>
            </method>
            <method name="abort" type="void" line="669"/>
            <method name="dispose" type="void" line="682"/>
            <method name="setAccelerationPriority" type="void" line="688">
                <params>
                    <param name="priority" type="float"/>
                </params>
                <scope line="689"/>
            </method>
        </class>
    </source>