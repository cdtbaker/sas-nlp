<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.image">
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.awt.image.AffineTransformOp"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.awt.image.BufferedImageOp"/>
        <import package="java.awt.image.ByteLookupTable"/>
        <import package="java.awt.image.ConvolveOp"/>
        <import package="java.awt.image.Kernel"/>
        <import package="java.awt.image.LookupOp"/>
        <import package="java.awt.image.LookupTable"/>
        <import package="java.awt.image.RasterOp"/>
        <import package="java.awt.image.Raster"/>
        <import package="java.awt.image.WritableRaster"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <class name="ImagingLib" line="43">
            <javadoc line="43">
                This class provides a hook to access platform-specific
                  imaging code.
                  If the implementing class cannot handle the op, tile format or
                  image format, the method will return null;
                  If there is an error when processing the
                  data, the implementing class may either return null
                  (in which case our java code will be executed) or may throw
                  an exception.                
            </javadoc>
            <declaration name="useLib" type="boolean" line="56"/>
            <declaration name="verbose" type="boolean" line="57"/>
            <declaration name="NUM_NATIVE_OPS" type="int" line="59"/>
            <declaration name="LOOKUP_OP" type="int" line="60"/>
            <declaration name="AFFINE_OP" type="int" line="61"/>
            <declaration name="CONVOLVE_OP" type="int" line="62"/>
            <declaration name="nativeOpClass" type="Class[]" line="64"/>
            <method name="init" type="boolean" line="66"/>
            <javadoc line="66">
                Returned value indicates whether the library initailization was
                  succeded.
                  There could be number of reasons to failure:
                  - failed to load library.
                  - failed to get all required entry points.                
            </javadoc>
            <method name="transformBI" type="int" line="76"/>
            <method name="transformRaster" type="int" line="78"/>
            <method name="convolveBI" type="int" line="81"/>
            <method name="convolveRaster" type="int" line="83"/>
            <method name="lookupByteBI" type="int" line="85"/>
            <method name="lookupByteRaster" type="int" line="87"/>
            <scope line="90">
                <anonymous_class line="93">
                    <method name="run" type="Boolean" line="94">
                        <declaration name="arch" type="String" line="95"/>
                        <scope line="97">
                            <scope line="98"/>
                            <scope line="100"/>
                        </scope>
                        <declaration name="success" type="boolean" line="105"/>
                    </method>
                </anonymous_class>
                <declaration name="doMlibInitialization" type="PrivilegedAction&lt;Boolean&gt;" line="92"/>
                <scope line="116"/>
                <scope line="119"/>
                <scope line="122"/>
                <scope line="125"/>
                <scope line="128"/>
                <scope line="131"/>
            </scope>
            <method name="getNativeOpIndex" type="int" line="137">
                <params>
                    <param name="opClass" type="Class"/>
                </params>
                <comment line="138">
                                        
                </comment>
                <comment line="139">
                    Search for this class in cached list of                    
                </comment>
                <comment line="140">
                    classes supplying native acceleration                    
                </comment>
                <comment line="141">
                                        
                </comment>
                <declaration name="opIndex" type="int" line="142"/>
                <scope line="143">
                    <scope line="144"/>
                </scope>
            </method>
            <method name="filter" type="WritableRaster" line="154">
                <params>
                    <param name="op" type="RasterOp"/>
                    <param name="src" type="Raster"/>
                    <param name="dst" type="WritableRaster"/>
                </params>
                <comment line="159">
                    Create the destination tile                    
                </comment>
                <comment line="169">
                    REMIND: Fix this!                    
                </comment>
                <comment line="172">
                    Right now the native code doesn&apos;t support offsets                    
                </comment>
                <scope line="155"/>
                <scope line="160"/>
                <declaration name="retRaster" type="WritableRaster" line="165"/>
                <declaration name="table" type="LookupTable" line="170"/>
                <scope line="171"/>
                <scope line="175">
                    <declaration name="bt" type="ByteLookupTable" line="176"/>
                    <scope line="177"/>
                </scope>
                <declaration name="bOp" type="AffineTransformOp" line="184"/>
                <declaration name="matrix" type="double[]" line="185"/>
                <scope line="188"/>
                <declaration name="cOp" type="ConvolveOp" line="194"/>
                <scope line="196"/>
                <scope line="205"/>
            </method>
            <method name="filter" type="BufferedImage" line="215">
                <params>
                    <param name="op" type="BufferedImageOp"/>
                    <param name="src" type="BufferedImage"/>
                    <param name="dst" type="BufferedImage"/>
                </params>
                <comment line="225">
                    Create the destination image                    
                </comment>
                <comment line="234">
                    REMIND: Fix this!                    
                </comment>
                <comment line="237">
                    Right now the native code doesn&apos;t support offsets                    
                </comment>
                <scope line="216"/>
                <scope line="221"/>
                <scope line="226"/>
                <declaration name="retBI" type="BufferedImage" line="230"/>
                <declaration name="table" type="LookupTable" line="235"/>
                <scope line="236"/>
                <scope line="240">
                    <declaration name="bt" type="ByteLookupTable" line="241"/>
                    <scope line="242"/>
                </scope>
                <declaration name="bOp" type="AffineTransformOp" line="249"/>
                <declaration name="matrix" type="double[]" line="250"/>
                <declaration name="xform" type="AffineTransform" line="251"/>
                <scope line="255"/>
                <declaration name="cOp" type="ConvolveOp" line="261"/>
                <scope line="263"/>
                <scope line="272"/>
            </method>
        </class>
    </source>