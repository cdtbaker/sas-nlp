<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.image">
        <import package="java.awt.geom.AffineTransform"/>
        <import package="java.awt.image.AffineTransformOp"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.awt.image.BufferedImageOp"/>
        <import package="java.awt.image.ByteLookupTable"/>
        <import package="java.awt.image.ConvolveOp"/>
        <import package="java.awt.image.Kernel"/>
        <import package="java.awt.image.LookupOp"/>
        <import package="java.awt.image.LookupTable"/>
        <import package="java.awt.image.RasterOp"/>
        <import package="java.awt.image.Raster"/>
        <import package="java.awt.image.WritableRaster"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <class name="ImagingLib" line="16">
            <javadoc line="16">
                This class provides a hook to access platform-specific
                  imaging code.
                  If the implementing class cannot handle the op, tile format or
                  image format, the method will return null;
                  If there is an error when processing the
                  data, the implementing class may either return null
                  (in which case our java code will be executed) or may throw
                  an exception.                
            </javadoc>
            <declaration name="useLib" type="boolean" line="27"/>
            <declaration name="verbose" type="boolean" line="28"/>
            <declaration name="NUM_NATIVE_OPS" type="int" line="29"/>
            <declaration name="LOOKUP_OP" type="int" line="30"/>
            <declaration name="AFFINE_OP" type="int" line="31"/>
            <declaration name="CONVOLVE_OP" type="int" line="32"/>
            <declaration name="nativeOpClass" type="Class[]" line="33"/>
            <method name="init" type="boolean" line="34"/>
            <javadoc line="34">
                Returned value indicates whether the library initailization was
                  succeded.
                  There could be number of reasons to failure:
                  - failed to load library.
                  - failed to get all required entry points.                
            </javadoc>
            <method name="transformBI" type="int" line="42"/>
            <method name="transformRaster" type="int" line="43"/>
            <method name="convolveBI" type="int" line="44"/>
            <method name="convolveRaster" type="int" line="45"/>
            <method name="lookupByteBI" type="int" line="46"/>
            <method name="lookupByteRaster" type="int" line="47"/>
            <scope line="48">
                <anonymous_class line="49">
                    <method name="run" type="Boolean" line="50">
                        <declaration name="arch" type="String" line="51"/>
                        <scope line="52">
                            <scope line="53"/>
                            <scope line="56"/>
                        </scope>
                        <declaration name="success" type="boolean" line="60"/>
                    </method>
                </anonymous_class>
                <declaration name="doMlibInitialization" type="PrivilegedAction&amp;lt;Boolean&amp;gt;" line="49"/>
                <scope line="66"/>
                <scope line="69"/>
                <scope line="72"/>
                <scope line="75"/>
                <scope line="78"/>
                <scope line="81"/>
            </scope>
            <method name="getNativeOpIndex" type="int" line="85">
                <params>
                    <param name="opClass" type="Class"/>
                </params>
                <declaration name="opIndex" type="int" line="86"/>
                <scope line="87">
                    <scope line="88"/>
                </scope>
            </method>
            <method name="filter" type="WritableRaster" line="95">
                <params>
                    <param name="op" type="RasterOp"/>
                    <param name="src" type="Raster"/>
                    <param name="dst" type="WritableRaster"/>
                </params>
                <scope line="96"/>
                <scope line="99"/>
                <declaration name="retRaster" type="WritableRaster" line="102"/>
                <declaration name="table" type="LookupTable" line="105"/>
                <scope line="106"/>
                <scope line="109">
                    <declaration name="bt" type="ByteLookupTable" line="110"/>
                    <scope line="111"/>
                </scope>
                <declaration name="bOp" type="AffineTransformOp" line="117"/>
                <declaration name="matrix" type="double[]" line="118"/>
                <scope line="120"/>
                <declaration name="cOp" type="ConvolveOp" line="125"/>
                <scope line="126"/>
                <scope line="133"/>
            </method>
            <method name="filter" type="BufferedImage" line="138">
                <params>
                    <param name="op" type="BufferedImageOp"/>
                    <param name="src" type="BufferedImage"/>
                    <param name="dst" type="BufferedImage"/>
                </params>
                <scope line="139"/>
                <scope line="142"/>
                <scope line="145"/>
                <declaration name="retBI" type="BufferedImage" line="148"/>
                <declaration name="table" type="LookupTable" line="151"/>
                <scope line="152"/>
                <scope line="155">
                    <declaration name="bt" type="ByteLookupTable" line="156"/>
                    <scope line="157"/>
                </scope>
                <declaration name="bOp" type="AffineTransformOp" line="163"/>
                <declaration name="matrix" type="double[]" line="164"/>
                <declaration name="xform" type="AffineTransform" line="165"/>
                <scope line="167"/>
                <declaration name="cOp" type="ConvolveOp" line="172"/>
                <scope line="173"/>
                <scope line="180"/>
            </method>
        </class>
    </source>