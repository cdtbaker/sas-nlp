<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.image">
        <import package="java.io"/>
        <import package="java.util"/>
        <import package="java.util.zip"/>
        <import package="java.awt.image"/>
        <import package="java.awt.Color"/>
        <class name="PNGImageDecoder" line="7">
            <extends class="ImageDecoder"/>
            <javadoc line="7">
                PNG - Portable Network Graphics - image file reader.
                  See &lt;a href=http://www.ietf.org/rfc/rfc2083.txt&gt;RFC2083&lt;/a&gt; for details.                
            </javadoc>
            <declaration name="GRAY" type="int" line="12"/>
            <declaration name="PALETTE" type="int" line="13"/>
            <declaration name="COLOR" type="int" line="14"/>
            <declaration name="ALPHA" type="int" line="15"/>
            <declaration name="bKGDChunk" type="int" line="16"/>
            <declaration name="cHRMChunk" type="int" line="17"/>
            <declaration name="gAMAChunk" type="int" line="18"/>
            <declaration name="hISTChunk" type="int" line="19"/>
            <declaration name="IDATChunk" type="int" line="20"/>
            <declaration name="IENDChunk" type="int" line="21"/>
            <declaration name="IHDRChunk" type="int" line="22"/>
            <declaration name="PLTEChunk" type="int" line="23"/>
            <declaration name="pHYsChunk" type="int" line="24"/>
            <declaration name="sBITChunk" type="int" line="25"/>
            <declaration name="tEXtChunk" type="int" line="26"/>
            <declaration name="tIMEChunk" type="int" line="27"/>
            <declaration name="tRNSChunk" type="int" line="28"/>
            <declaration name="zTXtChunk" type="int" line="29"/>
            <declaration name="width" type="int" line="30"/>
            <declaration name="height" type="int" line="31"/>
            <declaration name="bitDepth" type="int" line="32"/>
            <declaration name="colorType" type="int" line="33"/>
            <declaration name="compressionMethod" type="int" line="34"/>
            <declaration name="filterMethod" type="int" line="35"/>
            <declaration name="interlaceMethod" type="int" line="36"/>
            <declaration name="gamma" type="int" line="37"/>
            <declaration name="properties" type="java.util.Hashtable" line="38"/>
            <declaration name="cm" type="ColorModel" line="39"/>
            <declaration name="red_map" type="byte[]" line="40"/>
            <declaration name="transparentPixel" type="int" line="41"/>
            <declaration name="transparentPixel_16" type="byte[]" line="42"/>
            <declaration name="greyModels" type="ColorModel" line="43"/>
            <method name="property" type="void" line="44">
                <params>
                    <param name="key" type="String"/>
                    <param name="value" type="Object"/>
                </params>
            </method>
            <method name="property" type="void" line="49">
                <params>
                    <param name="key" type="String"/>
                    <param name="value" type="float"/>
                </params>
            </method>
            <method name="pngassert" type="void" line="52">
                <params>
                    <param name="b" type="boolean"/>
                </params>
                <scope line="53">
                    <declaration name="e" type="PNGException" line="54"/>
                </scope>
            </method>
            <method name="handleChunk" type="boolean" line="59">
                <params>
                    <param name="key" type="int"/>
                    <param name="buf" type="byte[]"/>
                    <param name="st" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="c" type="Color" line="62"/>
                <declaration name="ix" type="int" line="72"/>
                <declaration name="t" type="int" line="79"/>
                <scope line="108">
                    <declaration name="tsize" type="int" line="109"/>
                    <scope line="113"/>
                </scope>
                <declaration name="klen" type="int" line="125"/>
                <scope line="127">
                    <declaration name="tkey" type="String" line="128"/>
                    <declaration name="tvalue" type="String" line="129"/>
                </scope>
                <declaration name="alen" type="int" line="140"/>
                <scope line="149">
                    <scope line="151"/>
                </scope>
                <scope line="155"/>
                <declaration name="t" type="int" line="162"/>
            </method>
            <class name="PNGException" line="173">
                <extends class="IOException"/>
                <method name="PNGException" type="constructor" line="174">
                    <params>
                        <param name="s" type="String"/>
                    </params>
                </method>
            </class>
            <method name="produceImage" type="void" line="178">
                <scope line="179">
                    <declaration name="is" type="InputStream" line="181"/>
                    <declaration name="bPixels" type="byte[]" line="183"/>
                    <declaration name="wPixels" type="int[]" line="184"/>
                    <declaration name="pixSize" type="int" line="185"/>
                    <declaration name="rowStride" type="int" line="186"/>
                    <declaration name="logDepth" type="int" line="187"/>
                    <scope line="207"/>
                    <declaration name="combinedType" type="int" line="212"/>
                    <declaration name="bitMask" type="int" line="213"/>
                    <scope line="223">
                        <declaration name="llog" type="int" line="224"/>
                        <scope line="225">
                            <declaration name="size" type="int" line="226"/>
                            <declaration name="ramp" type="byte" line="227"/>
                            <scope line="229"/>
                            <scope line="232"/>
                        </scope>
                    </scope>
                    <declaration name="flags" type="int" line="251"/>
                    <declaration name="samplesPerPixel" type="int" line="254"/>
                    <declaration name="bitsPerPixel" type="int" line="255"/>
                    <declaration name="bytesPerPixel" type="int" line="256"/>
                    <declaration name="pass" type="int" line="257"/>
                    <scope line="258"/>
                    <scope line="262"/>
                    <scope line="266">
                        <declaration name="row" type="int" line="267"/>
                        <declaration name="rowInc" type="int" line="268"/>
                        <declaration name="colInc" type="int" line="269"/>
                        <declaration name="bWidth" type="int" line="270"/>
                        <declaration name="bHeight" type="int" line="271"/>
                        <declaration name="sCol" type="int" line="272"/>
                        <declaration name="rowPixelWidth" type="int" line="273"/>
                        <declaration name="rowByteWidth" type="int" line="274"/>
                        <declaration name="pixelBufferInc" type="int" line="276"/>
                        <declaration name="rowOffset" type="int" line="277"/>
                        <declaration name="firstRow" type="boolean" line="278"/>
                        <declaration name="rowByteBuffer" type="byte[]" line="279"/>
                        <declaration name="prevRowByteBuffer" type="byte[]" line="280"/>
                        <scope line="281">
                            <declaration name="rowFilter" type="int" line="282"/>
                            <scope line="283">
                                <declaration name="n" type="int" line="284"/>
                            </scope>
                            <declaration name="col" type="int" line="289"/>
                            <declaration name="spos" type="int" line="290"/>
                            <declaration name="pixel" type="int" line="291"/>
                            <scope line="292">
                                <scope line="293">
                                    <scope line="305"/>
                                    <declaration name="isTransparent" type="boolean" line="313"/>
                                    <scope line="314"/>
                                    <scope line="317"/>
                                    <scope line="324">
                                        <declaration name="tx" type="int" line="325"/>
                                    </scope>
                                    <scope line="331">
                                        <declaration name="tx" type="int" line="332"/>
                                    </scope>
                                </scope>
                            </scope>
                            <scope line="366"/>
                            <scope line="369"/>
                            <declaration name="T" type="byte[]" line="374"/>
                        </scope>
                        <scope line="379"/>
                        <scope line="382"/>
                    </scope>
                </scope>
                <scope line="388">
                    <scope line="389"/>
                </scope>
                <scope line="395">
                    <scope line="396"/>
                    <scope line="399"/>
                </scope>
            </method>
            <method name="sendPixels" type="boolean" line="403">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="pixels" type="int[]"/>
                    <param name="offset" type="int"/>
                    <param name="pixlength" type="int"/>
                </params>
                <declaration name="count" type="int" line="404"/>
                <scope line="405"/>
            </method>
            <method name="sendPixels" type="boolean" line="410">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="pixels" type="byte[]"/>
                    <param name="offset" type="int"/>
                    <param name="pixlength" type="int"/>
                </params>
                <declaration name="count" type="int" line="411"/>
                <scope line="412"/>
            </method>
            <method name="filterRow" type="void" line="417">
                <params>
                    <param name="rowByteBuffer" type="byte"/>
                    <param name="prevRow" type="byte[]"/>
                    <param name="rowFilter" type="int"/>
                    <param name="rowByteWidth" type="int"/>
                    <param name="bytesPerSample" type="int"/>
                </params>
                <declaration name="x" type="int" line="418"/>
                <scope line="429"/>
                <scope line="436">
                    <scope line="438">
                        <declaration name="a" type="int" line="439"/>
                    </scope>
                </scope>
            </method>
            <declaration name="startingRow" type="byte[]" line="456"/>
            <declaration name="startingCol" type="byte[]" line="457"/>
            <declaration name="rowIncrement" type="byte[]" line="458"/>
            <declaration name="colIncrement" type="byte[]" line="459"/>
            <declaration name="blockHeight" type="byte[]" line="460"/>
            <declaration name="blockWidth" type="byte[]" line="461"/>
            <declaration name="pos" type="int" line="462"/>
            <declaration name="chunkStart" type="int" line="463"/>
            <declaration name="chunkKey" type="int" line="464"/>
            <declaration name="seenEOF" type="boolean" line="465"/>
            <declaration name="signature" type="byte[]" line="466"/>
            <declaration name="inputStream" type="PNGFilterInputStream" line="467"/>
            <declaration name="underlyingInputStream" type="InputStream" line="468"/>
            <method name="PNGImageDecoder" type="constructor" line="469">
                <params>
                    <param name="src" type="InputStreamImageSource"/>
                    <param name="input" type="InputStream"/>
                </params>
            </method>
            <declaration name="inbuf" type="byte[]" line="474"/>
            <method name="fill" type="void" line="475">
                <scope line="476">
                    <scope line="477"/>
                    <scope line="482"/>
                    <declaration name="bsize" type="int" line="486"/>
                    <scope line="487">
                        <declaration name="n" type="int" line="488"/>
                        <scope line="489"/>
                    </scope>
                </scope>
            </method>
            <method name="need" type="boolean" line="497">
                <params>
                    <param name="n" type="int"/>
                </params>
                <declaration name="nin" type="byte" line="502"/>
            </method>
            <method name="getInt" type="int" line="510">
                <params>
                    <param name="pos" type="int"/>
                </params>
            </method>
            <method name="getShort" type="int" line="513">
                <params>
                    <param name="pos" type="int"/>
                </params>
            </method>
            <method name="getByte" type="int" line="516">
                <params>
                    <param name="pos" type="int"/>
                </params>
            </method>
            <method name="getChunk" type="boolean" line="519">
                <declaration name="calcCRC" type="int" line="528"/>
            </method>
            <method name="readAll" type="void" line="533"/>
            <method name="getData" type="boolean" line="536"/>
            <declaration name="checkCRC" type="boolean" line="540"/>
            <method name="getCheckCRC" type="boolean" line="541"/>
            <method name="setCheckCRC" type="void" line="544">
                <params>
                    <param name="c" type="boolean"/>
                </params>
            </method>
            <method name="wrc" type="void" line="547">
                <params>
                    <param name="c" type="int"/>
                </params>
            </method>
            <method name="wrk" type="void" line="552">
                <params>
                    <param name="n" type="int"/>
                </params>
            </method>
            <method name="print" type="void" line="558"/>
            <declaration name="crc_table" type="int[]" line="562"/>
            <scope line="563">
                <scope line="564">
                    <declaration name="c" type="int" line="565"/>
                </scope>
            </scope>
            <method name="update_crc" type="int" line="571">
                <params>
                    <param name="crc" type="int"/>
                    <param name="buf" type="byte[]"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="c" type="int" line="572"/>
            </method>
            <method name="crc" type="int" line="576">
                <params>
                    <param name="buf" type="byte[]"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <class name="Chromaticities" line="579">
                <declaration name="whiteX" type="float" line="580"/>
                <method name="Chromaticities" type="constructor" line="581">
                    <params>
                        <param name="wx" type="int"/>
                        <param name="wy" type="int"/>
                        <param name="rx" type="int"/>
                        <param name="ry" type="int"/>
                        <param name="gx" type="int"/>
                        <param name="gy" type="int"/>
                        <param name="bx" type="int"/>
                        <param name="by" type="int"/>
                    </params>
                </method>
                <method name="toString" type="String" line="591"/>
            </class>
        </class>
        <class name="PNGFilterInputStream" line="596">
            <extends class="FilterInputStream"/>
            <declaration name="owner" type="PNGImageDecoder" line="597"/>
            <declaration name="underlyingInputStream" type="InputStream" line="598"/>
            <method name="PNGFilterInputStream" type="constructor" line="599">
                <params>
                    <param name="owner" type="PNGImageDecoder"/>
                    <param name="is" type="InputStream"/>
                </params>
            </method>
            <method name="available" type="int" line="604"/>
            <method name="markSupported" type="boolean" line="607"/>
            <method name="read" type="int" line="610"/>
            <method name="read" type="int" line="615">
                <params>
                    <param name="b" type="byte[]"/>
                </params>
            </method>
            <method name="read" type="int" line="618">
                <params>
                    <param name="b" type="byte[]"/>
                    <param name="st" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <method name="skip" type="long" line="626">
                <params>
                    <param name="n" type="long"/>
                </params>
                <declaration name="i" type="int" line="627"/>
            </method>
        </class>
    </source>