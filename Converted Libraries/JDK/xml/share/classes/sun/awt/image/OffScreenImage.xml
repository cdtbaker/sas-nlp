<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.image">
        <import package="java.awt.Component"/>
        <import package="java.awt.Color"/>
        <import package="java.awt.SystemColor"/>
        <import package="java.awt.Font"/>
        <import package="java.awt.Graphics"/>
        <import package="java.awt.Graphics2D"/>
        <import package="java.awt.GraphicsEnvironment"/>
        <import package="java.awt.image.BufferedImage"/>
        <import package="java.awt.image.ImageProducer"/>
        <import package="java.awt.image.ColorModel"/>
        <import package="java.awt.image.WritableRaster"/>
        <import package="sun.java2d.SunGraphics2D"/>
        <import package="sun.java2d.SurfaceData"/>
        <class name="OffScreenImage" line="15">
            <extends class="BufferedImage"/>
            <javadoc line="15">
                This is a special variant of BufferedImage that keeps a reference to
                  a Component.  The Component&apos;s foreground and background colors and
                  default font are used as the defaults for this image.                
            </javadoc>
            <declaration name="c" type="Component" line="21"/>
            <declaration name="osis" type="OffScreenImageSource" line="22"/>
            <declaration name="defaultFont" type="Font" line="23"/>
            <javadoc line="24">
                Constructs an OffScreenImage given a color model and tile,
                  for offscreen rendering to be used with a given component.
                  The component is used to obtain the foreground color, background
                  color and font.                
            </javadoc>
            <method name="OffScreenImage" type="constructor" line="30">
                <params>
                    <param name="c" type="Component"/>
                    <param name="cm" type="ColorModel"/>
                    <param name="raster" type="WritableRaster"/>
                    <param name="isRasterPremultiplied" type="boolean"/>
                </params>
            </method>
            <method name="getGraphics" type="Graphics" line="35"/>
            <method name="createGraphics" type="Graphics2D" line="38">
                <scope line="39">
                    <declaration name="env" type="GraphicsEnvironment" line="40"/>
                </scope>
                <declaration name="bg" type="Color" line="43"/>
                <scope line="44"/>
                <declaration name="fg" type="Color" line="47"/>
                <scope line="48"/>
                <declaration name="font" type="Font" line="51"/>
                <scope line="52">
                    <scope line="53"/>
                </scope>
            </method>
            <method name="initSurface" type="void" line="60">
                <params>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                </params>
                <declaration name="g2" type="Graphics2D" line="61"/>
                <scope line="62"/>
                <scope line="65"/>
            </method>
            <method name="getSource" type="ImageProducer" line="69">
                <scope line="70"/>
            </method>
        </class>
    </source>