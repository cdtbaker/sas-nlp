<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.geom">
        <import package="java.awt.geom.PathIterator"/>
        <import package="java.util.Vector"/>
        <import package="java.util.Enumeration"/>
        <class name="Crossings" line="32">
            <declaration name="debug" type="boolean" line="33"/>
            <declaration name="limit" type="int" line="35"/>
            <declaration name="yranges" type="double" line="36"/>
            <declaration name="xlo" type="double" line="38"/>
            <method name="Crossings" type="constructor" line="40">
                <params>
                    <param name="xlo" type="double"/>
                    <param name="ylo" type="double"/>
                    <param name="xhi" type="double"/>
                    <param name="yhi" type="double"/>
                </params>
            </method>
            <method name="getXLo" type="double" line="47"/>
            <method name="getYLo" type="double" line="51"/>
            <method name="getXHi" type="double" line="55"/>
            <method name="getYHi" type="double" line="59"/>
            <method name="record" type="void" line="63"/>
            <method name="print" type="void" line="65">
                <scope line="68"/>
            </method>
            <method name="isEmpty" type="boolean" line="74"/>
            <method name="covers" type="boolean" line="78"/>
            <method name="findCrossings" type="Crossings" line="83">
                <params>
                    <param name="curves" type="Vector"/>
                    <param name="xlo" type="double"/>
                    <param name="ylo" type="double"/>
                    <param name="xhi" type="double"/>
                    <param name="yhi" type="double"/>
                </params>
                <declaration name="cross" type="Crossings" line="84"/>
                <declaration name="enum_" type="Enumeration" line="85"/>
                <scope line="86">
                    <declaration name="c" type="Curve" line="87"/>
                    <scope line="88"/>
                </scope>
                <scope line="92"/>
            </method>
            <method name="findCrossings" type="Crossings" line="101">
                <params>
                    <param name="pi" type="PathIterator"/>
                    <param name="xlo" type="double"/>
                    <param name="ylo" type="double"/>
                    <param name="xhi" type="double"/>
                    <param name="yhi" type="double"/>
                </params>
                <comment line="109">
                    coords array is big enough for holding:
                         coordinates returned from currentSegment (6)
                         OR
                             two subdivided quadratic curves (2+4+4=10)
                             AND
                                 0-1 horizontal splitting parameters
                                 OR
                                 2 parametric equation derivative coefficients
                         OR
                             three subdivided cubic curves (2+6+6+6=20)
                             AND
                                 0-2 horizontal splitting parameters
                                 OR
                                 3 parametric equation derivative coefficients                    
                </comment>
                <declaration name="cross" type="Crossings" line="102"/>
                <scope line="103"/>
                <scope line="105"/>
                <declaration name="coords" type="double" line="122"/>
                <declaration name="movx" type="double" line="123"/>
                <declaration name="movy" type="double" line="124"/>
                <declaration name="curx" type="double" line="125"/>
                <declaration name="cury" type="double" line="126"/>
                <declaration name="newx" type="double" line="127"/>
                <scope line="128">
                    <declaration name="type" type="int" line="129"/>
                    <scope line="134"/>
                    <scope line="143"/>
                    <scope line="152"/>
                    <scope line="161"/>
                    <scope line="170"/>
                </scope>
                <scope line="179">
                    <scope line="180"/>
                </scope>
                <scope line="184"/>
            </method>
            <method name="accumulateLine" type="boolean" line="192">
                <params>
                    <param name="x0" type="double"/>
                    <param name="y0" type="double"/>
                    <param name="x1" type="double"/>
                    <param name="y1" type="double"/>
                </params>
                <scope line="193"/>
                <scope line="195"/>
            </method>
            <method name="accumulateLine" type="boolean" line="203">
                <params>
                    <param name="x0" type="double"/>
                    <param name="y0" type="double"/>
                    <param name="x1" type="double"/>
                    <param name="y1" type="double"/>
                    <param name="direction" type="int"/>
                </params>
                <scope line="204"/>
                <scope line="207"/>
                <scope line="210"/>
                <declaration name="xstart" type="double" line="213"/>
                <declaration name="dx" type="double" line="214"/>
                <declaration name="dy" type="double" line="215"/>
                <scope line="216"/>
                <scope line="219"/>
                <scope line="223"/>
                <scope line="226"/>
                <scope line="230"/>
                <scope line="233"/>
            </method>
            <declaration name="tmp" type="Vector" line="240"/>
            <method name="accumulateQuad" type="boolean" line="242">
                <params>
                    <param name="x0" type="double"/>
                    <param name="y0" type="double"/>
                    <param name="coords" type="double"/>
                </params>
                <scope line="243"/>
                <scope line="246"/>
                <scope line="249"/>
                <scope line="252">
                    <scope line="253"/>
                    <scope line="255"/>
                </scope>
                <declaration name="enum_" type="Enumeration" line="261"/>
                <scope line="262">
                    <declaration name="c" type="Curve" line="263"/>
                    <scope line="264"/>
                </scope>
            </method>
            <method name="accumulateCubic" type="boolean" line="272">
                <params>
                    <param name="x0" type="double"/>
                    <param name="y0" type="double"/>
                    <param name="coords" type="double"/>
                </params>
                <scope line="275"/>
                <scope line="280"/>
                <scope line="285"/>
                <scope line="290">
                    <scope line="291"/>
                    <scope line="293"/>
                </scope>
                <declaration name="enum_" type="Enumeration" line="299"/>
                <scope line="300">
                    <declaration name="c" type="Curve" line="301"/>
                    <scope line="302"/>
                </scope>
            </method>
            <class name="EvenOdd" line="310">
                <extends class="Crossings"/>
                <method name="EvenOdd" type="constructor" line="311">
                    <params>
                        <param name="xlo" type="double"/>
                        <param name="ylo" type="double"/>
                        <param name="xhi" type="double"/>
                        <param name="yhi" type="double"/>
                    </params>
                </method>
                <method name="covers" type="boolean" line="315">
                    <params>
                        <param name="ystart" type="double"/>
                        <param name="yend" type="double"/>
                    </params>
                </method>
                <method name="record" type="void" line="319">
                    <params>
                        <param name="ystart" type="double"/>
                        <param name="yend" type="double"/>
                        <param name="direction" type="int"/>
                    </params>
                    <comment line="325">
                        Quickly jump over all pairs that are completely &quot;above&quot;                        
                    </comment>
                    <comment line="334">
                        Quickly handle insertion of the new range                        
                    </comment>
                    <comment line="341">
                        The ranges overlap - sort, collapse, insert, iterate                        
                    </comment>
                    <scope line="320"/>
                    <declaration name="from" type="int" line="323"/>
                    <scope line="325"/>
                    <declaration name="to" type="int" line="328"/>
                    <scope line="329">
                        <declaration name="yrlo" type="double" line="330"/>
                        <declaration name="yrhi" type="double" line="331"/>
                        <scope line="332"/>
                        <declaration name="yll" type="double" line="341"/>
                        <scope line="342"/>
                        <scope line="345"/>
                        <scope line="349"/>
                        <scope line="352"/>
                        <scope line="356"/>
                        <scope line="359">
                            <scope line="360"/>
                            <scope line="365"/>
                        </scope>
                        <scope line="372"/>
                    </scope>
                    <scope line="376"/>
                    <scope line="380">
                        <scope line="381">
                            <declaration name="newranges" type="double" line="382"/>
                        </scope>
                    </scope>
                </method>
            </class>
            <class name="NonZero" line="393">
                <extends class="Crossings"/>
                <declaration name="crosscounts" type="int" line="394"/>
                <method name="NonZero" type="constructor" line="396">
                    <params>
                        <param name="xlo" type="double"/>
                        <param name="ylo" type="double"/>
                        <param name="xhi" type="double"/>
                        <param name="yhi" type="double"/>
                    </params>
                </method>
                <method name="covers" type="boolean" line="401">
                    <params>
                        <param name="ystart" type="double"/>
                        <param name="yend" type="double"/>
                    </params>
                    <declaration name="i" type="int" line="402"/>
                    <scope line="403">
                        <declaration name="ylo" type="double" line="404"/>
                        <declaration name="yhi" type="double" line="405"/>
                        <scope line="406"/>
                        <scope line="409"/>
                        <scope line="412"/>
                    </scope>
                </method>
                <method name="remove" type="void" line="420">
                    <params>
                        <param name="cur" type="int"/>
                    </params>
                    <declaration name="rem" type="int" line="422"/>
                    <scope line="423"/>
                </method>
                <method name="insert" type="void" line="431">
                    <params>
                        <param name="cur" type="int"/>
                        <param name="lo" type="double"/>
                        <param name="hi" type="double"/>
                        <param name="dir" type="int"/>
                    </params>
                    <declaration name="rem" type="int" line="432"/>
                    <declaration name="oldranges" type="double" line="433"/>
                    <declaration name="oldcounts" type="int" line="434"/>
                    <scope line="435"/>
                    <scope line="441"/>
                </method>
                <method name="record" type="void" line="453">
                    <params>
                        <param name="ystart" type="double"/>
                        <param name="yend" type="double"/>
                        <param name="direction" type="int"/>
                    </params>
                    <comment line="459">
                        Quickly jump over all pairs that are completely &quot;above&quot;                        
                    </comment>
                    <comment line="468">
                        Remove the range from the list and collapse it
                         into the range being inserted.  Note that the
                         new combined range may overlap the following range
                         so we must not simply combine the ranges in place
                         unless we are at the last range.                        
                    </comment>
                    <comment line="484">
                        Just insert the new range at the current location                        
                    </comment>
                    <comment line="489">
                        Just prepend the new range to the current one                        
                    </comment>
                    <comment line="493">
                        The ranges must overlap - (yend &gt; yrlo &amp;&amp; yrhi &gt; ystart)                        
                    </comment>
                    <comment line="503">
                        assert(yrlo == ystart);                        
                    </comment>
                    <scope line="454"/>
                    <declaration name="cur" type="int" line="457"/>
                    <scope line="459"/>
                    <scope line="462">
                        <declaration name="rdir" type="int" line="463"/>
                        <declaration name="yrlo" type="double" line="464"/>
                        <declaration name="yrhi" type="double" line="465"/>
                        <scope line="466">
                            <scope line="472"/>
                        </scope>
                        <scope line="482"/>
                        <scope line="487"/>
                        <scope line="493"/>
                        <scope line="497"/>
                        <declaration name="newdir" type="int" line="503"/>
                        <declaration name="newend" type="double" line="504"/>
                        <scope line="505"/>
                        <scope line="507"/>
                        <scope line="513"/>
                    </scope>
                    <scope line="517"/>
                </method>
            </class>
        </class>
    </source>