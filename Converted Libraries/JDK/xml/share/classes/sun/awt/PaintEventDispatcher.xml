<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt">
        <import package="java.awt.Component"/>
        <import package="java.awt.Rectangle"/>
        <import package="java.awt.event.PaintEvent"/>
        <class name="PaintEventDispatcher" line="5">
            <javadoc line="5">
                PaintEventDispatcher is responsible for dispatching PaintEvents.  There
                  can be only one PaintEventDispatcher active at a particular time.                
            </javadoc>
            <declaration name="dispatcher" type="PaintEventDispatcher" line="10"/>
            <javadoc line="10">
                Singleton dispatcher.                
            </javadoc>
            <javadoc line="14">
                Sets the current &lt;code&gt;PaintEventDispatcher&lt;/code&gt;.                
                <param>
                    dispatcher PaintEventDispatcher                    
                </param>
            </javadoc>
            <method name="setPaintEventDispatcher" type="void" line="18">
                <params>
                    <param name="dispatcher" type="PaintEventDispatcher"/>
                </params>
                <scope line="19"/>
            </method>
            <javadoc line="23">
                Returns the currently active &lt;code&gt;PaintEventDispatcher&lt;/code&gt;.  This
                  will never return null.                
                <return>
                    PaintEventDispatcher                    
                </return>
            </javadoc>
            <method name="getPaintEventDispatcher" type="PaintEventDispatcher" line="28">
                <scope line="29">
                    <scope line="30"/>
                </scope>
            </method>
            <javadoc line="36">
                Creates and returns the &lt;code&gt;PaintEvent&lt;/code&gt; that should be
                  dispatched for the specified component.  If this returns null
                  no &lt;code&gt;PaintEvent&lt;/code&gt; is dispatched.
                  &lt;p&gt;
                  &lt;b&gt;WARNING:&lt;/b&gt; This is invoked from the native thread, be careful
                  what methods you end up invoking here.                
            </javadoc>
            <method name="createPaintEvent" type="PaintEvent" line="44">
                <params>
                    <param name="target" type="Component"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                </params>
            </method>
            <javadoc line="47">
                Returns true if a native background erase should be done for
                  the specified Component.                
            </javadoc>
            <method name="shouldDoNativeBackgroundErase" type="boolean" line="51">
                <params>
                    <param name="c" type="Component"/>
                </params>
            </method>
            <javadoc line="54">
                This method is invoked from the toolkit thread when the surface
                  data of the component needs to be replaced. The method run() of
                  the Runnable argument performs surface data replacing, run()
                  should be invoked on the EDT of this component&apos;s AppContext.
                  Returns true if the Runnable has been enqueued to be invoked
                  on the EDT.
                  (Fix 6255371.)                
            </javadoc>
            <method name="queueSurfaceDataReplacing" type="boolean" line="63">
                <params>
                    <param name="c" type="Component"/>
                    <param name="r" type="Runnable"/>
                </params>
            </method>
        </class>
    </source>