<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt">
        <import package="java.awt.AWTEvent"/>
        <import package="java.awt.EventQueue"/>
        <class name="EventQueueDelegate" line="4">
            <declaration name="EVENT_QUEUE_DELEGATE_KEY" type="Object" line="5"/>
            <method name="setDelegate" type="void" line="6">
                <params>
                    <param name="delegate" type="Delegate"/>
                </params>
            </method>
            <method name="getDelegate" type="Delegate" line="9"/>
            <interface name="Delegate">
                <method name="getNextEvent" type="AWTEvent" line="13"/>
                <javadoc line="13">
                    This method allows for changing {@code EventQueue} events order.                    
                    <param>
                        eventQueue current {@code EventQueue}                        
                    </param>
                    <return>
                        next {@code event} for the {@code EventDispatchThread}                        
                    </return>
                </javadoc>
                <method name="beforeDispatch" type="Object" line="19"/>
                <javadoc line="19">
                    Notifies delegate before EventQueue.dispatch method.
                      Note: this method may mutate the event                    
                    <param>
                        event  to be dispatched by {@code dispatch} method                        
                    </param>
                    <return>
                        handle to be passed to {@code afterDispatch} method                        
                    </return>
                </javadoc>
                <method name="afterDispatch" type="void" line="26"/>
                <javadoc line="26">
                    Notifies delegate after EventQueue.dispatch method.                    
                    <param>
                        event {@code event} dispatched by the {@code dispatch} method                        
                    </param>
                    <param>
                        handle object which came from {@code beforeDispatch} method                        
                    </param>
                </javadoc>
            </interface>
        </class>
    </source>