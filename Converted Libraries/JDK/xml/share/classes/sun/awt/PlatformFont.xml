<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt">
        <import package="java.awt.peer.FontPeer"/>
        <import package="java.util.Locale"/>
        <import package="java.util.Vector"/>
        <import package="sun.font.SunFontManager"/>
        <import package="sun.java2d.FontSupport"/>
        <import package="java.nio.CharBuffer"/>
        <import package="java.nio.ByteBuffer"/>
        <class name="PlatformFont" line="9">
            <implements interface="FontPeer"/>
            <scope line="10"/>
            <declaration name="componentFonts" type="FontDescriptor[]" line="14"/>
            <declaration name="defaultChar" type="char" line="15"/>
            <declaration name="fontConfig" type="FontConfiguration" line="16"/>
            <declaration name="defaultFont" type="FontDescriptor" line="17"/>
            <declaration name="familyName" type="String" line="18"/>
            <declaration name="fontCache" type="Object[]" line="19"/>
            <declaration name="FONTCACHESIZE" type="int" line="20"/>
            <declaration name="FONTCACHEMASK" type="int" line="21"/>
            <declaration name="osVersion" type="String" line="22"/>
            <method name="PlatformFont" type="constructor" line="23">
                <params>
                    <param name="name" type="String"/>
                    <param name="style" type="int"/>
                </params>
                <declaration name="sfm" type="SunFontManager" line="24"/>
                <scope line="25"/>
                <scope line="28"/>
                <scope line="32"/>
                <declaration name="missingGlyphCharacter" type="char" line="36"/>
                <scope line="39">
                    <scope line="40"/>
                    <scope line="43"/>
                </scope>
            </method>
            <method name="getMissingGlyphCharacter" type="char" line="50"/>
            <javadoc line="50">
                Returns the character that should be rendered when a glyph
                  is missing.                
            </javadoc>
            <javadoc line="55">
                make a array of CharsetString with given String.                
            </javadoc>
            <method name="makeMultiCharsetString" type="CharsetString[]" line="58">
                <params>
                    <param name="str" type="String"/>
                </params>
            </method>
            <javadoc line="61">
                make a array of CharsetString with given String.                
            </javadoc>
            <method name="makeMultiCharsetString" type="CharsetString[]" line="64">
                <params>
                    <param name="str" type="String"/>
                    <param name="allowdefault" type="boolean"/>
                </params>
            </method>
            <javadoc line="67">
                make a array of CharsetString with given char array.                
                <param>
                    str The char array to convert.                    
                </param>
                <param>
                    offset offset of first character of interest                    
                </param>
                <param>
                    len number of characters to convert                    
                </param>
            </javadoc>
            <method name="makeMultiCharsetString" type="CharsetString[]" line="73">
                <params>
                    <param name="str" type="char"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                </params>
            </method>
            <javadoc line="76">
                make a array of CharsetString with given char array.                
                <param>
                    str The char array to convert.                    
                </param>
                <param>
                    offset offset of first character of interest                    
                </param>
                <param>
                    len number of characters to convert                    
                </param>
                <param>
                    allowDefault whether to allow the default char.
                      Setting this to true overloads the meaning of this method to
                      return non-null only if all chars can be converted.                    
                </param>
                <return>
                    array of CharsetString or if allowDefault is false and any
                      of the returned chars would have been converted to a default char,
                      then return null.
                      This is used to choose alternative means of displaying the text.                    
                </return>
            </javadoc>
            <method name="makeMultiCharsetString" type="CharsetString[]" line="89">
                <params>
                    <param name="str" type="char"/>
                    <param name="offset" type="int"/>
                    <param name="len" type="int"/>
                    <param name="allowDefault" type="boolean"/>
                </params>
                <scope line="90"/>
                <declaration name="mcs" type="Vector" line="93"/>
                <declaration name="tmpStr" type="char[]" line="94"/>
                <declaration name="tmpChar" type="char" line="95"/>
                <declaration name="encoded" type="boolean" line="96"/>
                <declaration name="currentFont" type="FontDescriptor" line="97"/>
                <scope line="98">
                    <scope line="99"/>
                    <scope line="102"/>
                </scope>
                <scope line="109"/>
                <scope line="112"/>
                <declaration name="lastIndex" type="int" line="115"/>
                <scope line="116">
                    <declaration name="ch" type="char" line="117"/>
                    <declaration name="fd" type="FontDescriptor" line="118"/>
                    <scope line="121">
                        <scope line="122"/>
                        <scope line="125"/>
                    </scope>
                    <scope line="132"/>
                    <scope line="135"/>
                    <scope line="138">
                        <scope line="139"/>
                    </scope>
                </scope>
                <declaration name="result" type="CharsetString[]" line="148"/>
                <declaration name="cs" type="CharsetString" line="149"/>
                <scope line="150"/>
                <scope line="154">
                    <scope line="157"/>
                </scope>
            </method>
            <javadoc line="163">
                Is it possible that this font&apos;s metrics require the multi-font calls?
                  This might be true, for example, if the font supports kerning.                
            </javadoc>
            <method name="mightHaveMultiFontMetrics" type="boolean" line="167"/>
            <javadoc line="170">
                Specialized fast path string conversion for AWT.                
            </javadoc>
            <method name="makeConvertedMultiFontString" type="Object[]" line="173">
                <params>
                    <param name="str" type="String"/>
                </params>
            </method>
            <method name="makeConvertedMultiFontChars" type="Object[]" line="176">
                <params>
                    <param name="data" type="char[]"/>
                    <param name="start" type="int"/>
                    <param name="len" type="int"/>
                </params>
                <declaration name="result" type="Object[]" line="177"/>
                <declaration name="workingCache" type="Object[]" line="178"/>
                <declaration name="convertedData" type="byte[]" line="179"/>
                <declaration name="stringIndex" type="int" line="180"/>
                <declaration name="convertedDataIndex" type="int" line="181"/>
                <declaration name="resultIndex" type="int" line="182"/>
                <declaration name="cacheIndex" type="int" line="183"/>
                <declaration name="currentFontDescriptor" type="FontDescriptor" line="184"/>
                <declaration name="lastFontDescriptor" type="FontDescriptor" line="185"/>
                <declaration name="currentDefaultChar" type="char" line="186"/>
                <declaration name="theChar" type="PlatformFontCache" line="187"/>
                <declaration name="end" type="int" line="188"/>
                <scope line="189"/>
                <scope line="192"/>
                <scope line="195">
                    <scope line="199">
                        <declaration name="ch" type="char" line="202"/>
                        <declaration name="componentCount" type="int" line="203"/>
                        <scope line="204">
                            <declaration name="fontDescriptor" type="FontDescriptor" line="205"/>
                            <scope line="207"/>
                            <scope line="210"/>
                        </scope>
                        <scope line="216">
                            <declaration name="input" type="char[]" line="217"/>
                            <scope line="220">
                                <scope line="221"/>
                                <scope line="225"/>
                            </scope>
                            <scope line="230"/>
                        </scope>
                        <scope line="237"/>
                    </scope>
                    <scope line="243">
                        <scope line="244">
                            <scope line="247"/>
                            <scope line="254">
                                <declaration name="newResult" type="Object[]" line="255"/>
                            </scope>
                        </scope>
                        <scope line="260"/>
                        <scope line="263"/>
                    </scope>
                    <declaration name="ba" type="byte[]" line="269"/>
                    <declaration name="size" type="int" line="270"/>
                    <scope line="271"/>
                    <scope line="274"/>
                    <scope line="278"/>
                    <scope line="283"/>
                </scope>
                <scope line="293"/>
            </method>
            <method name="getFontCache" type="Object[]" line="302">
                <scope line="303"/>
            </method>
            <method name="initIDs" type="void" line="308"/>
            <javadoc line="308">
                Initialize JNI field and method IDs                
            </javadoc>
            <class name="PlatformFontCache" line="312">
                <declaration name="uniChar" type="char" line="313"/>
                <declaration name="fontDescriptor" type="FontDescriptor" line="314"/>
                <declaration name="bb" type="ByteBuffer" line="315"/>
            </class>
        </class>
    </source>