<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt">
        <import package="java.awt.Component"/>
        <import package="java.awt.KeyboardFocusManager"/>
        <import package="java.awt.Window"/>
        <import package="java.awt.Canvas"/>
        <import package="java.awt.Scrollbar"/>
        <import package="java.awt.Panel"/>
        <import package="java.awt.event.FocusEvent"/>
        <import package="java.awt.peer.KeyboardFocusManagerPeer"/>
        <import package="java.awt.peer.ComponentPeer"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.lang.reflect.Method"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <class name="KeyboardFocusManagerPeerImpl" line="44">
            <comment line="52">
                The constants are copied from java.awt.KeyboardFocusManager                
            </comment>
            <comment line="77">
                WARNING: Don&apos;t call it on the Toolkit thread.
                
                 Checks if the component:
                 1) accepts focus on click (in general)
                 2) may be a focus owner (in particular)                
            </comment>
            <comment line="111">
                Posts proper lostgain focus events to the event queue.                
            </comment>
            <comment line="148">
                WARNING: Don&apos;t call it on the Toolkit thread.                
            </comment>
            <comment line="153">
                WARNING: Don&apos;t call it on the Toolkit thread.                
            </comment>
            <comment line="169">
                WARNING: Don&apos;t call it on the Toolkit thread.                
            </comment>
            <implements interface="KeyboardFocusManagerPeer"/>
            <declaration name="focusLog" type="PlatformLogger" line="46"/>
            <declaration name="kfmAccessor" type="AWTAccessor.KeyboardFocusManagerAccessor" line="48"/>
            <declaration name="SNFH_FAILURE" type="int" line="52"/>
            <declaration name="SNFH_SUCCESS_HANDLED" type="int" line="53"/>
            <declaration name="SNFH_SUCCESS_PROCEED" type="int" line="54"/>
            <declaration name="manager" type="KeyboardFocusManager" line="56"/>
            <method name="KeyboardFocusManagerPeerImpl" type="constructor" line="58">
                <params>
                    <param name="manager" type="KeyboardFocusManager"/>
                </params>
            </method>
            <method name="clearGlobalFocusOwner" type="void" line="63">
                <params>
                    <param name="activeWindow" type="Window"/>
                </params>
                <scope line="64">
                    <declaration name="focusOwner" type="Component" line="65"/>
                    <scope line="68">
                        <declaration name="fl" type="FocusEvent" line="69"/>
                    </scope>
                </scope>
            </method>
            <method name="shouldFocusOnClick" type="boolean" line="83">
                <params>
                    <param name="component" type="Component"/>
                </params>
                <comment line="87">
                    A component is generally allowed to accept focus on click
                     if its peer is focusable. There&apos;re some exceptions though.                    
                </comment>
                <comment line="91">
                    CANVAS &amp; SCROLLBAR accept focus on click                    
                </comment>
                <comment line="97">
                    PANEL, empty only, accepts focus on click                    
                </comment>
                <comment line="102">
                    Other components                    
                </comment>
                <declaration name="acceptFocusOnClick" type="boolean" line="84"/>
                <scope line="93"/>
                <scope line="97"/>
                <scope line="102">
                    <declaration name="peer" type="ComponentPeer" line="103"/>
                </scope>
            </method>
            <method name="deliverFocus" type="boolean" line="120">
                <params>
                    <param name="lightweightChild" type="Component"/>
                    <param name="target" type="Component"/>
                    <param name="temporary" type="boolean"/>
                    <param name="focusedWindowChangeAllowed" type="boolean"/>
                    <param name="time" type="long"/>
                    <param name="cause" type="CausedFocusEvent.Cause"/>
                    <param name="currentFocusOwner" type="Component"/>
                </params>
                <comment line="120">
                    provided by the descendant peers                    
                </comment>
                <scope line="121"/>
                <declaration name="currentOwner" type="Component" line="125"/>
                <scope line="126"/>
                <scope line="129">
                    <declaration name="fl" type="FocusEvent" line="130"/>
                </scope>
                <declaration name="fg" type="FocusEvent" line="138"/>
            </method>
            <method name="requestFocusFor" type="boolean" line="148">
                <params>
                    <param name="target" type="Component"/>
                    <param name="cause" type="CausedFocusEvent.Cause"/>
                </params>
            </method>
            <method name="shouldNativelyFocusHeavyweight" type="int" line="159">
                <params>
                    <param name="heavyweight" type="Component"/>
                    <param name="descendant" type="Component"/>
                    <param name="temporary" type="boolean"/>
                    <param name="focusedWindowChangeAllowed" type="boolean"/>
                    <param name="time" type="long"/>
                    <param name="cause" type="CausedFocusEvent.Cause"/>
                </params>
            </method>
            <method name="removeLastFocusRequest" type="void" line="164">
                <params>
                    <param name="heavyweight" type="Component"/>
                </params>
            </method>
            <method name="processSynchronousLightweightTransfer" type="boolean" line="174">
                <params>
                    <param name="heavyweight" type="Component"/>
                    <param name="descendant" type="Component"/>
                    <param name="temporary" type="boolean"/>
                    <param name="focusedWindowChangeAllowed" type="boolean"/>
                    <param name="time" type="long"/>
                </params>
            </method>
        </class>
    </source>