<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt">
        <import package="java.awt"/>
        <class name="OrientableFlowLayout" line="3">
            <extends class="FlowLayout"/>
            <javadoc line="3">
                Extends the FlowLayout class to support both vertical and horizontal
                  layout of components.  Orientation can be changed dynamically after
                  creation by calling either of the methods @method orientHorizontally or                
                <method>
                    orientVertically.  Separate values for alignment, vertical gap,
                      and horizontal gap can be specified for horizontal and vertical
                      orientation.                    
                </method>
                <author>
                    Terry Cline                    
                </author>
            </javadoc>
            <declaration name="HORIZONTAL" type="int" line="13"/>
            <javadoc line="13">
                The horizontal orientation constant.                
            </javadoc>
            <declaration name="VERTICAL" type="int" line="17"/>
            <javadoc line="17">
                The vertical orientation constant.                
            </javadoc>
            <declaration name="TOP" type="int" line="21"/>
            <javadoc line="21">
                The top vertical alignment constant.                
            </javadoc>
            <declaration name="BOTTOM" type="int" line="25"/>
            <javadoc line="25">
                The bottom vertical alignment constant.                
            </javadoc>
            <declaration name="orientation" type="int" line="29"/>
            <declaration name="vAlign" type="int" line="30"/>
            <declaration name="vHGap" type="int" line="31"/>
            <declaration name="vVGap" type="int" line="32"/>
            <javadoc line="33">
                Constructs a new flow layout with a horizontal orientation and
                  centered alignment.                
            </javadoc>
            <method name="OrientableFlowLayout" type="constructor" line="37"/>
            <javadoc line="40">
                Constructs a new flow layout with the specified orientation and
                  a centered alignment.                
                <param>
                    orientation the orientation, one of HORIZONTAL or VERTICAL.                    
                </param>
            </javadoc>
            <method name="OrientableFlowLayout" type="constructor" line="45">
                <params>
                    <param name="orientation" type="int"/>
                </params>
            </method>
            <javadoc line="48">
                Constructs a new flow layout with the specified orientation and
                  alignment.                
                <param>
                    orientation the orientation, one of HORIZONTAL or VERTICAL.                    
                </param>
                <param>
                    hAlign the horizontal alignment, one of LEFT, CENTER, or RIGHT.                    
                </param>
                <param>
                    vAlign the vertical alignment, one of TOP, CENTER, or BOTTOM.                    
                </param>
            </javadoc>
            <method name="OrientableFlowLayout" type="constructor" line="55">
                <params>
                    <param name="orientation" type="int"/>
                    <param name="hAlign" type="int"/>
                    <param name="vAlign" type="int"/>
                </params>
            </method>
            <javadoc line="58">
                Constructs a new flow layout with the specified orientation,
                  alignment, and gap values.                
                <param>
                    orientation the orientation, one of HORIZONTAL or VERTICAL.                    
                </param>
                <param>
                    hAlign the horizontal alignment, one of LEFT, CENTER, or RIGHT.                    
                </param>
                <param>
                    vAlign the vertical alignment, one of TOP, CENTER, or BOTTOM.                    
                </param>
                <param>
                    hHGap the horizontal gap between components in HORIZONTAL.                    
                </param>
                <param>
                    hVGap the vertical gap between components in HORIZONTAL.                    
                </param>
                <param>
                    vHGap the horizontal gap between components in VERTICAL.                    
                </param>
                <param>
                    vVGap the vertical gap between components in VERTICAL.                    
                </param>
            </javadoc>
            <method name="OrientableFlowLayout" type="constructor" line="69">
                <params>
                    <param name="orientation" type="int"/>
                    <param name="hAlign" type="int"/>
                    <param name="vAlign" type="int"/>
                    <param name="hHGap" type="int"/>
                    <param name="hVGap" type="int"/>
                    <param name="vHGap" type="int"/>
                    <param name="vVGap" type="int"/>
                </params>
            </method>
            <javadoc line="76">
                Set the layout&apos;s current orientation to horizontal.                
            </javadoc>
            <method name="orientHorizontally" type="void" line="79"/>
            <javadoc line="82">
                Set the layout&apos;s current orientation to vertical.                
            </javadoc>
            <method name="orientVertically" type="void" line="85"/>
            <javadoc line="88">
                Returns the preferred dimensions for this layout given the
                  components in the specified target container.                
                <param>
                    target the component which needs to be laid out.                    
                </param>
                <see>
                    Container                    
                </see>
                <see>
                    FlowLayout                    
                </see>
                <see>
                    #minimumLayoutSize                    
                </see>
            </javadoc>
            <method name="preferredLayoutSize" type="Dimension" line="96">
                <params>
                    <param name="target" type="Container"/>
                </params>
                <scope line="97"/>
                <scope line="100">
                    <declaration name="dim" type="Dimension" line="101"/>
                    <declaration name="n" type="int" line="102"/>
                    <scope line="103">
                        <declaration name="c" type="Component" line="104"/>
                        <scope line="105">
                            <declaration name="cDim" type="Dimension" line="106"/>
                            <scope line="108"/>
                        </scope>
                    </scope>
                    <declaration name="insets" type="Insets" line="114"/>
                </scope>
            </method>
            <javadoc line="121">
                Returns the minimum dimensions needed to layout the components
                  contained in the specified target container.                
                <param>
                    target the component which needs to be laid out.                    
                </param>
                <see>
                    #preferredLayoutSize.                    
                </see>
            </javadoc>
            <method name="minimumLayoutSize" type="Dimension" line="127">
                <params>
                    <param name="target" type="Container"/>
                </params>
                <scope line="128"/>
                <scope line="131">
                    <declaration name="dim" type="Dimension" line="132"/>
                    <declaration name="n" type="int" line="133"/>
                    <scope line="134">
                        <declaration name="c" type="Component" line="135"/>
                        <scope line="136">
                            <declaration name="cDim" type="Dimension" line="137"/>
                            <scope line="139"/>
                        </scope>
                    </scope>
                    <declaration name="insets" type="Insets" line="145"/>
                </scope>
            </method>
            <javadoc line="151">
                Lays out the container.  This method will reshape the
                  components in the target to satisfy the constraints of the
                  layout.                
                <param>
                    target the specified component being laid out.                    
                </param>
                <see>
                    Container.                    
                </see>
            </javadoc>
            <method name="layoutContainer" type="void" line="158">
                <params>
                    <param name="target" type="Container"/>
                </params>
                <scope line="159"/>
                <scope line="162">
                    <declaration name="insets" type="Insets" line="163"/>
                    <declaration name="targetDim" type="Dimension" line="164"/>
                    <declaration name="maxHeight" type="int" line="165"/>
                    <declaration name="x" type="int" line="166"/>
                    <declaration name="y" type="int" line="167"/>
                    <declaration name="colWidth" type="int" line="168"/>
                    <declaration name="start" type="int" line="169"/>
                    <declaration name="n" type="int" line="170"/>
                    <scope line="171">
                        <declaration name="c" type="Component" line="172"/>
                        <scope line="173">
                            <declaration name="cDim" type="Dimension" line="174"/>
                            <scope line="176">
                                <scope line="177"/>
                            </scope>
                            <scope line="183"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="195">
                Aligns the components vertically if there is any slack.                
                <param>
                    target the container whose components need to be moved.                    
                </param>
                <param>
                    x the x coordinate.                    
                </param>
                <param>
                    y the y coordinate.                    
                </param>
                <param>
                    width the width available.                    
                </param>
                <param>
                    height the height available.                    
                </param>
                <param>
                    colStart the beginning of the column.                    
                </param>
                <param>
                    colEnd the end of the column.                    
                </param>
            </javadoc>
            <method name="moveComponents" type="void" line="205">
                <params>
                    <param name="target" type="Container"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="width" type="int"/>
                    <param name="height" type="int"/>
                    <param name="colStart" type="int"/>
                    <param name="colEnd" type="int"/>
                </params>
                <scope line="215">
                    <declaration name="c" type="Component" line="216"/>
                    <declaration name="cDim" type="Dimension" line="217"/>
                    <scope line="218"/>
                </scope>
            </method>
            <javadoc line="224">
                Returns the String representation of this layout&apos;s values.                
            </javadoc>
            <method name="toString" type="String" line="227">
                <declaration name="str" type="String" line="228"/>
            </method>
        </class>
    </source>