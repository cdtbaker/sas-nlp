<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.shell">
        <import package="java.io.File"/>
        <import package="java.io.FileNotFoundException"/>
        <import package="java.util.concurrent.Callable"/>
        <class name="ShellFolderManager" line="5">
            <javadoc line="5">
                @author Michael Martak                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <javadoc line="10">
                Create a shell folder from a file.
                  Override to return machine-dependent behavior.                
            </javadoc>
            <method name="createShellFolder" type="ShellFolder" line="14">
                <params>
                    <param name="file" type="File"/>
                </params>
            </method>
            <javadoc line="17">
                @param key a &lt;code&gt;String&lt;/code&gt;
                  &quot;fileChooserDefaultFolder&quot;:
                  Returns a &lt;code&gt;File&lt;/code&gt; - the default shellfolder for a new filechooser
                  &quot;roots&quot;:
                  Returns a &lt;code&gt;File[]&lt;/code&gt; - containing the root(s) of the displayable hieararchy
                  &quot;fileChooserComboBoxFolders&quot;:
                  Returns a &lt;code&gt;File[]&lt;/code&gt; - an array of shellfolders representing the list to
                  show by default in the file chooser&apos;s combobox
                  &quot;fileChooserShortcutPanelFolders&quot;:
                  Returns a &lt;code&gt;File[]&lt;/code&gt; - an array of shellfolders representing well-known
                  folders, such as Desktop, Documents, History, Network, Home, etc.
                  This is used in the shortcut panel of the filechooser on Windows 2000
                  and Windows Me.
                  &quot;fileChooserIcon &lt;icon&gt;&quot;:
                  Returns an &lt;code&gt;Image&lt;/code&gt; - icon can be ListView, DetailsView, UpFolder, NewFolder or
                  ViewMenu (Windows only).                
                <return>
                    An Object matching the key string.                    
                </return>
            </javadoc>
            <method name="get" type="Object" line="36">
                <params>
                    <param name="key" type="String"/>
                </params>
                <scope line="37">
                    <declaration name="homeDir" type="File" line="38"/>
                    <scope line="39"/>
                    <scope line="42"/>
                </scope>
                <scope line="46"/>
                <scope line="49"/>
                <scope line="52"/>
            </method>
            <javadoc line="57">
                Does &lt;code&gt;dir&lt;/code&gt; represent a &quot;computer&quot; such as a node on the network, or
                  &quot;My Computer&quot; on the desktop.                
            </javadoc>
            <method name="isComputerNode" type="boolean" line="61">
                <params>
                    <param name="dir" type="File"/>
                </params>
            </method>
            <method name="isFileSystemRoot" type="boolean" line="64">
                <params>
                    <param name="dir" type="File"/>
                </params>
                <scope line="65"/>
            </method>
            <method name="createInvoker" type="ShellFolder.Invoker" line="70"/>
            <class name="DirectInvoker" line="73">
                <implements interface="ShellFolder.Invoker"/>
                <method name="invoke" type="T" line="74">
                    <params>
                        <param name="task" type="Callable<T>"/>
                    </params>
                </method>
            </class>
        </class>
    </source>