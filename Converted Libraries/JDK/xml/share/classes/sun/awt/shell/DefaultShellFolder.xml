<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.shell">
        <import package="java.io.File"/>
        <import package="java.security.AccessController"/>
        <import package="javax.swing.Icon"/>
        <import package="sun.security.action.GetPropertyAction"/>
        <class name="DefaultShellFolder" line="33">
            <extends class="ShellFolder"/>
            <javadoc line="33">
                @author Michael Martak                
                <since>
                    1.4                    
                </since>
            </javadoc>
            <javadoc line="40">
                Create a file system shell folder from a file                
            </javadoc>
            <method name="DefaultShellFolder" type="constructor" line="43">
                <params>
                    <param name="parent" type="ShellFolder"/>
                    <param name="f" type="File"/>
                </params>
            </method>
            <javadoc line="47">
                This method is implemented to make sure that no instances
                  of &lt;code&gt;ShellFolder&lt;/code&gt; are ever serialized. An instance of
                  this default implementation can always be represented with a
                  &lt;code&gt;java.io.File&lt;/code&gt; object instead.                
                <returns>
                    a <code>java.io.File</code> replacement object.                    
                </returns>
            </javadoc>
            <method name="writeReplace" type="Object" line="55"/>
            <javadoc line="59">
                @return An array of shell folders that are children of this shell folder
                  object, null if this shell folder is empty.                
            </javadoc>
            <method name="listFiles" type="File[]" line="63">
                <declaration name="files" type="File[]" line="64"/>
                <scope line="65">
                    <scope line="66"/>
                </scope>
            </method>
            <javadoc line="73">
                @return Whether this shell folder is a link                
            </javadoc>
            <method name="isLink" type="boolean" line="76">
                <comment line="77">
                    Not supported by default                    
                </comment>
            </method>
            <javadoc line="80">
                @return Whether this shell folder is marked as hidden                
            </javadoc>
            <method name="isHidden" type="boolean" line="83">
                <declaration name="fileName" type="String" line="84"/>
                <scope line="85"/>
            </method>
            <javadoc line="91">
                @return The shell folder linked to by this shell folder, or null
                  if this shell folder is not a link                
            </javadoc>
            <method name="getLinkLocation" type="ShellFolder" line="95">
                <comment line="96">
                    Not supported by default                    
                </comment>
            </method>
            <javadoc line="99">
                @return The name used to display this shell folder                
            </javadoc>
            <method name="getDisplayName" type="String" line="102"/>
            <javadoc line="106">
                @return The type of shell folder as a string                
            </javadoc>
            <method name="getFolderType" type="String" line="109">
                <comment line="111">
                    TODO : LOCALIZE THIS STRING!!!                    
                </comment>
                <comment line="113">
                    TODO : LOCALIZE THIS STRING!!!                    
                </comment>
                <scope line="110"/>
                <scope line="112"/>
            </method>
            <javadoc line="117">
                @return The executable type as a string                
            </javadoc>
            <method name="getExecutableType" type="String" line="120">
                <comment line="121">
                    Not supported by default                    
                </comment>
            </method>
        </class>
    </source>