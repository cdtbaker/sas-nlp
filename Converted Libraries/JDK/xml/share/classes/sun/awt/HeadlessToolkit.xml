<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt">
        <import package="java.awt"/>
        <import package="java.awt.dnd"/>
        <import package="java.awt.dnd.peer.DragSourceContextPeer"/>
        <import package="java.awt.event"/>
        <import package="java.awt.im.InputMethodHighlight"/>
        <import package="java.awt.im.spi.InputMethodDescriptor"/>
        <import package="java.awt.image"/>
        <import package="java.awt.datatransfer.Clipboard"/>
        <import package="java.awt.peer"/>
        <import package="java.beans.PropertyChangeListener"/>
        <import package="java.lang.reflect.Constructor"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.net.URL"/>
        <import package="java.util.Map"/>
        <import package="java.util.Properties"/>
        <import package="sun.awt.im.InputContext"/>
        <import package="sun.awt.image.ImageRepresentation"/>
        <class name="HeadlessToolkit" line="46">
            <extends class="Toolkit"/>
            <comment line="64">
                Component peer objects.                
            </comment>
            <comment line="68">
                                
            </comment>
            <comment line="78">
                Component peer objects - unsupported.                
            </comment>
            <comment line="213">
                Headless toolkit - unsupported.                
            </comment>
            <comment line="314">
                Printing                
            </comment>
            <comment line="336">
                Headless toolkit - supported.                
            </comment>
            <comment line="349">
                Event Queue                
            </comment>
            <comment line="356">
                Images.                
            </comment>
            <comment line="397">
                Fonts                
            </comment>
            <comment line="415">
                Desktop properties                
            </comment>
            <comment line="429">
                Modality                
            </comment>
            <comment line="440">
                Always on top                
            </comment>
            <comment line="447">
                AWT Event listeners                
            </comment>
            <implements interface="ComponentFactory"/>
            <implements interface="KeyboardFocusManagerPeerProvider"/>
            <declaration name="tk" type="Toolkit" line="49"/>
            <declaration name="componentFactory" type="ComponentFactory" line="50"/>
            <method name="HeadlessToolkit" type="constructor" line="52">
                <params>
                    <param name="tk" type="Toolkit"/>
                </params>
                <scope line="54"/>
            </method>
            <method name="getUnderlyingToolkit" type="Toolkit" line="59"/>
            <method name="createCanvas" type="CanvasPeer" line="69">
                <params>
                    <param name="target" type="Canvas"/>
                </params>
            </method>
            <method name="createPanel" type="PanelPeer" line="73">
                <params>
                    <param name="target" type="Panel"/>
                </params>
            </method>
            <method name="createWindow" type="WindowPeer" line="82">
                <params>
                    <param name="target" type="Window"/>
                </params>
            </method>
            <method name="createFrame" type="FramePeer" line="87">
                <params>
                    <param name="target" type="Frame"/>
                </params>
            </method>
            <method name="createDialog" type="DialogPeer" line="92">
                <params>
                    <param name="target" type="Dialog"/>
                </params>
            </method>
            <method name="createButton" type="ButtonPeer" line="97">
                <params>
                    <param name="target" type="Button"/>
                </params>
            </method>
            <method name="createTextField" type="TextFieldPeer" line="102">
                <params>
                    <param name="target" type="TextField"/>
                </params>
            </method>
            <method name="createChoice" type="ChoicePeer" line="107">
                <params>
                    <param name="target" type="Choice"/>
                </params>
            </method>
            <method name="createLabel" type="LabelPeer" line="112">
                <params>
                    <param name="target" type="Label"/>
                </params>
            </method>
            <method name="createList" type="ListPeer" line="117">
                <params>
                    <param name="target" type="List"/>
                </params>
            </method>
            <method name="createCheckbox" type="CheckboxPeer" line="122">
                <params>
                    <param name="target" type="Checkbox"/>
                </params>
            </method>
            <method name="createScrollbar" type="ScrollbarPeer" line="127">
                <params>
                    <param name="target" type="Scrollbar"/>
                </params>
            </method>
            <method name="createScrollPane" type="ScrollPanePeer" line="132">
                <params>
                    <param name="target" type="ScrollPane"/>
                </params>
            </method>
            <method name="createTextArea" type="TextAreaPeer" line="137">
                <params>
                    <param name="target" type="TextArea"/>
                </params>
            </method>
            <method name="createFileDialog" type="FileDialogPeer" line="142">
                <params>
                    <param name="target" type="FileDialog"/>
                </params>
            </method>
            <method name="createMenuBar" type="MenuBarPeer" line="147">
                <params>
                    <param name="target" type="MenuBar"/>
                </params>
            </method>
            <method name="createMenu" type="MenuPeer" line="152">
                <params>
                    <param name="target" type="Menu"/>
                </params>
            </method>
            <method name="createPopupMenu" type="PopupMenuPeer" line="157">
                <params>
                    <param name="target" type="PopupMenu"/>
                </params>
            </method>
            <method name="createMenuItem" type="MenuItemPeer" line="162">
                <params>
                    <param name="target" type="MenuItem"/>
                </params>
            </method>
            <method name="createCheckboxMenuItem" type="CheckboxMenuItemPeer" line="167">
                <params>
                    <param name="target" type="CheckboxMenuItem"/>
                </params>
            </method>
            <method name="createDragSourceContextPeer" type="DragSourceContextPeer" line="173">
                <params>
                    <param name="dge" type="DragGestureEvent"/>
                </params>
            </method>
            <method name="createRobot" type="RobotPeer" line="178">
                <params>
                    <param name="target" type="Robot"/>
                    <param name="screen" type="GraphicsDevice"/>
                </params>
            </method>
            <method name="createKeyboardFocusManagerPeer" type="KeyboardFocusManagerPeer" line="182">
                <params>
                    <param name="manager" type="KeyboardFocusManager"/>
                </params>
                <comment line="184">
                    See 6833019.                    
                </comment>
                <anonymous_class line="185">
                    <method name="getCurrentFocusedWindow" type="Window" line="186"/>
                    <method name="setCurrentFocusOwner" type="void" line="187">
                        <params>
                            <param name="comp" type="Component"/>
                        </params>
                    </method>
                    <method name="getCurrentFocusOwner" type="Component" line="188"/>
                    <method name="clearGlobalFocusOwner" type="void" line="189">
                        <params>
                            <param name="activeWindow" type="Window"/>
                        </params>
                    </method>
                </anonymous_class>
            </method>
            <method name="createTrayIcon" type="TrayIconPeer" line="194">
                <params>
                    <param name="target" type="TrayIcon"/>
                </params>
            </method>
            <method name="createSystemTray" type="SystemTrayPeer" line="199">
                <params>
                    <param name="target" type="SystemTray"/>
                </params>
            </method>
            <method name="isTraySupported" type="boolean" line="203"/>
            <method name="getGlobalCursorManager" type="GlobalCursorManager" line="208"/>
            <method name="loadSystemColors" type="void" line="216">
                <params>
                    <param name="systemColors" type="int[]"/>
                </params>
            </method>
            <method name="getColorModel" type="ColorModel" line="221"/>
            <method name="getScreenResolution" type="int" line="226"/>
            <method name="mapInputMethodHighlight" type="Map" line="231">
                <params>
                    <param name="highlight" type="InputMethodHighlight"/>
                </params>
            </method>
            <method name="getMenuShortcutKeyMask" type="int" line="236"/>
            <method name="getLockingKeyState" type="boolean" line="241">
                <params>
                    <param name="keyCode" type="int"/>
                </params>
            </method>
            <method name="setLockingKeyState" type="void" line="246">
                <params>
                    <param name="keyCode" type="int"/>
                    <param name="on" type="boolean"/>
                </params>
            </method>
            <method name="createCustomCursor" type="Cursor" line="251">
                <params>
                    <param name="cursor" type="Image"/>
                    <param name="hotSpot" type="Point"/>
                    <param name="name" type="String"/>
                </params>
            </method>
            <method name="getBestCursorSize" type="Dimension" line="256">
                <params>
                    <param name="preferredWidth" type="int"/>
                    <param name="preferredHeight" type="int"/>
                </params>
            </method>
            <method name="getMaximumCursorColors" type="int" line="261"/>
            <method name="createDragGestureRecognizer" type="T" line="269">
                <params>
                    <param name="abstractRecognizerClass" type="Class<T>"/>
                    <param name="ds" type="DragSource"/>
                    <param name="c" type="Component"/>
                    <param name="srcActions" type="int"/>
                    <param name="dgl" type="DragGestureListener"/>
                </params>
            </method>
            <method name="getScreenHeight" type="int" line="274"/>
            <method name="getScreenWidth" type="int" line="279"/>
            <method name="getScreenSize" type="Dimension" line="284"/>
            <method name="getScreenInsets" type="Insets" line="289">
                <params>
                    <param name="gc" type="GraphicsConfiguration"/>
                </params>
            </method>
            <method name="setDynamicLayout" type="void" line="294">
                <params>
                    <param name="dynamic" type="boolean"/>
                </params>
            </method>
            <method name="isDynamicLayoutSet" type="boolean" line="299"/>
            <method name="isDynamicLayoutActive" type="boolean" line="304"/>
            <method name="getSystemClipboard" type="Clipboard" line="309"/>
            <method name="getPrintJob" type="PrintJob" line="318">
                <params>
                    <param name="frame" type="Frame"/>
                    <param name="jobtitle" type="String"/>
                    <param name="jobAttributes" type="JobAttributes"/>
                    <param name="pageAttributes" type="PageAttributes"/>
                </params>
                <comment line="321">
                    Should never happen                    
                </comment>
                <scope line="319"/>
            </method>
            <method name="getPrintJob" type="PrintJob" line="327">
                <params>
                    <param name="frame" type="Frame"/>
                    <param name="doctitle" type="String"/>
                    <param name="props" type="Properties"/>
                </params>
                <comment line="330">
                    Should never happen                    
                </comment>
                <scope line="328"/>
            </method>
            <method name="sync" type="void" line="339">
                <comment line="341">
                    Do nothing                    
                </comment>
            </method>
            <method name="beep" type="void" line="343">
                <comment line="345">
                    Send alert character                    
                </comment>
            </method>
            <method name="getSystemEventQueueImpl" type="EventQueue" line="351"/>
            <method name="checkImage" type="int" line="358">
                <params>
                    <param name="img" type="Image"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="o" type="ImageObserver"/>
                </params>
            </method>
            <method name="prepareImage" type="boolean" line="363">
                <params>
                    <param name="img" type="Image"/>
                    <param name="w" type="int"/>
                    <param name="h" type="int"/>
                    <param name="o" type="ImageObserver"/>
                </params>
            </method>
            <method name="getImage" type="Image" line="367">
                <params>
                    <param name="filename" type="String"/>
                </params>
            </method>
            <method name="getImage" type="Image" line="371">
                <params>
                    <param name="url" type="URL"/>
                </params>
            </method>
            <method name="createImage" type="Image" line="375">
                <params>
                    <param name="filename" type="String"/>
                </params>
            </method>
            <method name="createImage" type="Image" line="379">
                <params>
                    <param name="url" type="URL"/>
                </params>
            </method>
            <method name="createImage" type="Image" line="383">
                <params>
                    <param name="data" type="byte[]"/>
                    <param name="offset" type="int"/>
                    <param name="length" type="int"/>
                </params>
            </method>
            <method name="createImage" type="Image" line="387">
                <params>
                    <param name="producer" type="ImageProducer"/>
                </params>
            </method>
            <method name="createImage" type="Image" line="391">
                <params>
                    <param name="imagedata" type="byte[]"/>
                </params>
            </method>
            <method name="getFontPeer" type="FontPeer" line="399">
                <params>
                    <param name="name" type="String"/>
                    <param name="style" type="int"/>
                </params>
                <scope line="400"/>
            </method>
            <method name="getFontMetrics" type="FontMetrics" line="406">
                <params>
                    <param name="font" type="Font"/>
                </params>
            </method>
            <method name="getFontList" type="String[]" line="410"/>
            <method name="addPropertyChangeListener" type="void" line="419">
                <params>
                    <param name="name" type="String"/>
                    <param name="pcl" type="PropertyChangeListener"/>
                </params>
            </method>
            <method name="removePropertyChangeListener" type="void" line="424">
                <params>
                    <param name="name" type="String"/>
                    <param name="pcl" type="PropertyChangeListener"/>
                </params>
            </method>
            <method name="isModalityTypeSupported" type="boolean" line="431">
                <params>
                    <param name="modalityType" type="Dialog.ModalityType"/>
                </params>
            </method>
            <method name="isModalExclusionTypeSupported" type="boolean" line="435">
                <params>
                    <param name="exclusionType" type="Dialog.ModalExclusionType"/>
                </params>
            </method>
            <method name="isAlwaysOnTopSupported" type="boolean" line="442"/>
            <method name="addAWTEventListener" type="void" line="451">
                <params>
                    <param name="listener" type="AWTEventListener"/>
                    <param name="eventMask" type="long"/>
                </params>
            </method>
            <method name="removeAWTEventListener" type="void" line="455">
                <params>
                    <param name="listener" type="AWTEventListener"/>
                </params>
            </method>
            <method name="getAWTEventListeners" type="AWTEventListener[]" line="459"/>
            <method name="getAWTEventListeners" type="AWTEventListener[]" line="463">
                <params>
                    <param name="eventMask" type="long"/>
                </params>
            </method>
            <method name="isDesktopSupported" type="boolean" line="467"/>
            <method name="createDesktopPeer" type="DesktopPeer" line="472">
                <params>
                    <param name="target" type="Desktop"/>
                </params>
            </method>
            <method name="areExtraMouseButtonsEnabled" type="boolean" line="476"/>
        </class>
    </source>