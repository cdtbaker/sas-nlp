<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.im">
        <import package="java.awt.AWTException"/>
        <import package="java.awt.im.spi.InputMethodDescriptor"/>
        <import package="java.util.Locale"/>
        <class name="InputMethodLocator" line="5">
            <javadoc line="5">
                Provides complete information to make and handle the selection
                  of an input method and a locale. Immutable class.                
            </javadoc>
            <declaration name="descriptor" type="InputMethodDescriptor" line="10"/>
            <declaration name="loader" type="ClassLoader" line="11"/>
            <declaration name="locale" type="Locale" line="12"/>
            <method name="InputMethodLocator" type="constructor" line="13">
                <params>
                    <param name="descriptor" type="InputMethodDescriptor"/>
                    <param name="loader" type="ClassLoader"/>
                    <param name="locale" type="Locale"/>
                </params>
                <scope line="14"/>
            </method>
            <method name="equals" type="boolean" line="21">
                <params>
                    <param name="other" type="Object"/>
                </params>
                <scope line="22"/>
                <scope line="25"/>
                <declaration name="otherLocator" type="InputMethodLocator" line="28"/>
                <scope line="29"/>
                <scope line="32"/>
                <scope line="35"/>
            </method>
            <method name="hashCode" type="int" line="40">
                <declaration name="result" type="int" line="41"/>
                <scope line="42"/>
                <scope line="45"/>
            </method>
            <method name="getDescriptor" type="InputMethodDescriptor" line="50"/>
            <method name="getClassLoader" type="ClassLoader" line="53"/>
            <method name="getLocale" type="Locale" line="56"/>
            <javadoc line="59">
                Returns whether support for locale is available from
                  the input method.                
            </javadoc>
            <method name="isLocaleAvailable" type="boolean" line="63">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
                <scope line="64">
                    <declaration name="locales" type="Locale[]" line="65"/>
                    <scope line="66">
                        <scope line="67"/>
                    </scope>
                </scope>
                <scope line="72"/>
            </method>
            <javadoc line="76">
                Returns an input method locator that has locale forLocale,
                  but otherwise the same data as this locator. Does not
                  check whether the input method actually supports forLocale -
                  use {@link #isLocaleAvailable} for that.                
            </javadoc>
            <method name="deriveLocator" type="InputMethodLocator" line="82">
                <params>
                    <param name="forLocale" type="Locale"/>
                </params>
                <scope line="83"/>
                <scope line="86"/>
            </method>
            <javadoc line="90">
                Returns whether this and other describe the same input method
                  engine, ignoring the locale setting.                
            </javadoc>
            <method name="sameInputMethod" type="boolean" line="94">
                <params>
                    <param name="other" type="InputMethodLocator"/>
                </params>
                <scope line="95"/>
                <scope line="98"/>
                <scope line="101"/>
                <scope line="104"/>
            </method>
            <javadoc line="109">
                Returns a string that can be used as an action command string.
                  The first part of the string identifies the input method; it does
                  not include &apos;\n&apos;. If getLocale is not null, getLocale().toString()
                  is appended, separated by &apos;\n&apos;.                
            </javadoc>
            <method name="getActionCommandString" type="String" line="115">
                <declaration name="inputMethodString" type="String" line="116"/>
                <scope line="117"/>
                <scope line="120"/>
            </method>
        </class>
    </source>