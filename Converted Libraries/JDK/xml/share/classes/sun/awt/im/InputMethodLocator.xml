<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.im">
        <import package="java.awt.AWTException"/>
        <import package="java.awt.im.spi.InputMethodDescriptor"/>
        <import package="java.util.Locale"/>
        <class name="InputMethodLocator" line="32">
            <comment line="41">
                Currently `loader&apos; is always the class loader for a                
            </comment>
            <comment line="42">
                descriptor. `loader&apos; is provided for future extensions to be                
            </comment>
            <comment line="43">
                able to load input methods from somewhere else, and to support                
            </comment>
            <comment line="44">
                per input method name space.                
            </comment>
            <javadoc line="32">
                Provides complete information to make and handle the selection
                  of an input method and a locale. Immutable class.                
            </javadoc>
            <declaration name="descriptor" type="InputMethodDescriptor" line="38"/>
            <declaration name="loader" type="ClassLoader" line="44"/>
            <declaration name="locale" type="Locale" line="46"/>
            <method name="InputMethodLocator" type="constructor" line="48">
                <params>
                    <param name="descriptor" type="InputMethodDescriptor"/>
                    <param name="loader" type="ClassLoader"/>
                    <param name="locale" type="Locale"/>
                </params>
                <scope line="49"/>
            </method>
            <method name="equals" type="boolean" line="57">
                <params>
                    <param name="other" type="Object"/>
                </params>
                <scope line="58"/>
                <scope line="61"/>
                <declaration name="otherLocator" type="InputMethodLocator" line="65"/>
                <scope line="66"/>
                <scope line="70"/>
                <scope line="74"/>
            </method>
            <method name="hashCode" type="int" line="80">
                <declaration name="result" type="int" line="81"/>
                <scope line="82"/>
                <scope line="85"/>
            </method>
            <method name="getDescriptor" type="InputMethodDescriptor" line="91"/>
            <method name="getClassLoader" type="ClassLoader" line="95"/>
            <method name="getLocale" type="Locale" line="99"/>
            <javadoc line="103">
                Returns whether support for locale is available from
                  the input method.                
            </javadoc>
            <method name="isLocaleAvailable" type="boolean" line="107">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
                <comment line="116">
                    treat this as no locale available                    
                </comment>
                <scope line="108">
                    <declaration name="locales" type="Locale[]" line="109"/>
                    <scope line="110">
                        <scope line="111"/>
                    </scope>
                </scope>
                <scope line="115"/>
            </method>
            <javadoc line="121">
                Returns an input method locator that has locale forLocale,
                  but otherwise the same data as this locator. Does not
                  check whether the input method actually supports forLocale -
                  use {@link #isLocaleAvailable} for that.                
            </javadoc>
            <method name="deriveLocator" type="InputMethodLocator" line="127">
                <params>
                    <param name="forLocale" type="Locale"/>
                </params>
                <scope line="128"/>
                <scope line="130"/>
            </method>
            <javadoc line="135">
                Returns whether this and other describe the same input method
                  engine, ignoring the locale setting.                
            </javadoc>
            <method name="sameInputMethod" type="boolean" line="139">
                <params>
                    <param name="other" type="InputMethodLocator"/>
                </params>
                <scope line="140"/>
                <scope line="143"/>
                <scope line="147"/>
                <scope line="151"/>
            </method>
            <javadoc line="157">
                Returns a string that can be used as an action command string.
                  The first part of the string identifies the input method; it does
                  not include &apos;\n&apos;. If getLocale is not null, getLocale().toString()
                  is appended, separated by &apos;\n&apos;.                
            </javadoc>
            <method name="getActionCommandString" type="String" line="163">
                <declaration name="inputMethodString" type="String" line="164"/>
                <scope line="165"/>
                <scope line="167"/>
            </method>
        </class>
    </source>