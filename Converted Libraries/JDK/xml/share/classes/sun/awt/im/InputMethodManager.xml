<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.im">
        <import package="java.awt.AWTException"/>
        <import package="java.awt.CheckboxMenuItem"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Dialog"/>
        <import package="java.awt.EventQueue"/>
        <import package="java.awt.Frame"/>
        <import package="java.awt.PopupMenu"/>
        <import package="java.awt.Menu"/>
        <import package="java.awt.MenuItem"/>
        <import package="java.awt.Toolkit"/>
        <import package="sun.awt.AppContext"/>
        <import package="java.awt.event.ActionEvent"/>
        <import package="java.awt.event.ActionListener"/>
        <import package="java.awt.event.InvocationEvent"/>
        <import package="java.awt.im.spi.InputMethodDescriptor"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.security.PrivilegedActionException"/>
        <import package="java.security.PrivilegedExceptionAction"/>
        <import package="java.util.Hashtable"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.Locale"/>
        <import package="java.util.ServiceLoader"/>
        <import package="java.util.Vector"/>
        <import package="java.util.Set"/>
        <import package="java.util.prefs.BackingStoreException"/>
        <import package="java.util.prefs.Preferences"/>
        <import package="sun.awt.InputMethodSupport"/>
        <import package="sun.awt.SunToolkit"/>
        <class name="InputMethodManager" line="59">
            <comment line="247">
                the input context that&apos;s informed about selections from the user interface                
            </comment>
            <comment line="250">
                Menu item string for the trigger menu.                
            </comment>
            <comment line="253">
                popup menu for selecting an input method                
            </comment>
            <comment line="257">
                locator and name of host adapter                
            </comment>
            <comment line="260">
                locators for Java input methods                
            </comment>
            <comment line="261">
                number of Java input methods found                
            </comment>
            <comment line="264">
                component that is requesting input method switch                
            </comment>
            <comment line="265">
                must be Frame or Dialog                
            </comment>
            <comment line="268">
                input context that is requesting input method switch                
            </comment>
            <comment line="271">
                IM preference stuff                
            </comment>
            <comment line="337">
                Shows Input Method Menu on the EDT of requester component                
            </comment>
            <comment line="338">
                to avoid side effects. See 6544309.                
            </comment>
            <comment line="409">
                Returns true if the environment indicates there are multiple input methods                
            </comment>
            <comment line="426">
                initializes the input method locator list for all
                 installed input method descriptors.                
            </comment>
            <javadoc line="59">
                &lt;code&gt;InputMethodManager&lt;/code&gt; is an abstract class that manages the input
                  method environment of JVM. There is only one &lt;code&gt;InputMethodManager&lt;/code&gt;
                  instance in JVM that is executed under a separate daemon thread.
                  &lt;code&gt;InputMethodManager&lt;/code&gt; performs the following:
                  &lt;UL&gt;
                  &lt;LI&gt;
                  Keeps track of the current input context.&lt;/LI&gt;
                  &lt;LI&gt;
                  Provides a user interface to switch input methods and notifies the current
                  input context about changes made from the user interface.&lt;/LI&gt;
                  &lt;/UL&gt;
                  The mechanism for supporting input method switch is as follows. (Note that
                  this may change in future releases.)
                  &lt;UL&gt;
                  &lt;LI&gt;
                  One way is to use platform-dependent window manager&apos;s menu (known as the &lt;I&gt;Window
                  menu &lt;/I&gt;in Motif and the &lt;I&gt;System menu&lt;/I&gt; or &lt;I&gt;Control menu&lt;/I&gt; in
                  Win32) on each window which is popped up by clicking the left top box of
                  a window (known as &lt;I&gt;Window menu button&lt;/I&gt; in Motif and &lt;I&gt;System menu
                  button&lt;/I&gt; in Win32). This happens to be common in both Motif and Win32.&lt;/LI&gt;
                  &lt;LI&gt;
                  When more than one input method descriptor can be found or the only input
                  method descriptor found supports multiple locales, a menu item
                  is added to the window (manager) menu. This item label is obtained invoking
                  &lt;code&gt;getTriggerMenuString()&lt;/code&gt;. If null is returned by this method, it
                  means that there is only input method or none in the environment. Frame and Dialog
                  invoke this method.&lt;/LI&gt;
                  &lt;LI&gt;
                  This menu item means a trigger switch to the user to pop up a selection
                  menu.&lt;/LI&gt;
                  &lt;LI&gt;
                  When the menu item of the window (manager) menu has been selected by the
                  user, Frame/Dialog invokes &lt;code&gt;notifyChangeRequest()&lt;/code&gt; to notify
                  &lt;code&gt;InputMethodManager&lt;/code&gt; that the user wants to switch input methods.&lt;/LI&gt;
                  &lt;LI&gt;
                  &lt;code&gt;InputMethodManager&lt;/code&gt; displays a pop-up menu to choose an input method.&lt;/LI&gt;
                  &lt;LI&gt;
                  &lt;code&gt;InputMethodManager&lt;/code&gt; notifies the current &lt;code&gt;InputContext&lt;/code&gt; of
                  the selected &lt;code&gt;InputMethod&lt;/code&gt;.&lt;/LI&gt;
                  &lt;/UL&gt;
                  &lt;UL&gt;
                  &lt;LI&gt;
                  The other way is to use user-defined hot key combination to show the pop-up menu to
                  choose an input method.  This is useful for the platforms which do not provide a
                  way to add a menu item in the window (manager) menu.&lt;/LI&gt;
                  &lt;LI&gt;
                  When the hot key combination is typed by the user, the component which has the input
                  focus invokes &lt;code&gt;notifyChangeRequestByHotKey()&lt;/code&gt; to notify
                  &lt;code&gt;InputMethodManager&lt;/code&gt; that the user wants to switch input methods.&lt;/LI&gt;
                  &lt;LI&gt;
                  This results in a popup menu and notification to the current input context,
                  as above.&lt;/LI&gt;
                  &lt;/UL&gt;                
                <see>
                    java.awt.im.spi.InputMethod                    
                </see>
                <see>
                    sun.awt.im.InputContext                    
                </see>
                <see>
                    sun.awt.im.InputMethodAdapter                    
                </see>
                <author>
                    JavaSoft International                    
                </author>
            </javadoc>
            <declaration name="threadName" type="String" line="133"/>
            <javadoc line="133">
                InputMethodManager thread name                
            </javadoc>
            <declaration name="LOCK" type="Object" line="138"/>
            <javadoc line="138">
                Object for global locking                
            </javadoc>
            <declaration name="inputMethodManager" type="InputMethodManager" line="143"/>
            <javadoc line="143">
                The InputMethodManager instance                
            </javadoc>
            <javadoc line="148">
                Returns the instance of InputMethodManager. This method creates
                  the instance that is unique in the Java VM if it has not been
                  created yet.                
                <return>
                    the InputMethodManager instance                    
                </return>
            </javadoc>
            <method name="getInstance" type="InputMethodManager" line="155">
                <comment line="163">
                    Initialize the input method manager and start a                    
                </comment>
                <comment line="164">
                    daemon thread if the user has multiple input methods                    
                </comment>
                <comment line="165">
                    to choose from. Otherwise, just keep the instance.                    
                </comment>
                <scope line="156"/>
                <scope line="159">
                    <scope line="160">
                        <declaration name="imm" type="ExecutableInputMethodManager" line="161"/>
                        <scope line="166">
                            <declaration name="immThread" type="Thread" line="168"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="getTriggerMenuString" type="String" line="179"/>
            <javadoc line="179">
                Gets a string for the trigger menu item that should be added to
                  the window manager menu. If no need to display the trigger menu
                  item, null is returned.                
            </javadoc>
            <method name="notifyChangeRequest" type="void" line="186"/>
            <javadoc line="186">
                Notifies InputMethodManager that input method change has been
                  requested by the user. This notification triggers a popup menu
                  for user selection.                
                <param>
                    comp Component that has accepted the change
                      request. This component has to be a Frame or Dialog.                    
                </param>
            </javadoc>
            <method name="notifyChangeRequestByHotKey" type="void" line="196"/>
            <javadoc line="196">
                Notifies InputMethodManager that input method change has been
                  requested by the user using the hot key combination. This
                  notification triggers a popup menu for user selection.                
                <param>
                    comp Component that has accepted the change
                      request. This component has the input focus.                    
                </param>
            </javadoc>
            <method name="setInputContext" type="void" line="206"/>
            <javadoc line="206">
                Sets the current input context so that it will be notified
                  of input method changes initiated from the user interface.
                  Set to real input context when activating; to null when
                  deactivating.                
            </javadoc>
            <method name="findInputMethod" type="InputMethodLocator" line="214"/>
            <javadoc line="214">
                Tries to find an input method locator for the given locale.
                  Returns null if no available input method locator supports
                  the locale.                
            </javadoc>
            <method name="getDefaultKeyboardLocale" type="Locale" line="221"/>
            <javadoc line="221">
                Gets the default keyboard locale of the underlying operating system.                
            </javadoc>
            <method name="hasMultipleInputMethods" type="boolean" line="226"/>
            <javadoc line="226">
                Returns whether multiple input methods are available or not                
            </javadoc>
        </class>
        <class name="ExecutableInputMethodManager" line="233">
            <extends class="InputMethodManager"/>
            <comment line="247">
                the input context that&apos;s informed about selections from the user interface                
            </comment>
            <comment line="250">
                Menu item string for the trigger menu.                
            </comment>
            <comment line="253">
                popup menu for selecting an input method                
            </comment>
            <comment line="257">
                locator and name of host adapter                
            </comment>
            <comment line="260">
                locators for Java input methods                
            </comment>
            <comment line="261">
                number of Java input methods found                
            </comment>
            <comment line="264">
                component that is requesting input method switch                
            </comment>
            <comment line="265">
                must be Frame or Dialog                
            </comment>
            <comment line="268">
                input context that is requesting input method switch                
            </comment>
            <comment line="271">
                IM preference stuff                
            </comment>
            <comment line="337">
                Shows Input Method Menu on the EDT of requester component                
            </comment>
            <comment line="338">
                to avoid side effects. See 6544309.                
            </comment>
            <comment line="409">
                Returns true if the environment indicates there are multiple input methods                
            </comment>
            <comment line="426">
                initializes the input method locator list for all
                 installed input method descriptors.                
            </comment>
            <implements interface="Runnable"/>
            <javadoc line="233">
                &lt;code&gt;ExecutableInputMethodManager&lt;/code&gt; is the implementation of the
                  &lt;code&gt;InputMethodManager&lt;/code&gt; class. It is runnable as a separate
                  thread in the AWT environment.&amp;nbsp;
                  &lt;code&gt;InputMethodManager.getInstance()&lt;/code&gt; creates an instance of
                  &lt;code&gt;ExecutableInputMethodManager&lt;/code&gt; and executes it as a deamon
                  thread.                
                <see>
                    InputMethodManager                    
                </see>
            </javadoc>
            <declaration name="currentInputContext" type="InputContext" line="247"/>
            <declaration name="triggerMenuString" type="String" line="250"/>
            <declaration name="selectionMenu" type="InputMethodPopupMenu" line="253"/>
            <declaration name="selectInputMethodMenuTitle" type="String" line="254"/>
            <declaration name="hostAdapterLocator" type="InputMethodLocator" line="257"/>
            <declaration name="javaInputMethodCount" type="int" line="260"/>
            <declaration name="javaInputMethodLocatorList" type="Vector&lt;InputMethodLocator&gt;" line="261"/>
            <declaration name="requestComponent" type="Component" line="265"/>
            <declaration name="requestInputContext" type="InputContext" line="268"/>
            <declaration name="preferredIMNode" type="String" line="271"/>
            <declaration name="descriptorKey" type="String" line="272"/>
            <declaration name="preferredLocatorCache" type="Hashtable" line="273"/>
            <declaration name="userRoot" type="Preferences" line="274"/>
            <method name="ExecutableInputMethodManager" type="constructor" line="276">
                <comment line="278">
                    set up host adapter locator                    
                </comment>
                <comment line="290">
                    if we can&apos;t get a descriptor, we&apos;ll just have to do without native input methods                    
                </comment>
                <declaration name="toolkit" type="Toolkit" line="279"/>
                <scope line="280">
                    <scope line="281">
                        <declaration name="hostAdapterDescriptor" type="InputMethodDescriptor" line="282"/>
                        <scope line="285"/>
                    </scope>
                </scope>
                <scope line="289"/>
            </method>
            <method name="initialize" type="void" line="297"/>
            <method name="run" type="void" line="303">
                <comment line="304">
                    If there are no multiple input methods to choose from, wait forever                    
                </comment>
                <comment line="314">
                    Loop for processing input method change requests                    
                </comment>
                <comment line="322">
                    show the popup menu within the event thread                    
                </comment>
                <comment line="331">
                    should we do anything under these exceptions?                    
                </comment>
                <scope line="305">
                    <scope line="306">
                        <scope line="307"/>
                    </scope>
                    <scope line="310"/>
                </scope>
                <scope line="315">
                    <scope line="318">
                        <scope line="319"/>
                        <scope line="321">
                            <anonymous_class line="323">
                                <method name="run" type="void" line="324"/>
                            </anonymous_class>
                        </scope>
                    </scope>
                    <scope line="329"/>
                    <scope line="330"/>
                </scope>
            </method>
            <method name="showInputMethodMenuOnRequesterEDT" type="void" line="339">
                <params>
                    <param name="requester" type="Component"/>
                </params>
                <scope line="341"/>
                <class name="AWTInvocationLock" line="345"/>
                <declaration name="lock" type="Object" line="346"/>
                <anonymous_class line="350">
                    <method name="run" type="void" line="351"/>
                </anonymous_class>
                <declaration name="event" type="InvocationEvent" line="348"/>
                <declaration name="requesterAppContext" type="AppContext" line="358"/>
                <scope line="359">
                    <scope line="361"/>
                </scope>
                <declaration name="eventThrowable" type="Throwable" line="366"/>
                <scope line="367"/>
            </method>
            <method name="setInputContext" type="void" line="372">
                <params>
                    <param name="inputContext" type="InputContext"/>
                </params>
                <comment line="374">
                    don&apos;t throw this exception until 4237852 is fixed                    
                </comment>
                <comment line="375">
                    throw new IllegalStateException(&quot;Can&apos;t have two active InputContext at the same time&quot;);                    
                </comment>
                <scope line="373"/>
            </method>
            <method name="notifyChangeRequest" type="void" line="380">
                <params>
                    <param name="comp" type="Component"/>
                </params>
                <comment line="384">
                    if busy with the current request, ignore this request.                    
                </comment>
            </method>
            <method name="notifyChangeRequestByHotKey" type="void" line="392">
                <params>
                    <param name="comp" type="Component"/>
                </params>
                <comment line="395">
                    no Frame or Dialog found in containment hierarchy.                    
                </comment>
                <scope line="393">
                    <scope line="394"/>
                </scope>
            </method>
            <method name="getTriggerMenuString" type="String" line="404"/>
            <method name="hasMultipleInputMethods" type="boolean" line="411"/>
            <method name="waitForChangeRequest" type="void" line="416">
                <scope line="417">
                    <scope line="418"/>
                </scope>
                <scope line="421"/>
            </method>
            <method name="initializeInputMethodLocatorList" type="void" line="429">
                <comment line="450">
                    initialize preferences                    
                </comment>
                <comment line="455">
                    indicate to clients not to offer the menu                    
                </comment>
                <scope line="430">
                    <scope line="432">
                        <anonymous_class line="433">
                            <method name="run" type="Object" line="434">
                                <scope line="436">
                                    <declaration name="cl" type="ClassLoader" line="437"/>
                                </scope>
                            </method>
                        </anonymous_class>
                    </scope>
                    <scope line="443"/>
                </scope>
                <scope line="449">
                    <scope line="451"/>
                </scope>
                <scope line="454"/>
            </method>
            <method name="showInputMethodMenu" type="void" line="460">
                <comment line="467">
                    initialize pop-up menu                    
                </comment>
                <comment line="470">
                    we have to rebuild the menu each time because                    
                </comment>
                <comment line="471">
                    some input methods (such as IIIMP) may change                    
                </comment>
                <comment line="472">
                    their list of supported locales dynamically                    
                </comment>
                <comment line="475">
                    get information about the currently selected input method                    
                </comment>
                <comment line="476">
                    ??? if there&apos;s no current input context, what&apos;s the point                    
                </comment>
                <comment line="477">
                    of showing the menu?                    
                </comment>
                <comment line="480">
                    Add menu item for host adapter                    
                </comment>
                <comment line="486">
                    Add menu items for other input methods                    
                </comment>
                <comment line="495">
                    TODO: get proper x, y...                    
                </comment>
                <scope line="462"/>
                <declaration name="currentSelection" type="String" line="478"/>
                <scope line="481"/>
                <scope line="487">
                    <declaration name="locator" type="InputMethodLocator" line="488"/>
                </scope>
                <scope line="492"/>
            </method>
            <method name="getCurrentSelection" type="String" line="500">
                <declaration name="inputContext" type="InputContext" line="501"/>
                <scope line="502">
                    <declaration name="locator" type="InputMethodLocator" line="503"/>
                    <scope line="504"/>
                </scope>
            </method>
            <method name="changeInputMethod" type="void" line="511">
                <params>
                    <param name="choice" type="String"/>
                </params>
                <comment line="557">
                    tell the input context about the change                    
                </comment>
                <comment line="562">
                    remember the selection                    
                </comment>
                <declaration name="locator" type="InputMethodLocator" line="512"/>
                <declaration name="inputMethodName" type="String" line="514"/>
                <declaration name="localeString" type="String" line="515"/>
                <declaration name="index" type="int" line="516"/>
                <scope line="517"/>
                <scope line="521"/>
                <scope line="523">
                    <scope line="524">
                        <declaration name="candidate" type="InputMethodLocator" line="525"/>
                        <declaration name="name" type="String" line="526"/>
                        <scope line="527"/>
                    </scope>
                </scope>
                <scope line="534">
                    <declaration name="language" type="String" line="535"/>
                    <declaration name="postIndex" type="int" line="536"/>
                    <scope line="537"/>
                    <scope line="539">
                        <declaration name="preIndex" type="int" line="541"/>
                        <scope line="543"/>
                        <scope line="545"/>
                    </scope>
                    <declaration name="locale" type="Locale" line="550"/>
                </scope>
                <scope line="558"/>
            </method>
            <method name="findInputMethod" type="InputMethodLocator" line="567">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
                <comment line="568">
                    look for preferred input method first                    
                </comment>
                <comment line="578">
                    Update the locator list                    
                </comment>
                <declaration name="locator" type="InputMethodLocator" line="569"/>
                <scope line="570"/>
                <scope line="574"/>
                <scope line="581">
                    <declaration name="candidate" type="InputMethodLocator" line="582"/>
                    <scope line="583"/>
                </scope>
            </method>
            <method name="getDefaultKeyboardLocale" type="Locale" line="590">
                <declaration name="toolkit" type="Toolkit" line="591"/>
                <scope line="592"/>
                <scope line="594"/>
            </method>
            <javadoc line="599">
                Returns a InputMethodLocator object that the
                  user prefers for the given locale.                
                <param>
                    locale Locale for which the user prefers the input method.                    
                </param>
            </javadoc>
            <method name="getPreferredInputMethod" type="InputMethodLocator" line="605">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
                <comment line="609">
                    No need to look for a preferred Java input method                    
                </comment>
                <comment line="613">
                    look for the cached preference first.                    
                </comment>
                <comment line="619">
                    look for the preference in the user preference tree                    
                </comment>
                <comment line="624">
                    get the locator object                    
                </comment>
                <comment line="626">
                    check for the host adapter first                    
                </comment>
                <comment line="636">
                    look for Java input methods                    
                </comment>
                <comment line="650">
                    maybe preferred input method information is bogus.                    
                </comment>
                <declaration name="preferredLocator" type="InputMethodLocator" line="606"/>
                <scope line="608"/>
                <scope line="615"/>
                <declaration name="nodePath" type="String" line="620"/>
                <declaration name="descriptorName" type="String" line="621"/>
                <declaration name="advertised" type="Locale" line="622"/>
                <scope line="625">
                    <scope line="628">
                        <scope line="630"/>
                    </scope>
                    <scope line="637">
                        <declaration name="locator" type="InputMethodLocator" line="638"/>
                        <declaration name="descriptor" type="InputMethodDescriptor" line="639"/>
                        <scope line="640">
                            <scope line="642"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="findPreferredInputMethodNode" type="String" line="657">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
                <comment line="662">
                    create locale node relative path                    
                </comment>
                <comment line="665">
                    look for the descriptor                    
                </comment>
                <comment line="676">
                    search at parent&apos;s node                    
                </comment>
                <scope line="658"/>
                <declaration name="nodePath" type="String" line="663"/>
                <scope line="666">
                    <scope line="667">
                        <scope line="668">
                            <scope line="669"/>
                        </scope>
                    </scope>
                    <scope line="673"/>
                </scope>
            </method>
            <method name="readPreferredInputMethod" type="String" line="683">
                <params>
                    <param name="nodePath" type="String"/>
                </params>
                <scope line="684"/>
            </method>
            <javadoc line="691">
                Writes the preferred input method descriptor class name into
                  the user&apos;s Preferences tree in accordance with the given locale.                
                <param>
                    inputMethodLocator input method locator to remember.                    
                </param>
            </javadoc>
            <method name="putPreferredInputMethod" type="void" line="697">
                <params>
                    <param name="locator" type="InputMethodLocator"/>
                </params>
                <comment line="702">
                    check available locales of the input method                    
                </comment>
                <comment line="708">
                    there is no way to know which locale is the preferred one, so do nothing.                    
                </comment>
                <comment line="712">
                    do nothing here, either.                    
                </comment>
                <comment line="717">
                    for regions that have only one language, we need to regard                    
                </comment>
                <comment line="718">
                    &quot;xx_YY&quot; as &quot;xx&quot; when putting the preference into tree                    
                </comment>
                <comment line="729">
                    obtain node                    
                </comment>
                <comment line="732">
                    write in the preference tree                    
                </comment>
                <declaration name="descriptor" type="InputMethodDescriptor" line="698"/>
                <declaration name="preferredLocale" type="Locale" line="699"/>
                <scope line="701">
                    <scope line="703">
                        <declaration name="availableLocales" type="Locale[]" line="704"/>
                        <scope line="705"/>
                        <scope line="707"/>
                    </scope>
                    <scope line="711"/>
                </scope>
                <scope line="719"/>
                <scope line="722"/>
                <scope line="725"/>
                <declaration name="path" type="String" line="730"/>
            </method>
            <method name="createLocalePath" type="String" line="740">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
                <declaration name="language" type="String" line="741"/>
                <declaration name="country" type="String" line="742"/>
                <declaration name="variant" type="String" line="743"/>
                <declaration name="localePath" type="String" line="744"/>
                <scope line="745"/>
                <scope line="747"/>
                <scope line="749"/>
            </method>
            <method name="writePreferredInputMethod" type="void" line="756">
                <params>
                    <param name="path" type="String"/>
                    <param name="descriptorName" type="String"/>
                </params>
                <comment line="760">
                    record it                    
                </comment>
                <scope line="757">
                    <declaration name="node" type="Preferences" line="758"/>
                    <scope line="761"/>
                    <scope line="763"/>
                </scope>
            </method>
            <method name="getUserRoot" type="Preferences" line="769">
                <anonymous_class line="770">
                    <method name="run" type="Object" line="771"/>
                </anonymous_class>
            </method>
            <method name="getAdvertisedLocale" type="Locale" line="777">
                <params>
                    <param name="locator" type="InputMethodLocator"/>
                    <param name="locale" type="Locale"/>
                </params>
                <comment line="783">
                    for Japanese, Korean, and Thai, check whether the input method supports                    
                </comment>
                <comment line="784">
                    language or language_COUNTRY.                    
                </comment>
                <declaration name="advertised" type="Locale" line="778"/>
                <scope line="780"/>
                <scope line="782">
                    <scope line="785"/>
                    <scope line="787"/>
                </scope>
                <scope line="790">
                    <scope line="791"/>
                    <scope line="793"/>
                </scope>
                <scope line="796">
                    <scope line="797"/>
                    <scope line="799"/>
                </scope>
            </method>
        </class>
    </source>