<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.im">
        <import package="java.awt.AWTException"/>
        <import package="java.awt.CheckboxMenuItem"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Dialog"/>
        <import package="java.awt.EventQueue"/>
        <import package="java.awt.Frame"/>
        <import package="java.awt.PopupMenu"/>
        <import package="java.awt.Menu"/>
        <import package="java.awt.MenuItem"/>
        <import package="java.awt.Toolkit"/>
        <import package="sun.awt.AppContext"/>
        <import package="java.awt.event.ActionEvent"/>
        <import package="java.awt.event.ActionListener"/>
        <import package="java.awt.event.InvocationEvent"/>
        <import package="java.awt.im.spi.InputMethodDescriptor"/>
        <import package="java.lang.reflect.InvocationTargetException"/>
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedAction"/>
        <import package="java.security.PrivilegedActionException"/>
        <import package="java.security.PrivilegedExceptionAction"/>
        <import package="java.util.Hashtable"/>
        <import package="java.util.Iterator"/>
        <import package="java.util.Locale"/>
        <import package="java.util.ServiceLoader"/>
        <import package="java.util.Vector"/>
        <import package="java.util.Set"/>
        <import package="java.util.prefs.BackingStoreException"/>
        <import package="java.util.prefs.Preferences"/>
        <import package="sun.awt.InputMethodSupport"/>
        <import package="sun.awt.SunToolkit"/>
        <class name="InputMethodManager" line="32">
            <javadoc line="32">
                &lt;code&gt;InputMethodManager&lt;/code&gt; is an abstract class that manages the input
                  method environment of JVM. There is only one &lt;code&gt;InputMethodManager&lt;/code&gt;
                  instance in JVM that is executed under a separate daemon thread.
                  &lt;code&gt;InputMethodManager&lt;/code&gt; performs the following:
                  &lt;UL&gt;
                  &lt;LI&gt;
                  Keeps track of the current input context.&lt;/LI&gt;
                  &lt;LI&gt;
                  Provides a user interface to switch input methods and notifies the current
                  input context about changes made from the user interface.&lt;/LI&gt;
                  &lt;/UL&gt;
                  The mechanism for supporting input method switch is as follows. (Note that
                  this may change in future releases.)
                  &lt;UL&gt;
                  &lt;LI&gt;
                  One way is to use platform-dependent window manager&apos;s menu (known as the &lt;I&gt;Window
                  menu &lt;/I&gt;in Motif and the &lt;I&gt;System menu&lt;/I&gt; or &lt;I&gt;Control menu&lt;/I&gt; in
                  Win32) on each window which is popped up by clicking the left top box of
                  a window (known as &lt;I&gt;Window menu button&lt;/I&gt; in Motif and &lt;I&gt;System menu
                  button&lt;/I&gt; in Win32). This happens to be common in both Motif and Win32.&lt;/LI&gt;
                  &lt;LI&gt;
                  When more than one input method descriptor can be found or the only input
                  method descriptor found supports multiple locales, a menu item
                  is added to the window (manager) menu. This item label is obtained invoking
                  &lt;code&gt;getTriggerMenuString()&lt;/code&gt;. If null is returned by this method, it
                  means that there is only input method or none in the environment. Frame and Dialog
                  invoke this method.&lt;/LI&gt;
                  &lt;LI&gt;
                  This menu item means a trigger switch to the user to pop up a selection
                  menu.&lt;/LI&gt;
                  &lt;LI&gt;
                  When the menu item of the window (manager) menu has been selected by the
                  user, Frame/Dialog invokes &lt;code&gt;notifyChangeRequest()&lt;/code&gt; to notify
                  &lt;code&gt;InputMethodManager&lt;/code&gt; that the user wants to switch input methods.&lt;/LI&gt;
                  &lt;LI&gt;
                  &lt;code&gt;InputMethodManager&lt;/code&gt; displays a pop-up menu to choose an input method.&lt;/LI&gt;
                  &lt;LI&gt;
                  &lt;code&gt;InputMethodManager&lt;/code&gt; notifies the current &lt;code&gt;InputContext&lt;/code&gt; of
                  the selected &lt;code&gt;InputMethod&lt;/code&gt;.&lt;/LI&gt;
                  &lt;/UL&gt;
                  &lt;UL&gt;
                  &lt;LI&gt;
                  The other way is to use user-defined hot key combination to show the pop-up menu to
                  choose an input method.  This is useful for the platforms which do not provide a
                  way to add a menu item in the window (manager) menu.&lt;/LI&gt;
                  &lt;LI&gt;
                  When the hot key combination is typed by the user, the component which has the input
                  focus invokes &lt;code&gt;notifyChangeRequestByHotKey()&lt;/code&gt; to notify
                  &lt;code&gt;InputMethodManager&lt;/code&gt; that the user wants to switch input methods.&lt;/LI&gt;
                  &lt;LI&gt;
                  This results in a popup menu and notification to the current input context,
                  as above.&lt;/LI&gt;
                  &lt;/UL&gt;                
                <see>
                    java.awt.im.spi.InputMethod                    
                </see>
                <see>
                    sun.awt.im.InputContext                    
                </see>
                <see>
                    sun.awt.im.InputMethodAdapter                    
                </see>
                <author>
                    JavaSoft International                    
                </author>
            </javadoc>
            <declaration name="threadName" type="String" line="92"/>
            <javadoc line="92">
                InputMethodManager thread name                
            </javadoc>
            <declaration name="LOCK" type="Object" line="96"/>
            <javadoc line="96">
                Object for global locking                
            </javadoc>
            <declaration name="inputMethodManager" type="InputMethodManager" line="100"/>
            <javadoc line="100">
                The InputMethodManager instance                
            </javadoc>
            <javadoc line="104">
                Returns the instance of InputMethodManager. This method creates
                  the instance that is unique in the Java VM if it has not been
                  created yet.                
                <return>
                    the InputMethodManager instance                    
                </return>
            </javadoc>
            <method name="getInstance" type="InputMethodManager" line="110">
                <scope line="111"/>
                <scope line="114">
                    <scope line="115">
                        <declaration name="imm" type="ExecutableInputMethodManager" line="116"/>
                        <scope line="117">
                            <declaration name="immThread" type="Thread" line="119"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="getTriggerMenuString" type="String" line="129"/>
            <javadoc line="129">
                Gets a string for the trigger menu item that should be added to
                  the window manager menu. If no need to display the trigger menu
                  item, null is returned.                
            </javadoc>
            <method name="notifyChangeRequest" type="void" line="135"/>
            <javadoc line="135">
                Notifies InputMethodManager that input method change has been
                  requested by the user. This notification triggers a popup menu
                  for user selection.                
                <param>
                    comp Component that has accepted the change
                      request. This component has to be a Frame or Dialog.                    
                </param>
            </javadoc>
            <method name="notifyChangeRequestByHotKey" type="void" line="143"/>
            <javadoc line="143">
                Notifies InputMethodManager that input method change has been
                  requested by the user using the hot key combination. This
                  notification triggers a popup menu for user selection.                
                <param>
                    comp Component that has accepted the change
                      request. This component has the input focus.                    
                </param>
            </javadoc>
            <method name="setInputContext" type="void" line="151"/>
            <javadoc line="151">
                Sets the current input context so that it will be notified
                  of input method changes initiated from the user interface.
                  Set to real input context when activating; to null when
                  deactivating.                
            </javadoc>
            <method name="findInputMethod" type="InputMethodLocator" line="158"/>
            <javadoc line="158">
                Tries to find an input method locator for the given locale.
                  Returns null if no available input method locator supports
                  the locale.                
            </javadoc>
            <method name="getDefaultKeyboardLocale" type="Locale" line="164"/>
            <javadoc line="164">
                Gets the default keyboard locale of the underlying operating system.                
            </javadoc>
            <method name="hasMultipleInputMethods" type="boolean" line="168"/>
            <javadoc line="168">
                Returns whether multiple input methods are available or not                
            </javadoc>
        </class>
        <class name="ExecutableInputMethodManager" line="173">
            <extends class="InputMethodManager"/>
            <implements interface="Runnable"/>
            <javadoc line="173">
                &lt;code&gt;ExecutableInputMethodManager&lt;/code&gt; is the implementation of the
                  &lt;code&gt;InputMethodManager&lt;/code&gt; class. It is runnable as a separate
                  thread in the AWT environment.&amp;nbsp;
                  &lt;code&gt;InputMethodManager.getInstance()&lt;/code&gt; creates an instance of
                  &lt;code&gt;ExecutableInputMethodManager&lt;/code&gt; and executes it as a deamon
                  thread.                
                <see>
                    InputMethodManager                    
                </see>
            </javadoc>
            <declaration name="currentInputContext" type="InputContext" line="183"/>
            <declaration name="triggerMenuString" type="String" line="184"/>
            <declaration name="selectionMenu" type="InputMethodPopupMenu" line="185"/>
            <declaration name="selectInputMethodMenuTitle" type="String" line="186"/>
            <declaration name="hostAdapterLocator" type="InputMethodLocator" line="187"/>
            <declaration name="javaInputMethodCount" type="int" line="188"/>
            <declaration name="javaInputMethodLocatorList" type="Vector&lt;InputMethodLocator&gt;" line="189"/>
            <declaration name="requestComponent" type="Component" line="190"/>
            <declaration name="requestInputContext" type="InputContext" line="191"/>
            <declaration name="preferredIMNode" type="String" line="192"/>
            <declaration name="descriptorKey" type="String" line="193"/>
            <declaration name="preferredLocatorCache" type="Hashtable" line="194"/>
            <declaration name="userRoot" type="Preferences" line="195"/>
            <method name="ExecutableInputMethodManager" type="constructor" line="196">
                <declaration name="toolkit" type="Toolkit" line="197"/>
                <scope line="198">
                    <scope line="199">
                        <declaration name="hostAdapterDescriptor" type="InputMethodDescriptor" line="200"/>
                        <scope line="201"/>
                    </scope>
                </scope>
                <scope line="206"/>
            </method>
            <method name="initialize" type="void" line="211"/>
            <method name="run" type="void" line="215">
                <scope line="216">
                    <scope line="217">
                        <scope line="218"/>
                    </scope>
                    <scope line="222"/>
                </scope>
                <scope line="225">
                    <scope line="228">
                        <scope line="229"/>
                        <scope line="232">
                            <anonymous_class line="233">
                                <method name="run" type="void" line="234"/>
                            </anonymous_class>
                        </scope>
                    </scope>
                    <scope line="241"/>
                    <scope line="243"/>
                </scope>
            </method>
            <method name="showInputMethodMenuOnRequesterEDT" type="void" line="247">
                <params>
                    <param name="requester" type="Component"/>
                </params>
                <scope line="248"/>
                <class name="AWTInvocationLock" line="251"/>
                <declaration name="lock" type="Object" line="253"/>
                <anonymous_class line="254">
                    <method name="run" type="void" line="255"/>
                </anonymous_class>
                <declaration name="event" type="InvocationEvent" line="254"/>
                <declaration name="requesterAppContext" type="AppContext" line="260"/>
                <scope line="261">
                    <scope line="263"/>
                </scope>
                <declaration name="eventThrowable" type="Throwable" line="267"/>
                <scope line="268"/>
            </method>
            <method name="setInputContext" type="void" line="272">
                <params>
                    <param name="inputContext" type="InputContext"/>
                </params>
                <scope line="273"/>
            </method>
            <method name="notifyChangeRequest" type="void" line="277">
                <params>
                    <param name="comp" type="Component"/>
                </params>
            </method>
            <method name="notifyChangeRequestByHotKey" type="void" line="283">
                <params>
                    <param name="comp" type="Component"/>
                </params>
                <scope line="284">
                    <scope line="285"/>
                </scope>
            </method>
            <method name="getTriggerMenuString" type="String" line="292"/>
            <method name="hasMultipleInputMethods" type="boolean" line="295"/>
            <method name="waitForChangeRequest" type="void" line="298">
                <scope line="299">
                    <scope line="300"/>
                </scope>
                <scope line="304"/>
            </method>
            <method name="initializeInputMethodLocatorList" type="void" line="307">
                <scope line="308">
                    <scope line="310">
                        <anonymous_class line="311">
                            <method name="run" type="Object" line="312">
                                <scope line="313">
                                    <declaration name="cl" type="ClassLoader" line="314"/>
                                </scope>
                            </method>
                        </anonymous_class>
                    </scope>
                    <scope line="322"/>
                </scope>
                <scope line="327">
                    <scope line="328"/>
                </scope>
                <scope line="332"/>
            </method>
            <method name="showInputMethodMenu" type="void" line="336">
                <scope line="337"/>
                <declaration name="currentSelection" type="String" line="343"/>
                <scope line="344"/>
                <scope line="348">
                    <declaration name="locator" type="InputMethodLocator" line="349"/>
                </scope>
                <scope line="352"/>
            </method>
            <method name="getCurrentSelection" type="String" line="359">
                <declaration name="inputContext" type="InputContext" line="360"/>
                <scope line="361">
                    <declaration name="locator" type="InputMethodLocator" line="362"/>
                    <scope line="363"/>
                </scope>
            </method>
            <method name="changeInputMethod" type="void" line="369">
                <params>
                    <param name="choice" type="String"/>
                </params>
                <declaration name="locator" type="InputMethodLocator" line="370"/>
                <declaration name="inputMethodName" type="String" line="371"/>
                <declaration name="localeString" type="String" line="372"/>
                <declaration name="index" type="int" line="373"/>
                <scope line="374"/>
                <scope line="378"/>
                <scope line="381">
                    <scope line="382">
                        <declaration name="candidate" type="InputMethodLocator" line="383"/>
                        <declaration name="name" type="String" line="384"/>
                        <scope line="385"/>
                    </scope>
                </scope>
                <scope line="391">
                    <declaration name="language" type="String" line="392"/>
                    <declaration name="postIndex" type="int" line="393"/>
                    <scope line="394"/>
                    <scope line="397">
                        <declaration name="preIndex" type="int" line="399"/>
                        <scope line="401"/>
                        <scope line="404"/>
                    </scope>
                    <declaration name="locale" type="Locale" line="409"/>
                </scope>
                <scope line="413"/>
            </method>
            <method name="findInputMethod" type="InputMethodLocator" line="419">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
                <declaration name="locator" type="InputMethodLocator" line="420"/>
                <scope line="421"/>
                <scope line="424"/>
                <scope line="428">
                    <declaration name="candidate" type="InputMethodLocator" line="429"/>
                    <scope line="430"/>
                </scope>
            </method>
            <method name="getDefaultKeyboardLocale" type="Locale" line="436">
                <declaration name="toolkit" type="Toolkit" line="437"/>
                <scope line="438"/>
                <scope line="441"/>
            </method>
            <javadoc line="445">
                Returns a InputMethodLocator object that the
                  user prefers for the given locale.                
                <param>
                    locale Locale for which the user prefers the input method.                    
                </param>
            </javadoc>
            <method name="getPreferredInputMethod" type="InputMethodLocator" line="450">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
                <declaration name="preferredLocator" type="InputMethodLocator" line="451"/>
                <scope line="452"/>
                <scope line="456"/>
                <declaration name="nodePath" type="String" line="459"/>
                <declaration name="descriptorName" type="String" line="460"/>
                <declaration name="advertised" type="Locale" line="461"/>
                <scope line="462">
                    <scope line="463">
                        <scope line="465"/>
                    </scope>
                    <scope line="471">
                        <declaration name="locator" type="InputMethodLocator" line="472"/>
                        <declaration name="descriptor" type="InputMethodDescriptor" line="473"/>
                        <scope line="474">
                            <scope line="476"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="findPreferredInputMethodNode" type="String" line="487">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
                <scope line="488"/>
                <declaration name="nodePath" type="String" line="491"/>
                <scope line="492">
                    <scope line="493">
                        <scope line="494">
                            <scope line="495"/>
                        </scope>
                    </scope>
                    <scope line="500"/>
                </scope>
            </method>
            <method name="readPreferredInputMethod" type="String" line="506">
                <params>
                    <param name="nodePath" type="String"/>
                </params>
                <scope line="507"/>
            </method>
            <javadoc line="512">
                Writes the preferred input method descriptor class name into
                  the user&apos;s Preferences tree in accordance with the given locale.                
                <param>
                    inputMethodLocator input method locator to remember.                    
                </param>
            </javadoc>
            <method name="putPreferredInputMethod" type="void" line="517">
                <params>
                    <param name="locator" type="InputMethodLocator"/>
                </params>
                <declaration name="descriptor" type="InputMethodDescriptor" line="518"/>
                <declaration name="preferredLocale" type="Locale" line="519"/>
                <scope line="520">
                    <scope line="521">
                        <declaration name="availableLocales" type="Locale[]" line="522"/>
                        <scope line="523"/>
                        <scope line="526"/>
                    </scope>
                    <scope line="530"/>
                </scope>
                <scope line="534"/>
                <scope line="537"/>
                <scope line="540"/>
                <declaration name="path" type="String" line="543"/>
            </method>
            <method name="createLocalePath" type="String" line="548">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
                <declaration name="language" type="String" line="549"/>
                <declaration name="country" type="String" line="550"/>
                <declaration name="variant" type="String" line="551"/>
                <declaration name="localePath" type="String" line="552"/>
                <scope line="553"/>
                <scope line="556"/>
                <scope line="559"/>
            </method>
            <method name="writePreferredInputMethod" type="void" line="564">
                <params>
                    <param name="path" type="String"/>
                    <param name="descriptorName" type="String"/>
                </params>
                <scope line="565">
                    <declaration name="node" type="Preferences" line="566"/>
                    <scope line="567"/>
                    <scope line="570"/>
                </scope>
            </method>
            <method name="getUserRoot" type="Preferences" line="575">
                <anonymous_class line="576">
                    <method name="run" type="Object" line="577"/>
                </anonymous_class>
            </method>
            <method name="getAdvertisedLocale" type="Locale" line="583">
                <params>
                    <param name="locator" type="InputMethodLocator"/>
                    <param name="locale" type="Locale"/>
                </params>
                <declaration name="advertised" type="Locale" line="584"/>
                <scope line="585"/>
                <scope line="588">
                    <scope line="589"/>
                    <scope line="592"/>
                </scope>
                <scope line="596">
                    <scope line="597"/>
                    <scope line="600"/>
                </scope>
                <scope line="604">
                    <scope line="605"/>
                    <scope line="608"/>
                </scope>
            </method>
        </class>
    </source>