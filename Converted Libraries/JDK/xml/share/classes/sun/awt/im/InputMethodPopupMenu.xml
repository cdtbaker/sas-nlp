<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.im">
        <import package="java.awt.AWTException"/>
        <import package="java.awt.CheckboxMenuItem"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Container"/>
        <import package="java.awt.PopupMenu"/>
        <import package="java.awt.Menu"/>
        <import package="java.awt.MenuItem"/>
        <import package="java.awt.Toolkit"/>
        <import package="java.awt.event.ActionEvent"/>
        <import package="java.awt.event.ActionListener"/>
        <import package="java.awt.im.spi.InputMethodDescriptor"/>
        <import package="java.util.Locale"/>
        <import package="javax.swing.JCheckBoxMenuItem"/>
        <import package="javax.swing.JComponent"/>
        <import package="javax.swing.JDialog"/>
        <import package="javax.swing.JFrame"/>
        <import package="javax.swing.JPopupMenu"/>
        <import package="javax.swing.JMenu"/>
        <import package="javax.swing.JMenuItem"/>
        <class name="InputMethodPopupMenu" line="48">
            <comment line="55">
                Factory method to provide the menu, depending on the client, i.e.,
                 provide Swing popup menu if client is a swing app, otherwise AWT popup
                 is created.                
            </comment>
            <comment line="160">
                ActionListener implementation                
            </comment>
            <implements interface="ActionListener"/>
            <javadoc line="48">
                &lt;code&gt;InputMethodPopupMenu&lt;/code&gt; provides the popup selection menu                
            </javadoc>
            <method name="getInstance" type="InputMethodPopupMenu" line="57">
                <params>
                    <param name="client" type="Component"/>
                    <param name="title" type="String"/>
                </params>
                <scope line="59"/>
                <scope line="61"/>
            </method>
            <method name="show" type="void" line="66"/>
            <method name="removeAll" type="void" line="68"/>
            <method name="addSeparator" type="void" line="70"/>
            <method name="addToComponent" type="void" line="72"/>
            <method name="createSubmenu" type="Object" line="74"/>
            <method name="add" type="void" line="76"/>
            <method name="addMenuItem" type="void" line="78"/>
            <method name="addMenuItem" type="void" line="80"/>
            <method name="addOneInputMethodToMenu" type="void" line="83">
                <params>
                    <param name="locator" type="InputMethodLocator"/>
                    <param name="currentSelection" type="String"/>
                </params>
                <comment line="94">
                    ??? should have better error handling -
                     tell user what happened, then remove this input method from the list.
                     For the time being, just show it disabled.                    
                </comment>
                <comment line="100">
                    could be IIIMP adapter which has lost its connection                    
                </comment>
                <comment line="104">
                    try to make sure that what the user sees and what
                     we eventually select is consistent even if the locale
                     list changes in the meantime                    
                </comment>
                <declaration name="descriptor" type="InputMethodDescriptor" line="84"/>
                <declaration name="label" type="String" line="85"/>
                <declaration name="command" type="String" line="86"/>
                <declaration name="locales" type="Locale[]" line="87"/>
                <declaration name="localeCount" type="int" line="88"/>
                <scope line="89"/>
                <scope line="92"/>
                <scope line="98"/>
                <scope line="101">
                    <scope line="102"/>
                </scope>
                <scope line="110">
                    <declaration name="submenu" type="Object" line="111"/>
                    <scope line="113">
                        <declaration name="locale" type="Locale" line="114"/>
                        <declaration name="subLabel" type="String" line="115"/>
                        <declaration name="subCommand" type="String" line="116"/>
                    </scope>
                </scope>
            </method>
            <javadoc line="122">
                Returns whether command indicates the same input method as currentSelection,
                  taking into account that command may not specify a locale where currentSelection does.                
            </javadoc>
            <method name="isSelected" type="boolean" line="126">
                <params>
                    <param name="command" type="String"/>
                    <param name="currentSelection" type="String"/>
                </params>
                <comment line="134">
                    currentSelection may indicate a locale where command does not                    
                </comment>
                <scope line="127"/>
                <scope line="130"/>
                <declaration name="index" type="int" line="134"/>
                <scope line="135"/>
            </method>
            <javadoc line="141">
                Returns a localized locale name for input methods with the
                  given locale. It falls back to Locale.getDisplayName() and
                  then to Locale.toString() if no localized locale name is found.                
                <param>
                    locale Locale for which localized locale name is obtained                    
                </param>
            </javadoc>
            <method name="getLocaleName" type="String" line="148">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
                <declaration name="localeString" type="String" line="149"/>
                <declaration name="localeName" type="String" line="150"/>
                <scope line="151"/>
            </method>
            <method name="actionPerformed" type="void" line="160">
                <params>
                    <param name="event" type="ActionEvent"/>
                </params>
                <declaration name="choice" type="String" line="161"/>
            </method>
        </class>
        <class name="JInputMethodPopupMenu" line="167">
            <extends class="InputMethodPopupMenu"/>
            <comment line="55">
                Factory method to provide the menu, depending on the client, i.e.,
                 provide Swing popup menu if client is a swing app, otherwise AWT popup
                 is created.                
            </comment>
            <comment line="160">
                ActionListener implementation                
            </comment>
            <declaration name="delegate" type="JPopupMenu" line="168"/>
            <method name="JInputMethodPopupMenu" type="constructor" line="170">
                <params>
                    <param name="title" type="String"/>
                </params>
                <scope line="171">
                    <scope line="172"/>
                </scope>
            </method>
            <method name="show" type="void" line="178">
                <params>
                    <param name="c" type="Component"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
            </method>
            <method name="removeAll" type="void" line="182"/>
            <method name="addSeparator" type="void" line="186"/>
            <method name="addToComponent" type="void" line="190">
                <params>
                    <param name="c" type="Component"/>
                </params>
            </method>
            <method name="createSubmenu" type="Object" line="193">
                <params>
                    <param name="label" type="String"/>
                </params>
            </method>
            <method name="add" type="void" line="197">
                <params>
                    <param name="menuItem" type="Object"/>
                </params>
            </method>
            <method name="addMenuItem" type="void" line="201">
                <params>
                    <param name="label" type="String"/>
                    <param name="command" type="String"/>
                    <param name="currentSelection" type="String"/>
                </params>
            </method>
            <method name="addMenuItem" type="void" line="205">
                <params>
                    <param name="targetMenu" type="Object"/>
                    <param name="label" type="String"/>
                    <param name="command" type="String"/>
                    <param name="currentSelection" type="String"/>
                </params>
                <declaration name="menuItem" type="JMenuItem" line="206"/>
                <scope line="207"/>
                <scope line="209"/>
                <scope line="215"/>
                <scope line="217"/>
            </method>
        </class>
        <class name="AWTInputMethodPopupMenu" line="224">
            <extends class="InputMethodPopupMenu"/>
            <comment line="55">
                Factory method to provide the menu, depending on the client, i.e.,
                 provide Swing popup menu if client is a swing app, otherwise AWT popup
                 is created.                
            </comment>
            <comment line="160">
                ActionListener implementation                
            </comment>
            <declaration name="delegate" type="PopupMenu" line="225"/>
            <method name="AWTInputMethodPopupMenu" type="constructor" line="227">
                <params>
                    <param name="title" type="String"/>
                </params>
                <scope line="228">
                    <scope line="229"/>
                </scope>
            </method>
            <method name="show" type="void" line="235">
                <params>
                    <param name="c" type="Component"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
            </method>
            <method name="removeAll" type="void" line="239"/>
            <method name="addSeparator" type="void" line="243"/>
            <method name="addToComponent" type="void" line="247">
                <params>
                    <param name="c" type="Component"/>
                </params>
            </method>
            <method name="createSubmenu" type="Object" line="251">
                <params>
                    <param name="label" type="String"/>
                </params>
            </method>
            <method name="add" type="void" line="255">
                <params>
                    <param name="menuItem" type="Object"/>
                </params>
            </method>
            <method name="addMenuItem" type="void" line="259">
                <params>
                    <param name="label" type="String"/>
                    <param name="command" type="String"/>
                    <param name="currentSelection" type="String"/>
                </params>
            </method>
            <method name="addMenuItem" type="void" line="263">
                <params>
                    <param name="targetMenu" type="Object"/>
                    <param name="label" type="String"/>
                    <param name="command" type="String"/>
                    <param name="currentSelection" type="String"/>
                </params>
                <declaration name="menuItem" type="MenuItem" line="264"/>
                <scope line="265"/>
                <scope line="267"/>
            </method>
        </class>
    </source>