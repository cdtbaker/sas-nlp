<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.dnd">
        <import package="java.awt.AWTEvent"/>
        <import package="java.awt.Component"/>
        <import package="java.awt.Cursor"/>
        <import package="java.awt.EventQueue"/>
        <import package="java.awt.Image"/>
        <import package="java.awt.Point"/>
        <import package="java.awt.datatransfer.Transferable"/>
        <import package="java.awt.dnd.DnDConstants"/>
        <import package="java.awt.dnd.DragSourceContext"/>
        <import package="java.awt.dnd.DragSourceEvent"/>
        <import package="java.awt.dnd.DragSourceDropEvent"/>
        <import package="java.awt.dnd.DragSourceDragEvent"/>
        <import package="java.awt.dnd.DragGestureEvent"/>
        <import package="java.awt.dnd.InvalidDnDOperationException"/>
        <import package="java.awt.dnd.peer.DragSourceContextPeer"/>
        <import package="java.awt.event.InputEvent"/>
        <import package="java.awt.event.MouseEvent"/>
        <import package="java.util.Map"/>
        <import package="java.util.SortedMap"/>
        <import package="sun.awt.SunToolkit"/>
        <import package="sun.awt.datatransfer.DataTransferer"/>
        <class name="SunDragSourceContextPeer" line="23">
            <implements interface="DragSourceContextPeer"/>
            <javadoc line="23">
                &lt;p&gt;
                  TBC
                  &lt;/p&gt;                
                <since>
                    JDK1.3.1                    
                </since>
            </javadoc>
            <declaration name="trigger" type="DragGestureEvent" line="30"/>
            <declaration name="component" type="Component" line="31"/>
            <declaration name="cursor" type="Cursor" line="32"/>
            <declaration name="dragImage" type="Image" line="33"/>
            <declaration name="dragImageOffset" type="Point" line="34"/>
            <declaration name="nativeCtxt" type="long" line="35"/>
            <declaration name="dragSourceContext" type="DragSourceContext" line="36"/>
            <declaration name="sourceActions" type="int" line="37"/>
            <declaration name="dragDropInProgress" type="boolean" line="38"/>
            <declaration name="discardingMouseEvents" type="boolean" line="39"/>
            <declaration name="DISPATCH_ENTER" type="int" line="40"/>
            <declaration name="DISPATCH_MOTION" type="int" line="41"/>
            <declaration name="DISPATCH_CHANGED" type="int" line="42"/>
            <declaration name="DISPATCH_EXIT" type="int" line="43"/>
            <declaration name="DISPATCH_FINISH" type="int" line="44"/>
            <declaration name="DISPATCH_MOUSE_MOVED" type="int" line="45"/>
            <javadoc line="46">
                construct a new SunDragSourceContextPeer                
            </javadoc>
            <method name="SunDragSourceContextPeer" type="constructor" line="49">
                <params>
                    <param name="dge" type="DragGestureEvent"/>
                </params>
                <scope line="51"/>
                <scope line="54"/>
            </method>
            <javadoc line="58">
                Synchro messages in AWT                
            </javadoc>
            <method name="startSecondaryEventLoop" type="void" line="61"/>
            <method name="quitSecondaryEventLoop" type="void" line="63"/>
            <javadoc line="65">
                initiate a DnD operation ...                
            </javadoc>
            <method name="startDrag" type="void" line="68">
                <params>
                    <param name="dsc" type="DragSourceContext"/>
                    <param name="c" type="Cursor"/>
                    <param name="di" type="Image"/>
                    <param name="p" type="Point"/>
                </params>
                <scope line="69"/>
                <declaration name="transferable" type="Transferable" line="77"/>
                <declaration name="formatMap" type="SortedMap" line="78"/>
                <declaration name="formats" type="long[]" line="79"/>
                <anonymous_class line="82">
                    <method name="run" type="void" line="83"/>
                </anonymous_class>
            </method>
            <method name="startDrag" type="void" line="89"/>
            <javadoc line="90">
                set cursor                
            </javadoc>
            <method name="setCursor" type="void" line="93">
                <params>
                    <param name="c" type="Cursor"/>
                </params>
                <scope line="94">
                    <scope line="95"/>
                </scope>
            </method>
            <javadoc line="101">
                return cursor                
            </javadoc>
            <method name="getCursor" type="Cursor" line="104"/>
            <javadoc line="107">
                Returns the drag image. If there is no image to drag,
                  the returned value is {@code null}                
                <return>
                    the reference to the drag image                    
                </return>
            </javadoc>
            <method name="getDragImage" type="Image" line="112"/>
            <javadoc line="115">
                Returns an anchor offset for the image to drag.                
                <return>
                    a {@code Point} object that corresponds
                      to coordinates of an anchor offset of the image
                      relative to the upper left corner of the image.
                      The point {@code (0,0)} returns by default.                    
                </return>
            </javadoc>
            <method name="getDragImageOffset" type="Point" line="122">
                <scope line="123"/>
            </method>
            <method name="setNativeCursor" type="void" line="128"/>
            <javadoc line="128">
                downcall into native code                
            </javadoc>
            <method name="setTrigger" type="void" line="132">
                <params>
                    <param name="dge" type="DragGestureEvent"/>
                </params>
                <scope line="134"/>
                <scope line="137"/>
            </method>
            <method name="getTrigger" type="DragGestureEvent" line="141"/>
            <method name="getComponent" type="Component" line="144"/>
            <method name="setNativeContext" type="void" line="147">
                <params>
                    <param name="ctxt" type="long"/>
                </params>
            </method>
            <method name="getNativeContext" type="long" line="150"/>
            <method name="getDragSourceContext" type="DragSourceContext" line="153"/>
            <javadoc line="156">
                Notify the peer that the transferables&apos; DataFlavors have changed.
                  No longer useful as the transferables are determined at the time
                  of the drag.                
            </javadoc>
            <method name="transferablesFlavorsChanged" type="void" line="161"/>
            <method name="postDragSourceDragEvent" type="void" line="163">
                <params>
                    <param name="targetAction" type="int"/>
                    <param name="modifiers" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="dispatchType" type="int"/>
                </params>
                <declaration name="dropAction" type="int" line="164"/>
                <declaration name="event" type="DragSourceDragEvent" line="165"/>
                <declaration name="dispatcher" type="EventDispatcher" line="166"/>
            </method>
            <javadoc line="170">
                upcall from native code                
            </javadoc>
            <method name="dragEnter" type="void" line="173">
                <params>
                    <param name="targetActions" type="int"/>
                    <param name="modifiers" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
            </method>
            <javadoc line="176">
                upcall from native code                
            </javadoc>
            <method name="dragMotion" type="void" line="179">
                <params>
                    <param name="targetActions" type="int"/>
                    <param name="modifiers" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
            </method>
            <javadoc line="182">
                upcall from native code                
            </javadoc>
            <method name="operationChanged" type="void" line="185">
                <params>
                    <param name="targetActions" type="int"/>
                    <param name="modifiers" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
            </method>
            <javadoc line="188">
                upcall from native code                
            </javadoc>
            <method name="dragExit" type="void" line="191">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <declaration name="event" type="DragSourceEvent" line="192"/>
                <declaration name="dispatcher" type="EventDispatcher" line="193"/>
            </method>
            <javadoc line="197">
                upcall from native code                
            </javadoc>
            <method name="dragMouseMoved" type="void" line="200">
                <params>
                    <param name="targetActions" type="int"/>
                    <param name="modifiers" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
            </method>
            <javadoc line="203">
                upcall from native code via implemented class (do)                
            </javadoc>
            <method name="dragDropFinished" type="void" line="206">
                <params>
                    <param name="success" type="boolean"/>
                    <param name="operations" type="int"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <declaration name="event" type="DragSourceEvent" line="207"/>
                <declaration name="dispatcher" type="EventDispatcher" line="208"/>
            </method>
            <method name="setDragDropInProgress" type="void" line="215">
                <params>
                    <param name="b" type="boolean"/>
                </params>
                <scope line="216"/>
                <scope line="219">
                    <scope line="220"/>
                </scope>
            </method>
            <javadoc line="226">
                Filters out all mouse events that were on the java event queue when
                  startDrag was called.                
            </javadoc>
            <method name="checkEvent" type="boolean" line="230">
                <params>
                    <param name="event" type="AWTEvent"/>
                </params>
                <scope line="231">
                    <declaration name="mouseEvent" type="MouseEvent" line="232"/>
                    <scope line="233"/>
                </scope>
            </method>
            <method name="checkDragDropInProgress" type="void" line="239">
                <scope line="240"/>
            </method>
            <method name="getExceptionMessage" type="String" line="244">
                <params>
                    <param name="b" type="boolean"/>
                </params>
            </method>
            <method name="convertModifiersToDropAction" type="int" line="247">
                <params>
                    <param name="modifiers" type="int"/>
                    <param name="supportedActions" type="int"/>
                </params>
                <declaration name="dropAction" type="int" line="248"/>
                <scope line="260"/>
                <scope line="263"/>
                <scope line="266"/>
            </method>
            <method name="cleanup" type="void" line="272"/>
            <class name="EventDispatcher" line="280">
                <implements interface="Runnable"/>
                <declaration name="dispatchType" type="int" line="281"/>
                <declaration name="event" type="DragSourceEvent" line="282"/>
                <method name="EventDispatcher" type="constructor" line="283">
                    <params>
                        <param name="dispatchType" type="int"/>
                        <param name="event" type="DragSourceEvent"/>
                    </params>
                    <scope line="289"/>
                    <scope line="296"/>
                </method>
                <method name="run" type="void" line="306">
                    <declaration name="dragSourceContext" type="DragSourceContext" line="307"/>
                    <scope line="308">
                        <scope line="326"/>
                        <scope line="329"/>
                    </scope>
                    <scope line="337"/>
                </method>
            </class>
        </class>
    </source>