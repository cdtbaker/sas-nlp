<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.dnd">
        <import package="java.awt.Component"/>
        <import package="java.awt.Point"/>
        <import package="java.awt.datatransfer.DataFlavor"/>
        <import package="java.awt.datatransfer.Transferable"/>
        <import package="java.awt.datatransfer.UnsupportedFlavorException"/>
        <import package="java.awt.dnd.DnDConstants"/>
        <import package="java.awt.dnd.DropTarget"/>
        <import package="java.awt.dnd.DropTargetContext"/>
        <import package="java.awt.dnd.DropTargetListener"/>
        <import package="java.awt.dnd.DropTargetEvent"/>
        <import package="java.awt.dnd.DropTargetDragEvent"/>
        <import package="java.awt.dnd.DropTargetDropEvent"/>
        <import package="java.awt.dnd.InvalidDnDOperationException"/>
        <import package="java.awt.dnd.peer.DropTargetContextPeer"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Map"/>
        <import package="java.util.Arrays"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="sun.awt.AppContext"/>
        <import package="sun.awt.SunToolkit"/>
        <import package="sun.awt.datatransfer.DataTransferer"/>
        <import package="sun.awt.datatransfer.ToolkitThreadBlockedHandler"/>
        <import package="sun.security.util.SecurityConstants"/>
        <class name="SunDropTargetContextPeer" line="62">
            <comment line="75">
                A boolean constant that requires the peer to wait until the
                 SunDropTargetEvent is processed and return the status back
                 to the native code.                
            </comment>
            <comment line="84">
                target actions                
            </comment>
            <comment line="85">
                source actions                
            </comment>
            <comment line="86">
                current drop action                
            </comment>
            <comment line="98">
                The flag is used to monitor whether the drop action is
                 handled by a user. That allows to distinct during
                 which operation getTransferData() method is invoked.                
            </comment>
            <comment line="103">
                global lock                
            </comment>
            <comment line="111">
                a primitive mechanism for advertising intra-JVM Transferables                
            </comment>
            <comment line="135">
                constants used by dropAccept() or dropReject()                
            </comment>
            <comment line="139">
                none pending                
            </comment>
            <comment line="140">
                drop pending                
            </comment>
            <implements interface="DropTargetContextPeer"/>
            <implements interface="Transferable"/>
            <javadoc line="62">
                &lt;p&gt;
                  The SunDropTargetContextPeer class is the generic class responsible for handling
                  the interaction between a windowing systems DnD system and Java.
                  &lt;/p&gt;                
                <since>
                    JDK1.3.1                    
                </since>
            </javadoc>
            <declaration name="DISPATCH_SYNC" type="boolean" line="79"/>
            <declaration name="currentDT" type="DropTarget" line="80"/>
            <declaration name="currentDTC" type="DropTargetContext" line="81"/>
            <declaration name="currentT" type="long[]" line="82"/>
            <declaration name="currentA" type="int" line="83"/>
            <declaration name="currentSA" type="int" line="84"/>
            <declaration name="currentDA" type="int" line="85"/>
            <declaration name="previousDA" type="int" line="86"/>
            <declaration name="nativeDragContext" type="long" line="88"/>
            <declaration name="local" type="Transferable" line="90"/>
            <declaration name="dragRejected" type="boolean" line="92"/>
            <declaration name="dropStatus" type="int" line="94"/>
            <declaration name="dropComplete" type="boolean" line="95"/>
            <declaration name="dropInProcess" type="boolean" line="100"/>
            <declaration name="_globalLock" type="Object" line="106"/>
            <declaration name="dndLog" type="PlatformLogger" line="108"/>
            <declaration name="currentJVMLocalSourceTransferable" type="Transferable" line="114"/>
            <method name="setCurrentJVMLocalSourceTransferable" type="void" line="116">
                <params>
                    <param name="t" type="Transferable"/>
                </params>
                <scope line="117">
                    <scope line="118"/>
                    <scope line="120"/>
                </scope>
            </method>
            <javadoc line="126">
                obtain the transferable iff the operation is in the same VM                
            </javadoc>
            <method name="getJVMLocalSourceTransferable" type="Transferable" line="130"/>
            <declaration name="STATUS_NONE" type="int" line="138"/>
            <declaration name="STATUS_WAIT" type="int" line="139"/>
            <declaration name="STATUS_ACCEPT" type="int" line="140"/>
            <declaration name="STATUS_REJECT" type="int" line="141"/>
            <javadoc line="143">
                create the peer                
            </javadoc>
            <method name="SunDropTargetContextPeer" type="constructor" line="147"/>
            <javadoc line="151">
                @return the DropTarget associated with this peer                
            </javadoc>
            <method name="getDropTarget" type="DropTarget" line="155"/>
            <javadoc line="157">
                @param actions set the current actions                
            </javadoc>
            <method name="setTargetActions" type="void" line="161">
                <params>
                    <param name="actions" type="int"/>
                </params>
            </method>
            <javadoc line="166">
                @return the current target actions                
            </javadoc>
            <method name="getTargetActions" type="int" line="170"/>
            <javadoc line="174">
                get the Transferable associated with the drop                
            </javadoc>
            <method name="getTransferable" type="Transferable" line="178"/>
            <javadoc line="182">
                @return current DataFlavors available                
            </javadoc>
            <method name="getTransferDataFlavors" type="DataFlavor[]" line="188">
                <comment line="186">
                    NOTE: This method may be called by privileged threads.
                           DO NOT INVOKE CLIENT CODE ON THIS THREAD!                    
                </comment>
                <declaration name="localTransferable" type="Transferable" line="189"/>
                <scope line="191"/>
                <scope line="193"/>
            </method>
            <javadoc line="200">
                @return if the flavor is supported                
            </javadoc>
            <method name="isDataFlavorSupported" type="boolean" line="204">
                <params>
                    <param name="df" type="DataFlavor"/>
                </params>
                <declaration name="localTransferable" type="Transferable" line="205"/>
                <scope line="207"/>
                <scope line="209"/>
            </method>
            <javadoc line="217">
                @return the data                
            </javadoc>
            <method name="getTransferData" type="Object" line="224">
                <params>
                    <param name="df" type="DataFlavor"/>
                </params>
                <declaration name="sm" type="SecurityManager" line="226"/>
                <scope line="227">
                    <scope line="228"/>
                </scope>
                <scope line="231">
                    <declaration name="currentThread" type="Thread" line="232"/>
                </scope>
                <declaration name="lFormat" type="Long" line="237"/>
                <declaration name="localTransferable" type="Transferable" line="238"/>
                <scope line="240"/>
                <scope line="244"/>
                <declaration name="flavorMap" type="Map" line="248"/>
                <scope line="253"/>
                <scope line="258"/>
                <declaration name="format" type="long" line="262"/>
                <declaration name="ret" type="Object" line="263"/>
                <scope line="265">
                    <scope line="266"/>
                    <scope line="269"/>
                </scope>
                <scope line="272">
                    <scope line="273"/>
                    <scope line="276"/>
                </scope>
                <scope line="279"/>
            </method>
            <method name="getNativeData" type="Object" line="284"/>
            <javadoc line="287">
                @return if the transfer is a local one                
            </javadoc>
            <method name="isTransferableJVMLocal" type="boolean" line="290"/>
            <method name="handleEnterMessage" type="int" line="298">
                <params>
                    <param name="component" type="Component"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="dropAction" type="int"/>
                    <param name="actions" type="int"/>
                    <param name="formats" type="long[]"/>
                    <param name="nativeCtxt" type="long"/>
                </params>
            </method>
            <javadoc line="305">
                actual processing on EventQueue Thread                
            </javadoc>
            <method name="processEnterMessage" type="void" line="309">
                <params>
                    <param name="event" type="SunDropTargetEvent"/>
                </params>
                <comment line="317">
                    some wreckage from last time                    
                </comment>
                <declaration name="c" type="Component" line="310"/>
                <declaration name="dt" type="DropTarget" line="311"/>
                <declaration name="hots" type="Point" line="312"/>
                <scope line="316"/>
                <scope line="321">
                    <scope line="329"/>
                    <scope line="334"/>
                </scope>
                <scope line="338"/>
            </method>
            <javadoc line="348">
                upcall to handle exit messages                
            </javadoc>
            <method name="handleExitMessage" type="void" line="353">
                <params>
                    <param name="component" type="Component"/>
                    <param name="nativeCtxt" type="long"/>
                </params>
                <comment line="355">
                    Even though the return value is irrelevant for this event, it is
                     dispatched synchronously to fix 4393148 properly.                    
                </comment>
            </method>
            <javadoc line="364">
                                
            </javadoc>
            <method name="processExitMessage" type="void" line="368">
                <params>
                    <param name="event" type="SunDropTargetEvent"/>
                </params>
                <declaration name="c" type="Component" line="369"/>
                <declaration name="dt" type="DropTarget" line="370"/>
                <declaration name="dtc" type="DropTargetContext" line="371"/>
                <scope line="373">
                    <scope line="377"/>
                </scope>
                <scope line="386">
                    <scope line="388"/>
                </scope>
                <scope line="400"/>
                <scope line="402"/>
                <scope line="404"/>
            </method>
            <method name="handleMotionMessage" type="int" line="424">
                <params>
                    <param name="component" type="Component"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="dropAction" type="int"/>
                    <param name="actions" type="int"/>
                    <param name="formats" type="long[]"/>
                    <param name="nativeCtxt" type="long"/>
                </params>
            </method>
            <javadoc line="431">
                                
            </javadoc>
            <method name="processMotionMessage" type="void" line="436">
                <params>
                    <param name="event" type="SunDropTargetEvent"/>
                    <param name="operationChanged" type="boolean"/>
                </params>
                <declaration name="c" type="Component" line="437"/>
                <declaration name="hots" type="Point" line="438"/>
                <declaration name="id" type="int" line="439"/>
                <declaration name="dt" type="DropTarget" line="440"/>
                <declaration name="dtc" type="DropTargetContext" line="441"/>
                <scope line="443">
                    <scope line="444">
                        <scope line="445"/>
                    </scope>
                    <scope line="454">
                        <scope line="455"/>
                    </scope>
                    <scope line="465">
                        <declaration name="dtde" type="DropTargetDragEvent" line="466"/>
                        <declaration name="dtl" type="DropTargetListener" line="470"/>
                        <scope line="471"/>
                        <scope line="473"/>
                        <scope line="477"/>
                    </scope>
                    <scope line="480"/>
                </scope>
                <scope line="484"/>
            </method>
            <javadoc line="489">
                upcall to handle the Drop message                
            </javadoc>
            <method name="handleDropMessage" type="void" line="497">
                <params>
                    <param name="component" type="Component"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="dropAction" type="int"/>
                    <param name="actions" type="int"/>
                    <param name="formats" type="long[]"/>
                    <param name="nativeCtxt" type="long"/>
                </params>
            </method>
            <javadoc line="504">
                                
            </javadoc>
            <method name="processDropMessage" type="void" line="508">
                <params>
                    <param name="event" type="SunDropTargetEvent"/>
                </params>
                <comment line="514">
                    drop pending ACK                    
                </comment>
                <declaration name="c" type="Component" line="509"/>
                <declaration name="hots" type="Point" line="510"/>
                <declaration name="dt" type="DropTarget" line="511"/>
                <scope line="516">
                    <declaration name="dtc" type="DropTargetContext" line="517"/>
                    <scope line="521"/>
                    <scope line="529"/>
                    <scope line="536"/>
                    <scope line="542">
                        <scope line="543"/>
                        <scope line="545"/>
                    </scope>
                </scope>
                <scope line="550"/>
            </method>
            <method name="postDropTargetEvent" type="int" line="562">
                <params>
                    <param name="component" type="Component"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="dropAction" type="int"/>
                    <param name="actions" type="int"/>
                    <param name="formats" type="long[]"/>
                    <param name="nativeCtxt" type="long"/>
                    <param name="eventID" type="int"/>
                    <param name="dispatchType" type="boolean"/>
                </params>
                <comment line="577">
                    schedule callback                    
                </comment>
                <comment line="589">
                    return target&apos;s response                    
                </comment>
                <declaration name="appContext" type="AppContext" line="563"/>
                <declaration name="dispatcher" type="EventDispatcher" line="565"/>
                <declaration name="event" type="SunDropTargetEvent" line="569"/>
                <scope line="572"/>
                <scope line="581">
                    <scope line="582"/>
                </scope>
                <scope line="590"/>
            </method>
            <javadoc line="595">
                acceptDrag                
            </javadoc>
            <method name="acceptDrag" type="void" line="599">
                <params>
                    <param name="dragOperation" type="int"/>
                </params>
                <scope line="600"/>
                <scope line="604"/>
            </method>
            <javadoc line="609">
                rejectDrag                
            </javadoc>
            <method name="rejectDrag" type="void" line="613">
                <scope line="614"/>
            </method>
            <javadoc line="621">
                acceptDrop                
            </javadoc>
            <method name="acceptDrop" type="void" line="625">
                <params>
                    <param name="dropOperation" type="int"/>
                </params>
                <scope line="629"/>
            </method>
            <javadoc line="639">
                reject Drop                
            </javadoc>
            <method name="rejectDrop" type="void" line="643">
                <comment line="649">
                    Fix for 4285634.
                     The target rejected the drop means that it doesn&apos;t perform any
                     drop action. This change is to make Solaris behavior consistent
                     with Win32.                    
                </comment>
                <scope line="644"/>
            </method>
            <javadoc line="658">
                mapOperation                
            </javadoc>
            <method name="mapOperation" type="int" line="662">
                <params>
                    <param name="operation" type="int"/>
                </params>
                <declaration name="operations" type="int[]" line="663"/>
                <declaration name="ret" type="int" line="668"/>
                <scope line="670">
                    <scope line="671"/>
                </scope>
            </method>
            <javadoc line="680">
                signal drop complete                
            </javadoc>
            <method name="dropComplete" type="void" line="684">
                <params>
                    <param name="success" type="boolean"/>
                </params>
                <comment line="708">
                    The native context is invalid after the drop is done.
                     Clear the reference to prohibit access.                    
                </comment>
                <scope line="685"/>
                <scope line="696"/>
                <scope line="703"/>
                <scope line="705"/>
            </method>
            <method name="doDropDone" type="void" line="713"/>
            <method name="getNativeDragContext" type="long" line="716"/>
            <method name="eventPosted" type="void" line="720">
                <params>
                    <param name="e" type="SunDropTargetEvent"/>
                </params>
            </method>
            <method name="eventProcessed" type="void" line="723">
                <params>
                    <param name="e" type="SunDropTargetEvent"/>
                    <param name="returnValue" type="int"/>
                    <param name="dispatcherDone" type="boolean"/>
                </params>
            </method>
            <class name="EventDispatcher" line="725">
                <comment line="186">
                    NOTE: This method may be called by privileged threads.
                           DO NOT INVOKE CLIENT CODE ON THIS THREAD!                    
                </comment>
                <comment line="730">
                    context fields                    
                </comment>
                <comment line="738">
                    dispatcher state fields                    
                </comment>
                <comment line="740">
                    set of events to be dispatched by this dispatcher                    
                </comment>
                <declaration name="peer" type="SunDropTargetContextPeer" line="727"/>
                <declaration name="dropAction" type="int" line="730"/>
                <declaration name="actions" type="int" line="731"/>
                <declaration name="formats" type="long[]" line="732"/>
                <declaration name="nativeCtxt" type="long" line="733"/>
                <declaration name="dispatchType" type="boolean" line="734"/>
                <declaration name="dispatcherDone" type="boolean" line="735"/>
                <declaration name="returnValue" type="int" line="738"/>
                <declaration name="eventSet" type="HashSet" line="740"/>
                <declaration name="handler" type="ToolkitThreadBlockedHandler" line="742"/>
                <method name="EventDispatcher" type="constructor" line="750">
                    <params>
                        <param name="peer" type="SunDropTargetContextPeer"/>
                        <param name="dropAction" type="int"/>
                        <param name="actions" type="int"/>
                        <param name="formats" type="long[]"/>
                        <param name="nativeCtxt" type="long"/>
                        <param name="dispatchType" type="boolean"/>
                    </params>
                </method>
                <method name="dispatchEvent" type="void" line="761">
                    <params>
                        <param name="e" type="SunDropTargetEvent"/>
                    </params>
                    <declaration name="id" type="int" line="762"/>
                </method>
                <method name="dispatchEnterEvent" type="void" line="782">
                    <params>
                        <param name="e" type="SunDropTargetEvent"/>
                    </params>
                    <comment line="786">
                        store the drop action here to track operation changes                        
                    </comment>
                    <comment line="789">
                        setup peer context                        
                    </comment>
                    <comment line="794">
                        To allow data retrieval.                        
                    </comment>
                    <scope line="783">
                        <scope line="797"/>
                        <scope line="799"/>
                    </scope>
                </method>
                <method name="dispatchMotionEvent" type="void" line="807">
                    <params>
                        <param name="e" type="SunDropTargetEvent"/>
                    </params>
                    <comment line="814">
                        setup peer context                        
                    </comment>
                    <comment line="819">
                        To allow data retrieval.                        
                    </comment>
                    <scope line="808">
                        <declaration name="operationChanged" type="boolean" line="810"/>
                        <scope line="822"/>
                        <scope line="824"/>
                    </scope>
                </method>
                <method name="dispatchExitEvent" type="void" line="832">
                    <params>
                        <param name="e" type="SunDropTargetEvent"/>
                    </params>
                    <comment line="836">
                        setup peer context                        
                    </comment>
                    <scope line="833"/>
                </method>
                <method name="dispatchDropEvent" type="void" line="842">
                    <params>
                        <param name="e" type="SunDropTargetEvent"/>
                    </params>
                    <comment line="846">
                        setup peer context                        
                    </comment>
                    <scope line="843"/>
                </method>
                <method name="setReturnValue" type="void" line="855">
                    <params>
                        <param name="ret" type="int"/>
                    </params>
                </method>
                <method name="getReturnValue" type="int" line="859"/>
                <method name="isDone" type="boolean" line="863"/>
                <method name="registerEvent" type="void" line="867">
                    <params>
                        <param name="e" type="SunDropTargetEvent"/>
                    </params>
                    <scope line="869"/>
                </method>
                <method name="unregisterEvent" type="void" line="875">
                    <params>
                        <param name="e" type="SunDropTargetEvent"/>
                    </params>
                    <comment line="880">
                        This event has already been unregistered.                        
                    </comment>
                    <comment line="896">
                        Clear the reference to the native context if all copies of
                         the original event are processed.                        
                    </comment>
                    <comment line="902">
                        Fix for 6342381                        
                    </comment>
                    <scope line="877">
                        <scope line="878"/>
                        <scope line="882">
                            <scope line="883"/>
                        </scope>
                    </scope>
                    <scope line="888"/>
                    <scope line="892"/>
                    <scope line="894">
                        <scope line="899"/>
                    </scope>
                </method>
                <method name="unregisterAllEvents" type="void" line="908">
                    <declaration name="events" type="Object[]" line="909"/>
                    <scope line="911"/>
                    <scope line="913"/>
                    <scope line="917">
                        <scope line="918"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>