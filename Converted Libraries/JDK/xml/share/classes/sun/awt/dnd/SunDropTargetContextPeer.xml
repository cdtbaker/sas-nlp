<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.awt.dnd">
        <import package="java.awt.Component"/>
        <import package="java.awt.Point"/>
        <import package="java.awt.datatransfer.DataFlavor"/>
        <import package="java.awt.datatransfer.Transferable"/>
        <import package="java.awt.datatransfer.UnsupportedFlavorException"/>
        <import package="java.awt.dnd.DnDConstants"/>
        <import package="java.awt.dnd.DropTarget"/>
        <import package="java.awt.dnd.DropTargetContext"/>
        <import package="java.awt.dnd.DropTargetListener"/>
        <import package="java.awt.dnd.DropTargetEvent"/>
        <import package="java.awt.dnd.DropTargetDragEvent"/>
        <import package="java.awt.dnd.DropTargetDropEvent"/>
        <import package="java.awt.dnd.InvalidDnDOperationException"/>
        <import package="java.awt.dnd.peer.DropTargetContextPeer"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.Map"/>
        <import package="java.util.Arrays"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <import package="java.io.IOException"/>
        <import package="java.io.InputStream"/>
        <import package="sun.awt.AppContext"/>
        <import package="sun.awt.SunToolkit"/>
        <import package="sun.awt.datatransfer.DataTransferer"/>
        <import package="sun.awt.datatransfer.ToolkitThreadBlockedHandler"/>
        <import package="sun.security.util.SecurityConstants"/>
        <class name="SunDropTargetContextPeer" line="27">
            <implements interface="DropTargetContextPeer"/>
            <implements interface="Transferable"/>
            <javadoc line="27">
                &lt;p&gt;
                  The SunDropTargetContextPeer class is the generic class responsible for handling
                  the interaction between a windowing systems DnD system and Java.
                  &lt;/p&gt;                
                <since>
                    JDK1.3.1                    
                </since>
            </javadoc>
            <declaration name="DISPATCH_SYNC" type="boolean" line="35"/>
            <declaration name="currentDT" type="DropTarget" line="36"/>
            <declaration name="currentDTC" type="DropTargetContext" line="37"/>
            <declaration name="currentT" type="long[]" line="38"/>
            <declaration name="currentA" type="int" line="39"/>
            <declaration name="currentSA" type="int" line="40"/>
            <declaration name="currentDA" type="int" line="41"/>
            <declaration name="previousDA" type="int" line="42"/>
            <declaration name="nativeDragContext" type="long" line="43"/>
            <declaration name="local" type="Transferable" line="44"/>
            <declaration name="dragRejected" type="boolean" line="45"/>
            <declaration name="dropStatus" type="int" line="46"/>
            <declaration name="dropComplete" type="boolean" line="47"/>
            <declaration name="dropInProcess" type="boolean" line="48"/>
            <declaration name="_globalLock" type="Object" line="49"/>
            <declaration name="dndLog" type="PlatformLogger" line="50"/>
            <declaration name="currentJVMLocalSourceTransferable" type="Transferable" line="51"/>
            <method name="setCurrentJVMLocalSourceTransferable" type="void" line="52">
                <params>
                    <param name="t" type="Transferable"/>
                </params>
                <scope line="53">
                    <scope line="54"/>
                    <scope line="57"/>
                </scope>
            </method>
            <javadoc line="62">
                obtain the transferable iff the operation is in the same VM                
            </javadoc>
            <method name="getJVMLocalSourceTransferable" type="Transferable" line="65"/>
            <declaration name="STATUS_NONE" type="int" line="68"/>
            <declaration name="STATUS_WAIT" type="int" line="69"/>
            <declaration name="STATUS_ACCEPT" type="int" line="70"/>
            <declaration name="STATUS_REJECT" type="int" line="71"/>
            <javadoc line="72">
                create the peer                
            </javadoc>
            <method name="SunDropTargetContextPeer" type="constructor" line="75"/>
            <javadoc line="78">
                @return the DropTarget associated with this peer                
            </javadoc>
            <method name="getDropTarget" type="DropTarget" line="81"/>
            <javadoc line="84">
                @param actions set the current actions                
            </javadoc>
            <method name="setTargetActions" type="void" line="87">
                <params>
                    <param name="actions" type="int"/>
                </params>
            </method>
            <javadoc line="90">
                @return the current target actions                
            </javadoc>
            <method name="getTargetActions" type="int" line="93"/>
            <javadoc line="96">
                get the Transferable associated with the drop                
            </javadoc>
            <method name="getTransferable" type="Transferable" line="99"/>
            <javadoc line="102">
                @return current DataFlavors available                
            </javadoc>
            <method name="getTransferDataFlavors" type="DataFlavor[]" line="105">
                <declaration name="localTransferable" type="Transferable" line="106"/>
                <scope line="107"/>
                <scope line="110"/>
            </method>
            <javadoc line="114">
                @return if the flavor is supported                
            </javadoc>
            <method name="isDataFlavorSupported" type="boolean" line="117">
                <params>
                    <param name="df" type="DataFlavor"/>
                </params>
                <declaration name="localTransferable" type="Transferable" line="118"/>
                <scope line="119"/>
                <scope line="122"/>
            </method>
            <javadoc line="126">
                @return the data                
            </javadoc>
            <method name="getTransferData" type="Object" line="129">
                <params>
                    <param name="df" type="DataFlavor"/>
                </params>
                <declaration name="sm" type="SecurityManager" line="130"/>
                <scope line="131">
                    <scope line="132"/>
                </scope>
                <scope line="136">
                    <declaration name="currentThread" type="Thread" line="137"/>
                </scope>
                <declaration name="lFormat" type="Long" line="141"/>
                <declaration name="localTransferable" type="Transferable" line="142"/>
                <scope line="143"/>
                <scope line="146"/>
                <declaration name="flavorMap" type="Map" line="149"/>
                <scope line="151"/>
                <scope line="154"/>
                <declaration name="format" type="long" line="157"/>
                <declaration name="ret" type="Object" line="158"/>
                <scope line="159">
                    <scope line="160"/>
                    <scope line="163"/>
                </scope>
                <scope line="167">
                    <scope line="168"/>
                    <scope line="171"/>
                </scope>
                <scope line="175"/>
            </method>
            <method name="getNativeData" type="Object" line="179"/>
            <javadoc line="180">
                @return if the transfer is a local one                
            </javadoc>
            <method name="isTransferableJVMLocal" type="boolean" line="183"/>
            <method name="handleEnterMessage" type="int" line="186">
                <params>
                    <param name="component" type="Component"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="dropAction" type="int"/>
                    <param name="actions" type="int"/>
                    <param name="formats" type="long[]"/>
                    <param name="nativeCtxt" type="long"/>
                </params>
            </method>
            <javadoc line="189">
                actual processing on EventQueue Thread                
            </javadoc>
            <method name="processEnterMessage" type="void" line="192">
                <params>
                    <param name="event" type="SunDropTargetEvent"/>
                </params>
                <declaration name="c" type="Component" line="193"/>
                <declaration name="dt" type="DropTarget" line="194"/>
                <declaration name="hots" type="Point" line="195"/>
                <scope line="197"/>
                <scope line="201">
                    <scope line="206"/>
                    <scope line="209"/>
                </scope>
                <scope line="214"/>
            </method>
            <javadoc line="222">
                upcall to handle exit messages                
            </javadoc>
            <method name="handleExitMessage" type="void" line="225">
                <params>
                    <param name="component" type="Component"/>
                    <param name="nativeCtxt" type="long"/>
                </params>
            </method>
            <javadoc line="228">
                                
            </javadoc>
            <method name="processExitMessage" type="void" line="230">
                <params>
                    <param name="event" type="SunDropTargetEvent"/>
                </params>
                <declaration name="c" type="Component" line="231"/>
                <declaration name="dt" type="DropTarget" line="232"/>
                <declaration name="dtc" type="DropTargetContext" line="233"/>
                <scope line="234">
                    <scope line="237"/>
                </scope>
                <scope line="243">
                    <scope line="244"/>
                </scope>
                <scope line="252"/>
                <scope line="255"/>
                <scope line="258"/>
            </method>
            <method name="handleMotionMessage" type="int" line="270">
                <params>
                    <param name="component" type="Component"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="dropAction" type="int"/>
                    <param name="actions" type="int"/>
                    <param name="formats" type="long[]"/>
                    <param name="nativeCtxt" type="long"/>
                </params>
            </method>
            <javadoc line="273">
                                
            </javadoc>
            <method name="processMotionMessage" type="void" line="275">
                <params>
                    <param name="event" type="SunDropTargetEvent"/>
                    <param name="operationChanged" type="boolean"/>
                </params>
                <declaration name="c" type="Component" line="276"/>
                <declaration name="hots" type="Point" line="277"/>
                <declaration name="id" type="int" line="278"/>
                <declaration name="dt" type="DropTarget" line="279"/>
                <declaration name="dtc" type="DropTargetContext" line="280"/>
                <scope line="281">
                    <scope line="282">
                        <scope line="283"/>
                    </scope>
                    <scope line="290">
                        <scope line="291"/>
                    </scope>
                    <scope line="298">
                        <declaration name="dtde" type="DropTargetDragEvent" line="299"/>
                        <declaration name="dtl" type="DropTargetListener" line="300"/>
                        <scope line="301"/>
                        <scope line="304"/>
                        <scope line="307"/>
                    </scope>
                    <scope line="311"/>
                </scope>
                <scope line="316"/>
            </method>
            <javadoc line="320">
                upcall to handle the Drop message                
            </javadoc>
            <method name="handleDropMessage" type="void" line="323">
                <params>
                    <param name="component" type="Component"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="dropAction" type="int"/>
                    <param name="actions" type="int"/>
                    <param name="formats" type="long[]"/>
                    <param name="nativeCtxt" type="long"/>
                </params>
            </method>
            <javadoc line="326">
                                
            </javadoc>
            <method name="processDropMessage" type="void" line="328">
                <params>
                    <param name="event" type="SunDropTargetEvent"/>
                </params>
                <declaration name="c" type="Component" line="329"/>
                <declaration name="hots" type="Point" line="330"/>
                <declaration name="dt" type="DropTarget" line="331"/>
                <scope line="334">
                    <declaration name="dtc" type="DropTargetContext" line="335"/>
                    <scope line="337"/>
                    <scope line="343"/>
                    <scope line="347"/>
                    <scope line="350">
                        <scope line="351"/>
                        <scope line="354"/>
                    </scope>
                </scope>
                <scope line="360"/>
            </method>
            <method name="postDropTargetEvent" type="int" line="364">
                <params>
                    <param name="component" type="Component"/>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                    <param name="dropAction" type="int"/>
                    <param name="actions" type="int"/>
                    <param name="formats" type="long[]"/>
                    <param name="nativeCtxt" type="long"/>
                    <param name="eventID" type="int"/>
                    <param name="dispatchType" type="boolean"/>
                </params>
                <declaration name="appContext" type="AppContext" line="365"/>
                <declaration name="dispatcher" type="EventDispatcher" line="366"/>
                <declaration name="event" type="SunDropTargetEvent" line="367"/>
                <scope line="368"/>
                <scope line="373">
                    <scope line="374"/>
                </scope>
                <scope line="380"/>
            </method>
            <javadoc line="384">
                acceptDrag                
            </javadoc>
            <method name="acceptDrag" type="void" line="387">
                <params>
                    <param name="dragOperation" type="int"/>
                </params>
                <scope line="388"/>
                <scope line="392"/>
            </method>
            <javadoc line="396">
                rejectDrag                
            </javadoc>
            <method name="rejectDrag" type="void" line="399">
                <scope line="400"/>
            </method>
            <javadoc line="406">
                acceptDrop                
            </javadoc>
            <method name="acceptDrop" type="void" line="409">
                <params>
                    <param name="dropOperation" type="int"/>
                </params>
                <scope line="411"/>
            </method>
            <javadoc line="418">
                reject Drop                
            </javadoc>
            <method name="rejectDrop" type="void" line="421">
                <scope line="422"/>
            </method>
            <javadoc line="429">
                mapOperation                
            </javadoc>
            <method name="mapOperation" type="int" line="432">
                <params>
                    <param name="operation" type="int"/>
                </params>
                <declaration name="operations" type="int[]" line="433"/>
                <declaration name="ret" type="int" line="434"/>
                <scope line="435">
                    <scope line="436"/>
                </scope>
            </method>
            <javadoc line="443">
                signal drop complete                
            </javadoc>
            <method name="dropComplete" type="void" line="446">
                <params>
                    <param name="success" type="boolean"/>
                </params>
                <scope line="447"/>
                <scope line="455"/>
                <scope line="460"/>
                <scope line="463"/>
            </method>
            <method name="doDropDone" type="void" line="468"/>
            <method name="getNativeDragContext" type="long" line="469"/>
            <method name="eventPosted" type="void" line="472">
                <params>
                    <param name="e" type="SunDropTargetEvent"/>
                </params>
            </method>
            <method name="eventProcessed" type="void" line="474">
                <params>
                    <param name="e" type="SunDropTargetEvent"/>
                    <param name="returnValue" type="int"/>
                    <param name="dispatcherDone" type="boolean"/>
                </params>
            </method>
            <class name="EventDispatcher" line="476">
                <declaration name="peer" type="SunDropTargetContextPeer" line="477"/>
                <declaration name="dropAction" type="int" line="478"/>
                <declaration name="actions" type="int" line="479"/>
                <declaration name="formats" type="long[]" line="480"/>
                <declaration name="nativeCtxt" type="long" line="481"/>
                <declaration name="dispatchType" type="boolean" line="482"/>
                <declaration name="dispatcherDone" type="boolean" line="483"/>
                <declaration name="returnValue" type="int" line="484"/>
                <declaration name="eventSet" type="HashSet" line="485"/>
                <declaration name="handler" type="ToolkitThreadBlockedHandler" line="486"/>
                <method name="EventDispatcher" type="constructor" line="487">
                    <params>
                        <param name="peer" type="SunDropTargetContextPeer"/>
                        <param name="dropAction" type="int"/>
                        <param name="actions" type="int"/>
                        <param name="formats" type="long[]"/>
                        <param name="nativeCtxt" type="long"/>
                        <param name="dispatchType" type="boolean"/>
                    </params>
                </method>
                <method name="dispatchEvent" type="void" line="495">
                    <params>
                        <param name="e" type="SunDropTargetEvent"/>
                    </params>
                    <declaration name="id" type="int" line="496"/>
                </method>
                <method name="dispatchEnterEvent" type="void" line="514">
                    <params>
                        <param name="e" type="SunDropTargetEvent"/>
                    </params>
                    <scope line="515">
                        <scope line="523"/>
                        <scope line="526"/>
                    </scope>
                </method>
                <method name="dispatchMotionEvent" type="void" line="532">
                    <params>
                        <param name="e" type="SunDropTargetEvent"/>
                    </params>
                    <scope line="533">
                        <declaration name="operationChanged" type="boolean" line="534"/>
                        <scope line="542"/>
                        <scope line="545"/>
                    </scope>
                </method>
                <method name="dispatchExitEvent" type="void" line="551">
                    <params>
                        <param name="e" type="SunDropTargetEvent"/>
                    </params>
                    <scope line="552"/>
                </method>
                <method name="dispatchDropEvent" type="void" line="557">
                    <params>
                        <param name="e" type="SunDropTargetEvent"/>
                    </params>
                    <scope line="558"/>
                </method>
                <method name="setReturnValue" type="void" line="566">
                    <params>
                        <param name="ret" type="int"/>
                    </params>
                </method>
                <method name="getReturnValue" type="int" line="569"/>
                <method name="isDone" type="boolean" line="572"/>
                <method name="registerEvent" type="void" line="575">
                    <params>
                        <param name="e" type="SunDropTargetEvent"/>
                    </params>
                    <scope line="577"/>
                </method>
                <method name="unregisterEvent" type="void" line="582">
                    <params>
                        <param name="e" type="SunDropTargetEvent"/>
                    </params>
                    <scope line="584">
                        <scope line="585"/>
                        <scope line="588">
                            <scope line="589"/>
                        </scope>
                    </scope>
                    <scope line="595"/>
                    <scope line="598"/>
                    <scope line="601">
                        <scope line="602"/>
                    </scope>
                </method>
                <method name="unregisterAllEvents" type="void" line="608">
                    <declaration name="events" type="Object[]" line="609"/>
                    <scope line="611"/>
                    <scope line="614"/>
                    <scope line="617">
                        <scope line="618"/>
                    </scope>
                </method>
            </class>
        </class>
    </source>