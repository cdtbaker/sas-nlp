<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.util.locale">
        <import package="java.util.ArrayList"/>
        <import package="java.util.Collections"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.util.Set"/>
        <class name="LanguageTag" line="41">
            <comment line="43">
                static fields                
            </comment>
            <comment line="51">
                Language subtag fields                
            </comment>
            <comment line="54">
                language subtag                
            </comment>
            <comment line="55">
                script subtag                
            </comment>
            <comment line="56">
                region subtag                
            </comment>
            <comment line="57">
                privateuse                
            </comment>
            <comment line="59">
                extlang subtags                
            </comment>
            <comment line="60">
                variant subtags                
            </comment>
            <comment line="61">
                extensions                
            </comment>
            <comment line="63">
                Map contains grandfathered tags and its preferred mappings from
                 http:www.ietf.org/rfc/rfc5646.txt
                 Keys are lower-case strings.                
            </comment>
            <comment line="137">
                BNF in RFC5464
                
                 Language-Tag  = langtag             ; normal language tags
                                privateuse          ; private use tag
                                grandfathered       ; grandfathered tags
                
                
                 langtag       = language
                                 [&quot;-&quot; script]
                                 [&quot;-&quot; region]
                                 (&quot;-&quot; variant)
                                 (&quot;-&quot; extension)
                                 [&quot;-&quot; privateuse]
                
                 language      = 23ALPHA            ; shortest ISO 639 code
                                 [&quot;-&quot; extlang]       ; sometimes followed by
                                                     ; extended language subtags
                                4ALPHA              ; or reserved for future use
                                58ALPHA            ; or registered language subtag
                
                 extlang       = 3ALPHA              ; selected ISO 639 codes
                                 2(&quot;-&quot; 3ALPHA)      ; permanently reserved
                
                 script        = 4ALPHA              ; ISO 15924 code
                
                 region        = 2ALPHA              ; ISO 3166-1 code
                                3DIGIT              ; UN M.49 code
                
                 variant       = 58alphanum         ; registered variants
                                (DIGIT 3alphanum)
                
                 extension     = singleton 1(&quot;-&quot; (28alphanum))
                
                                                     ; Single alphanumerics
                                                     ; &quot;x&quot; reserved for private use
                 singleton     = DIGIT               ; 0 - 9
                                %x41-57             ; A - W
                                %x59-5A             ; Y - Z
                                %x61-77             ; a - w
                                %x79-7A             ; y - z
                
                 privateuse    = &quot;x&quot; 1(&quot;-&quot; (18alphanum))                
            </comment>
            <comment line="225">
                Language subtag parsers                
            </comment>
            <comment line="543">
                Getter methods for language subtag fields                
            </comment>
            <comment line="584">
                Language subtag syntax checking methods                
            </comment>
            <comment line="670">
                Language subtag canonicalization methods                
            </comment>
            <declaration name="SEP" type="String" line="45"/>
            <declaration name="PRIVATEUSE" type="String" line="46"/>
            <declaration name="UNDETERMINED" type="String" line="47"/>
            <declaration name="PRIVUSE_VARIANT_PREFIX" type="String" line="48"/>
            <declaration name="language" type="String" line="53"/>
            <declaration name="script" type="String" line="54"/>
            <declaration name="region" type="String" line="55"/>
            <declaration name="privateuse" type="String" line="56"/>
            <declaration name="extlangs" type="List&lt;String&gt;" line="58"/>
            <declaration name="variants" type="List&lt;String&gt;" line="59"/>
            <declaration name="extensions" type="List&lt;String&gt;" line="60"/>
            <declaration name="GRANDFATHERED" type="Map&lt;String,String[]&gt;" line="65"/>
            <scope line="67">
                <declaration name="entries" type="String[][]" line="99"/>
                <scope line="128"/>
            </scope>
            <method name="LanguageTag" type="constructor" line="133"/>
            <method name="parse" type="LanguageTag" line="181">
                <params>
                    <param name="languageTag" type="String"/>
                    <param name="sts" type="ParseStatus"/>
                </params>
                <comment line="191">
                    Check if the tag is grandfathered                    
                </comment>
                <comment line="194">
                    use preferred mapping                    
                </comment>
                <comment line="202">
                    langtag must start with either language or privateuse                    
                </comment>
                <scope line="182"/>
                <scope line="184"/>
                <declaration name="itr" type="StringTokenIterator" line="188"/>
                <declaration name="gfmap" type="String[]" line="191"/>
                <scope line="192"/>
                <scope line="195"/>
                <declaration name="tag" type="LanguageTag" line="199"/>
                <scope line="202"/>
                <scope line="211">
                    <declaration name="s" type="String" line="212"/>
                    <scope line="214"/>
                    <scope line="216"/>
                </scope>
            </method>
            <method name="parseLanguage" type="boolean" line="228">
                <params>
                    <param name="itr" type="StringTokenIterator"/>
                    <param name="sts" type="ParseStatus"/>
                </params>
                <scope line="229"/>
                <declaration name="found" type="boolean" line="233"/>
                <declaration name="s" type="String" line="235"/>
                <scope line="236"/>
            </method>
            <method name="parseExtlangs" type="boolean" line="246">
                <params>
                    <param name="itr" type="StringTokenIterator"/>
                    <param name="sts" type="ParseStatus"/>
                </params>
                <comment line="268">
                    Maximum 3 extlangs                    
                </comment>
                <scope line="247"/>
                <declaration name="found" type="boolean" line="251"/>
                <scope line="253">
                    <declaration name="s" type="String" line="254"/>
                    <scope line="255"/>
                    <scope line="259"/>
                    <scope line="266"/>
                </scope>
            </method>
            <method name="parseScript" type="boolean" line="275">
                <params>
                    <param name="itr" type="StringTokenIterator"/>
                    <param name="sts" type="ParseStatus"/>
                </params>
                <scope line="276"/>
                <declaration name="found" type="boolean" line="280"/>
                <declaration name="s" type="String" line="282"/>
                <scope line="283"/>
            </method>
            <method name="parseRegion" type="boolean" line="293">
                <params>
                    <param name="itr" type="StringTokenIterator"/>
                    <param name="sts" type="ParseStatus"/>
                </params>
                <scope line="294"/>
                <declaration name="found" type="boolean" line="298"/>
                <declaration name="s" type="String" line="300"/>
                <scope line="301"/>
            </method>
            <method name="parseVariants" type="boolean" line="311">
                <params>
                    <param name="itr" type="StringTokenIterator"/>
                    <param name="sts" type="ParseStatus"/>
                </params>
                <scope line="312"/>
                <declaration name="found" type="boolean" line="316"/>
                <scope line="318">
                    <declaration name="s" type="String" line="319"/>
                    <scope line="320"/>
                    <scope line="324"/>
                </scope>
            </method>
            <method name="parseExtensions" type="boolean" line="335">
                <params>
                    <param name="itr" type="StringTokenIterator"/>
                    <param name="sts" type="ParseStatus"/>
                </params>
                <scope line="336"/>
                <declaration name="found" type="boolean" line="340"/>
                <scope line="342">
                    <declaration name="s" type="String" line="343"/>
                    <scope line="344">
                        <declaration name="start" type="int" line="345"/>
                        <declaration name="singleton" type="String" line="346"/>
                        <declaration name="sb" type="StringBuilder" line="347"/>
                        <scope line="350">
                            <scope line="352"/>
                            <scope line="355"/>
                        </scope>
                        <scope line="361"/>
                        <scope line="367"/>
                    </scope>
                    <scope line="372"/>
                </scope>
            </method>
            <method name="parsePrivateuse" type="boolean" line="379">
                <params>
                    <param name="itr" type="StringTokenIterator"/>
                    <param name="sts" type="ParseStatus"/>
                </params>
                <comment line="405">
                    need at least 1 private subtag                    
                </comment>
                <scope line="380"/>
                <declaration name="found" type="boolean" line="384"/>
                <declaration name="s" type="String" line="386"/>
                <scope line="387">
                    <declaration name="start" type="int" line="388"/>
                    <declaration name="sb" type="StringBuilder" line="389"/>
                    <scope line="392">
                        <scope line="394"/>
                    </scope>
                    <scope line="403"/>
                    <scope line="407"/>
                </scope>
            </method>
            <method name="parseLocale" type="LanguageTag" line="416">
                <params>
                    <param name="baseLocale" type="BaseLocale"/>
                    <param name="localeExtensions" type="LocaleExtensions"/>
                </params>
                <comment line="427">
                    store ill-formed variant subtags                    
                </comment>
                <comment line="430">
                    Convert a deprecated language code to its new code                    
                </comment>
                <comment line="451">
                    Special handling for no_NO_NY - use nn_NO for language tag                    
                </comment>
                <comment line="468">
                    Do not canonicalize!                    
                </comment>
                <comment line="476">
                    ill-formed variant subtags                    
                </comment>
                <comment line="481">
                    cannot use private use subtag - truncated                    
                </comment>
                <comment line="519">
                    append ill-formed variant subtags to private use                    
                </comment>
                <comment line="534">
                    use lang &quot;und&quot; when 1) no language is available AND
                     2) any of other subtags other than private use are available or
                     no private use tag is available                    
                </comment>
                <declaration name="tag" type="LanguageTag" line="417"/>
                <declaration name="language" type="String" line="419"/>
                <declaration name="script" type="String" line="420"/>
                <declaration name="region" type="String" line="421"/>
                <declaration name="variant" type="String" line="422"/>
                <declaration name="hasSubtag" type="boolean" line="424"/>
                <declaration name="privuseVar" type="String" line="426"/>
                <scope line="428">
                    <scope line="430"/>
                    <scope line="432"/>
                    <scope line="434"/>
                </scope>
                <scope line="440"/>
                <scope line="445"/>
                <scope line="451"/>
                <scope line="456">
                    <declaration name="variants" type="List&lt;String&gt;" line="457"/>
                    <declaration name="varitr" type="StringTokenIterator" line="458"/>
                    <scope line="459">
                        <declaration name="var" type="String" line="460"/>
                        <scope line="461"/>
                        <scope line="464"/>
                    </scope>
                    <scope line="470"/>
                    <scope line="474">
                        <declaration name="buf" type="StringBuilder" line="476"/>
                        <scope line="477">
                            <declaration name="prvv" type="String" line="478"/>
                            <scope line="479"/>
                            <scope line="483"/>
                        </scope>
                        <scope line="489"/>
                    </scope>
                </scope>
                <declaration name="extensions" type="List&lt;String&gt;" line="495"/>
                <declaration name="privateuse" type="String" line="496"/>
                <scope line="498">
                    <declaration name="locextKeys" type="Set&lt;Character&gt;" line="499"/>
                    <scope line="500">
                        <declaration name="ext" type="Extension" line="501"/>
                        <scope line="502"/>
                        <scope line="504">
                            <scope line="505"/>
                        </scope>
                    </scope>
                </scope>
                <scope line="513"/>
                <scope line="519">
                    <scope line="520"/>
                    <scope line="522"/>
                </scope>
                <scope line="528"/>
                <scope line="532"/>
            </method>
            <method name="getLanguage" type="String" line="546"/>
            <method name="getExtlangs" type="List<String>" line="550">
                <scope line="551"/>
            </method>
            <method name="getScript" type="String" line="557"/>
            <method name="getRegion" type="String" line="561"/>
            <method name="getVariants" type="List<String>" line="565">
                <scope line="566"/>
            </method>
            <method name="getExtensions" type="List<String>" line="572">
                <scope line="573"/>
            </method>
            <method name="getPrivateuse" type="String" line="579"/>
            <method name="isLanguage" type="boolean" line="587">
                <params>
                    <param name="s" type="String"/>
                </params>
                <comment line="589">
                    language      = 2*3ALPHA            ; shortest ISO 639 code
                                     [&quot;-&quot; extlang]       ; sometimes followed by
                                                         ;   extended language subtags
                                   / 4ALPHA              ; or reserved for future use
                                   / 5*8ALPHA            ; or registered language subtag                    
                </comment>
                <declaration name="len" type="int" line="593"/>
            </method>
            <method name="isExtlang" type="boolean" line="597">
                <params>
                    <param name="s" type="String"/>
                </params>
                <comment line="599">
                    extlang       = 3ALPHA              ; selected ISO 639 codes
                                     *2(&quot;-&quot; 3ALPHA)      ; permanently reserved                    
                </comment>
            </method>
            <method name="isScript" type="boolean" line="603">
                <params>
                    <param name="s" type="String"/>
                </params>
                <comment line="605">
                    script        = 4ALPHA              ; ISO 15924 code                    
                </comment>
            </method>
            <method name="isRegion" type="boolean" line="608">
                <params>
                    <param name="s" type="String"/>
                </params>
                <comment line="610">
                    region        = 2ALPHA              ; ISO 3166-1 code
                                   / 3DIGIT              ; UN M.49 code                    
                </comment>
            </method>
            <method name="isVariant" type="boolean" line="615">
                <params>
                    <param name="s" type="String"/>
                </params>
                <comment line="617">
                    variant       = 5*8alphanum         ; registered variants
                                   / (DIGIT 3alphanum)                    
                </comment>
                <declaration name="len" type="int" line="618"/>
                <scope line="619"/>
                <scope line="622"/>
            </method>
            <method name="isExtensionSingleton" type="boolean" line="631">
                <params>
                    <param name="s" type="String"/>
                </params>
                <comment line="633">
                    singleton     = DIGIT               ; 0 - 9
                                   / %x41-57             ; A - W
                                   / %x59-5A             ; Y - Z
                                   / %x61-77             ; a - w
                                   / %x79-7A             ; y - z                    
                </comment>
            </method>
            <method name="isExtensionSingletonChar" type="boolean" line="643">
                <params>
                    <param name="c" type="char"/>
                </params>
            </method>
            <method name="isExtensionSubtag" type="boolean" line="647">
                <params>
                    <param name="s" type="String"/>
                </params>
                <comment line="649">
                    extension     = singleton 1*(&quot;-&quot; (2*8alphanum))                    
                </comment>
                <declaration name="len" type="int" line="649"/>
            </method>
            <method name="isPrivateusePrefix" type="boolean" line="653">
                <params>
                    <param name="s" type="String"/>
                </params>
                <comment line="655">
                    privateuse    = &quot;x&quot; 1*(&quot;-&quot; (1*8alphanum))                    
                </comment>
            </method>
            <method name="isPrivateusePrefixChar" type="boolean" line="659">
                <params>
                    <param name="c" type="char"/>
                </params>
            </method>
            <method name="isPrivateuseSubtag" type="boolean" line="663">
                <params>
                    <param name="s" type="String"/>
                </params>
                <comment line="665">
                    privateuse    = &quot;x&quot; 1*(&quot;-&quot; (1*8alphanum))                    
                </comment>
                <declaration name="len" type="int" line="665"/>
            </method>
            <method name="canonicalizeLanguage" type="String" line="673">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="canonicalizeExtlang" type="String" line="677">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="canonicalizeScript" type="String" line="681">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="canonicalizeRegion" type="String" line="685">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="canonicalizeVariant" type="String" line="689">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="canonicalizeExtension" type="String" line="693">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="canonicalizeExtensionSingleton" type="String" line="697">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="canonicalizeExtensionSubtag" type="String" line="701">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="canonicalizePrivateuse" type="String" line="705">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="canonicalizePrivateuseSubtag" type="String" line="709">
                <params>
                    <param name="s" type="String"/>
                </params>
            </method>
            <method name="toString" type="String" line="714">
                <declaration name="sb" type="StringBuilder" line="715"/>
                <scope line="717">
                    <scope line="720"/>
                    <scope line="724"/>
                    <scope line="728"/>
                    <scope line="732"/>
                    <scope line="736"/>
                </scope>
                <scope line="740">
                    <scope line="741"/>
                </scope>
            </method>
        </class>
    </source>