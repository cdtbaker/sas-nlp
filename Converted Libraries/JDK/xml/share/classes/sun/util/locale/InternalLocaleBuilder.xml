<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.util.locale">
        <import package="java.util.ArrayList"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.List"/>
        <import package="java.util.Map"/>
        <import package="java.util.Set"/>
        <class name="InternalLocaleBuilder" line="41">
            <comment line="223">
                Set extensionprivate subtags in a single string representation                
            </comment>
            <comment line="309">
                Set a list of BCP47 extensions and private use subtags
                 BCP47 extensions are already validated and well-formed, but may contain duplicates                
            </comment>
            <comment line="346">
                Reset Builder&apos;s internal state with the given language tag                
            </comment>
            <comment line="538">
                Remove special private use subtag sequence identified by &quot;lvariant&quot;
                 and return the rest. Only used by LocaleExtensions                
            </comment>
            <comment line="570">
                Check if the given variant subtags separated by the given
                 separator(s) are valid                
            </comment>
            <comment line="586">
                Private methods parsing Unicode Locale Extension subtags.
                 Duplicated attributeskeywords will be ignored.
                 The input must be a valid extension subtags (excluding singleton).                
            </comment>
            <declaration name="PRIVATEUSE_KEY" type="CaseInsensitiveChar" line="43"/>
            <declaration name="language" type="String" line="46"/>
            <declaration name="script" type="String" line="47"/>
            <declaration name="region" type="String" line="48"/>
            <declaration name="variant" type="String" line="49"/>
            <declaration name="extensions" type="Map&lt;CaseInsensitiveChar,String&gt;" line="51"/>
            <declaration name="uattributes" type="Set&lt;CaseInsensitiveString&gt;" line="52"/>
            <declaration name="ukeywords" type="Map&lt;CaseInsensitiveString,String&gt;" line="53"/>
            <method name="InternalLocaleBuilder" type="constructor" line="56"/>
            <method name="setLanguage" type="InternalLocaleBuilder" line="59">
                <params>
                    <param name="language" type="String"/>
                </params>
                <scope line="60"/>
                <scope line="62">
                    <scope line="63"/>
                </scope>
            </method>
            <method name="setScript" type="InternalLocaleBuilder" line="71">
                <params>
                    <param name="script" type="String"/>
                </params>
                <scope line="72"/>
                <scope line="74">
                    <scope line="75"/>
                </scope>
            </method>
            <method name="setRegion" type="InternalLocaleBuilder" line="83">
                <params>
                    <param name="region" type="String"/>
                </params>
                <scope line="84"/>
                <scope line="86">
                    <scope line="87"/>
                </scope>
            </method>
            <method name="setVariant" type="InternalLocaleBuilder" line="95">
                <params>
                    <param name="variant" type="String"/>
                </params>
                <comment line="100">
                    normalize separators to &quot;_&quot;                    
                </comment>
                <scope line="96"/>
                <scope line="98">
                    <declaration name="var" type="String" line="100"/>
                    <declaration name="errIdx" type="int" line="101"/>
                    <scope line="102"/>
                </scope>
            </method>
            <method name="addUnicodeLocaleAttribute" type="InternalLocaleBuilder" line="110">
                <params>
                    <param name="attribute" type="String"/>
                </params>
                <comment line="115">
                    Use case insensitive string to prevent duplication                    
                </comment>
                <scope line="111"/>
                <scope line="115"/>
            </method>
            <method name="removeUnicodeLocaleAttribute" type="InternalLocaleBuilder" line="122">
                <params>
                    <param name="attribute" type="String"/>
                </params>
                <scope line="123"/>
                <scope line="126"/>
            </method>
            <method name="setUnicodeLocaleKeyword" type="InternalLocaleBuilder" line="132">
                <params>
                    <param name="key" type="String"/>
                    <param name="type" type="String"/>
                </params>
                <comment line="141">
                    null type is used for remove the key                    
                </comment>
                <comment line="146">
                    normalize separator to &quot;-&quot;                    
                </comment>
                <comment line="148">
                    validate                    
                </comment>
                <scope line="133"/>
                <declaration name="cikey" type="CaseInsensitiveString" line="137"/>
                <scope line="138">
                    <scope line="139"/>
                </scope>
                <scope line="143">
                    <scope line="144">
                        <declaration name="tp" type="String" line="146"/>
                        <declaration name="itr" type="StringTokenIterator" line="148"/>
                        <scope line="149">
                            <declaration name="s" type="String" line="150"/>
                            <scope line="151"/>
                        </scope>
                    </scope>
                    <scope line="159"/>
                </scope>
            </method>
            <method name="setExtension" type="InternalLocaleBuilder" line="167">
                <params>
                    <param name="singleton" type="char"/>
                    <param name="value" type="String"/>
                </params>
                <comment line="169">
                    validate key                    
                </comment>
                <comment line="180">
                    clear entire Unicode locale extension                    
                </comment>
                <comment line="193">
                    validate value                    
                </comment>
                <declaration name="isBcpPrivateuse" type="boolean" line="169"/>
                <scope line="170"/>
                <declaration name="remove" type="boolean" line="174"/>
                <declaration name="key" type="CaseInsensitiveChar" line="175"/>
                <scope line="177">
                    <scope line="178">
                        <scope line="180"/>
                        <scope line="183"/>
                    </scope>
                    <scope line="186">
                        <scope line="187"/>
                    </scope>
                </scope>
                <scope line="191">
                    <declaration name="val" type="String" line="193"/>
                    <declaration name="itr" type="StringTokenIterator" line="194"/>
                    <scope line="195">
                        <declaration name="s" type="String" line="196"/>
                        <declaration name="validSubtag" type="boolean" line="197"/>
                        <scope line="198"/>
                        <scope line="200"/>
                        <scope line="203"/>
                    </scope>
                    <scope line="210"/>
                    <scope line="212">
                        <scope line="213"/>
                    </scope>
                </scope>
            </method>
            <method name="setExtensions" type="InternalLocaleBuilder" line="225">
                <params>
                    <param name="subtags" type="String"/>
                </params>
                <comment line="240">
                    Make a list of extension subtags                    
                </comment>
                <scope line="226"/>
                <declaration name="itr" type="StringTokenIterator" line="231"/>
                <declaration name="extensions" type="List&lt;String&gt;" line="233"/>
                <declaration name="privateuse" type="String" line="234"/>
                <declaration name="parsed" type="int" line="236"/>
                <declaration name="start" type="int" line="237"/>
                <scope line="240">
                    <declaration name="s" type="String" line="241"/>
                    <scope line="242">
                        <declaration name="singleton" type="String" line="244"/>
                        <declaration name="sb" type="StringBuilder" line="245"/>
                        <scope line="248">
                            <scope line="250"/>
                            <scope line="253"/>
                        </scope>
                        <scope line="259"/>
                        <scope line="264"/>
                    </scope>
                    <scope line="268"/>
                </scope>
                <scope line="272">
                    <declaration name="s" type="String" line="273"/>
                    <scope line="274">
                        <declaration name="sb" type="StringBuilder" line="276"/>
                        <scope line="279">
                            <scope line="281"/>
                        </scope>
                        <scope line="289"/>
                        <scope line="293"/>
                    </scope>
                </scope>
                <scope line="299"/>
            </method>
            <method name="setExtensions" type="InternalLocaleBuilder" line="312">
                <params>
                    <param name="bcpExtensions" type="List<String>"/>
                    <param name="privateuse" type="String"/>
                </params>
                <comment line="320">
                    ignore duplicates                    
                </comment>
                <comment line="322">
                    each extension string contains singleton, e.g. &quot;a-abc-def&quot;                    
                </comment>
                <comment line="336">
                    privateuse string contains prefix, e.g. &quot;x-abc-def&quot;                    
                </comment>
                <scope line="315">
                    <declaration name="done" type="Set&lt;CaseInsensitiveChar&gt;" line="316"/>
                    <scope line="317">
                        <declaration name="key" type="CaseInsensitiveChar" line="318"/>
                        <scope line="320">
                            <scope line="322"/>
                            <scope line="324">
                                <scope line="325"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
                <scope line="334">
                    <scope line="336"/>
                </scope>
            </method>
            <method name="setLanguageTag" type="InternalLocaleBuilder" line="348">
                <params>
                    <param name="langtag" type="LanguageTag"/>
                </params>
                <scope line="350"/>
                <scope line="352">
                    <declaration name="lang" type="String" line="353"/>
                    <scope line="354"/>
                </scope>
                <declaration name="bcpVariants" type="List&lt;String&gt;" line="361"/>
                <scope line="362">
                    <declaration name="var" type="StringBuilder" line="363"/>
                    <declaration name="size" type="int" line="364"/>
                    <scope line="365"/>
                </scope>
            </method>
            <method name="setLocale" type="InternalLocaleBuilder" line="376">
                <params>
                    <param name="base" type="BaseLocale"/>
                    <param name="localeExtensions" type="LocaleExtensions"/>
                </params>
                <comment line="383">
                    Special backward compatibility support                    
                </comment>
                <comment line="385">
                    Exception 1 - ja_JP_JP                    
                </comment>
                <comment line="387">
                    When locale ja_JP_JP is created, ca-japanese is always there.
                     The builder ignores the variant &quot;JP&quot;                    
                </comment>
                <comment line="392">
                    Exception 2 - th_TH_TH                    
                </comment>
                <comment line="394">
                    When locale th_TH_TH is created, nu-thai is always there.
                     The builder ignores the variant &quot;TH&quot;                    
                </comment>
                <comment line="399">
                    Exception 3 - no_NO_NY                    
                </comment>
                <comment line="401">
                    no_NO_NY is a valid locale and used by Java 6 or older versions.
                     The build ignores the variant &quot;NY&quot; and change the language to &quot;nn&quot;.                    
                </comment>
                <comment line="407">
                    Validate base locale fields before updating internal state.
                     LocaleExtensions always store validated/canonicalized values,
                     so no checks are necessary.                    
                </comment>
                <comment line="429">
                    The input locale is validated at this point.
                     Now, updating builder&apos;s internal fields.                    
                </comment>
                <comment line="439">
                    map localeExtensions back to builder&apos;s internal format                    
                </comment>
                <declaration name="language" type="String" line="377"/>
                <declaration name="script" type="String" line="378"/>
                <declaration name="region" type="String" line="379"/>
                <declaration name="variant" type="String" line="380"/>
                <scope line="385"/>
                <scope line="392"/>
                <scope line="399"/>
                <scope line="409"/>
                <scope line="413"/>
                <scope line="417"/>
                <scope line="421">
                    <declaration name="errIdx" type="int" line="422"/>
                    <scope line="423"/>
                </scope>
                <declaration name="extKeys" type="Set&lt;Character&gt;" line="436"/>
                <scope line="437">
                    <scope line="439">
                        <declaration name="e" type="Extension" line="440"/>
                        <scope line="441">
                            <declaration name="ue" type="UnicodeLocaleExtension" line="442"/>
                            <scope line="443">
                                <scope line="444"/>
                            </scope>
                            <scope line="449">
                                <scope line="450"/>
                            </scope>
                        </scope>
                        <scope line="455">
                            <scope line="456"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="clear" type="InternalLocaleBuilder" line="466"/>
            <method name="clearExtensions" type="InternalLocaleBuilder" line="475">
                <scope line="476"/>
                <scope line="479"/>
                <scope line="482"/>
            </method>
            <method name="getBaseLocale" type="BaseLocale" line="488">
                <comment line="495">
                    Special private use subtag sequence identified by &quot;lvariant&quot; will be
                     interpreted as Java variant.                    
                </comment>
                <declaration name="language" type="String" line="489"/>
                <declaration name="script" type="String" line="490"/>
                <declaration name="region" type="String" line="491"/>
                <declaration name="variant" type="String" line="492"/>
                <scope line="496">
                    <declaration name="privuse" type="String" line="497"/>
                    <scope line="498">
                        <declaration name="itr" type="StringTokenIterator" line="499"/>
                        <declaration name="sawPrefix" type="boolean" line="500"/>
                        <declaration name="privVarStart" type="int" line="501"/>
                        <scope line="502">
                            <scope line="503"/>
                            <scope line="507"/>
                        </scope>
                        <scope line="512">
                            <declaration name="sb" type="StringBuilder" line="513"/>
                            <scope line="514"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <method name="getLocaleExtensions" type="LocaleExtensions" line="527">
                <scope line="529"/>
                <declaration name="lext" type="LocaleExtensions" line="533"/>
            </method>
            <method name="removePrivateuseVariant" type="String" line="541">
                <params>
                    <param name="privuseVal" type="String"/>
                </params>
                <comment line="545">
                    Note: privateuse value &quot;abc-lvariant&quot; is unchanged
                     because no subtags after &quot;lvariant&quot;.                    
                </comment>
                <comment line="552">
                    Note: privateuse value &quot;abc-lvariant&quot; is unchanged
                     because no subtags after &quot;lvariant&quot;.                    
                </comment>
                <declaration name="itr" type="StringTokenIterator" line="542"/>
                <declaration name="prefixStart" type="int" line="547"/>
                <declaration name="sawPrivuseVar" type="boolean" line="548"/>
                <scope line="549">
                    <scope line="550"/>
                    <scope line="556"/>
                </scope>
                <scope line="561"/>
            </method>
            <method name="checkVariants" type="int" line="573">
                <params>
                    <param name="variants" type="String"/>
                    <param name="sep" type="String"/>
                </params>
                <declaration name="itr" type="StringTokenIterator" line="574"/>
                <scope line="575">
                    <declaration name="s" type="String" line="576"/>
                    <scope line="577"/>
                </scope>
            </method>
            <method name="setUnicodeLocaleExtension" type="void" line="590">
                <params>
                    <param name="subtags" type="String"/>
                </params>
                <comment line="592">
                    wipe out existing attributes/keywords                    
                </comment>
                <comment line="602">
                    parse attributes                    
                </comment>
                <comment line="614">
                    parse keywords                    
                </comment>
                <comment line="622">
                    next keyword - emit previous one                    
                </comment>
                <comment line="630">
                    reset keyword info                    
                </comment>
                <comment line="641">
                    1. first keyword or
                     2. next keyword, but previous one was duplicate                    
                </comment>
                <comment line="645">
                    duplicate                    
                </comment>
                <comment line="652">
                    last keyword                    
                </comment>
                <scope line="592"/>
                <scope line="595"/>
                <declaration name="itr" type="StringTokenIterator" line="599"/>
                <scope line="602">
                    <scope line="603"/>
                    <scope line="606"/>
                </scope>
                <declaration name="key" type="CaseInsensitiveString" line="614"/>
                <declaration name="type" type="String" line="615"/>
                <declaration name="typeStart" type="int" line="616"/>
                <declaration name="typeEnd" type="int" line="617"/>
                <scope line="618">
                    <scope line="619">
                        <scope line="620">
                            <scope line="624"/>
                            <declaration name="tmpKey" type="CaseInsensitiveString" line="630"/>
                        </scope>
                        <scope line="633">
                            <scope line="634"/>
                        </scope>
                    </scope>
                    <scope line="639">
                        <scope line="643"/>
                    </scope>
                    <scope line="649">
                        <scope line="650">
                            <scope line="654"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <class name="CaseInsensitiveString" line="666">
                <declaration name="str" type="String" line="667"/>
                <method name="CaseInsensitiveString" type="constructor" line="669">
                    <params>
                        <param name="s" type="String"/>
                    </params>
                </method>
                <method name="value" type="String" line="674"/>
                <method name="hashCode" type="int" line="679"/>
                <method name="equals" type="boolean" line="684">
                    <params>
                        <param name="obj" type="Object"/>
                    </params>
                    <scope line="685"/>
                    <scope line="688"/>
                </method>
            </class>
            <class name="CaseInsensitiveChar" line="695">
                <declaration name="ch" type="char" line="696"/>
                <javadoc line="698">
                    Constructs a CaseInsensitiveChar with the first char of the
                      given s.                    
                </javadoc>
                <method name="CaseInsensitiveChar" type="constructor" line="702">
                    <params>
                        <param name="s" type="String"/>
                    </params>
                </method>
                <method name="CaseInsensitiveChar" type="constructor" line="706">
                    <params>
                        <param name="c" type="char"/>
                    </params>
                </method>
                <method name="value" type="char" line="711"/>
                <method name="hashCode" type="int" line="716"/>
                <method name="equals" type="boolean" line="721">
                    <params>
                        <param name="obj" type="Object"/>
                    </params>
                    <scope line="722"/>
                    <scope line="725"/>
                </method>
            </class>
        </class>
    </source>