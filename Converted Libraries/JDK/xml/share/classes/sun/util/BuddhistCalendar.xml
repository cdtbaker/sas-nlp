<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.util">
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.util.Calendar"/>
        <import package="java.util.GregorianCalendar"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Locale"/>
        <import package="java.util.Map"/>
        <import package="java.util.ResourceBundle"/>
        <import package="java.util.TimeZone"/>
        <import package="sun.util.resources.LocaleData"/>
        <class name="BuddhistCalendar" line="12">
            <extends class="GregorianCalendar"/>
            <declaration name="serialVersionUID" type="long" line="13"/>
            <declaration name="BUDDHIST_YEAR_OFFSET" type="int" line="14"/>
            <javadoc line="15">
                Constructs a default BuddhistCalendar using the current time
                  in the default time zone with the default locale.                
            </javadoc>
            <method name="BuddhistCalendar" type="constructor" line="19"/>
            <javadoc line="22">
                Constructs a BuddhistCalendar based on the current time
                  in the given time zone with the default locale.                
                <param>
                    zone the given time zone.                    
                </param>
            </javadoc>
            <method name="BuddhistCalendar" type="constructor" line="27">
                <params>
                    <param name="zone" type="TimeZone"/>
                </params>
            </method>
            <javadoc line="30">
                Constructs a BuddhistCalendar based on the current time
                  in the default time zone with the given locale.                
                <param>
                    aLocale the given locale.                    
                </param>
            </javadoc>
            <method name="BuddhistCalendar" type="constructor" line="35">
                <params>
                    <param name="aLocale" type="Locale"/>
                </params>
            </method>
            <javadoc line="38">
                Constructs a BuddhistCalendar based on the current time
                  in the given time zone with the given locale.                
                <param>
                    zone the given time zone.                    
                </param>
                <param>
                    aLocale the given locale.                    
                </param>
            </javadoc>
            <method name="BuddhistCalendar" type="constructor" line="44">
                <params>
                    <param name="zone" type="TimeZone"/>
                    <param name="aLocale" type="Locale"/>
                </params>
            </method>
            <javadoc line="47">
                Compares this BuddhistCalendar to an object reference.                
                <param>
                    obj the object reference with which to compare                    
                </param>
                <return>
                    true if this object is equal to <code>obj</code>; false otherwise                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="52">
                <params>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <javadoc line="55">
                Override hashCode.
                  Generates the hash code for the BuddhistCalendar object                
            </javadoc>
            <method name="hashCode" type="int" line="59"/>
            <javadoc line="62">
                Gets the value for a given time field.                
                <param>
                    field the given time field.                    
                </param>
                <return>
                    the value for the given time field.                    
                </return>
            </javadoc>
            <method name="get" type="int" line="67">
                <params>
                    <param name="field" type="int"/>
                </params>
                <scope line="68"/>
            </method>
            <javadoc line="73">
                Sets the time field with the given value.                
                <param>
                    field the given time field.                    
                </param>
                <param>
                    value the value to be set for the given time field.                    
                </param>
            </javadoc>
            <method name="set" type="void" line="78">
                <params>
                    <param name="field" type="int"/>
                    <param name="value" type="int"/>
                </params>
                <scope line="79"/>
                <scope line="82"/>
            </method>
            <javadoc line="86">
                Adds the specified (signed) amount of time to the given time field.                
                <param>
                    field the time field.                    
                </param>
                <param>
                    amount the amount of date or time to be added to the field.                    
                </param>
            </javadoc>
            <method name="add" type="void" line="91">
                <params>
                    <param name="field" type="int"/>
                    <param name="amount" type="int"/>
                </params>
                <declaration name="savedYearOffset" type="int" line="92"/>
                <scope line="94"/>
                <scope line="97"/>
            </method>
            <javadoc line="101">
                Add to field a signed amount without changing larger fields.
                  A negative roll amount means to subtract from field without changing
                  larger fields.                
                <param>
                    field the time field.                    
                </param>
                <param>
                    amount the signed amount to add to <code>field</code>.                    
                </param>
            </javadoc>
            <method name="roll" type="void" line="108">
                <params>
                    <param name="field" type="int"/>
                    <param name="amount" type="int"/>
                </params>
                <declaration name="savedYearOffset" type="int" line="109"/>
                <scope line="111"/>
                <scope line="114"/>
            </method>
            <method name="getDisplayName" type="String" line="118">
                <params>
                    <param name="field" type="int"/>
                    <param name="style" type="int"/>
                    <param name="locale" type="Locale"/>
                </params>
                <scope line="119"/>
                <scope line="122"/>
                <scope line="125"/>
                <declaration name="rb" type="ResourceBundle" line="128"/>
                <declaration name="eras" type="String[]" line="129"/>
            </method>
            <method name="getDisplayNames" type="Map<String,Integer>" line="132">
                <params>
                    <param name="field" type="int"/>
                    <param name="style" type="int"/>
                    <param name="locale" type="Locale"/>
                </params>
                <scope line="133"/>
                <scope line="136"/>
                <scope line="139"/>
                <scope line="142">
                    <declaration name="shortNames" type="Map&lt;String,Integer&gt;" line="143"/>
                    <declaration name="longNames" type="Map&lt;String,Integer&gt;" line="144"/>
                    <scope line="145"/>
                    <scope line="148"/>
                </scope>
            </method>
            <method name="getDisplayNamesImpl" type="Map<String,Integer>" line="155">
                <params>
                    <param name="field" type="int"/>
                    <param name="style" type="int"/>
                    <param name="locale" type="Locale"/>
                </params>
                <declaration name="rb" type="ResourceBundle" line="156"/>
                <declaration name="eras" type="String[]" line="157"/>
                <declaration name="map" type="Map&lt;String,Integer&gt;" line="158"/>
                <scope line="159"/>
            </method>
            <method name="getKey" type="String" line="164">
                <params>
                    <param name="style" type="int"/>
                </params>
                <declaration name="key" type="StringBuilder" line="165"/>
                <scope line="167"/>
            </method>
            <javadoc line="173">
                Returns the maximum value that this field could have, given the
                  current date.  For example, with the date &quot;Feb 3, 2540&quot; and the
                  &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; field, the actual maximum is 28; for
                  &quot;Feb 3, 2539&quot; it is 29.                
                <param>
                    field the field to determine the maximum of                    
                </param>
                <return>
                    the maximum of the given field for the current date of this Calendar                    
                </return>
            </javadoc>
            <method name="getActualMaximum" type="int" line="181">
                <params>
                    <param name="field" type="int"/>
                </params>
                <declaration name="savedYearOffset" type="int" line="182"/>
                <scope line="184"/>
                <scope line="187"/>
            </method>
            <method name="toString" type="String" line="191">
                <declaration name="s" type="String" line="192"/>
                <scope line="193"/>
                <declaration name="yearField" type="String" line="196"/>
                <declaration name="p" type="int" line="197"/>
                <scope line="198"/>
                <declaration name="sb" type="StringBuilder" line="202"/>
                <declaration name="year" type="int" line="204"/>
            </method>
            <declaration name="yearOffset" type="int" line="208"/>
            <method name="readObject" type="void" line="209">
                <params>
                    <param name="stream" type="ObjectInputStream"/>
                </params>
            </method>
        </class>
    </source>