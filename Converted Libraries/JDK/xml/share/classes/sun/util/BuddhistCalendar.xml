<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.util">
        <import package="java.io.IOException"/>
        <import package="java.io.ObjectInputStream"/>
        <import package="java.util.Calendar"/>
        <import package="java.util.GregorianCalendar"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Locale"/>
        <import package="java.util.Map"/>
        <import package="java.util.ResourceBundle"/>
        <import package="java.util.TimeZone"/>
        <import package="sun.util.resources.LocaleData"/>
        <class name="BuddhistCalendar" line="39">
            <extends class="GregorianCalendar"/>
            <comment line="42">
                ////////////////                
            </comment>
            <comment line="43">
                Class Variables                
            </comment>
            <comment line="44">
                ////////////////                
            </comment>
            <comment line="50">
                /////////////                
            </comment>
            <comment line="51">
                Constructors                
            </comment>
            <comment line="52">
                /////////////                
            </comment>
            <comment line="90">
                ///////////////                
            </comment>
            <comment line="91">
                Public methods                
            </comment>
            <comment line="92">
                ///////////////                
            </comment>
            <declaration name="serialVersionUID" type="long" line="45"/>
            <declaration name="BUDDHIST_YEAR_OFFSET" type="int" line="47"/>
            <javadoc line="53">
                Constructs a default BuddhistCalendar using the current time
                  in the default time zone with the default locale.                
            </javadoc>
            <method name="BuddhistCalendar" type="constructor" line="57"/>
            <javadoc line="61">
                Constructs a BuddhistCalendar based on the current time
                  in the given time zone with the default locale.                
                <param>
                    zone the given time zone.                    
                </param>
            </javadoc>
            <method name="BuddhistCalendar" type="constructor" line="66">
                <params>
                    <param name="zone" type="TimeZone"/>
                </params>
            </method>
            <javadoc line="70">
                Constructs a BuddhistCalendar based on the current time
                  in the default time zone with the given locale.                
                <param>
                    aLocale the given locale.                    
                </param>
            </javadoc>
            <method name="BuddhistCalendar" type="constructor" line="75">
                <params>
                    <param name="aLocale" type="Locale"/>
                </params>
            </method>
            <javadoc line="79">
                Constructs a BuddhistCalendar based on the current time
                  in the given time zone with the given locale.                
                <param>
                    zone the given time zone.                    
                </param>
                <param>
                    aLocale the given locale.                    
                </param>
            </javadoc>
            <method name="BuddhistCalendar" type="constructor" line="85">
                <params>
                    <param name="zone" type="TimeZone"/>
                    <param name="aLocale" type="Locale"/>
                </params>
            </method>
            <javadoc line="93">
                Compares this BuddhistCalendar to an object reference.                
                <param>
                    obj the object reference with which to compare                    
                </param>
                <return>
                    true if this object is equal to <code>obj</code>; false otherwise                    
                </return>
            </javadoc>
            <method name="equals" type="boolean" line="98">
                <params>
                    <param name="obj" type="Object"/>
                </params>
            </method>
            <javadoc line="103">
                Override hashCode.
                  Generates the hash code for the BuddhistCalendar object                
            </javadoc>
            <method name="hashCode" type="int" line="107"/>
            <javadoc line="111">
                Gets the value for a given time field.                
                <param>
                    field the given time field.                    
                </param>
                <return>
                    the value for the given time field.                    
                </return>
            </javadoc>
            <method name="get" type="int" line="117">
                <params>
                    <param name="field" type="int"/>
                </params>
                <scope line="118"/>
            </method>
            <javadoc line="124">
                Sets the time field with the given value.                
                <param>
                    field the given time field.                    
                </param>
                <param>
                    value the value to be set for the given time field.                    
                </param>
            </javadoc>
            <method name="set" type="void" line="130">
                <params>
                    <param name="field" type="int"/>
                    <param name="value" type="int"/>
                </params>
                <scope line="131"/>
                <scope line="133"/>
            </method>
            <javadoc line="138">
                Adds the specified (signed) amount of time to the given time field.                
                <param>
                    field the time field.                    
                </param>
                <param>
                    amount the amount of date or time to be added to the field.                    
                </param>
            </javadoc>
            <method name="add" type="void" line="144">
                <params>
                    <param name="field" type="int"/>
                    <param name="amount" type="int"/>
                </params>
                <comment line="146">
                    To let the superclass calculate date-time values correctly,                    
                </comment>
                <comment line="147">
                    temporarily make this GregorianCalendar.                    
                </comment>
                <declaration name="savedYearOffset" type="int" line="145"/>
                <scope line="149"/>
                <scope line="151"/>
            </method>
            <javadoc line="156">
                Add to field a signed amount without changing larger fields.
                  A negative roll amount means to subtract from field without changing
                  larger fields.                
                <param>
                    field the time field.                    
                </param>
                <param>
                    amount the signed amount to add to <code>field</code>.                    
                </param>
            </javadoc>
            <method name="roll" type="void" line="164">
                <params>
                    <param name="field" type="int"/>
                    <param name="amount" type="int"/>
                </params>
                <comment line="166">
                    To let the superclass calculate date-time values correctly,                    
                </comment>
                <comment line="167">
                    temporarily make this GregorianCalendar.                    
                </comment>
                <declaration name="savedYearOffset" type="int" line="165"/>
                <scope line="169"/>
                <scope line="171"/>
            </method>
            <method name="getDisplayName" type="String" line="176">
                <params>
                    <param name="field" type="int"/>
                    <param name="style" type="int"/>
                    <param name="locale" type="Locale"/>
                </params>
                <comment line="181">
                    Handle Thai BuddhistCalendar specific era names                    
                </comment>
                <scope line="177"/>
                <scope line="183"/>
                <scope line="186"/>
                <declaration name="rb" type="ResourceBundle" line="189"/>
                <declaration name="eras" type="String[]" line="190"/>
            </method>
            <method name="getDisplayNames" type="Map<String,Integer>" line="194">
                <params>
                    <param name="field" type="int"/>
                    <param name="style" type="int"/>
                    <param name="locale" type="Locale"/>
                </params>
                <comment line="199">
                    Handle Thai BuddhistCalendar specific era names                    
                </comment>
                <comment line="207">
                    ALL_STYLES                    
                </comment>
                <comment line="220">
                    SHORT or LONG                    
                </comment>
                <scope line="195"/>
                <scope line="201"/>
                <scope line="204"/>
                <scope line="208">
                    <declaration name="shortNames" type="Map&lt;String,Integer&gt;" line="209"/>
                    <declaration name="longNames" type="Map&lt;String,Integer&gt;" line="210"/>
                    <scope line="211"/>
                    <scope line="214"/>
                </scope>
            </method>
            <method name="getDisplayNamesImpl" type="Map<String,Integer>" line="224">
                <params>
                    <param name="field" type="int"/>
                    <param name="style" type="int"/>
                    <param name="locale" type="Locale"/>
                </params>
                <declaration name="rb" type="ResourceBundle" line="225"/>
                <declaration name="eras" type="String[]" line="226"/>
                <declaration name="map" type="Map&lt;String,Integer&gt;" line="227"/>
                <scope line="228"/>
            </method>
            <method name="getKey" type="String" line="234">
                <params>
                    <param name="style" type="int"/>
                </params>
                <declaration name="key" type="StringBuilder" line="235"/>
                <scope line="237"/>
            </method>
            <javadoc line="244">
                Returns the maximum value that this field could have, given the
                  current date.  For example, with the date &quot;Feb 3, 2540&quot; and the
                  &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; field, the actual maximum is 28; for
                  &quot;Feb 3, 2539&quot; it is 29.                
                <param>
                    field the field to determine the maximum of                    
                </param>
                <return>
                    the maximum of the given field for the current date of this Calendar                    
                </return>
            </javadoc>
            <method name="getActualMaximum" type="int" line="253">
                <params>
                    <param name="field" type="int"/>
                </params>
                <comment line="255">
                    To let the superclass calculate date-time values correctly,                    
                </comment>
                <comment line="256">
                    temporarily make this GregorianCalendar.                    
                </comment>
                <declaration name="savedYearOffset" type="int" line="254"/>
                <scope line="258"/>
                <scope line="260"/>
            </method>
            <method name="toString" type="String" line="265">
                <comment line="266">
                    The super class produces a String with the Gregorian year                    
                </comment>
                <comment line="267">
                    value (or &apos;?&apos;)                    
                </comment>
                <comment line="269">
                    If the YEAR field is UNSET, then return the Gregorian string.                    
                </comment>
                <comment line="276">
                    If the string doesn&apos;t include the year value for some                    
                </comment>
                <comment line="277">
                    reason, then return the Gregorian string.                    
                </comment>
                <comment line="283">
                    Skip the year number                    
                </comment>
                <declaration name="s" type="String" line="268"/>
                <scope line="270"/>
                <declaration name="yearField" type="String" line="274"/>
                <declaration name="p" type="int" line="275"/>
                <scope line="278"/>
                <declaration name="sb" type="StringBuilder" line="282"/>
                <declaration name="year" type="int" line="286"/>
            </method>
            <declaration name="yearOffset" type="int" line="291"/>
            <method name="readObject" type="void" line="294">
                <params>
                    <param name="stream" type="ObjectInputStream"/>
                </params>
            </method>
        </class>
    </source>