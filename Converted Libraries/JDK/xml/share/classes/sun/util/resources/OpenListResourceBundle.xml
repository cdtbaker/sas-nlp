<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.util.resources">
        <import package="java.util.Enumeration"/>
        <import package="java.util.HashMap"/>
        <import package="java.util.Map"/>
        <import package="java.util.ResourceBundle"/>
        <import package="java.util.Set"/>
        <import package="sun.util.ResourceBundleEnumeration"/>
        <class name="OpenListResourceBundle" line="50">
            <extends class="ResourceBundle"/>
            <comment line="69">
                Implements java.util.ResourceBundle.handleGetObject; inherits javadoc specification.                
            </comment>
            <javadoc line="50">
                Subclass of &lt;code&gt;ResourceBundle&lt;/code&gt; which mimics
                  &lt;code&gt;ListResourceBundle&lt;/code&gt;, but provides more hooks
                  for specialized subclass behavior. For general description,
                  see {@link java.util.ListResourceBundle}.
                  &lt;p&gt;
                  This class leaves handleGetObject non-final, and
                  adds a method createMap which allows subclasses to
                  use specialized Map implementations.                
            </javadoc>
            <javadoc line="61">
                Sole constructor.  (For invocation by subclass constructors, typically
                  implicit.)                
            </javadoc>
            <method name="OpenListResourceBundle" type="constructor" line="65"/>
            <method name="handleGetObject" type="Object" line="69">
                <params>
                    <param name="key" type="String"/>
                </params>
                <comment line="75">
                    this class ignores locales                    
                </comment>
                <scope line="70"/>
            </method>
            <javadoc line="78">
                Implementation of ResourceBundle.getKeys.                
            </javadoc>
            <method name="getKeys" type="Enumeration<String>" line="81">
                <declaration name="parent" type="ResourceBundle" line="82"/>
            </method>
            <javadoc line="87">
                Returns a set of keys provided in this resource bundle                
            </javadoc>
            <method name="handleGetKeys" type="Set<String>" line="90"/>
            <javadoc line="96">
                Returns the parent bundle                
            </javadoc>
            <method name="getParent" type="OpenListResourceBundle" line="99"/>
            <method name="getContents" type="Object[][]" line="103"/>
            <javadoc line="103">
                See ListResourceBundle class description.                
            </javadoc>
            <javadoc line="108">
                Load lookup tables if they haven&apos;t been loaded already.                
            </javadoc>
            <method name="loadLookupTablesIfNecessary" type="void" line="111">
                <scope line="112"/>
            </method>
            <javadoc line="117">
                We lazily load the lookup hashtable.  This function does the
                  loading.                
            </javadoc>
            <method name="loadLookup" type="void" line="121">
                <comment line="128">
                    key must be non-null String, value must be non-null                    
                </comment>
                <declaration name="contents" type="Object[][]" line="125"/>
                <declaration name="temp" type="Map" line="126"/>
                <scope line="127">
                    <declaration name="key" type="String" line="129"/>
                    <declaration name="value" type="Object" line="130"/>
                    <scope line="131"/>
                </scope>
            </method>
            <javadoc line="139">
                Lets subclasses provide specialized Map implementations.
                  Default uses HashMap.                
            </javadoc>
            <method name="createMap" type="Map" line="143">
                <params>
                    <param name="size" type="int"/>
                </params>
            </method>
            <declaration name="lookup" type="Map" line="147"/>
        </class>
    </source>