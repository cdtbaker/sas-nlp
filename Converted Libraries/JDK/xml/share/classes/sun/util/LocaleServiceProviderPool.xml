<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.util">
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedActionException"/>
        <import package="java.security.PrivilegedExceptionAction"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.IllformedLocaleException"/>
        <import package="java.util.LinkedHashSet"/>
        <import package="java.util.List"/>
        <import package="java.util.Locale"/>
        <import package="java.util.Locale.Builder"/>
        <import package="java.util.Map"/>
        <import package="java.util.ResourceBundle.Control"/>
        <import package="java.util.ServiceLoader"/>
        <import package="java.util.Set"/>
        <import package="java.util.concurrent.ConcurrentHashMap"/>
        <import package="java.util.spi.LocaleServiceProvider"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <import package="sun.util.resources.LocaleData"/>
        <import package="sun.util.resources.OpenListResourceBundle"/>
        <class name="LocaleServiceProviderPool" line="21">
            <javadoc line="21">
                An instance of this class holds a set of the third party implementations of a particular
                  locale sensitive service, such as {@link java.util.spi.LocaleNameProvider}.                
            </javadoc>
            <declaration name="poolOfPools" type="Map&lt;Class,LocaleServiceProviderPool&gt;" line="26"/>
            <javadoc line="26">
                A Map that holds singleton instances of this class.  Each instance holds a
                  set of provider implementations of a particular locale sensitive service.                
            </javadoc>
            <declaration name="providers" type="Set&lt;LocaleServiceProvider&gt;" line="31"/>
            <javadoc line="31">
                A Set containing locale service providers that implement the
                  specified provider SPI                
            </javadoc>
            <declaration name="providersCache" type="Map&lt;Locale,LocaleServiceProvider&gt;" line="36"/>
            <javadoc line="36">
                A Map that retains Locale-&gt;provider mapping                
            </javadoc>
            <declaration name="availableLocales" type="Set&lt;Locale&gt;" line="40"/>
            <javadoc line="40">
                Available locales for this locale sensitive service.  This also contains
                  JRE&apos;s available locales                
            </javadoc>
            <declaration name="availableJRELocales" type="List&lt;Locale&gt;" line="45"/>
            <javadoc line="45">
                Available locales within this JRE.  Currently this is declared as
                  static.  This could be non-static later, so that they could have
                  different sets for each locale sensitive services.                
            </javadoc>
            <declaration name="providerLocales" type="Set&lt;Locale&gt;" line="51"/>
            <javadoc line="51">
                Provider locales for this locale sensitive service.                
            </javadoc>
            <declaration name="locale_ja_JP_JP" type="Locale" line="55"/>
            <javadoc line="55">
                Special locale for ja_JP with Japanese calendar                
            </javadoc>
            <declaration name="locale_th_TH_TH" type="Locale" line="59"/>
            <javadoc line="59">
                Special locale for th_TH with Thai numbering system                
            </javadoc>
            <javadoc line="63">
                A factory method that returns a singleton instance                
            </javadoc>
            <method name="getPool" type="LocaleServiceProviderPool" line="66">
                <params>
                    <param name="providerClass" type="Class<? extends LocaleServiceProvider>"/>
                </params>
                <declaration name="pool" type="LocaleServiceProviderPool" line="67"/>
                <scope line="68">
                    <declaration name="newPool" type="LocaleServiceProviderPool" line="69"/>
                    <scope line="71"/>
                </scope>
            </method>
            <javadoc line="77">
                The sole constructor.                
                <param>
                    c class of the locale sensitive service                    
                </param>
            </javadoc>
            <method name="LocaleServiceProviderPool" type="constructor" line="81">
                <params>
                    <param name="c" type="Class<? extends LocaleServiceProvider>"/>
                </params>
                <scope line="82">
                    <anonymous_class line="83">
                        <method name="run" type="Object" line="84">
                            <scope line="85"/>
                        </method>
                    </anonymous_class>
                </scope>
                <scope line="93"/>
            </method>
            <method name="config" type="void" line="97">
                <params>
                    <param name="message" type="String"/>
                </params>
                <declaration name="logger" type="PlatformLogger" line="98"/>
            </method>
            <class name="AllAvailableLocales" line="101">
                <javadoc line="101">
                    Lazy loaded set of available locales.
                      Loading all locales is a very long operation.                    
                </javadoc>
                <declaration name="allAvailableLocales" type="Locale[]" line="106"/>
                <javadoc line="106">
                    Available locales for all locale sensitive services.
                      This also contains JRE&apos;s available locales                    
                </javadoc>
                <scope line="111">
                    <declaration name="providerClasses" type="Class[]" line="112"/>
                    <declaration name="allLocales" type="Locale[]" line="113"/>
                    <declaration name="all" type="Set&lt;Locale&gt;" line="114"/>
                    <scope line="115"/>
                    <scope line="118">
                        <declaration name="pool" type="LocaleServiceProviderPool" line="119"/>
                    </scope>
                </scope>
            </class>
            <javadoc line="125">
                Returns an array of available locales for all the provider classes.
                  This array is a merged array of all the locales that are provided by each
                  provider, including the JRE.                
                <return>
                    an array of the available locales for all provider classes                    
                </return>
            </javadoc>
            <method name="getAllAvailableLocales" type="Locale[]" line="131"/>
            <javadoc line="134">
                Returns an array of available locales.  This array is a
                  merged array of all the locales that are provided by each
                  provider, including the JRE.                
                <return>
                    an array of the available locales                    
                </return>
            </javadoc>
            <method name="getAvailableLocales" type="Locale[]" line="140">
                <scope line="141">
                    <scope line="143"/>
                </scope>
                <declaration name="tmp" type="Locale[]" line="147"/>
            </method>
            <javadoc line="151">
                Returns an array of available locales (already normalized
                  for service lookup) from providers.
                  Note that this method does not return a defensive copy.                
                <return>
                    list of the provider locales                    
                </return>
            </javadoc>
            <method name="getProviderLocales" type="Set<Locale>" line="157">
                <scope line="158">
                    <scope line="160">
                        <scope line="161">
                            <declaration name="locales" type="Locale[]" line="162"/>
                            <scope line="163"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="171">
                Returns whether any provider for this locale sensitive
                  service is available or not.                
                <return>
                    true if any provider is available                    
                </return>
            </javadoc>
            <method name="hasProviders" type="boolean" line="176"/>
            <javadoc line="179">
                Returns an array of available locales (already normalized for
                  service lookup) supported by the JRE.
                  Note that this method does not return a defensive copy.                
                <return>
                    list of the available JRE locales                    
                </return>
            </javadoc>
            <method name="getJRELocales" type="List<Locale>" line="185">
                <scope line="186">
                    <scope line="187">
                        <scope line="188">
                            <declaration name="allLocales" type="Locale[]" line="189"/>
                            <scope line="191"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="199">
                Returns whether the given locale is supported by the JRE.                
                <param>
                    locale the locale to test.                    
                </param>
                <return>
                    true, if the locale is supported by the JRE. false
                      otherwise.                    
                </return>
            </javadoc>
            <method name="isJRESupported" type="boolean" line="205">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
                <declaration name="locales" type="List&lt;Locale&gt;" line="206"/>
            </method>
            <javadoc line="209">
                Returns the provider&apos;s localized object for the specified
                  locale.                
                <param>
                    getter an object on which getObject() method
                      is called to obtain the provider's instance.                    
                </param>
                <param>
                    locale the given locale that is used as the starting one                    
                </param>
                <param>
                    params provider specific parameters                    
                </param>
                <return>
                    provider's instance, or null.                    
                </return>
            </javadoc>
            <method name="getLocalizedObject" type="S" line="218">
                <params>
                    <param name="getter" type="LocalizedObjectGetter<P,S>"/>
                    <param name="locale" type="Locale"/>
                    <param name="params" type="Object"/>
                </params>
            </method>
            <javadoc line="221">
                Returns the provider&apos;s localized name for the specified
                  locale.                
                <param>
                    getter an object on which getObject() method
                      is called to obtain the provider's instance.                    
                </param>
                <param>
                    locale the given locale that is used as the starting one                    
                </param>
                <param>
                    bundle JRE resource bundle that contains
                      the localized names, or null for localized objects.                    
                </param>
                <param>
                    key the key string if bundle is supplied, otherwise null.                    
                </param>
                <param>
                    params provider specific parameters                    
                </param>
                <return>
                    provider's instance, or null.                    
                </return>
            </javadoc>
            <method name="getLocalizedObject" type="S" line="233">
                <params>
                    <param name="getter" type="LocalizedObjectGetter<P,S>"/>
                    <param name="locale" type="Locale"/>
                    <param name="bundle" type="OpenListResourceBundle"/>
                    <param name="key" type="String"/>
                    <param name="params" type="Object"/>
                </params>
            </method>
            <javadoc line="236">
                Returns the provider&apos;s localized name for the specified
                  locale.                
                <param>
                    getter an object on which getObject() method
                      is called to obtain the provider's instance.                    
                </param>
                <param>
                    locale the given locale that is used as the starting one                    
                </param>
                <param>
                    bundleKey JRE specific bundle key. e.g., "USD" is for currency
                      symbol and "usd" is for currency display name in the JRE bundle.                    
                </param>
                <param>
                    bundle JRE resource bundle that contains
                      the localized names, or null for localized objects.                    
                </param>
                <param>
                    key the key string if bundle is supplied, otherwise null.                    
                </param>
                <param>
                    params provider specific parameters                    
                </param>
                <return>
                    provider's instance, or null.                    
                </return>
            </javadoc>
            <method name="getLocalizedObject" type="S" line="250">
                <params>
                    <param name="getter" type="LocalizedObjectGetter<P,S>"/>
                    <param name="locale" type="Locale"/>
                    <param name="bundleKey" type="String"/>
                    <param name="bundle" type="OpenListResourceBundle"/>
                    <param name="key" type="String"/>
                    <param name="params" type="Object"/>
                </params>
            </method>
            <method name="getLocalizedObjectImpl" type="S" line="253">
                <params>
                    <param name="getter" type="LocalizedObjectGetter<P,S>"/>
                    <param name="locale" type="Locale"/>
                    <param name="isObjectProvider" type="boolean"/>
                    <param name="bundleKey" type="String"/>
                    <param name="bundle" type="OpenListResourceBundle"/>
                    <param name="key" type="String"/>
                    <param name="params" type="Object"/>
                </params>
                <scope line="254">
                    <scope line="255"/>
                    <declaration name="bundleLocale" type="Locale" line="258"/>
                    <declaration name="lookupLocales" type="List&lt;Locale&gt;" line="259"/>
                    <declaration name="lsp" type="P" line="260"/>
                    <declaration name="providersObj" type="S" line="261"/>
                    <declaration name="provLoc" type="Set&lt;Locale&gt;" line="262"/>
                    <scope line="263">
                        <declaration name="current" type="Locale" line="264"/>
                        <scope line="265">
                            <scope line="266"/>
                        </scope>
                        <scope line="270">
                            <scope line="271"/>
                        </scope>
                        <scope line="275">
                            <scope line="277">
                                <scope line="279"/>
                                <scope line="282"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="288">
                        <scope line="290"/>
                        <scope line="293">
                            <scope line="295">
                                <scope line="297"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="307">
                Returns a locale service provider instance that supports
                  the specified locale.                
                <param>
                    locale the given locale                    
                </param>
                <return>
                    the provider, or null if there is
                      no provider available.                    
                </return>
            </javadoc>
            <method name="findProvider" type="LocaleServiceProvider" line="314">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
                <scope line="315"/>
                <scope line="318">
                    <declaration name="provider" type="LocaleServiceProvider" line="319"/>
                    <scope line="320"/>
                </scope>
                <scope line="324">
                    <scope line="325">
                        <declaration name="locales" type="Locale[]" line="326"/>
                        <scope line="327">
                            <scope line="329">
                                <declaration name="providerInCache" type="LocaleServiceProvider" line="330"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="339">
                Returns a list of candidate locales for service look up.                
                <param>
                    locale the input locale                    
                </param>
                <return>
                    the list of candiate locales for the given locale                    
                </return>
            </javadoc>
            <method name="getLookupLocales" type="List<Locale>" line="344">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
                <anonymous_class line="345"/>
                <declaration name="lookupLocales" type="List&lt;Locale&gt;" line="345"/>
            </method>
            <javadoc line="350">
                Returns an instance of Locale used for service look up.
                  The result Locale has no extensions except for ja_JP_JP
                  and th_TH_TH                
                <param>
                    locale the locale                    
                </param>
                <return>
                    the locale used for service look up                    
                </return>
            </javadoc>
            <method name="getLookupLocale" type="Locale" line="357">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
                <declaration name="lookupLocale" type="Locale" line="358"/>
                <declaration name="extensions" type="Set&lt;Character&gt;" line="359"/>
                <scope line="360">
                    <declaration name="locbld" type="Builder" line="361"/>
                    <scope line="362"/>
                    <scope line="367"/>
                </scope>
            </method>
            <class name="NullProvider" line="374">
                <extends class="LocaleServiceProvider"/>
                <javadoc line="374">
                    A dummy locale service provider that indicates there is no
                      provider available                    
                </javadoc>
                <declaration name="INSTANCE" type="NullProvider" line="379"/>
                <method name="getAvailableLocales" type="Locale[]" line="380"/>
            </class>
            <interface name="LocalizedObjectGetter">
                <type_params>
                    <type_param name="P"/>
                    <type_param name="S"/>
                </type_params>
                <javadoc line="384">
                    An interface to get a localized object for each locale sensitve
                      service class.                    
                </javadoc>
                <method name="getObject" type="S" line="389"/>
                <javadoc line="389">
                    Returns an object from the provider                    
                    <param>
                        lsp the provider                        
                    </param>
                    <param>
                        locale the locale                        
                    </param>
                    <param>
                        key key string to localize, or null if the provider is not
                          a name provider                        
                    </param>
                    <param>
                        params provider specific params                        
                    </param>
                    <return>
                        localized object from the provider                        
                    </return>
                </javadoc>
            </interface>
        </class>
    </source>