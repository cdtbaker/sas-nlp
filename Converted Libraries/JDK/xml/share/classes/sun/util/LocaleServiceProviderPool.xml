<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.util">
        <import package="java.security.AccessController"/>
        <import package="java.security.PrivilegedActionException"/>
        <import package="java.security.PrivilegedExceptionAction"/>
        <import package="java.util.ArrayList"/>
        <import package="java.util.HashSet"/>
        <import package="java.util.IllformedLocaleException"/>
        <import package="java.util.LinkedHashSet"/>
        <import package="java.util.List"/>
        <import package="java.util.Locale"/>
        <import package="java.util.Locale.Builder"/>
        <import package="java.util.Map"/>
        <import package="java.util.ResourceBundle.Control"/>
        <import package="java.util.ServiceLoader"/>
        <import package="java.util.Set"/>
        <import package="java.util.concurrent.ConcurrentHashMap"/>
        <import package="java.util.spi.LocaleServiceProvider"/>
        <import package="sun.util.logging.PlatformLogger"/>
        <import package="sun.util.resources.LocaleData"/>
        <import package="sun.util.resources.OpenListResourceBundle"/>
        <class name="LocaleServiceProviderPool" line="49">
            <javadoc line="49">
                An instance of this class holds a set of the third party implementations of a particular
                  locale sensitive service, such as {@link java.util.spi.LocaleNameProvider}.                
            </javadoc>
            <declaration name="poolOfPools" type="Map&lt;Class,LocaleServiceProviderPool&gt;" line="56"/>
            <javadoc line="56">
                A Map that holds singleton instances of this class.  Each instance holds a
                  set of provider implementations of a particular locale sensitive service.                
            </javadoc>
            <declaration name="providers" type="Set&lt;LocaleServiceProvider&gt;" line="63"/>
            <javadoc line="63">
                A Set containing locale service providers that implement the
                  specified provider SPI                
            </javadoc>
            <declaration name="providersCache" type="Map&lt;Locale,LocaleServiceProvider&gt;" line="70"/>
            <javadoc line="70">
                A Map that retains Locale-&gt;provider mapping                
            </javadoc>
            <declaration name="availableLocales" type="Set&lt;Locale&gt;" line="76"/>
            <javadoc line="76">
                Available locales for this locale sensitive service.  This also contains
                  JRE&apos;s available locales                
            </javadoc>
            <declaration name="availableJRELocales" type="List&lt;Locale&gt;" line="82"/>
            <javadoc line="82">
                Available locales within this JRE.  Currently this is declared as
                  static.  This could be non-static later, so that they could have
                  different sets for each locale sensitive services.                
            </javadoc>
            <declaration name="providerLocales" type="Set&lt;Locale&gt;" line="89"/>
            <javadoc line="89">
                Provider locales for this locale sensitive service.                
            </javadoc>
            <declaration name="locale_ja_JP_JP" type="Locale" line="94"/>
            <javadoc line="94">
                Special locale for ja_JP with Japanese calendar                
            </javadoc>
            <declaration name="locale_th_TH_TH" type="Locale" line="99"/>
            <javadoc line="99">
                Special locale for th_TH with Thai numbering system                
            </javadoc>
            <javadoc line="104">
                A factory method that returns a singleton instance                
            </javadoc>
            <method name="getPool" type="LocaleServiceProviderPool" line="107">
                <params>
                    <param name="providerClass" type="Class<? extends LocaleServiceProvider>"/>
                </params>
                <declaration name="pool" type="LocaleServiceProviderPool" line="108"/>
                <scope line="109">
                    <declaration name="newPool" type="LocaleServiceProviderPool" line="110"/>
                    <scope line="113"/>
                </scope>
            </method>
            <javadoc line="121">
                The sole constructor.                
                <param>
                    c class of the locale sensitive service                    
                </param>
            </javadoc>
            <method name="LocaleServiceProviderPool" type="constructor" line="126">
                <params>
                    <param name="c" type="Class<? extends LocaleServiceProvider>"/>
                </params>
                <scope line="127">
                    <anonymous_class line="128">
                        <method name="run" type="Object" line="129">
                            <scope line="130"/>
                        </method>
                    </anonymous_class>
                </scope>
                <scope line="136"/>
            </method>
            <method name="config" type="void" line="141">
                <params>
                    <param name="message" type="String"/>
                </params>
                <declaration name="logger" type="PlatformLogger" line="142"/>
            </method>
            <class name="AllAvailableLocales" line="146">
                <javadoc line="146">
                    Lazy loaded set of available locales.
                      Loading all locales is a very long operation.                    
                </javadoc>
                <declaration name="allAvailableLocales" type="Locale[]" line="151"/>
                <javadoc line="151">
                    Available locales for all locale sensitive services.
                      This also contains JRE&apos;s available locales                    
                </javadoc>
                <scope line="157">
                    <declaration name="providerClasses" type="Class[]" line="158"/>
                    <declaration name="allLocales" type="Locale[]" line="170"/>
                    <declaration name="all" type="Set&lt;Locale&gt;" line="171"/>
                    <scope line="172"/>
                    <scope line="176">
                        <declaration name="pool" type="LocaleServiceProviderPool" line="177"/>
                    </scope>
                </scope>
            </class>
            <javadoc line="186">
                Returns an array of available locales for all the provider classes.
                  This array is a merged array of all the locales that are provided by each
                  provider, including the JRE.                
                <return>
                    an array of the available locales for all provider classes                    
                </return>
            </javadoc>
            <method name="getAllAvailableLocales" type="Locale[]" line="193"/>
            <javadoc line="197">
                Returns an array of available locales.  This array is a
                  merged array of all the locales that are provided by each
                  provider, including the JRE.                
                <return>
                    an array of the available locales                    
                </return>
            </javadoc>
            <method name="getAvailableLocales" type="Locale[]" line="204">
                <scope line="205">
                    <scope line="207"/>
                </scope>
                <declaration name="tmp" type="Locale[]" line="211"/>
            </method>
            <javadoc line="216">
                Returns an array of available locales (already normalized
                  for service lookup) from providers.
                  Note that this method does not return a defensive copy.                
                <return>
                    list of the provider locales                    
                </return>
            </javadoc>
            <method name="getProviderLocales" type="Set<Locale>" line="223">
                <scope line="224">
                    <scope line="226">
                        <scope line="227">
                            <declaration name="locales" type="Locale[]" line="228"/>
                            <scope line="229"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="238">
                Returns whether any provider for this locale sensitive
                  service is available or not.                
                <return>
                    true if any provider is available                    
                </return>
            </javadoc>
            <method name="hasProviders" type="boolean" line="244"/>
            <javadoc line="248">
                Returns an array of available locales (already normalized for
                  service lookup) supported by the JRE.
                  Note that this method does not return a defensive copy.                
                <return>
                    list of the available JRE locales                    
                </return>
            </javadoc>
            <method name="getJRELocales" type="List<Locale>" line="255">
                <scope line="256">
                    <scope line="257">
                        <scope line="258">
                            <declaration name="allLocales" type="Locale[]" line="259"/>
                            <scope line="261"/>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="270">
                Returns whether the given locale is supported by the JRE.                
                <param>
                    locale the locale to test.                    
                </param>
                <return>
                    true, if the locale is supported by the JRE. false
                      otherwise.                    
                </return>
            </javadoc>
            <method name="isJRESupported" type="boolean" line="277">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
                <declaration name="locales" type="List&lt;Locale&gt;" line="278"/>
            </method>
            <javadoc line="282">
                Returns the provider&apos;s localized object for the specified
                  locale.                
                <param>
                    getter an object on which getObject() method
                      is called to obtain the provider's instance.                    
                </param>
                <param>
                    locale the given locale that is used as the starting one                    
                </param>
                <param>
                    params provider specific parameters                    
                </param>
                <return>
                    provider's instance, or null.                    
                </return>
            </javadoc>
            <method name="getLocalizedObject" type="S" line="294">
                <params>
                    <param name="getter" type="LocalizedObjectGetter<P,S>"/>
                    <param name="locale" type="Locale"/>
                    <param name="params" type="Object"/>
                </params>
            </method>
            <javadoc line="298">
                Returns the provider&apos;s localized name for the specified
                  locale.                
                <param>
                    getter an object on which getObject() method
                      is called to obtain the provider's instance.                    
                </param>
                <param>
                    locale the given locale that is used as the starting one                    
                </param>
                <param>
                    bundle JRE resource bundle that contains
                      the localized names, or null for localized objects.                    
                </param>
                <param>
                    key the key string if bundle is supplied, otherwise null.                    
                </param>
                <param>
                    params provider specific parameters                    
                </param>
                <return>
                    provider's instance, or null.                    
                </return>
            </javadoc>
            <method name="getLocalizedObject" type="S" line="315">
                <params>
                    <param name="getter" type="LocalizedObjectGetter<P,S>"/>
                    <param name="locale" type="Locale"/>
                    <param name="bundle" type="OpenListResourceBundle"/>
                    <param name="key" type="String"/>
                    <param name="params" type="Object"/>
                </params>
            </method>
            <javadoc line="319">
                Returns the provider&apos;s localized name for the specified
                  locale.                
                <param>
                    getter an object on which getObject() method
                      is called to obtain the provider's instance.                    
                </param>
                <param>
                    locale the given locale that is used as the starting one                    
                </param>
                <param>
                    bundleKey JRE specific bundle key. e.g., "USD" is for currency
                      symbol and "usd" is for currency display name in the JRE bundle.                    
                </param>
                <param>
                    bundle JRE resource bundle that contains
                      the localized names, or null for localized objects.                    
                </param>
                <param>
                    key the key string if bundle is supplied, otherwise null.                    
                </param>
                <param>
                    params provider specific parameters                    
                </param>
                <return>
                    provider's instance, or null.                    
                </return>
            </javadoc>
            <method name="getLocalizedObject" type="S" line="339">
                <params>
                    <param name="getter" type="LocalizedObjectGetter<P,S>"/>
                    <param name="locale" type="Locale"/>
                    <param name="bundleKey" type="String"/>
                    <param name="bundle" type="OpenListResourceBundle"/>
                    <param name="key" type="String"/>
                    <param name="params" type="Object"/>
                </params>
            </method>
            <method name="getLocalizedObjectImpl" type="S" line="349">
                <params>
                    <param name="getter" type="LocalizedObjectGetter<P,S>"/>
                    <param name="locale" type="Locale"/>
                    <param name="isObjectProvider" type="boolean"/>
                    <param name="bundleKey" type="String"/>
                    <param name="bundle" type="OpenListResourceBundle"/>
                    <param name="key" type="String"/>
                    <param name="params" type="Object"/>
                </params>
                <comment line="359">
                    check whether a provider has an implementation that&apos;s closer                    
                </comment>
                <comment line="360">
                    to the requested locale than the bundle we&apos;ve found (for                    
                </comment>
                <comment line="361">
                    localized names), or Java runtime&apos;s supported locale                    
                </comment>
                <comment line="362">
                    (for localized objects)                    
                </comment>
                <comment line="389">
                    look up the JRE bundle and its parent chain.  Only                    
                </comment>
                <comment line="390">
                    providers for localized names are checked hereafter.                    
                </comment>
                <comment line="395">
                    JRE has it.                    
                </comment>
                <comment line="407">
                    try parent bundle                    
                </comment>
                <comment line="412">
                    not found.                    
                </comment>
                <scope line="350">
                    <scope line="351"/>
                    <declaration name="bundleLocale" type="Locale" line="354"/>
                    <declaration name="lookupLocales" type="List&lt;Locale&gt;" line="355"/>
                    <declaration name="lsp" type="P" line="356"/>
                    <declaration name="providersObj" type="S" line="357"/>
                    <declaration name="provLoc" type="Set&lt;Locale&gt;" line="363"/>
                    <scope line="364">
                        <declaration name="current" type="Locale" line="365"/>
                        <scope line="366">
                            <scope line="367"/>
                        </scope>
                        <scope line="370">
                            <scope line="371"/>
                        </scope>
                        <scope line="375">
                            <scope line="377">
                                <scope line="379"/>
                                <scope line="381"/>
                            </scope>
                        </scope>
                    </scope>
                    <scope line="391">
                        <scope line="394"/>
                        <scope line="397">
                            <scope line="399">
                                <scope line="401"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="416">
                Returns a locale service provider instance that supports
                  the specified locale.                
                <param>
                    locale the given locale                    
                </param>
                <return>
                    the provider, or null if there is
                      no provider available.                    
                </return>
            </javadoc>
            <method name="findProvider" type="LocaleServiceProvider" line="424">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
                <comment line="438">
                    normalize                    
                </comment>
                <scope line="425"/>
                <scope line="429">
                    <declaration name="provider" type="LocaleServiceProvider" line="430"/>
                    <scope line="431"/>
                </scope>
                <scope line="434">
                    <scope line="435">
                        <declaration name="locales" type="Locale[]" line="436"/>
                        <scope line="437">
                            <scope line="440">
                                <declaration name="providerInCache" type="LocaleServiceProvider" line="441"/>
                            </scope>
                        </scope>
                    </scope>
                </scope>
            </method>
            <javadoc line="454">
                Returns a list of candidate locales for service look up.                
                <param>
                    locale the input locale                    
                </param>
                <return>
                    the list of candiate locales for the given locale                    
                </return>
            </javadoc>
            <method name="getLookupLocales" type="List<Locale>" line="459">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
                <comment line="460">
                    Note: We currently use the default implementation of                    
                </comment>
                <comment line="461">
                    ResourceBundle.Control.getCandidateLocales. The result                    
                </comment>
                <comment line="462">
                    returned by getCandidateLocales are already normalized                    
                </comment>
                <comment line="463">
                    (no extensions) for service look up.                    
                </comment>
                <anonymous_class line="464"/>
                <declaration name="lookupLocales" type="List&lt;Locale&gt;" line="464"/>
            </method>
            <javadoc line="468">
                Returns an instance of Locale used for service look up.
                  The result Locale has no extensions except for ja_JP_JP
                  and th_TH_TH                
                <param>
                    locale the locale                    
                </param>
                <return>
                    the locale used for service look up                    
                </return>
            </javadoc>
            <method name="getLookupLocale" type="Locale" line="476">
                <params>
                    <param name="locale" type="Locale"/>
                </params>
                <comment line="482">
                    remove extensions                    
                </comment>
                <comment line="489">
                    A Locale with non-empty extensions                    
                </comment>
                <comment line="490">
                    should have well-formed fields except                    
                </comment>
                <comment line="491">
                    for ja_JP_JP and th_TH_TH. Therefore,                    
                </comment>
                <comment line="492">
                    it should never enter in this catch clause.                    
                </comment>
                <comment line="495">
                    Fallback - script field will be lost.                    
                </comment>
                <declaration name="lookupLocale" type="Locale" line="477"/>
                <declaration name="extensions" type="Set&lt;Character&gt;" line="478"/>
                <scope line="481">
                    <declaration name="locbld" type="Builder" line="483"/>
                    <scope line="484"/>
                    <scope line="488"/>
                </scope>
            </method>
            <class name="NullProvider" line="502">
                <extends class="LocaleServiceProvider"/>
                <javadoc line="502">
                    A dummy locale service provider that indicates there is no
                      provider available                    
                </javadoc>
                <declaration name="INSTANCE" type="NullProvider" line="507"/>
                <method name="getAvailableLocales" type="Locale[]" line="509"/>
            </class>
            <interface name="LocalizedObjectGetter">
                <type_params>
                    <type_param name="P"/>
                    <type_param name="S"/>
                </type_params>
                <javadoc line="514">
                    An interface to get a localized object for each locale sensitve
                      service class.                    
                </javadoc>
                <method name="getObject" type="S" line="519"/>
                <javadoc line="519">
                    Returns an object from the provider                    
                    <param>
                        lsp the provider                        
                    </param>
                    <param>
                        locale the locale                        
                    </param>
                    <param>
                        key key string to localize, or null if the provider is not
                          a name provider                        
                    </param>
                    <param>
                        params provider specific params                        
                    </param>
                    <return>
                        localized object from the provider                        
                    </return>
                </javadoc>
            </interface>
        </class>
    </source>