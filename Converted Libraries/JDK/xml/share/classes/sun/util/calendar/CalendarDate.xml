<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.util.calendar">
        <import package="java.lang.Cloneable"/>
        <import package="java.util.Locale"/>
        <import package="java.util.TimeZone"/>
        <class name="CalendarDate" line="5">
            <implements interface="Cloneable"/>
            <javadoc line="5">
                The &lt;code&gt;CalendarDate&lt;/code&gt; class represents a specific instant
                  in time by calendar date and time fields that are multiple cycles
                  in different time unites. The semantics of each calendar field is
                  given by a concrete calendar system rather than this
                  &lt;code&gt;CalendarDate&lt;/code&gt; class that holds calendar field values
                  without interpreting them. Therefore, this class can be used to
                  represent an amount of time, such as 2 years and 3 months.
                  &lt;p&gt;A &lt;code&gt;CalendarDate&lt;/code&gt; instance can be created by calling
                  the &lt;code&gt;newCalendarDate&lt;/code&gt; or &lt;code&gt;getCalendarDate&lt;/code&gt;
                  methods in &lt;code&gt;CalendarSystem&lt;/code&gt;. A
                  &lt;code&gt;CalendarSystem&lt;/code&gt; instance is obtained by calling one of
                  the factory methods in &lt;code&gt;CalendarSystem&lt;/code&gt;. Manipulations
                  of calendar dates must be handled by the calendar system by which
                  &lt;code&gt;CalendarDate&lt;/code&gt; instances have been created.
                  &lt;p&gt;Some calendar fields can be modified through method calls. Any
                  modification of a calendar field brings the state of a
                  &lt;code&gt;CalendarDate&lt;/code&gt; to &lt;I&gt;not normalized&lt;/I&gt;. The
                  normalization must be performed to make all the calendar fields
                  consistent with a calendar system.
                  &lt;p&gt;The &lt;code&gt;protected&lt;/code&gt; methods are intended to be used for
                  implementing a concrete calendar system, not for general use as an
                  API.                
                <see>
                    CalendarSystem                    
                </see>
                <author>
                    Masayoshi Okutsu                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="FIELD_UNDEFINED" type="int" line="33"/>
            <declaration name="TIME_UNDEFINED" type="long" line="34"/>
            <declaration name="era" type="Era" line="35"/>
            <declaration name="year" type="int" line="36"/>
            <declaration name="month" type="int" line="37"/>
            <declaration name="dayOfMonth" type="int" line="38"/>
            <declaration name="dayOfWeek" type="int" line="39"/>
            <declaration name="leapYear" type="boolean" line="40"/>
            <declaration name="hours" type="int" line="41"/>
            <declaration name="minutes" type="int" line="42"/>
            <declaration name="seconds" type="int" line="43"/>
            <declaration name="millis" type="int" line="44"/>
            <declaration name="fraction" type="long" line="45"/>
            <declaration name="normalized" type="boolean" line="46"/>
            <declaration name="zoneinfo" type="TimeZone" line="47"/>
            <declaration name="zoneOffset" type="int" line="48"/>
            <declaration name="daylightSaving" type="int" line="49"/>
            <declaration name="forceStandardTime" type="boolean" line="50"/>
            <declaration name="locale" type="Locale" line="51"/>
            <method name="CalendarDate" type="constructor" line="52"/>
            <method name="CalendarDate" type="constructor" line="55">
                <params>
                    <param name="zone" type="TimeZone"/>
                </params>
            </method>
            <method name="getEra" type="Era" line="58"/>
            <javadoc line="61">
                Sets the era of the date to the specified era. The default
                  implementation of this method accepts any Era value, including
                  &lt;code&gt;null&lt;/code&gt;.                
                <exception>
                    NullPointerException if the calendar system for this
                      <code>CalendarDate</code> requires eras and the specified era
                      is null.                    
                </exception>
                <exception>
                    IllegalArgumentException if the specified
                      <code>era</code> is unknown to the calendar
                      system for this <code>CalendarDate</code>.                    
                </exception>
            </javadoc>
            <method name="setEra" type="CalendarDate" line="72">
                <params>
                    <param name="era" type="Era"/>
                </params>
                <scope line="73"/>
            </method>
            <method name="getYear" type="int" line="80"/>
            <method name="setYear" type="CalendarDate" line="83">
                <params>
                    <param name="year" type="int"/>
                </params>
                <scope line="84"/>
            </method>
            <method name="addYear" type="CalendarDate" line="90">
                <params>
                    <param name="n" type="int"/>
                </params>
                <scope line="91"/>
            </method>
            <javadoc line="97">
                Returns whether the year represented by this
                  &lt;code&gt;CalendarDate&lt;/code&gt; is a leap year. If leap years are
                  not applicable to the calendar system, this method always
                  returns &lt;code&gt;false&lt;/code&gt;.
                  &lt;p&gt;If this &lt;code&gt;CalendarDate&lt;/code&gt; hasn&apos;t been normalized,
                  &lt;code&gt;false&lt;/code&gt; is returned. The normalization must be
                  performed to retrieve the correct leap year information.                
                <return>
                    <code>true</code> if this <code>CalendarDate</code> is
                      normalized and the year of this <code>CalendarDate</code> is a
                      leap year, or <code>false</code> otherwise.                    
                </return>
                <see>
                    BaseCalendar#isGregorianLeapYear                    
                </see>
            </javadoc>
            <method name="isLeapYear" type="boolean" line="110"/>
            <method name="setLeapYear" type="void" line="113">
                <params>
                    <param name="leapYear" type="boolean"/>
                </params>
            </method>
            <method name="getMonth" type="int" line="116"/>
            <method name="setMonth" type="CalendarDate" line="119">
                <params>
                    <param name="month" type="int"/>
                </params>
                <scope line="120"/>
            </method>
            <method name="addMonth" type="CalendarDate" line="126">
                <params>
                    <param name="n" type="int"/>
                </params>
                <scope line="127"/>
            </method>
            <method name="getDayOfMonth" type="int" line="133"/>
            <method name="setDayOfMonth" type="CalendarDate" line="136">
                <params>
                    <param name="date" type="int"/>
                </params>
                <scope line="137"/>
            </method>
            <method name="addDayOfMonth" type="CalendarDate" line="143">
                <params>
                    <param name="n" type="int"/>
                </params>
                <scope line="144"/>
            </method>
            <javadoc line="150">
                Returns the day of week value. If this CalendarDate is not
                  normalized, {@link #FIELD_UNDEFINED} is returned.                
                <return>
                    day of week or {@link #FIELD_UNDEFINED}                    
                </return>
            </javadoc>
            <method name="getDayOfWeek" type="int" line="155">
                <scope line="156"/>
            </method>
            <method name="getHours" type="int" line="161"/>
            <method name="setHours" type="CalendarDate" line="164">
                <params>
                    <param name="hours" type="int"/>
                </params>
                <scope line="165"/>
            </method>
            <method name="addHours" type="CalendarDate" line="171">
                <params>
                    <param name="n" type="int"/>
                </params>
                <scope line="172"/>
            </method>
            <method name="getMinutes" type="int" line="178"/>
            <method name="setMinutes" type="CalendarDate" line="181">
                <params>
                    <param name="minutes" type="int"/>
                </params>
                <scope line="182"/>
            </method>
            <method name="addMinutes" type="CalendarDate" line="188">
                <params>
                    <param name="n" type="int"/>
                </params>
                <scope line="189"/>
            </method>
            <method name="getSeconds" type="int" line="195"/>
            <method name="setSeconds" type="CalendarDate" line="198">
                <params>
                    <param name="seconds" type="int"/>
                </params>
                <scope line="199"/>
            </method>
            <method name="addSeconds" type="CalendarDate" line="205">
                <params>
                    <param name="n" type="int"/>
                </params>
                <scope line="206"/>
            </method>
            <method name="getMillis" type="int" line="212"/>
            <method name="setMillis" type="CalendarDate" line="215">
                <params>
                    <param name="millis" type="int"/>
                </params>
                <scope line="216"/>
            </method>
            <method name="addMillis" type="CalendarDate" line="222">
                <params>
                    <param name="n" type="int"/>
                </params>
                <scope line="223"/>
            </method>
            <method name="getTimeOfDay" type="long" line="229">
                <scope line="230"/>
            </method>
            <method name="setDate" type="CalendarDate" line="235">
                <params>
                    <param name="year" type="int"/>
                    <param name="month" type="int"/>
                    <param name="dayOfMonth" type="int"/>
                </params>
            </method>
            <method name="addDate" type="CalendarDate" line="241">
                <params>
                    <param name="year" type="int"/>
                    <param name="month" type="int"/>
                    <param name="dayOfMonth" type="int"/>
                </params>
            </method>
            <method name="setTimeOfDay" type="CalendarDate" line="247">
                <params>
                    <param name="hours" type="int"/>
                    <param name="minutes" type="int"/>
                    <param name="seconds" type="int"/>
                    <param name="millis" type="int"/>
                </params>
            </method>
            <method name="addTimeOfDay" type="CalendarDate" line="254">
                <params>
                    <param name="hours" type="int"/>
                    <param name="minutes" type="int"/>
                    <param name="seconds" type="int"/>
                    <param name="millis" type="int"/>
                </params>
            </method>
            <method name="setTimeOfDay" type="void" line="261">
                <params>
                    <param name="fraction" type="long"/>
                </params>
            </method>
            <method name="isNormalized" type="boolean" line="264"/>
            <method name="isStandardTime" type="boolean" line="267"/>
            <method name="setStandardTime" type="void" line="270">
                <params>
                    <param name="standardTime" type="boolean"/>
                </params>
            </method>
            <method name="isDaylightTime" type="boolean" line="273">
                <scope line="274"/>
            </method>
            <method name="setLocale" type="void" line="279">
                <params>
                    <param name="loc" type="Locale"/>
                </params>
            </method>
            <method name="getZone" type="TimeZone" line="282"/>
            <method name="setZone" type="CalendarDate" line="285">
                <params>
                    <param name="zoneinfo" type="TimeZone"/>
                </params>
            </method>
            <javadoc line="289">
                Returns whether the specified date is the same date of this
                  &lt;code&gt;CalendarDate&lt;/code&gt;. The time of the day fields are
                  ignored for the comparison.                
            </javadoc>
            <method name="isSameDate" type="boolean" line="294">
                <params>
                    <param name="date" type="CalendarDate"/>
                </params>
            </method>
            <method name="equals" type="boolean" line="297">
                <params>
                    <param name="obj" type="Object"/>
                </params>
                <scope line="298"/>
                <declaration name="that" type="CalendarDate" line="301"/>
                <scope line="302"/>
                <declaration name="hasZone" type="boolean" line="305"/>
                <declaration name="thatHasZone" type="boolean" line="306"/>
                <scope line="307"/>
                <scope line="310"/>
            </method>
            <method name="hashCode" type="int" line="315">
                <declaration name="hash" type="long" line="316"/>
                <declaration name="normalized" type="int" line="319"/>
                <declaration name="era" type="int" line="320"/>
                <declaration name="e" type="Era" line="321"/>
                <scope line="322"/>
                <declaration name="zone" type="int" line="325"/>
            </method>
            <javadoc line="328">
                Returns a copy of this &lt;code&gt;CalendarDate&lt;/code&gt;. The
                  &lt;code&gt;TimeZone&lt;/code&gt; object, if any, is not cloned.                
                <return>
                    a copy of this <code>CalendarDate</code>                    
                </return>
            </javadoc>
            <method name="clone" type="Object" line="333">
                <scope line="334"/>
                <scope line="337"/>
            </method>
            <javadoc line="341">
                Converts calendar date values to a &lt;code&gt;String&lt;/code&gt; in the
                  following format.
                  &lt;pre&gt;
                  yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSz
                  &lt;/pre&gt;                
                <see>
                    java.text.SimpleDateFormat                    
                </see>
            </javadoc>
            <method name="toString" type="String" line="349">
                <declaration name="sb" type="StringBuilder" line="350"/>
                <scope line="358"/>
                <scope line="361">
                    <declaration name="offset" type="int" line="362"/>
                    <declaration name="sign" type="char" line="363"/>
                    <scope line="364"/>
                    <scope line="368"/>
                </scope>
                <scope line="377"/>
            </method>
            <method name="setDayOfWeek" type="void" line="382">
                <params>
                    <param name="dayOfWeek" type="int"/>
                </params>
            </method>
            <method name="setNormalized" type="void" line="385">
                <params>
                    <param name="normalized" type="boolean"/>
                </params>
            </method>
            <method name="getZoneOffset" type="int" line="388"/>
            <method name="setZoneOffset" type="void" line="391">
                <params>
                    <param name="offset" type="int"/>
                </params>
            </method>
            <method name="getDaylightSaving" type="int" line="394"/>
            <method name="setDaylightSaving" type="void" line="397">
                <params>
                    <param name="daylightSaving" type="int"/>
                </params>
            </method>
        </class>
    </source>