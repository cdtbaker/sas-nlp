<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.util.calendar">
        <import package="java.util.HashMap"/>
        <import package="java.util.Map"/>
        <class name="CalendarUtils" line="31">
            <javadoc line="33">
                Returns whether the specified year is a leap year in the Gregorian
                  calendar system.                
                <param>
                    gregorianYear a Gregorian calendar year                    
                </param>
                <return>
                    true if the given year is a leap year in the Gregorian
                      calendar system.                    
                </return>
                <see>
                    CalendarDate#isLeapYear                    
                </see>
            </javadoc>
            <method name="isGregorianLeapYear" type="boolean" line="42">
                <params>
                    <param name="gregorianYear" type="int"/>
                </params>
            </method>
            <javadoc line="47">
                Returns whether the specified year is a leap year in the Julian
                  calendar system. The year number must be a normalized one
                  (e.g., 45 B.C.E. is 1-45).                
                <param>
                    normalizedJulianYear a normalized Julian calendar year                    
                </param>
                <return>
                    true if the given year is a leap year in the Julian
                      calendar system.                    
                </return>
                <see>
                    CalendarDate#isLeapYear                    
                </see>
            </javadoc>
            <method name="isJulianLeapYear" type="boolean" line="57">
                <params>
                    <param name="normalizedJulianYear" type="int"/>
                </params>
            </method>
            <javadoc line="61">
                Divides two integers and returns the floor of the quotient.
                  For example, &lt;code&gt;floorDivide(-1, 4)&lt;/code&gt; returns -1 while
                  -1/4 is 0.                
                <param>
                    n the numerator                    
                </param>
                <param>
                    d a divisor that must be greater than 0                    
                </param>
                <return>
                    the floor of the quotient                    
                </return>
            </javadoc>
            <method name="floorDivide" type="long" line="70">
                <params>
                    <param name="n" type="long"/>
                    <param name="d" type="long"/>
                </params>
            </method>
            <javadoc line="75">
                Divides two integers and returns the floor of the quotient.
                  For example, &lt;code&gt;floorDivide(-1, 4)&lt;/code&gt; returns -1 while
                  -1/4 is 0.                
                <param>
                    n the numerator                    
                </param>
                <param>
                    d a divisor that must be greater than 0                    
                </param>
                <return>
                    the floor of the quotient                    
                </return>
            </javadoc>
            <method name="floorDivide" type="int" line="84">
                <params>
                    <param name="n" type="int"/>
                    <param name="d" type="int"/>
                </params>
            </method>
            <javadoc line="89">
                Divides two integers and returns the floor of the quotient and
                  the modulus remainder.  For example,
                  &lt;code&gt;floorDivide(-1,4)&lt;/code&gt; returns &lt;code&gt;-1&lt;/code&gt; with
                  &lt;code&gt;3&lt;/code&gt; as its remainder, while &lt;code&gt;-1/4&lt;/code&gt; is
                  &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;-1%4&lt;/code&gt; is &lt;code&gt;-1&lt;/code&gt;.                
                <param>
                    n the numerator                    
                </param>
                <param>
                    d a divisor which must be > 0                    
                </param>
                <param>
                    r an array of at least one element in which the value
                      <code>mod(n, d)</code> is returned.                    
                </param>
                <return>
                    the floor of the quotient.                    
                </return>
            </javadoc>
            <method name="floorDivide" type="int" line="102">
                <params>
                    <param name="n" type="int"/>
                    <param name="d" type="int"/>
                    <param name="r" type="int[]"/>
                </params>
                <scope line="103"/>
                <declaration name="q" type="int" line="107"/>
            </method>
            <javadoc line="112">
                Divides two integers and returns the floor of the quotient and
                  the modulus remainder.  For example,
                  &lt;code&gt;floorDivide(-1,4)&lt;/code&gt; returns &lt;code&gt;-1&lt;/code&gt; with
                  &lt;code&gt;3&lt;/code&gt; as its remainder, while &lt;code&gt;-1/4&lt;/code&gt; is
                  &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;-1%4&lt;/code&gt; is &lt;code&gt;-1&lt;/code&gt;.                
                <param>
                    n the numerator                    
                </param>
                <param>
                    d a divisor which must be > 0                    
                </param>
                <param>
                    r an array of at least one element in which the value
                      <code>mod(n, d)</code> is returned.                    
                </param>
                <return>
                    the floor of the quotient.                    
                </return>
            </javadoc>
            <method name="floorDivide" type="int" line="125">
                <params>
                    <param name="n" type="long"/>
                    <param name="d" type="int"/>
                    <param name="r" type="int[]"/>
                </params>
                <scope line="126"/>
                <declaration name="q" type="int" line="130"/>
            </method>
            <method name="mod" type="long" line="135">
                <params>
                    <param name="x" type="long"/>
                    <param name="y" type="long"/>
                </params>
            </method>
            <method name="mod" type="int" line="139">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
            </method>
            <method name="amod" type="int" line="143">
                <params>
                    <param name="x" type="int"/>
                    <param name="y" type="int"/>
                </params>
                <declaration name="z" type="int" line="144"/>
            </method>
            <method name="amod" type="long" line="148">
                <params>
                    <param name="x" type="long"/>
                    <param name="y" type="long"/>
                </params>
                <declaration name="z" type="long" line="149"/>
            </method>
            <javadoc line="153">
                Mimics sprintf(buf, &quot;%0d&quot;, decaimal, width).                
            </javadoc>
            <method name="sprintf0d" type="StringBuilder" line="156">
                <params>
                    <param name="sb" type="StringBuilder"/>
                    <param name="value" type="int"/>
                    <param name="width" type="int"/>
                </params>
                <declaration name="d" type="long" line="157"/>
                <scope line="158"/>
                <declaration name="n" type="int" line="163"/>
                <scope line="164"/>
                <scope line="167"/>
            </method>
            <method name="sprintf0d" type="StringBuffer" line="175">
                <params>
                    <param name="sb" type="StringBuffer"/>
                    <param name="value" type="int"/>
                    <param name="width" type="int"/>
                </params>
                <declaration name="d" type="long" line="176"/>
                <scope line="177"/>
                <declaration name="n" type="int" line="182"/>
                <scope line="183"/>
                <scope line="186"/>
            </method>
        </class>
    </source>