<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.util.calendar">
        <import package="java.util.Locale"/>
        <import package="java.util.TimeZone"/>
        <class name="AbstractCalendar" line="4">
            <extends class="CalendarSystem"/>
            <javadoc line="4">
                The &lt;code&gt;AbstractCalendar&lt;/code&gt; class provides a framework for
                  implementing a concrete calendar system.
                  &lt;p&gt;&lt;a name=&quot;fixed_date&quot;&gt;&lt;/a&gt;&lt;B&gt;Fixed Date&lt;/B&gt;&lt;br&gt;
                  For implementing a concrete calendar system, each calendar must
                  have the common date numbering, starting from midnight the onset of
                  Monday, January 1, 1 (Gregorian). It is called a &lt;I&gt;fixed date&lt;/I&gt;
                  in this class. January 1, 1 (Gregorian) is fixed date 1. (See
                  Nachum Dershowitz and Edward M. Reingold, &lt;I&gt;CALENDRICAL
                  CALCULATION The Millennium Edition&lt;/I&gt;, Section 1.2 for details.)                
                <author>
                    Masayoshi Okutsu                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="SECOND_IN_MILLIS" type="int" line="18"/>
            <declaration name="MINUTE_IN_MILLIS" type="int" line="19"/>
            <declaration name="HOUR_IN_MILLIS" type="int" line="20"/>
            <declaration name="DAY_IN_MILLIS" type="int" line="21"/>
            <declaration name="EPOCH_OFFSET" type="int" line="22"/>
            <declaration name="eras" type="Era[]" line="23"/>
            <method name="AbstractCalendar" type="constructor" line="24"/>
            <method name="getEra" type="Era" line="26">
                <params>
                    <param name="eraName" type="String"/>
                </params>
                <scope line="27">
                    <scope line="28">
                        <scope line="29"/>
                    </scope>
                </scope>
            </method>
            <method name="getEras" type="Era[]" line="36">
                <declaration name="e" type="Era[]" line="37"/>
                <scope line="38"/>
            </method>
            <method name="setEra" type="void" line="44">
                <params>
                    <param name="date" type="CalendarDate"/>
                    <param name="eraName" type="String"/>
                </params>
                <scope line="45"/>
                <scope line="48">
                    <declaration name="e" type="Era" line="49"/>
                    <scope line="50"/>
                </scope>
            </method>
            <method name="setEras" type="void" line="57">
                <params>
                    <param name="eras" type="Era[]"/>
                </params>
            </method>
            <method name="getCalendarDate" type="CalendarDate" line="60"/>
            <method name="getCalendarDate" type="CalendarDate" line="63">
                <params>
                    <param name="millis" type="long"/>
                </params>
            </method>
            <method name="getCalendarDate" type="CalendarDate" line="66">
                <params>
                    <param name="millis" type="long"/>
                    <param name="zone" type="TimeZone"/>
                </params>
                <declaration name="date" type="CalendarDate" line="67"/>
            </method>
            <method name="getCalendarDate" type="CalendarDate" line="70">
                <params>
                    <param name="millis" type="long"/>
                    <param name="date" type="CalendarDate"/>
                </params>
                <declaration name="ms" type="int" line="71"/>
                <declaration name="zoneOffset" type="int" line="72"/>
                <declaration name="saving" type="int" line="73"/>
                <declaration name="days" type="long" line="74"/>
                <declaration name="zi" type="TimeZone" line="75"/>
                <scope line="76">
                    <declaration name="offsets" type="int[]" line="77"/>
                    <scope line="78"/>
                    <scope line="81"/>
                </scope>
                <scope line="94"/>
                <scope line="98">
                    <scope line="99"/>
                </scope>
            </method>
            <method name="getTime" type="long" line="111">
                <params>
                    <param name="date" type="CalendarDate"/>
                </params>
                <declaration name="gd" type="long" line="112"/>
                <declaration name="ms" type="long" line="113"/>
                <declaration name="zoneOffset" type="int" line="114"/>
                <declaration name="zi" type="TimeZone" line="115"/>
                <scope line="116">
                    <scope line="117"/>
                    <declaration name="offsets" type="int[]" line="120"/>
                    <scope line="121">
                        <scope line="122"/>
                        <scope line="126"/>
                    </scope>
                    <scope line="130">
                        <scope line="131"/>
                        <scope line="134"/>
                    </scope>
                </scope>
            </method>
            <method name="getTimeOfDay" type="long" line="143">
                <params>
                    <param name="date" type="CalendarDate"/>
                </params>
                <declaration name="fraction" type="long" line="144"/>
                <scope line="145"/>
            </method>
            <method name="getTimeOfDayValue" type="long" line="152">
                <params>
                    <param name="date" type="CalendarDate"/>
                </params>
                <declaration name="fraction" type="long" line="153"/>
            </method>
            <method name="setTimeOfDay" type="CalendarDate" line="162">
                <params>
                    <param name="cdate" type="CalendarDate"/>
                    <param name="fraction" type="int"/>
                </params>
                <scope line="163"/>
                <declaration name="normalizedState" type="boolean" line="166"/>
                <declaration name="time" type="int" line="167"/>
                <declaration name="hours" type="int" line="168"/>
                <declaration name="minutes" type="int" line="170"/>
                <declaration name="seconds" type="int" line="172"/>
                <scope line="179"/>
            </method>
            <javadoc line="184">
                Returns 7 in this default implementation.                
                <return>
                    7                    
                </return>
            </javadoc>
            <method name="getWeekLength" type="int" line="188"/>
            <method name="isLeapYear" type="boolean" line="191"/>
            <method name="getNthDayOfWeek" type="CalendarDate" line="192">
                <params>
                    <param name="nth" type="int"/>
                    <param name="dayOfWeek" type="int"/>
                    <param name="date" type="CalendarDate"/>
                </params>
                <declaration name="ndate" type="CalendarDate" line="193"/>
                <declaration name="fd" type="long" line="195"/>
                <declaration name="nfd" type="long" line="196"/>
                <scope line="197"/>
                <scope line="200"/>
            </method>
            <javadoc line="206">
                Returns a date of the given day of week before the given fixed
                  date.                
                <param>
                    fixedDate the fixed date                    
                </param>
                <param>
                    dayOfWeek the day of week                    
                </param>
                <return>
                    the calculated date                    
                </return>
            </javadoc>
            <method name="getDayOfWeekDateBefore" type="long" line="213">
                <params>
                    <param name="fixedDate" type="long"/>
                    <param name="dayOfWeek" type="int"/>
                </params>
            </method>
            <javadoc line="216">
                Returns a date of the given day of week that is closest to and
                  after the given fixed date.                
                <param>
                    fixedDate the fixed date                    
                </param>
                <param>
                    dayOfWeek the day of week                    
                </param>
                <return>
                    the calculated date                    
                </return>
            </javadoc>
            <method name="getDayOfWeekDateAfter" type="long" line="223">
                <params>
                    <param name="fixedDate" type="long"/>
                    <param name="dayOfWeek" type="int"/>
                </params>
            </method>
            <javadoc line="226">
                Returns a date of the given day of week on or before the given fixed
                  date.                
                <param>
                    fixedDate the fixed date                    
                </param>
                <param>
                    dayOfWeek the day of week                    
                </param>
                <return>
                    the calculated date                    
                </return>
            </javadoc>
            <method name="getDayOfWeekDateOnOrBefore" type="long" line="233">
                <params>
                    <param name="fixedDate" type="long"/>
                    <param name="dayOfWeek" type="int"/>
                </params>
                <declaration name="fd" type="long" line="234"/>
                <scope line="235"/>
            </method>
            <method name="getFixedDate" type="long" line="240"/>
            <javadoc line="240">
                Returns the fixed date calculated with the specified calendar
                  date. If the specified date is not normalized, its date fields
                  are normalized.                
                <param>
                    date a &lt;code&gt;CalendarDate&lt;/code&gt; with which the fixed
                      date is calculated                    
                </param>
                <return>
                    the calculated fixed date                    
                </return>
                <see>
                    AbstractCalendar.html#fixed_date                    
                </see>
            </javadoc>
            <method name="getCalendarDateFromFixedDate" type="void" line="250"/>
            <javadoc line="250">
                Calculates calendar fields from the specified fixed date. This
                  method stores the calculated calendar field values in the specified
                  &lt;code&gt;CalendarDate&lt;/code&gt;.                
                <param>
                    date a &lt;code&gt;CalendarDate&lt;/code&gt; to stored the
                      calculated calendar fields.                    
                </param>
                <param>
                    fixedDate a fixed date to calculate calendar fields                    
                </param>
                <see>
                    AbstractCalendar.html#fixed_date                    
                </see>
            </javadoc>
            <method name="validateTime" type="boolean" line="260">
                <params>
                    <param name="date" type="CalendarDate"/>
                </params>
                <declaration name="t" type="int" line="261"/>
                <scope line="262"/>
                <scope line="266"/>
                <scope line="270"/>
                <scope line="274"/>
            </method>
            <method name="normalizeTime" type="int" line="279">
                <params>
                    <param name="date" type="CalendarDate"/>
                </params>
                <declaration name="fraction" type="long" line="280"/>
                <declaration name="days" type="long" line="281"/>
                <scope line="282"/>
                <scope line="286">
                    <scope line="288"/>
                </scope>
                <scope line="292"/>
            </method>
        </class>
    </source>