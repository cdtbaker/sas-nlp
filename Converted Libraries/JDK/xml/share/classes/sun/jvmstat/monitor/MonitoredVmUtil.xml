<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.jvmstat.monitor">
        <class name="MonitoredVmUtil" line="2">
            <javadoc line="2">
                Utility class proving concenience methods for extracting various
                  information from an MonitoredVm object.                
                <author>
                    Brian Doherty                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <javadoc line="9">
                Private constructor - prevent instantiation.                
            </javadoc>
            <method name="MonitoredVmUtil" type="constructor" line="12"/>
            <javadoc line="14">
                Return the Java Virtual Machine Version.                
                <param>
                    vm the target MonitoredVm                    
                </param>
                <return>
                    String - contains the version of the target JVM or the
                      the string "Unknown" if the version cannot be
                      determined.                    
                </return>
            </javadoc>
            <method name="vmVersion" type="String" line="21">
                <params>
                    <param name="vm" type="MonitoredVm"/>
                </params>
                <declaration name="ver" type="StringMonitor" line="22"/>
            </method>
            <javadoc line="25">
                Return the command line for the target Java application.                
                <param>
                    vm the target MonitoredVm                    
                </param>
                <return>
                    String - contains the command line of the target Java
                      application or the the string "Unknown" if the
                      command line cannot be determined.                    
                </return>
            </javadoc>
            <method name="commandLine" type="String" line="32">
                <params>
                    <param name="vm" type="MonitoredVm"/>
                </params>
                <declaration name="cmd" type="StringMonitor" line="33"/>
            </method>
            <javadoc line="36">
                Return the arguments to the main class for the target Java application.
                  Returns the arguments to the main class. If the arguments can&apos;t be
                  found, the string &quot;Unknown&quot; is returned.                
                <param>
                    vm the target MonitoredVm                    
                </param>
                <return>
                    String - contains the arguments to the main class for the
                      target Java application or the the string "Unknown"
                      if the command line cannot be determined.                    
                </return>
            </javadoc>
            <method name="mainArgs" type="String" line="45">
                <params>
                    <param name="vm" type="MonitoredVm"/>
                </params>
                <declaration name="commandLine" type="String" line="46"/>
                <declaration name="firstSpace" type="int" line="47"/>
                <scope line="48"/>
                <scope line="51"/>
                <scope line="54"/>
            </method>
            <javadoc line="58">
                Return the main class for the target Java application.
                  Returns the main class or the name of the jar file if the application
                  was started with the &lt;em&gt;-jar&lt;/em&gt; option.                
                <param>
                    vm the target MonitoredVm                    
                </param>
                <param>
                    fullPath include the full path to Jar file, where applicable                    
                </param>
                <return>
                    String - contains the main class of the target Java
                      application or the the string "Unknown" if the
                      command line cannot be determined.                    
                </return>
            </javadoc>
            <method name="mainClass" type="String" line="68">
                <params>
                    <param name="vm" type="MonitoredVm"/>
                    <param name="fullPath" type="boolean"/>
                </params>
                <declaration name="commandLine" type="String" line="69"/>
                <declaration name="arg0" type="String" line="70"/>
                <declaration name="firstSpace" type="int" line="71"/>
                <scope line="72"/>
                <scope line="75">
                    <declaration name="lastFileSeparator" type="int" line="76"/>
                    <scope line="77"/>
                    <scope line="81"/>
                    <declaration name="lastPackageSeparator" type="int" line="84"/>
                    <scope line="85"/>
                </scope>
            </method>
            <javadoc line="91">
                Return the JVM arguments for the target Java application.                
                <param>
                    vm the target MonitoredVm                    
                </param>
                <return>
                    String - contains the arguments passed to the JVM for the
                      target Java application or the the string "Unknown"
                      if the command line cannot be determined.                    
                </return>
            </javadoc>
            <method name="jvmArgs" type="String" line="98">
                <params>
                    <param name="vm" type="MonitoredVm"/>
                </params>
                <declaration name="jvmArgs" type="StringMonitor" line="99"/>
            </method>
            <javadoc line="102">
                Return the JVM flags for the target Java application.                
                <param>
                    vm the target MonitoredVm                    
                </param>
                <return>
                    String - contains the flags passed to the JVM for the
                      target Java application or the the string "Unknown"
                      if the command line cannot be determined.                    
                </return>
            </javadoc>
            <method name="jvmFlags" type="String" line="109">
                <params>
                    <param name="vm" type="MonitoredVm"/>
                </params>
                <declaration name="jvmFlags" type="StringMonitor" line="110"/>
            </method>
            <declaration name="IS_ATTACHABLE" type="int" line="113"/>
            <declaration name="IS_KERNEL_VM" type="int" line="114"/>
            <javadoc line="115">
                Returns true if the VM supports attach-on-demand.                
                <param>
                    vm the target MonitoredVm                    
                </param>
            </javadoc>
            <method name="isAttachable" type="boolean" line="119">
                <params>
                    <param name="vm" type="MonitoredVm"/>
                </params>
                <declaration name="jvmCapabilities" type="StringMonitor" line="120"/>
                <scope line="121"/>
                <scope line="124"/>
            </method>
        </class>
    </source>