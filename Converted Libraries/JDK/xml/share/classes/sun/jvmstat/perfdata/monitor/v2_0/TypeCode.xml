<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.jvmstat.perfdata.monitor.v2_0">
        <class name="TypeCode" line="28">
            <javadoc line="28">
                A typesafe enumeration for describing standard Java type codes.                
                <author>
                    Brian Doherty                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="name" type="String" line="36"/>
            <declaration name="value" type="char" line="37"/>
            <declaration name="BOOLEAN" type="TypeCode" line="39"/>
            <declaration name="CHAR" type="TypeCode" line="40"/>
            <declaration name="FLOAT" type="TypeCode" line="41"/>
            <declaration name="DOUBLE" type="TypeCode" line="42"/>
            <declaration name="BYTE" type="TypeCode" line="43"/>
            <declaration name="SHORT" type="TypeCode" line="44"/>
            <declaration name="INT" type="TypeCode" line="45"/>
            <declaration name="LONG" type="TypeCode" line="46"/>
            <declaration name="OBJECT" type="TypeCode" line="47"/>
            <declaration name="ARRAY" type="TypeCode" line="48"/>
            <declaration name="VOID" type="TypeCode" line="49"/>
            <declaration name="basicTypes" type="TypeCode" line="51"/>
            <javadoc line="56">
                Convert enumeration value to a String.                
                <return>
                    String - the string representation for the enumeration.                    
                </return>
            </javadoc>
            <method name="toString" type="String" line="61"/>
            <javadoc line="65">
                Convert enumeration to its character representation.                
                <return>
                    int - the integer representation for the enumeration.                    
                </return>
            </javadoc>
            <method name="toChar" type="int" line="70"/>
            <javadoc line="74">
                Map a character value to its corresponding TypeCode object.                
                <param>
                    c an character representing a Java TypeCode                    
                </param>
                <return>
                    TypeCode - The TypeCode enumeration object for the given
                      character.                    
                </return>
                <throws>
                    IllegalArgumentException Thrown if &lt;code&gt;c&lt;/code&gt; is not
                      a valid Java TypeCode.                    
                </throws>
            </javadoc>
            <method name="toTypeCode" type="TypeCode" line="83">
                <params>
                    <param name="c" type="char"/>
                </params>
                <scope line="84">
                    <scope line="85"/>
                </scope>
            </method>
            <javadoc line="92">
                Map a character value to its corresponding TypeCode object.                
                <param>
                    b a byte representing a Java TypeCode. This value is
                      converted into a char and used to find the corresponding
                      TypeCode.                    
                </param>
                <return>
                    TypeCode - The TypeCode enumeration object for the given byte.                    
                </return>
                <throws>
                    IllegalArgumentException Thrown if &lt;code&gt;v&lt;/code&gt; is not
                      a valid Java TypeCode.                    
                </throws>
            </javadoc>
            <method name="toTypeCode" type="TypeCode" line="102">
                <params>
                    <param name="b" type="byte"/>
                </params>
            </method>
            <method name="TypeCode" type="constructor" line="106">
                <params>
                    <param name="name" type="String"/>
                    <param name="value" type="char"/>
                </params>
            </method>
        </class>
    </source>