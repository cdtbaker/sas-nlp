<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.jvmstat.perfdata.monitor.protocol.rmi">
        <import package="java.util"/>
        <import package="java.util.regex"/>
        <import package="java.io"/>
        <import package="java.rmi.RemoteException"/>
        <import package="sun.jvmstat.monitor"/>
        <import package="sun.jvmstat.monitor.event"/>
        <import package="sun.jvmstat.monitor.remote"/>
        <class name="RemoteVmManager" line="9">
            <javadoc line="9">
                Class for managing the RemoteMonitoredVm instances on a remote system.
                  &lt;p&gt;
                  This class is responsible for the mechanism that detects the active
                  HotSpot Java Virtual Machines on the remote host and possibly for a
                  specific user. The ability to detect all possible HotSpot Java Virtual
                  Machines on the remote host may be limited by the permissions of the
                  principal running the RMI server application on the remote host.                
                <author>
                    Brian Doherty                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="remoteHost" type="RemoteHost" line="21"/>
            <declaration name="user" type="String" line="22"/>
            <javadoc line="23">
                Creates a RemoteVmManager instance for the remote system.
                  &lt;p&gt;
                  Manages RemoteMonitordVm instances for which the principal
                  running the remote server has appropriate permissions.                
                <param>
                    remoteHost the remote proxy object to the RMI server on
                      the remote system.                    
                </param>
            </javadoc>
            <method name="RemoteVmManager" type="constructor" line="31">
                <params>
                    <param name="remoteHost" type="RemoteHost"/>
                </params>
            </method>
            <javadoc line="34">
                Creates a RemoteVmManager instance for the given user.
                  &lt;p&gt;
                  Manages RemoteMonitoredVm instances for all remote Java Virtual
                  machines owned by the specified user on the remote system. The
                  RMI server on the remote system must have the appropriate permissions
                  to access the named users Java Virtual Machines.                
                <param>
                    remoteHost the remote proxy object to the RMI server on
                      the remote system.                    
                </param>
                <param>
                    user the name of the user                    
                </param>
            </javadoc>
            <method name="RemoteVmManager" type="constructor" line="45">
                <params>
                    <param name="remoteHost" type="RemoteHost"/>
                    <param name="user" type="String"/>
                </params>
            </method>
            <javadoc line="49">
                Return the current set of monitorable Java Virtual Machines.
                  &lt;p&gt;
                  The set returned by this method depends on the user name passed
                  to the constructor. If no user name was specified, then this
                  method will return all candidate JVMs on the system. Otherwise,
                  only the JVMs for the given user will be returned. This assumes
                  that the RMI server process has the appropriate permissions to
                  access the target set of JVMs.                
                <return>
                    Set - the Set of monitorable Java Virtual Machines                    
                </return>
            </javadoc>
            <method name="activeVms" type="Set&lt;Integer&gt;" line="60">
                <declaration name="active" type="int[]" line="61"/>
                <scope line="62"/>
                <scope line="65"/>
                <declaration name="activeSet" type="Set&amp;lt;Integer&amp;gt;" line="68"/>
                <scope line="69"/>
            </method>
        </class>
    </source>