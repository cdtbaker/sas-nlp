<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.jvmstat.perfdata.monitor.protocol.file">
        <import package="sun.jvmstat.monitor"/>
        <import package="sun.jvmstat.monitor.event.VmListener"/>
        <import package="sun.jvmstat.perfdata.monitor"/>
        <import package="java.util.List"/>
        <import package="java.lang.reflect"/>
        <import package="java.io"/>
        <class name="FileMonitoredVm" line="8">
            <extends class="AbstractMonitoredVm"/>
            <javadoc line="8">
                Concrete implementation of the AbstractMonitoredVm class for the
                  &lt;em&gt;file:&lt;/em&gt; protcol for the HotSpot PerfData monitoring implementation.
                  &lt;p&gt;
                  This class provides the ability to attach to the instrumentation buffer
                  (saved or live) of a target Java Virtual Machine by providing a
                  &lt;em&gt;file&lt;/em&gt; URI to a file containing the instrmentation buffer data.                
                <author>
                    Brian Doherty                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <javadoc line="19">
                Create a FileMonitoredVm instance.                
                <param>
                    vmid the vm identifier referring to the file                    
                </param>
                <param>
                    interval sampling interval (unused in this protocol).                    
                </param>
            </javadoc>
            <method name="FileMonitoredVm" type="constructor" line="24">
                <params>
                    <param name="vmid" type="VmIdentifier"/>
                    <param name="interval" type="int"/>
                </params>
            </method>
            <javadoc line="28">
                {@inheritDoc}.
                  &lt;p&gt;
                  Note - the &lt;em&gt;file:&lt;/em&gt; protocol currently does not support
                  the registration or notification of listeners.                
            </javadoc>
            <method name="addVmListener" type="void" line="34">
                <params>
                    <param name="l" type="VmListener"/>
                </params>
            </method>
            <javadoc line="36">
                {@inheritDoc}.
                  &lt;p&gt;
                  Note - the &lt;em&gt;file:&lt;/em&gt; protocol currently does not support
                  the registration or notification of listeners.                
            </javadoc>
            <method name="removeVmListener" type="void" line="42">
                <params>
                    <param name="l" type="VmListener"/>
                </params>
            </method>
        </class>
    </source>