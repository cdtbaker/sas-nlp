<?xml version="1.0" encoding="UTF-8"?>
    <source package="sun.jvmstat.perfdata.monitor">
        <import package="java.net"/>
        <import package="java.io"/>
        <import package="java.util"/>
        <import package="java.util.regex"/>
        <class name="AliasFileParser" line="6">
            <javadoc line="6">
                Class for parsing alias files. File format is expected to follow
                  the following syntax:
                  alias name [alias]
                  Java style comments can occur anywhere within the file.                
                <author>
                    Brian Doherty                    
                </author>
                <since>
                    1.5                    
                </since>
            </javadoc>
            <declaration name="ALIAS" type="String" line="15"/>
            <declaration name="DEBUG" type="boolean" line="16"/>
            <declaration name="inputfile" type="URL" line="17"/>
            <declaration name="st" type="StreamTokenizer" line="18"/>
            <declaration name="currentToken" type="Token" line="19"/>
            <method name="AliasFileParser" type="constructor" line="20">
                <params>
                    <param name="inputfile" type="URL"/>
                </params>
            </method>
            <class name="Token" line="23">
                <declaration name="sval" type="String" line="24"/>
                <declaration name="ttype" type="int" line="25"/>
                <method name="Token" type="constructor" line="26">
                    <params>
                        <param name="ttype" type="int"/>
                        <param name="sval" type="String"/>
                    </params>
                </method>
            </class>
            <method name="logln" type="void" line="31">
                <params>
                    <param name="s" type="String"/>
                </params>
                <scope line="32"/>
            </method>
            <javadoc line="36">
                method to get the next token as a Token type                
            </javadoc>
            <method name="nextToken" type="void" line="39"/>
            <javadoc line="44">
                method to match the current Token to a specified token type and
                  value Throws a SyntaxException if token doesn&apos;t match.                
            </javadoc>
            <method name="match" type="void" line="48">
                <params>
                    <param name="ttype" type="int"/>
                    <param name="token" type="String"/>
                </params>
                <scope line="49"/>
                <scope line="53"/>
            </method>
            <method name="match" type="void" line="57">
                <params>
                    <param name="ttype" type="int"/>
                </params>
                <scope line="58"/>
                <scope line="62"/>
            </method>
            <method name="match" type="void" line="66">
                <params>
                    <param name="token" type="String"/>
                </params>
            </method>
            <javadoc line="69">
                method to parse the given input file.                
            </javadoc>
            <method name="parse" type="void" line="72">
                <params>
                    <param name="map" type="Map&lt;String,ArrayList&lt;String&gt;&gt;"/>
                </params>
                <scope line="73"/>
                <declaration name="r" type="BufferedReader" line="76"/>
                <scope line="82">
                    <scope line="83"/>
                    <declaration name="name" type="String" line="88"/>
                    <declaration name="aliases" type="ArrayList&amp;lt;String&amp;gt;" line="90"/>
                    <scope line="91"/>
                </scope>
            </method>
        </class>
    </source>